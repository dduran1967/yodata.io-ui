{"version":3,"sources":["webpack:///solid-client.min.js","webpack:///webpack/bootstrap 4f26ae514ced41a64232","webpack:///./lib/index.js","webpack:///./lib/util/rdf-parser.js","webpack:///./~/rdflib/lib/index.js","webpack:///./~/rdflib/lib/indexed-formula.js","webpack:///./~/rdflib/lib/util.js","webpack:///(webpack)/buildin/module.js","webpack:///./~/rdflib/lib/uri.js","webpack:///./~/rdflib/lib/named-node.js","webpack:///./~/rdflib/lib/class-order.js","webpack:///./~/rdflib/lib/node.js","webpack:///./~/rdflib/lib/collection.js","webpack:///./~/rdflib/lib/blank-node.js","webpack:///./~/rdflib/lib/literal.js","webpack:///./~/rdflib/lib/xsd.js","webpack:///./~/rdflib/lib/log.js","webpack:///./~/xmldom/dom-parser.js","webpack:///./~/xmldom/sax.js","webpack:///./~/xmldom/dom.js","webpack:///external \"XMLHttpRequest\"","webpack:///./~/rdflib/lib/formula.js","webpack:///./~/rdflib/lib/serialize.js","webpack:///./~/rdflib/lib/convert.js","webpack:///./~/async/lib/async.js","webpack:///./~/process/browser.js","webpack:///./~/timers-browserify/main.js","webpack:///./~/setimmediate/setImmediate.js","webpack:///./~/jsonld/js/jsonld.js","webpack:///./~/es6-promise/dist/es6-promise.js","webpack:///(webpack)/buildin/amd-define.js","webpack:///(webpack)/buildin/amd-options.js","webpack:///./~/n3/N3.js","webpack:///./~/n3/lib ^\\.\\/N3.*$","webpack:///./~/n3/lib/N3Lexer.js","webpack:///./~/n3/lib/N3Parser.js","webpack:///./~/n3/lib/N3Store.js","webpack:///./~/n3/lib/N3Util.js","webpack:///./~/n3/lib/N3StreamParser.js","webpack:///./~/stream-browserify/index.js","webpack:///./~/events/events.js","webpack:///./~/inherits/inherits_browser.js","webpack:///./~/stream-browserify/~/readable-stream/readable.js","webpack:///./~/stream-browserify/~/readable-stream/lib/_stream_readable.js","webpack:///./~/process-nextick-args/index.js","webpack:///./~/stream-browserify/~/isarray/index.js","webpack:///./~/buffer/index.js","webpack:///./~/base64-js/index.js","webpack:///./~/ieee754/index.js","webpack:///./~/buffer-shims/index.js","webpack:///./~/core-util-is/lib/util.js","webpack:///./~/stream-browserify/~/readable-stream/lib/internal/streams/BufferList.js","webpack:///./~/stream-browserify/~/readable-stream/lib/_stream_duplex.js","webpack:///./~/stream-browserify/~/readable-stream/lib/_stream_writable.js","webpack:///./~/util-deprecate/browser.js","webpack:///./~/string_decoder/index.js","webpack:///./~/stream-browserify/~/readable-stream/lib/_stream_transform.js","webpack:///./~/stream-browserify/~/readable-stream/lib/_stream_passthrough.js","webpack:///./~/stream-browserify/~/readable-stream/writable.js","webpack:///./~/stream-browserify/~/readable-stream/duplex.js","webpack:///./~/stream-browserify/~/readable-stream/transform.js","webpack:///./~/stream-browserify/~/readable-stream/passthrough.js","webpack:///./~/util/util.js","webpack:///./~/util/support/isBufferBrowser.js","webpack:///./~/n3/lib/N3StreamWriter.js","webpack:///./~/n3/lib/N3Writer.js","webpack:///./~/rdflib/lib/serializer.js","webpack:///./~/rdflib/lib/statement.js","webpack:///./~/rdflib/lib/variable.js","webpack:///./~/rdflib/lib/namespace.js","webpack:///./~/rdflib/lib/query.js","webpack:///./~/rdflib/lib/data-factory.js","webpack:///./~/rdflib/lib/default-graph.js","webpack:///./~/rdflib/lib/fetcher.js","webpack:///./~/rdflib/lib/n3parser.js","webpack:///./~/rdflib/lib/parse.js","webpack:///./~/rdflib/lib/rdfaparser.js","webpack:///./~/rdflib/lib/rdfxmlparser.js","webpack:///./~/rdflib/lib/patch-parser.js","webpack:///./~/rdflib/lib/empty.js","webpack:///./~/rdflib/lib/jsonparser.js","webpack:///./~/rdflib/lib/query-to-sparql.js","webpack:///./~/rdflib/lib/sparql-to-query.js","webpack:///./~/rdflib/lib/update-manager.js","webpack:///./~/rdflib/lib/updates-via.js","webpack:///./~/solid-auth-oidc/lib/index.js","webpack:///./~/oidc-rp/lib/index.js","webpack:///./~/oidc-rp/lib/RelyingParty.js","webpack:///./~/assert/assert.js","webpack:///external \"fetch\"","webpack:///./~/json-document/lib/index.js","webpack:///./~/json-document/lib/Formats.js","webpack:///./~/json-document/lib/Initializer.js","webpack:///./~/json-document/lib/JSONDocument.js","webpack:///./~/json-document/lib/JSONPatch.js","webpack:///./~/json-document/lib/JSONPointer.js","webpack:///./~/json-document/lib/JSONMapping.js","webpack:///./~/json-document/lib/JSONSchema.js","webpack:///./~/json-document/lib/Validator.js","webpack:///./~/jose/lib/index.js","webpack:///./~/jose/lib/jose/JWA.js","webpack:///./~/jose/~/base64url/index.js","webpack:///./~/jose/lib/algorithms/index.js","webpack:///./~/jose/lib/algorithms/HMAC.js","webpack:///external \"crypto\"","webpack:///./~/jose/lib/text-encoder/index.js","webpack:///external \"TextEncoder\"","webpack:///./~/jose/lib/algorithms/RSASSA-PKCS1-v1_5.js","webpack:///./~/jose/lib/algorithms/SupportedAlgorithms.js","webpack:///./~/jose/lib/errors/NotSupportedError.js","webpack:///./~/jose/lib/errors/index.js","webpack:///./~/jose/lib/errors/DataError.js","webpack:///./~/jose/lib/jose/JWK.js","webpack:///./~/jose/lib/schemas/JWKSchema.js","webpack:///./~/jose/lib/formats/index.js","webpack:///./~/jose/lib/jose/JWKSet.js","webpack:///./~/jose/lib/schemas/JWKSetSchema.js","webpack:///./~/jose/lib/jose/JWT.js","webpack:///./~/jose/lib/schemas/JWTSchema.js","webpack:///./~/jose/lib/schemas/Base64URLSchema.js","webpack:///./~/jose/lib/schemas/JWTClaimsSetSchema.js","webpack:///./~/jose/lib/schemas/JOSEHeaderSchema.js","webpack:///./~/jose/lib/jose/JWS.js","webpack:///./~/oidc-rp/lib/AuthenticationRequest.js","webpack:///./~/base64url/index.js","webpack:///./~/base64url/dist/base64url.js","webpack:///./~/base64url/dist/pad-string.js","webpack:///./~/oidc-rp/lib/FormUrlEncoded.js","webpack:///external \"URL\"","webpack:///./~/oidc-rp/lib/AuthenticationResponse.js","webpack:///./~/oidc-rp/lib/IDToken.js","webpack:///./~/oidc-rp/lib/IDTokenSchema.js","webpack:///./~/oidc-rp/lib/RelyingPartySchema.js","webpack:///./~/solid-web-client/lib/client.js","webpack:///./~/solid-web-client/config-default.js","webpack:///./~/solid-web-client/lib/util/web-util.js","webpack:///./~/solid-web-client/lib/models/response.js","webpack:///./~/solid-web-client/lib/util/graph-util.js","webpack:///./~/solid-web-client/lib/models/container.js","webpack:///./~/solid-web-client/~/solid-namespace/index.js","webpack:///./~/rdf-ns/index.js","webpack:///./~/solid-web-client/lib/models/resource.js","webpack:///./~/solid-web-client/lib/util/xhr.js","webpack:///./~/standard-http-error/index.js","webpack:///./~/standard-error/index.js","webpack:///./~/standard-http-error/codes.json","webpack:///./~/solid-auth-tls/index.js","webpack:///./~/solid-auth-tls/config-default.js","webpack:///./lib/identity.js","webpack:///./lib/solid/profile.js","webpack:///./lib/app-registry.js","webpack:///./lib/solid/app-registration.js","webpack:///./~/shorthash/index.js","webpack:///./~/shorthash/shorthash.js","webpack:///./~/solid-namespace/index.js","webpack:///./lib/registry.js","webpack:///./lib/util/graph-util.js","webpack:///./lib/util/web-util.js","webpack:///./lib/type-registry.js","webpack:///./lib/solid/index-registration.js","webpack:///./~/solid-permissions/lib/index.js","webpack:///./~/solid-permissions/lib/permission-set.js","webpack:///./~/solid-permissions/lib/authorization.js","webpack:///./~/solid-permissions/lib/modes.js","webpack:///./config.js","webpack:///./lib/meta.js","webpack:///./package.json","webpack:///./lib/status.js"],"names":["SolidClient","modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","i","Object","prototype","hasOwnProperty","_m","args","slice","fn","a","b","apply","this","concat","rdf","ClientAuthOIDC","auth","webClient","ClientAuthTLS","tls","identity","ns","acl","Solid","AppRegistration","appRegistry","config","currentUser","bind","login","logout","meta","rdflib","signup","status","typeRegistry","vocab","web","clearPermissions","uri","discoverWebID","url","getPermissions","getProfile","profileUrl","options","$rdf","tabulator","_interopRequireDefault","obj","__esModule","default","_indexedFormula","_indexedFormula2","BlankNode","Collection","convert","DataFactory","Empty","Fetcher","Formula","IndexedFormula","jsonParser","Literal","log","N3Parser","NamedNode","Namespace","Node","parse","Query","queryToSPARQL","RDFaProcessor","RDFParser","serialize","Serializer","SPARQLToQuery","sparqlUpdateParser","Statement","term","fromValue","UpdateManager","UpdatesSocket","UpdatesVia","Util","Variable","NextId","nextId","fromNT","fetcher","graph","lit","st","sym","namedNode","variable","blankNode","defaultGraph","literal","quad","triple","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","handle_FP","formula","subj","pred","o1","any","undefined","equate","handle_IFP","s1","handleRDFType","why","typeCallback","x","classActions","hashString","done","length","defineProperty","_createClass","defineProperties","target","props","descriptor","key","protoProps","staticProps","ArrayIndexOf","RDFArrayRemove","owl_ns","_Formula","features","_this","getPrototypeOf","propertyActions","redirections","aliases","HTTPRedirects","subjectIndex","predicateIndex","objectIndex","whyIndex","index","namespaces","initPropertyActions","bindings","statementsCopy","statements","map","ea","substitute","y","add","patch","patchCallback","ds","targetKB","binding","doPatch","onDonePatch","bad","ds2","sts","statementsMatching","subject","predicate","object","push","join","remove","where","query","pat","bindingsFound","_existentialVariables","addFn","newPropertyAction","proj","arguments","Array","actions","appNode","predicateCallback","predHash","canon","holds","hash","ix","h","_this2","forEach","s","o","g","anyStatementMatching","checkStatementList","from","names","origin","j","arrayContains","sameTerm","Error","template","flags","statList","termType","copy","u1","u2","d","compareTerm","replaceWith","bnode","declareExistential","action","toBeFixed","_universalVariables","name","doc","mentionsURI","myQuery","callback","onDone","indexedFormulaQuery","removeStatement","limit","removeStatements","big","small","oldhash","newhash","moveIndex","oldlist","newlist","nowKnownAs","x1","y1","prefix","nsuri","justOne","list","pattern","wild","given","best_i","best","best_p","possibles","check","results","parts","cterm","terms","res","get","ajarHandleNewTerm","kb","requestedBy","sf","fixuri","docuri","docpart","indexOf","stringStartsWith","getState","warn","requestURI","arrayIndexOf","arr","item","callbackify","callbacks","addHook","hook","addCallback","func","removeCallback","funcName","splice","insertCallback","unshift","fireCallbacks","newCallbacks","replaceCallbacks","len","domParser","isExtension","Components","classes","getService","interfaces","nsIDOMParser","window","DOMParser","ActiveXObject","domToString","node","selfClosing","split","n","skipAttributes","dumpNode","out","noEsc","nodeType","hasAttribute","matches","classWithChildText","class","querySelector","element","textContent","skipNodeWithClass","ename","nodeName","toLowerCase","attrList","attributes","atn","test","replaceClassItemWith","source","re","RegExp","replace","trim","skipClassWithValue","sortAttributes","sort","localeCompare","childNodes","pop","nodeValue","nl","console","dtstamp","now","Date","year","getYear","month","getMonth","day","getDate","hour","getUTCHours","minute","getUTCMinutes","second","getSeconds","getHTTPHeaders","xhr","last","lines","getAllResponseHeaders","headers","pair","heavyCompare","nonBlank","signature","lis","heavyCompareSPO","output","k","document","createElement","body","appendChild","parseXML","str","dparser","dom","parseFromString","contentType","rdfArrayRemove","pref","stringTemplate","base","subs","baseA","result","stackString","e","stack","toString","toprint","line","charAt","chunks","XMLHttpRequest","createInstance","QueryInterface","nsIXMLHttpRequest","AJAR_handleNewTerm","DOMParserFactory","string_startswith","string","XMLHTTPFactory","mediaTypeClass","mediaType","webpackPolyfill","deprecate","paths","children","hostpart","u","exec","baseColon","baseScheme","baseSingle","colon","lastSlash","path","baseHash","alert","lastIndexOf","match","protocol","refTo","l","len1","q","ref","ref1","commonHost","ClassOrder","_Node","iri","set","isNode","classOrder","isVar","other","toCanonical","equals","toNT","isArray","initial","elements","closed","shift","elementsCopy","NTAnonymousNodePrefix","bnodeNew","copyTo","isBlank","_typeof","Symbol","iterator","XSD","language","datatype","lang","langString","strValue","boolean","d2","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCSeconds","dateTime","Math","abs","Number","MAX_SAFE_INTEGER","isInteger","integer","decimal","double","fromDate","fromBoolean","fromNumber","debug","info","error","success","msg","locator","buildErrorHandler","errorImpl","domBuilder","build","isCallback","errorHandler","_locator","DOMHandler","Function","cdata","position","lineNumber","columnNumber","systemId","_toString","chars","start","substr","java","String","appendElement","hander","currentElement","mimeType","sax","XMLReader","defaultNSMap","xmlns","entityMap","lt","gt","amp","quot","apos","setDocumentLocator","nbsp","xml","startDocument","DOMImplementation","createDocument","documentURI","startElement","namespaceURI","localName","qName","attrs","el","createElementNS","getURI","getValue","getQName","attr","createAttributeNS","getLocator","setAttributeNode","endElement","current","tagName","parentNode","startPrefixMapping","endPrefixMapping","processingInstruction","data","ins","createProcessingInstruction","ignorableWhitespace","ch","characters","charNode","createCDATASection","createTextNode","skippedEntity","endDocument","normalize","comment","comm","createComment","startCDATA","endCDATA","startDTD","publicId","impl","implementation","createDocumentType","dt","warning","fatalError","XMLSerializer","defaultNSMapCopy","fixedFromCharCode","code","surrogate1","surrogate2","fromCharCode","entityReplacer","parseInt","appendText","end","xt","substring","lineEnd","linePattern","lineStart","parseStack","currentNSMap","closeMap","tagStart","text","localNSMap","endMatch","endIgnoreCaseMach","parseInstruction","parseDCC","ElementAttributes","parseElementStartPart","fixSelfClosed","locator2","copyLocator","offset","parseHtmlSpecialContent","max","f","t","attrName","S_TAG","S_ATTR","S_EQ","S_ATTR_SPACE","S_ATTR_END","S_ATTR_NOQUOT_VALUE","setTagName","S_TAG_SPACE","S_TAG_CLOSE","nsp","nsPrefix","_copy","elStartEnd","elEndStart","pos","next","matchs","pubid","sysid","lastMatch","endDTD","_set_proto_","thiz","parent","buf","reg","lastIndex","nameStartChar","nameChar","tagNamePattern","getLocalName","src","dest","_extends","Class","Super","pt","ppt","DOMException","message","ExceptionMessage","captureStackTrace","NodeList","LiveNodeList","refresh","_node","_refresh","_updateLiveList","inc","_inc","ownerDocument","ls","__set__","NamedNodeMap","_findNodeIndex","_addNamedNode","newAttr","oldAttr","ownerElement","_onRemoveAttribute","_onAddAttribute","_removeNamedNode","NOT_FOUND_ERR","_features","feature","_xmlEncoder","charCodeAt","_visitNode","firstChild","nextSibling","Document","_nsMap","_onUpdateChild","newChild","cs","child","_removeChild","previous","previousSibling","lastChild","_insertBefore","nextChild","cp","removeChild","DOCUMENT_FRAGMENT_NODE","newFirst","newLast","pre","_appendSingleChild","Element","Attr","CharacterData","Text","Comment","CDATASection","DocumentType","Notation","Entity","EntityReference","DocumentFragment","ProcessingInstruction","nodeSerializeToString","isHtml","nodeFilter","refNode","documentElement","lookupPrefix","visibleNamespaces","namespace","serializeToString","needNamespaceDefine","isHTML","ELEMENT_NODE","htmlns","DOCUMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","COMMENT_NODE","DOCUMENT_TYPE_NODE","sub","internalSubset","PROCESSING_INSTRUCTION_NODE","ENTITY_REFERENCE_NODE","importNode","deep","node2","cloneNode","v","attrs2","_ownerElement","getTextContent","NodeType","ENTITY_NODE","NOTATION_NODE","ExceptionCode","HIERARCHY_REQUEST_ERR","INDEX_SIZE_ERR","DOMSTRING_SIZE_ERR","WRONG_DOCUMENT_ERR","INVALID_CHARACTER_ERR","NO_DATA_ALLOWED_ERR","NO_MODIFICATION_ALLOWED_ERR","INUSE_ATTRIBUTE_ERR","NOT_SUPPORTED_ERR","INVALID_STATE_ERR","SYNTAX_ERR","INVALID_MODIFICATION_ERR","NAMESPACE_ERR","INVALID_ACCESS_ERR","getNamedItem","setNamedItem","setNamedItemNS","getNamedItemNS","removeNamedItem","removeNamedItemNS","hasFeature","version","versions","qualifiedName","doctype","root","insertBefore","refChild","replaceChild","oldChild","hasChildNodes","appendData","isSupported","hasAttributes","lookupNamespaceURI","isDefaultNamespace","importedNode","getElementById","rtv","getAttribute","createDocumentFragment","createAttribute","specified","createEntityReference","pl","getAttributeNode","setAttribute","removeAttribute","removeAttributeNode","setAttributeNodeNS","removeAttributeNS","old","getAttributeNodeNS","hasAttributeNS","getAttributeNS","setAttributeNS","getElementsByTagName","getElementsByTagNameNS","substringData","count","insertData","replaceData","deleteData","splitText","newText","newNode","$$length","constraints","initBindings","optional","types","bots","bottom","elt","each","len2","len3","thisClass","len4","members","ref2","ref3","ref4","ref5","seeds","transitiveClosure","NTtoURI","findMembersNT","domain","range","rdftype","findTypesNT","excludePredicateURIs","todo","doneArcs","follow","queue","filter","values","collection","val","append","uris","provenance","documentString","sz","suggestNamespaces","setBase","statementsToXML","statementsToN3","inverse","sups","agenda","assign","tops","executeCallback","err","n3String","newSts","setFlags","statementsToNTriples","convertToJson","jsonCallback","jsonString","n3Parser","N3","Parser","n3Writer","Writer","format","asyncLib","waterfall","addTriple","jsonld","fromRDF","json","JSON","stringify","convertToNQuads","nquadCallback","nquadString","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","process","setImmediate","only_once","called","previous_async","async","noConflict","_isArray","_each","_map","_reduce","memo","reduce","_keys","keys","nextTick","setTimeout","completed","eachSeries","iterate","forEachSeries","eachLimit","_eachLimit","forEachLimit","started","running","replenish","doParallel","doParallelLimit","doSeries","_asyncMap","eachfn","mapSeries","mapLimit","_mapLimit","inject","foldl","reduceRight","reversed","reverse","foldr","_filter","filterSeries","select","selectSeries","_reject","reject","rejectSeries","_detect","main_callback","detect","detectSeries","some","every","all","sortBy","criteria","left","right","auto","tasks","remainingTasks","listeners","addListener","removeListener","taskComplete","theCallback","task","taskCallback","safeResults","rkey","requires","ready","listener","retry","times","DEFAULT_TIMES","attempts","wrappedTask","wrappedCallback","wrappedResults","retryAttempt","finalAttempt","seriesCallback","series","wrapIterator","_parallel","parallel","parallelLimit","makeCallback","_concat","r","cb","concatSeries","whilst","doWhilst","until","doUntil","worker","concurrency","_insert","drain","saturated","workers","empty","paused","kill","idle","pause","resume","w","priorityQueue","_compareTasks","priority","_binarySearch","sequence","compare","beg","mid","cargo","payload","working","drained","ts","_console_fn","dir","memoize","hasher","queues","memoized","unmemoized","unmemoize","counter","timesSeries","seq","fns","that","newargs","nextargs","compose","_applyEach","go","applyEach","applyEachSeries","forever","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queueIndex","drainQueue","timeout","run","Item","array","noop","title","browser","env","argv","on","once","off","removeAllListeners","emit","cwd","chdir","umask","Timeout","clearFn","_id","_clearFn","setInterval","clearInterval","close","unref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","clearImmediate","global","tasksByHandle","nextHandle","registerImmediate","handle","runIfPresent","currentlyRunningATask","installNextTickImplementation","canUsePostMessage","postMessage","importScripts","postMessageIsAsynchronous","oldOnMessage","onmessage","installPostMessageImplementation","messagePrefix","random","onGlobalMessage","event","addEventListener","attachEvent","installMessageChannelImplementation","channel","MessageChannel","port1","port2","installReadyStateChangeImplementation","html","script","onreadystatechange","installSetTimeoutImplementation","attachTo","__dirname","_nodejs","_browser","$","wrapper","JsonLdProcessor","_expandLanguageMap","languageMap","rval","ki","vi","_isString","JsonLdError","@value","@language","_labelBlankNodes","issuer","_isList","_isObject","_isBlankNode","getId","_expandValue","activeCtx","activeProperty","expandedProperty","_expandIri","type","getContextValue","@id","_isKeyword","_graphToRDF","ids","properties","pi","property","items","RDF_TYPE","ii","_isAbsoluteIri","produceGeneralizedRdf","_listToRDF","_objectToRDF","triples","first","RDF_FIRST","rest","RDF_REST","nil","RDF_NIL","_isValue","_isBoolean","XSD_BOOLEAN","_isDouble","XSD_DOUBLE","parseFloat","toExponential","_isNumber","toFixed","XSD_INTEGER","RDF_LANGSTRING","XSD_STRING","_RDFToObject","useNativeTypes","_isNumeric","_compareRDFTriples","t1","t2","_createNodeMap","input","graphs","_isUndefined","subjects","objects","oi","_isSubject","_isSubjectReference","addValue","propertyIsArray","allowDuplicate","_list","@list","referencedNode","reverseMap","reverseProperty","itemName","_mergeNodeMaps","graphNames","graphName","nodeMap","@graph","_frame","state","frame","_validateFrame","embed","_getFrameFlag","explicit","requireAll","_filterSubjects","idx","link","_addFrameOutput","uniqueEmbeds","_createsCircularReference","subjectStack","_removeEmbed","prop","_clone","subframe","_createImplicitFrame","omitDefaultOn","preserve","@preserve","subjectToEmbed","flag","_filterSubject","hasValue","wildcard","matchesSome","hasDefault","embeds","compareValues","useArray","removeValue","removeDependents","_removePreserve","ctx","idAlias","_compactIri","container","compactArrays","_compareShortestLeast","_selectTerm","containers","typeOrLanguage","typeOrLanguageValue","prefs","mappings","containerMap","ci","typeOrLanguageValueMap","relativeTo","inverseCtx","getInverse","defaultLanguage","commonLanguage","commonType","itemLanguage","itemType","suffix","choice","partialMatches","iriMap","fastCurieMap","maxPartialLength","entry","ti","curie","isUsableCurie","_removeBase","_compactValue","preserveIndex","keyCount","isValueOnlyKey","hasDefaultLanguage","isValueString","hasNullMapping","compacted","_createTermDefinition","localCtx","defined","context","mapping","_termHasColon","prependBase","_prependBase","rel","transform","authority","_removeDotSegments","fragment","href","baseSegments","normalizedPath","iriSegments","_getInitialContext","_createInverseContext","irisToTerms","isKeyword","fastCurieEntry","@type","_addPreferredTerm","_buildIriMap","letter","entries","_cloneActiveContext","clone","@base","_isEmptyObject","_validateTypeValue","isValid","isNaN","isFinite","_findContextUrls","urls","_ctx","_retrieveContextUrls","documentLoader","retrieve","cycles","MAX_CONTEXT_URLS","finished","_cycles","remoteDoc","ex","cause","@context","contextUrl","promise","then","_parseNQuads","plain","ws","wso","eoln","dataset","li","unescaped","unique","_toNQuads","quads","_toNQuad","escaped","_parseRdfaApiData","getSubjects","si","getSubjectTriples","predicates","RDF_XML_LITERAL","_defineXMLSerializer","serializer","RDF_OBJECT","RDF_PLAIN_LITERAL","IdentifierIssuer","existing","hasAuthority","compact","cleanup","tmp","hasContext","kwgraph","skipExpansion","loadDocument","expand","expanded","processContext","Processor","documentUrl","remoteContext","expandContext","processor","keepFreeFloatingNodes","flatten","_input","flattened","doFrame","remoteFrame","opts","isFrame","expandedFrame","framed","omitDefault","objectify","top","recurse","visited","isid","sid","of_type","algorithm","inputFormat","parsedInput","toRDF","useRdfType","rdfParser","_rdfParsers","callbackCalled","createNodeMap","merge","docs","expandComplete","mergeNodes","namer","@default","relabelBlankNodes","_graphs","_nodeMap","promisify","promises","api","Promise","method","op","resolve","canDefineProperty","_setImmediate","_delay","parseLinkHeader","header","rLinkHeader","params","rParams","RequestQueue","_requests","wrapLoader","loader","_loader","_usePromise","load","catch","DocumentCache","size","order","cache","expires","ActiveContextCache","key1","key2","level1","documentLoaders","jquery","secure","ajax","accepts","Accept","dataType","crossDomain","textStatus","jqXHR","getResponseHeader","linkHeader","LINK_HEADER_REL","usePromise","redirects","handleResponse","statusText","http","STATUS_CODES","statusCode","httpStatusCode","location","maxRedirects","acceptHeader","request","strictSSL","followRedirect","RangeError","req","onload","response","rlink","onerror","open","setRequestHeader","send","useDocumentLoader","callbackArg","hasProperty","isList","getValues","removeProperty","v1","v2","registerRDFParser","parser","unregisterRDFParser","RDF","RDF_LIST","details","inherits","linked","insideReverse","expandedValue","alias","itemActiveProperty","expandedItem","compactedItem","mapObject","compactedValue","compactedProperty","insideList","expandedActiveProperty","keyword","nextActiveProperty","validCount","@merged","URDNA2015","main","URGNA2012","graphMap","referencedOnce","objectIsId","usages","graphObject","usage","head","listNodes","nodeKeyCount","subjects_","node_","ctxs","cached","POSITIONS","Normalize","blankNodeInfo","hashToBlankNodes","canonicalIssuer","schedule","MAX_DEPTH","maxCallStackDepth","MAX_TOTAL_DEPTH","depth","totalDepth","timeSlice","doWork","work","getTime","deadline","iterable","condition","loop","nonNormalized","forEachComponent","component","simple","hashFirstDegreeQuads","hashes","idList","hashPathList","hasId","hashNDegreeQuads","normalized","nquads","modifyFirstDegreeComponent","NormalizeHash","hashNQuads","hashRelatedBlankNode","related","md","update","getRelatedPredicate","digest","hashToRelated","createHashToRelated","chosenIssuer","chosenPath","permutator","Permutator","hasNext","nextPermutation","permutation","issuerCopy","recursionList","UniqueNamer","identifier","getName","isNamed","swap","_init","crypto","createHash","sha256","Algorithm","sha1","MessageDigest","toHex","_algorithm","_padding","blockSize","messageLength","fullMessageLength","int32s","messageLengthSize","ByteBuffer","unescape","encodeURIComponent","putBytes","bytes","read","finalBlock","remaining","overflow","putInt32","writeMessageLength","write","getInt32","_w","digestLength","_createState","h0","h1","h2","h3","h4","buffer","_k","s0","maj","h5","h6","h7","parsers","regex","full","parsed","use","extension","_module","filename","factory","jsonldjs","lib$es6$promise$utils$$objectOrFunction","lib$es6$promise$utils$$isFunction","lib$es6$promise$utils$$isMaybeThenable","lib$es6$promise$asap$$setScheduler","scheduleFn","lib$es6$promise$asap$$customSchedulerFn","lib$es6$promise$asap$$setAsap","asapFn","lib$es6$promise$asap$$asap","lib$es6$promise$asap$$useNextTick","lib$es6$promise$asap$$flush","lib$es6$promise$asap$$useVertxTimer","lib$es6$promise$asap$$vertxNext","lib$es6$promise$asap$$useMutationObserver","iterations","observer","lib$es6$promise$asap$$BrowserMutationObserver","observe","characterData","lib$es6$promise$asap$$useMessageChannel","lib$es6$promise$asap$$useSetTimeout","lib$es6$promise$asap$$len","lib$es6$promise$asap$$queue","arg","lib$es6$promise$asap$$attemptVertex","vertx","runOnLoop","runOnContext","lib$es6$promise$$internal$$noop","lib$es6$promise$$internal$$selfFullfillment","lib$es6$promise$$internal$$cannotReturnOwn","lib$es6$promise$$internal$$getThen","lib$es6$promise$$internal$$GET_THEN_ERROR","lib$es6$promise$$internal$$tryThen","fulfillmentHandler","rejectionHandler","lib$es6$promise$$internal$$handleForeignThenable","thenable","sealed","lib$es6$promise$$internal$$resolve","lib$es6$promise$$internal$$fulfill","reason","lib$es6$promise$$internal$$reject","_label","lib$es6$promise$$internal$$handleOwnThenable","_state","lib$es6$promise$$internal$$FULFILLED","_result","lib$es6$promise$$internal$$REJECTED","lib$es6$promise$$internal$$subscribe","lib$es6$promise$$internal$$handleMaybeThenable","maybeThenable","lib$es6$promise$$internal$$publishRejection","_onerror","lib$es6$promise$$internal$$publish","lib$es6$promise$$internal$$PENDING","_subscribers","onFulfillment","onRejection","subscribers","settled","detail","lib$es6$promise$$internal$$invokeCallback","lib$es6$promise$$internal$$ErrorObject","lib$es6$promise$$internal$$tryCatch","lib$es6$promise$$internal$$TRY_CATCH_ERROR","succeeded","failed","hasCallback","lib$es6$promise$$internal$$initializePromise","resolver","lib$es6$promise$enumerator$$Enumerator","enumerator","_instanceConstructor","_validateInput","_remaining","_enumerate","_validationError","lib$es6$promise$promise$all$$all","lib$es6$promise$enumerator$$default","lib$es6$promise$promise$race$$race","lib$es6$promise$utils$$isArray","lib$es6$promise$promise$resolve$$resolve","lib$es6$promise$promise$reject$$reject","lib$es6$promise$promise$$needsResolver","lib$es6$promise$promise$$needsNew","lib$es6$promise$promise$$Promise","lib$es6$promise$promise$$counter","lib$es6$promise$polyfill$$polyfill","local","P","cast","lib$es6$promise$promise$$default","lib$es6$promise$utils$$_isArray","lib$es6$promise$asap$$scheduleFlush","lib$es6$promise$asap$$browserWindow","lib$es6$promise$asap$$browserGlobal","MutationObserver","WebKitMutationObserver","lib$es6$promise$asap$$isNode","lib$es6$promise$asap$$isWorker","Uint8ClampedArray","_eachEntry","_settledAt","_willSettleAt","lib$es6$promise$promise$all$$default","lib$es6$promise$promise$race$$default","lib$es6$promise$promise$resolve$$default","lib$es6$promise$promise$reject$$default","race","_setScheduler","_setAsap","_asap","lib$es6$promise$polyfill$$default","lib$es6$promise$umd$$ES6Promise","polyfill","__webpack_amd_options__","require","Lexer","Store","StreamParser","StreamWriter","submodule","webpackContext","webpackContextResolve","./N3Lexer","./N3Lexer.js","./N3Parser","./N3Parser.js","./N3Store","./N3Store.js","./N3StreamParser","./N3StreamParser.js","./N3StreamWriter","./N3StreamWriter.js","./N3Util","./N3Util.js","./N3Writer","./N3Writer.js","N3Lexer","lineMode","_tripleQuotedString","_number","_boolean","_tokenize","tokenize","token","_syntaxError","immediately","escapeSequence","escapeReplacements","\\","'","\"","_","~",".","-","!","&","(",")","*","+",",",";","=","/","?","#","@","%","illegalIriChars","_iri","_unescapedIri","_unescapedString","_singleQuotedString","_langcode","_prefix","_prefixed","_blank","_keyword","_sparqlKeyword","_shortPredicates","_newline","_whitespace","_endOfFile","_tokenizeToEnd","inputFinished","reportSyntaxError","whiteSpaceMatch","_line","firstChar","matchLength","inconclusive","_prevTokenType","_unescape","toUpperCase","unicode4","unicode8","escapedChar","charCode","replacement","issue","addChunk","setEncoding","_tripleStack","_graph","_setBase","documentIRI","isTurtle","isTriG","isNTriples","isNQuads","isLineMode","_supportsNamedGraphs","_readPredicateOrNamedGraph","_readPredicate","_supportsQuads","_base","_resolveIRI","_error","_callback","_subject","_blankNodePrefix","blankNodePrefix","_lexer","lexer","RDF_PREFIX","absoluteIRI","schemeAuthority","dotSegments","blankNodeCount","_resetBlankNodeIds","baseIRI","_basePath","_baseRoot","_baseScheme","_readInTopContext","_prefixes","_sparqlStyle","_readPrefix","_readBaseIRI","_readSubject","_readNamedGraphLabel","_predicate","_readBlankNodeHead","_readListItem","_readPunctuation","_readBlankNodeTail","_readObject","_object","_readDataTypeOrLang","blank","_getTripleEndReader","_readGraph","_readBlankNodePunctuation","itemHead","prevItemHead","parentTriple","_readQuadPunctuation","_readPrefixIRI","prefixIRI","_prefixCallback","_readDeclarationPunctuation","_readNamedGraphBlankLabel","pathStart","segmentStart","tripleCallback","prefixCallback","_readCallback","N3Store","_size","_entities","_entityCount","_blankNodeIndex","prefixes","addPrefixes","addTriples","expandPrefixedName","graphKey","subjectKey","predicateKey","_addToIndex","index0","key0","index1","index2","_removeFromIndex","_findInIndex","name0","name1","name2","entityKeys","value0","entity0","value1","entity1","_countInIndex","graphItem","freeze","entities","addPrefix","removeTriple","removeTriples","find","findByIRI","countByIRI","createBlankNode","suggestedName","addN3Util","toPrototype","N3Util","applyToThis","Xsd","XsdString","XsdInteger","XsdDecimal","XsdBoolean","RdfLangString","isIRI","entity","isLiteral","getLiteralValue","getLiteralType","getLiteralLanguage","isPrefixedName","prefixedName","createIRI","createLiteral","modifier","N3StreamParser","Transform","decodeStrings","_readableState","objectMode","_transform","chunk","encoding","_flush","util","Stream","EE","EventEmitter","Readable","Writable","Duplex","PassThrough","pipe","ondata","ondrain","readable","onend","didOnEnd","onclose","destroy","er","listenerCount","_isStdio","_events","_maxListeners","isFunction","isNumber","isObject","isUndefined","defaultMaxListeners","setMaxListeners","handler","newListener","warned","trace","fired","ret","evlistener","emitter","ctor","superCtor","super_","TempCtor","READABLE_STREAM","prependListener","ReadableState","stream","readableObjectMode","hwm","highWaterMark","defaultHwm","BufferList","pipes","pipesCount","flowing","ended","endEmitted","reading","sync","needReadable","emittedReadable","readableListening","resumeScheduled","defaultEncoding","ranOut","awaitDrain","readingMore","decoder","StringDecoder","_read","readableAddChunk","addToFront","chunkInvalid","onEofChunk","_e","skipAdd","emitReadable","maybeReadMore","needMoreData","computeNewHighWaterMark","MAX_HWM","howMuchToRead","Buffer","isBuffer","processNextTick","emitReadable_","flow","maybeReadMore_","pipeOnDrain","EElistenerCount","nReadingNextTick","resume_","fromList","clear","fromListPartial","hasStrings","copyFromBufferString","copyFromBuffer","nb","tail","bufferShim","allocUnsafe","endReadable","endReadableNT","xs","debugUtil","debuglog","isPaused","enc","nOrig","doRead","pipeOpts","onunpipe","onfinish","cleanedUp","_writableState","needDrain","increasedAwaitDrain","unpipe","doEnd","stdout","stderr","endFn","dests","ev","wrap","events","_fromList","arg1","arg2","arg3","typedArraySupport","Uint8Array","foo","subarray","byteLength","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","encodingOrOffset","ArrayBuffer","fromArrayBuffer","fromString","fromObject","assertSize","alloc","fill","checked","isEncoding","actual","fromArrayLike","byteOffset","isnan","SlowBuffer","isView","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","bidirectionalIndexOf","indexSize","readUInt16BE","arrLength","valLength","foundIndex","found","hexWrite","strLen","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","base64","fromByteArray","min","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","codePoints","MAX_ARGUMENTS_LENGTH","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","ieee754","writeDouble","base64clean","stringtrim","INVALID_BASE64_RE","units","Infinity","leadSurrogate","byteArray","hi","lo","toByteArray","dst","INSPECT_MAX_BYTES","poolSize","_augment","species","allocUnsafeSlow","_isBuffer","swap16","swap32","swap64","inspect","thisStart","thisEnd","thisCopy","targetCopy","includes","toJSON","_arr","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","placeHoldersCount","b64","placeHolders","Arr","L","revLookup","tripletToBase64","num","lookup","encodeChunk","uint8","extraBytes","maxChunkLength","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","LN2","MAX_LEN","_fill","fillBuf","flen","objectToString","isBoolean","isNull","isNullOrUndefined","isString","isSymbol","isRegExp","isDate","isError","isPrimitive","allowHalfOpen","onEndNT","objectKeys","nop","WriteReq","WritableState","writableObjectMode","ending","noDecode","writing","corked","bufferProcessing","onwrite","writecb","writelen","bufferedRequest","lastBufferedRequest","pendingcb","prefinished","errorEmitted","bufferedRequestCount","corkedRequestsFree","CorkedRequest","realHasInstance","_write","writev","_writev","writeAfterEnd","validChunk","valid","decodeChunk","writeOrBuffer","doWrite","onwriteError","onwriteStateUpdate","needFinish","clearBuffer","asyncWrite","afterWrite","onwriteDrain","finishMaybe","holder","finish","prefinish","need","endWritable","internalUtil","getBuffer","hasInstance","cork","uncork","setDefaultEncoding","deprecated","localStorage","assertEncoding","isBufferEncoding","passThroughWrite","utf16DetectIncompleteChar","charReceived","charLength","base64DetectIncompleteChar","surrogateSize","detectIncompleteChar","charBuffer","charStr","available","cr","TransformState","afterTransform","needTransform","transforming","writechunk","writeencoding","_transformState","rs","flush","seen","stylize","stylizeNoColor","colors","showHidden","_extend","customInspect","stylizeWithColor","formatValue","styleType","style","styles","arrayToHash","recurseTimes","primitive","formatPrimitive","visibleKeys","getOwnPropertyNames","formatError","braces","toUTCString","formatArray","formatProperty","reduceToSingleString","desc","getOwnPropertyDescriptor","numLinesEst","prev","cur","ar","pad","timestamp","time","getHours","getMinutes","months","formatRegExp","throwDeprecation","traceDeprecation","noDeprecation","debugEnviron","debugs","NODE_DEBUG","pid","bold","italic","underline","white","grey","black","blue","cyan","green","magenta","red","yellow","special","number","null","regexp","N3StreamWriter","writer","N3Writer","outputStream","_outputStream","_endStream","_writeTriple","_writeTripleLine","_prefixIRIs","characterReplacer","character","N3LiteralMatcher","escape","escapeAll","\t","\n","\r","\b","\f","_encodeIriOrBlankNode","_encodeObject","_encodePredicate","_encodeSubject","_prefixMatch","prefixMatch","_prefixRegex","_encodeLiteral","_blockedWrite","prefixIRIs","hasPrefixes","IRIlist","prefixList","contents","singleDone","Uri","hexify","encodeURI","backslashUify","__Serializer","store","suggestPrefix","namespacesUsed","keywords","prefixchars","incoming","formulas","toStr","fromStr","px","checkIntegrity","prefixs","makeUpPrefix","canUse","pp","validPrefix","pok","slash","rootSubjects","allBnodes","st2","ss","roots","xNT","rootsHash","toN3","_notQNameChars","_notNameChars","explicitURI","sorted","rdfns","termToNT","atomicTermToN3","statementListToTree","stats","subjectTree","termToN3","propertyTree","objectTree","lastPred","predMap","force","expr","prefixDirectives","defaultNamespace","indent","width","spaces","treeToLine","tree","branch","s2","treeToString","level","lastLength","stringToN3","symbolToN3","forbidden1","forbidden3","delim","forbidden","canSplit","localid","namesp","keyords","writeStore","session","sources","metaSources","metadata","statementListToXMLTree","subjectXMLTree","escapeForXML","relURI","ap","bp","liPrefix","as","bs","an","bn","intNumber","qname","collectionXMLTree","tag","propertyXMLTree","namespaceCounts","XMLtreeToLine","XMLtreeToString","tree2","ln","easiestQuery","nvars","bindingDebug","bindingsDebug","nbs","unifyTerm","complexType","unifyContents","nbs2","nb2","bindings2","union","OptionalBranchJunction","originalCallback","trunkBindings","branches","checkAllDone","doCallBacks","MandatoryBranch","reportMatch","reportDone","OptionalBranch","junction","prepare","termIndex","ind","match_index","bindingsSoFar","localCallback","pattern_debug","br","fetchResource","requestedTerm","nowOrWhenFetched","match2","constraintsSatisfied","nk","newBindings1","nbs1","nc","onward","trunck","vars","DefaultGraph","languageOrDatatype","rdfParse","parseRDFaDOM","Parsable","text/n3","text/turtle","application/rdf+xml","application/xhtml+xml","text/html","application/ld+json","thisURI","requested","redirectedTo","fetchCallbacks","nonexistant","lookedUp","handlers","mediatypes","httph","rdfs","dc","crossSiteProxy","crossSiteProxyTemplate","RDFXMLHandler","handlerFactory","responseText","failFetch","resource","original","addStatus","noMeta","register","XHTMLHandler","relation","links","linkData","scripts","noRDFa","XMLHandler","switchHandler","HTMLHandler","titleMatch","doneFetch","TextHandler","N3Handler","loadBuf","statementCount","addHandler","Handler","getMilliseconds","the","abort","thisReq","linkexp","paramexp","ps","paramsplit","handlerList","was","lookUpThing","putBack","webOperation","proxyIfNecessary","saveRequestMetadata","readyState","ok","saveResponseMetadata","webCopy","here","there","content_type","rterm","oneDone","allDone","errors","outstanding","requestOne","p2","userCallback","referingTerm","getHeader","requests","$SolidTestEnvironment","localSiteMap","hostpath","z","timeNow","baseURI","pcol","docterm","sta","checkCredentialsRetry","withCredentials","retriedWithCredentials","newopt","opt","onerrorFactory","onErrorWasCalled","proxyUsed","onreadystatechangeFactory","newURI","aborted","oldreq","xhr2","CORS_status","handleResponseDone","response2","guess","loc","addType","cla","docURI","redirection","extensionToContentType","owl","n3","ttl","nt","ct","forceContentType","clearPreviousData","removeDocument","udoc","newreq","redirected","uri2","preferences","actualProxyURI","requestedURI","ontimeout","notificationCallbacks","getInterface","iid","nsIChannelEventSink","onChannelRedirect","oldC","newC","URI","spec","badDoc","asyncOnChannelRedirect","msg2","NS_NOINTERFACE","acceptstring","isPending","objectRefresh","unload","removeMany","retract","SinkParser","openFormula","thisDoc","genPrefix","metaURI","__SinkParser","_bindings","pyjslib_Dict","_flags","assertFudge","_store","setGenPrefix","_thisDoc","startOfLine","previousLine","_genPrefix","pyjslib_List","keywordsSet","_anonymousNodes","_variables","_parentVariables","_reason","_reason2","diag_tracking","why_BecauseOfData","_baseURI","RDFSink_uniqueURI","_formula","_context","_parentContext","__OLD_BadSyntax","_str","encode","_i","_why","_uri","BadSyntax","pyjslib_slice","Utf8","utftext","decode","Logic_NS","pyjslib_Tuple","theList","listOfPairs","pyjslib_len","StopIteration","pyjslib_Iterator","string_find","stringFromCharCode","uesc","uripath_join","becauseSubexpression","diag_chatty_flag","diag_progress","RDF_type_URI","DAML_sameAs_URI","ADDED_HASH","INTEGER_DATATYPE","FLOAT_DATATYPE","DECIMAL_DATATYPE","DATE_DATATYPE","DATETIME_DATATYPE","number_syntax","datetime_syntax","interesting","langcode","loadStream","startDoc","feed","endDoc","octets","skipSpace","directiveOrStatement","directive","checkDot","statement","tok","commaSeparatedList","setKeywords","__x","newUniversal","uri_ref2","qn","setPrefixForURI","makeStatement","property_list","verb","nodeOrLiteral","ahead","anonymousNode","subjectAlready","bnodeID","objs","objectList","__obj","ch2","mylist","first_run","newSet","oldParentContext","parentAnonymousNodes","grandParentVariables","reason2","thing_type","pairFudge","ofUris","bareWord","pfx","symb","uref","whitespace","strconst","startline","res2","ustr","uch","uEscape","UEscape","chFudge","post","executeErrorCallback","createTerm","termString","jsonDocument","parseErr","blankNodes","htmlOptions","theOne","vocabulary","blankCounter","langAttributes","inXHTMLMode","absURIRE","finishedHandlers","init","su","ob","pr","or","toRDFNodeObject","newMappings","dateTimeTypes","matched","NCNAME","parseCURIE","resolveAndNormalize","defaultVocabulary","ignoreTerms","parseTermOrCURIEOrAbsURI","parseCURIEOrURI","lcvalue","setContext","removeHash","baseURIMap","listMapping","bnodes","newBlankNode","_i2","objectURI","skip","newSubject","currentObjectResource","typedResource","prefixesCopied","incomplete","listMappingDifferent","parseURI","vocabAtt","baseSubject","att","copyMappings","prefixAtt","parsePrefixMappings","xmlLangAtt","_i3","_value","relAtt","revAtt","typeofAtt","propertyAtt","datatypeAtt","datetimeAtt","inHTMLMode","contentAtt","aboutAtt","srcAtt","resourceAtt","hrefAtt","inlistAtt","relAttPredicates","_i4","parsePredicate","revAttPredicates","_i5","parseSafeCURIEOrCURIEOrURI","parentObject","newSubjectOrigin","_i6","typeURI","_i7","_i8","_i9","_i10","_list2","_i11","forward","_i12","content","PlainLiteralURI","XMLLiteralURI","HTMLLiteralURI","deriveDateTimeType","_i13","_predicate2","_list3","_i14","childContext","listSubject","copyProperties","_i15","setXHTMLContext","setHTMLContext","setXMLContext","setInitialContext","uriUtil","RDFS","ELEMENT","ATTRIBUTE","TEXT","CDATA_SECTION","ENTITY_REFERENCE","ENTITY","PROCESSING_INSTRUCTION","COMMENT","DOCUMENT","DOCUMENT_TYPE","DOCUMENT_FRAGMENT","NOTATION","frameFactory","NODE","ARC","listIndex","rdfid","terminateFrame","addSymbol","loadTriple","isTripleToLoad","addNode","addCollection","addCollectionArc","addBNode","addArc","addLiteral","attributeNode","potentialNode","fullName","reify","cleanParser","parseDOM","buildFrame","elementURI","dig","parsetype","nv","bnid2","about","bnid","pframe","candidate","SQNS","clauses","badSyntax","parseJSON","preds","getSelect","addIndent","getPattern","getConstraints","describe","getOptionals","getWhere","getSPARQL","SPARQL","testMode","makeVar","variableHash","newVar","isRealText","fixSymbolBrackets","isBnode","isPrefix","isPrefixedSymbol","getPrefix","getSuffix","removeBrackets","parseLiterals","sin","doub","end2","spaceDelimit","replaceKeywords","strarr","toTerms","token1","token2","arrayIndicesOf","setVars","label","getPrefixDeclarations","prefInd","symbol","getMatchingBracket","ConstraintEqualTo","varstr","ConstraintRegexp","rg","setConstraint","setOptional","setWhere","filt","extractStatements","arrayZero","per","stat","sem","stat2","com","stat3","sp","selectLoc","whereLoc","uriJoin","sparql","updater","ifps","fps","ldp","patchControl","patchControlFor","editable","definitive","acceptPatch","author_via","anonymize","_mentioned","anonymizeNT","stmt","_statement_bnodes","_statement_array_bnodes","bnodes2","_cache_ifps","_bnode_context2","_bnode_context_1","con","connectedStatements","_bnode_context","_statement_context","_context_where","_fire","update_statement","statementNT","set_object","insert_statement","st0","stText","delete_statement","requestDownstreamAction","control","pendingUpstream","downstreamAction","clearUpstreamCount","upstreamCount","getUpdatesVia","linkHeaders","addDownstreamChangeListener","downstreamChangeListeners","setRefreshHandler","reloadAndSync","reloading","retryTimeout","tryReload","reload","wssURI","theHandler","retries","openWebsocket","socket","WebSocket","Services","wm","getMostRecentWindow","onopen","clean","deletions","insertions","is","startTime","verbs","delete","insert","whereClause","elapsedTime_ms","targetURI","candidateTarget","dot","file","nsILocalFile","initWithPath","exists","nsIFileOutputStream","put","addStatement","reloadTime_total","reloadTime_count","oldReload","g2","f2","sts1","sts2","via","connected","pending","subscribed","onOpen","onClose","onMessage","onError","decodeURIComponent","_send","onUpdate","_decode","_subscribe","onHeaders","etag","subscribe","RelyingParty","HASH","QUERY","REDIRECT","currentClient","providerUri","webId","idToken","accessToken","providerFromCurrentUri","uriType","uriObj","URL","URLSearchParams","searchParams","loadClient","loadedClient","registerClient","provider","keyByProvider","clientConfig","getItem","keyByState","clearCurrentUser","selectProvider","loadOrRegisterClient","validateOrSendAuthRequest","providerFromUI","currentUri","currentLocation","stateParam","extractState","loadProvider","initEventListeners","client","createRequest","authUri","saveProviderByState","redirectTo","currentUriHasAuthResponse","initUserFromResponse","sendAuthRequest","_this3","validateResponse","id_token","access_token","extractAndValidateWebId","decoded","_this4","registerPublicClient","registeredClient","storeClient","redirectUri","registration","grant_types","redirect_uris","response_types","scope","rpOptions","defaults","authenticate","redirect_uri","response_type","event_type","setItem","assert","fetch","Headers","_require","JSONDocument","JSONSchema","_require2","JWKSet","AuthenticationRequest","AuthenticationResponse","RelyingPartySchema","_JSONDocument","endpoint","configuration","registration_endpoint","Content-Type","jwks_uri","importKeys","jwks","rp","redirect","userinfo_endpoint","Authorization","end_session_endpoint","validation","validate","discover","pToString","arrbuf","DataView","functionsHaveNames","truncate","something","rawname","getMessage","operator","expected","fail","stackStartFunction","AssertionError","_deepEqual","strict","memos","multiline","ignoreCase","Float32Array","Float64Array","actualIndex","objEquiv","isArguments","actualVisitedObjects","aIsArgs","bIsArgs","pSlice","ka","notDeepStrictEqual","expectedException","isPrototypeOf","_tryBlock","block","_throws","shouldThrow","userProvidedMessage","isUnwantedException","isUnexpectedException","hasOwn","generatedMessage","fn_name","next_line","equal","notEqual","deepEqual","deepStrictEqual","notDeepEqual","strictEqual","notStrictEqual","throws","doesNotThrow","ifError","Formats","Initializer","JSONMapping","JSONPatch","JSONPointer","Validator","DATETIME_REGEXP","URI_REGEXP","EMAIL_REGEXP","IPV4_REGEXP","IPV6_REGEXP","HOSTNAME_REGEXP","formats","initialize","schema","initializer","compile","chain","refchain","operation","private","immutable","setter","after","operations","Map","assignment","setterAssign","immutableAssign","simpleAssign","afterAssign","defaultString","immutableDefault","simpleDefault","guards","alternate","ops","project","SILENT","OPERATIONS","pointer","THROW","RECOVER","mode","tokens","parseURIFragmentIdentifier","parseJSONString","_Map","_defineProperty","writeable","extender","address","validator","required","enum","anyOf","allOf","not","oneOf","conditions","validations","enumerated","subschema","isRequired","segment","patternValidations","additionalValidations","patternProperties","_schema","additionalProperties","otherPropertiesCalled","otherProperties","minProperties","maxProperties","dependencies","dependency","additionalItems","_schema2","minItems","maxItems","uniqueItems","minLength","maxLength","matcher","minimum","_schema3","exclusiveMinimum","maximum","_schema4","exclusiveMaximum","multipleOf","decimals","JWA","JWK","JWT","JWS","Base64URLSchema","JOSEHeaderSchema","JWKSchema","JWKSetSchema","JWTClaimsSetSchema","JWTSchema","supportedAlgorithms","NotSupportedError","alg","normalizedAlgorithm","sign","verify","importKey","fromBase64","base64string","toBase64","base64UrlString","b64str","padString","segmentLength","stringLength","diff","padLength","paddedStringLength","decodeBase64Url","base64url","stringOrBuffer","toBuffer","HMAC","RSASSA_PKCS1_v1_5","SupportedAlgorithms","define","TextEncoder","subtle","bitlength","jwk","key_ops","cryptoKey","argument","registeredAlgorithms","SyntaxError","_Error","DataError","BASE64_REGEXP","kty","kid","x5u","x5c","x5t","imported","importing","isJWE","JWE","encrypt","ExtendedJWT","jwt","startsWith","signatures","recipients","serialization","segments","verified","protected","unprotected","iv","aad","ciphertext","encrypted_key","iss","aud","exp","nbf","iat","jti","typ","cty","jku","crit","zip","_slicedToArray","sliceIterator","_n","_d","_s","_ret","_jwt$segments","FormUrlEncoded","authorization_endpoint","client_id","getRandomValues","nonce","digests","search","pad_string_1","pairs","IDToken","parseResponse","matchRequest","validateStateParam","errorResponse","validateResponseMode","validateResponseParams","exchangeAuthorizationCode","validateIDToken","encoded","expectedParams","token_type","secret","AuthenticationError","token_endpoint","grant_type","authMethod","credentials","tokenResponse","_response$rp","decryptIDToken","decodeIDToken","validateIssuer","validateAudience","resolveKeys","verifySignature","validateExpires","verifyNonce","validateACR","validateAuthTime","validateAccessTokenHash","validateCodeHash","_response$decoded$pay","azp","expectedAlgorithm","IDTokenSchema","_JWT","extend","auth_time","acr","amr","display","SolidWebClient","defaultConfig","getClient","DEFAULT_ACCEPT","DEFAULT_MIME_TYPE","composePatchQuery","SolidResponse","SolidContainer","HttpError","createContainer","parentUrl","createResponse","xhrResponse","isContainer","currentUrl","del","solidRequest","loadParsedGraphs","locations","loadPromises","responseUrl","parsedGraph","needsProxy","currentIsHttps","targetIsHttp","toDel","toIns","slug","resourceType","proxyUrl","proxyUrlTemplate","forceProxy","noCredentials","absoluteUrl","baseUrl","pathUrl","excludeDot","statementToNT","hostname","pathSegments","fragments","parseAllowedMethods","allowMethodsHeader","acceptPatchHeader","allowedMethods","methodName","rels","endsWith","user","webUtil","typeLinkHeaders","responseURL","websocket","graphUtil","aclAbsoluteUrl","resolveMetaOrAclUrl","isType","isLoggedIn","rdfClass","metaAbsoluteUrl","parseGraph","raw","propertyName","metaOrAclUrl","Set","appendGraph","toGraph","fromGraph","ALL_STATEMENTS","graphFromStatements","rdfSource","parseLinks","serializeStatements","SolidResource","contentsUris","resources","initFromResponse","appendFromGraph","graphUri","uriNode","findTypeURIs","containersLinks","containerLink","isResource","linkNode","findByType","isEmpty","vocabMap","app","dct","foaf","pim","sioc","solid","vcard","xsd","rdfNamespace","namespaceIri","initName","STATUS_NAME_TO_CODE","StandardError","STATUS_CODE_TO_NAME","statusMessage","has","proto","100","101","102","200","201","202","203","204","205","206","207","208","226","300","301","302","303","304","305","307","308","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","421","422","423","424","425","426","428","429","431","500","501","502","503","504","505","506","507","508","509","510","511","currentPageUrl","listen","eventMethod","eventListener","messageEvent","alternateAuthUrl","defaultAuthEndpoint","authEndpoint","pathname","solidResponse","signupUrl","signupEndpoint","signupWindowWidth","height","signupWindowHeight","leftPosition","screen","topPosition","windowTitle","windowUrl","windowSpecs","webid","metaUrl","parsedProfile","profile","SolidProfile","isLoaded","ignoreExtended","loadExtendedProfile","relatedProfilesLinks","loadedGraphs","appRegistryListed","appRegistryUnlisted","inbox","picture","storage","typeIndexListed","typeIndexUnlisted","relatedProfiles","sameAs","seeAlso","baseProfileUrl","initWebId","extractWebId","parseLink","registry","PREFERENCES_DEFAULT_URI","PROFILE_CONTAINER_DEFAULT_URI","appRegistryDefaultContainer","baseContainer","profileUri","appsForType","findAll","hasAppRegistryPrivate","hasAppRegistryPublic","hasStorage","hasTypeRegistryPrivate","hasTypeRegistryPublic","loadAppRegistry","loadTypeRegistry","addAppRegistry","isListed","isUnlisted","addTypeRegistry","reloadAppRegistry","resetAppRegistry","reloadTypeRegistry","resetTypeRegistry","typeRegistryForClass","typeRegistryDefaultContainer","privateProfileUri","registerApp","registerType","locationType","unregisterType","addToAppRegistry","registryUri","registryGraph","toAdd","rdfStatements","newRegistration","registrations","registrationsFromGraph","blankPrivateAppRegistry","registryStatements","blankPublicAppRegistry","initAppRegistryPrivate","registryContainerUri","initAppRegistryPublic","entrySubject","initFromGraph","redirectTemplateUri","registrationUri","shortdesc","hashFragment","fragmentId","typeStatement","bitwise","binaryTransfer","binary","table","_len","cert","blankPrivateTypeIndex","indexStatements","privateIndex","blankPublicTypeIndex","publicIndex","initTypeRegistryPrivate","initTypeRegistryPublic","addToTypeIndex","locationTypeClass","allFailed","acc","instanceMatches","containerMatches","IndexRegistration","removeFromTypeIndex","locationUri","isInstance","resourceUrl","aclResourceUrl","permissions","PermissionSet","aclGraph","aclModes","defaultAclUrlFor","resourceUri","defaultIsAcl","DEFAULT_ACL_SUFFIX","isMailTo","agent","DEFAULT_CONTENT_TYPE","RESOURCE","CONTAINER","AGENT_INDEX","GROUP_INDEX","aclUrl","authorizations","host","agents","groups","strictOrigin","aclUrlFor","isAcl","mergeWith","virtual","allowsControl","addControlPermissionsFor","addToAgentIndex","accessType","isPublic","addToPublicIndex","inherit","accessModes","origins","mailTos","setAgent","addMode","addOrigin","mailTo","addMailTo","addAuthorization","impliedAuth","ALL_MODES","accessMode","isAuthInherited","setGroup","authorization","addToGroupIndex","EVERYONE","authList","authKey","publicAuth","findPublicAuth","checkOrigin","allowsMode","allAuthorizations","agentId","allowsPublic","findAuthByAgent","allowsOrigin","sameUrl","sameAclUrl","sameResourceType","myAuthKeys","otherAuthKeys","myAuth","otherAuth","sameAuths","indexType","accessToAuths","ACCESS_TO","accessToMatch","defaultAuths","DEFAULT","defaultMatch","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","containerUrl","return","authSections","section","agentMatches","publicMatches","groupMatches","allAgents","agentMatch","accessToMatches","resourceMatch","addAuthorizationFor","NOT_INHERIT","inheritedMatches","containerMatch","INHERIT","hashFragmentFor","permissionFor","removeMode","removeAuthorization","_this5","buildGraph","authType","hashKey","inherited","group","originsAllowed","addModeSingle","addOriginSingle","APPEND","allowsAppend","READ","WRITE","CONTROL","sameAgent","sameGroup","myModeKeys","authModeKeys","sameNumberModes","sameInherit","sameModes","sameMailTos","sameOrigins","agentMailto","modes","allOrigins","removeModeSingle","removeOriginSingle","setPublic","agentClass","lib","description","files","build-lib","build-full","build-with-rdflib","build-without-rdflib","build-qunit-resources","standard","tape","qunit","preversion","postversion","prepublish","babel","presets","repository","author","maintainers","license","bugs","homepage","shorthash","solid-auth-oidc","solid-auth-tls","solid-namespace","solid-permissions","solid-web-client","devDependencies","babel-cli","babel-loader","babel-preset-es2015","json-loader","nock","sinon","webpack","globals","isOnline","navigator","onLine","onOffline","onOnline"],"mappings":"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","file":"solid-client.min.js","sourcesContent":["var SolidClient =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ((function(modules) {\n\t// Check all modules for deduplicated modules\n\tfor(var i in modules) {\n\t\tif(Object.prototype.hasOwnProperty.call(modules, i)) {\n\t\t\tswitch(typeof modules[i]) {\n\t\t\tcase \"function\": break;\n\t\t\tcase \"object\":\n\t\t\t\t// Module can be created from a template\n\t\t\t\tmodules[i] = (function(_m) {\n\t\t\t\t\tvar args = _m.slice(1), fn = modules[_m[0]];\n\t\t\t\t\treturn function (a,b,c) {\n\t\t\t\t\t\tfn.apply(this, [a,b,c].concat(args));\n\t\t\t\t\t};\n\t\t\t\t}(modules[i]));\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t// Module is a copy of another module\n\t\t\t\tmodules[i] = modules[modules[i]];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn modules;\n}([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\n\tThe MIT License (MIT)\n\t\n\tCopyright (c) 2015-2016 Solid\n\t\n\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\tof this software and associated documentation files (the \"Software\"), to deal\n\tin the Software without restriction, including without limitation the rights\n\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\tcopies of the Software, and to permit persons to whom the Software is\n\tfurnished to do so, subject to the following conditions:\n\t\n\tThe above copyright notice and this permission notice shall be included in all\n\tcopies or substantial portions of the Software.\n\t\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\tSOFTWARE.\n\t\n\tsolid-client is a Javascript library for Solid applications.\n\t\n\tIf you would like to know more about the solid Solid project, please see\n\thttps://github.com/solid/solid\n\t*/\n\t'use strict';\n\t/**\n\t * Provides a Solid client helper object (which exposes various static modules).\n\t * @module solid-client\n\t * @main solid-client\n\t */\n\t\n\tvar rdf = __webpack_require__(2);\n\tvar ClientAuthOIDC = __webpack_require__(89);\n\tvar auth = new ClientAuthOIDC();\n\tvar webClient = __webpack_require__(137)(rdf, { auth: auth });\n\tvar ClientAuthTLS = __webpack_require__(150);\n\tvar tls = new ClientAuthTLS(webClient);\n\tvar identity = __webpack_require__(152);\n\tvar ns = __webpack_require__(158)(rdf);\n\tvar acl = __webpack_require__(164);\n\t\n\t/**\n\t * @class Solid\n\t * @static\n\t */\n\tvar Solid = {\n\t  acl: acl,\n\t  AppRegistration: __webpack_require__(155),\n\t  appRegistry: __webpack_require__(154),\n\t  auth: auth,\n\t  tls: tls,\n\t  config: __webpack_require__(168),\n\t  currentUser: auth.currentUser.bind(auth),\n\t  identity: __webpack_require__(152),\n\t  login: auth.login.bind(auth),\n\t  logout: auth.logout.bind(auth),\n\t  meta: __webpack_require__(169),\n\t  rdflib: rdf,\n\t  signup: tls.signup.bind(tls),\n\t  status: __webpack_require__(171),\n\t  typeRegistry: __webpack_require__(162),\n\t  vocab: ns,\n\t  web: webClient\n\t};\n\t\n\tSolid.clearPermissions = function clearPermissions(uri) {\n\t  return acl.clearPermissions(uri, webClient);\n\t};\n\tSolid.discoverWebID = function discoverWebID(url) {\n\t  return identity.discoverWebID(url, webClient, ns);\n\t};\n\tSolid.getPermissions = function getPermissions(uri) {\n\t  return acl.getPermissions(uri, webClient, rdf);\n\t};\n\tSolid.getProfile = function getProfile(profileUrl, options) {\n\t  return identity.getProfile(profileUrl, options, webClient, rdf);\n\t};\n\t\n\tmodule.exports = Solid;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t/**\n\t * Provides a generic wrapper around an RDF Parser library\n\t * (currently only RDFLib)\n\t *  @@ RDFLib is NOT JUST a parser library. It is a quadstore and a serializer library!\n\t * @module rdf-parser\n\t */\n\t\n\tvar rdf;\n\tif (typeof $rdf !== 'undefined') {\n\t  rdf = $rdf; // FF extension\n\t} else if (typeof tabulator !== 'undefined') {\n\t  rdf = tabulator.rdf;\n\t} else if (true) {\n\t  // Running with a CommonJS module system\n\t  rdf = __webpack_require__(3);\n\t}\n\tmodule.exports = rdf;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _indexedFormula = __webpack_require__(4);\n\t\n\tvar _indexedFormula2 = _interopRequireDefault(_indexedFormula);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar $rdf = {\n\t  BlankNode: __webpack_require__(12),\n\t  Collection: __webpack_require__(11),\n\t  convert: __webpack_require__(22),\n\t  DataFactory: __webpack_require__(75),\n\t  Empty: __webpack_require__(83),\n\t  Fetcher: __webpack_require__(77),\n\t  Formula: __webpack_require__(20),\n\t  IndexedFormula: _indexedFormula2.default,\n\t  jsonParser: __webpack_require__(84),\n\t  Literal: __webpack_require__(13),\n\t  log: __webpack_require__(15),\n\t  N3Parser: __webpack_require__(78),\n\t  NamedNode: __webpack_require__(8),\n\t  Namespace: __webpack_require__(73),\n\t  Node: __webpack_require__(10),\n\t  parse: __webpack_require__(79),\n\t  Query: __webpack_require__(74).Query,\n\t  queryToSPARQL: __webpack_require__(85),\n\t  RDFaProcessor: __webpack_require__(80),\n\t  RDFParser: __webpack_require__(81),\n\t  serialize: __webpack_require__(21),\n\t  Serializer: __webpack_require__(70),\n\t  SPARQLToQuery: __webpack_require__(86),\n\t  sparqlUpdateParser: __webpack_require__(82),\n\t  Statement: __webpack_require__(71),\n\t  term: __webpack_require__(10).fromValue,\n\t  UpdateManager: __webpack_require__(87),\n\t  UpdatesSocket: __webpack_require__(88).UpdatesSocket,\n\t  UpdatesVia: __webpack_require__(88).UpdatesVia,\n\t  uri: __webpack_require__(7),\n\t  Util: __webpack_require__(5),\n\t  Variable: __webpack_require__(72)\n\t};\n\t\n\t$rdf.NextId = $rdf.BlankNode.nextId;\n\t\n\t$rdf.fromNT = $rdf.Formula.prototype.fromNT;\n\t$rdf.fetcher = $rdf.DataFactory.fetcher;\n\t$rdf.graph = $rdf.DataFactory.graph;\n\t$rdf.lit = $rdf.DataFactory.lit;\n\t$rdf.st = $rdf.DataFactory.st;\n\t$rdf.sym = $rdf.DataFactory.namedNode;\n\t$rdf.variable = $rdf.DataFactory.variable;\n\t\n\t// RDFJS DataFactory interface\n\t$rdf.blankNode = $rdf.DataFactory.blankNode;\n\t$rdf.defaultGraph = $rdf.DataFactory.defaultGraph;\n\t$rdf.literal = $rdf.DataFactory.literal;\n\t$rdf.namedNode = $rdf.DataFactory.namedNode;\n\t$rdf.quad = $rdf.DataFactory.quad;\n\t$rdf.triple = $rdf.DataFactory.triple;\n\t\n\tmodule.exports = $rdf;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t//  Identity management and indexing for RDF\n\t//\n\t// This file provides  IndexedFormula a formula (set of triples) which\n\t// indexed by predicate, subject and object.\n\t//\n\t// It \"smushes\"  (merges into a single node) things which are identical\n\t// according to owl:sameAs or an owl:InverseFunctionalProperty\n\t// or an owl:FunctionalProperty\n\t//\n\t//\n\t//  2005-10 Written Tim Berners-Lee\n\t//  2007    Changed so as not to munge statements from documents when smushing\n\t//\n\t//\n\t/* jsl:option explicit */\n\tvar ArrayIndexOf = __webpack_require__(5).ArrayIndexOf;\n\tvar Formula = __webpack_require__(20);\n\t// const log = require('./log')\n\tvar RDFArrayRemove = __webpack_require__(5).RDFArrayRemove;\n\tvar Statement = __webpack_require__(71);\n\tvar Node = __webpack_require__(10);\n\tvar Variable = __webpack_require__(72);\n\t\n\tvar owl_ns = 'http://www.w3.org/2002/07/owl#';\n\t// var link_ns = 'http://www.w3.org/2007/ont/link#'\n\t\n\t// Handle Functional Property\n\tfunction handle_FP(formula, subj, pred, obj) {\n\t  var o1 = formula.any(subj, pred, undefined);\n\t  if (!o1) {\n\t    return false; // First time with this value\n\t  }\n\t  // log.warn(\"Equating \"+o1.uri+\" and \"+obj.uri + \" because FP \"+pred.uri);  //@@\n\t  formula.equate(o1, obj);\n\t  return true;\n\t} // handle_FP\n\t\n\t// Handle Inverse Functional Property\n\tfunction handle_IFP(formula, subj, pred, obj) {\n\t  var s1 = formula.any(undefined, pred, obj);\n\t  if (!s1) {\n\t    return false; // First time with this value\n\t  }\n\t  // log.warn(\"Equating \"+s1.uri+\" and \"+subj.uri + \" because IFP \"+pred.uri);  //@@\n\t  formula.equate(s1, subj);\n\t  return true;\n\t} // handle_IFP\n\t\n\tfunction handleRDFType(formula, subj, pred, obj, why) {\n\t  if (formula.typeCallback) {\n\t    formula.typeCallback(formula, obj, why);\n\t  }\n\t\n\t  var x = formula.classActions[obj.hashString()];\n\t  var done = false;\n\t  if (x) {\n\t    for (var i = 0; i < x.length; i++) {\n\t      done = done || x[i](formula, subj, pred, obj, why);\n\t    }\n\t  }\n\t  return done; // statement given is not needed if true\n\t}\n\t\n\tvar IndexedFormula = function (_Formula) {\n\t  _inherits(IndexedFormula, _Formula);\n\t\n\t  // IN future - allow pass array of statements to constructor\n\t  function IndexedFormula(features) {\n\t    _classCallCheck(this, IndexedFormula);\n\t\n\t    // this.statements = [] // As in Formula NO don't overwrite inherited\n\t    // this.optional = []\n\t\n\t    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(IndexedFormula).call(this));\n\t\n\t    _this.propertyActions = []; // Array of functions to call when getting statement with {s X o}\n\t    // maps <uri> to [f(F,s,p,o),...]\n\t    _this.classActions = []; // Array of functions to call when adding { s type X }\n\t    _this.redirections = []; // redirect to lexically smaller equivalent symbol\n\t    _this.aliases = []; // reverse mapping to redirection: aliases for this\n\t    _this.HTTPRedirects = []; // redirections we got from HTTP\n\t    _this.subjectIndex = []; // Array of statements with this X as subject\n\t    _this.predicateIndex = []; // Array of statements with this X as subject\n\t    _this.objectIndex = []; // Array of statements with this X as object\n\t    _this.whyIndex = []; // Array of statements with X as provenance\n\t    _this.index = [_this.subjectIndex, _this.predicateIndex, _this.objectIndex, _this.whyIndex];\n\t    _this.namespaces = {}; // Dictionary of namespace prefixes\n\t    _this.features = features || ['sameAs', 'InverseFunctionalProperty', 'FunctionalProperty'];\n\t    _this.initPropertyActions(_this.features);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(IndexedFormula, [{\n\t    key: 'substitute',\n\t    value: function substitute(bindings) {\n\t      var statementsCopy = this.statements.map(function (ea) {\n\t        return ea.substitute(bindings);\n\t      });\n\t      // console.log('IndexedFormula subs statemnts:' + statementsCopy)\n\t      var y = new IndexedFormula();\n\t      y.add(statementsCopy);\n\t      // console.log('indexed-form subs formula:' + y)\n\t      return y;\n\t    }\n\t  }, {\n\t    key: 'applyPatch',\n\t    value: function applyPatch(patch, target, patchCallback) {\n\t      // patchCallback(err)\n\t      var Query = __webpack_require__(74).Query;\n\t      var targetKB = this;\n\t      var ds;\n\t      var binding = null;\n\t\n\t      // /////////// Debug strings\n\t      /*\n\t      var bindingDebug = function (b) {\n\t        var str = ''\n\t        var v\n\t        for (v in b) {\n\t          if (b.hasOwnProperty(v)) {\n\t            str += '    ' + v + ' -> ' + b[v]\n\t          }\n\t        }\n\t        return str\n\t      }\n\t      */\n\t      var doPatch = function doPatch(onDonePatch) {\n\t        if (patch['delete']) {\n\t          ds = patch['delete'];\n\t          // console.log(bindingDebug(binding))\n\t          // console.log('ds before substitute: ' + ds)\n\t          if (binding) ds = ds.substitute(binding);\n\t          // console.log('applyPatch: delete: ' + ds)\n\t          ds = ds.statements;\n\t          var bad = [];\n\t          var ds2 = ds.map(function (st) {\n\t            // Find the actual statemnts in the store\n\t            var sts = targetKB.statementsMatching(st.subject, st.predicate, st.object, target);\n\t            if (sts.length === 0) {\n\t              // log.info(\"NOT FOUND deletable \" + st)\n\t              bad.push(st);\n\t              return null;\n\t            } else {\n\t              // log.info(\"Found deletable \" + st)\n\t              return sts[0];\n\t            }\n\t          });\n\t          if (bad.length) {\n\t            // console.log('Could not find to delete ' + bad.length + 'statements')\n\t            // console.log('despite ' + targetKB.statementsMatching(bad[0].subject, bad[0].predicate)[0])\n\t            return patchCallback('Could not find to delete: ' + bad.join('\\n or '));\n\t          }\n\t          ds2.map(function (st) {\n\t            targetKB.remove(st);\n\t          });\n\t        }\n\t        if (patch['insert']) {\n\t          // log.info(\"doPatch insert \"+patch['insert'])\n\t          ds = patch['insert'];\n\t          if (binding) ds = ds.substitute(binding);\n\t          ds = ds.statements;\n\t          ds.map(function (st) {\n\t            st.why = target;\n\t            targetKB.add(st.subject, st.predicate, st.object, st.why);\n\t          });\n\t        }\n\t        onDonePatch();\n\t      };\n\t      if (patch.where) {\n\t        // log.info(\"Processing WHERE: \" + patch.where + '\\n')\n\t        var query = new Query('patch');\n\t        query.pat = patch.where;\n\t        query.pat.statements.map(function (st) {\n\t          st.why = target;\n\t        });\n\t\n\t        var bindingsFound = [];\n\t\n\t        targetKB.query(query, function onBinding(binding) {\n\t          bindingsFound.push(binding);\n\t          // console.log('   got a binding: ' + bindingDebug(binding))\n\t        }, targetKB.fetcher, function onDone() {\n\t          if (bindingsFound.length === 0) {\n\t            return patchCallback('No match found to be patched:' + patch.where);\n\t          }\n\t          if (bindingsFound.length > 1) {\n\t            return patchCallback('Patch ambiguous. No patch done.');\n\t          }\n\t          binding = bindingsFound[0];\n\t          doPatch(patchCallback);\n\t        });\n\t      } else {\n\t        doPatch(patchCallback);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'declareExistential',\n\t    value: function declareExistential(x) {\n\t      if (!this._existentialVariables) this._existentialVariables = [];\n\t      this._existentialVariables.push(x);\n\t      return x;\n\t    }\n\t  }, {\n\t    key: 'initPropertyActions',\n\t    value: function initPropertyActions(features) {\n\t      // If the predicate is #type, use handleRDFType to create a typeCallback on the object\n\t      this.propertyActions['<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>'] = [handleRDFType];\n\t\n\t      // Assumption: these terms are not redirected @@fixme\n\t      if (ArrayIndexOf(features, 'sameAs') >= 0) {\n\t        this.propertyActions['<http://www.w3.org/2002/07/owl#sameAs>'] = [function (formula, subj, pred, obj, why) {\n\t          // log.warn(\"Equating \"+subj.uri+\" sameAs \"+obj.uri);  //@@\n\t          formula.equate(subj, obj);\n\t          return true; // true if statement given is NOT needed in the store\n\t        }]; // sameAs -> equate & don't add to index\n\t      }\n\t      if (ArrayIndexOf(features, 'InverseFunctionalProperty') >= 0) {\n\t        this.classActions['<' + owl_ns + 'InverseFunctionalProperty>'] = [function (formula, subj, pred, obj, addFn) {\n\t          // yes subj not pred!\n\t          return formula.newPropertyAction(subj, handle_IFP);\n\t        }]; // IFP -> handle_IFP, do add to index\n\t      }\n\t      if (ArrayIndexOf(features, 'FunctionalProperty') >= 0) {\n\t        this.classActions['<' + owl_ns + 'FunctionalProperty>'] = [function (formula, subj, proj, obj, addFn) {\n\t          return formula.newPropertyAction(subj, handle_FP);\n\t        }]; // FP => handleFP, do add to index\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Adds a triple to the store.\n\t     * Returns the statement added\n\t     * (would it be better to return the original formula for chaining?)\n\t     */\n\t\n\t  }, {\n\t    key: 'add',\n\t    value: function add(subj, pred, obj, why) {\n\t      var i;\n\t      if (arguments.length === 1) {\n\t        if (subj instanceof Array) {\n\t          for (i = 0; i < subj.length; i++) {\n\t            this.add(subj[i]);\n\t          }\n\t        } else if (subj instanceof Statement) {\n\t          this.add(subj.subject, subj.predicate, subj.object, subj.why);\n\t        } else if (subj instanceof IndexedFormula) {\n\t          this.add(subj.statements);\n\t        }\n\t        return this;\n\t      }\n\t      var actions;\n\t      var st;\n\t      if (!why) {\n\t        // system generated\n\t        why = this.fetcher ? this.fetcher.appNode : this.sym('chrome:theSession');\n\t      }\n\t      subj = Node.fromValue(subj);\n\t      pred = Node.fromValue(pred);\n\t      obj = Node.fromValue(obj);\n\t      why = Node.fromValue(why);\n\t      if (this.predicateCallback) {\n\t        this.predicateCallback(this, pred, why);\n\t      }\n\t      // Action return true if the statement does not need to be added\n\t      var predHash = this.canon(pred).hashString();\n\t      actions = this.propertyActions[predHash]; // Predicate hash\n\t      var done = false;\n\t      if (actions) {\n\t        // alert('type: '+typeof actions +' @@ actions='+actions)\n\t        for (i = 0; i < actions.length; i++) {\n\t          done = done || actions[i](this, subj, pred, obj, why);\n\t        }\n\t      }\n\t      if (this.holds(subj, pred, obj, why)) {\n\t        // Takes time but saves duplicates\n\t        // console.log('rdflib: Ignoring dup! {' + subj + ' ' + pred + ' ' + obj + ' ' + why + '}')\n\t        return null; // @@better to return self in all cases?\n\t      }\n\t      // If we are tracking provenance, every thing should be loaded into the store\n\t      // if (done) return new Statement(subj, pred, obj, why)\n\t      // Don't put it in the store\n\t      // still return this statement for owl:sameAs input\n\t      var hash = [this.canon(subj).hashString(), predHash, this.canon(obj).hashString(), this.canon(why).hashString()];\n\t      st = new Statement(subj, pred, obj, why);\n\t      for (i = 0; i < 4; i++) {\n\t        var ix = this.index[i];\n\t        var h = hash[i];\n\t        if (!ix[h]) {\n\t          ix[h] = [];\n\t        }\n\t        ix[h].push(st); // Set of things with this as subject, etc\n\t      }\n\t\n\t      // log.debug(\"ADDING    {\"+subj+\" \"+pred+\" \"+obj+\"} \"+why)\n\t      this.statements.push(st);\n\t      return st;\n\t    }\n\t  }, {\n\t    key: 'addAll',\n\t    value: function addAll(statements) {\n\t      var _this2 = this;\n\t\n\t      statements.forEach(function (quad) {\n\t        _this2.add(quad.subject, quad.predicate, quad.object, quad.graph);\n\t      });\n\t    }\n\t  }, {\n\t    key: 'any',\n\t    value: function any(s, p, o, g) {\n\t      var st = this.anyStatementMatching(s, p, o, g);\n\t      if (st == null) {\n\t        return void 0;\n\t      } else if (s == null) {\n\t        return st.subject;\n\t      } else if (p == null) {\n\t        return st.predicate;\n\t      } else if (o == null) {\n\t        return st.object;\n\t      }\n\t      return void 0;\n\t    }\n\t  }, {\n\t    key: 'anyValue',\n\t    value: function anyValue(s, p, o, g) {\n\t      var y = this.any(s, p, o, g);\n\t      return y ? y.value : void 0;\n\t    }\n\t  }, {\n\t    key: 'anyStatementMatching',\n\t    value: function anyStatementMatching(subj, pred, obj, why) {\n\t      var x = this.statementsMatching(subj, pred, obj, why, true);\n\t      if (!x || x.length === 0) {\n\t        return undefined;\n\t      }\n\t      return x[0];\n\t    }\n\t\n\t    /**\n\t     * Returns the symbol with canonical URI as smushed\n\t     */\n\t\n\t  }, {\n\t    key: 'canon',\n\t    value: function canon(term) {\n\t      if (!term) {\n\t        return term;\n\t      }\n\t      var y = this.redirections[term.hashString()];\n\t      if (!y) {\n\t        return term;\n\t      }\n\t      return y;\n\t    }\n\t  }, {\n\t    key: 'check',\n\t    value: function check() {\n\t      this.checkStatementList(this.statements);\n\t      for (var p = 0; p < 4; p++) {\n\t        var ix = this.index[p];\n\t        for (var key in ix) {\n\t          if (ix.hasOwnProperty(key)) {\n\t            this.checkStatementList(ix[key], p);\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Self-consistency checking for diagnostis only\n\t     * Is each statement properly indexed?\n\t     */\n\t\n\t  }, {\n\t    key: 'checkStatementList',\n\t    value: function checkStatementList(sts, from) {\n\t      var names = ['subject', 'predicate', 'object', 'why'];\n\t      var origin = ' found in ' + names[from] + ' index.';\n\t      var st;\n\t      for (var j = 0; j < sts.length; j++) {\n\t        st = sts[j];\n\t        var term = [st.subject, st.predicate, st.object, st.why];\n\t        var arrayContains = function arrayContains(a, x) {\n\t          for (var i = 0; i < a.length; i++) {\n\t            if (a[i].subject.sameTerm(x.subject) && a[i].predicate.sameTerm(x.predicate) && a[i].object.sameTerm(x.object) && a[i].why.sameTerm(x.why)) {\n\t              return true;\n\t            }\n\t          }\n\t        };\n\t        for (var p = 0; p < 4; p++) {\n\t          var c = this.canon(term[p]);\n\t          var h = c.hashString();\n\t          if (!this.index[p][h]) {\n\t            // throw new Error('No ' + name[p] + ' index for statement ' + st + '@' + st.why + origin)\n\t          } else {\n\t            if (!arrayContains(this.index[p][h], st)) {\n\t              // throw new Error('Index for ' + name[p] + ' does not have statement ' + st + '@' + st.why + origin)\n\t            }\n\t          }\n\t        }\n\t        if (!arrayContains(this.statements, st)) {\n\t          throw new Error('Statement list does not statement ' + st + '@' + st.why + origin);\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'close',\n\t    value: function close() {\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * replaces @template with @target and add appropriate triples (no triple\n\t     * removed)\n\t     * one-direction replication\n\t     * @method copyTo\n\t     */\n\t\n\t  }, {\n\t    key: 'copyTo',\n\t    value: function copyTo(template, target, flags) {\n\t      if (!flags) flags = [];\n\t      var statList = this.statementsMatching(template);\n\t      if (ArrayIndexOf(flags, 'two-direction') !== -1) {\n\t        statList.concat(this.statementsMatching(undefined, undefined, template));\n\t      }\n\t      for (var i = 0; i < statList.length; i++) {\n\t        var st = statList[i];\n\t        switch (st.object.termType) {\n\t          case 'NamedNode':\n\t            this.add(target, st.predicate, st.object);\n\t            break;\n\t          case 'Literal':\n\t          case 'BlankNode':\n\t          case 'collection':\n\t            this.add(target, st.predicate, st.object.copy(this));\n\t        }\n\t        if (ArrayIndexOf(flags, 'delete') !== -1) {\n\t          this.remove(st);\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * simplify graph in store when we realize two identifiers are equivalent\n\t     * We replace the bigger with the smaller.\n\t     */\n\t\n\t  }, {\n\t    key: 'equate',\n\t    value: function equate(u1, u2) {\n\t      // log.warn(\"Equating \"+u1+\" and \"+u2); // @@\n\t      // @@JAMBO Must canonicalize the uris to prevent errors from a=b=c\n\t      // 03-21-2010\n\t      u1 = this.canon(u1);\n\t      u2 = this.canon(u2);\n\t      var d = u1.compareTerm(u2);\n\t      if (!d) {\n\t        return true; // No information in {a = a}\n\t      }\n\t      // var big\n\t      // var small\n\t      if (d < 0) {\n\t        // u1 less than u2\n\t        return this.replaceWith(u2, u1);\n\t      } else {\n\t        return this.replaceWith(u1, u2);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'formula',\n\t    value: function formula(features) {\n\t      return new IndexedFormula(features);\n\t    }\n\t\n\t    /**\n\t     * Returns the number of statements contained in this IndexedFormula.\n\t     * (Getter proxy to this.statements).\n\t     * Usage:\n\t     *    ```\n\t     *    var kb = rdf.graph()\n\t     *    kb.length  // -> 0\n\t     *    ```\n\t     * @return {Number}\n\t     */\n\t\n\t  }, {\n\t    key: 'match',\n\t\n\t\n\t    /**\n\t     * Returns any quads matching the given arguments.\n\t     * Standard RDFJS Taskforce method for Source objects, implemented as an\n\t     * alias to `statementsMatching()`\n\t     * @method match\n\t     * @param subject {Node|String|Object}\n\t     * @param predicate {Node|String|Object}\n\t     * @param object {Node|String|Object}\n\t     * @param graph {NamedNode|String}\n\t     */\n\t    value: function match(subject, predicate, object, graph) {\n\t      return this.statementsMatching(Node.fromValue(subject), Node.fromValue(predicate), Node.fromValue(object), Node.fromValue(graph));\n\t    }\n\t\n\t    /**\n\t     * Find out whether a given URI is used as symbol in the formula\n\t     */\n\t\n\t  }, {\n\t    key: 'mentionsURI',\n\t    value: function mentionsURI(uri) {\n\t      var hash = '<' + uri + '>';\n\t      return !!this.subjectIndex[hash] || !!this.objectIndex[hash] || !!this.predicateIndex[hash];\n\t    }\n\t\n\t    // Existentials are BNodes - something exists without naming\n\t\n\t  }, {\n\t    key: 'newExistential',\n\t    value: function newExistential(uri) {\n\t      if (!uri) return this.bnode();\n\t      var x = this.sym(uri);\n\t      return this.declareExistential(x);\n\t    }\n\t  }, {\n\t    key: 'newPropertyAction',\n\t    value: function newPropertyAction(pred, action) {\n\t      // log.debug(\"newPropertyAction:  \"+pred)\n\t      var hash = pred.hashString();\n\t      if (!this.propertyActions[hash]) {\n\t        this.propertyActions[hash] = [];\n\t      }\n\t      this.propertyActions[hash].push(action);\n\t      // Now apply the function to to statements already in the store\n\t      var toBeFixed = this.statementsMatching(undefined, pred, undefined);\n\t      var done = false;\n\t      for (var i = 0; i < toBeFixed.length; i++) {\n\t        // NOT optimized - sort toBeFixed etc\n\t        done = done || action(this, toBeFixed[i].subject, pred, toBeFixed[i].object);\n\t      }\n\t      return done;\n\t    }\n\t\n\t    // Universals are Variables\n\t\n\t  }, {\n\t    key: 'newUniversal',\n\t    value: function newUniversal(uri) {\n\t      var x = this.sym(uri);\n\t      if (!this._universalVariables) this._universalVariables = [];\n\t      this._universalVariables.push(x);\n\t      return x;\n\t    }\n\t\n\t    // convenience function used by N3 parser\n\t\n\t  }, {\n\t    key: 'variable',\n\t    value: function variable(name) {\n\t      return new Variable(name);\n\t    }\n\t\n\t    /**\n\t     * Find an unused id for a file being edited: return a symbol\n\t     * (Note: Slow iff a lot of them -- could be O(log(k)) )\n\t     */\n\t\n\t  }, {\n\t    key: 'nextSymbol',\n\t    value: function nextSymbol(doc) {\n\t      for (var i = 0;; i++) {\n\t        var uri = doc.uri + '#n' + i;\n\t        if (!this.mentionsURI(uri)) return this.sym(uri);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'query',\n\t    value: function query(myQuery, callback, fetcher, onDone) {\n\t      var indexedFormulaQuery = __webpack_require__(74).indexedFormulaQuery;\n\t      return indexedFormulaQuery.call(this, myQuery, callback, fetcher, onDone);\n\t    }\n\t\n\t    /**\n\t     * Finds a statement object and removes it\n\t     */\n\t\n\t  }, {\n\t    key: 'remove',\n\t    value: function remove(st) {\n\t      if (st instanceof Array) {\n\t        for (var i = 0; i < st.length; i++) {\n\t          this.remove(st[i]);\n\t        }\n\t        return this;\n\t      }\n\t      if (st instanceof IndexedFormula) {\n\t        return this.remove(st.statements);\n\t      }\n\t      var sts = this.statementsMatching(st.subject, st.predicate, st.object, st.why);\n\t      if (!sts.length) {\n\t        throw new Error('Statement to be removed is not on store: ' + st);\n\t      }\n\t      this.removeStatement(sts[0]);\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Removes all statemnts in a doc\n\t     */\n\t\n\t  }, {\n\t    key: 'removeDocument',\n\t    value: function removeDocument(doc) {\n\t      var sts = this.statementsMatching(undefined, undefined, undefined, doc).slice(); // Take a copy as this is the actual index\n\t      for (var i = 0; i < sts.length; i++) {\n\t        this.removeStatement(sts[i]);\n\t      }\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * remove all statements matching args (within limit) *\n\t     */\n\t\n\t  }, {\n\t    key: 'removeMany',\n\t    value: function removeMany(subj, pred, obj, why, limit) {\n\t      // log.debug(\"entering removeMany w/ subj,pred,obj,why,limit = \" + subj +\", \"+ pred+\", \" + obj+\", \" + why+\", \" + limit)\n\t      var sts = this.statementsMatching(subj, pred, obj, why, false);\n\t      // This is a subtle bug that occcured in updateCenter.js too.\n\t      // The fact is, this.statementsMatching returns this.whyIndex instead of a copy of it\n\t      // but for perfromance consideration, it's better to just do that\n\t      // so make a copy here.\n\t      var statements = [];\n\t      for (var i = 0; i < sts.length; i++) {\n\t        statements.push(sts[i]);\n\t      }if (limit) statements = statements.slice(0, limit);\n\t      for (i = 0; i < statements.length; i++) {\n\t        this.remove(statements[i]);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'removeMatches',\n\t    value: function removeMatches(subject, predicate, object, why) {\n\t      this.removeStatements(this.statementsMatching(subject, predicate, object, why));\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Remove a particular statement object from the store\n\t     *\n\t     * st    a statement which is already in the store and indexed.\n\t     *      Make sure you only use this for these.\n\t     *    Otherwise, you should use remove() above.\n\t     */\n\t\n\t  }, {\n\t    key: 'removeStatement',\n\t    value: function removeStatement(st) {\n\t      // log.debug(\"entering remove w/ st=\" + st)\n\t      var term = [st.subject, st.predicate, st.object, st.why];\n\t      for (var p = 0; p < 4; p++) {\n\t        var c = this.canon(term[p]);\n\t        var h = c.hashString();\n\t        if (!this.index[p][h]) {\n\t          // log.warn (\"Statement removal: no index '+p+': \"+st)\n\t        } else {\n\t          RDFArrayRemove(this.index[p][h], st);\n\t        }\n\t      }\n\t      RDFArrayRemove(this.statements, st);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'removeStatements',\n\t    value: function removeStatements(sts) {\n\t      for (var i = 0; i < sts.length; i++) {\n\t        this.remove(sts[i]);\n\t      }\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Replace big with small, obsoleted with obsoleting.\n\t     */\n\t\n\t  }, {\n\t    key: 'replaceWith',\n\t    value: function replaceWith(big, small) {\n\t      // log.debug(\"Replacing \"+big+\" with \"+small) // @@\n\t      var oldhash = big.hashString();\n\t      var newhash = small.hashString();\n\t      var moveIndex = function moveIndex(ix) {\n\t        var oldlist = ix[oldhash];\n\t        if (!oldlist) {\n\t          return; // none to move\n\t        }\n\t        var newlist = ix[newhash];\n\t        if (!newlist) {\n\t          ix[newhash] = oldlist;\n\t        } else {\n\t          ix[newhash] = oldlist.concat(newlist);\n\t        }\n\t        delete ix[oldhash];\n\t      };\n\t      // the canonical one carries all the indexes\n\t      for (var i = 0; i < 4; i++) {\n\t        moveIndex(this.index[i]);\n\t      }\n\t      this.redirections[oldhash] = small;\n\t      if (big.uri) {\n\t        // @@JAMBO: must update redirections,aliases from sub-items, too.\n\t        if (!this.aliases[newhash]) {\n\t          this.aliases[newhash] = [];\n\t        }\n\t        this.aliases[newhash].push(big); // Back link\n\t        if (this.aliases[oldhash]) {\n\t          for (i = 0; i < this.aliases[oldhash].length; i++) {\n\t            this.redirections[this.aliases[oldhash][i].hashString()] = small;\n\t            this.aliases[newhash].push(this.aliases[oldhash][i]);\n\t          }\n\t        }\n\t        this.add(small, this.sym('http://www.w3.org/2007/ont/link#uri'), big.uri);\n\t        // If two things are equal, and one is requested, we should request the other.\n\t        if (this.fetcher) {\n\t          this.fetcher.nowKnownAs(big, small);\n\t        }\n\t      }\n\t      moveIndex(this.classActions);\n\t      moveIndex(this.propertyActions);\n\t      // log.debug(\"Equate done. \"+big+\" to be known as \"+small)\n\t      return true; // true means the statement does not need to be put in\n\t    }\n\t\n\t    /**\n\t     * Return all equivalent URIs by which this is known\n\t     */\n\t\n\t  }, {\n\t    key: 'allAliases',\n\t    value: function allAliases(x) {\n\t      var a = this.aliases[this.canon(x).hashString()] || [];\n\t      a.push(this.canon(x));\n\t      return a;\n\t    }\n\t\n\t    /**\n\t     * Compare by canonical URI as smushed\n\t     */\n\t\n\t  }, {\n\t    key: 'sameThings',\n\t    value: function sameThings(x, y) {\n\t      if (x.sameTerm(y)) {\n\t        return true;\n\t      }\n\t      var x1 = this.canon(x);\n\t      //    alert('x1='+x1)\n\t      if (!x1) return false;\n\t      var y1 = this.canon(y);\n\t      //    alert('y1='+y1); //@@\n\t      if (!y1) return false;\n\t      return x1.uri === y1.uri;\n\t    }\n\t  }, {\n\t    key: 'setPrefixForURI',\n\t    value: function setPrefixForURI(prefix, nsuri) {\n\t      // TODO: This is a hack for our own issues, which ought to be fixed\n\t      // post-release\n\t      // See http://dig.csail.mit.edu/cgi-bin/roundup.cgi/$rdf/issue227\n\t      if (prefix === 'tab' && this.namespaces['tab']) {\n\t        return;\n\t      } // There are files around with long badly generated prefixes like this\n\t      if (prefix.slice(0, 2) === 'ns' || prefix.slice(0, 7) === 'default') {\n\t        return;\n\t      }\n\t      this.namespaces[prefix] = nsuri;\n\t    }\n\t\n\t    /**\n\t     * Return statements matching a pattern\n\t     * ALL CONVENIENCE LOOKUP FUNCTIONS RELY ON THIS!\n\t     */\n\t\n\t  }, {\n\t    key: 'statementsMatching',\n\t    value: function statementsMatching(subj, pred, obj, why, justOne) {\n\t      // log.debug(\"Matching {\"+subj+\" \"+pred+\" \"+obj+\"}\")\n\t      var pat = [subj, pred, obj, why];\n\t      var pattern = [];\n\t      var hash = [];\n\t      var wild = []; // wildcards\n\t      var given = []; // Not wild\n\t      var p;\n\t      var list;\n\t      for (p = 0; p < 4; p++) {\n\t        pattern[p] = this.canon(Node.fromValue(pat[p]));\n\t        if (!pattern[p]) {\n\t          wild.push(p);\n\t        } else {\n\t          given.push(p);\n\t          hash[p] = pattern[p].hashString();\n\t        }\n\t      }\n\t      if (given.length === 0) {\n\t        return this.statements;\n\t      }\n\t      if (given.length === 1) {\n\t        // Easy too, we have an index for that\n\t        p = given[0];\n\t        list = this.index[p][hash[p]];\n\t        if (list && justOne) {\n\t          if (list.length > 1) {\n\t            list = list.slice(0, 1);\n\t          }\n\t        }\n\t        list = list || [];\n\t        return list;\n\t      }\n\t      // Now given.length is 2, 3 or 4.\n\t      // We hope that the scale-free nature of the data will mean we tend to get\n\t      // a short index in there somewhere!\n\t      var best = 1e10; // really bad\n\t      var best_i;\n\t      var i;\n\t      for (i = 0; i < given.length; i++) {\n\t        p = given[i]; // Which part we are dealing with\n\t        list = this.index[p][hash[p]];\n\t        if (!list) {\n\t          return []; // No occurrences\n\t        }\n\t        if (list.length < best) {\n\t          best = list.length;\n\t          best_i = i; // (not p!)\n\t        }\n\t      }\n\t      // Ok, we have picked the shortest index but now we have to filter it\n\t      var best_p = given[best_i];\n\t      var possibles = this.index[best_p][hash[best_p]];\n\t      var check = given.slice(0, best_i).concat(given.slice(best_i + 1)); // remove best_i\n\t      var results = [];\n\t      var parts = ['subject', 'predicate', 'object', 'why'];\n\t      for (var j = 0; j < possibles.length; j++) {\n\t        var st = possibles[j];\n\t\n\t        for (i = 0; i < check.length; i++) {\n\t          // for each position to be checked\n\t          p = check[i];\n\t          if (!this.canon(st[parts[p]]).sameTerm(pattern[p])) {\n\t            st = null;\n\t            break;\n\t          }\n\t        }\n\t        if (st != null) {\n\t          results.push(st);\n\t          if (justOne) break;\n\t        }\n\t      }\n\t      return results;\n\t    }\n\t\n\t    /**\n\t     *  A list of all the URIs by which this thing is known\n\t     */\n\t\n\t  }, {\n\t    key: 'uris',\n\t    value: function uris(term) {\n\t      var cterm = this.canon(term);\n\t      var terms = this.aliases[cterm.hashString()];\n\t      if (!cterm.uri) return [];\n\t      var res = [cterm.uri];\n\t      if (terms) {\n\t        for (var i = 0; i < terms.length; i++) {\n\t          res.push(terms[i].uri);\n\t        }\n\t      }\n\t      return res;\n\t    }\n\t  }, {\n\t    key: 'length',\n\t    get: function get() {\n\t      return this.statements.length;\n\t    }\n\t  }]);\n\t\n\t  return IndexedFormula;\n\t}(Formula);\n\t\n\texports.default = IndexedFormula;\n\t\n\t\n\tIndexedFormula.handleRDFType = handleRDFType;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(module) {'use strict';\n\t\n\t/**\n\t * Utility functions for $rdf\n\t * @module util\n\t */\n\tvar docpart = __webpack_require__(7).docpart;\n\tvar log = __webpack_require__(15);\n\tvar NamedNode = __webpack_require__(8);\n\t\n\tmodule.exports.AJAR_handleNewTerm = ajarHandleNewTerm;\n\tmodule.exports.ArrayIndexOf = arrayIndexOf;\n\tmodule.exports.callbackify = callbackify;\n\tmodule.exports.dtstamp = dtstamp;\n\tmodule.exports.DOMParserFactory = domParser;\n\tmodule.exports.domToString = domToString;\n\tmodule.exports.dumpNode = dumpNode;\n\tmodule.exports.getHTTPHeaders = getHTTPHeaders;\n\tmodule.exports.heavyCompare = heavyCompare;\n\tmodule.exports.heavyCompareSPO = heavyCompareSPO;\n\tmodule.exports.output = output;\n\tmodule.exports.parseXML = parseXML;\n\tmodule.exports.RDFArrayRemove = rdfArrayRemove;\n\tmodule.exports.stackString = stackString;\n\tmodule.exports.string_startswith = stringStartsWith;\n\tmodule.exports.string = {};\n\tmodule.exports.string.template = stringTemplate;\n\tmodule.exports.uri = __webpack_require__(7); // TODO: Remove this mixed usage\n\t// module.exports.variablesIn = variablesIn\n\tmodule.exports.XMLHTTPFactory = xhr;\n\tmodule.exports.log = log;\n\t\n\tmodule.exports.mediaTypeClass = function (mediaType) {\n\t  return new NamedNode('http://www.w3.org/ns/iana/media-types/' + mediaType + '#Resource');\n\t};\n\t\n\t/**\n\t * Loads ontologies of the data we load (this is the callback from the kb to\n\t * the fetcher). Exports as `AJAR_handleNewTerm`\n\t */\n\tfunction ajarHandleNewTerm(kb, p, requestedBy) {\n\t  var sf = null;\n\t  if (typeof kb.fetcher !== 'undefined') {\n\t    sf = kb.fetcher;\n\t  } else {\n\t    return;\n\t  }\n\t  if (p.termType !== 'NamedNode') return;\n\t  var docuri = docpart(p.uri);\n\t  var fixuri;\n\t  if (p.uri.indexOf('#') < 0) {\n\t    // No hash\n\t    // @@ major hack for dbpedia Categories, which spread indefinitely\n\t    if (stringStartsWith(p.uri, 'http://dbpedia.org/resource/Category:')) return;\n\t\n\t    /*\n\t      if (string_startswith(p.uri, 'http://xmlns.com/foaf/0.1/')) {\n\t      fixuri = \"http://dig.csail.mit.edu/2005/ajar/ajaw/test/foaf\"\n\t      // should give HTTP 303 to ontology -- now is :-)\n\t      } else\n\t    */\n\t    if (stringStartsWith(p.uri, 'http://purl.org/dc/elements/1.1/') || stringStartsWith(p.uri, 'http://purl.org/dc/terms/')) {\n\t      fixuri = 'http://dublincore.org/2005/06/13/dcq';\n\t      // dc fetched multiple times\n\t    } else if (stringStartsWith(p.uri, 'http://xmlns.com/wot/0.1/')) {\n\t      fixuri = 'http://xmlns.com/wot/0.1/index.rdf';\n\t    } else if (stringStartsWith(p.uri, 'http://web.resource.org/cc/')) {\n\t      //            log.warn(\"creative commons links to html instead of rdf. doesn't seem to content-negotiate.\")\n\t      fixuri = 'http://web.resource.org/cc/schema.rdf';\n\t    }\n\t  }\n\t  if (fixuri) {\n\t    docuri = fixuri;\n\t  }\n\t  if (sf && sf.getState(docuri) !== 'unrequested') return;\n\t\n\t  if (fixuri) {\n\t    // only give warning once: else happens too often\n\t    log.warn('Assuming server still broken, faking redirect of <' + p.uri + '> to <' + docuri + '>');\n\t  }\n\t  sf.requestURI(docuri, requestedBy);\n\t}\n\t\n\t/**\n\t * Exports as `ArrayIndexOf`.\n\t */\n\tfunction arrayIndexOf(arr, item, i) {\n\t  i || (i = 0);\n\t  var length = arr.length;\n\t  if (i < 0) i = length + i;\n\t  for (; i < length; i++) {\n\t    if (arr[i] === item) {\n\t      return i;\n\t    }\n\t  }\n\t  return -1;\n\t}\n\t\n\t/**\n\t * Adds callback functionality to an object.\n\t * Callback functions are indexed by a 'hook' string.\n\t * They return true if they want to be called again.\n\t * @method callbackify\n\t * @param obj {Object}\n\t * @param callbacks {Array<Function>}\n\t */\n\tfunction callbackify(obj, callbacks) {\n\t  obj.callbacks = {};\n\t  for (var x = callbacks.length - 1; x >= 0; x--) {\n\t    obj.callbacks[callbacks[x]] = [];\n\t  }\n\t\n\t  obj.addHook = function (hook) {\n\t    if (!obj.callbacks[hook]) {\n\t      obj.callbacks[hook] = [];\n\t    }\n\t  };\n\t\n\t  obj.addCallback = function (hook, func) {\n\t    obj.callbacks[hook].push(func);\n\t  };\n\t\n\t  obj.removeCallback = function (hook, funcName) {\n\t    for (var i = 0; i < obj.callbacks[hook].length; i++) {\n\t      if (obj.callbacks[hook][i].name === funcName) {\n\t        obj.callbacks[hook].splice(i, 1);\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  };\n\t\n\t  obj.insertCallback = function (hook, func) {\n\t    obj.callbacks[hook].unshift(func);\n\t  };\n\t\n\t  obj.fireCallbacks = function (hook, args) {\n\t    var newCallbacks = [];\n\t    var replaceCallbacks = [];\n\t    var len = obj.callbacks[hook].length;\n\t    var x;\n\t    // log.info('!@$ Firing '+hook+' call back with length'+len)\n\t    for (x = len - 1; x >= 0; x--) {\n\t      // log.info('@@ Firing '+hook+' callback '+ obj.callbacks[hook][x])\n\t      if (obj.callbacks[hook][x].apply(obj, args)) {\n\t        newCallbacks.push(obj.callbacks[hook][x]);\n\t      }\n\t    }\n\t\n\t    for (x = newCallbacks.length - 1; x >= 0; x--) {\n\t      replaceCallbacks.push(newCallbacks[x]);\n\t    }\n\t\n\t    for (x = len; x < obj.callbacks[hook].length; x++) {\n\t      replaceCallbacks.push(obj.callbacks[hook][x]);\n\t    }\n\t\n\t    obj.callbacks[hook] = replaceCallbacks;\n\t  };\n\t}\n\t\n\t/**\n\t * Returns a DOM parser based on current runtime environment.\n\t * Exports as `DOMParserFactory`\n\t */\n\tfunction domParser() {\n\t  if (tabulator && tabulator.isExtension) {\n\t    return Components.classes['@mozilla.org/xmlextras/domparser;1'].getService(Components.interfaces.nsIDOMParser);\n\t  } else if (window.DOMParser) {\n\t    return new DOMParser();\n\t  } else if (window.ActiveXObject) {\n\t    return new ActiveXObject('Microsoft.XMLDOM');\n\t  } else {\n\t    return false;\n\t  }\n\t}\n\t\n\t// From https://github.com/linkeddata/dokieli\n\tfunction domToString(node, options) {\n\t  options = options || {};\n\t  var selfClosing = [];\n\t  if ('selfClosing' in options) {\n\t    options.selfClosing.split(' ').forEach(function (n) {\n\t      selfClosing[n] = true;\n\t    });\n\t  }\n\t  var skipAttributes = [];\n\t  if ('skipAttributes' in options) {\n\t    options.skipAttributes.split(' ').forEach(function (n) {\n\t      skipAttributes[n] = true;\n\t    });\n\t  }\n\t  return dumpNode(node, options, selfClosing, skipAttributes);\n\t}\n\t\n\tfunction dumpNode(node, options, selfClosing, skipAttributes) {\n\t  var i;\n\t  var out = '';\n\t  var noEsc = [false];\n\t  if (typeof node.nodeType === 'undefined') return out;\n\t  if (node.nodeType === 1) {\n\t    if (node.hasAttribute('class') && 'classWithChildText' in options && node.matches(options.classWithChildText.class)) {\n\t      out += node.querySelector(options.classWithChildText.element).textContent;\n\t    } else if (!('skipNodeWithClass' in options && node.matches('.' + options.skipNodeWithClass))) {\n\t      var ename = node.nodeName.toLowerCase();\n\t      out += '<' + ename;\n\t\n\t      var attrList = [];\n\t      for (i = node.attributes.length - 1; i >= 0; i--) {\n\t        var atn = node.attributes[i];\n\t        if (skipAttributes.length > 0 && skipAttributes[atn.name]) continue;\n\t        if (/^\\d+$/.test(atn.name)) continue;\n\t        if (atn.name === 'class' && 'replaceClassItemWith' in options && atn.value.split(' ').indexOf(options.replaceClassItemWith.source) > -1) {\n\t          var re = new RegExp(options.replaceClassItemWith.source, 'g');\n\t          atn.value = atn.value.replace(re, options.replaceClassItemWith.target).trim();\n\t        }\n\t        if (!(atn.name === 'class' && 'skipClassWithValue' in options && options.skipClassWithValue === atn.value)) {\n\t          attrList.push(atn.name + '=\\'' + atn.value.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/'/g, '&quot;') + '\\'');\n\t        }\n\t      }\n\t      if (attrList.length > 0) {\n\t        if ('sortAttributes' in options && options.sortAttributes) {\n\t          attrList.sort(function (a, b) {\n\t            return a.toLowerCase().localeCompare(b.toLowerCase());\n\t          });\n\t        }\n\t        out += ' ' + attrList.join(' ');\n\t      }\n\t      if (selfClosing[ename]) {\n\t        out += ' />';\n\t      } else {\n\t        out += '>';\n\t        out += ename === 'html' ? '\\n  ' : '';\n\t        noEsc.push(ename === 'style' || ename === 'script');\n\t        for (i = 0; i < node.childNodes.length; i++) {\n\t          out += dumpNode(node.childNodes[i]);\n\t        }noEsc.pop();\n\t        out += ename === 'body' ? '</' + ename + '>' + '\\n' : '</' + ename + '>';\n\t      }\n\t    }\n\t  } else if (node.nodeType === 8) {\n\t    // FIXME: If comments are not tabbed in source, a new line is not prepended\n\t    out += '<!--' + node.nodeValue + '-->';\n\t  } else if (node.nodeType === 3 || node.nodeType === 4) {\n\t    // XXX: Remove new lines which were added after DOM ready\n\t    var nl = node.nodeValue.replace(/\\n+$/, '');\n\t    out += noEsc[noEsc.length - 1] ? nl : nl.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n\t  } else {\n\t    console.log('Warning; Cannot handle serialising nodes of type: ' + node.nodeType);\n\t    console.log(node);\n\t  }\n\t  return out;\n\t}\n\t\n\tfunction dtstamp() {\n\t  var now = new Date();\n\t  var year = now.getYear() + 1900;\n\t  var month = now.getMonth() + 1;\n\t  var day = now.getDate();\n\t  var hour = now.getUTCHours();\n\t  var minute = now.getUTCMinutes();\n\t  var second = now.getSeconds();\n\t  if (month < 10) month = '0' + month;\n\t  if (day < 10) day = '0' + day;\n\t  if (hour < 10) hour = '0' + hour;\n\t  if (minute < 10) minute = '0' + minute;\n\t  if (second < 10) second = '0' + second;\n\t  return year + '-' + month + '-' + day + 'T' + hour + ':' + minute + ':' + second + 'Z';\n\t}\n\t\n\t/**\n\t * Returns a hashmap of HTTP headers and their values.\n\t * @@ Bug: Assumes that each header only occurs once.\n\t * Also note that a , in a header value is just the same as having two headers.\n\t */\n\tfunction getHTTPHeaders(xhr) {\n\t  var lines = xhr.getAllResponseHeaders().split('\\n');\n\t  var headers = {};\n\t  var last;\n\t  for (var x = 0; x < lines.length; x++) {\n\t    if (lines[x].length > 0) {\n\t      var pair = lines[x].split(': ');\n\t      if (typeof pair[1] === 'undefined') {\n\t        // continuation\n\t        headers[last] += '\\n' + pair[0];\n\t      } else {\n\t        last = pair[0].toLowerCase();\n\t        headers[last] = pair[1];\n\t      }\n\t    }\n\t  }\n\t  return headers;\n\t}\n\t\n\t/**\n\t * Compares statements (heavy comparison for repeatable canonical ordering)\n\t */\n\tfunction heavyCompare(x, y, g) {\n\t  var nonBlank = function nonBlank(x) {\n\t    return x.termType === 'BlankNode' ? null : x;\n\t  };\n\t  var signature = function signature(b) {\n\t    var lis = g.statementsMatching(x).map(function (st) {\n\t      return '' + nonBlank(st.subject) + ' ' + nonBlank(st.predicate) + ' ' + nonBlank(st.object);\n\t    }).concat(g.statementsMatching(undefined, undefined, x).map(function (st) {\n\t      return '' + nonBlank(st.subject) + ' ' + nonBlank(st.predicate) + ' ' + nonBlank(st.object);\n\t    }));\n\t    lis.sort();\n\t    return lis.join('\\n');\n\t  };\n\t  if (x.termType === 'BlankNode' || y.termType === 'BlankNode') {\n\t    if (x.compareTerm(y) === 0) return 0; // Same\n\t    if (signature(x) > signature(y)) return +1;\n\t    if (signature(x) < signature(y)) return -1;\n\t    return x.compareTerm(y); // Too bad -- this order not canonical.\n\t    // throw \"different bnodes indistinquishable for sorting\"\n\t  } else {\n\t    return x.compareTerm(y);\n\t  }\n\t}\n\t\n\tfunction heavyCompareSPO(x, y, g) {\n\t  var d = heavyCompare(x.subject, y.subject, g);\n\t  if (d) return d;\n\t  d = heavyCompare(x.predicate, y.predicate, g);\n\t  if (d) return d;\n\t  return heavyCompare(x.object, y.object, g);\n\t}\n\t\n\t/**\n\t * Defines a simple debugging function\n\t * @method output\n\t * @param o {String}\n\t */\n\tfunction output(o) {\n\t  var k = document.createElement('div');\n\t  k.textContent = o;\n\t  document.body.appendChild(k);\n\t}\n\t\n\t/**\n\t * Returns a DOM from parsex XML.\n\t */\n\tfunction parseXML(str, options) {\n\t  var dparser;\n\t  options = options || {};\n\t  if (typeof tabulator !== 'undefined' && tabulator.isExtension) {\n\t    dparser = Components.classes['@mozilla.org/xmlextras/domparser;1'].getService(Components.interfaces.nsIDOMParser);\n\t  } else if (typeof module !== 'undefined' && module && module.exports) {\n\t    // Node.js\n\t    // var libxmljs = require('libxmljs'); // Was jsdom before 2012-01 then libxmljs but that nonstandard\n\t    // return libxmljs.parseXmlString(str)\n\t\n\t    // var jsdom = require('jsdom');   2012-01 though 2015-08 no worky with new Node\n\t    // var dom = jsdom.jsdom(str, undefined, {} );// html, level, options\n\t\n\t    var DOMParser = __webpack_require__(16).DOMParser; // 2015-08 on https://github.com/jindw/xmldom\n\t    var dom = new DOMParser().parseFromString(str, options.contentType || 'application/xhtml+xml');\n\t    return dom;\n\t  } else {\n\t    if (typeof window !== 'undefined' && window.DOMParser) {\n\t      dparser = new window.DOMParser(); // seems to actually work\n\t    } else {\n\t      dparser = new DOMParser(); // Doc says this works\n\t    }\n\t  }\n\t  return dparser.parseFromString(str, 'application/xml');\n\t}\n\t\n\t/**\n\t * Removes all statements equal to x from a\n\t * Exports as `RDFArrayRemove`\n\t */\n\tfunction rdfArrayRemove(a, x) {\n\t  for (var i = 0; i < a.length; i++) {\n\t    // TODO: This used to be the following, which didnt always work..why\n\t    // if(a[i] === x)\n\t    if (a[i].subject.sameTerm(x.subject) && a[i].predicate.sameTerm(x.predicate) && a[i].object.sameTerm(x.object) && a[i].why.sameTerm(x.why)) {\n\t      a.splice(i, 1);\n\t      return;\n\t    }\n\t  }\n\t  throw new Error('RDFArrayRemove: Array did not contain ' + x + ' ' + x.why);\n\t}\n\t\n\tfunction stringStartsWith(str, pref) {\n\t  // missing library routines\n\t  return str.slice(0, pref.length) === pref;\n\t}\n\t\n\t/**\n\t * C++, python style %s -> subs\n\t */\n\tfunction stringTemplate(base, subs) {\n\t  var baseA = base.split('%s');\n\t  var result = '';\n\t  for (var i = 0; i < subs.length; i++) {\n\t    subs[i] += '';\n\t    result += baseA[i] + subs[i];\n\t  }\n\t  return result + baseA.slice(subs.length).join();\n\t}\n\t\n\t// Stack dump on errors - to pass errors back\n\t\n\tfunction stackString(e) {\n\t  var str = '' + e + '\\n';\n\t  if (!e.stack) {\n\t    return str + 'No stack available.\\n';\n\t  }\n\t  var lines = e.stack.toString().split('\\n');\n\t  var toprint = [];\n\t  for (var i = 0; i < lines.length; i++) {\n\t    var line = lines[i];\n\t    if (line.indexOf('ecmaunit.js') > -1) {\n\t      // remove useless bit of traceback\n\t      break;\n\t    }\n\t    if (line.charAt(0) == '(') {\n\t      line = 'function' + line;\n\t    }\n\t    var chunks = line.split('@');\n\t    toprint.push(chunks);\n\t  }\n\t  // toprint.reverse();  No - I prefer the latest at the top by the error message -tbl\n\t\n\t  for (var i = 0; i < toprint.length; i++) {\n\t    str += '  ' + toprint[i][1] + '\\n    ' + toprint[i][0];\n\t  }\n\t  return str;\n\t}\n\t\n\t/**\n\t * Finds the variables in a graph (shallow).\n\t * Note: UNUSED.\n\t */\n\t// function variablesIn (g) {\n\t//   for (var i = 0; i < g.statements.length; i++) {\n\t//     var st = g.statatements[i]\n\t//     var vars = {}\n\t//     if (st.subject instanceof $rdf.Variable) {\n\t//       vars[st.subject.toNT()] = true\n\t//     }\n\t//     if (st.predicate instanceof $rdf.Variable) {\n\t//       vars[st.predicate.toNT()] = true\n\t//     }\n\t//     if (st.object instanceof $rdf.Variable) {\n\t//       vars[st.object.toNT()] = true\n\t//     }\n\t//   }\n\t//   return vars\n\t// }\n\t\n\t/**\n\t * Returns an XMLHttpRequest object for the appropriate current runtime\n\t * environment. Exports as `XMLHTTPFactory`\n\t */\n\tfunction xhr() {\n\t  var XMLHttpRequest;\n\t  // Running inside the Tabulator Firefox extension\n\t  if (typeof tabulator !== 'undefined' && tabulator.isExtension) {\n\t    // Cannot use XMLHttpRequest natively, must request it through SDK\n\t    return Components.classes['@mozilla.org/xmlextras/xmlhttprequest;1'].createInstance().QueryInterface(Components.interfaces.nsIXMLHttpRequest);\n\t  } else if (typeof window !== 'undefined' && 'XMLHttpRequest' in window) {\n\t    // Running inside the browser\n\t    XMLHttpRequest = window.XMLHttpRequest;\n\t    return new XMLHttpRequest();\n\t  } else if (typeof module !== 'undefined' && module && module.exports) {\n\t    // Running in Node.js\n\t    XMLHttpRequest = __webpack_require__(19).XMLHttpRequest;\n\t    return new XMLHttpRequest();\n\t  } else if (window.ActiveXObject) {\n\t    try {\n\t      return new ActiveXObject('Msxml2.XMLHTTP');\n\t    } catch (e) {\n\t      return new ActiveXObject('Microsoft.XMLHTTP');\n\t    }\n\t  } else {\n\t    return false;\n\t  }\n\t}\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)(module)))\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/*\n\t * Implements URI-specific functions\n\t *\n\t * See RFC 2386\n\t *\n\t * See also:\n\t *   http://www.w3.org/2005/10/ajaw/uri.js\n\t *   http://www.w3.org/2000/10/swap/uripath.py\n\t *\n\t */\n\tvar alert = alert || console.log;\n\t\n\tmodule.exports.docpart = docpart;\n\tmodule.exports.document = document;\n\tmodule.exports.hostpart = hostpart;\n\tmodule.exports.join = join;\n\tmodule.exports.protocol = protocol;\n\tmodule.exports.refTo = refTo;\n\t\n\tvar NamedNode = __webpack_require__(8);\n\t\n\tfunction docpart(uri) {\n\t  var i;\n\t  i = uri.indexOf('#');\n\t  if (i < 0) {\n\t    return uri;\n\t  } else {\n\t    return uri.slice(0, i);\n\t  }\n\t}\n\t\n\tfunction document(x) {\n\t  return new NamedNode(docpart(x.uri));\n\t}\n\t\n\tfunction hostpart(u) {\n\t  var m = /[^\\/]*\\/\\/([^\\/]*)\\//.exec(u);\n\t  if (m) {\n\t    return m[1];\n\t  } else {\n\t    return '';\n\t  }\n\t}\n\t\n\tfunction join(given, base) {\n\t  var baseColon, baseScheme, baseSingle;\n\t  var colon, lastSlash, path;\n\t  var baseHash = base.indexOf('#');\n\t  if (baseHash > 0) {\n\t    base = base.slice(0, baseHash);\n\t  }\n\t  if (given.length === 0) {\n\t    return base;\n\t  }\n\t  if (given.indexOf('#') === 0) {\n\t    return base + given;\n\t  }\n\t  colon = given.indexOf(':');\n\t  if (colon >= 0) {\n\t    return given;\n\t  }\n\t  baseColon = base.indexOf(':');\n\t  if (base.length === 0) {\n\t    return given;\n\t  }\n\t  if (baseColon < 0) {\n\t    alert('Invalid base: ' + base + ' in join with given: ' + given);\n\t    return given;\n\t  }\n\t  baseScheme = base.slice(0, +baseColon + 1 || 9e9);\n\t  if (given.indexOf('//') === 0) {\n\t    return baseScheme + given;\n\t  }\n\t  if (base.indexOf('//', baseColon) === baseColon + 1) {\n\t    baseSingle = base.indexOf('/', baseColon + 3);\n\t    if (baseSingle < 0) {\n\t      if (base.length - baseColon - 3 > 0) {\n\t        return base + '/' + given;\n\t      } else {\n\t        return baseScheme + given;\n\t      }\n\t    }\n\t  } else {\n\t    baseSingle = base.indexOf('/', baseColon + 1);\n\t    if (baseSingle < 0) {\n\t      if (base.length - baseColon - 1 > 0) {\n\t        return base + '/' + given;\n\t      } else {\n\t        return baseScheme + given;\n\t      }\n\t    }\n\t  }\n\t  if (given.indexOf('/') === 0) {\n\t    return base.slice(0, baseSingle) + given;\n\t  }\n\t  path = base.slice(baseSingle);\n\t  lastSlash = path.lastIndexOf('/');\n\t  if (lastSlash < 0) {\n\t    return baseScheme + given;\n\t  }\n\t  if (lastSlash >= 0 && lastSlash < path.length - 1) {\n\t    path = path.slice(0, +lastSlash + 1 || 9e9);\n\t  }\n\t  path += given;\n\t  while (path.match(/[^\\/]*\\/\\.\\.\\//)) {\n\t    path = path.replace(/[^\\/]*\\/\\.\\.\\//, '');\n\t  }\n\t  path = path.replace(/\\.\\//g, '');\n\t  path = path.replace(/\\/\\.$/, '/');\n\t  return base.slice(0, baseSingle) + path;\n\t}\n\t\n\tfunction protocol(uri) {\n\t  var i;\n\t  i = uri.indexOf(':');\n\t  if (i < 0) {\n\t    return null;\n\t  } else {\n\t    return uri.slice(0, i);\n\t  }\n\t}\n\t\n\tfunction refTo(base, uri) {\n\t  var c, i, k, l, len, len1, n, o, p, q, ref, ref1, s;\n\t  var commonHost = new RegExp('^[-_a-zA-Z0-9.]+:(//[^/]*)?/[^/]*$');\n\t  if (!base) {\n\t    return uri;\n\t  }\n\t  if (base === uri) {\n\t    return '';\n\t  }\n\t  for (i = o = 0, len = uri.length; o < len; i = ++o) {\n\t    c = uri[i];\n\t    if (c !== base[i]) {\n\t      break;\n\t    }\n\t  }\n\t  if (base.slice(0, i).match(commonHost)) {\n\t    k = uri.indexOf('//');\n\t    if (k < 0) {\n\t      k = -2;\n\t    }\n\t    l = uri.indexOf('/', k + 2);\n\t    if (uri[l + 1] !== '/' && base[l + 1] !== '/' && uri.slice(0, l) === base.slice(0, l)) {\n\t      return uri.slice(l);\n\t    }\n\t  }\n\t  if (uri[i] === '#' && base.length === i) {\n\t    return uri.slice(i);\n\t  }\n\t  while (i > 0 && uri[i - 1] !== '/') {\n\t    i--;\n\t  }\n\t  if (i < 3) {\n\t    return uri;\n\t  }\n\t  if (base.indexOf('//', i - 2) > 0 || uri.indexOf('//', i - 2) > 0) {\n\t    return uri;\n\t  }\n\t  if (base.indexOf(':', i) > 0) {\n\t    return uri;\n\t  }\n\t  n = 0;\n\t  ref = base.slice(i);\n\t  for (p = 0, len1 = ref.length; p < len1; p++) {\n\t    c = ref[p];\n\t    if (c === '/') {\n\t      n++;\n\t    }\n\t  }\n\t  if (n === 0 && i < uri.length && uri[i] === '#') {\n\t    return './' + uri.slice(i);\n\t  }\n\t  if (n === 0 && i === uri.length) {\n\t    return './';\n\t  }\n\t  s = '';\n\t  if (n > 0) {\n\t    for (q = 1, ref1 = n; ref1 >= 1 ? q <= ref1 : q >= ref1; ref1 >= 1 ? ++q : --q) {\n\t      s += '../';\n\t    }\n\t  }\n\t  return s + uri.slice(i);\n\t}\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar ClassOrder = __webpack_require__(9);\n\tvar Node = __webpack_require__(10);\n\t\n\t/**\n\t * @class NamedNode\n\t * @extends Node\n\t */\n\t\n\tvar NamedNode = function (_Node) {\n\t  _inherits(NamedNode, _Node);\n\t\n\t  /**\n\t   * @constructor\n\t   * @param iri {String}\n\t   */\n\t  function NamedNode(iri) {\n\t    _classCallCheck(this, NamedNode);\n\t\n\t    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(NamedNode).call(this));\n\t\n\t    _this.termType = NamedNode.termType;\n\t    if (iri.indexOf(':') < 0) {\n\t      console.log('Warning: NamedNode IRI \"' + iri + '\" must be absolute. Relative URIs will fail in future versions');\n\t    }\n\t    _this.value = iri;\n\t    return _this;\n\t  }\n\t  /**\n\t   * Returns an $rdf node for the containing directory, ending in slash.\n\t   */\n\t\n\t\n\t  _createClass(NamedNode, [{\n\t    key: 'dir',\n\t    value: function dir() {\n\t      var str = this.uri.split('#')[0];\n\t      var p = str.slice(0, -1).lastIndexOf('/');\n\t      var q = str.indexOf('//');\n\t      if (q >= 0 && p < q + 2 || p < 0) return null;\n\t      return new NamedNode(str.slice(0, p + 1));\n\t    }\n\t    /**\n\t     * Returns an NN for the whole web site, ending in slash.\n\t     * Contrast with the \"origin\" which does NOT have a trailing slash\n\t     */\n\t\n\t  }, {\n\t    key: 'site',\n\t    value: function site() {\n\t      var str = this.uri.split('#')[0];\n\t      var p = str.indexOf('//');\n\t      if (p < 0) throw new Error('This URI does not have a web site part (origin)');\n\t      var q = str.indexOf('/', p + 2);\n\t      if (q < 0) throw new Error('This URI does not have a web site part. (origin)');\n\t      return new NamedNode(str.slice(0, q + 1));\n\t    }\n\t  }, {\n\t    key: 'doc',\n\t    value: function doc() {\n\t      if (this.uri.indexOf('#') < 0) {\n\t        return this;\n\t      } else {\n\t        return new NamedNode(this.uri.split('#')[0]);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'toString',\n\t    value: function toString() {\n\t      return '<' + this.uri + '>';\n\t    }\n\t\n\t    /**\n\t     * Legacy getter and setter alias, node.uri\n\t     */\n\t\n\t  }, {\n\t    key: 'uri',\n\t    get: function get() {\n\t      return this.value;\n\t    },\n\t    set: function set(uri) {\n\t      this.value = uri;\n\t    }\n\t  }], [{\n\t    key: 'fromValue',\n\t    value: function fromValue(value) {\n\t      if (typeof value === 'undefined' || value === null) {\n\t        return value;\n\t      }\n\t      var isNode = value && value.termType;\n\t      if (isNode) {\n\t        return value;\n\t      }\n\t      return new NamedNode(value);\n\t    }\n\t  }]);\n\t\n\t  return NamedNode;\n\t}(Node);\n\t\n\tNamedNode.termType = 'NamedNode';\n\tNamedNode.prototype.classOrder = ClassOrder['NamedNode'];\n\tNamedNode.prototype.isVar = 0;\n\t\n\tmodule.exports = NamedNode;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar ClassOrder = {\n\t  'Literal': 1,\n\t  'Collection': 3,\n\t  'Formula': 4,\n\t  'NamedNode': 5,\n\t  'BlankNode': 6,\n\t  'Variable': 7\n\t};\n\t\n\tmodule.exports = ClassOrder;\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t/**\n\t * The superclass of all RDF Statement objects, that is\n\t * NamedNode, Literal, BlankNode, etc.\n\t * @class Node\n\t */\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Node = function () {\n\t  function Node() {\n\t    _classCallCheck(this, Node);\n\t  }\n\t\n\t  _createClass(Node, [{\n\t    key: 'substitute',\n\t    value: function substitute(bindings) {\n\t      console.log('@@@ node substitute' + this);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'compareTerm',\n\t    value: function compareTerm(other) {\n\t      if (this.classOrder < other.classOrder) {\n\t        return -1;\n\t      }\n\t      if (this.classOrder > other.classOrder) {\n\t        return +1;\n\t      }\n\t      if (this.value < other.value) {\n\t        return -1;\n\t      }\n\t      if (this.value > other.value) {\n\t        return +1;\n\t      }\n\t      return 0;\n\t    }\n\t  }, {\n\t    key: 'equals',\n\t    value: function equals(other) {\n\t      if (!other) {\n\t        return false;\n\t      }\n\t      return this.termType === other.termType && this.value === other.value;\n\t    }\n\t  }, {\n\t    key: 'hashString',\n\t    value: function hashString() {\n\t      return this.toCanonical();\n\t    }\n\t  }, {\n\t    key: 'sameTerm',\n\t    value: function sameTerm(other) {\n\t      return this.equals(other);\n\t    }\n\t  }, {\n\t    key: 'toCanonical',\n\t    value: function toCanonical() {\n\t      return this.toNT();\n\t    }\n\t  }, {\n\t    key: 'toNT',\n\t    value: function toNT() {\n\t      return this.toString();\n\t    }\n\t  }, {\n\t    key: 'toString',\n\t    value: function toString() {\n\t      throw new Error('Node.toString() is abstract - see the subclasses instead');\n\t    }\n\t  }]);\n\t\n\t  return Node;\n\t}();\n\t\n\tmodule.exports = Node;\n\t\n\t/**\n\t * Creates an RDF Node from a native javascript value.\n\t * RDF Nodes are returned unchanged, undefined returned as itself.\n\t * @method fromValue\n\t * @static\n\t * @param value {Node|Date|String|Number|Boolean|Undefined}\n\t * @return {Node|Collection}\n\t */\n\tNode.fromValue = function fromValue(value) {\n\t  var Collection = __webpack_require__(11);\n\t  var Literal = __webpack_require__(13);\n\t  var NamedNode = __webpack_require__(8);\n\t  if (typeof value === 'undefined' || value === null) {\n\t    return value;\n\t  }\n\t  var isNode = value && value.termType;\n\t  if (isNode) {\n\t    // a Node subclass or a Collection\n\t    return value;\n\t  }\n\t  if (Array.isArray(value)) {\n\t    return new Collection(value);\n\t  }\n\t  return Literal.fromValue(value);\n\t};\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar BlankNode = __webpack_require__(12);\n\tvar ClassOrder = __webpack_require__(9);\n\tvar Node = __webpack_require__(10);\n\t\n\tvar Collection = function (_Node) {\n\t  _inherits(Collection, _Node);\n\t\n\t  function Collection(initial) {\n\t    _classCallCheck(this, Collection);\n\t\n\t    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Collection).call(this));\n\t\n\t    _this.termType = Collection.termType;\n\t    _this.id = BlankNode.nextId++;\n\t    _this.elements = [];\n\t    _this.closed = false;\n\t    if (initial && initial.length > 0) {\n\t      initial.forEach(function (element) {\n\t        _this.elements.push(Node.fromValue(element));\n\t      });\n\t    }\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Collection, [{\n\t    key: 'append',\n\t    value: function append(element) {\n\t      return this.elements.push(element);\n\t    }\n\t  }, {\n\t    key: 'close',\n\t    value: function close() {\n\t      this.closed = true;\n\t      return this.closed;\n\t    }\n\t  }, {\n\t    key: 'shift',\n\t    value: function shift() {\n\t      return this.elements.shift();\n\t    }\n\t  }, {\n\t    key: 'substitute',\n\t    value: function substitute(bindings) {\n\t      var elementsCopy = this.elements.map(function (ea) {\n\t        ea.substitute(bindings);\n\t      });\n\t      return new Collection(elementsCopy);\n\t    }\n\t  }, {\n\t    key: 'toNT',\n\t    value: function toNT() {\n\t      return BlankNode.NTAnonymousNodePrefix + this.id;\n\t    }\n\t  }, {\n\t    key: 'toString',\n\t    value: function toString() {\n\t      return '(' + this.elements.join(' ') + ')';\n\t    }\n\t  }, {\n\t    key: 'unshift',\n\t    value: function unshift(element) {\n\t      return this.elements.unshift(element);\n\t    }\n\t  }]);\n\t\n\t  return Collection;\n\t}(Node);\n\t\n\tCollection.termType = 'collection';\n\tCollection.prototype.classOrder = ClassOrder['Collection'];\n\tCollection.prototype.compareTerm = BlankNode.prototype.compareTerm;\n\tCollection.prototype.isVar = 0;\n\t\n\tmodule.exports = Collection;\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar ClassOrder = __webpack_require__(9);\n\tvar Node = __webpack_require__(10);\n\t\n\tvar BlankNode = function (_Node) {\n\t  _inherits(BlankNode, _Node);\n\t\n\t  function BlankNode(id) {\n\t    _classCallCheck(this, BlankNode);\n\t\n\t    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(BlankNode).call(this));\n\t\n\t    _this.termType = BlankNode.termType;\n\t    _this.id = BlankNode.nextId++;\n\t    _this.value = id || _this.id.toString();\n\t    return _this;\n\t  }\n\t\n\t  _createClass(BlankNode, [{\n\t    key: 'compareTerm',\n\t    value: function compareTerm(other) {\n\t      if (this.classOrder < other.classOrder) {\n\t        return -1;\n\t      }\n\t      if (this.classOrder > other.classOrder) {\n\t        return +1;\n\t      }\n\t      if (this.id < other.id) {\n\t        return -1;\n\t      }\n\t      if (this.id > other.id) {\n\t        return +1;\n\t      }\n\t      return 0;\n\t    }\n\t  }, {\n\t    key: 'copy',\n\t    value: function copy(formula) {\n\t      // depends on the formula\n\t      var bnodeNew = new BlankNode();\n\t      formula.copyTo(this, bnodeNew);\n\t      return bnodeNew;\n\t    }\n\t  }, {\n\t    key: 'toCanonical',\n\t    value: function toCanonical() {\n\t      return '_:' + this.value;\n\t    }\n\t  }, {\n\t    key: 'toString',\n\t    value: function toString() {\n\t      return BlankNode.NTAnonymousNodePrefix + this.id;\n\t    }\n\t  }]);\n\t\n\t  return BlankNode;\n\t}(Node);\n\t\n\tBlankNode.nextId = 0;\n\tBlankNode.termType = 'BlankNode';\n\tBlankNode.NTAnonymousNodePrefix = '_:n';\n\tBlankNode.prototype.classOrder = ClassOrder['BlankNode'];\n\tBlankNode.prototype.isBlank = 1;\n\tBlankNode.prototype.isVar = 1;\n\t\n\tmodule.exports = BlankNode;\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar ClassOrder = __webpack_require__(9);\n\tvar NamedNode = __webpack_require__(8);\n\tvar Node = __webpack_require__(10);\n\tvar XSD = __webpack_require__(14);\n\t\n\tvar Literal = function (_Node) {\n\t  _inherits(Literal, _Node);\n\t\n\t  function Literal(value, language, datatype) {\n\t    _classCallCheck(this, Literal);\n\t\n\t    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Literal).call(this));\n\t\n\t    _this.termType = Literal.termType;\n\t    _this.value = value;\n\t    if (language) {\n\t      _this.lang = language;\n\t      datatype = XSD.langString;\n\t    }\n\t    // If not specified, a literal has the implied XSD.string default datatype\n\t    if (datatype) {\n\t      _this.datatype = NamedNode.fromValue(datatype);\n\t    }\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Literal, [{\n\t    key: 'copy',\n\t    value: function copy() {\n\t      return new Literal(this.value, this.lang, this.datatype);\n\t    }\n\t  }, {\n\t    key: 'equals',\n\t    value: function equals(other) {\n\t      if (!other) {\n\t        return false;\n\t      }\n\t      return this.termType === other.termType && this.value === other.value && this.language === other.language && (!this.datatype && !other.datatype || this.datatype && this.datatype.equals(other.datatype));\n\t    }\n\t  }, {\n\t    key: 'toNT',\n\t    value: function toNT() {\n\t      if (typeof this.value === 'number') {\n\t        return this.toString();\n\t      } else if (typeof this.value !== 'string') {\n\t        throw new Error('Value of RDF literal is not string or number: ' + this.value);\n\t      }\n\t      var str = this.value;\n\t      str = str.replace(/\\\\/g, '\\\\\\\\');\n\t      str = str.replace(/\\\"/g, '\\\\\"');\n\t      str = str.replace(/\\n/g, '\\\\n');\n\t      str = '\"' + str + '\"';\n\t\n\t      if (this.language) {\n\t        str += '@' + this.language;\n\t      } else if (!this.datatype.equals(XSD.string)) {\n\t        // Only add datatype if it's not a string\n\t        str += '^^' + this.datatype.toCanonical();\n\t      }\n\t      return str;\n\t    }\n\t  }, {\n\t    key: 'toString',\n\t    value: function toString() {\n\t      return '' + this.value;\n\t    }\n\t    /**\n\t     * @method fromBoolean\n\t     * @static\n\t     * @param value {Boolean}\n\t     * @return {Literal}\n\t     */\n\t\n\t  }, {\n\t    key: 'language',\n\t    get: function get() {\n\t      return this.lang;\n\t    },\n\t    set: function set(language) {\n\t      this.lang = language || '';\n\t    }\n\t  }], [{\n\t    key: 'fromBoolean',\n\t    value: function fromBoolean(value) {\n\t      var strValue = value ? '1' : '0';\n\t      return new Literal(strValue, null, XSD.boolean);\n\t    }\n\t    /**\n\t     * @method fromDate\n\t     * @static\n\t     * @param value {Date}\n\t     * @return {Literal}\n\t     */\n\t\n\t  }, {\n\t    key: 'fromDate',\n\t    value: function fromDate(value) {\n\t      if (!(value instanceof Date)) {\n\t        throw new TypeError('Invalid argument to Literal.fromDate()');\n\t      }\n\t      var d2 = function d2(x) {\n\t        return ('' + (100 + x)).slice(1, 3);\n\t      };\n\t      var date = '' + value.getUTCFullYear() + '-' + d2(value.getUTCMonth() + 1) + '-' + d2(value.getUTCDate()) + 'T' + d2(value.getUTCHours()) + ':' + d2(value.getUTCMinutes()) + ':' + d2(value.getUTCSeconds()) + 'Z';\n\t      return new Literal(date, null, XSD.dateTime);\n\t    }\n\t    /**\n\t     * @method fromNumber\n\t     * @static\n\t     * @param value {Number}\n\t     * @return {Literal}\n\t     */\n\t\n\t  }, {\n\t    key: 'fromNumber',\n\t    value: function fromNumber(value) {\n\t      if (typeof value !== 'number') {\n\t        throw new TypeError('Invalid argument to Literal.fromNumber()');\n\t      }\n\t      var datatype = void 0;\n\t      var strValue = value.toString();\n\t      if (strValue.indexOf('e') < 0 && Math.abs(value) <= Number.MAX_SAFE_INTEGER) {\n\t        datatype = Number.isInteger(value) ? XSD.integer : XSD.decimal;\n\t      } else {\n\t        datatype = XSD.double;\n\t      }\n\t      return new Literal(strValue, null, datatype);\n\t    }\n\t    /**\n\t     * @method fromValue\n\t     * @param value\n\t     * @return {Literal}\n\t     */\n\t\n\t  }, {\n\t    key: 'fromValue',\n\t    value: function fromValue(value) {\n\t      if (typeof value === 'undefined' || value === null) {\n\t        return value;\n\t      }\n\t      if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && value.termType) {\n\t        // this is a Node instance\n\t        return value;\n\t      }\n\t      switch (typeof value === 'undefined' ? 'undefined' : _typeof(value)) {\n\t        case 'object':\n\t          if (value instanceof Date) {\n\t            return Literal.fromDate(value);\n\t          }\n\t        case 'boolean':\n\t          return Literal.fromBoolean(value);\n\t        case 'number':\n\t          return Literal.fromNumber(value);\n\t        case 'string':\n\t          return new Literal(value);\n\t      }\n\t      throw new Error(\"Can't make literal from \" + value + ' of type ' + (typeof value === 'undefined' ? 'undefined' : _typeof(value)));\n\t    }\n\t  }]);\n\t\n\t  return Literal;\n\t}(Node);\n\t\n\tLiteral.termType = 'Literal';\n\tLiteral.prototype.classOrder = ClassOrder['Literal'];\n\tLiteral.prototype.datatype = XSD.string;\n\tLiteral.prototype.lang = '';\n\tLiteral.prototype.isVar = 0;\n\t\n\tmodule.exports = Literal;\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar NamedNode = __webpack_require__(8);\n\t\n\tvar XSD = function XSD() {\n\t  _classCallCheck(this, XSD);\n\t};\n\t\n\tXSD.boolean = new NamedNode('http://www.w3.org/2001/XMLSchema#boolean');\n\tXSD.dateTime = new NamedNode('http://www.w3.org/2001/XMLSchema#dateTime');\n\tXSD.decimal = new NamedNode('http://www.w3.org/2001/XMLSchema#decimal');\n\tXSD.double = new NamedNode('http://www.w3.org/2001/XMLSchema#double');\n\tXSD.integer = new NamedNode('http://www.w3.org/2001/XMLSchema#integer');\n\tXSD.langString = new NamedNode('http://www.w3.org/1999/02/22-rdf-syntax-ns#langString');\n\tXSD.string = new NamedNode('http://www.w3.org/2001/XMLSchema#string');\n\t\n\tmodule.exports = XSD;\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\t/**\n\t * A Dummy log\n\t * @module log\n\t */\n\tmodule.exports = {\n\t  debug: function debug(x) {\n\t    return;\n\t  },\n\t  warn: function warn(x) {\n\t    return;\n\t  },\n\t  info: function info(x) {\n\t    return;\n\t  },\n\t  error: function error(x) {\n\t    return;\n\t  },\n\t  success: function success(x) {\n\t    return;\n\t  },\n\t  msg: function msg(x) {\n\t    return;\n\t  }\n\t};\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tfunction DOMParser(options){\r\n\t\tthis.options = options ||{locator:{}};\r\n\t\t\r\n\t}\r\n\tDOMParser.prototype.parseFromString = function(source,mimeType){\r\n\t\tvar options = this.options;\r\n\t\tvar sax =  new XMLReader();\r\n\t\tvar domBuilder = options.domBuilder || new DOMHandler();//contentHandler and LexicalHandler\r\n\t\tvar errorHandler = options.errorHandler;\r\n\t\tvar locator = options.locator;\r\n\t\tvar defaultNSMap = options.xmlns||{};\r\n\t\tvar entityMap = {'lt':'<','gt':'>','amp':'&','quot':'\"','apos':\"'\"}\r\n\t\tif(locator){\r\n\t\t\tdomBuilder.setDocumentLocator(locator)\r\n\t\t}\r\n\t\t\r\n\t\tsax.errorHandler = buildErrorHandler(errorHandler,domBuilder,locator);\r\n\t\tsax.domBuilder = options.domBuilder || domBuilder;\r\n\t\tif(/\\/x?html?$/.test(mimeType)){\r\n\t\t\tentityMap.nbsp = '\\xa0';\r\n\t\t\tentityMap.copy = '\\xa9';\r\n\t\t\tdefaultNSMap['']= 'http://www.w3.org/1999/xhtml';\r\n\t\t}\r\n\t\tdefaultNSMap.xml = defaultNSMap.xml || 'http://www.w3.org/XML/1998/namespace';\r\n\t\tif(source){\r\n\t\t\tsax.parse(source,defaultNSMap,entityMap);\r\n\t\t}else{\r\n\t\t\tsax.errorHandler.error(\"invalid doc source\");\r\n\t\t}\r\n\t\treturn domBuilder.doc;\r\n\t}\r\n\tfunction buildErrorHandler(errorImpl,domBuilder,locator){\r\n\t\tif(!errorImpl){\r\n\t\t\tif(domBuilder instanceof DOMHandler){\r\n\t\t\t\treturn domBuilder;\r\n\t\t\t}\r\n\t\t\terrorImpl = domBuilder ;\r\n\t\t}\r\n\t\tvar errorHandler = {}\r\n\t\tvar isCallback = errorImpl instanceof Function;\r\n\t\tlocator = locator||{}\r\n\t\tfunction build(key){\r\n\t\t\tvar fn = errorImpl[key];\r\n\t\t\tif(!fn && isCallback){\r\n\t\t\t\tfn = errorImpl.length == 2?function(msg){errorImpl(key,msg)}:errorImpl;\r\n\t\t\t}\r\n\t\t\terrorHandler[key] = fn && function(msg){\r\n\t\t\t\tfn('[xmldom '+key+']\\t'+msg+_locator(locator));\r\n\t\t\t}||function(){};\r\n\t\t}\r\n\t\tbuild('warning');\r\n\t\tbuild('error');\r\n\t\tbuild('fatalError');\r\n\t\treturn errorHandler;\r\n\t}\r\n\t\r\n\t//console.log('#\\n\\n\\n\\n\\n\\n\\n####')\r\n\t/**\r\n\t * +ContentHandler+ErrorHandler\r\n\t * +LexicalHandler+EntityResolver2\r\n\t * -DeclHandler-DTDHandler \r\n\t * \r\n\t * DefaultHandler:EntityResolver, DTDHandler, ContentHandler, ErrorHandler\r\n\t * DefaultHandler2:DefaultHandler,LexicalHandler, DeclHandler, EntityResolver2\r\n\t * @link http://www.saxproject.org/apidoc/org/xml/sax/helpers/DefaultHandler.html\r\n\t */\r\n\tfunction DOMHandler() {\r\n\t    this.cdata = false;\r\n\t}\r\n\tfunction position(locator,node){\r\n\t\tnode.lineNumber = locator.lineNumber;\r\n\t\tnode.columnNumber = locator.columnNumber;\r\n\t}\r\n\t/**\r\n\t * @see org.xml.sax.ContentHandler#startDocument\r\n\t * @link http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html\r\n\t */ \r\n\tDOMHandler.prototype = {\r\n\t\tstartDocument : function() {\r\n\t    \tthis.doc = new DOMImplementation().createDocument(null, null, null);\r\n\t    \tif (this.locator) {\r\n\t        \tthis.doc.documentURI = this.locator.systemId;\r\n\t    \t}\r\n\t\t},\r\n\t\tstartElement:function(namespaceURI, localName, qName, attrs) {\r\n\t\t\tvar doc = this.doc;\r\n\t\t    var el = doc.createElementNS(namespaceURI, qName||localName);\r\n\t\t    var len = attrs.length;\r\n\t\t    appendElement(this, el);\r\n\t\t    this.currentElement = el;\r\n\t\t    \r\n\t\t\tthis.locator && position(this.locator,el)\r\n\t\t    for (var i = 0 ; i < len; i++) {\r\n\t\t        var namespaceURI = attrs.getURI(i);\r\n\t\t        var value = attrs.getValue(i);\r\n\t\t        var qName = attrs.getQName(i);\r\n\t\t\t\tvar attr = doc.createAttributeNS(namespaceURI, qName);\r\n\t\t\t\tthis.locator &&position(attrs.getLocator(i),attr);\r\n\t\t\t\tattr.value = attr.nodeValue = value;\r\n\t\t\t\tel.setAttributeNode(attr)\r\n\t\t    }\r\n\t\t},\r\n\t\tendElement:function(namespaceURI, localName, qName) {\r\n\t\t\tvar current = this.currentElement\r\n\t\t\tvar tagName = current.tagName;\r\n\t\t\tthis.currentElement = current.parentNode;\r\n\t\t},\r\n\t\tstartPrefixMapping:function(prefix, uri) {\r\n\t\t},\r\n\t\tendPrefixMapping:function(prefix) {\r\n\t\t},\r\n\t\tprocessingInstruction:function(target, data) {\r\n\t\t    var ins = this.doc.createProcessingInstruction(target, data);\r\n\t\t    this.locator && position(this.locator,ins)\r\n\t\t    appendElement(this, ins);\r\n\t\t},\r\n\t\tignorableWhitespace:function(ch, start, length) {\r\n\t\t},\r\n\t\tcharacters:function(chars, start, length) {\r\n\t\t\tchars = _toString.apply(this,arguments)\r\n\t\t\t//console.log(chars)\r\n\t\t\tif(chars){\r\n\t\t\t\tif (this.cdata) {\r\n\t\t\t\t\tvar charNode = this.doc.createCDATASection(chars);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar charNode = this.doc.createTextNode(chars);\r\n\t\t\t\t}\r\n\t\t\t\tif(this.currentElement){\r\n\t\t\t\t\tthis.currentElement.appendChild(charNode);\r\n\t\t\t\t}else if(/^\\s*$/.test(chars)){\r\n\t\t\t\t\tthis.doc.appendChild(charNode);\r\n\t\t\t\t\t//process xml\r\n\t\t\t\t}\r\n\t\t\t\tthis.locator && position(this.locator,charNode)\r\n\t\t\t}\r\n\t\t},\r\n\t\tskippedEntity:function(name) {\r\n\t\t},\r\n\t\tendDocument:function() {\r\n\t\t\tthis.doc.normalize();\r\n\t\t},\r\n\t\tsetDocumentLocator:function (locator) {\r\n\t\t    if(this.locator = locator){// && !('lineNumber' in locator)){\r\n\t\t    \tlocator.lineNumber = 0;\r\n\t\t    }\r\n\t\t},\r\n\t\t//LexicalHandler\r\n\t\tcomment:function(chars, start, length) {\r\n\t\t\tchars = _toString.apply(this,arguments)\r\n\t\t    var comm = this.doc.createComment(chars);\r\n\t\t    this.locator && position(this.locator,comm)\r\n\t\t    appendElement(this, comm);\r\n\t\t},\r\n\t\t\r\n\t\tstartCDATA:function() {\r\n\t\t    //used in characters() methods\r\n\t\t    this.cdata = true;\r\n\t\t},\r\n\t\tendCDATA:function() {\r\n\t\t    this.cdata = false;\r\n\t\t},\r\n\t\t\r\n\t\tstartDTD:function(name, publicId, systemId) {\r\n\t\t\tvar impl = this.doc.implementation;\r\n\t\t    if (impl && impl.createDocumentType) {\r\n\t\t        var dt = impl.createDocumentType(name, publicId, systemId);\r\n\t\t        this.locator && position(this.locator,dt)\r\n\t\t        appendElement(this, dt);\r\n\t\t    }\r\n\t\t},\r\n\t\t/**\r\n\t\t * @see org.xml.sax.ErrorHandler\r\n\t\t * @link http://www.saxproject.org/apidoc/org/xml/sax/ErrorHandler.html\r\n\t\t */\r\n\t\twarning:function(error) {\r\n\t\t\tconsole.warn('[xmldom warning]\\t'+error,_locator(this.locator));\r\n\t\t},\r\n\t\terror:function(error) {\r\n\t\t\tconsole.error('[xmldom error]\\t'+error,_locator(this.locator));\r\n\t\t},\r\n\t\tfatalError:function(error) {\r\n\t\t\tconsole.error('[xmldom fatalError]\\t'+error,_locator(this.locator));\r\n\t\t    throw error;\r\n\t\t}\r\n\t}\r\n\tfunction _locator(l){\r\n\t\tif(l){\r\n\t\t\treturn '\\n@'+(l.systemId ||'')+'#[line:'+l.lineNumber+',col:'+l.columnNumber+']'\r\n\t\t}\r\n\t}\r\n\tfunction _toString(chars,start,length){\r\n\t\tif(typeof chars == 'string'){\r\n\t\t\treturn chars.substr(start,length)\r\n\t\t}else{//java sax connect width xmldom on rhino(what about: \"? && !(chars instanceof String)\")\r\n\t\t\tif(chars.length >= start+length || start){\r\n\t\t\t\treturn new java.lang.String(chars,start,length)+'';\r\n\t\t\t}\r\n\t\t\treturn chars;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/*\r\n\t * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/LexicalHandler.html\r\n\t * used method of org.xml.sax.ext.LexicalHandler:\r\n\t *  #comment(chars, start, length)\r\n\t *  #startCDATA()\r\n\t *  #endCDATA()\r\n\t *  #startDTD(name, publicId, systemId)\r\n\t *\r\n\t *\r\n\t * IGNORED method of org.xml.sax.ext.LexicalHandler:\r\n\t *  #endDTD()\r\n\t *  #startEntity(name)\r\n\t *  #endEntity(name)\r\n\t *\r\n\t *\r\n\t * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/DeclHandler.html\r\n\t * IGNORED method of org.xml.sax.ext.DeclHandler\r\n\t * \t#attributeDecl(eName, aName, type, mode, value)\r\n\t *  #elementDecl(name, model)\r\n\t *  #externalEntityDecl(name, publicId, systemId)\r\n\t *  #internalEntityDecl(name, value)\r\n\t * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/EntityResolver2.html\r\n\t * IGNORED method of org.xml.sax.EntityResolver2\r\n\t *  #resolveEntity(String name,String publicId,String baseURI,String systemId)\r\n\t *  #resolveEntity(publicId, systemId)\r\n\t *  #getExternalSubset(name, baseURI)\r\n\t * @link http://www.saxproject.org/apidoc/org/xml/sax/DTDHandler.html\r\n\t * IGNORED method of org.xml.sax.DTDHandler\r\n\t *  #notationDecl(name, publicId, systemId) {};\r\n\t *  #unparsedEntityDecl(name, publicId, systemId, notationName) {};\r\n\t */\r\n\t\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){\r\n\t\tDOMHandler.prototype[key] = function(){return null}\r\n\t})\r\n\t\r\n\t/* Private static helpers treated below as private instance methods, so don't need to add these to the public API; we might use a Relator to also get rid of non-standard public properties */\r\n\tfunction appendElement (hander,node) {\r\n\t    if (!hander.currentElement) {\r\n\t        hander.doc.appendChild(node);\r\n\t    } else {\r\n\t        hander.currentElement.appendChild(node);\r\n\t    }\r\n\t}//appendChild and setAttributeNS are preformance key\r\n\t\r\n\t//if(typeof require == 'function'){\r\n\t\tvar XMLReader = __webpack_require__(17).XMLReader;\r\n\t\tvar DOMImplementation = exports.DOMImplementation = __webpack_require__(18).DOMImplementation;\r\n\t\texports.XMLSerializer = __webpack_require__(18).XMLSerializer ;\r\n\t\texports.DOMParser = DOMParser;\r\n\t//}\r\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports) {\n\n\t//[4]   \tNameStartChar\t   ::=   \t\":\" | [A-Z] | \"_\" | [a-z] | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x2FF] | [#x370-#x37D] | [#x37F-#x1FFF] | [#x200C-#x200D] | [#x2070-#x218F] | [#x2C00-#x2FEF] | [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]\r\n\t//[4a]   \tNameChar\t   ::=   \tNameStartChar | \"-\" | \".\" | [0-9] | #xB7 | [#x0300-#x036F] | [#x203F-#x2040]\r\n\t//[5]   \tName\t   ::=   \tNameStartChar (NameChar)*\r\n\tvar nameStartChar = /[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]///\\u10000-\\uEFFFF\r\n\tvar nameChar = new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");\r\n\tvar tagNamePattern = new RegExp('^'+nameStartChar.source+nameChar.source+'*(?:\\:'+nameStartChar.source+nameChar.source+'*)?$');\r\n\t//var tagNamePattern = /^[a-zA-Z_][\\w\\-\\.]*(?:\\:[a-zA-Z_][\\w\\-\\.]*)?$/\r\n\t//var handlers = 'resolveEntity,getExternalSubset,characters,endDocument,endElement,endPrefixMapping,ignorableWhitespace,processingInstruction,setDocumentLocator,skippedEntity,startDocument,startElement,startPrefixMapping,notationDecl,unparsedEntityDecl,error,fatalError,warning,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,comment,endCDATA,endDTD,endEntity,startCDATA,startDTD,startEntity'.split(',')\r\n\t\r\n\t//S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\r\n\t//S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\r\n\tvar S_TAG = 0;//tag name offerring\r\n\tvar S_ATTR = 1;//attr name offerring \r\n\tvar S_ATTR_SPACE=2;//attr name end and space offer\r\n\tvar S_EQ = 3;//=space?\r\n\tvar S_ATTR_NOQUOT_VALUE = 4;//attr value(no quot value only)\r\n\tvar S_ATTR_END = 5;//attr value end and no space(quot end)\r\n\tvar S_TAG_SPACE = 6;//(attr value end || tag end ) && (space offer)\r\n\tvar S_TAG_CLOSE = 7;//closed el<el />\r\n\t\r\n\tfunction XMLReader(){\r\n\t\t\r\n\t}\r\n\t\r\n\tXMLReader.prototype = {\r\n\t\tparse:function(source,defaultNSMap,entityMap){\r\n\t\t\tvar domBuilder = this.domBuilder;\r\n\t\t\tdomBuilder.startDocument();\r\n\t\t\t_copy(defaultNSMap ,defaultNSMap = {})\r\n\t\t\tparse(source,defaultNSMap,entityMap,\r\n\t\t\t\t\tdomBuilder,this.errorHandler);\r\n\t\t\tdomBuilder.endDocument();\r\n\t\t}\r\n\t}\r\n\tfunction parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){\r\n\t\tfunction fixedFromCharCode(code) {\r\n\t\t\t// String.prototype.fromCharCode does not supports\r\n\t\t\t// > 2 bytes unicode chars directly\r\n\t\t\tif (code > 0xffff) {\r\n\t\t\t\tcode -= 0x10000;\r\n\t\t\t\tvar surrogate1 = 0xd800 + (code >> 10)\r\n\t\t\t\t\t, surrogate2 = 0xdc00 + (code & 0x3ff);\r\n\t\r\n\t\t\t\treturn String.fromCharCode(surrogate1, surrogate2);\r\n\t\t\t} else {\r\n\t\t\t\treturn String.fromCharCode(code);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction entityReplacer(a){\r\n\t\t\tvar k = a.slice(1,-1);\r\n\t\t\tif(k in entityMap){\r\n\t\t\t\treturn entityMap[k]; \r\n\t\t\t}else if(k.charAt(0) === '#'){\r\n\t\t\t\treturn fixedFromCharCode(parseInt(k.substr(1).replace('x','0x')))\r\n\t\t\t}else{\r\n\t\t\t\terrorHandler.error('entity not found:'+a);\r\n\t\t\t\treturn a;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction appendText(end){//has some bugs\r\n\t\t\tif(end>start){\r\n\t\t\t\tvar xt = source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);\r\n\t\t\t\tlocator&&position(start);\r\n\t\t\t\tdomBuilder.characters(xt,0,end-start);\r\n\t\t\t\tstart = end\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction position(p,m){\r\n\t\t\twhile(p>=lineEnd && (m = linePattern.exec(source))){\r\n\t\t\t\tlineStart = m.index;\r\n\t\t\t\tlineEnd = lineStart + m[0].length;\r\n\t\t\t\tlocator.lineNumber++;\r\n\t\t\t\t//console.log('line++:',locator,startPos,endPos)\r\n\t\t\t}\r\n\t\t\tlocator.columnNumber = p-lineStart+1;\r\n\t\t}\r\n\t\tvar lineStart = 0;\r\n\t\tvar lineEnd = 0;\r\n\t\tvar linePattern = /.*(?:\\r\\n?|\\n)|.*$/g\r\n\t\tvar locator = domBuilder.locator;\r\n\t\t\r\n\t\tvar parseStack = [{currentNSMap:defaultNSMapCopy}]\r\n\t\tvar closeMap = {};\r\n\t\tvar start = 0;\r\n\t\twhile(true){\r\n\t\t\ttry{\r\n\t\t\t\tvar tagStart = source.indexOf('<',start);\r\n\t\t\t\tif(tagStart<0){\r\n\t\t\t\t\tif(!source.substr(start).match(/^\\s*$/)){\r\n\t\t\t\t\t\tvar doc = domBuilder.doc;\r\n\t\t    \t\t\tvar text = doc.createTextNode(source.substr(start));\r\n\t\t    \t\t\tdoc.appendChild(text);\r\n\t\t    \t\t\tdomBuilder.currentElement = text;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif(tagStart>start){\r\n\t\t\t\t\tappendText(tagStart);\r\n\t\t\t\t}\r\n\t\t\t\tswitch(source.charAt(tagStart+1)){\r\n\t\t\t\tcase '/':\r\n\t\t\t\t\tvar end = source.indexOf('>',tagStart+3);\r\n\t\t\t\t\tvar tagName = source.substring(tagStart+2,end);\r\n\t\t\t\t\tvar config = parseStack.pop();\r\n\t\t\t\t\tif(end<0){\r\n\t\t\t\t\t\t\r\n\t\t        \t\ttagName = source.substring(tagStart+2).replace(/[\\s<].*/,'');\r\n\t\t        \t\t//console.error('#@@@@@@'+tagName)\r\n\t\t        \t\terrorHandler.error(\"end tag name: \"+tagName+' is not complete:'+config.tagName);\r\n\t\t        \t\tend = tagStart+1+tagName.length;\r\n\t\t        \t}else if(tagName.match(/\\s</)){\r\n\t\t        \t\ttagName = tagName.replace(/[\\s<].*/,'');\r\n\t\t        \t\terrorHandler.error(\"end tag name: \"+tagName+' maybe not complete');\r\n\t\t        \t\tend = tagStart+1+tagName.length;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//console.error(parseStack.length,parseStack)\r\n\t\t\t\t\t//console.error(config);\r\n\t\t\t\t\tvar localNSMap = config.localNSMap;\r\n\t\t\t\t\tvar endMatch = config.tagName == tagName;\r\n\t\t\t\t\tvar endIgnoreCaseMach = endMatch || config.tagName&&config.tagName.toLowerCase() == tagName.toLowerCase()\r\n\t\t\t        if(endIgnoreCaseMach){\r\n\t\t\t        \tdomBuilder.endElement(config.uri,config.localName,tagName);\r\n\t\t\t\t\t\tif(localNSMap){\r\n\t\t\t\t\t\t\tfor(var prefix in localNSMap){\r\n\t\t\t\t\t\t\t\tdomBuilder.endPrefixMapping(prefix) ;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(!endMatch){\r\n\t\t\t            \terrorHandler.fatalError(\"end tag name: \"+tagName+' is not match the current start tagName:'+config.tagName );\r\n\t\t\t\t\t\t}\r\n\t\t\t        }else{\r\n\t\t\t        \tparseStack.push(config)\r\n\t\t\t        }\r\n\t\t\t\t\t\r\n\t\t\t\t\tend++;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\t// end elment\r\n\t\t\t\tcase '?':// <?...?>\r\n\t\t\t\t\tlocator&&position(tagStart);\r\n\t\t\t\t\tend = parseInstruction(source,tagStart,domBuilder);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase '!':// <!doctype,<![CDATA,<!--\r\n\t\t\t\t\tlocator&&position(tagStart);\r\n\t\t\t\t\tend = parseDCC(source,tagStart,domBuilder,errorHandler);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tlocator&&position(tagStart);\r\n\t\t\t\t\tvar el = new ElementAttributes();\r\n\t\t\t\t\tvar currentNSMap = parseStack[parseStack.length-1].currentNSMap;\r\n\t\t\t\t\t//elStartEnd\r\n\t\t\t\t\tvar end = parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);\r\n\t\t\t\t\tvar len = el.length;\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(!el.closed && fixSelfClosed(source,end,el.tagName,closeMap)){\r\n\t\t\t\t\t\tel.closed = true;\r\n\t\t\t\t\t\tif(!entityMap.nbsp){\r\n\t\t\t\t\t\t\terrorHandler.warning('unclosed xml attribute');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(locator && len){\r\n\t\t\t\t\t\tvar locator2 = copyLocator(locator,{});\r\n\t\t\t\t\t\t//try{//attribute position fixed\r\n\t\t\t\t\t\tfor(var i = 0;i<len;i++){\r\n\t\t\t\t\t\t\tvar a = el[i];\r\n\t\t\t\t\t\t\tposition(a.offset);\r\n\t\t\t\t\t\t\ta.locator = copyLocator(locator,{});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//}catch(e){console.error('@@@@@'+e)}\r\n\t\t\t\t\t\tdomBuilder.locator = locator2\r\n\t\t\t\t\t\tif(appendElement(el,domBuilder,currentNSMap)){\r\n\t\t\t\t\t\t\tparseStack.push(el)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdomBuilder.locator = locator;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tif(appendElement(el,domBuilder,currentNSMap)){\r\n\t\t\t\t\t\t\tparseStack.push(el)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(el.uri === 'http://www.w3.org/1999/xhtml' && !el.closed){\r\n\t\t\t\t\t\tend = parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tend++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}catch(e){\r\n\t\t\t\terrorHandler.error('element parse error: '+e)\r\n\t\t\t\t//errorHandler.error('element parse error: '+e);\r\n\t\t\t\tend = -1;\r\n\t\t\t\t//throw e;\r\n\t\t\t}\r\n\t\t\tif(end>start){\r\n\t\t\t\tstart = end;\r\n\t\t\t}else{\r\n\t\t\t\t//TODO: 这里有可能sax回退，有位置错误风险\r\n\t\t\t\tappendText(Math.max(tagStart,start)+1);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tfunction copyLocator(f,t){\r\n\t\tt.lineNumber = f.lineNumber;\r\n\t\tt.columnNumber = f.columnNumber;\r\n\t\treturn t;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @see #appendElement(source,elStartEnd,el,selfClosed,entityReplacer,domBuilder,parseStack);\r\n\t * @return end of the elementStartPart(end of elementEndPart for selfClosed el)\r\n\t */\r\n\tfunction parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){\r\n\t\tvar attrName;\r\n\t\tvar value;\r\n\t\tvar p = ++start;\r\n\t\tvar s = S_TAG;//status\r\n\t\twhile(true){\r\n\t\t\tvar c = source.charAt(p);\r\n\t\t\tswitch(c){\r\n\t\t\tcase '=':\r\n\t\t\t\tif(s === S_ATTR){//attrName\r\n\t\t\t\t\tattrName = source.slice(start,p);\r\n\t\t\t\t\ts = S_EQ;\r\n\t\t\t\t}else if(s === S_ATTR_SPACE){\r\n\t\t\t\t\ts = S_EQ;\r\n\t\t\t\t}else{\r\n\t\t\t\t\t//fatalError: equal must after attrName or space after attrName\r\n\t\t\t\t\tthrow new Error('attribute equal must after attrName');\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase '\\'':\r\n\t\t\tcase '\"':\r\n\t\t\t\tif(s === S_EQ || s === S_ATTR //|| s == S_ATTR_SPACE\r\n\t\t\t\t\t){//equal\r\n\t\t\t\t\tif(s === S_ATTR){\r\n\t\t\t\t\t\terrorHandler.warning('attribute value must after \"=\"')\r\n\t\t\t\t\t\tattrName = source.slice(start,p)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstart = p+1;\r\n\t\t\t\t\tp = source.indexOf(c,start)\r\n\t\t\t\t\tif(p>0){\r\n\t\t\t\t\t\tvalue = source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);\r\n\t\t\t\t\t\tel.add(attrName,value,start-1);\r\n\t\t\t\t\t\ts = S_ATTR_END;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t//fatalError: no end quot match\r\n\t\t\t\t\t\tthrow new Error('attribute value no end \\''+c+'\\' match');\r\n\t\t\t\t\t}\r\n\t\t\t\t}else if(s == S_ATTR_NOQUOT_VALUE){\r\n\t\t\t\t\tvalue = source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);\r\n\t\t\t\t\t//console.log(attrName,value,start,p)\r\n\t\t\t\t\tel.add(attrName,value,start);\r\n\t\t\t\t\t//console.dir(el)\r\n\t\t\t\t\terrorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+')!!');\r\n\t\t\t\t\tstart = p+1;\r\n\t\t\t\t\ts = S_ATTR_END\r\n\t\t\t\t}else{\r\n\t\t\t\t\t//fatalError: no equal before\r\n\t\t\t\t\tthrow new Error('attribute value must after \"=\"');\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase '/':\r\n\t\t\t\tswitch(s){\r\n\t\t\t\tcase S_TAG:\r\n\t\t\t\t\tel.setTagName(source.slice(start,p));\r\n\t\t\t\tcase S_ATTR_END:\r\n\t\t\t\tcase S_TAG_SPACE:\r\n\t\t\t\tcase S_TAG_CLOSE:\r\n\t\t\t\t\ts =S_TAG_CLOSE;\r\n\t\t\t\t\tel.closed = true;\r\n\t\t\t\tcase S_ATTR_NOQUOT_VALUE:\r\n\t\t\t\tcase S_ATTR:\r\n\t\t\t\tcase S_ATTR_SPACE:\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//case S_EQ:\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error(\"attribute invalid close char('/')\")\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase ''://end document\r\n\t\t\t\t//throw new Error('unexpected end of input')\r\n\t\t\t\terrorHandler.error('unexpected end of input');\r\n\t\t\t\tif(s == S_TAG){\r\n\t\t\t\t\tel.setTagName(source.slice(start,p));\r\n\t\t\t\t}\r\n\t\t\t\treturn p;\r\n\t\t\tcase '>':\r\n\t\t\t\tswitch(s){\r\n\t\t\t\tcase S_TAG:\r\n\t\t\t\t\tel.setTagName(source.slice(start,p));\r\n\t\t\t\tcase S_ATTR_END:\r\n\t\t\t\tcase S_TAG_SPACE:\r\n\t\t\t\tcase S_TAG_CLOSE:\r\n\t\t\t\t\tbreak;//normal\r\n\t\t\t\tcase S_ATTR_NOQUOT_VALUE://Compatible state\r\n\t\t\t\tcase S_ATTR:\r\n\t\t\t\t\tvalue = source.slice(start,p);\r\n\t\t\t\t\tif(value.slice(-1) === '/'){\r\n\t\t\t\t\t\tel.closed  = true;\r\n\t\t\t\t\t\tvalue = value.slice(0,-1)\r\n\t\t\t\t\t}\r\n\t\t\t\tcase S_ATTR_SPACE:\r\n\t\t\t\t\tif(s === S_ATTR_SPACE){\r\n\t\t\t\t\t\tvalue = attrName;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(s == S_ATTR_NOQUOT_VALUE){\r\n\t\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');\r\n\t\t\t\t\t\tel.add(attrName,value.replace(/&#?\\w+;/g,entityReplacer),start)\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tif(currentNSMap[''] !== 'http://www.w3.org/1999/xhtml' || !value.match(/^(?:disabled|checked|selected)$/i)){\r\n\t\t\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tel.add(value,value,start)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase S_EQ:\r\n\t\t\t\t\tthrow new Error('attribute value missed!!');\r\n\t\t\t\t}\r\n\t//\t\t\tconsole.log(tagName,tagNamePattern,tagNamePattern.test(tagName))\r\n\t\t\t\treturn p;\r\n\t\t\t/*xml space '\\x20' | #x9 | #xD | #xA; */\r\n\t\t\tcase '\\u0080':\r\n\t\t\t\tc = ' ';\r\n\t\t\tdefault:\r\n\t\t\t\tif(c<= ' '){//space\r\n\t\t\t\t\tswitch(s){\r\n\t\t\t\t\tcase S_TAG:\r\n\t\t\t\t\t\tel.setTagName(source.slice(start,p));//tagName\r\n\t\t\t\t\t\ts = S_TAG_SPACE;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase S_ATTR:\r\n\t\t\t\t\t\tattrName = source.slice(start,p)\r\n\t\t\t\t\t\ts = S_ATTR_SPACE;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase S_ATTR_NOQUOT_VALUE:\r\n\t\t\t\t\t\tvar value = source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);\r\n\t\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');\r\n\t\t\t\t\t\tel.add(attrName,value,start)\r\n\t\t\t\t\tcase S_ATTR_END:\r\n\t\t\t\t\t\ts = S_TAG_SPACE;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t//case S_TAG_SPACE:\r\n\t\t\t\t\t//case S_EQ:\r\n\t\t\t\t\t//case S_ATTR_SPACE:\r\n\t\t\t\t\t//\tvoid();break;\r\n\t\t\t\t\t//case S_TAG_CLOSE:\r\n\t\t\t\t\t\t//ignore warning\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{//not space\r\n\t//S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\r\n\t//S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\r\n\t\t\t\t\tswitch(s){\r\n\t\t\t\t\t//case S_TAG:void();break;\r\n\t\t\t\t\t//case S_ATTR:void();break;\r\n\t\t\t\t\t//case S_ATTR_NOQUOT_VALUE:void();break;\r\n\t\t\t\t\tcase S_ATTR_SPACE:\r\n\t\t\t\t\t\tvar tagName =  el.tagName;\r\n\t\t\t\t\t\tif(currentNSMap[''] !== 'http://www.w3.org/1999/xhtml' || !attrName.match(/^(?:disabled|checked|selected)$/i)){\r\n\t\t\t\t\t\t\terrorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tel.add(attrName,attrName,start);\r\n\t\t\t\t\t\tstart = p;\r\n\t\t\t\t\t\ts = S_ATTR;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase S_ATTR_END:\r\n\t\t\t\t\t\terrorHandler.warning('attribute space is required\"'+attrName+'\"!!')\r\n\t\t\t\t\tcase S_TAG_SPACE:\r\n\t\t\t\t\t\ts = S_ATTR;\r\n\t\t\t\t\t\tstart = p;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase S_EQ:\r\n\t\t\t\t\t\ts = S_ATTR_NOQUOT_VALUE;\r\n\t\t\t\t\t\tstart = p;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase S_TAG_CLOSE:\r\n\t\t\t\t\t\tthrow new Error(\"elements closed character '/' and '>' must be connected to\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}//end outer switch\r\n\t\t\t//console.log('p++',p)\r\n\t\t\tp++;\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @return true if has new namespace define\r\n\t */\r\n\tfunction appendElement(el,domBuilder,currentNSMap){\r\n\t\tvar tagName = el.tagName;\r\n\t\tvar localNSMap = null;\r\n\t\t//var currentNSMap = parseStack[parseStack.length-1].currentNSMap;\r\n\t\tvar i = el.length;\r\n\t\twhile(i--){\r\n\t\t\tvar a = el[i];\r\n\t\t\tvar qName = a.qName;\r\n\t\t\tvar value = a.value;\r\n\t\t\tvar nsp = qName.indexOf(':');\r\n\t\t\tif(nsp>0){\r\n\t\t\t\tvar prefix = a.prefix = qName.slice(0,nsp);\r\n\t\t\t\tvar localName = qName.slice(nsp+1);\r\n\t\t\t\tvar nsPrefix = prefix === 'xmlns' && localName\r\n\t\t\t}else{\r\n\t\t\t\tlocalName = qName;\r\n\t\t\t\tprefix = null\r\n\t\t\t\tnsPrefix = qName === 'xmlns' && ''\r\n\t\t\t}\r\n\t\t\t//can not set prefix,because prefix !== ''\r\n\t\t\ta.localName = localName ;\r\n\t\t\t//prefix == null for no ns prefix attribute \r\n\t\t\tif(nsPrefix !== false){//hack!!\r\n\t\t\t\tif(localNSMap == null){\r\n\t\t\t\t\tlocalNSMap = {}\r\n\t\t\t\t\t//console.log(currentNSMap,0)\r\n\t\t\t\t\t_copy(currentNSMap,currentNSMap={})\r\n\t\t\t\t\t//console.log(currentNSMap,1)\r\n\t\t\t\t}\r\n\t\t\t\tcurrentNSMap[nsPrefix] = localNSMap[nsPrefix] = value;\r\n\t\t\t\ta.uri = 'http://www.w3.org/2000/xmlns/'\r\n\t\t\t\tdomBuilder.startPrefixMapping(nsPrefix, value) \r\n\t\t\t}\r\n\t\t}\r\n\t\tvar i = el.length;\r\n\t\twhile(i--){\r\n\t\t\ta = el[i];\r\n\t\t\tvar prefix = a.prefix;\r\n\t\t\tif(prefix){//no prefix attribute has no namespace\r\n\t\t\t\tif(prefix === 'xml'){\r\n\t\t\t\t\ta.uri = 'http://www.w3.org/XML/1998/namespace';\r\n\t\t\t\t}if(prefix !== 'xmlns'){\r\n\t\t\t\t\ta.uri = currentNSMap[prefix || '']\r\n\t\t\t\t\t\r\n\t\t\t\t\t//{console.log('###'+a.qName,domBuilder.locator.systemId+'',currentNSMap,a.uri)}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar nsp = tagName.indexOf(':');\r\n\t\tif(nsp>0){\r\n\t\t\tprefix = el.prefix = tagName.slice(0,nsp);\r\n\t\t\tlocalName = el.localName = tagName.slice(nsp+1);\r\n\t\t}else{\r\n\t\t\tprefix = null;//important!!\r\n\t\t\tlocalName = el.localName = tagName;\r\n\t\t}\r\n\t\t//no prefix element has default namespace\r\n\t\tvar ns = el.uri = currentNSMap[prefix || ''];\r\n\t\tdomBuilder.startElement(ns,localName,tagName,el);\r\n\t\t//endPrefixMapping and startPrefixMapping have not any help for dom builder\r\n\t\t//localNSMap = null\r\n\t\tif(el.closed){\r\n\t\t\tdomBuilder.endElement(ns,localName,tagName);\r\n\t\t\tif(localNSMap){\r\n\t\t\t\tfor(prefix in localNSMap){\r\n\t\t\t\t\tdomBuilder.endPrefixMapping(prefix) \r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tel.currentNSMap = currentNSMap;\r\n\t\t\tel.localNSMap = localNSMap;\r\n\t\t\t//parseStack.push(el);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\tfunction parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){\r\n\t\tif(/^(?:script|textarea)$/i.test(tagName)){\r\n\t\t\tvar elEndStart =  source.indexOf('</'+tagName+'>',elStartEnd);\r\n\t\t\tvar text = source.substring(elStartEnd+1,elEndStart);\r\n\t\t\tif(/[&<]/.test(text)){\r\n\t\t\t\tif(/^script$/i.test(tagName)){\r\n\t\t\t\t\t//if(!/\\]\\]>/.test(text)){\r\n\t\t\t\t\t\t//lexHandler.startCDATA();\r\n\t\t\t\t\t\tdomBuilder.characters(text,0,text.length);\r\n\t\t\t\t\t\t//lexHandler.endCDATA();\r\n\t\t\t\t\t\treturn elEndStart;\r\n\t\t\t\t\t//}\r\n\t\t\t\t}//}else{//text area\r\n\t\t\t\t\ttext = text.replace(/&#?\\w+;/g,entityReplacer);\r\n\t\t\t\t\tdomBuilder.characters(text,0,text.length);\r\n\t\t\t\t\treturn elEndStart;\r\n\t\t\t\t//}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn elStartEnd+1;\r\n\t}\r\n\tfunction fixSelfClosed(source,elStartEnd,tagName,closeMap){\r\n\t\t//if(tagName in closeMap){\r\n\t\tvar pos = closeMap[tagName];\r\n\t\tif(pos == null){\r\n\t\t\t//console.log(tagName)\r\n\t\t\tpos =  source.lastIndexOf('</'+tagName+'>')\r\n\t\t\tif(pos<elStartEnd){//忘记闭合\r\n\t\t\t\tpos = source.lastIndexOf('</'+tagName)\r\n\t\t\t}\r\n\t\t\tcloseMap[tagName] =pos\r\n\t\t}\r\n\t\treturn pos<elStartEnd;\r\n\t\t//} \r\n\t}\r\n\tfunction _copy(source,target){\r\n\t\tfor(var n in source){target[n] = source[n]}\r\n\t}\r\n\tfunction parseDCC(source,start,domBuilder,errorHandler){//sure start with '<!'\r\n\t\tvar next= source.charAt(start+2)\r\n\t\tswitch(next){\r\n\t\tcase '-':\r\n\t\t\tif(source.charAt(start + 3) === '-'){\r\n\t\t\t\tvar end = source.indexOf('-->',start+4);\r\n\t\t\t\t//append comment source.substring(4,end)//<!--\r\n\t\t\t\tif(end>start){\r\n\t\t\t\t\tdomBuilder.comment(source,start+4,end-start-4);\r\n\t\t\t\t\treturn end+3;\r\n\t\t\t\t}else{\r\n\t\t\t\t\terrorHandler.error(\"Unclosed comment\");\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\t//error\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\tif(source.substr(start+3,6) == 'CDATA['){\r\n\t\t\t\tvar end = source.indexOf(']]>',start+9);\r\n\t\t\t\tdomBuilder.startCDATA();\r\n\t\t\t\tdomBuilder.characters(source,start+9,end-start-9);\r\n\t\t\t\tdomBuilder.endCDATA() \r\n\t\t\t\treturn end+3;\r\n\t\t\t}\r\n\t\t\t//<!DOCTYPE\r\n\t\t\t//startDTD(java.lang.String name, java.lang.String publicId, java.lang.String systemId) \r\n\t\t\tvar matchs = split(source,start);\r\n\t\t\tvar len = matchs.length;\r\n\t\t\tif(len>1 && /!doctype/i.test(matchs[0][0])){\r\n\t\t\t\tvar name = matchs[1][0];\r\n\t\t\t\tvar pubid = len>3 && /^public$/i.test(matchs[2][0]) && matchs[3][0]\r\n\t\t\t\tvar sysid = len>4 && matchs[4][0];\r\n\t\t\t\tvar lastMatch = matchs[len-1]\r\n\t\t\t\tdomBuilder.startDTD(name,pubid && pubid.replace(/^(['\"])(.*?)\\1$/,'$2'),\r\n\t\t\t\t\t\tsysid && sysid.replace(/^(['\"])(.*?)\\1$/,'$2'));\r\n\t\t\t\tdomBuilder.endDTD();\r\n\t\t\t\t\r\n\t\t\t\treturn lastMatch.index+lastMatch[0].length\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1;\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\tfunction parseInstruction(source,start,domBuilder){\r\n\t\tvar end = source.indexOf('?>',start);\r\n\t\tif(end){\r\n\t\t\tvar match = source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);\r\n\t\t\tif(match){\r\n\t\t\t\tvar len = match[0].length;\r\n\t\t\t\tdomBuilder.processingInstruction(match[1], match[2]) ;\r\n\t\t\t\treturn end+2;\r\n\t\t\t}else{//error\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param source\r\n\t */\r\n\tfunction ElementAttributes(source){\r\n\t\t\r\n\t}\r\n\tElementAttributes.prototype = {\r\n\t\tsetTagName:function(tagName){\r\n\t\t\tif(!tagNamePattern.test(tagName)){\r\n\t\t\t\tthrow new Error('invalid tagName:'+tagName)\r\n\t\t\t}\r\n\t\t\tthis.tagName = tagName\r\n\t\t},\r\n\t\tadd:function(qName,value,offset){\r\n\t\t\tif(!tagNamePattern.test(qName)){\r\n\t\t\t\tthrow new Error('invalid attribute:'+qName)\r\n\t\t\t}\r\n\t\t\tthis[this.length++] = {qName:qName,value:value,offset:offset}\r\n\t\t},\r\n\t\tlength:0,\r\n\t\tgetLocalName:function(i){return this[i].localName},\r\n\t\tgetLocator:function(i){return this[i].locator},\r\n\t\tgetQName:function(i){return this[i].qName},\r\n\t\tgetURI:function(i){return this[i].uri},\r\n\t\tgetValue:function(i){return this[i].value}\r\n\t//\t,getIndex:function(uri, localName)){\r\n\t//\t\tif(localName){\r\n\t//\t\t\t\r\n\t//\t\t}else{\r\n\t//\t\t\tvar qName = uri\r\n\t//\t\t}\r\n\t//\t},\r\n\t//\tgetValue:function(){return this.getValue(this.getIndex.apply(this,arguments))},\r\n\t//\tgetType:function(uri,localName){}\r\n\t//\tgetType:function(i){},\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\tfunction _set_proto_(thiz,parent){\r\n\t\tthiz.__proto__ = parent;\r\n\t\treturn thiz;\r\n\t}\r\n\tif(!(_set_proto_({},_set_proto_.prototype) instanceof _set_proto_)){\r\n\t\t_set_proto_ = function(thiz,parent){\r\n\t\t\tfunction p(){};\r\n\t\t\tp.prototype = parent;\r\n\t\t\tp = new p();\r\n\t\t\tfor(parent in thiz){\r\n\t\t\t\tp[parent] = thiz[parent];\r\n\t\t\t}\r\n\t\t\treturn p;\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction split(source,start){\r\n\t\tvar match;\r\n\t\tvar buf = [];\r\n\t\tvar reg = /'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;\r\n\t\treg.lastIndex = start;\r\n\t\treg.exec(source);//skip <\r\n\t\twhile(match = reg.exec(source)){\r\n\t\t\tbuf.push(match);\r\n\t\t\tif(match[1])return buf;\r\n\t\t}\r\n\t}\r\n\t\r\n\texports.XMLReader = XMLReader;\r\n\t\r\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\t/*\n\t * DOM Level 2\n\t * Object DOMException\n\t * @see http://www.w3.org/TR/REC-DOM-Level-1/ecma-script-language-binding.html\n\t * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html\n\t */\n\t\n\tfunction copy(src,dest){\n\t\tfor(var p in src){\n\t\t\tdest[p] = src[p];\n\t\t}\n\t}\n\t/**\n\t^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*((?:.*\\{\\s*?[\\r\\n][\\s\\S]*?^})|\\S.*?(?=[;\\r\\n]));?\n\t^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*(\\S.*?(?=[;\\r\\n]));?\n\t */\n\tfunction _extends(Class,Super){\n\t\tvar pt = Class.prototype;\n\t\tif(Object.create){\n\t\t\tvar ppt = Object.create(Super.prototype)\n\t\t\tpt.__proto__ = ppt;\n\t\t}\n\t\tif(!(pt instanceof Super)){\n\t\t\tfunction t(){};\n\t\t\tt.prototype = Super.prototype;\n\t\t\tt = new t();\n\t\t\tcopy(pt,t);\n\t\t\tClass.prototype = pt = t;\n\t\t}\n\t\tif(pt.constructor != Class){\n\t\t\tif(typeof Class != 'function'){\n\t\t\t\tconsole.error(\"unknow Class:\"+Class)\n\t\t\t}\n\t\t\tpt.constructor = Class\n\t\t}\n\t}\n\tvar htmlns = 'http://www.w3.org/1999/xhtml' ;\n\t// Node Types\n\tvar NodeType = {}\n\tvar ELEMENT_NODE                = NodeType.ELEMENT_NODE                = 1;\n\tvar ATTRIBUTE_NODE              = NodeType.ATTRIBUTE_NODE              = 2;\n\tvar TEXT_NODE                   = NodeType.TEXT_NODE                   = 3;\n\tvar CDATA_SECTION_NODE          = NodeType.CDATA_SECTION_NODE          = 4;\n\tvar ENTITY_REFERENCE_NODE       = NodeType.ENTITY_REFERENCE_NODE       = 5;\n\tvar ENTITY_NODE                 = NodeType.ENTITY_NODE                 = 6;\n\tvar PROCESSING_INSTRUCTION_NODE = NodeType.PROCESSING_INSTRUCTION_NODE = 7;\n\tvar COMMENT_NODE                = NodeType.COMMENT_NODE                = 8;\n\tvar DOCUMENT_NODE               = NodeType.DOCUMENT_NODE               = 9;\n\tvar DOCUMENT_TYPE_NODE          = NodeType.DOCUMENT_TYPE_NODE          = 10;\n\tvar DOCUMENT_FRAGMENT_NODE      = NodeType.DOCUMENT_FRAGMENT_NODE      = 11;\n\tvar NOTATION_NODE               = NodeType.NOTATION_NODE               = 12;\n\t\n\t// ExceptionCode\n\tvar ExceptionCode = {}\n\tvar ExceptionMessage = {};\n\tvar INDEX_SIZE_ERR              = ExceptionCode.INDEX_SIZE_ERR              = ((ExceptionMessage[1]=\"Index size error\"),1);\n\tvar DOMSTRING_SIZE_ERR          = ExceptionCode.DOMSTRING_SIZE_ERR          = ((ExceptionMessage[2]=\"DOMString size error\"),2);\n\tvar HIERARCHY_REQUEST_ERR       = ExceptionCode.HIERARCHY_REQUEST_ERR       = ((ExceptionMessage[3]=\"Hierarchy request error\"),3);\n\tvar WRONG_DOCUMENT_ERR          = ExceptionCode.WRONG_DOCUMENT_ERR          = ((ExceptionMessage[4]=\"Wrong document\"),4);\n\tvar INVALID_CHARACTER_ERR       = ExceptionCode.INVALID_CHARACTER_ERR       = ((ExceptionMessage[5]=\"Invalid character\"),5);\n\tvar NO_DATA_ALLOWED_ERR         = ExceptionCode.NO_DATA_ALLOWED_ERR         = ((ExceptionMessage[6]=\"No data allowed\"),6);\n\tvar NO_MODIFICATION_ALLOWED_ERR = ExceptionCode.NO_MODIFICATION_ALLOWED_ERR = ((ExceptionMessage[7]=\"No modification allowed\"),7);\n\tvar NOT_FOUND_ERR               = ExceptionCode.NOT_FOUND_ERR               = ((ExceptionMessage[8]=\"Not found\"),8);\n\tvar NOT_SUPPORTED_ERR           = ExceptionCode.NOT_SUPPORTED_ERR           = ((ExceptionMessage[9]=\"Not supported\"),9);\n\tvar INUSE_ATTRIBUTE_ERR         = ExceptionCode.INUSE_ATTRIBUTE_ERR         = ((ExceptionMessage[10]=\"Attribute in use\"),10);\n\t//level2\n\tvar INVALID_STATE_ERR        \t= ExceptionCode.INVALID_STATE_ERR        \t= ((ExceptionMessage[11]=\"Invalid state\"),11);\n\tvar SYNTAX_ERR               \t= ExceptionCode.SYNTAX_ERR               \t= ((ExceptionMessage[12]=\"Syntax error\"),12);\n\tvar INVALID_MODIFICATION_ERR \t= ExceptionCode.INVALID_MODIFICATION_ERR \t= ((ExceptionMessage[13]=\"Invalid modification\"),13);\n\tvar NAMESPACE_ERR            \t= ExceptionCode.NAMESPACE_ERR           \t= ((ExceptionMessage[14]=\"Invalid namespace\"),14);\n\tvar INVALID_ACCESS_ERR       \t= ExceptionCode.INVALID_ACCESS_ERR      \t= ((ExceptionMessage[15]=\"Invalid access\"),15);\n\t\n\t\n\tfunction DOMException(code, message) {\n\t\tif(message instanceof Error){\n\t\t\tvar error = message;\n\t\t}else{\n\t\t\terror = this;\n\t\t\tError.call(this, ExceptionMessage[code]);\n\t\t\tthis.message = ExceptionMessage[code];\n\t\t\tif(Error.captureStackTrace) Error.captureStackTrace(this, DOMException);\n\t\t}\n\t\terror.code = code;\n\t\tif(message) this.message = this.message + \": \" + message;\n\t\treturn error;\n\t};\n\tDOMException.prototype = Error.prototype;\n\tcopy(ExceptionCode,DOMException)\n\t/**\n\t * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-536297177\n\t * The NodeList interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented. NodeList objects in the DOM are live.\n\t * The items in the NodeList are accessible via an integral index, starting from 0.\n\t */\n\tfunction NodeList() {\n\t};\n\tNodeList.prototype = {\n\t\t/**\n\t\t * The number of nodes in the list. The range of valid child node indices is 0 to length-1 inclusive.\n\t\t * @standard level1\n\t\t */\n\t\tlength:0, \n\t\t/**\n\t\t * Returns the indexth item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null.\n\t\t * @standard level1\n\t\t * @param index  unsigned long \n\t\t *   Index into the collection.\n\t\t * @return Node\n\t\t * \tThe node at the indexth position in the NodeList, or null if that is not a valid index. \n\t\t */\n\t\titem: function(index) {\n\t\t\treturn this[index] || null;\n\t\t},\n\t\ttoString:function(isHTML,nodeFilter){\n\t\t\tfor(var buf = [], i = 0;i<this.length;i++){\n\t\t\t\tserializeToString(this[i],buf,isHTML,nodeFilter);\n\t\t\t}\n\t\t\treturn buf.join('');\n\t\t}\n\t};\n\tfunction LiveNodeList(node,refresh){\n\t\tthis._node = node;\n\t\tthis._refresh = refresh\n\t\t_updateLiveList(this);\n\t}\n\tfunction _updateLiveList(list){\n\t\tvar inc = list._node._inc || list._node.ownerDocument._inc;\n\t\tif(list._inc != inc){\n\t\t\tvar ls = list._refresh(list._node);\n\t\t\t//console.log(ls.length)\n\t\t\t__set__(list,'length',ls.length);\n\t\t\tcopy(ls,list);\n\t\t\tlist._inc = inc;\n\t\t}\n\t}\n\tLiveNodeList.prototype.item = function(i){\n\t\t_updateLiveList(this);\n\t\treturn this[i];\n\t}\n\t\n\t_extends(LiveNodeList,NodeList);\n\t/**\n\t * \n\t * Objects implementing the NamedNodeMap interface are used to represent collections of nodes that can be accessed by name. Note that NamedNodeMap does not inherit from NodeList; NamedNodeMaps are not maintained in any particular order. Objects contained in an object implementing NamedNodeMap may also be accessed by an ordinal index, but this is simply to allow convenient enumeration of the contents of a NamedNodeMap, and does not imply that the DOM specifies an order to these Nodes.\n\t * NamedNodeMap objects in the DOM are live.\n\t * used for attributes or DocumentType entities \n\t */\n\tfunction NamedNodeMap() {\n\t};\n\t\n\tfunction _findNodeIndex(list,node){\n\t\tvar i = list.length;\n\t\twhile(i--){\n\t\t\tif(list[i] === node){return i}\n\t\t}\n\t}\n\t\n\tfunction _addNamedNode(el,list,newAttr,oldAttr){\n\t\tif(oldAttr){\n\t\t\tlist[_findNodeIndex(list,oldAttr)] = newAttr;\n\t\t}else{\n\t\t\tlist[list.length++] = newAttr;\n\t\t}\n\t\tif(el){\n\t\t\tnewAttr.ownerElement = el;\n\t\t\tvar doc = el.ownerDocument;\n\t\t\tif(doc){\n\t\t\t\toldAttr && _onRemoveAttribute(doc,el,oldAttr);\n\t\t\t\t_onAddAttribute(doc,el,newAttr);\n\t\t\t}\n\t\t}\n\t}\n\tfunction _removeNamedNode(el,list,attr){\n\t\t//console.log('remove attr:'+attr)\n\t\tvar i = _findNodeIndex(list,attr);\n\t\tif(i>=0){\n\t\t\tvar lastIndex = list.length-1\n\t\t\twhile(i<lastIndex){\n\t\t\t\tlist[i] = list[++i]\n\t\t\t}\n\t\t\tlist.length = lastIndex;\n\t\t\tif(el){\n\t\t\t\tvar doc = el.ownerDocument;\n\t\t\t\tif(doc){\n\t\t\t\t\t_onRemoveAttribute(doc,el,attr);\n\t\t\t\t\tattr.ownerElement = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}else{\n\t\t\tthrow DOMException(NOT_FOUND_ERR,new Error(el.tagName+'@'+attr))\n\t\t}\n\t}\n\tNamedNodeMap.prototype = {\n\t\tlength:0,\n\t\titem:NodeList.prototype.item,\n\t\tgetNamedItem: function(key) {\n\t//\t\tif(key.indexOf(':')>0 || key == 'xmlns'){\n\t//\t\t\treturn null;\n\t//\t\t}\n\t\t\t//console.log()\n\t\t\tvar i = this.length;\n\t\t\twhile(i--){\n\t\t\t\tvar attr = this[i];\n\t\t\t\t//console.log(attr.nodeName,key)\n\t\t\t\tif(attr.nodeName == key){\n\t\t\t\t\treturn attr;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tsetNamedItem: function(attr) {\n\t\t\tvar el = attr.ownerElement;\n\t\t\tif(el && el!=this._ownerElement){\n\t\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\n\t\t\t}\n\t\t\tvar oldAttr = this.getNamedItem(attr.nodeName);\n\t\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\n\t\t\treturn oldAttr;\n\t\t},\n\t\t/* returns Node */\n\t\tsetNamedItemNS: function(attr) {// raises: WRONG_DOCUMENT_ERR,NO_MODIFICATION_ALLOWED_ERR,INUSE_ATTRIBUTE_ERR\n\t\t\tvar el = attr.ownerElement, oldAttr;\n\t\t\tif(el && el!=this._ownerElement){\n\t\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\n\t\t\t}\n\t\t\toldAttr = this.getNamedItemNS(attr.namespaceURI,attr.localName);\n\t\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\n\t\t\treturn oldAttr;\n\t\t},\n\t\n\t\t/* returns Node */\n\t\tremoveNamedItem: function(key) {\n\t\t\tvar attr = this.getNamedItem(key);\n\t\t\t_removeNamedNode(this._ownerElement,this,attr);\n\t\t\treturn attr;\n\t\t\t\n\t\t\t\n\t\t},// raises: NOT_FOUND_ERR,NO_MODIFICATION_ALLOWED_ERR\n\t\t\n\t\t//for level2\n\t\tremoveNamedItemNS:function(namespaceURI,localName){\n\t\t\tvar attr = this.getNamedItemNS(namespaceURI,localName);\n\t\t\t_removeNamedNode(this._ownerElement,this,attr);\n\t\t\treturn attr;\n\t\t},\n\t\tgetNamedItemNS: function(namespaceURI, localName) {\n\t\t\tvar i = this.length;\n\t\t\twhile(i--){\n\t\t\t\tvar node = this[i];\n\t\t\t\tif(node.localName == localName && node.namespaceURI == namespaceURI){\n\t\t\t\t\treturn node;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t};\n\t/**\n\t * @see http://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-102161490\n\t */\n\tfunction DOMImplementation(/* Object */ features) {\n\t\tthis._features = {};\n\t\tif (features) {\n\t\t\tfor (var feature in features) {\n\t\t\t\t this._features = features[feature];\n\t\t\t}\n\t\t}\n\t};\n\t\n\tDOMImplementation.prototype = {\n\t\thasFeature: function(/* string */ feature, /* string */ version) {\n\t\t\tvar versions = this._features[feature.toLowerCase()];\n\t\t\tif (versions && (!version || version in versions)) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\t// Introduced in DOM Level 2:\n\t\tcreateDocument:function(namespaceURI,  qualifiedName, doctype){// raises:INVALID_CHARACTER_ERR,NAMESPACE_ERR,WRONG_DOCUMENT_ERR\n\t\t\tvar doc = new Document();\n\t\t\tdoc.implementation = this;\n\t\t\tdoc.childNodes = new NodeList();\n\t\t\tdoc.doctype = doctype;\n\t\t\tif(doctype){\n\t\t\t\tdoc.appendChild(doctype);\n\t\t\t}\n\t\t\tif(qualifiedName){\n\t\t\t\tvar root = doc.createElementNS(namespaceURI,qualifiedName);\n\t\t\t\tdoc.appendChild(root);\n\t\t\t}\n\t\t\treturn doc;\n\t\t},\n\t\t// Introduced in DOM Level 2:\n\t\tcreateDocumentType:function(qualifiedName, publicId, systemId){// raises:INVALID_CHARACTER_ERR,NAMESPACE_ERR\n\t\t\tvar node = new DocumentType();\n\t\t\tnode.name = qualifiedName;\n\t\t\tnode.nodeName = qualifiedName;\n\t\t\tnode.publicId = publicId;\n\t\t\tnode.systemId = systemId;\n\t\t\t// Introduced in DOM Level 2:\n\t\t\t//readonly attribute DOMString        internalSubset;\n\t\t\t\n\t\t\t//TODO:..\n\t\t\t//  readonly attribute NamedNodeMap     entities;\n\t\t\t//  readonly attribute NamedNodeMap     notations;\n\t\t\treturn node;\n\t\t}\n\t};\n\t\n\t\n\t/**\n\t * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1950641247\n\t */\n\t\n\tfunction Node() {\n\t};\n\t\n\tNode.prototype = {\n\t\tfirstChild : null,\n\t\tlastChild : null,\n\t\tpreviousSibling : null,\n\t\tnextSibling : null,\n\t\tattributes : null,\n\t\tparentNode : null,\n\t\tchildNodes : null,\n\t\townerDocument : null,\n\t\tnodeValue : null,\n\t\tnamespaceURI : null,\n\t\tprefix : null,\n\t\tlocalName : null,\n\t\t// Modified in DOM Level 2:\n\t\tinsertBefore:function(newChild, refChild){//raises \n\t\t\treturn _insertBefore(this,newChild,refChild);\n\t\t},\n\t\treplaceChild:function(newChild, oldChild){//raises \n\t\t\tthis.insertBefore(newChild,oldChild);\n\t\t\tif(oldChild){\n\t\t\t\tthis.removeChild(oldChild);\n\t\t\t}\n\t\t},\n\t\tremoveChild:function(oldChild){\n\t\t\treturn _removeChild(this,oldChild);\n\t\t},\n\t\tappendChild:function(newChild){\n\t\t\treturn this.insertBefore(newChild,null);\n\t\t},\n\t\thasChildNodes:function(){\n\t\t\treturn this.firstChild != null;\n\t\t},\n\t\tcloneNode:function(deep){\n\t\t\treturn cloneNode(this.ownerDocument||this,this,deep);\n\t\t},\n\t\t// Modified in DOM Level 2:\n\t\tnormalize:function(){\n\t\t\tvar child = this.firstChild;\n\t\t\twhile(child){\n\t\t\t\tvar next = child.nextSibling;\n\t\t\t\tif(next && next.nodeType == TEXT_NODE && child.nodeType == TEXT_NODE){\n\t\t\t\t\tthis.removeChild(next);\n\t\t\t\t\tchild.appendData(next.data);\n\t\t\t\t}else{\n\t\t\t\t\tchild.normalize();\n\t\t\t\t\tchild = next;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t  \t// Introduced in DOM Level 2:\n\t\tisSupported:function(feature, version){\n\t\t\treturn this.ownerDocument.implementation.hasFeature(feature,version);\n\t\t},\n\t    // Introduced in DOM Level 2:\n\t    hasAttributes:function(){\n\t    \treturn this.attributes.length>0;\n\t    },\n\t    lookupPrefix:function(namespaceURI){\n\t    \tvar el = this;\n\t    \twhile(el){\n\t    \t\tvar map = el._nsMap;\n\t    \t\t//console.dir(map)\n\t    \t\tif(map){\n\t    \t\t\tfor(var n in map){\n\t    \t\t\t\tif(map[n] == namespaceURI){\n\t    \t\t\t\t\treturn n;\n\t    \t\t\t\t}\n\t    \t\t\t}\n\t    \t\t}\n\t    \t\tel = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;\n\t    \t}\n\t    \treturn null;\n\t    },\n\t    // Introduced in DOM Level 3:\n\t    lookupNamespaceURI:function(prefix){\n\t    \tvar el = this;\n\t    \twhile(el){\n\t    \t\tvar map = el._nsMap;\n\t    \t\t//console.dir(map)\n\t    \t\tif(map){\n\t    \t\t\tif(prefix in map){\n\t    \t\t\t\treturn map[prefix] ;\n\t    \t\t\t}\n\t    \t\t}\n\t    \t\tel = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;\n\t    \t}\n\t    \treturn null;\n\t    },\n\t    // Introduced in DOM Level 3:\n\t    isDefaultNamespace:function(namespaceURI){\n\t    \tvar prefix = this.lookupPrefix(namespaceURI);\n\t    \treturn prefix == null;\n\t    }\n\t};\n\t\n\t\n\tfunction _xmlEncoder(c){\n\t\treturn c == '<' && '&lt;' ||\n\t         c == '>' && '&gt;' ||\n\t         c == '&' && '&amp;' ||\n\t         c == '\"' && '&quot;' ||\n\t         '&#'+c.charCodeAt()+';'\n\t}\n\t\n\t\n\tcopy(NodeType,Node);\n\tcopy(NodeType,Node.prototype);\n\t\n\t/**\n\t * @param callback return true for continue,false for break\n\t * @return boolean true: break visit;\n\t */\n\tfunction _visitNode(node,callback){\n\t\tif(callback(node)){\n\t\t\treturn true;\n\t\t}\n\t\tif(node = node.firstChild){\n\t\t\tdo{\n\t\t\t\tif(_visitNode(node,callback)){return true}\n\t        }while(node=node.nextSibling)\n\t    }\n\t}\n\t\n\t\n\t\n\tfunction Document(){\n\t}\n\tfunction _onAddAttribute(doc,el,newAttr){\n\t\tdoc && doc._inc++;\n\t\tvar ns = newAttr.namespaceURI ;\n\t\tif(ns == 'http://www.w3.org/2000/xmlns/'){\n\t\t\t//update namespace\n\t\t\tel._nsMap[newAttr.prefix?newAttr.localName:''] = newAttr.value\n\t\t}\n\t}\n\tfunction _onRemoveAttribute(doc,el,newAttr,remove){\n\t\tdoc && doc._inc++;\n\t\tvar ns = newAttr.namespaceURI ;\n\t\tif(ns == 'http://www.w3.org/2000/xmlns/'){\n\t\t\t//update namespace\n\t\t\tdelete el._nsMap[newAttr.prefix?newAttr.localName:'']\n\t\t}\n\t}\n\tfunction _onUpdateChild(doc,el,newChild){\n\t\tif(doc && doc._inc){\n\t\t\tdoc._inc++;\n\t\t\t//update childNodes\n\t\t\tvar cs = el.childNodes;\n\t\t\tif(newChild){\n\t\t\t\tcs[cs.length++] = newChild;\n\t\t\t}else{\n\t\t\t\t//console.log(1)\n\t\t\t\tvar child = el.firstChild;\n\t\t\t\tvar i = 0;\n\t\t\t\twhile(child){\n\t\t\t\t\tcs[i++] = child;\n\t\t\t\t\tchild =child.nextSibling;\n\t\t\t\t}\n\t\t\t\tcs.length = i;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t/**\n\t * attributes;\n\t * children;\n\t * \n\t * writeable properties:\n\t * nodeValue,Attr:value,CharacterData:data\n\t * prefix\n\t */\n\tfunction _removeChild(parentNode,child){\n\t\tvar previous = child.previousSibling;\n\t\tvar next = child.nextSibling;\n\t\tif(previous){\n\t\t\tprevious.nextSibling = next;\n\t\t}else{\n\t\t\tparentNode.firstChild = next\n\t\t}\n\t\tif(next){\n\t\t\tnext.previousSibling = previous;\n\t\t}else{\n\t\t\tparentNode.lastChild = previous;\n\t\t}\n\t\t_onUpdateChild(parentNode.ownerDocument,parentNode);\n\t\treturn child;\n\t}\n\t/**\n\t * preformance key(refChild == null)\n\t */\n\tfunction _insertBefore(parentNode,newChild,nextChild){\n\t\tvar cp = newChild.parentNode;\n\t\tif(cp){\n\t\t\tcp.removeChild(newChild);//remove and update\n\t\t}\n\t\tif(newChild.nodeType === DOCUMENT_FRAGMENT_NODE){\n\t\t\tvar newFirst = newChild.firstChild;\n\t\t\tif (newFirst == null) {\n\t\t\t\treturn newChild;\n\t\t\t}\n\t\t\tvar newLast = newChild.lastChild;\n\t\t}else{\n\t\t\tnewFirst = newLast = newChild;\n\t\t}\n\t\tvar pre = nextChild ? nextChild.previousSibling : parentNode.lastChild;\n\t\n\t\tnewFirst.previousSibling = pre;\n\t\tnewLast.nextSibling = nextChild;\n\t\t\n\t\t\n\t\tif(pre){\n\t\t\tpre.nextSibling = newFirst;\n\t\t}else{\n\t\t\tparentNode.firstChild = newFirst;\n\t\t}\n\t\tif(nextChild == null){\n\t\t\tparentNode.lastChild = newLast;\n\t\t}else{\n\t\t\tnextChild.previousSibling = newLast;\n\t\t}\n\t\tdo{\n\t\t\tnewFirst.parentNode = parentNode;\n\t\t}while(newFirst !== newLast && (newFirst= newFirst.nextSibling))\n\t\t_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);\n\t\t//console.log(parentNode.lastChild.nextSibling == null)\n\t\tif (newChild.nodeType == DOCUMENT_FRAGMENT_NODE) {\n\t\t\tnewChild.firstChild = newChild.lastChild = null;\n\t\t}\n\t\treturn newChild;\n\t}\n\tfunction _appendSingleChild(parentNode,newChild){\n\t\tvar cp = newChild.parentNode;\n\t\tif(cp){\n\t\t\tvar pre = parentNode.lastChild;\n\t\t\tcp.removeChild(newChild);//remove and update\n\t\t\tvar pre = parentNode.lastChild;\n\t\t}\n\t\tvar pre = parentNode.lastChild;\n\t\tnewChild.parentNode = parentNode;\n\t\tnewChild.previousSibling = pre;\n\t\tnewChild.nextSibling = null;\n\t\tif(pre){\n\t\t\tpre.nextSibling = newChild;\n\t\t}else{\n\t\t\tparentNode.firstChild = newChild;\n\t\t}\n\t\tparentNode.lastChild = newChild;\n\t\t_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);\n\t\treturn newChild;\n\t\t//console.log(\"__aa\",parentNode.lastChild.nextSibling == null)\n\t}\n\tDocument.prototype = {\n\t\t//implementation : null,\n\t\tnodeName :  '#document',\n\t\tnodeType :  DOCUMENT_NODE,\n\t\tdoctype :  null,\n\t\tdocumentElement :  null,\n\t\t_inc : 1,\n\t\t\n\t\tinsertBefore :  function(newChild, refChild){//raises \n\t\t\tif(newChild.nodeType == DOCUMENT_FRAGMENT_NODE){\n\t\t\t\tvar child = newChild.firstChild;\n\t\t\t\twhile(child){\n\t\t\t\t\tvar next = child.nextSibling;\n\t\t\t\t\tthis.insertBefore(child,refChild);\n\t\t\t\t\tchild = next;\n\t\t\t\t}\n\t\t\t\treturn newChild;\n\t\t\t}\n\t\t\tif(this.documentElement == null && newChild.nodeType == ELEMENT_NODE){\n\t\t\t\tthis.documentElement = newChild;\n\t\t\t}\n\t\t\t\n\t\t\treturn _insertBefore(this,newChild,refChild),(newChild.ownerDocument = this),newChild;\n\t\t},\n\t\tremoveChild :  function(oldChild){\n\t\t\tif(this.documentElement == oldChild){\n\t\t\t\tthis.documentElement = null;\n\t\t\t}\n\t\t\treturn _removeChild(this,oldChild);\n\t\t},\n\t\t// Introduced in DOM Level 2:\n\t\timportNode : function(importedNode,deep){\n\t\t\treturn importNode(this,importedNode,deep);\n\t\t},\n\t\t// Introduced in DOM Level 2:\n\t\tgetElementById :\tfunction(id){\n\t\t\tvar rtv = null;\n\t\t\t_visitNode(this.documentElement,function(node){\n\t\t\t\tif(node.nodeType == ELEMENT_NODE){\n\t\t\t\t\tif(node.getAttribute('id') == id){\n\t\t\t\t\t\trtv = node;\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\treturn rtv;\n\t\t},\n\t\t\n\t\t//document factory method:\n\t\tcreateElement :\tfunction(tagName){\n\t\t\tvar node = new Element();\n\t\t\tnode.ownerDocument = this;\n\t\t\tnode.nodeName = tagName;\n\t\t\tnode.tagName = tagName;\n\t\t\tnode.childNodes = new NodeList();\n\t\t\tvar attrs\t= node.attributes = new NamedNodeMap();\n\t\t\tattrs._ownerElement = node;\n\t\t\treturn node;\n\t\t},\n\t\tcreateDocumentFragment :\tfunction(){\n\t\t\tvar node = new DocumentFragment();\n\t\t\tnode.ownerDocument = this;\n\t\t\tnode.childNodes = new NodeList();\n\t\t\treturn node;\n\t\t},\n\t\tcreateTextNode :\tfunction(data){\n\t\t\tvar node = new Text();\n\t\t\tnode.ownerDocument = this;\n\t\t\tnode.appendData(data)\n\t\t\treturn node;\n\t\t},\n\t\tcreateComment :\tfunction(data){\n\t\t\tvar node = new Comment();\n\t\t\tnode.ownerDocument = this;\n\t\t\tnode.appendData(data)\n\t\t\treturn node;\n\t\t},\n\t\tcreateCDATASection :\tfunction(data){\n\t\t\tvar node = new CDATASection();\n\t\t\tnode.ownerDocument = this;\n\t\t\tnode.appendData(data)\n\t\t\treturn node;\n\t\t},\n\t\tcreateProcessingInstruction :\tfunction(target,data){\n\t\t\tvar node = new ProcessingInstruction();\n\t\t\tnode.ownerDocument = this;\n\t\t\tnode.tagName = node.target = target;\n\t\t\tnode.nodeValue= node.data = data;\n\t\t\treturn node;\n\t\t},\n\t\tcreateAttribute :\tfunction(name){\n\t\t\tvar node = new Attr();\n\t\t\tnode.ownerDocument\t= this;\n\t\t\tnode.name = name;\n\t\t\tnode.nodeName\t= name;\n\t\t\tnode.localName = name;\n\t\t\tnode.specified = true;\n\t\t\treturn node;\n\t\t},\n\t\tcreateEntityReference :\tfunction(name){\n\t\t\tvar node = new EntityReference();\n\t\t\tnode.ownerDocument\t= this;\n\t\t\tnode.nodeName\t= name;\n\t\t\treturn node;\n\t\t},\n\t\t// Introduced in DOM Level 2:\n\t\tcreateElementNS :\tfunction(namespaceURI,qualifiedName){\n\t\t\tvar node = new Element();\n\t\t\tvar pl = qualifiedName.split(':');\n\t\t\tvar attrs\t= node.attributes = new NamedNodeMap();\n\t\t\tnode.childNodes = new NodeList();\n\t\t\tnode.ownerDocument = this;\n\t\t\tnode.nodeName = qualifiedName;\n\t\t\tnode.tagName = qualifiedName;\n\t\t\tnode.namespaceURI = namespaceURI;\n\t\t\tif(pl.length == 2){\n\t\t\t\tnode.prefix = pl[0];\n\t\t\t\tnode.localName = pl[1];\n\t\t\t}else{\n\t\t\t\t//el.prefix = null;\n\t\t\t\tnode.localName = qualifiedName;\n\t\t\t}\n\t\t\tattrs._ownerElement = node;\n\t\t\treturn node;\n\t\t},\n\t\t// Introduced in DOM Level 2:\n\t\tcreateAttributeNS :\tfunction(namespaceURI,qualifiedName){\n\t\t\tvar node = new Attr();\n\t\t\tvar pl = qualifiedName.split(':');\n\t\t\tnode.ownerDocument = this;\n\t\t\tnode.nodeName = qualifiedName;\n\t\t\tnode.name = qualifiedName;\n\t\t\tnode.namespaceURI = namespaceURI;\n\t\t\tnode.specified = true;\n\t\t\tif(pl.length == 2){\n\t\t\t\tnode.prefix = pl[0];\n\t\t\t\tnode.localName = pl[1];\n\t\t\t}else{\n\t\t\t\t//el.prefix = null;\n\t\t\t\tnode.localName = qualifiedName;\n\t\t\t}\n\t\t\treturn node;\n\t\t}\n\t};\n\t_extends(Document,Node);\n\t\n\t\n\tfunction Element() {\n\t\tthis._nsMap = {};\n\t};\n\tElement.prototype = {\n\t\tnodeType : ELEMENT_NODE,\n\t\thasAttribute : function(name){\n\t\t\treturn this.getAttributeNode(name)!=null;\n\t\t},\n\t\tgetAttribute : function(name){\n\t\t\tvar attr = this.getAttributeNode(name);\n\t\t\treturn attr && attr.value || '';\n\t\t},\n\t\tgetAttributeNode : function(name){\n\t\t\treturn this.attributes.getNamedItem(name);\n\t\t},\n\t\tsetAttribute : function(name, value){\n\t\t\tvar attr = this.ownerDocument.createAttribute(name);\n\t\t\tattr.value = attr.nodeValue = \"\" + value;\n\t\t\tthis.setAttributeNode(attr)\n\t\t},\n\t\tremoveAttribute : function(name){\n\t\t\tvar attr = this.getAttributeNode(name)\n\t\t\tattr && this.removeAttributeNode(attr);\n\t\t},\n\t\t\n\t\t//four real opeartion method\n\t\tappendChild:function(newChild){\n\t\t\tif(newChild.nodeType === DOCUMENT_FRAGMENT_NODE){\n\t\t\t\treturn this.insertBefore(newChild,null);\n\t\t\t}else{\n\t\t\t\treturn _appendSingleChild(this,newChild);\n\t\t\t}\n\t\t},\n\t\tsetAttributeNode : function(newAttr){\n\t\t\treturn this.attributes.setNamedItem(newAttr);\n\t\t},\n\t\tsetAttributeNodeNS : function(newAttr){\n\t\t\treturn this.attributes.setNamedItemNS(newAttr);\n\t\t},\n\t\tremoveAttributeNode : function(oldAttr){\n\t\t\t//console.log(this == oldAttr.ownerElement)\n\t\t\treturn this.attributes.removeNamedItem(oldAttr.nodeName);\n\t\t},\n\t\t//get real attribute name,and remove it by removeAttributeNode\n\t\tremoveAttributeNS : function(namespaceURI, localName){\n\t\t\tvar old = this.getAttributeNodeNS(namespaceURI, localName);\n\t\t\told && this.removeAttributeNode(old);\n\t\t},\n\t\t\n\t\thasAttributeNS : function(namespaceURI, localName){\n\t\t\treturn this.getAttributeNodeNS(namespaceURI, localName)!=null;\n\t\t},\n\t\tgetAttributeNS : function(namespaceURI, localName){\n\t\t\tvar attr = this.getAttributeNodeNS(namespaceURI, localName);\n\t\t\treturn attr && attr.value || '';\n\t\t},\n\t\tsetAttributeNS : function(namespaceURI, qualifiedName, value){\n\t\t\tvar attr = this.ownerDocument.createAttributeNS(namespaceURI, qualifiedName);\n\t\t\tattr.value = attr.nodeValue = \"\" + value;\n\t\t\tthis.setAttributeNode(attr)\n\t\t},\n\t\tgetAttributeNodeNS : function(namespaceURI, localName){\n\t\t\treturn this.attributes.getNamedItemNS(namespaceURI, localName);\n\t\t},\n\t\t\n\t\tgetElementsByTagName : function(tagName){\n\t\t\treturn new LiveNodeList(this,function(base){\n\t\t\t\tvar ls = [];\n\t\t\t\t_visitNode(base,function(node){\n\t\t\t\t\tif(node !== base && node.nodeType == ELEMENT_NODE && (tagName === '*' || node.tagName == tagName)){\n\t\t\t\t\t\tls.push(node);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn ls;\n\t\t\t});\n\t\t},\n\t\tgetElementsByTagNameNS : function(namespaceURI, localName){\n\t\t\treturn new LiveNodeList(this,function(base){\n\t\t\t\tvar ls = [];\n\t\t\t\t_visitNode(base,function(node){\n\t\t\t\t\tif(node !== base && node.nodeType === ELEMENT_NODE && (namespaceURI === '*' || node.namespaceURI === namespaceURI) && (localName === '*' || node.localName == localName)){\n\t\t\t\t\t\tls.push(node);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn ls;\n\t\t\t\t\n\t\t\t});\n\t\t}\n\t};\n\tDocument.prototype.getElementsByTagName = Element.prototype.getElementsByTagName;\n\tDocument.prototype.getElementsByTagNameNS = Element.prototype.getElementsByTagNameNS;\n\t\n\t\n\t_extends(Element,Node);\n\tfunction Attr() {\n\t};\n\tAttr.prototype.nodeType = ATTRIBUTE_NODE;\n\t_extends(Attr,Node);\n\t\n\t\n\tfunction CharacterData() {\n\t};\n\tCharacterData.prototype = {\n\t\tdata : '',\n\t\tsubstringData : function(offset, count) {\n\t\t\treturn this.data.substring(offset, offset+count);\n\t\t},\n\t\tappendData: function(text) {\n\t\t\ttext = this.data+text;\n\t\t\tthis.nodeValue = this.data = text;\n\t\t\tthis.length = text.length;\n\t\t},\n\t\tinsertData: function(offset,text) {\n\t\t\tthis.replaceData(offset,0,text);\n\t\t\n\t\t},\n\t\tappendChild:function(newChild){\n\t\t\tthrow new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])\n\t\t},\n\t\tdeleteData: function(offset, count) {\n\t\t\tthis.replaceData(offset,count,\"\");\n\t\t},\n\t\treplaceData: function(offset, count, text) {\n\t\t\tvar start = this.data.substring(0,offset);\n\t\t\tvar end = this.data.substring(offset+count);\n\t\t\ttext = start + text + end;\n\t\t\tthis.nodeValue = this.data = text;\n\t\t\tthis.length = text.length;\n\t\t}\n\t}\n\t_extends(CharacterData,Node);\n\tfunction Text() {\n\t};\n\tText.prototype = {\n\t\tnodeName : \"#text\",\n\t\tnodeType : TEXT_NODE,\n\t\tsplitText : function(offset) {\n\t\t\tvar text = this.data;\n\t\t\tvar newText = text.substring(offset);\n\t\t\ttext = text.substring(0, offset);\n\t\t\tthis.data = this.nodeValue = text;\n\t\t\tthis.length = text.length;\n\t\t\tvar newNode = this.ownerDocument.createTextNode(newText);\n\t\t\tif(this.parentNode){\n\t\t\t\tthis.parentNode.insertBefore(newNode, this.nextSibling);\n\t\t\t}\n\t\t\treturn newNode;\n\t\t}\n\t}\n\t_extends(Text,CharacterData);\n\tfunction Comment() {\n\t};\n\tComment.prototype = {\n\t\tnodeName : \"#comment\",\n\t\tnodeType : COMMENT_NODE\n\t}\n\t_extends(Comment,CharacterData);\n\t\n\tfunction CDATASection() {\n\t};\n\tCDATASection.prototype = {\n\t\tnodeName : \"#cdata-section\",\n\t\tnodeType : CDATA_SECTION_NODE\n\t}\n\t_extends(CDATASection,CharacterData);\n\t\n\t\n\tfunction DocumentType() {\n\t};\n\tDocumentType.prototype.nodeType = DOCUMENT_TYPE_NODE;\n\t_extends(DocumentType,Node);\n\t\n\tfunction Notation() {\n\t};\n\tNotation.prototype.nodeType = NOTATION_NODE;\n\t_extends(Notation,Node);\n\t\n\tfunction Entity() {\n\t};\n\tEntity.prototype.nodeType = ENTITY_NODE;\n\t_extends(Entity,Node);\n\t\n\tfunction EntityReference() {\n\t};\n\tEntityReference.prototype.nodeType = ENTITY_REFERENCE_NODE;\n\t_extends(EntityReference,Node);\n\t\n\tfunction DocumentFragment() {\n\t};\n\tDocumentFragment.prototype.nodeName =\t\"#document-fragment\";\n\tDocumentFragment.prototype.nodeType =\tDOCUMENT_FRAGMENT_NODE;\n\t_extends(DocumentFragment,Node);\n\t\n\t\n\tfunction ProcessingInstruction() {\n\t}\n\tProcessingInstruction.prototype.nodeType = PROCESSING_INSTRUCTION_NODE;\n\t_extends(ProcessingInstruction,Node);\n\tfunction XMLSerializer(){}\n\tXMLSerializer.prototype.serializeToString = function(node,isHtml,nodeFilter){\n\t\treturn nodeSerializeToString.call(node,isHtml,nodeFilter);\n\t}\n\tNode.prototype.toString = nodeSerializeToString;\n\tfunction nodeSerializeToString(isHtml,nodeFilter){\n\t\tvar buf = [];\n\t\tvar refNode = this.nodeType == 9?this.documentElement:this;\n\t\tvar prefix = refNode.prefix;\n\t\tvar uri = refNode.namespaceURI;\n\t\t\n\t\tif(uri && prefix == null){\n\t\t\t//console.log(prefix)\n\t\t\tvar prefix = refNode.lookupPrefix(uri);\n\t\t\tif(prefix == null){\n\t\t\t\t//isHTML = true;\n\t\t\t\tvar visibleNamespaces=[\n\t\t\t\t{namespace:uri,prefix:null}\n\t\t\t\t//{namespace:uri,prefix:''}\n\t\t\t\t]\n\t\t\t}\n\t\t}\n\t\tserializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);\n\t\t//console.log('###',this.nodeType,uri,prefix,buf.join(''))\n\t\treturn buf.join('');\n\t}\n\tfunction needNamespaceDefine(node,isHTML, visibleNamespaces) {\n\t\tvar prefix = node.prefix||'';\n\t\tvar uri = node.namespaceURI;\n\t\tif (!prefix && !uri){\n\t\t\treturn false;\n\t\t}\n\t\tif (prefix === \"xml\" && uri === \"http://www.w3.org/XML/1998/namespace\" \n\t\t\t|| uri == 'http://www.w3.org/2000/xmlns/'){\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tvar i = visibleNamespaces.length \n\t\t//console.log('@@@@',node.tagName,prefix,uri,visibleNamespaces)\n\t\twhile (i--) {\n\t\t\tvar ns = visibleNamespaces[i];\n\t\t\t// get namespace prefix\n\t\t\t//console.log(node.nodeType,node.tagName,ns.prefix,prefix)\n\t\t\tif (ns.prefix == prefix){\n\t\t\t\treturn ns.namespace != uri;\n\t\t\t}\n\t\t}\n\t\t//console.log(isHTML,uri,prefix=='')\n\t\t//if(isHTML && prefix ==null && uri == 'http://www.w3.org/1999/xhtml'){\n\t\t//\treturn false;\n\t\t//}\n\t\t//node.flag = '11111'\n\t\t//console.error(3,true,node.flag,node.prefix,node.namespaceURI)\n\t\treturn true;\n\t}\n\tfunction serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){\n\t\tif(nodeFilter){\n\t\t\tnode = nodeFilter(node);\n\t\t\tif(node){\n\t\t\t\tif(typeof node == 'string'){\n\t\t\t\t\tbuf.push(node);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t//buf.sort.apply(attrs, attributeSorter);\n\t\t}\n\t\tswitch(node.nodeType){\n\t\tcase ELEMENT_NODE:\n\t\t\tif (!visibleNamespaces) visibleNamespaces = [];\n\t\t\tvar startVisibleNamespaces = visibleNamespaces.length;\n\t\t\tvar attrs = node.attributes;\n\t\t\tvar len = attrs.length;\n\t\t\tvar child = node.firstChild;\n\t\t\tvar nodeName = node.tagName;\n\t\t\t\n\t\t\tisHTML =  (htmlns === node.namespaceURI) ||isHTML \n\t\t\tbuf.push('<',nodeName);\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tfor(var i=0;i<len;i++){\n\t\t\t\t// add namespaces for attributes\n\t\t\t\tvar attr = attrs.item(i);\n\t\t\t\tif (attr.prefix == 'xmlns') {\n\t\t\t\t\tvisibleNamespaces.push({ prefix: attr.localName, namespace: attr.value });\n\t\t\t\t}else if(attr.nodeName == 'xmlns'){\n\t\t\t\t\tvisibleNamespaces.push({ prefix: '', namespace: attr.value });\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(var i=0;i<len;i++){\n\t\t\t\tvar attr = attrs.item(i);\n\t\t\t\tif (needNamespaceDefine(attr,isHTML, visibleNamespaces)) {\n\t\t\t\t\tvar prefix = attr.prefix||'';\n\t\t\t\t\tvar uri = attr.namespaceURI;\n\t\t\t\t\tvar ns = prefix ? ' xmlns:' + prefix : \" xmlns\";\n\t\t\t\t\tbuf.push(ns, '=\"' , uri , '\"');\n\t\t\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace:uri });\n\t\t\t\t}\n\t\t\t\tserializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces);\n\t\t\t}\n\t\t\t// add namespace for current node\t\t\n\t\t\tif (needNamespaceDefine(node,isHTML, visibleNamespaces)) {\n\t\t\t\tvar prefix = node.prefix||'';\n\t\t\t\tvar uri = node.namespaceURI;\n\t\t\t\tvar ns = prefix ? ' xmlns:' + prefix : \" xmlns\";\n\t\t\t\tbuf.push(ns, '=\"' , uri , '\"');\n\t\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace:uri });\n\t\t\t}\n\t\t\t\n\t\t\tif(child || isHTML && !/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){\n\t\t\t\tbuf.push('>');\n\t\t\t\t//if is cdata child node\n\t\t\t\tif(isHTML && /^script$/i.test(nodeName)){\n\t\t\t\t\twhile(child){\n\t\t\t\t\t\tif(child.data){\n\t\t\t\t\t\t\tbuf.push(child.data);\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tserializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t\t}\n\t\t\t\t}else\n\t\t\t\t{\n\t\t\t\t\twhile(child){\n\t\t\t\t\t\tserializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);\n\t\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbuf.push('</',nodeName,'>');\n\t\t\t}else{\n\t\t\t\tbuf.push('/>');\n\t\t\t}\n\t\t\t// remove added visible namespaces\n\t\t\t//visibleNamespaces.length = startVisibleNamespaces;\n\t\t\treturn;\n\t\tcase DOCUMENT_NODE:\n\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\tvar child = node.firstChild;\n\t\t\twhile(child){\n\t\t\t\tserializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);\n\t\t\t\tchild = child.nextSibling;\n\t\t\t}\n\t\t\treturn;\n\t\tcase ATTRIBUTE_NODE:\n\t\t\treturn buf.push(' ',node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),'\"');\n\t\tcase TEXT_NODE:\n\t\t\treturn buf.push(node.data.replace(/[<&]/g,_xmlEncoder));\n\t\tcase CDATA_SECTION_NODE:\n\t\t\treturn buf.push( '<![CDATA[',node.data,']]>');\n\t\tcase COMMENT_NODE:\n\t\t\treturn buf.push( \"<!--\",node.data,\"-->\");\n\t\tcase DOCUMENT_TYPE_NODE:\n\t\t\tvar pubid = node.publicId;\n\t\t\tvar sysid = node.systemId;\n\t\t\tbuf.push('<!DOCTYPE ',node.name);\n\t\t\tif(pubid){\n\t\t\t\tbuf.push(' PUBLIC \"',pubid);\n\t\t\t\tif (sysid && sysid!='.') {\n\t\t\t\t\tbuf.push( '\" \"',sysid);\n\t\t\t\t}\n\t\t\t\tbuf.push('\">');\n\t\t\t}else if(sysid && sysid!='.'){\n\t\t\t\tbuf.push(' SYSTEM \"',sysid,'\">');\n\t\t\t}else{\n\t\t\t\tvar sub = node.internalSubset;\n\t\t\t\tif(sub){\n\t\t\t\t\tbuf.push(\" [\",sub,\"]\");\n\t\t\t\t}\n\t\t\t\tbuf.push(\">\");\n\t\t\t}\n\t\t\treturn;\n\t\tcase PROCESSING_INSTRUCTION_NODE:\n\t\t\treturn buf.push( \"<?\",node.target,\" \",node.data,\"?>\");\n\t\tcase ENTITY_REFERENCE_NODE:\n\t\t\treturn buf.push( '&',node.nodeName,';');\n\t\t//case ENTITY_NODE:\n\t\t//case NOTATION_NODE:\n\t\tdefault:\n\t\t\tbuf.push('??',node.nodeName);\n\t\t}\n\t}\n\tfunction importNode(doc,node,deep){\n\t\tvar node2;\n\t\tswitch (node.nodeType) {\n\t\tcase ELEMENT_NODE:\n\t\t\tnode2 = node.cloneNode(false);\n\t\t\tnode2.ownerDocument = doc;\n\t\t\t//var attrs = node2.attributes;\n\t\t\t//var len = attrs.length;\n\t\t\t//for(var i=0;i<len;i++){\n\t\t\t\t//node2.setAttributeNodeNS(importNode(doc,attrs.item(i),deep));\n\t\t\t//}\n\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\tbreak;\n\t\tcase ATTRIBUTE_NODE:\n\t\t\tdeep = true;\n\t\t\tbreak;\n\t\t//case ENTITY_REFERENCE_NODE:\n\t\t//case PROCESSING_INSTRUCTION_NODE:\n\t\t////case TEXT_NODE:\n\t\t//case CDATA_SECTION_NODE:\n\t\t//case COMMENT_NODE:\n\t\t//\tdeep = false;\n\t\t//\tbreak;\n\t\t//case DOCUMENT_NODE:\n\t\t//case DOCUMENT_TYPE_NODE:\n\t\t//cannot be imported.\n\t\t//case ENTITY_NODE:\n\t\t//case NOTATION_NODE：\n\t\t//can not hit in level3\n\t\t//default:throw e;\n\t\t}\n\t\tif(!node2){\n\t\t\tnode2 = node.cloneNode(false);//false\n\t\t}\n\t\tnode2.ownerDocument = doc;\n\t\tnode2.parentNode = null;\n\t\tif(deep){\n\t\t\tvar child = node.firstChild;\n\t\t\twhile(child){\n\t\t\t\tnode2.appendChild(importNode(doc,child,deep));\n\t\t\t\tchild = child.nextSibling;\n\t\t\t}\n\t\t}\n\t\treturn node2;\n\t}\n\t//\n\t//var _relationMap = {firstChild:1,lastChild:1,previousSibling:1,nextSibling:1,\n\t//\t\t\t\t\tattributes:1,childNodes:1,parentNode:1,documentElement:1,doctype,};\n\tfunction cloneNode(doc,node,deep){\n\t\tvar node2 = new node.constructor();\n\t\tfor(var n in node){\n\t\t\tvar v = node[n];\n\t\t\tif(typeof v != 'object' ){\n\t\t\t\tif(v != node2[n]){\n\t\t\t\t\tnode2[n] = v;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(node.childNodes){\n\t\t\tnode2.childNodes = new NodeList();\n\t\t}\n\t\tnode2.ownerDocument = doc;\n\t\tswitch (node2.nodeType) {\n\t\tcase ELEMENT_NODE:\n\t\t\tvar attrs\t= node.attributes;\n\t\t\tvar attrs2\t= node2.attributes = new NamedNodeMap();\n\t\t\tvar len = attrs.length\n\t\t\tattrs2._ownerElement = node2;\n\t\t\tfor(var i=0;i<len;i++){\n\t\t\t\tnode2.setAttributeNode(cloneNode(doc,attrs.item(i),true));\n\t\t\t}\n\t\t\tbreak;;\n\t\tcase ATTRIBUTE_NODE:\n\t\t\tdeep = true;\n\t\t}\n\t\tif(deep){\n\t\t\tvar child = node.firstChild;\n\t\t\twhile(child){\n\t\t\t\tnode2.appendChild(cloneNode(doc,child,deep));\n\t\t\t\tchild = child.nextSibling;\n\t\t\t}\n\t\t}\n\t\treturn node2;\n\t}\n\t\n\tfunction __set__(object,key,value){\n\t\tobject[key] = value\n\t}\n\t//do dynamic\n\ttry{\n\t\tif(Object.defineProperty){\n\t\t\tObject.defineProperty(LiveNodeList.prototype,'length',{\n\t\t\t\tget:function(){\n\t\t\t\t\t_updateLiveList(this);\n\t\t\t\t\treturn this.$$length;\n\t\t\t\t}\n\t\t\t});\n\t\t\tObject.defineProperty(Node.prototype,'textContent',{\n\t\t\t\tget:function(){\n\t\t\t\t\treturn getTextContent(this);\n\t\t\t\t},\n\t\t\t\tset:function(data){\n\t\t\t\t\tswitch(this.nodeType){\n\t\t\t\t\tcase ELEMENT_NODE:\n\t\t\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\t\t\t\twhile(this.firstChild){\n\t\t\t\t\t\t\tthis.removeChild(this.firstChild);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(data || String(data)){\n\t\t\t\t\t\t\tthis.appendChild(this.ownerDocument.createTextNode(data));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t//TODO:\n\t\t\t\t\t\tthis.data = data;\n\t\t\t\t\t\tthis.value = data;\n\t\t\t\t\t\tthis.nodeValue = data;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\t\n\t\t\tfunction getTextContent(node){\n\t\t\t\tswitch(node.nodeType){\n\t\t\t\tcase ELEMENT_NODE:\n\t\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\t\t\tvar buf = [];\n\t\t\t\t\tnode = node.firstChild;\n\t\t\t\t\twhile(node){\n\t\t\t\t\t\tif(node.nodeType!==7 && node.nodeType !==8){\n\t\t\t\t\t\t\tbuf.push(getTextContent(node));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnode = node.nextSibling;\n\t\t\t\t\t}\n\t\t\t\t\treturn buf.join('');\n\t\t\t\tdefault:\n\t\t\t\t\treturn node.nodeValue;\n\t\t\t\t}\n\t\t\t}\n\t\t\t__set__ = function(object,key,value){\n\t\t\t\t//console.log(value)\n\t\t\t\tobject['$$'+key] = value\n\t\t\t}\n\t\t}\n\t}catch(e){//ie8\n\t}\n\t\n\t//if(typeof require == 'function'){\n\t\texports.DOMImplementation = DOMImplementation;\n\t\texports.XMLSerializer = XMLSerializer;\n\t//}\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports) {\n\n\tmodule.exports = XMLHttpRequest;\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar BlankNode = __webpack_require__(12);\n\tvar ClassOrder = __webpack_require__(9);\n\tvar Collection = __webpack_require__(11);\n\tvar Literal = __webpack_require__(13);\n\tvar log = __webpack_require__(15);\n\tvar NamedNode = __webpack_require__(8);\n\tvar Node = __webpack_require__(10);\n\tvar Serializer = __webpack_require__(21);\n\tvar Statement = __webpack_require__(71);\n\tvar Variable = __webpack_require__(72);\n\t\n\tvar Formula = function (_Node) {\n\t  _inherits(Formula, _Node);\n\t\n\t  function Formula(statements, constraints, initBindings, optional) {\n\t    _classCallCheck(this, Formula);\n\t\n\t    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Formula).call(this));\n\t\n\t    _this.termType = Formula.termType;\n\t    _this.statements = statements || [];\n\t    _this.constraints = constraints || [];\n\t    _this.initBindings = initBindings || [];\n\t    _this.optional = optional || [];\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Formula, [{\n\t    key: 'add',\n\t    value: function add(s, p, o, g) {\n\t      return this.statements.push(new Statement(s, p, o, g));\n\t    }\n\t  }, {\n\t    key: 'addStatement',\n\t    value: function addStatement(st) {\n\t      return this.statements.push(st);\n\t    }\n\t  }, {\n\t    key: 'bnode',\n\t    value: function bnode(id) {\n\t      return new BlankNode(id);\n\t    }\n\t    /**\n\t     * Finds the types in the list which have no *stored* subtypes\n\t     * These are a set of classes which provide by themselves complete\n\t     * information -- the other classes are redundant for those who\n\t     * know the class DAG.\n\t     */\n\t\n\t  }, {\n\t    key: 'bottomTypeURIs',\n\t    value: function bottomTypeURIs(types) {\n\t      var bots;\n\t      var bottom;\n\t      var elt;\n\t      var i;\n\t      var k;\n\t      var len;\n\t      var ref;\n\t      var subs;\n\t      var v;\n\t      bots = [];\n\t      for (k in types) {\n\t        if (!types.hasOwnProperty(k)) continue;\n\t        v = types[k];\n\t        subs = this.each(void 0, this.sym('http://www.w3.org/2000/01/rdf-schema#subClassOf'), this.sym(k));\n\t        bottom = true;\n\t        i = 0;\n\t        for (len = subs.length; i < len; i++) {\n\t          elt = subs[i];\n\t          ref = elt.uri;\n\t          if (ref in types) {\n\t            // the subclass is one we know\n\t            bottom = false;\n\t            break;\n\t          }\n\t        }\n\t        if (bottom) {\n\t          bots[k] = v;\n\t        }\n\t      }\n\t      return bots;\n\t    }\n\t  }, {\n\t    key: 'collection',\n\t    value: function collection() {\n\t      return new Collection();\n\t    }\n\t  }, {\n\t    key: 'each',\n\t    value: function each(s, p, o, g) {\n\t      var elt, i, l, m, q;\n\t      var len, len1, len2, len3;\n\t      var results = [];\n\t      var sts = this.statementsMatching(s, p, o, g, false);\n\t      if (s == null) {\n\t        for (i = 0, len = sts.length; i < len; i++) {\n\t          elt = sts[i];\n\t          results.push(elt.subject);\n\t        }\n\t      } else if (p == null) {\n\t        for (l = 0, len1 = sts.length; l < len1; l++) {\n\t          elt = sts[l];\n\t          results.push(elt.predicate);\n\t        }\n\t      } else if (o == null) {\n\t        for (m = 0, len2 = sts.length; m < len2; m++) {\n\t          elt = sts[m];\n\t          results.push(elt.object);\n\t        }\n\t      } else if (g == null) {\n\t        for (q = 0, len3 = sts.length; q < len3; q++) {\n\t          elt = sts[q];\n\t          results.push(elt.why);\n\t        }\n\t      }\n\t      return results;\n\t    }\n\t  }, {\n\t    key: 'equals',\n\t    value: function equals(other) {\n\t      if (!other) {\n\t        return false;\n\t      }\n\t      return this.hashString() === other.hashString();\n\t    }\n\t    /*\n\t    For thisClass or any subclass, anything which has it is its type\n\t    or is the object of something which has the type as its range, or subject\n\t    of something which has the type as its domain\n\t    We don't bother doing subproperty (yet?)as it doesn't seeem to be used much.\n\t    Get all the Classes of which we can RDFS-infer the subject is a member\n\t    @returns a hash of URIs\n\t    */\n\t\n\t    /**\n\t     * For thisClass or any subclass, anything which has it is its type\n\t     * or is the object of something which has the type as its range, or subject\n\t     * of something which has the type as its domain\n\t     * We don't bother doing subproperty (yet?)as it doesn't seeem to be used\n\t     * much.\n\t     * Get all the Classes of which we can RDFS-infer the subject is a member\n\t     * @return a hash of URIs\n\t     */\n\t\n\t  }, {\n\t    key: 'findMembersNT',\n\t    value: function findMembersNT(thisClass) {\n\t      var i;\n\t      var l;\n\t      var len;\n\t      var len1;\n\t      var len2;\n\t      var len3;\n\t      var len4;\n\t      var m;\n\t      var members;\n\t      var pred;\n\t      var q;\n\t      var ref;\n\t      var ref1;\n\t      var ref2;\n\t      var ref3;\n\t      var ref4;\n\t      var ref5;\n\t      var seeds;\n\t      var st;\n\t      var t;\n\t      var u;\n\t      seeds = {};\n\t      seeds[thisClass.toNT()] = true;\n\t      members = {};\n\t      ref = this.transitiveClosure(seeds, this.sym('http://www.w3.org/2000/01/rdf-schema#subClassOf'), true);\n\t      for (t in ref) {\n\t        if (!ref.hasOwnProperty(t)) continue;\n\t        ref1 = this.statementsMatching(void 0, this.sym('http://www.w3.org/1999/02/22-rdf-syntax-ns#type'), this.fromNT(t));\n\t        for (i = 0, len = ref1.length; i < len; i++) {\n\t          st = ref1[i];\n\t          members[st.subject.toNT()] = st;\n\t        }\n\t        ref2 = this.each(void 0, this.sym('http://www.w3.org/2000/01/rdf-schema#domain'), this.fromNT(t));\n\t        for (l = 0, len1 = ref2.length; l < len1; l++) {\n\t          pred = ref2[l];\n\t          ref3 = this.statementsMatching(void 0, pred);\n\t          for (m = 0, len2 = ref3.length; m < len2; m++) {\n\t            st = ref3[m];\n\t            members[st.subject.toNT()] = st;\n\t          }\n\t        }\n\t        ref4 = this.each(void 0, this.sym('http://www.w3.org/2000/01/rdf-schema#range'), this.fromNT(t));\n\t        for (q = 0, len3 = ref4.length; q < len3; q++) {\n\t          pred = ref4[q];\n\t          ref5 = this.statementsMatching(void 0, pred);\n\t          for (u = 0, len4 = ref5.length; u < len4; u++) {\n\t            st = ref5[u];\n\t            members[st.object.toNT()] = st;\n\t          }\n\t        }\n\t      }\n\t      return members;\n\t    }\n\t  }, {\n\t    key: 'findMemberURIs',\n\t    value: function findMemberURIs(subject) {\n\t      return this.NTtoURI(this.findMembersNT(subject));\n\t    }\n\t    /**\n\t     * Get all the Classes of which we can RDFS-infer the subject is a superclass\n\t     * Returns a hash table where key is NT of type and value is statement why we\n\t     * think so.\n\t     * Does NOT return terms, returns URI strings.\n\t     * We use NT representations in this version because they handle blank nodes.\n\t     */\n\t\n\t  }, {\n\t    key: 'findSubClassesNT',\n\t    value: function findSubClassesNT(subject) {\n\t      var types = {};\n\t      types[subject.toNT()] = true;\n\t      return this.transitiveClosure(types, this.sym('http://www.w3.org/2000/01/rdf-schema#subClassOf'), true);\n\t    }\n\t    /**\n\t     * Get all the Classes of which we can RDFS-infer the subject is a subclass\n\t     * Returns a hash table where key is NT of type and value is statement why we\n\t     * think so.\n\t     * Does NOT return terms, returns URI strings.\n\t     * We use NT representations in this version because they handle blank nodes.\n\t     */\n\t\n\t  }, {\n\t    key: 'findSuperClassesNT',\n\t    value: function findSuperClassesNT(subject) {\n\t      var types = {};\n\t      types[subject.toNT()] = true;\n\t      return this.transitiveClosure(types, this.sym('http://www.w3.org/2000/01/rdf-schema#subClassOf'), false);\n\t    }\n\t    /**\n\t     * Get all the Classes of which we can RDFS-infer the subject is a member\n\t     * todo: This will loop is there is a class subclass loop (Sublass loops are\n\t     * not illegal)\n\t     * Returns a hash table where key is NT of type and value is statement why we\n\t     * think so.\n\t     * Does NOT return terms, returns URI strings.\n\t     * We use NT representations in this version because they handle blank nodes.\n\t     */\n\t\n\t  }, {\n\t    key: 'findTypesNT',\n\t    value: function findTypesNT(subject) {\n\t      var domain;\n\t      var i;\n\t      var l;\n\t      var len;\n\t      var len1;\n\t      var len2;\n\t      var len3;\n\t      var m;\n\t      var q;\n\t      var range;\n\t      var rdftype;\n\t      var ref;\n\t      var ref1;\n\t      var ref2;\n\t      var ref3;\n\t      var st;\n\t      var types;\n\t      rdftype = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type';\n\t      types = [];\n\t      ref = this.statementsMatching(subject, void 0, void 0);\n\t      for (i = 0, len = ref.length; i < len; i++) {\n\t        st = ref[i];\n\t        if (st.predicate.uri === rdftype) {\n\t          types[st.object.toNT()] = st;\n\t        } else {\n\t          ref1 = this.each(st.predicate, this.sym('http://www.w3.org/2000/01/rdf-schema#domain'));\n\t          for (l = 0, len1 = ref1.length; l < len1; l++) {\n\t            range = ref1[l];\n\t            types[range.toNT()] = st;\n\t          }\n\t        }\n\t      }\n\t      ref2 = this.statementsMatching(void 0, void 0, subject);\n\t      for (m = 0, len2 = ref2.length; m < len2; m++) {\n\t        st = ref2[m];\n\t        ref3 = this.each(st.predicate, this.sym('http://www.w3.org/2000/01/rdf-schema#range'));\n\t        for (q = 0, len3 = ref3.length; q < len3; q++) {\n\t          domain = ref3[q];\n\t          types[domain.toNT()] = st;\n\t        }\n\t      }\n\t      return this.transitiveClosure(types, this.sym('http://www.w3.org/2000/01/rdf-schema#subClassOf'), false);\n\t    }\n\t  }, {\n\t    key: 'findTypeURIs',\n\t    value: function findTypeURIs(subject) {\n\t      return this.NTtoURI(this.findTypesNT(subject));\n\t    }\n\t    // Trace the statements which connect directly, or through bnodes\n\t    // Returns an array of statements\n\t    // doc param may be null to search all documents in store\n\t\n\t  }, {\n\t    key: 'connectedStatements',\n\t    value: function connectedStatements(subject, doc, excludePredicateURIs) {\n\t      excludePredicateURIs = excludePredicateURIs || [];\n\t      var todo = [subject];\n\t      var done = [];\n\t      var doneArcs = [];\n\t      var result = [];\n\t      var self = this;\n\t      var follow = function follow(x) {\n\t        var queue = function queue(x) {\n\t          if (x.termType === 'BlankNode' && !done[x.value]) {\n\t            done[x.value] = true;\n\t            todo.push(x);\n\t          }\n\t        };\n\t        var sts = self.statementsMatching(null, null, x, doc).concat(self.statementsMatching(x, null, null, doc));\n\t        sts = sts.filter(function (st) {\n\t          if (excludePredicateURIs[st.predicate.uri]) return false;\n\t          var hash = st.toNT();\n\t          if (doneArcs[hash]) return false;\n\t          doneArcs[hash] = true;\n\t          return true;\n\t        });\n\t        sts.forEach(function (st, i) {\n\t          queue(st.subject);\n\t          queue(st.object);\n\t        });\n\t        result = result.concat(sts);\n\t      };\n\t      while (todo.length) {\n\t        follow(todo.shift());\n\t      }\n\t      // console.log('' + result.length + ' statements about ' + subject)\n\t      return result;\n\t    }\n\t  }, {\n\t    key: 'formula',\n\t    value: function formula() {\n\t      return new Formula();\n\t    }\n\t    /**\n\t     * Transforms an NTriples string format into a Node.\n\t     * The bnode bit should not be used on program-external values; designed\n\t     * for internal work such as storing a bnode id in an HTML attribute.\n\t     * This will only parse the strings generated by the vaious toNT() methods.\n\t     */\n\t\n\t  }, {\n\t    key: 'fromNT',\n\t    value: function fromNT(str) {\n\t      var dt, k, lang, x;\n\t      switch (str[0]) {\n\t        case '<':\n\t          return this.sym(str.slice(1, -1));\n\t        case '\"':\n\t          lang = void 0;\n\t          dt = void 0;\n\t          k = str.lastIndexOf('\"');\n\t          if (k < str.length - 1) {\n\t            if (str[k + 1] === '@') {\n\t              lang = str.slice(k + 2);\n\t            } else if (str.slice(k + 1, k + 3) === '^^') {\n\t              dt = this.fromNT(str.slice(k + 3));\n\t            } else {\n\t              throw new Error(\"Can't convert string from NT: \" + str);\n\t            }\n\t          }\n\t          str = str.slice(1, k);\n\t          str = str.replace(/\\\\\"/g, '\"');\n\t          str = str.replace(/\\\\n/g, '\\n');\n\t          str = str.replace(/\\\\\\\\/g, '\\\\');\n\t          return this.literal(str, lang, dt);\n\t        case '_':\n\t          x = new BlankNode();\n\t          x.id = parseInt(str.slice(3), 10);\n\t          BlankNode.nextId--;\n\t          return x;\n\t        case '?':\n\t          return new Variable(str.slice(1));\n\t      }\n\t      throw new Error(\"Can't convert from NT: \" + str);\n\t    }\n\t  }, {\n\t    key: 'holds',\n\t    value: function holds(s, p, o, g) {\n\t      var i;\n\t      if (arguments.length === 1) {\n\t        if (!s) {\n\t          return true;\n\t        }\n\t        if (s instanceof Array) {\n\t          for (i = 0; i < s.length; i++) {\n\t            if (!this.holds(s[i])) {\n\t              return false;\n\t            }\n\t          }\n\t          return true;\n\t        } else if (s instanceof Statement) {\n\t          return this.holds(s.subject, s.predicate, s.object, s.why);\n\t        } else if (s.statements) {\n\t          return this.holds(s.statements);\n\t        }\n\t      }\n\t\n\t      var st = this.anyStatementMatching(s, p, o, g);\n\t      return st != null;\n\t    }\n\t  }, {\n\t    key: 'holdsStatement',\n\t    value: function holdsStatement(st) {\n\t      return this.holds(st.subject, st.predicate, st.object, st.why);\n\t    }\n\t  }, {\n\t    key: 'list',\n\t    value: function list(values) {\n\t      var collection = new Collection();\n\t      values.forEach(function (val) {\n\t        collection.append(val);\n\t      });\n\t      return collection;\n\t    }\n\t  }, {\n\t    key: 'literal',\n\t    value: function literal(val, lang, dt) {\n\t      return new Literal('' + val, lang, dt);\n\t    }\n\t    /**\n\t     * transform a collection of NTriple URIs into their URI strings\n\t     * @param t some iterable colletion of NTriple URI strings\n\t     * @return a collection of the URIs as strings\n\t     * todo: explain why it is important to go through NT\n\t     */\n\t\n\t  }, {\n\t    key: 'NTtoURI',\n\t    value: function NTtoURI(t) {\n\t      var k, v;\n\t      var uris = {};\n\t      for (k in t) {\n\t        if (!t.hasOwnProperty(k)) continue;\n\t        v = t[k];\n\t        if (k[0] === '<') {\n\t          uris[k.slice(1, -1)] = v;\n\t        }\n\t      }\n\t      return uris;\n\t    }\n\t  }, {\n\t    key: 'serialize',\n\t    value: function serialize(base, contentType, provenance) {\n\t      var documentString;\n\t      var sts;\n\t      var sz;\n\t      sz = Serializer(this);\n\t      sz.suggestNamespaces(this.namespaces);\n\t      sz.setBase(base);\n\t      if (provenance) {\n\t        sts = this.statementsMatching(void 0, void 0, void 0, provenance);\n\t      } else {\n\t        sts = this.statements;\n\t      }\n\t      switch (contentType != null ? contentType : 'text/n3') {\n\t        case 'application/rdf+xml':\n\t          documentString = sz.statementsToXML(sts);\n\t          break;\n\t        case 'text/n3':\n\t        case 'text/turtle':\n\t          documentString = sz.statementsToN3(sts);\n\t          break;\n\t        default:\n\t          throw new Error('serialize: Content-type ' + contentType + ' not supported.');\n\t      }\n\t      return documentString;\n\t    }\n\t  }, {\n\t    key: 'substitute',\n\t    value: function substitute(bindings) {\n\t      var statementsCopy = this.statements.map(function (ea) {\n\t        return ea.substitute(bindings);\n\t      });\n\t      console.log('formula subs statmnts:' + statementsCopy);\n\t      var y = new Formula();\n\t      y.add(statementsCopy);\n\t      console.log('indexed-form subs formula:' + y);\n\t      return y;\n\t    }\n\t  }, {\n\t    key: 'sym',\n\t    value: function sym(uri, name) {\n\t      if (name) {\n\t        throw new Error('This feature (kb.sym with 2 args) is removed. Do not assume prefix mappings.');\n\t      }\n\t      return new NamedNode(uri);\n\t    }\n\t  }, {\n\t    key: 'the',\n\t    value: function the(s, p, o, g) {\n\t      var x = this.any(s, p, o, g);\n\t      if (x == null) {\n\t        log.error('No value found for the() {' + s + ' ' + p + ' ' + o + '}.');\n\t      }\n\t      return x;\n\t    }\n\t    /**\n\t     * RDFS Inference\n\t     * These are hand-written implementations of a backward-chaining reasoner\n\t     * over the RDFS axioms.\n\t     * @param seeds {Object} a hash of NTs of classes to start with\n\t     * @param predicate The property to trace though\n\t     * @param inverse trace inverse direction\n\t     */\n\t\n\t  }, {\n\t    key: 'transitiveClosure',\n\t    value: function transitiveClosure(seeds, predicate, inverse) {\n\t      var elt, i, len, s, sups, t;\n\t      var agenda = {};\n\t      Object.assign(agenda, seeds); // make a copy\n\t      var done = {}; // classes we have looked up\n\t      while (true) {\n\t        t = function () {\n\t          for (var p in agenda) {\n\t            if (!agenda.hasOwnProperty(p)) continue;\n\t            return p;\n\t          }\n\t        }();\n\t        if (t == null) {\n\t          return done;\n\t        }\n\t        sups = inverse ? this.each(void 0, predicate, this.fromNT(t)) : this.each(this.fromNT(t), predicate);\n\t        for (i = 0, len = sups.length; i < len; i++) {\n\t          elt = sups[i];\n\t          s = elt.toNT();\n\t          if (s in done) {\n\t            continue;\n\t          }\n\t          if (s in agenda) {\n\t            continue;\n\t          }\n\t          agenda[s] = agenda[t];\n\t        }\n\t        done[t] = agenda[t];\n\t        delete agenda[t];\n\t      }\n\t    }\n\t    /**\n\t     * Finds the types in the list which have no *stored* supertypes\n\t     * We exclude the universal class, owl:Things and rdf:Resource, as it is\n\t     * information-free.\n\t     */\n\t\n\t  }, {\n\t    key: 'topTypeURIs',\n\t    value: function topTypeURIs(types) {\n\t      var i;\n\t      var j;\n\t      var k;\n\t      var len;\n\t      var n;\n\t      var ref;\n\t      var tops;\n\t      var v;\n\t      tops = [];\n\t      for (k in types) {\n\t        if (!types.hasOwnProperty(k)) continue;\n\t        v = types[k];\n\t        n = 0;\n\t        ref = this.each(this.sym(k), this.sym('http://www.w3.org/2000/01/rdf-schema#subClassOf'));\n\t        for (i = 0, len = ref.length; i < len; i++) {\n\t          j = ref[i];\n\t          if (j.uri !== 'http://www.w3.org/2000/01/rdf-schema#Resource') {\n\t            n++;\n\t            break;\n\t          }\n\t        }\n\t        if (!n) {\n\t          tops[k] = v;\n\t        }\n\t      }\n\t      if (tops['http://www.w3.org/2000/01/rdf-schema#Resource']) {\n\t        delete tops['http://www.w3.org/2000/01/rdf-schema#Resource'];\n\t      }\n\t      if (tops['http://www.w3.org/2002/07/owl#Thing']) {\n\t        delete tops['http://www.w3.org/2002/07/owl#Thing'];\n\t      }\n\t      return tops;\n\t    }\n\t  }, {\n\t    key: 'toString',\n\t    value: function toString() {\n\t      return '{' + this.statements.join('\\n') + '}';\n\t    }\n\t  }, {\n\t    key: 'whether',\n\t    value: function whether(s, p, o, g) {\n\t      return this.statementsMatching(s, p, o, g, false).length;\n\t    }\n\t  }]);\n\t\n\t  return Formula;\n\t}(Node);\n\t\n\tFormula.termType = 'formula';\n\t\n\tFormula.prototype.classOrder = ClassOrder['Formula'];\n\tFormula.prototype.isVar = 0;\n\t\n\tFormula.prototype.ns = __webpack_require__(73);\n\tFormula.prototype.variable = function (name) {\n\t  return new Variable(name);\n\t};\n\t\n\tmodule.exports = Formula;\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tmodule.exports = serialize;\n\t\n\tvar convert = __webpack_require__(22);\n\tvar Serializer = __webpack_require__(70);\n\t\n\t/**\n\t * Serialize to the appropriate format\n\t * @@ Currently NQuads and JSON/LD are deal with extrelemently inefficiently\n\t * through mutiple conversions.\n\t */\n\tfunction serialize(target, kb, base, contentType, callback) {\n\t  base = base || target.uri;\n\t  contentType = contentType || 'text/turtle'; // text/n3 if complex?\n\t  var documentString = null;\n\t  try {\n\t    var sz = Serializer(kb);\n\t    var newSts = kb.statementsMatching(undefined, undefined, undefined, target);\n\t    var n3String;\n\t    sz.suggestNamespaces(kb.namespaces);\n\t    sz.setBase(base);\n\t    switch (contentType) {\n\t      case 'application/rdf+xml':\n\t        documentString = sz.statementsToXML(newSts);\n\t        return executeCallback(null, documentString);\n\t      case 'text/n3':\n\t      case 'application/n3':\n\t        // Legacy\n\t        documentString = sz.statementsToN3(newSts);\n\t        return executeCallback(null, documentString);\n\t      case 'text/turtle':\n\t      case 'application/x-turtle':\n\t        // Legacy\n\t        sz.setFlags('si'); // Suppress = for sameAs and => for implies\n\t        documentString = sz.statementsToN3(newSts);\n\t        return executeCallback(null, documentString);\n\t      case 'application/n-triples':\n\t        sz.setFlags('deinprstux'); // Suppress nice parts of N3 to make ntriples\n\t        documentString = sz.statementsToNTriples(newSts);\n\t        return executeCallback(null, documentString);\n\t      case 'application/ld+json':\n\t        sz.setFlags('deinprstux'); // Use adapters to connect to incmpatible parser\n\t        n3String = sz.statementsToNTriples(newSts);\n\t        // n3String = sz.statementsToN3(newSts)\n\t        convert.convertToJson(n3String, callback);\n\t        break;\n\t      case 'application/n-quads':\n\t      case 'application/nquads':\n\t        // @@@ just outpout the quads? Does not work for collections\n\t        sz.setFlags('deinprstux q'); // Suppress nice parts of N3 to make ntriples\n\t        documentString = sz.statementsToNTriples(newSts); // q in flag means actually quads\n\t        return executeCallback(null, documentString);\n\t        // n3String = sz.statementsToN3(newSts)\n\t        // documentString = convert.convertToNQuads(n3String, callback)\n\t        break;\n\t      default:\n\t        throw new Error('Serialize: Content-type ' + contentType + ' not supported for data write.');\n\t    }\n\t  } catch (err) {\n\t    if (callback) {\n\t      return callback(err);\n\t    }\n\t    throw err; // Don't hide problems from caller in sync mode\n\t  }\n\t\n\t  function executeCallback(err, result) {\n\t    if (callback) {\n\t      callback(err, result);\n\t      return;\n\t    } else {\n\t      return result;\n\t    }\n\t  }\n\t}\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tmodule.exports.convertToJson = convertToJson;\n\tmodule.exports.convertToNQuads = convertToNQuads;\n\t\n\tvar asyncLib = __webpack_require__(23); // @@ Goal: remove this dependency\n\tvar jsonld = __webpack_require__(27);\n\tvar N3 = __webpack_require__(33); // @@ Goal: remove this dependency\n\t\n\tfunction convertToJson(n3String, jsonCallback) {\n\t  var jsonString;\n\t  var n3Parser = N3.Parser();\n\t  var n3Writer = N3.Writer({\n\t    format: 'N-Quads'\n\t  });\n\t  asyncLib.waterfall([function (callback) {\n\t    n3Parser.parse(n3String, callback);\n\t  }, function (triple, prefix, callback) {\n\t    if (triple !== null) {\n\t      n3Writer.addTriple(triple);\n\t    }\n\t    if (typeof callback === 'function') {\n\t      n3Writer.end(callback);\n\t    }\n\t  }, function (result, callback) {\n\t    try {\n\t      jsonld.fromRDF(result, {\n\t        format: 'application/nquads'\n\t      }, callback);\n\t    } catch (err) {\n\t      callback(err);\n\t    }\n\t  }, function (json, callback) {\n\t    jsonString = JSON.stringify(json);\n\t    jsonCallback(null, jsonString);\n\t  }], function (err, result) {\n\t    jsonCallback(err, jsonString);\n\t  });\n\t}\n\t\n\tfunction convertToNQuads(n3String, nquadCallback) {\n\t  var nquadString;\n\t  var n3Parser = N3.Parser();\n\t  var n3Writer = N3.Writer({\n\t    format: 'N-Quads'\n\t  });\n\t  asyncLib.waterfall([function (callback) {\n\t    n3Parser.parse(n3String, callback);\n\t  }, function (triple, prefix, callback) {\n\t    if (triple !== null) {\n\t      n3Writer.addTriple(triple);\n\t    }\n\t    if (typeof callback === 'function') {\n\t      n3Writer.end(callback);\n\t    }\n\t  }, function (result, callback) {\n\t    nquadString = result;\n\t    nquadCallback(null, nquadString);\n\t  }], function (err, result) {\n\t    nquadCallback(err, nquadString);\n\t  });\n\t}\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(process, setImmediate) {/*!\n\t * async\n\t * https://github.com/caolan/async\n\t *\n\t * Copyright 2010-2014 Caolan McMahon\n\t * Released under the MIT license\n\t */\n\t/*jshint onevar: false, indent:4 */\n\t/*global setImmediate: false, setTimeout: false, console: false */\n\t(function () {\n\t\n\t    var async = {};\n\t\n\t    // global on the server, window in the browser\n\t    var root, previous_async;\n\t\n\t    root = this;\n\t    if (root != null) {\n\t      previous_async = root.async;\n\t    }\n\t\n\t    async.noConflict = function () {\n\t        root.async = previous_async;\n\t        return async;\n\t    };\n\t\n\t    function only_once(fn) {\n\t        var called = false;\n\t        return function() {\n\t            if (called) throw new Error(\"Callback was already called.\");\n\t            called = true;\n\t            fn.apply(root, arguments);\n\t        }\n\t    }\n\t\n\t    //// cross-browser compatiblity functions ////\n\t\n\t    var _toString = Object.prototype.toString;\n\t\n\t    var _isArray = Array.isArray || function (obj) {\n\t        return _toString.call(obj) === '[object Array]';\n\t    };\n\t\n\t    var _each = function (arr, iterator) {\n\t        for (var i = 0; i < arr.length; i += 1) {\n\t            iterator(arr[i], i, arr);\n\t        }\n\t    };\n\t\n\t    var _map = function (arr, iterator) {\n\t        if (arr.map) {\n\t            return arr.map(iterator);\n\t        }\n\t        var results = [];\n\t        _each(arr, function (x, i, a) {\n\t            results.push(iterator(x, i, a));\n\t        });\n\t        return results;\n\t    };\n\t\n\t    var _reduce = function (arr, iterator, memo) {\n\t        if (arr.reduce) {\n\t            return arr.reduce(iterator, memo);\n\t        }\n\t        _each(arr, function (x, i, a) {\n\t            memo = iterator(memo, x, i, a);\n\t        });\n\t        return memo;\n\t    };\n\t\n\t    var _keys = function (obj) {\n\t        if (Object.keys) {\n\t            return Object.keys(obj);\n\t        }\n\t        var keys = [];\n\t        for (var k in obj) {\n\t            if (obj.hasOwnProperty(k)) {\n\t                keys.push(k);\n\t            }\n\t        }\n\t        return keys;\n\t    };\n\t\n\t    //// exported async module functions ////\n\t\n\t    //// nextTick implementation with browser-compatible fallback ////\n\t    if (typeof process === 'undefined' || !(process.nextTick)) {\n\t        if (typeof setImmediate === 'function') {\n\t            async.nextTick = function (fn) {\n\t                // not a direct alias for IE10 compatibility\n\t                setImmediate(fn);\n\t            };\n\t            async.setImmediate = async.nextTick;\n\t        }\n\t        else {\n\t            async.nextTick = function (fn) {\n\t                setTimeout(fn, 0);\n\t            };\n\t            async.setImmediate = async.nextTick;\n\t        }\n\t    }\n\t    else {\n\t        async.nextTick = process.nextTick;\n\t        if (typeof setImmediate !== 'undefined') {\n\t            async.setImmediate = function (fn) {\n\t              // not a direct alias for IE10 compatibility\n\t              setImmediate(fn);\n\t            };\n\t        }\n\t        else {\n\t            async.setImmediate = async.nextTick;\n\t        }\n\t    }\n\t\n\t    async.each = function (arr, iterator, callback) {\n\t        callback = callback || function () {};\n\t        if (!arr.length) {\n\t            return callback();\n\t        }\n\t        var completed = 0;\n\t        _each(arr, function (x) {\n\t            iterator(x, only_once(done) );\n\t        });\n\t        function done(err) {\n\t          if (err) {\n\t              callback(err);\n\t              callback = function () {};\n\t          }\n\t          else {\n\t              completed += 1;\n\t              if (completed >= arr.length) {\n\t                  callback();\n\t              }\n\t          }\n\t        }\n\t    };\n\t    async.forEach = async.each;\n\t\n\t    async.eachSeries = function (arr, iterator, callback) {\n\t        callback = callback || function () {};\n\t        if (!arr.length) {\n\t            return callback();\n\t        }\n\t        var completed = 0;\n\t        var iterate = function () {\n\t            iterator(arr[completed], function (err) {\n\t                if (err) {\n\t                    callback(err);\n\t                    callback = function () {};\n\t                }\n\t                else {\n\t                    completed += 1;\n\t                    if (completed >= arr.length) {\n\t                        callback();\n\t                    }\n\t                    else {\n\t                        iterate();\n\t                    }\n\t                }\n\t            });\n\t        };\n\t        iterate();\n\t    };\n\t    async.forEachSeries = async.eachSeries;\n\t\n\t    async.eachLimit = function (arr, limit, iterator, callback) {\n\t        var fn = _eachLimit(limit);\n\t        fn.apply(null, [arr, iterator, callback]);\n\t    };\n\t    async.forEachLimit = async.eachLimit;\n\t\n\t    var _eachLimit = function (limit) {\n\t\n\t        return function (arr, iterator, callback) {\n\t            callback = callback || function () {};\n\t            if (!arr.length || limit <= 0) {\n\t                return callback();\n\t            }\n\t            var completed = 0;\n\t            var started = 0;\n\t            var running = 0;\n\t\n\t            (function replenish () {\n\t                if (completed >= arr.length) {\n\t                    return callback();\n\t                }\n\t\n\t                while (running < limit && started < arr.length) {\n\t                    started += 1;\n\t                    running += 1;\n\t                    iterator(arr[started - 1], function (err) {\n\t                        if (err) {\n\t                            callback(err);\n\t                            callback = function () {};\n\t                        }\n\t                        else {\n\t                            completed += 1;\n\t                            running -= 1;\n\t                            if (completed >= arr.length) {\n\t                                callback();\n\t                            }\n\t                            else {\n\t                                replenish();\n\t                            }\n\t                        }\n\t                    });\n\t                }\n\t            })();\n\t        };\n\t    };\n\t\n\t\n\t    var doParallel = function (fn) {\n\t        return function () {\n\t            var args = Array.prototype.slice.call(arguments);\n\t            return fn.apply(null, [async.each].concat(args));\n\t        };\n\t    };\n\t    var doParallelLimit = function(limit, fn) {\n\t        return function () {\n\t            var args = Array.prototype.slice.call(arguments);\n\t            return fn.apply(null, [_eachLimit(limit)].concat(args));\n\t        };\n\t    };\n\t    var doSeries = function (fn) {\n\t        return function () {\n\t            var args = Array.prototype.slice.call(arguments);\n\t            return fn.apply(null, [async.eachSeries].concat(args));\n\t        };\n\t    };\n\t\n\t\n\t    var _asyncMap = function (eachfn, arr, iterator, callback) {\n\t        arr = _map(arr, function (x, i) {\n\t            return {index: i, value: x};\n\t        });\n\t        if (!callback) {\n\t            eachfn(arr, function (x, callback) {\n\t                iterator(x.value, function (err) {\n\t                    callback(err);\n\t                });\n\t            });\n\t        } else {\n\t            var results = [];\n\t            eachfn(arr, function (x, callback) {\n\t                iterator(x.value, function (err, v) {\n\t                    results[x.index] = v;\n\t                    callback(err);\n\t                });\n\t            }, function (err) {\n\t                callback(err, results);\n\t            });\n\t        }\n\t    };\n\t    async.map = doParallel(_asyncMap);\n\t    async.mapSeries = doSeries(_asyncMap);\n\t    async.mapLimit = function (arr, limit, iterator, callback) {\n\t        return _mapLimit(limit)(arr, iterator, callback);\n\t    };\n\t\n\t    var _mapLimit = function(limit) {\n\t        return doParallelLimit(limit, _asyncMap);\n\t    };\n\t\n\t    // reduce only has a series version, as doing reduce in parallel won't\n\t    // work in many situations.\n\t    async.reduce = function (arr, memo, iterator, callback) {\n\t        async.eachSeries(arr, function (x, callback) {\n\t            iterator(memo, x, function (err, v) {\n\t                memo = v;\n\t                callback(err);\n\t            });\n\t        }, function (err) {\n\t            callback(err, memo);\n\t        });\n\t    };\n\t    // inject alias\n\t    async.inject = async.reduce;\n\t    // foldl alias\n\t    async.foldl = async.reduce;\n\t\n\t    async.reduceRight = function (arr, memo, iterator, callback) {\n\t        var reversed = _map(arr, function (x) {\n\t            return x;\n\t        }).reverse();\n\t        async.reduce(reversed, memo, iterator, callback);\n\t    };\n\t    // foldr alias\n\t    async.foldr = async.reduceRight;\n\t\n\t    var _filter = function (eachfn, arr, iterator, callback) {\n\t        var results = [];\n\t        arr = _map(arr, function (x, i) {\n\t            return {index: i, value: x};\n\t        });\n\t        eachfn(arr, function (x, callback) {\n\t            iterator(x.value, function (v) {\n\t                if (v) {\n\t                    results.push(x);\n\t                }\n\t                callback();\n\t            });\n\t        }, function (err) {\n\t            callback(_map(results.sort(function (a, b) {\n\t                return a.index - b.index;\n\t            }), function (x) {\n\t                return x.value;\n\t            }));\n\t        });\n\t    };\n\t    async.filter = doParallel(_filter);\n\t    async.filterSeries = doSeries(_filter);\n\t    // select alias\n\t    async.select = async.filter;\n\t    async.selectSeries = async.filterSeries;\n\t\n\t    var _reject = function (eachfn, arr, iterator, callback) {\n\t        var results = [];\n\t        arr = _map(arr, function (x, i) {\n\t            return {index: i, value: x};\n\t        });\n\t        eachfn(arr, function (x, callback) {\n\t            iterator(x.value, function (v) {\n\t                if (!v) {\n\t                    results.push(x);\n\t                }\n\t                callback();\n\t            });\n\t        }, function (err) {\n\t            callback(_map(results.sort(function (a, b) {\n\t                return a.index - b.index;\n\t            }), function (x) {\n\t                return x.value;\n\t            }));\n\t        });\n\t    };\n\t    async.reject = doParallel(_reject);\n\t    async.rejectSeries = doSeries(_reject);\n\t\n\t    var _detect = function (eachfn, arr, iterator, main_callback) {\n\t        eachfn(arr, function (x, callback) {\n\t            iterator(x, function (result) {\n\t                if (result) {\n\t                    main_callback(x);\n\t                    main_callback = function () {};\n\t                }\n\t                else {\n\t                    callback();\n\t                }\n\t            });\n\t        }, function (err) {\n\t            main_callback();\n\t        });\n\t    };\n\t    async.detect = doParallel(_detect);\n\t    async.detectSeries = doSeries(_detect);\n\t\n\t    async.some = function (arr, iterator, main_callback) {\n\t        async.each(arr, function (x, callback) {\n\t            iterator(x, function (v) {\n\t                if (v) {\n\t                    main_callback(true);\n\t                    main_callback = function () {};\n\t                }\n\t                callback();\n\t            });\n\t        }, function (err) {\n\t            main_callback(false);\n\t        });\n\t    };\n\t    // any alias\n\t    async.any = async.some;\n\t\n\t    async.every = function (arr, iterator, main_callback) {\n\t        async.each(arr, function (x, callback) {\n\t            iterator(x, function (v) {\n\t                if (!v) {\n\t                    main_callback(false);\n\t                    main_callback = function () {};\n\t                }\n\t                callback();\n\t            });\n\t        }, function (err) {\n\t            main_callback(true);\n\t        });\n\t    };\n\t    // all alias\n\t    async.all = async.every;\n\t\n\t    async.sortBy = function (arr, iterator, callback) {\n\t        async.map(arr, function (x, callback) {\n\t            iterator(x, function (err, criteria) {\n\t                if (err) {\n\t                    callback(err);\n\t                }\n\t                else {\n\t                    callback(null, {value: x, criteria: criteria});\n\t                }\n\t            });\n\t        }, function (err, results) {\n\t            if (err) {\n\t                return callback(err);\n\t            }\n\t            else {\n\t                var fn = function (left, right) {\n\t                    var a = left.criteria, b = right.criteria;\n\t                    return a < b ? -1 : a > b ? 1 : 0;\n\t                };\n\t                callback(null, _map(results.sort(fn), function (x) {\n\t                    return x.value;\n\t                }));\n\t            }\n\t        });\n\t    };\n\t\n\t    async.auto = function (tasks, callback) {\n\t        callback = callback || function () {};\n\t        var keys = _keys(tasks);\n\t        var remainingTasks = keys.length\n\t        if (!remainingTasks) {\n\t            return callback();\n\t        }\n\t\n\t        var results = {};\n\t\n\t        var listeners = [];\n\t        var addListener = function (fn) {\n\t            listeners.unshift(fn);\n\t        };\n\t        var removeListener = function (fn) {\n\t            for (var i = 0; i < listeners.length; i += 1) {\n\t                if (listeners[i] === fn) {\n\t                    listeners.splice(i, 1);\n\t                    return;\n\t                }\n\t            }\n\t        };\n\t        var taskComplete = function () {\n\t            remainingTasks--\n\t            _each(listeners.slice(0), function (fn) {\n\t                fn();\n\t            });\n\t        };\n\t\n\t        addListener(function () {\n\t            if (!remainingTasks) {\n\t                var theCallback = callback;\n\t                // prevent final callback from calling itself if it errors\n\t                callback = function () {};\n\t\n\t                theCallback(null, results);\n\t            }\n\t        });\n\t\n\t        _each(keys, function (k) {\n\t            var task = _isArray(tasks[k]) ? tasks[k]: [tasks[k]];\n\t            var taskCallback = function (err) {\n\t                var args = Array.prototype.slice.call(arguments, 1);\n\t                if (args.length <= 1) {\n\t                    args = args[0];\n\t                }\n\t                if (err) {\n\t                    var safeResults = {};\n\t                    _each(_keys(results), function(rkey) {\n\t                        safeResults[rkey] = results[rkey];\n\t                    });\n\t                    safeResults[k] = args;\n\t                    callback(err, safeResults);\n\t                    // stop subsequent errors hitting callback multiple times\n\t                    callback = function () {};\n\t                }\n\t                else {\n\t                    results[k] = args;\n\t                    async.setImmediate(taskComplete);\n\t                }\n\t            };\n\t            var requires = task.slice(0, Math.abs(task.length - 1)) || [];\n\t            var ready = function () {\n\t                return _reduce(requires, function (a, x) {\n\t                    return (a && results.hasOwnProperty(x));\n\t                }, true) && !results.hasOwnProperty(k);\n\t            };\n\t            if (ready()) {\n\t                task[task.length - 1](taskCallback, results);\n\t            }\n\t            else {\n\t                var listener = function () {\n\t                    if (ready()) {\n\t                        removeListener(listener);\n\t                        task[task.length - 1](taskCallback, results);\n\t                    }\n\t                };\n\t                addListener(listener);\n\t            }\n\t        });\n\t    };\n\t\n\t    async.retry = function(times, task, callback) {\n\t        var DEFAULT_TIMES = 5;\n\t        var attempts = [];\n\t        // Use defaults if times not passed\n\t        if (typeof times === 'function') {\n\t            callback = task;\n\t            task = times;\n\t            times = DEFAULT_TIMES;\n\t        }\n\t        // Make sure times is a number\n\t        times = parseInt(times, 10) || DEFAULT_TIMES;\n\t        var wrappedTask = function(wrappedCallback, wrappedResults) {\n\t            var retryAttempt = function(task, finalAttempt) {\n\t                return function(seriesCallback) {\n\t                    task(function(err, result){\n\t                        seriesCallback(!err || finalAttempt, {err: err, result: result});\n\t                    }, wrappedResults);\n\t                };\n\t            };\n\t            while (times) {\n\t                attempts.push(retryAttempt(task, !(times-=1)));\n\t            }\n\t            async.series(attempts, function(done, data){\n\t                data = data[data.length - 1];\n\t                (wrappedCallback || callback)(data.err, data.result);\n\t            });\n\t        }\n\t        // If a callback is passed, run this as a controll flow\n\t        return callback ? wrappedTask() : wrappedTask\n\t    };\n\t\n\t    async.waterfall = function (tasks, callback) {\n\t        callback = callback || function () {};\n\t        if (!_isArray(tasks)) {\n\t          var err = new Error('First argument to waterfall must be an array of functions');\n\t          return callback(err);\n\t        }\n\t        if (!tasks.length) {\n\t            return callback();\n\t        }\n\t        var wrapIterator = function (iterator) {\n\t            return function (err) {\n\t                if (err) {\n\t                    callback.apply(null, arguments);\n\t                    callback = function () {};\n\t                }\n\t                else {\n\t                    var args = Array.prototype.slice.call(arguments, 1);\n\t                    var next = iterator.next();\n\t                    if (next) {\n\t                        args.push(wrapIterator(next));\n\t                    }\n\t                    else {\n\t                        args.push(callback);\n\t                    }\n\t                    async.setImmediate(function () {\n\t                        iterator.apply(null, args);\n\t                    });\n\t                }\n\t            };\n\t        };\n\t        wrapIterator(async.iterator(tasks))();\n\t    };\n\t\n\t    var _parallel = function(eachfn, tasks, callback) {\n\t        callback = callback || function () {};\n\t        if (_isArray(tasks)) {\n\t            eachfn.map(tasks, function (fn, callback) {\n\t                if (fn) {\n\t                    fn(function (err) {\n\t                        var args = Array.prototype.slice.call(arguments, 1);\n\t                        if (args.length <= 1) {\n\t                            args = args[0];\n\t                        }\n\t                        callback.call(null, err, args);\n\t                    });\n\t                }\n\t            }, callback);\n\t        }\n\t        else {\n\t            var results = {};\n\t            eachfn.each(_keys(tasks), function (k, callback) {\n\t                tasks[k](function (err) {\n\t                    var args = Array.prototype.slice.call(arguments, 1);\n\t                    if (args.length <= 1) {\n\t                        args = args[0];\n\t                    }\n\t                    results[k] = args;\n\t                    callback(err);\n\t                });\n\t            }, function (err) {\n\t                callback(err, results);\n\t            });\n\t        }\n\t    };\n\t\n\t    async.parallel = function (tasks, callback) {\n\t        _parallel({ map: async.map, each: async.each }, tasks, callback);\n\t    };\n\t\n\t    async.parallelLimit = function(tasks, limit, callback) {\n\t        _parallel({ map: _mapLimit(limit), each: _eachLimit(limit) }, tasks, callback);\n\t    };\n\t\n\t    async.series = function (tasks, callback) {\n\t        callback = callback || function () {};\n\t        if (_isArray(tasks)) {\n\t            async.mapSeries(tasks, function (fn, callback) {\n\t                if (fn) {\n\t                    fn(function (err) {\n\t                        var args = Array.prototype.slice.call(arguments, 1);\n\t                        if (args.length <= 1) {\n\t                            args = args[0];\n\t                        }\n\t                        callback.call(null, err, args);\n\t                    });\n\t                }\n\t            }, callback);\n\t        }\n\t        else {\n\t            var results = {};\n\t            async.eachSeries(_keys(tasks), function (k, callback) {\n\t                tasks[k](function (err) {\n\t                    var args = Array.prototype.slice.call(arguments, 1);\n\t                    if (args.length <= 1) {\n\t                        args = args[0];\n\t                    }\n\t                    results[k] = args;\n\t                    callback(err);\n\t                });\n\t            }, function (err) {\n\t                callback(err, results);\n\t            });\n\t        }\n\t    };\n\t\n\t    async.iterator = function (tasks) {\n\t        var makeCallback = function (index) {\n\t            var fn = function () {\n\t                if (tasks.length) {\n\t                    tasks[index].apply(null, arguments);\n\t                }\n\t                return fn.next();\n\t            };\n\t            fn.next = function () {\n\t                return (index < tasks.length - 1) ? makeCallback(index + 1): null;\n\t            };\n\t            return fn;\n\t        };\n\t        return makeCallback(0);\n\t    };\n\t\n\t    async.apply = function (fn) {\n\t        var args = Array.prototype.slice.call(arguments, 1);\n\t        return function () {\n\t            return fn.apply(\n\t                null, args.concat(Array.prototype.slice.call(arguments))\n\t            );\n\t        };\n\t    };\n\t\n\t    var _concat = function (eachfn, arr, fn, callback) {\n\t        var r = [];\n\t        eachfn(arr, function (x, cb) {\n\t            fn(x, function (err, y) {\n\t                r = r.concat(y || []);\n\t                cb(err);\n\t            });\n\t        }, function (err) {\n\t            callback(err, r);\n\t        });\n\t    };\n\t    async.concat = doParallel(_concat);\n\t    async.concatSeries = doSeries(_concat);\n\t\n\t    async.whilst = function (test, iterator, callback) {\n\t        if (test()) {\n\t            iterator(function (err) {\n\t                if (err) {\n\t                    return callback(err);\n\t                }\n\t                async.whilst(test, iterator, callback);\n\t            });\n\t        }\n\t        else {\n\t            callback();\n\t        }\n\t    };\n\t\n\t    async.doWhilst = function (iterator, test, callback) {\n\t        iterator(function (err) {\n\t            if (err) {\n\t                return callback(err);\n\t            }\n\t            var args = Array.prototype.slice.call(arguments, 1);\n\t            if (test.apply(null, args)) {\n\t                async.doWhilst(iterator, test, callback);\n\t            }\n\t            else {\n\t                callback();\n\t            }\n\t        });\n\t    };\n\t\n\t    async.until = function (test, iterator, callback) {\n\t        if (!test()) {\n\t            iterator(function (err) {\n\t                if (err) {\n\t                    return callback(err);\n\t                }\n\t                async.until(test, iterator, callback);\n\t            });\n\t        }\n\t        else {\n\t            callback();\n\t        }\n\t    };\n\t\n\t    async.doUntil = function (iterator, test, callback) {\n\t        iterator(function (err) {\n\t            if (err) {\n\t                return callback(err);\n\t            }\n\t            var args = Array.prototype.slice.call(arguments, 1);\n\t            if (!test.apply(null, args)) {\n\t                async.doUntil(iterator, test, callback);\n\t            }\n\t            else {\n\t                callback();\n\t            }\n\t        });\n\t    };\n\t\n\t    async.queue = function (worker, concurrency) {\n\t        if (concurrency === undefined) {\n\t            concurrency = 1;\n\t        }\n\t        function _insert(q, data, pos, callback) {\n\t          if (!q.started){\n\t            q.started = true;\n\t          }\n\t          if (!_isArray(data)) {\n\t              data = [data];\n\t          }\n\t          if(data.length == 0) {\n\t             // call drain immediately if there are no tasks\n\t             return async.setImmediate(function() {\n\t                 if (q.drain) {\n\t                     q.drain();\n\t                 }\n\t             });\n\t          }\n\t          _each(data, function(task) {\n\t              var item = {\n\t                  data: task,\n\t                  callback: typeof callback === 'function' ? callback : null\n\t              };\n\t\n\t              if (pos) {\n\t                q.tasks.unshift(item);\n\t              } else {\n\t                q.tasks.push(item);\n\t              }\n\t\n\t              if (q.saturated && q.tasks.length === q.concurrency) {\n\t                  q.saturated();\n\t              }\n\t              async.setImmediate(q.process);\n\t          });\n\t        }\n\t\n\t        var workers = 0;\n\t        var q = {\n\t            tasks: [],\n\t            concurrency: concurrency,\n\t            saturated: null,\n\t            empty: null,\n\t            drain: null,\n\t            started: false,\n\t            paused: false,\n\t            push: function (data, callback) {\n\t              _insert(q, data, false, callback);\n\t            },\n\t            kill: function () {\n\t              q.drain = null;\n\t              q.tasks = [];\n\t            },\n\t            unshift: function (data, callback) {\n\t              _insert(q, data, true, callback);\n\t            },\n\t            process: function () {\n\t                if (!q.paused && workers < q.concurrency && q.tasks.length) {\n\t                    var task = q.tasks.shift();\n\t                    if (q.empty && q.tasks.length === 0) {\n\t                        q.empty();\n\t                    }\n\t                    workers += 1;\n\t                    var next = function () {\n\t                        workers -= 1;\n\t                        if (task.callback) {\n\t                            task.callback.apply(task, arguments);\n\t                        }\n\t                        if (q.drain && q.tasks.length + workers === 0) {\n\t                            q.drain();\n\t                        }\n\t                        q.process();\n\t                    };\n\t                    var cb = only_once(next);\n\t                    worker(task.data, cb);\n\t                }\n\t            },\n\t            length: function () {\n\t                return q.tasks.length;\n\t            },\n\t            running: function () {\n\t                return workers;\n\t            },\n\t            idle: function() {\n\t                return q.tasks.length + workers === 0;\n\t            },\n\t            pause: function () {\n\t                if (q.paused === true) { return; }\n\t                q.paused = true;\n\t            },\n\t            resume: function () {\n\t                if (q.paused === false) { return; }\n\t                q.paused = false;\n\t                // Need to call q.process once per concurrent\n\t                // worker to preserve full concurrency after pause\n\t                for (var w = 1; w <= q.concurrency; w++) {\n\t                    async.setImmediate(q.process);\n\t                }\n\t            }\n\t        };\n\t        return q;\n\t    };\n\t\n\t    async.priorityQueue = function (worker, concurrency) {\n\t\n\t        function _compareTasks(a, b){\n\t          return a.priority - b.priority;\n\t        };\n\t\n\t        function _binarySearch(sequence, item, compare) {\n\t          var beg = -1,\n\t              end = sequence.length - 1;\n\t          while (beg < end) {\n\t            var mid = beg + ((end - beg + 1) >>> 1);\n\t            if (compare(item, sequence[mid]) >= 0) {\n\t              beg = mid;\n\t            } else {\n\t              end = mid - 1;\n\t            }\n\t          }\n\t          return beg;\n\t        }\n\t\n\t        function _insert(q, data, priority, callback) {\n\t          if (!q.started){\n\t            q.started = true;\n\t          }\n\t          if (!_isArray(data)) {\n\t              data = [data];\n\t          }\n\t          if(data.length == 0) {\n\t             // call drain immediately if there are no tasks\n\t             return async.setImmediate(function() {\n\t                 if (q.drain) {\n\t                     q.drain();\n\t                 }\n\t             });\n\t          }\n\t          _each(data, function(task) {\n\t              var item = {\n\t                  data: task,\n\t                  priority: priority,\n\t                  callback: typeof callback === 'function' ? callback : null\n\t              };\n\t\n\t              q.tasks.splice(_binarySearch(q.tasks, item, _compareTasks) + 1, 0, item);\n\t\n\t              if (q.saturated && q.tasks.length === q.concurrency) {\n\t                  q.saturated();\n\t              }\n\t              async.setImmediate(q.process);\n\t          });\n\t        }\n\t\n\t        // Start with a normal queue\n\t        var q = async.queue(worker, concurrency);\n\t\n\t        // Override push to accept second parameter representing priority\n\t        q.push = function (data, priority, callback) {\n\t          _insert(q, data, priority, callback);\n\t        };\n\t\n\t        // Remove unshift function\n\t        delete q.unshift;\n\t\n\t        return q;\n\t    };\n\t\n\t    async.cargo = function (worker, payload) {\n\t        var working     = false,\n\t            tasks       = [];\n\t\n\t        var cargo = {\n\t            tasks: tasks,\n\t            payload: payload,\n\t            saturated: null,\n\t            empty: null,\n\t            drain: null,\n\t            drained: true,\n\t            push: function (data, callback) {\n\t                if (!_isArray(data)) {\n\t                    data = [data];\n\t                }\n\t                _each(data, function(task) {\n\t                    tasks.push({\n\t                        data: task,\n\t                        callback: typeof callback === 'function' ? callback : null\n\t                    });\n\t                    cargo.drained = false;\n\t                    if (cargo.saturated && tasks.length === payload) {\n\t                        cargo.saturated();\n\t                    }\n\t                });\n\t                async.setImmediate(cargo.process);\n\t            },\n\t            process: function process() {\n\t                if (working) return;\n\t                if (tasks.length === 0) {\n\t                    if(cargo.drain && !cargo.drained) cargo.drain();\n\t                    cargo.drained = true;\n\t                    return;\n\t                }\n\t\n\t                var ts = typeof payload === 'number'\n\t                            ? tasks.splice(0, payload)\n\t                            : tasks.splice(0, tasks.length);\n\t\n\t                var ds = _map(ts, function (task) {\n\t                    return task.data;\n\t                });\n\t\n\t                if(cargo.empty) cargo.empty();\n\t                working = true;\n\t                worker(ds, function () {\n\t                    working = false;\n\t\n\t                    var args = arguments;\n\t                    _each(ts, function (data) {\n\t                        if (data.callback) {\n\t                            data.callback.apply(null, args);\n\t                        }\n\t                    });\n\t\n\t                    process();\n\t                });\n\t            },\n\t            length: function () {\n\t                return tasks.length;\n\t            },\n\t            running: function () {\n\t                return working;\n\t            }\n\t        };\n\t        return cargo;\n\t    };\n\t\n\t    var _console_fn = function (name) {\n\t        return function (fn) {\n\t            var args = Array.prototype.slice.call(arguments, 1);\n\t            fn.apply(null, args.concat([function (err) {\n\t                var args = Array.prototype.slice.call(arguments, 1);\n\t                if (typeof console !== 'undefined') {\n\t                    if (err) {\n\t                        if (console.error) {\n\t                            console.error(err);\n\t                        }\n\t                    }\n\t                    else if (console[name]) {\n\t                        _each(args, function (x) {\n\t                            console[name](x);\n\t                        });\n\t                    }\n\t                }\n\t            }]));\n\t        };\n\t    };\n\t    async.log = _console_fn('log');\n\t    async.dir = _console_fn('dir');\n\t    /*async.info = _console_fn('info');\n\t    async.warn = _console_fn('warn');\n\t    async.error = _console_fn('error');*/\n\t\n\t    async.memoize = function (fn, hasher) {\n\t        var memo = {};\n\t        var queues = {};\n\t        hasher = hasher || function (x) {\n\t            return x;\n\t        };\n\t        var memoized = function () {\n\t            var args = Array.prototype.slice.call(arguments);\n\t            var callback = args.pop();\n\t            var key = hasher.apply(null, args);\n\t            if (key in memo) {\n\t                async.nextTick(function () {\n\t                    callback.apply(null, memo[key]);\n\t                });\n\t            }\n\t            else if (key in queues) {\n\t                queues[key].push(callback);\n\t            }\n\t            else {\n\t                queues[key] = [callback];\n\t                fn.apply(null, args.concat([function () {\n\t                    memo[key] = arguments;\n\t                    var q = queues[key];\n\t                    delete queues[key];\n\t                    for (var i = 0, l = q.length; i < l; i++) {\n\t                      q[i].apply(null, arguments);\n\t                    }\n\t                }]));\n\t            }\n\t        };\n\t        memoized.memo = memo;\n\t        memoized.unmemoized = fn;\n\t        return memoized;\n\t    };\n\t\n\t    async.unmemoize = function (fn) {\n\t      return function () {\n\t        return (fn.unmemoized || fn).apply(null, arguments);\n\t      };\n\t    };\n\t\n\t    async.times = function (count, iterator, callback) {\n\t        var counter = [];\n\t        for (var i = 0; i < count; i++) {\n\t            counter.push(i);\n\t        }\n\t        return async.map(counter, iterator, callback);\n\t    };\n\t\n\t    async.timesSeries = function (count, iterator, callback) {\n\t        var counter = [];\n\t        for (var i = 0; i < count; i++) {\n\t            counter.push(i);\n\t        }\n\t        return async.mapSeries(counter, iterator, callback);\n\t    };\n\t\n\t    async.seq = function (/* functions... */) {\n\t        var fns = arguments;\n\t        return function () {\n\t            var that = this;\n\t            var args = Array.prototype.slice.call(arguments);\n\t            var callback = args.pop();\n\t            async.reduce(fns, args, function (newargs, fn, cb) {\n\t                fn.apply(that, newargs.concat([function () {\n\t                    var err = arguments[0];\n\t                    var nextargs = Array.prototype.slice.call(arguments, 1);\n\t                    cb(err, nextargs);\n\t                }]))\n\t            },\n\t            function (err, results) {\n\t                callback.apply(that, [err].concat(results));\n\t            });\n\t        };\n\t    };\n\t\n\t    async.compose = function (/* functions... */) {\n\t      return async.seq.apply(null, Array.prototype.reverse.call(arguments));\n\t    };\n\t\n\t    var _applyEach = function (eachfn, fns /*args...*/) {\n\t        var go = function () {\n\t            var that = this;\n\t            var args = Array.prototype.slice.call(arguments);\n\t            var callback = args.pop();\n\t            return eachfn(fns, function (fn, cb) {\n\t                fn.apply(that, args.concat([cb]));\n\t            },\n\t            callback);\n\t        };\n\t        if (arguments.length > 2) {\n\t            var args = Array.prototype.slice.call(arguments, 2);\n\t            return go.apply(this, args);\n\t        }\n\t        else {\n\t            return go;\n\t        }\n\t    };\n\t    async.applyEach = doParallel(_applyEach);\n\t    async.applyEachSeries = doSeries(_applyEach);\n\t\n\t    async.forever = function (fn, callback) {\n\t        function next(err) {\n\t            if (err) {\n\t                if (callback) {\n\t                    return callback(err);\n\t                }\n\t                throw err;\n\t            }\n\t            fn(next);\n\t        }\n\t        next();\n\t    };\n\t\n\t    // Node.js\n\t    if (typeof module !== 'undefined' && module.exports) {\n\t        module.exports = async;\n\t    }\n\t    // AMD / RequireJS\n\t    else if (true) {\n\t        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\t            return async;\n\t        }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t    }\n\t    // included directly via <script> tag\n\t    else {\n\t        root.async = async;\n\t    }\n\t\n\t}());\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(24), __webpack_require__(25).setImmediate))\n\n/***/ },\n/* 24 */\n/***/ function(module, exports) {\n\n\t// shim for using process in browser\n\tvar process = module.exports = {};\n\t\n\t// cached from whatever global is present so that test runners that stub it\n\t// don't break things.  But we need to wrap it in a try catch in case it is\n\t// wrapped in strict mode code which doesn't define any globals.  It's inside a\n\t// function because try/catches deoptimize in certain engines.\n\t\n\tvar cachedSetTimeout;\n\tvar cachedClearTimeout;\n\t\n\tfunction defaultSetTimout() {\n\t    throw new Error('setTimeout has not been defined');\n\t}\n\tfunction defaultClearTimeout () {\n\t    throw new Error('clearTimeout has not been defined');\n\t}\n\t(function () {\n\t    try {\n\t        if (typeof setTimeout === 'function') {\n\t            cachedSetTimeout = setTimeout;\n\t        } else {\n\t            cachedSetTimeout = defaultSetTimout;\n\t        }\n\t    } catch (e) {\n\t        cachedSetTimeout = defaultSetTimout;\n\t    }\n\t    try {\n\t        if (typeof clearTimeout === 'function') {\n\t            cachedClearTimeout = clearTimeout;\n\t        } else {\n\t            cachedClearTimeout = defaultClearTimeout;\n\t        }\n\t    } catch (e) {\n\t        cachedClearTimeout = defaultClearTimeout;\n\t    }\n\t} ())\n\tfunction runTimeout(fun) {\n\t    if (cachedSetTimeout === setTimeout) {\n\t        //normal enviroments in sane situations\n\t        return setTimeout(fun, 0);\n\t    }\n\t    // if setTimeout wasn't available but was latter defined\n\t    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n\t        cachedSetTimeout = setTimeout;\n\t        return setTimeout(fun, 0);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedSetTimeout(fun, 0);\n\t    } catch(e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n\t            return cachedSetTimeout.call(null, fun, 0);\n\t        } catch(e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n\t            return cachedSetTimeout.call(this, fun, 0);\n\t        }\n\t    }\n\t\n\t\n\t}\n\tfunction runClearTimeout(marker) {\n\t    if (cachedClearTimeout === clearTimeout) {\n\t        //normal enviroments in sane situations\n\t        return clearTimeout(marker);\n\t    }\n\t    // if clearTimeout wasn't available but was latter defined\n\t    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n\t        cachedClearTimeout = clearTimeout;\n\t        return clearTimeout(marker);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedClearTimeout(marker);\n\t    } catch (e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n\t            return cachedClearTimeout.call(null, marker);\n\t        } catch (e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n\t            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n\t            return cachedClearTimeout.call(this, marker);\n\t        }\n\t    }\n\t\n\t\n\t\n\t}\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = runTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    runClearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        runTimeout(drainQueue);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar apply = Function.prototype.apply;\n\t\n\t// DOM APIs, for completeness\n\t\n\texports.setTimeout = function() {\n\t  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n\t};\n\texports.setInterval = function() {\n\t  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n\t};\n\texports.clearTimeout =\n\texports.clearInterval = function(timeout) {\n\t  if (timeout) {\n\t    timeout.close();\n\t  }\n\t};\n\t\n\tfunction Timeout(id, clearFn) {\n\t  this._id = id;\n\t  this._clearFn = clearFn;\n\t}\n\tTimeout.prototype.unref = Timeout.prototype.ref = function() {};\n\tTimeout.prototype.close = function() {\n\t  this._clearFn.call(window, this._id);\n\t};\n\t\n\t// Does not start the time, just sets up the members needed.\n\texports.enroll = function(item, msecs) {\n\t  clearTimeout(item._idleTimeoutId);\n\t  item._idleTimeout = msecs;\n\t};\n\t\n\texports.unenroll = function(item) {\n\t  clearTimeout(item._idleTimeoutId);\n\t  item._idleTimeout = -1;\n\t};\n\t\n\texports._unrefActive = exports.active = function(item) {\n\t  clearTimeout(item._idleTimeoutId);\n\t\n\t  var msecs = item._idleTimeout;\n\t  if (msecs >= 0) {\n\t    item._idleTimeoutId = setTimeout(function onTimeout() {\n\t      if (item._onTimeout)\n\t        item._onTimeout();\n\t    }, msecs);\n\t  }\n\t};\n\t\n\t// setimmediate attaches itself to the global object\n\t__webpack_require__(26);\n\texports.setImmediate = setImmediate;\n\texports.clearImmediate = clearImmediate;\n\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\n\t    \"use strict\";\n\t\n\t    if (global.setImmediate) {\n\t        return;\n\t    }\n\t\n\t    var nextHandle = 1; // Spec says greater than zero\n\t    var tasksByHandle = {};\n\t    var currentlyRunningATask = false;\n\t    var doc = global.document;\n\t    var registerImmediate;\n\t\n\t    function setImmediate(callback) {\n\t      // Callback can either be a function or a string\n\t      if (typeof callback !== \"function\") {\n\t        callback = new Function(\"\" + callback);\n\t      }\n\t      // Copy function arguments\n\t      var args = new Array(arguments.length - 1);\n\t      for (var i = 0; i < args.length; i++) {\n\t          args[i] = arguments[i + 1];\n\t      }\n\t      // Store and register the task\n\t      var task = { callback: callback, args: args };\n\t      tasksByHandle[nextHandle] = task;\n\t      registerImmediate(nextHandle);\n\t      return nextHandle++;\n\t    }\n\t\n\t    function clearImmediate(handle) {\n\t        delete tasksByHandle[handle];\n\t    }\n\t\n\t    function run(task) {\n\t        var callback = task.callback;\n\t        var args = task.args;\n\t        switch (args.length) {\n\t        case 0:\n\t            callback();\n\t            break;\n\t        case 1:\n\t            callback(args[0]);\n\t            break;\n\t        case 2:\n\t            callback(args[0], args[1]);\n\t            break;\n\t        case 3:\n\t            callback(args[0], args[1], args[2]);\n\t            break;\n\t        default:\n\t            callback.apply(undefined, args);\n\t            break;\n\t        }\n\t    }\n\t\n\t    function runIfPresent(handle) {\n\t        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n\t        // So if we're currently running a task, we'll need to delay this invocation.\n\t        if (currentlyRunningATask) {\n\t            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n\t            // \"too much recursion\" error.\n\t            setTimeout(runIfPresent, 0, handle);\n\t        } else {\n\t            var task = tasksByHandle[handle];\n\t            if (task) {\n\t                currentlyRunningATask = true;\n\t                try {\n\t                    run(task);\n\t                } finally {\n\t                    clearImmediate(handle);\n\t                    currentlyRunningATask = false;\n\t                }\n\t            }\n\t        }\n\t    }\n\t\n\t    function installNextTickImplementation() {\n\t        registerImmediate = function(handle) {\n\t            process.nextTick(function () { runIfPresent(handle); });\n\t        };\n\t    }\n\t\n\t    function canUsePostMessage() {\n\t        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n\t        // where `global.postMessage` means something completely different and can't be used for this purpose.\n\t        if (global.postMessage && !global.importScripts) {\n\t            var postMessageIsAsynchronous = true;\n\t            var oldOnMessage = global.onmessage;\n\t            global.onmessage = function() {\n\t                postMessageIsAsynchronous = false;\n\t            };\n\t            global.postMessage(\"\", \"*\");\n\t            global.onmessage = oldOnMessage;\n\t            return postMessageIsAsynchronous;\n\t        }\n\t    }\n\t\n\t    function installPostMessageImplementation() {\n\t        // Installs an event handler on `global` for the `message` event: see\n\t        // * https://developer.mozilla.org/en/DOM/window.postMessage\n\t        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\t\n\t        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n\t        var onGlobalMessage = function(event) {\n\t            if (event.source === global &&\n\t                typeof event.data === \"string\" &&\n\t                event.data.indexOf(messagePrefix) === 0) {\n\t                runIfPresent(+event.data.slice(messagePrefix.length));\n\t            }\n\t        };\n\t\n\t        if (global.addEventListener) {\n\t            global.addEventListener(\"message\", onGlobalMessage, false);\n\t        } else {\n\t            global.attachEvent(\"onmessage\", onGlobalMessage);\n\t        }\n\t\n\t        registerImmediate = function(handle) {\n\t            global.postMessage(messagePrefix + handle, \"*\");\n\t        };\n\t    }\n\t\n\t    function installMessageChannelImplementation() {\n\t        var channel = new MessageChannel();\n\t        channel.port1.onmessage = function(event) {\n\t            var handle = event.data;\n\t            runIfPresent(handle);\n\t        };\n\t\n\t        registerImmediate = function(handle) {\n\t            channel.port2.postMessage(handle);\n\t        };\n\t    }\n\t\n\t    function installReadyStateChangeImplementation() {\n\t        var html = doc.documentElement;\n\t        registerImmediate = function(handle) {\n\t            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n\t            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n\t            var script = doc.createElement(\"script\");\n\t            script.onreadystatechange = function () {\n\t                runIfPresent(handle);\n\t                script.onreadystatechange = null;\n\t                html.removeChild(script);\n\t                script = null;\n\t            };\n\t            html.appendChild(script);\n\t        };\n\t    }\n\t\n\t    function installSetTimeoutImplementation() {\n\t        registerImmediate = function(handle) {\n\t            setTimeout(runIfPresent, 0, handle);\n\t        };\n\t    }\n\t\n\t    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n\t    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n\t    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\t\n\t    // Don't get fooled by e.g. browserify environments.\n\t    if ({}.toString.call(global.process) === \"[object process]\") {\n\t        // For Node.js before 0.9\n\t        installNextTickImplementation();\n\t\n\t    } else if (canUsePostMessage()) {\n\t        // For non-IE10 modern browsers\n\t        installPostMessageImplementation();\n\t\n\t    } else if (global.MessageChannel) {\n\t        // For web workers, where supported\n\t        installMessageChannelImplementation();\n\t\n\t    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n\t        // For IE 6–8\n\t        installReadyStateChangeImplementation();\n\t\n\t    } else {\n\t        // For older browsers\n\t        installSetTimeoutImplementation();\n\t    }\n\t\n\t    attachTo.setImmediate = setImmediate;\n\t    attachTo.clearImmediate = clearImmediate;\n\t}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(24)))\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(process, global, setImmediate, __dirname) {/**\n\t * A JavaScript implementation of the JSON-LD API.\n\t *\n\t * @author Dave Longley\n\t *\n\t * @license BSD 3-Clause License\n\t * Copyright (c) 2011-2015 Digital Bazaar, Inc.\n\t * All rights reserved.\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are met:\n\t *\n\t * Redistributions of source code must retain the above copyright notice,\n\t * this list of conditions and the following disclaimer.\n\t *\n\t * Redistributions in binary form must reproduce the above copyright\n\t * notice, this list of conditions and the following disclaimer in the\n\t * documentation and/or other materials provided with the distribution.\n\t *\n\t * Neither the name of the Digital Bazaar, Inc. nor the names of its\n\t * contributors may be used to endorse or promote products derived from\n\t * this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n\t * IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED\n\t * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A\n\t * PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\t * HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\t * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\t * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\t * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\t * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t(function() {\n\t\n\t// determine if in-browser or using node.js\n\tvar _nodejs = (\n\t  typeof process !== 'undefined' && process.versions && process.versions.node);\n\tvar _browser = !_nodejs &&\n\t  (typeof window !== 'undefined' || typeof self !== 'undefined');\n\tif(_browser) {\n\t  if(typeof global === 'undefined') {\n\t    if(typeof window !== 'undefined') {\n\t      global = window;\n\t    } else if(typeof self !== 'undefined') {\n\t      global = self;\n\t    } else if(typeof $ !== 'undefined') {\n\t      global = $;\n\t    }\n\t  }\n\t}\n\t\n\t// attaches jsonld API to the given object\n\tvar wrapper = function(jsonld) {\n\t\n\t/* Core API */\n\t\n\t/**\n\t * Performs JSON-LD compaction.\n\t *\n\t * @param input the JSON-LD input to compact.\n\t * @param ctx the context to compact with.\n\t * @param [options] options to use:\n\t *          [base] the base IRI to use.\n\t *          [compactArrays] true to compact arrays to single values when\n\t *            appropriate, false not to (default: true).\n\t *          [graph] true to always output a top-level graph (default: false).\n\t *          [expandContext] a context to expand with.\n\t *          [skipExpansion] true to assume the input is expanded and skip\n\t *            expansion, false not to, defaults to false.\n\t *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n\t * @param callback(err, compacted, ctx) called once the operation completes.\n\t */\n\tjsonld.compact = function(input, ctx, options, callback) {\n\t  if(arguments.length < 2) {\n\t    return jsonld.nextTick(function() {\n\t      callback(new TypeError('Could not compact, too few arguments.'));\n\t    });\n\t  }\n\t\n\t  // get arguments\n\t  if(typeof options === 'function') {\n\t    callback = options;\n\t    options = {};\n\t  }\n\t  options = options || {};\n\t\n\t  if(ctx === null) {\n\t    return jsonld.nextTick(function() {\n\t      callback(new JsonLdError(\n\t        'The compaction context must not be null.',\n\t        'jsonld.CompactError', {code: 'invalid local context'}));\n\t    });\n\t  }\n\t\n\t  // nothing to compact\n\t  if(input === null) {\n\t    return jsonld.nextTick(function() {\n\t      callback(null, null);\n\t    });\n\t  }\n\t\n\t  // set default options\n\t  if(!('base' in options)) {\n\t    options.base = (typeof input === 'string') ? input : '';\n\t  }\n\t  if(!('compactArrays' in options)) {\n\t    options.compactArrays = true;\n\t  }\n\t  if(!('graph' in options)) {\n\t    options.graph = false;\n\t  }\n\t  if(!('skipExpansion' in options)) {\n\t    options.skipExpansion = false;\n\t  }\n\t  if(!('documentLoader' in options)) {\n\t    options.documentLoader = jsonld.loadDocument;\n\t  }\n\t  if(!('link' in options)) {\n\t    options.link = false;\n\t  }\n\t  if(options.link) {\n\t    // force skip expansion when linking, \"link\" is not part of the public\n\t    // API, it should only be called from framing\n\t    options.skipExpansion = true;\n\t  }\n\t\n\t  var expand = function(input, options, callback) {\n\t    if(options.skipExpansion) {\n\t      return jsonld.nextTick(function() {\n\t        callback(null, input);\n\t      });\n\t    }\n\t    jsonld.expand(input, options, callback);\n\t  };\n\t\n\t  // expand input then do compaction\n\t  expand(input, options, function(err, expanded) {\n\t    if(err) {\n\t      return callback(new JsonLdError(\n\t        'Could not expand input before compaction.',\n\t        'jsonld.CompactError', {cause: err}));\n\t    }\n\t\n\t    // process context\n\t    var activeCtx = _getInitialContext(options);\n\t    jsonld.processContext(activeCtx, ctx, options, function(err, activeCtx) {\n\t      if(err) {\n\t        return callback(new JsonLdError(\n\t          'Could not process context before compaction.',\n\t          'jsonld.CompactError', {cause: err}));\n\t      }\n\t\n\t      var compacted;\n\t      try {\n\t        // do compaction\n\t        compacted = new Processor().compact(activeCtx, null, expanded, options);\n\t      } catch(ex) {\n\t        return callback(ex);\n\t      }\n\t\n\t      cleanup(null, compacted, activeCtx, options);\n\t    });\n\t  });\n\t\n\t  // performs clean up after compaction\n\t  function cleanup(err, compacted, activeCtx, options) {\n\t    if(err) {\n\t      return callback(err);\n\t    }\n\t\n\t    if(options.compactArrays && !options.graph && _isArray(compacted)) {\n\t      if(compacted.length === 1) {\n\t        // simplify to a single item\n\t        compacted = compacted[0];\n\t      } else if(compacted.length === 0) {\n\t        // simplify to an empty object\n\t        compacted = {};\n\t      }\n\t    } else if(options.graph && _isObject(compacted)) {\n\t      // always use array if graph option is on\n\t      compacted = [compacted];\n\t    }\n\t\n\t    // follow @context key\n\t    if(_isObject(ctx) && '@context' in ctx) {\n\t      ctx = ctx['@context'];\n\t    }\n\t\n\t    // build output context\n\t    ctx = _clone(ctx);\n\t    if(!_isArray(ctx)) {\n\t      ctx = [ctx];\n\t    }\n\t    // remove empty contexts\n\t    var tmp = ctx;\n\t    ctx = [];\n\t    for(var i = 0; i < tmp.length; ++i) {\n\t      if(!_isObject(tmp[i]) || Object.keys(tmp[i]).length > 0) {\n\t        ctx.push(tmp[i]);\n\t      }\n\t    }\n\t\n\t    // remove array if only one context\n\t    var hasContext = (ctx.length > 0);\n\t    if(ctx.length === 1) {\n\t      ctx = ctx[0];\n\t    }\n\t\n\t    // add context and/or @graph\n\t    if(_isArray(compacted)) {\n\t      // use '@graph' keyword\n\t      var kwgraph = _compactIri(activeCtx, '@graph');\n\t      var graph = compacted;\n\t      compacted = {};\n\t      if(hasContext) {\n\t        compacted['@context'] = ctx;\n\t      }\n\t      compacted[kwgraph] = graph;\n\t    } else if(_isObject(compacted) && hasContext) {\n\t      // reorder keys so @context is first\n\t      var graph = compacted;\n\t      compacted = {'@context': ctx};\n\t      for(var key in graph) {\n\t        compacted[key] = graph[key];\n\t      }\n\t    }\n\t\n\t    callback(null, compacted, activeCtx);\n\t  }\n\t};\n\t\n\t/**\n\t * Performs JSON-LD expansion.\n\t *\n\t * @param input the JSON-LD input to expand.\n\t * @param [options] the options to use:\n\t *          [base] the base IRI to use.\n\t *          [expandContext] a context to expand with.\n\t *          [keepFreeFloatingNodes] true to keep free-floating nodes,\n\t *            false not to, defaults to false.\n\t *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n\t * @param callback(err, expanded) called once the operation completes.\n\t */\n\tjsonld.expand = function(input, options, callback) {\n\t  if(arguments.length < 1) {\n\t    return jsonld.nextTick(function() {\n\t      callback(new TypeError('Could not expand, too few arguments.'));\n\t    });\n\t  }\n\t\n\t  // get arguments\n\t  if(typeof options === 'function') {\n\t    callback = options;\n\t    options = {};\n\t  }\n\t  options = options || {};\n\t\n\t  // set default options\n\t  if(!('documentLoader' in options)) {\n\t    options.documentLoader = jsonld.loadDocument;\n\t  }\n\t  if(!('keepFreeFloatingNodes' in options)) {\n\t    options.keepFreeFloatingNodes = false;\n\t  }\n\t\n\t  jsonld.nextTick(function() {\n\t    // if input is a string, attempt to dereference remote document\n\t    if(typeof input === 'string') {\n\t      var done = function(err, remoteDoc) {\n\t        if(err) {\n\t          return callback(err);\n\t        }\n\t        try {\n\t          if(!remoteDoc.document) {\n\t            throw new JsonLdError(\n\t              'No remote document found at the given URL.',\n\t              'jsonld.NullRemoteDocument');\n\t          }\n\t          if(typeof remoteDoc.document === 'string') {\n\t            remoteDoc.document = JSON.parse(remoteDoc.document);\n\t          }\n\t        } catch(ex) {\n\t          return callback(new JsonLdError(\n\t            'Could not retrieve a JSON-LD document from the URL. URL ' +\n\t            'dereferencing not implemented.', 'jsonld.LoadDocumentError', {\n\t              code: 'loading document failed',\n\t              cause: ex,\n\t              remoteDoc: remoteDoc\n\t          }));\n\t        }\n\t        expand(remoteDoc);\n\t      };\n\t      var promise = options.documentLoader(input, done);\n\t      if(promise && 'then' in promise) {\n\t        promise.then(done.bind(null, null), done);\n\t      }\n\t      return;\n\t    }\n\t    // nothing to load\n\t    expand({contextUrl: null, documentUrl: null, document: input});\n\t  });\n\t\n\t  function expand(remoteDoc) {\n\t    // set default base\n\t    if(!('base' in options)) {\n\t      options.base = remoteDoc.documentUrl || '';\n\t    }\n\t    // build meta-object and retrieve all @context URLs\n\t    var input = {\n\t      document: _clone(remoteDoc.document),\n\t      remoteContext: {'@context': remoteDoc.contextUrl}\n\t    };\n\t    if('expandContext' in options) {\n\t      var expandContext = _clone(options.expandContext);\n\t      if(typeof expandContext === 'object' && '@context' in expandContext) {\n\t        input.expandContext = expandContext;\n\t      } else {\n\t        input.expandContext = {'@context': expandContext};\n\t      }\n\t    }\n\t    _retrieveContextUrls(input, options, function(err, input) {\n\t      if(err) {\n\t        return callback(err);\n\t      }\n\t\n\t      var expanded;\n\t      try {\n\t        var processor = new Processor();\n\t        var activeCtx = _getInitialContext(options);\n\t        var document = input.document;\n\t        var remoteContext = input.remoteContext['@context'];\n\t\n\t        // process optional expandContext\n\t        if(input.expandContext) {\n\t          activeCtx = processor.processContext(\n\t            activeCtx, input.expandContext['@context'], options);\n\t        }\n\t\n\t        // process remote context from HTTP Link Header\n\t        if(remoteContext) {\n\t          activeCtx = processor.processContext(\n\t            activeCtx, remoteContext, options);\n\t        }\n\t\n\t        // expand document\n\t        expanded = processor.expand(\n\t          activeCtx, null, document, options, false);\n\t\n\t        // optimize away @graph with no other properties\n\t        if(_isObject(expanded) && ('@graph' in expanded) &&\n\t          Object.keys(expanded).length === 1) {\n\t          expanded = expanded['@graph'];\n\t        } else if(expanded === null) {\n\t          expanded = [];\n\t        }\n\t\n\t        // normalize to an array\n\t        if(!_isArray(expanded)) {\n\t          expanded = [expanded];\n\t        }\n\t      } catch(ex) {\n\t        return callback(ex);\n\t      }\n\t      callback(null, expanded);\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * Performs JSON-LD flattening.\n\t *\n\t * @param input the JSON-LD to flatten.\n\t * @param ctx the context to use to compact the flattened output, or null.\n\t * @param [options] the options to use:\n\t *          [base] the base IRI to use.\n\t *          [expandContext] a context to expand with.\n\t *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n\t * @param callback(err, flattened) called once the operation completes.\n\t */\n\tjsonld.flatten = function(input, ctx, options, callback) {\n\t  if(arguments.length < 1) {\n\t    return jsonld.nextTick(function() {\n\t      callback(new TypeError('Could not flatten, too few arguments.'));\n\t    });\n\t  }\n\t\n\t  // get arguments\n\t  if(typeof options === 'function') {\n\t    callback = options;\n\t    options = {};\n\t  } else if(typeof ctx === 'function') {\n\t    callback = ctx;\n\t    ctx = null;\n\t    options = {};\n\t  }\n\t  options = options || {};\n\t\n\t  // set default options\n\t  if(!('base' in options)) {\n\t    options.base = (typeof input === 'string') ? input : '';\n\t  }\n\t  if(!('documentLoader' in options)) {\n\t    options.documentLoader = jsonld.loadDocument;\n\t  }\n\t\n\t  // expand input\n\t  jsonld.expand(input, options, function(err, _input) {\n\t    if(err) {\n\t      return callback(new JsonLdError(\n\t        'Could not expand input before flattening.',\n\t        'jsonld.FlattenError', {cause: err}));\n\t    }\n\t\n\t    var flattened;\n\t    try {\n\t      // do flattening\n\t      flattened = new Processor().flatten(_input);\n\t    } catch(ex) {\n\t      return callback(ex);\n\t    }\n\t\n\t    if(ctx === null) {\n\t      return callback(null, flattened);\n\t    }\n\t\n\t    // compact result (force @graph option to true, skip expansion)\n\t    options.graph = true;\n\t    options.skipExpansion = true;\n\t    jsonld.compact(flattened, ctx, options, function(err, compacted) {\n\t      if(err) {\n\t        return callback(new JsonLdError(\n\t          'Could not compact flattened output.',\n\t          'jsonld.FlattenError', {cause: err}));\n\t      }\n\t      callback(null, compacted);\n\t    });\n\t  });\n\t};\n\t\n\t/**\n\t * Performs JSON-LD framing.\n\t *\n\t * @param input the JSON-LD input to frame.\n\t * @param frame the JSON-LD frame to use.\n\t * @param [options] the framing options.\n\t *          [base] the base IRI to use.\n\t *          [expandContext] a context to expand with.\n\t *          [embed] default @embed flag: '@last', '@always', '@never', '@link'\n\t *            (default: '@last').\n\t *          [explicit] default @explicit flag (default: false).\n\t *          [requireAll] default @requireAll flag (default: true).\n\t *          [omitDefault] default @omitDefault flag (default: false).\n\t *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n\t * @param callback(err, framed) called once the operation completes.\n\t */\n\tjsonld.frame = function(input, frame, options, callback) {\n\t  if(arguments.length < 2) {\n\t    return jsonld.nextTick(function() {\n\t      callback(new TypeError('Could not frame, too few arguments.'));\n\t    });\n\t  }\n\t\n\t  // get arguments\n\t  if(typeof options === 'function') {\n\t    callback = options;\n\t    options = {};\n\t  }\n\t  options = options || {};\n\t\n\t  // set default options\n\t  if(!('base' in options)) {\n\t    options.base = (typeof input === 'string') ? input : '';\n\t  }\n\t  if(!('documentLoader' in options)) {\n\t    options.documentLoader = jsonld.loadDocument;\n\t  }\n\t  if(!('embed' in options)) {\n\t    options.embed = '@last';\n\t  }\n\t  options.explicit = options.explicit || false;\n\t  if(!('requireAll' in options)) {\n\t    options.requireAll = true;\n\t  }\n\t  options.omitDefault = options.omitDefault || false;\n\t\n\t  jsonld.nextTick(function() {\n\t    // if frame is a string, attempt to dereference remote document\n\t    if(typeof frame === 'string') {\n\t      var done = function(err, remoteDoc) {\n\t        if(err) {\n\t          return callback(err);\n\t        }\n\t        try {\n\t          if(!remoteDoc.document) {\n\t            throw new JsonLdError(\n\t              'No remote document found at the given URL.',\n\t              'jsonld.NullRemoteDocument');\n\t          }\n\t          if(typeof remoteDoc.document === 'string') {\n\t            remoteDoc.document = JSON.parse(remoteDoc.document);\n\t          }\n\t        } catch(ex) {\n\t          return callback(new JsonLdError(\n\t            'Could not retrieve a JSON-LD document from the URL. URL ' +\n\t            'dereferencing not implemented.', 'jsonld.LoadDocumentError', {\n\t              code: 'loading document failed',\n\t              cause: ex,\n\t              remoteDoc: remoteDoc\n\t          }));\n\t        }\n\t        doFrame(remoteDoc);\n\t      };\n\t      var promise = options.documentLoader(frame, done);\n\t      if(promise && 'then' in promise) {\n\t        promise.then(done.bind(null, null), done);\n\t      }\n\t      return;\n\t    }\n\t    // nothing to load\n\t    doFrame({contextUrl: null, documentUrl: null, document: frame});\n\t  });\n\t\n\t  function doFrame(remoteFrame) {\n\t    // preserve frame context and add any Link header context\n\t    var frame = remoteFrame.document;\n\t    var ctx;\n\t    if(frame) {\n\t      ctx = frame['@context'];\n\t      if(remoteFrame.contextUrl) {\n\t        if(!ctx) {\n\t          ctx = remoteFrame.contextUrl;\n\t        } else if(_isArray(ctx)) {\n\t          ctx.push(remoteFrame.contextUrl);\n\t        } else {\n\t          ctx = [ctx, remoteFrame.contextUrl];\n\t        }\n\t        frame['@context'] = ctx;\n\t      } else {\n\t        ctx = ctx || {};\n\t      }\n\t    } else {\n\t      ctx = {};\n\t    }\n\t\n\t    // expand input\n\t    jsonld.expand(input, options, function(err, expanded) {\n\t      if(err) {\n\t        return callback(new JsonLdError(\n\t          'Could not expand input before framing.',\n\t          'jsonld.FrameError', {cause: err}));\n\t      }\n\t\n\t      // expand frame\n\t      var opts = _clone(options);\n\t      opts.isFrame = true;\n\t      opts.keepFreeFloatingNodes = true;\n\t      jsonld.expand(frame, opts, function(err, expandedFrame) {\n\t        if(err) {\n\t          return callback(new JsonLdError(\n\t            'Could not expand frame before framing.',\n\t            'jsonld.FrameError', {cause: err}));\n\t        }\n\t\n\t        var framed;\n\t        try {\n\t          // do framing\n\t          framed = new Processor().frame(expanded, expandedFrame, opts);\n\t        } catch(ex) {\n\t          return callback(ex);\n\t        }\n\t\n\t        // compact result (force @graph option to true, skip expansion,\n\t        // check for linked embeds)\n\t        opts.graph = true;\n\t        opts.skipExpansion = true;\n\t        opts.link = {};\n\t        jsonld.compact(framed, ctx, opts, function(err, compacted, ctx) {\n\t          if(err) {\n\t            return callback(new JsonLdError(\n\t              'Could not compact framed output.',\n\t              'jsonld.FrameError', {cause: err}));\n\t          }\n\t          // get graph alias\n\t          var graph = _compactIri(ctx, '@graph');\n\t          // remove @preserve from results\n\t          opts.link = {};\n\t          compacted[graph] = _removePreserve(ctx, compacted[graph], opts);\n\t          callback(null, compacted);\n\t        });\n\t      });\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * **Experimental**\n\t *\n\t * Links a JSON-LD document's nodes in memory.\n\t *\n\t * @param input the JSON-LD document to link.\n\t * @param ctx the JSON-LD context to apply.\n\t * @param [options] the options to use:\n\t *          [base] the base IRI to use.\n\t *          [expandContext] a context to expand with.\n\t *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n\t * @param callback(err, linked) called once the operation completes.\n\t */\n\tjsonld.link = function(input, ctx, options, callback) {\n\t  // API matches running frame with a wildcard frame and embed: '@link'\n\t  // get arguments\n\t  var frame = {};\n\t  if(ctx) {\n\t    frame['@context'] = ctx;\n\t  }\n\t  frame['@embed'] = '@link';\n\t  jsonld.frame(input, frame, options, callback);\n\t};\n\t\n\t/**\n\t * **Deprecated**\n\t *\n\t * Performs JSON-LD objectification.\n\t *\n\t * @param input the JSON-LD document to objectify.\n\t * @param ctx the JSON-LD context to apply.\n\t * @param [options] the options to use:\n\t *          [base] the base IRI to use.\n\t *          [expandContext] a context to expand with.\n\t *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n\t * @param callback(err, linked) called once the operation completes.\n\t */\n\tjsonld.objectify = function(input, ctx, options, callback) {\n\t  if(typeof options === 'function') {\n\t    callback = options;\n\t    options = {};\n\t  }\n\t  options = options || {};\n\t\n\t  // set default options\n\t  if(!('base' in options)) {\n\t    options.base = (typeof input === 'string') ? input : '';\n\t  }\n\t  if(!('documentLoader' in options)) {\n\t    options.documentLoader = jsonld.loadDocument;\n\t  }\n\t\n\t  // expand input\n\t  jsonld.expand(input, options, function(err, _input) {\n\t    if(err) {\n\t      return callback(new JsonLdError(\n\t        'Could not expand input before linking.',\n\t        'jsonld.LinkError', {cause: err}));\n\t    }\n\t\n\t    var flattened;\n\t    try {\n\t      // flatten the graph\n\t      flattened = new Processor().flatten(_input);\n\t    } catch(ex) {\n\t      return callback(ex);\n\t    }\n\t\n\t    // compact result (force @graph option to true, skip expansion)\n\t    options.graph = true;\n\t    options.skipExpansion = true;\n\t    jsonld.compact(flattened, ctx, options, function(err, compacted, ctx) {\n\t      if(err) {\n\t        return callback(new JsonLdError(\n\t          'Could not compact flattened output before linking.',\n\t          'jsonld.LinkError', {cause: err}));\n\t      }\n\t      // get graph alias\n\t      var graph = _compactIri(ctx, '@graph');\n\t      var top = compacted[graph][0];\n\t\n\t      var recurse = function(subject) {\n\t        // can't replace just a string\n\t        if(!_isObject(subject) && !_isArray(subject)) {\n\t          return;\n\t        }\n\t\n\t        // bottom out recursion on re-visit\n\t        if(_isObject(subject)) {\n\t          if(recurse.visited[subject['@id']]) {\n\t            return;\n\t          }\n\t          recurse.visited[subject['@id']] = true;\n\t        }\n\t\n\t        // each array element *or* object key\n\t        for(var k in subject) {\n\t          var obj = subject[k];\n\t          var isid = (jsonld.getContextValue(ctx, k, '@type') === '@id');\n\t\n\t          // can't replace a non-object or non-array unless it's an @id\n\t          if(!_isArray(obj) && !_isObject(obj) && !isid) {\n\t            continue;\n\t          }\n\t\n\t          if(_isString(obj) && isid) {\n\t            subject[k] = obj = top[obj];\n\t            recurse(obj);\n\t          } else if(_isArray(obj)) {\n\t            for(var i = 0; i < obj.length; ++i) {\n\t              if(_isString(obj[i]) && isid) {\n\t                obj[i] = top[obj[i]];\n\t              } else if(_isObject(obj[i]) && '@id' in obj[i]) {\n\t                obj[i] = top[obj[i]['@id']];\n\t              }\n\t              recurse(obj[i]);\n\t            }\n\t          } else if(_isObject(obj)) {\n\t            var sid = obj['@id'];\n\t            subject[k] = obj = top[sid];\n\t            recurse(obj);\n\t          }\n\t        }\n\t      };\n\t      recurse.visited = {};\n\t      recurse(top);\n\t\n\t      compacted.of_type = {};\n\t      for(var s in top) {\n\t        if(!('@type' in top[s])) {\n\t          continue;\n\t        }\n\t        var types = top[s]['@type'];\n\t        if(!_isArray(types)) {\n\t          types = [types];\n\t        }\n\t        for(var t = 0; t < types.length; ++t) {\n\t          if(!(types[t] in compacted.of_type)) {\n\t            compacted.of_type[types[t]] = [];\n\t          }\n\t          compacted.of_type[types[t]].push(top[s]);\n\t        }\n\t      }\n\t      callback(null, compacted);\n\t    });\n\t  });\n\t};\n\t\n\t/**\n\t * Performs RDF dataset normalization on the given input. The input is JSON-LD\n\t * unless the 'inputFormat' option is used. The output is an RDF dataset\n\t * unless the 'format' option is used.\n\t *\n\t * @param input the input to normalize as JSON-LD or as a format specified by\n\t *          the 'inputFormat' option.\n\t * @param [options] the options to use:\n\t *          [algorithm] the normalization algorithm to use, `URDNA2015` or\n\t *            `URGNA2012` (default: `URGNA2012`).\n\t *          [base] the base IRI to use.\n\t *          [expandContext] a context to expand with.\n\t *          [inputFormat] the format if input is not JSON-LD:\n\t *            'application/nquads' for N-Quads.\n\t *          [format] the format if output is a string:\n\t *            'application/nquads' for N-Quads.\n\t *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n\t * @param callback(err, normalized) called once the operation completes.\n\t */\n\tjsonld.normalize = function(input, options, callback) {\n\t  if(arguments.length < 1) {\n\t    return jsonld.nextTick(function() {\n\t      callback(new TypeError('Could not normalize, too few arguments.'));\n\t    });\n\t  }\n\t\n\t  // get arguments\n\t  if(typeof options === 'function') {\n\t    callback = options;\n\t    options = {};\n\t  }\n\t  options = options || {};\n\t\n\t  // set default options\n\t  if(!('algorithm' in options)) {\n\t    options.algorithm = 'URGNA2012';\n\t  }\n\t  if(!('base' in options)) {\n\t    options.base = (typeof input === 'string') ? input : '';\n\t  }\n\t  if(!('documentLoader' in options)) {\n\t    options.documentLoader = jsonld.loadDocument;\n\t  }\n\t\n\t  if('inputFormat' in options) {\n\t    if(options.inputFormat !== 'application/nquads') {\n\t      return callback(new JsonLdError(\n\t        'Unknown normalization input format.',\n\t        'jsonld.NormalizeError'));\n\t    }\n\t    var parsedInput = _parseNQuads(input);\n\t    // do normalization\n\t    new Processor().normalize(parsedInput, options, callback);\n\t  } else {\n\t    // convert to RDF dataset then do normalization\n\t    var opts = _clone(options);\n\t    delete opts.format;\n\t    opts.produceGeneralizedRdf = false;\n\t    jsonld.toRDF(input, opts, function(err, dataset) {\n\t      if(err) {\n\t        return callback(new JsonLdError(\n\t          'Could not convert input to RDF dataset before normalization.',\n\t          'jsonld.NormalizeError', {cause: err}));\n\t      }\n\t      // do normalization\n\t      new Processor().normalize(dataset, options, callback);\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * Converts an RDF dataset to JSON-LD.\n\t *\n\t * @param dataset a serialized string of RDF in a format specified by the\n\t *          format option or an RDF dataset to convert.\n\t * @param [options] the options to use:\n\t *          [format] the format if dataset param must first be parsed:\n\t *            'application/nquads' for N-Quads (default).\n\t *          [rdfParser] a custom RDF-parser to use to parse the dataset.\n\t *          [useRdfType] true to use rdf:type, false to use @type\n\t *            (default: false).\n\t *          [useNativeTypes] true to convert XSD types into native types\n\t *            (boolean, integer, double), false not to (default: false).\n\t * @param callback(err, output) called once the operation completes.\n\t */\n\tjsonld.fromRDF = function(dataset, options, callback) {\n\t  if(arguments.length < 1) {\n\t    return jsonld.nextTick(function() {\n\t      callback(new TypeError('Could not convert from RDF, too few arguments.'));\n\t    });\n\t  }\n\t\n\t  // get arguments\n\t  if(typeof options === 'function') {\n\t    callback = options;\n\t    options = {};\n\t  }\n\t  options = options || {};\n\t\n\t  // set default options\n\t  if(!('useRdfType' in options)) {\n\t    options.useRdfType = false;\n\t  }\n\t  if(!('useNativeTypes' in options)) {\n\t    options.useNativeTypes = false;\n\t  }\n\t\n\t  if(!('format' in options) && _isString(dataset)) {\n\t    // set default format to nquads\n\t    if(!('format' in options)) {\n\t      options.format = 'application/nquads';\n\t    }\n\t  }\n\t\n\t  jsonld.nextTick(function() {\n\t    // handle special format\n\t    var rdfParser;\n\t    if(options.format) {\n\t      // check supported formats\n\t      rdfParser = options.rdfParser || _rdfParsers[options.format];\n\t      if(!rdfParser) {\n\t        return callback(new JsonLdError(\n\t          'Unknown input format.',\n\t          'jsonld.UnknownFormat', {format: options.format}));\n\t      }\n\t    } else {\n\t      // no-op parser, assume dataset already parsed\n\t      rdfParser = function() {\n\t        return dataset;\n\t      };\n\t    }\n\t\n\t    var callbackCalled = false;\n\t    try {\n\t      // rdf parser may be async or sync, always pass callback\n\t      dataset = rdfParser(dataset, function(err, dataset) {\n\t        callbackCalled = true;\n\t        if(err) {\n\t          return callback(err);\n\t        }\n\t        fromRDF(dataset, options, callback);\n\t      });\n\t    } catch(e) {\n\t      if(!callbackCalled) {\n\t        return callback(e);\n\t      }\n\t      throw e;\n\t    }\n\t    // handle synchronous or promise-based parser\n\t    if(dataset) {\n\t      // if dataset is actually a promise\n\t      if('then' in dataset) {\n\t        return dataset.then(function(dataset) {\n\t          fromRDF(dataset, options, callback);\n\t        }, callback);\n\t      }\n\t      // parser is synchronous\n\t      fromRDF(dataset, options, callback);\n\t    }\n\t\n\t    function fromRDF(dataset, options, callback) {\n\t      // convert from RDF\n\t      new Processor().fromRDF(dataset, options, callback);\n\t    }\n\t  });\n\t};\n\t\n\t/**\n\t * Outputs the RDF dataset found in the given JSON-LD object.\n\t *\n\t * @param input the JSON-LD input.\n\t * @param [options] the options to use:\n\t *          [base] the base IRI to use.\n\t *          [expandContext] a context to expand with.\n\t *          [format] the format to use to output a string:\n\t *            'application/nquads' for N-Quads.\n\t *          [produceGeneralizedRdf] true to output generalized RDF, false\n\t *            to produce only standard RDF (default: false).\n\t *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n\t * @param callback(err, dataset) called once the operation completes.\n\t */\n\tjsonld.toRDF = function(input, options, callback) {\n\t  if(arguments.length < 1) {\n\t    return jsonld.nextTick(function() {\n\t      callback(new TypeError('Could not convert to RDF, too few arguments.'));\n\t    });\n\t  }\n\t\n\t  // get arguments\n\t  if(typeof options === 'function') {\n\t    callback = options;\n\t    options = {};\n\t  }\n\t  options = options || {};\n\t\n\t  // set default options\n\t  if(!('base' in options)) {\n\t    options.base = (typeof input === 'string') ? input : '';\n\t  }\n\t  if(!('documentLoader' in options)) {\n\t    options.documentLoader = jsonld.loadDocument;\n\t  }\n\t\n\t  // expand input\n\t  jsonld.expand(input, options, function(err, expanded) {\n\t    if(err) {\n\t      return callback(new JsonLdError(\n\t        'Could not expand input before serialization to RDF.',\n\t        'jsonld.RdfError', {cause: err}));\n\t    }\n\t\n\t    var dataset;\n\t    try {\n\t      // output RDF dataset\n\t      dataset = Processor.prototype.toRDF(expanded, options);\n\t      if(options.format) {\n\t        if(options.format === 'application/nquads') {\n\t          return callback(null, _toNQuads(dataset));\n\t        }\n\t        throw new JsonLdError(\n\t          'Unknown output format.',\n\t          'jsonld.UnknownFormat', {format: options.format});\n\t      }\n\t    } catch(ex) {\n\t      return callback(ex);\n\t    }\n\t    callback(null, dataset);\n\t  });\n\t};\n\t\n\t/**\n\t * **Experimental**\n\t *\n\t * Recursively flattens the nodes in the given JSON-LD input into a map of\n\t * node ID => node.\n\t *\n\t * @param input the JSON-LD input.\n\t * @param [options] the options to use:\n\t *          [base] the base IRI to use.\n\t *          [expandContext] a context to expand with.\n\t *          [issuer] a jsonld.IdentifierIssuer to use to label blank nodes.\n\t *          [namer] (deprecated)\n\t *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n\t * @param callback(err, nodeMap) called once the operation completes.\n\t */\n\tjsonld.createNodeMap = function(input, options, callback) {\n\t  if(arguments.length < 1) {\n\t    return jsonld.nextTick(function() {\n\t      callback(new TypeError('Could not create node map, too few arguments.'));\n\t    });\n\t  }\n\t\n\t  // get arguments\n\t  if(typeof options === 'function') {\n\t    callback = options;\n\t    options = {};\n\t  }\n\t  options = options || {};\n\t\n\t  // set default options\n\t  if(!('base' in options)) {\n\t    options.base = (typeof input === 'string') ? input : '';\n\t  }\n\t  if(!('documentLoader' in options)) {\n\t    options.documentLoader = jsonld.loadDocument;\n\t  }\n\t\n\t  // expand input\n\t  jsonld.expand(input, options, function(err, _input) {\n\t    if(err) {\n\t      return callback(new JsonLdError(\n\t        'Could not expand input before creating node map.',\n\t        'jsonld.CreateNodeMapError', {cause: err}));\n\t    }\n\t\n\t    var nodeMap;\n\t    try {\n\t      nodeMap = new Processor().createNodeMap(_input, options);\n\t    } catch(ex) {\n\t      return callback(ex);\n\t    }\n\t\n\t    callback(null, nodeMap);\n\t  });\n\t};\n\t\n\t/**\n\t * **Experimental**\n\t *\n\t * Merges two or more JSON-LD documents into a single flattened document.\n\t *\n\t * @param docs the JSON-LD documents to merge together.\n\t * @param ctx the context to use to compact the merged result, or null.\n\t * @param [options] the options to use:\n\t *          [base] the base IRI to use.\n\t *          [expandContext] a context to expand with.\n\t *          [issuer] a jsonld.IdentifierIssuer to use to label blank nodes.\n\t *          [namer] (deprecated).\n\t *          [mergeNodes] true to merge properties for nodes with the same ID,\n\t *            false to ignore new properties for nodes with the same ID once\n\t *            the ID has been defined; note that this may not prevent merging\n\t *            new properties where a node is in the `object` position\n\t *            (default: true).\n\t *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n\t * @param callback(err, merged) called once the operation completes.\n\t */\n\tjsonld.merge = function(docs, ctx, options, callback) {\n\t  if(arguments.length < 1) {\n\t    return jsonld.nextTick(function() {\n\t      callback(new TypeError('Could not merge, too few arguments.'));\n\t    });\n\t  }\n\t  if(!_isArray(docs)) {\n\t    return jsonld.nextTick(function() {\n\t      callback(new TypeError('Could not merge, \"docs\" must be an array.'));\n\t    });\n\t  }\n\t\n\t  // get arguments\n\t  if(typeof options === 'function') {\n\t    callback = options;\n\t    options = {};\n\t  } else if(typeof ctx === 'function') {\n\t    callback = ctx;\n\t    ctx = null;\n\t    options = {};\n\t  }\n\t  options = options || {};\n\t\n\t  // expand all documents\n\t  var expanded = [];\n\t  var error = null;\n\t  var count = docs.length;\n\t  for(var i = 0; i < docs.length; ++i) {\n\t    var opts = {};\n\t    for(var key in options) {\n\t      opts[key] = options[key];\n\t    }\n\t    jsonld.expand(docs[i], opts, expandComplete);\n\t  }\n\t\n\t  function expandComplete(err, _input) {\n\t    if(error) {\n\t      return;\n\t    }\n\t    if(err) {\n\t      error = err;\n\t      return callback(new JsonLdError(\n\t        'Could not expand input before flattening.',\n\t        'jsonld.FlattenError', {cause: err}));\n\t    }\n\t    expanded.push(_input);\n\t    if(--count === 0) {\n\t      merge(expanded);\n\t    }\n\t  }\n\t\n\t  function merge(expanded) {\n\t    var mergeNodes = true;\n\t    if('mergeNodes' in options) {\n\t      mergeNodes = options.mergeNodes;\n\t    }\n\t\n\t    var issuer = options.namer || options.issuer || new IdentifierIssuer('_:b');\n\t    var graphs = {'@default': {}};\n\t\n\t    var defaultGraph;\n\t    try {\n\t      for(var i = 0; i < expanded.length; ++i) {\n\t        // uniquely relabel blank nodes\n\t        var doc = expanded[i];\n\t        doc = jsonld.relabelBlankNodes(doc, {\n\t          issuer: new IdentifierIssuer('_:b' + i + '-')\n\t        });\n\t\n\t        // add nodes to the shared node map graphs if merging nodes, to a\n\t        // separate graph set if not\n\t        var _graphs = (mergeNodes || i === 0) ? graphs : {'@default': {}};\n\t        _createNodeMap(doc, _graphs, '@default', issuer);\n\t\n\t        if(_graphs !== graphs) {\n\t          // merge document graphs but don't merge existing nodes\n\t          for(var graphName in _graphs) {\n\t            var _nodeMap = _graphs[graphName];\n\t            if(!(graphName in graphs)) {\n\t              graphs[graphName] = _nodeMap;\n\t              continue;\n\t            }\n\t            var nodeMap = graphs[graphName];\n\t            for(var key in _nodeMap) {\n\t              if(!(key in nodeMap)) {\n\t                nodeMap[key] = _nodeMap[key];\n\t              }\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      // add all non-default graphs to default graph\n\t      defaultGraph = _mergeNodeMaps(graphs);\n\t    } catch(ex) {\n\t      return callback(ex);\n\t    }\n\t\n\t    // produce flattened output\n\t    var flattened = [];\n\t    var keys = Object.keys(defaultGraph).sort();\n\t    for(var ki = 0; ki < keys.length; ++ki) {\n\t      var node = defaultGraph[keys[ki]];\n\t      // only add full subjects to top-level\n\t      if(!_isSubjectReference(node)) {\n\t        flattened.push(node);\n\t      }\n\t    }\n\t\n\t    if(ctx === null) {\n\t      return callback(null, flattened);\n\t    }\n\t\n\t    // compact result (force @graph option to true, skip expansion)\n\t    options.graph = true;\n\t    options.skipExpansion = true;\n\t    jsonld.compact(flattened, ctx, options, function(err, compacted) {\n\t      if(err) {\n\t        return callback(new JsonLdError(\n\t          'Could not compact merged output.',\n\t          'jsonld.MergeError', {cause: err}));\n\t      }\n\t      callback(null, compacted);\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * Relabels all blank nodes in the given JSON-LD input.\n\t *\n\t * @param input the JSON-LD input.\n\t * @param [options] the options to use:\n\t *          [issuer] a jsonld.IdentifierIssuer to use to label blank nodes.\n\t *          [namer] (deprecated).\n\t */\n\tjsonld.relabelBlankNodes = function(input, options) {\n\t  options = options || {};\n\t  var issuer = options.namer || options.issuer || new IdentifierIssuer('_:b');\n\t  return _labelBlankNodes(issuer, input);\n\t};\n\t\n\t/**\n\t * Prepends a base IRI to the given relative IRI.\n\t *\n\t * @param base the base IRI.\n\t * @param iri the relative IRI.\n\t *\n\t * @return the absolute IRI.\n\t */\n\tjsonld.prependBase = function(base, iri) {\n\t  return _prependBase(base, iri);\n\t};\n\t\n\t/**\n\t * The default document loader for external documents. If the environment\n\t * is node.js, a callback-continuation-style document loader is used; otherwise,\n\t * a promises-style document loader is used.\n\t *\n\t * @param url the URL to load.\n\t * @param callback(err, remoteDoc) called once the operation completes,\n\t *          if using a non-promises API.\n\t *\n\t * @return a promise, if using a promises API.\n\t */\n\tjsonld.documentLoader = function(url, callback) {\n\t  var err = new JsonLdError(\n\t    'Could not retrieve a JSON-LD document from the URL. URL ' +\n\t    'dereferencing not implemented.', 'jsonld.LoadDocumentError',\n\t    {code: 'loading document failed'});\n\t  if(_nodejs) {\n\t    return callback(err, {contextUrl: null, documentUrl: url, document: null});\n\t  }\n\t  return jsonld.promisify(function(callback) {\n\t    callback(err);\n\t  });\n\t};\n\t\n\t/**\n\t * Deprecated default document loader. Use or override jsonld.documentLoader\n\t * instead.\n\t */\n\tjsonld.loadDocument = function(url, callback) {\n\t  var promise = jsonld.documentLoader(url, callback);\n\t  if(promise && 'then' in promise) {\n\t    promise.then(callback.bind(null, null), callback);\n\t  }\n\t};\n\t\n\t/* Promises API */\n\t\n\t/**\n\t * Creates a new promises API object.\n\t *\n\t * @param [options] the options to use:\n\t *          [api] an object to attach the API to.\n\t *          [version] 'json-ld-1.0' to output a standard JSON-LD 1.0 promises\n\t *            API, 'jsonld.js' to output the same with augmented proprietary\n\t *            methods (default: 'jsonld.js')\n\t *\n\t * @return the promises API object.\n\t */\n\tjsonld.promises = function(options) {\n\t  options = options || {};\n\t  var slice = Array.prototype.slice;\n\t  var promisify = jsonld.promisify;\n\t\n\t  // handle 'api' option as version, set defaults\n\t  var api = options.api || {};\n\t  var version = options.version || 'jsonld.js';\n\t  if(typeof options.api === 'string') {\n\t    if(!options.version) {\n\t      version = options.api;\n\t    }\n\t    api = {};\n\t  }\n\t\n\t  api.expand = function(input) {\n\t    if(arguments.length < 1) {\n\t      throw new TypeError('Could not expand, too few arguments.');\n\t    }\n\t    return promisify.apply(null, [jsonld.expand].concat(slice.call(arguments)));\n\t  };\n\t  api.compact = function(input, ctx) {\n\t    if(arguments.length < 2) {\n\t      throw new TypeError('Could not compact, too few arguments.');\n\t    }\n\t    var compact = function(input, ctx, options, callback) {\n\t      // ensure only one value is returned in callback\n\t      jsonld.compact(input, ctx, options, function(err, compacted) {\n\t        callback(err, compacted);\n\t      });\n\t    };\n\t    return promisify.apply(null, [compact].concat(slice.call(arguments)));\n\t  };\n\t  api.flatten = function(input) {\n\t    if(arguments.length < 1) {\n\t      throw new TypeError('Could not flatten, too few arguments.');\n\t    }\n\t    return promisify.apply(\n\t      null, [jsonld.flatten].concat(slice.call(arguments)));\n\t  };\n\t  api.frame = function(input, frame) {\n\t    if(arguments.length < 2) {\n\t      throw new TypeError('Could not frame, too few arguments.');\n\t    }\n\t    return promisify.apply(null, [jsonld.frame].concat(slice.call(arguments)));\n\t  };\n\t  api.fromRDF = function(dataset) {\n\t    if(arguments.length < 1) {\n\t      throw new TypeError('Could not convert from RDF, too few arguments.');\n\t    }\n\t    return promisify.apply(\n\t      null, [jsonld.fromRDF].concat(slice.call(arguments)));\n\t  };\n\t  api.toRDF = function(input) {\n\t    if(arguments.length < 1) {\n\t      throw new TypeError('Could not convert to RDF, too few arguments.');\n\t    }\n\t    return promisify.apply(null, [jsonld.toRDF].concat(slice.call(arguments)));\n\t  };\n\t  api.normalize = function(input) {\n\t    if(arguments.length < 1) {\n\t      throw new TypeError('Could not normalize, too few arguments.');\n\t    }\n\t    return promisify.apply(\n\t      null, [jsonld.normalize].concat(slice.call(arguments)));\n\t  };\n\t\n\t  if(version === 'jsonld.js') {\n\t    api.link = function(input, ctx) {\n\t      if(arguments.length < 2) {\n\t        throw new TypeError('Could not link, too few arguments.');\n\t      }\n\t      return promisify.apply(\n\t        null, [jsonld.link].concat(slice.call(arguments)));\n\t    };\n\t    api.objectify = function(input) {\n\t      return promisify.apply(\n\t        null, [jsonld.objectify].concat(slice.call(arguments)));\n\t    };\n\t    api.createNodeMap = function(input) {\n\t      return promisify.apply(\n\t        null, [jsonld.createNodeMap].concat(slice.call(arguments)));\n\t    };\n\t    api.merge = function(input) {\n\t      return promisify.apply(\n\t        null, [jsonld.merge].concat(slice.call(arguments)));\n\t    };\n\t  }\n\t\n\t  try {\n\t    jsonld.Promise = global.Promise || __webpack_require__(28).Promise;\n\t  } catch(e) {\n\t    var f = function() {\n\t      throw new Error('Unable to find a Promise implementation.');\n\t    };\n\t    for(var method in api) {\n\t      api[method] = f;\n\t    }\n\t  }\n\t\n\t  return api;\n\t};\n\t\n\t/**\n\t * Converts a node.js async op into a promise w/boxed resolved value(s).\n\t *\n\t * @param op the operation to convert.\n\t *\n\t * @return the promise.\n\t */\n\tjsonld.promisify = function(op) {\n\t  if(!jsonld.Promise) {\n\t    try {\n\t      jsonld.Promise = global.Promise || __webpack_require__(28).Promise;\n\t    } catch(e) {\n\t      throw new Error('Unable to find a Promise implementation.');\n\t    }\n\t  }\n\t  var args = Array.prototype.slice.call(arguments, 1);\n\t  return new jsonld.Promise(function(resolve, reject) {\n\t    op.apply(null, args.concat(function(err, value) {\n\t      if(!err) {\n\t        resolve(value);\n\t      } else {\n\t        reject(err);\n\t      }\n\t    }));\n\t  });\n\t};\n\t\n\t// extend jsonld.promises w/jsonld.js methods\n\tjsonld.promises({api: jsonld.promises});\n\t\n\t/* WebIDL API */\n\t\n\tfunction JsonLdProcessor() {}\n\tJsonLdProcessor.prototype = jsonld.promises({version: 'json-ld-1.0'});\n\tJsonLdProcessor.prototype.toString = function() {\n\t  if(this instanceof JsonLdProcessor) {\n\t    return '[object JsonLdProcessor]';\n\t  }\n\t  return '[object JsonLdProcessorPrototype]';\n\t};\n\tjsonld.JsonLdProcessor = JsonLdProcessor;\n\t\n\t// IE8 has Object.defineProperty but it only\n\t// works on DOM nodes -- so feature detection\n\t// requires try/catch :-(\n\tvar canDefineProperty = !!Object.defineProperty;\n\tif(canDefineProperty) {\n\t  try {\n\t    Object.defineProperty({}, 'x', {});\n\t  } catch(e) {\n\t    canDefineProperty = false;\n\t  }\n\t}\n\t\n\tif(canDefineProperty) {\n\t  Object.defineProperty(JsonLdProcessor, 'prototype', {\n\t    writable: false,\n\t    enumerable: false\n\t  });\n\t  Object.defineProperty(JsonLdProcessor.prototype, 'constructor', {\n\t    writable: true,\n\t    enumerable: false,\n\t    configurable: true,\n\t    value: JsonLdProcessor\n\t  });\n\t}\n\t\n\t// setup browser global JsonLdProcessor\n\tif(_browser && typeof global.JsonLdProcessor === 'undefined') {\n\t  if(canDefineProperty) {\n\t    Object.defineProperty(global, 'JsonLdProcessor', {\n\t      writable: true,\n\t      enumerable: false,\n\t      configurable: true,\n\t      value: JsonLdProcessor\n\t    });\n\t  } else {\n\t    global.JsonLdProcessor = JsonLdProcessor;\n\t  }\n\t}\n\t\n\t/* Utility API */\n\t\n\t// define setImmediate and nextTick\n\t//// nextTick implementation with browser-compatible fallback ////\n\t// from https://github.com/caolan/async/blob/master/lib/async.js\n\t\n\t// capture the global reference to guard against fakeTimer mocks\n\tvar _setImmediate = typeof setImmediate === 'function' && setImmediate;\n\t\n\tvar _delay = _setImmediate ? function(fn) {\n\t  // not a direct alias (for IE10 compatibility)\n\t  _setImmediate(fn);\n\t} : function(fn) {\n\t  setTimeout(fn, 0);\n\t};\n\t\n\tif(typeof process === 'object' && typeof process.nextTick === 'function') {\n\t  jsonld.nextTick = process.nextTick;\n\t} else {\n\t  jsonld.nextTick = _delay;\n\t}\n\tjsonld.setImmediate = _setImmediate ? _delay : jsonld.nextTick;\n\t\n\t/**\n\t * Parses a link header. The results will be key'd by the value of \"rel\".\n\t *\n\t * Link: <http://json-ld.org/contexts/person.jsonld>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"\n\t *\n\t * Parses as: {\n\t *   'http://www.w3.org/ns/json-ld#context': {\n\t *     target: http://json-ld.org/contexts/person.jsonld,\n\t *     type: 'application/ld+json'\n\t *   }\n\t * }\n\t *\n\t * If there is more than one \"rel\" with the same IRI, then entries in the\n\t * resulting map for that \"rel\" will be arrays.\n\t *\n\t * @param header the link header to parse.\n\t */\n\tjsonld.parseLinkHeader = function(header) {\n\t  var rval = {};\n\t  // split on unbracketed/unquoted commas\n\t  var entries = header.match(/(?:<[^>]*?>|\"[^\"]*?\"|[^,])+/g);\n\t  var rLinkHeader = /\\s*<([^>]*?)>\\s*(?:;\\s*(.*))?/;\n\t  for(var i = 0; i < entries.length; ++i) {\n\t    var match = entries[i].match(rLinkHeader);\n\t    if(!match) {\n\t      continue;\n\t    }\n\t    var result = {target: match[1]};\n\t    var params = match[2];\n\t    var rParams = /(.*?)=(?:(?:\"([^\"]*?)\")|([^\"]*?))\\s*(?:(?:;\\s*)|$)/g;\n\t    while(match = rParams.exec(params)) {\n\t      result[match[1]] = (match[2] === undefined) ? match[3] : match[2];\n\t    }\n\t    var rel = result['rel'] || '';\n\t    if(_isArray(rval[rel])) {\n\t      rval[rel].push(result);\n\t    } else if(rel in rval) {\n\t      rval[rel] = [rval[rel], result];\n\t    } else {\n\t      rval[rel] = result;\n\t    }\n\t  }\n\t  return rval;\n\t};\n\t\n\t/**\n\t * Creates a simple queue for requesting documents.\n\t */\n\tjsonld.RequestQueue = function() {\n\t  this._requests = {};\n\t};\n\tjsonld.RequestQueue.prototype.wrapLoader = function(loader) {\n\t  this._loader = loader;\n\t  this._usePromise = (loader.length === 1);\n\t  return this.add.bind(this);\n\t};\n\tjsonld.RequestQueue.prototype.add = function(url, callback) {\n\t  var self = this;\n\t\n\t  // callback must be given if not using promises\n\t  if(!callback && !self._usePromise) {\n\t    throw new Error('callback must be specified.');\n\t  }\n\t\n\t  // Promise-based API\n\t  if(self._usePromise) {\n\t    return new jsonld.Promise(function(resolve, reject) {\n\t      var load = self._requests[url];\n\t      if(!load) {\n\t        // load URL then remove from queue\n\t        load = self._requests[url] = self._loader(url)\n\t          .then(function(remoteDoc) {\n\t            delete self._requests[url];\n\t            return remoteDoc;\n\t          }).catch(function(err) {\n\t            delete self._requests[url];\n\t            throw err;\n\t          });\n\t      }\n\t      // resolve/reject promise once URL has been loaded\n\t      load.then(function(remoteDoc) {\n\t        resolve(remoteDoc);\n\t      }).catch(function(err) {\n\t        reject(err);\n\t      });\n\t    });\n\t  }\n\t\n\t  // callback-based API\n\t  if(url in self._requests) {\n\t    self._requests[url].push(callback);\n\t  } else {\n\t    self._requests[url] = [callback];\n\t    self._loader(url, function(err, remoteDoc) {\n\t      var callbacks = self._requests[url];\n\t      delete self._requests[url];\n\t      for(var i = 0; i < callbacks.length; ++i) {\n\t        callbacks[i](err, remoteDoc);\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * Creates a simple document cache that retains documents for a short\n\t * period of time.\n\t *\n\t * FIXME: Implement simple HTTP caching instead.\n\t *\n\t * @param size the maximum size of the cache.\n\t */\n\tjsonld.DocumentCache = function(size) {\n\t  this.order = [];\n\t  this.cache = {};\n\t  this.size = size || 50;\n\t  this.expires = 30 * 1000;\n\t};\n\tjsonld.DocumentCache.prototype.get = function(url) {\n\t  if(url in this.cache) {\n\t    var entry = this.cache[url];\n\t    if(entry.expires >= +new Date()) {\n\t      return entry.ctx;\n\t    }\n\t    delete this.cache[url];\n\t    this.order.splice(this.order.indexOf(url), 1);\n\t  }\n\t  return null;\n\t};\n\tjsonld.DocumentCache.prototype.set = function(url, ctx) {\n\t  if(this.order.length === this.size) {\n\t    delete this.cache[this.order.shift()];\n\t  }\n\t  this.order.push(url);\n\t  this.cache[url] = {ctx: ctx, expires: (+new Date() + this.expires)};\n\t};\n\t\n\t/**\n\t * Creates an active context cache.\n\t *\n\t * @param size the maximum size of the cache.\n\t */\n\tjsonld.ActiveContextCache = function(size) {\n\t  this.order = [];\n\t  this.cache = {};\n\t  this.size = size || 100;\n\t};\n\tjsonld.ActiveContextCache.prototype.get = function(activeCtx, localCtx) {\n\t  var key1 = JSON.stringify(activeCtx);\n\t  var key2 = JSON.stringify(localCtx);\n\t  var level1 = this.cache[key1];\n\t  if(level1 && key2 in level1) {\n\t    return level1[key2];\n\t  }\n\t  return null;\n\t};\n\tjsonld.ActiveContextCache.prototype.set = function(\n\t  activeCtx, localCtx, result) {\n\t  if(this.order.length === this.size) {\n\t    var entry = this.order.shift();\n\t    delete this.cache[entry.activeCtx][entry.localCtx];\n\t  }\n\t  var key1 = JSON.stringify(activeCtx);\n\t  var key2 = JSON.stringify(localCtx);\n\t  this.order.push({activeCtx: key1, localCtx: key2});\n\t  if(!(key1 in this.cache)) {\n\t    this.cache[key1] = {};\n\t  }\n\t  this.cache[key1][key2] = _clone(result);\n\t};\n\t\n\t/**\n\t * Default JSON-LD cache.\n\t */\n\tjsonld.cache = {\n\t  activeCtx: new jsonld.ActiveContextCache()\n\t};\n\t\n\t/**\n\t * Document loaders.\n\t */\n\tjsonld.documentLoaders = {};\n\t\n\t/**\n\t * Creates a built-in jquery document loader.\n\t *\n\t * @param $ the jquery instance to use.\n\t * @param options the options to use:\n\t *          secure: require all URLs to use HTTPS.\n\t *          usePromise: true to use a promises API, false for a\n\t *            callback-continuation-style API; defaults to true if Promise\n\t *            is globally defined, false if not.\n\t *\n\t * @return the jquery document loader.\n\t */\n\tjsonld.documentLoaders.jquery = function($, options) {\n\t  options = options || {};\n\t  var queue = new jsonld.RequestQueue();\n\t\n\t  // use option or, by default, use Promise when its defined\n\t  var usePromise = ('usePromise' in options ?\n\t    options.usePromise : (typeof Promise !== 'undefined'));\n\t  if(usePromise) {\n\t    return queue.wrapLoader(function(url) {\n\t      return jsonld.promisify(loader, url);\n\t    });\n\t  }\n\t  return queue.wrapLoader(loader);\n\t\n\t  function loader(url, callback) {\n\t    if(url.indexOf('http:') !== 0 && url.indexOf('https:') !== 0) {\n\t      return callback(new JsonLdError(\n\t        'URL could not be dereferenced; only \"http\" and \"https\" URLs are ' +\n\t        'supported.',\n\t        'jsonld.InvalidUrl', {code: 'loading document failed', url: url}),\n\t        {contextUrl: null, documentUrl: url, document: null});\n\t    }\n\t    if(options.secure && url.indexOf('https') !== 0) {\n\t      return callback(new JsonLdError(\n\t        'URL could not be dereferenced; secure mode is enabled and ' +\n\t        'the URL\\'s scheme is not \"https\".',\n\t        'jsonld.InvalidUrl', {code: 'loading document failed', url: url}),\n\t        {contextUrl: null, documentUrl: url, document: null});\n\t    }\n\t    $.ajax({\n\t      url: url,\n\t      accepts: {\n\t        json: 'application/ld+json, application/json'\n\t      },\n\t      // ensure Accept header is very specific for JSON-LD/JSON\n\t      headers: {\n\t        'Accept': 'application/ld+json, application/json'\n\t      },\n\t      dataType: 'json',\n\t      crossDomain: true,\n\t      success: function(data, textStatus, jqXHR) {\n\t        var doc = {contextUrl: null, documentUrl: url, document: data};\n\t\n\t        // handle Link Header\n\t        var contentType = jqXHR.getResponseHeader('Content-Type');\n\t        var linkHeader = jqXHR.getResponseHeader('Link');\n\t        if(linkHeader && contentType !== 'application/ld+json') {\n\t          // only 1 related link header permitted\n\t          linkHeader = jsonld.parseLinkHeader(linkHeader)[LINK_HEADER_REL];\n\t          if(_isArray(linkHeader)) {\n\t            return callback(new JsonLdError(\n\t              'URL could not be dereferenced, it has more than one ' +\n\t              'associated HTTP Link Header.',\n\t              'jsonld.InvalidUrl',\n\t              {code: 'multiple context link headers', url: url}), doc);\n\t          }\n\t          if(linkHeader) {\n\t            doc.contextUrl = linkHeader.target;\n\t          }\n\t        }\n\t\n\t        callback(null, doc);\n\t      },\n\t      error: function(jqXHR, textStatus, err) {\n\t        callback(new JsonLdError(\n\t          'URL could not be dereferenced, an error occurred.',\n\t          'jsonld.LoadDocumentError',\n\t          {code: 'loading document failed', url: url, cause: err}),\n\t          {contextUrl: null, documentUrl: url, document: null});\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * Creates a built-in node document loader.\n\t *\n\t * @param options the options to use:\n\t *          secure: require all URLs to use HTTPS.\n\t *          strictSSL: true to require SSL certificates to be valid,\n\t *            false not to (default: true).\n\t *          maxRedirects: the maximum number of redirects to permit, none by\n\t *            default.\n\t *          request: the object which will make the request, default is\n\t *            provided by `https://www.npmjs.com/package/request`.\n\t *          headers: an array of headers which will be passed as request\n\t *            headers for the requested document. Accept is not allowed.\n\t *          usePromise: true to use a promises API, false for a\n\t *            callback-continuation-style API; false by default.\n\t *\n\t * @return the node document loader.\n\t */\n\tjsonld.documentLoaders.node = function(options) {\n\t  options = options || {};\n\t  var strictSSL = ('strictSSL' in options) ? options.strictSSL : true;\n\t  var maxRedirects = ('maxRedirects' in options) ? options.maxRedirects : -1;\n\t  var request = ('request' in options) ? options.request : __webpack_require__(31);\n\t  var acceptHeader = 'application/ld+json, application/json';\n\t  var http = __webpack_require__(31);\n\t  // TODO: disable cache until HTTP caching implemented\n\t  //var cache = new jsonld.DocumentCache();\n\t\n\t  var queue = new jsonld.RequestQueue();\n\t  if(options.usePromise) {\n\t    return queue.wrapLoader(function(url) {\n\t      return jsonld.promisify(loadDocument, url, []);\n\t    });\n\t  }\n\t  var headers = options.headers || {};\n\t  if('Accept' in headers || 'accept' in headers) {\n\t    throw new RangeError(\n\t      'Accept header may not be specified as an option; only \"' +\n\t      acceptHeader + '\" is supported.');\n\t  }\n\t  return queue.wrapLoader(function(url, callback) {\n\t    loadDocument(url, [], callback);\n\t  });\n\t\n\t  function loadDocument(url, redirects, callback) {\n\t    if(url.indexOf('http:') !== 0 && url.indexOf('https:') !== 0) {\n\t      return callback(new JsonLdError(\n\t        'URL could not be dereferenced; only \"http\" and \"https\" URLs are ' +\n\t        'supported.',\n\t        'jsonld.InvalidUrl', {code: 'loading document failed', url: url}),\n\t        {contextUrl: null, documentUrl: url, document: null});\n\t    }\n\t    if(options.secure && url.indexOf('https') !== 0) {\n\t      return callback(new JsonLdError(\n\t        'URL could not be dereferenced; secure mode is enabled and ' +\n\t        'the URL\\'s scheme is not \"https\".',\n\t        'jsonld.InvalidUrl', {code: 'loading document failed', url: url}),\n\t        {contextUrl: null, documentUrl: url, document: null});\n\t    }\n\t    // TODO: disable cache until HTTP caching implemented\n\t    var doc = null;//cache.get(url);\n\t    if(doc !== null) {\n\t      return callback(null, doc);\n\t    }\n\t    var headers = {'Accept': acceptHeader};\n\t    for(var k in options.headers) { headers[k] = options.headers[k]; }\n\t    request({\n\t      url: url,\n\t      headers: headers,\n\t      strictSSL: strictSSL,\n\t      followRedirect: false\n\t    }, handleResponse);\n\t\n\t    function handleResponse(err, res, body) {\n\t      doc = {contextUrl: null, documentUrl: url, document: body || null};\n\t\n\t      // handle error\n\t      if(err) {\n\t        return callback(new JsonLdError(\n\t          'URL could not be dereferenced, an error occurred.',\n\t          'jsonld.LoadDocumentError',\n\t          {code: 'loading document failed', url: url, cause: err}), doc);\n\t      }\n\t      var statusText = http.STATUS_CODES[res.statusCode];\n\t      if(res.statusCode >= 400) {\n\t        return callback(new JsonLdError(\n\t          'URL could not be dereferenced: ' + statusText,\n\t          'jsonld.InvalidUrl', {\n\t            code: 'loading document failed',\n\t            url: url,\n\t            httpStatusCode: res.statusCode\n\t          }), doc);\n\t      }\n\t\n\t      // handle Link Header\n\t      if(res.headers.link &&\n\t        res.headers['content-type'] !== 'application/ld+json') {\n\t        // only 1 related link header permitted\n\t        var linkHeader = jsonld.parseLinkHeader(\n\t          res.headers.link)[LINK_HEADER_REL];\n\t        if(_isArray(linkHeader)) {\n\t          return callback(new JsonLdError(\n\t            'URL could not be dereferenced, it has more than one associated ' +\n\t            'HTTP Link Header.',\n\t            'jsonld.InvalidUrl',\n\t            {code: 'multiple context link headers', url: url}), doc);\n\t        }\n\t        if(linkHeader) {\n\t          doc.contextUrl = linkHeader.target;\n\t        }\n\t      }\n\t\n\t      // handle redirect\n\t      if(res.statusCode >= 300 && res.statusCode < 400 &&\n\t        res.headers.location) {\n\t        if(redirects.length === maxRedirects) {\n\t          return callback(new JsonLdError(\n\t            'URL could not be dereferenced; there were too many redirects.',\n\t            'jsonld.TooManyRedirects', {\n\t              code: 'loading document failed',\n\t              url: url,\n\t              httpStatusCode: res.statusCode,\n\t              redirects: redirects\n\t            }), doc);\n\t        }\n\t        if(redirects.indexOf(url) !== -1) {\n\t          return callback(new JsonLdError(\n\t            'URL could not be dereferenced; infinite redirection was detected.',\n\t            'jsonld.InfiniteRedirectDetected', {\n\t              code: 'recursive context inclusion',\n\t              url: url,\n\t              httpStatusCode: res.statusCode,\n\t              redirects: redirects\n\t            }), doc);\n\t        }\n\t        redirects.push(url);\n\t        return loadDocument(res.headers.location, redirects, callback);\n\t      }\n\t      // cache for each redirected URL\n\t      redirects.push(url);\n\t      // TODO: disable cache until HTTP caching implemented\n\t      /*for(var i = 0; i < redirects.length; ++i) {\n\t        cache.set(\n\t          redirects[i],\n\t          {contextUrl: null, documentUrl: redirects[i], document: body});\n\t      }*/\n\t      callback(err, doc);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Creates a built-in XMLHttpRequest document loader.\n\t *\n\t * @param options the options to use:\n\t *          secure: require all URLs to use HTTPS.\n\t *          usePromise: true to use a promises API, false for a\n\t *            callback-continuation-style API; defaults to true if Promise\n\t *            is globally defined, false if not.\n\t *          [xhr]: the XMLHttpRequest API to use.\n\t *\n\t * @return the XMLHttpRequest document loader.\n\t */\n\tjsonld.documentLoaders.xhr = function(options) {\n\t  options = options || {};\n\t  var rlink = /(^|(\\r\\n))link:/i;\n\t  var queue = new jsonld.RequestQueue();\n\t\n\t  // use option or, by default, use Promise when its defined\n\t  var usePromise = ('usePromise' in options ?\n\t    options.usePromise : (typeof Promise !== 'undefined'));\n\t  if(usePromise) {\n\t    return queue.wrapLoader(function(url) {\n\t      return jsonld.promisify(loader, url);\n\t    });\n\t  }\n\t  return queue.wrapLoader(loader);\n\t\n\t  function loader(url, callback) {\n\t    if(url.indexOf('http:') !== 0 && url.indexOf('https:') !== 0) {\n\t      return callback(new JsonLdError(\n\t        'URL could not be dereferenced; only \"http\" and \"https\" URLs are ' +\n\t        'supported.',\n\t        'jsonld.InvalidUrl', {code: 'loading document failed', url: url}),\n\t        {contextUrl: null, documentUrl: url, document: null});\n\t    }\n\t    if(options.secure && url.indexOf('https') !== 0) {\n\t      return callback(new JsonLdError(\n\t        'URL could not be dereferenced; secure mode is enabled and ' +\n\t        'the URL\\'s scheme is not \"https\".',\n\t        'jsonld.InvalidUrl', {code: 'loading document failed', url: url}),\n\t        {contextUrl: null, documentUrl: url, document: null});\n\t    }\n\t    var xhr = options.xhr || XMLHttpRequest;\n\t    var req = new xhr();\n\t    req.onload = function() {\n\t      if(req.status >= 400) {\n\t        return callback(new JsonLdError(\n\t          'URL could not be dereferenced: ' + req.statusText,\n\t          'jsonld.LoadDocumentError', {\n\t            code: 'loading document failed',\n\t            url: url,\n\t            httpStatusCode: req.status\n\t          }), {contextUrl: null, documentUrl: url, document: null});\n\t      }\n\t\n\t      var doc = {contextUrl: null, documentUrl: url, document: req.response};\n\t\n\t      // handle Link Header (avoid unsafe header warning by existence testing)\n\t      var contentType = req.getResponseHeader('Content-Type');\n\t      var linkHeader;\n\t      if(rlink.test(req.getAllResponseHeaders())) {\n\t        linkHeader = req.getResponseHeader('Link');\n\t      }\n\t      if(linkHeader && contentType !== 'application/ld+json') {\n\t        // only 1 related link header permitted\n\t        linkHeader = jsonld.parseLinkHeader(linkHeader)[LINK_HEADER_REL];\n\t        if(_isArray(linkHeader)) {\n\t          return callback(new JsonLdError(\n\t            'URL could not be dereferenced, it has more than one ' +\n\t            'associated HTTP Link Header.',\n\t            'jsonld.InvalidUrl',\n\t            {code: 'multiple context link headers', url: url}), doc);\n\t        }\n\t        if(linkHeader) {\n\t          doc.contextUrl = linkHeader.target;\n\t        }\n\t      }\n\t\n\t      callback(null, doc);\n\t    };\n\t    req.onerror = function() {\n\t      callback(new JsonLdError(\n\t        'URL could not be dereferenced, an error occurred.',\n\t        'jsonld.LoadDocumentError',\n\t        {code: 'loading document failed', url: url}),\n\t        {contextUrl: null, documentUrl: url, document: null});\n\t    };\n\t    req.open('GET', url, true);\n\t    req.setRequestHeader('Accept', 'application/ld+json, application/json');\n\t    req.send();\n\t  }\n\t};\n\t\n\t/**\n\t * Assigns the default document loader for external document URLs to a built-in\n\t * default. Supported types currently include: 'jquery' and 'node'.\n\t *\n\t * To use the jquery document loader, the first parameter must be a reference\n\t * to the main jquery object.\n\t *\n\t * @param type the type to set.\n\t * @param [params] the parameters required to use the document loader.\n\t */\n\tjsonld.useDocumentLoader = function(type) {\n\t  if(!(type in jsonld.documentLoaders)) {\n\t    throw new JsonLdError(\n\t      'Unknown document loader type: \"' + type + '\"',\n\t      'jsonld.UnknownDocumentLoader',\n\t      {type: type});\n\t  }\n\t\n\t  // set document loader\n\t  jsonld.documentLoader = jsonld.documentLoaders[type].apply(\n\t    jsonld, Array.prototype.slice.call(arguments, 1));\n\t};\n\t\n\t/**\n\t * Processes a local context, resolving any URLs as necessary, and returns a\n\t * new active context in its callback.\n\t *\n\t * @param activeCtx the current active context.\n\t * @param localCtx the local context to process.\n\t * @param [options] the options to use:\n\t *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n\t * @param callback(err, ctx) called once the operation completes.\n\t */\n\tjsonld.processContext = function(activeCtx, localCtx) {\n\t  // get arguments\n\t  var options = {};\n\t  var callbackArg = 2;\n\t  if(arguments.length > 3) {\n\t    options = arguments[2] || {};\n\t    callbackArg += 1;\n\t  }\n\t  var callback = arguments[callbackArg];\n\t\n\t  // set default options\n\t  if(!('base' in options)) {\n\t    options.base = '';\n\t  }\n\t  if(!('documentLoader' in options)) {\n\t    options.documentLoader = jsonld.loadDocument;\n\t  }\n\t\n\t  // return initial context early for null context\n\t  if(localCtx === null) {\n\t    return callback(null, _getInitialContext(options));\n\t  }\n\t\n\t  // retrieve URLs in localCtx\n\t  localCtx = _clone(localCtx);\n\t  if(!(_isObject(localCtx) && '@context' in localCtx)) {\n\t    localCtx = {'@context': localCtx};\n\t  }\n\t  _retrieveContextUrls(localCtx, options, function(err, ctx) {\n\t    if(err) {\n\t      return callback(err);\n\t    }\n\t    try {\n\t      // process context\n\t      ctx = new Processor().processContext(activeCtx, ctx, options);\n\t    } catch(ex) {\n\t      return callback(ex);\n\t    }\n\t    callback(null, ctx);\n\t  });\n\t};\n\t\n\t/**\n\t * Returns true if the given subject has the given property.\n\t *\n\t * @param subject the subject to check.\n\t * @param property the property to look for.\n\t *\n\t * @return true if the subject has the given property, false if not.\n\t */\n\tjsonld.hasProperty = function(subject, property) {\n\t  var rval = false;\n\t  if(property in subject) {\n\t    var value = subject[property];\n\t    rval = (!_isArray(value) || value.length > 0);\n\t  }\n\t  return rval;\n\t};\n\t\n\t/**\n\t * Determines if the given value is a property of the given subject.\n\t *\n\t * @param subject the subject to check.\n\t * @param property the property to check.\n\t * @param value the value to check.\n\t *\n\t * @return true if the value exists, false if not.\n\t */\n\tjsonld.hasValue = function(subject, property, value) {\n\t  var rval = false;\n\t  if(jsonld.hasProperty(subject, property)) {\n\t    var val = subject[property];\n\t    var isList = _isList(val);\n\t    if(_isArray(val) || isList) {\n\t      if(isList) {\n\t        val = val['@list'];\n\t      }\n\t      for(var i = 0; i < val.length; ++i) {\n\t        if(jsonld.compareValues(value, val[i])) {\n\t          rval = true;\n\t          break;\n\t        }\n\t      }\n\t    } else if(!_isArray(value)) {\n\t      // avoid matching the set of values with an array value parameter\n\t      rval = jsonld.compareValues(value, val);\n\t    }\n\t  }\n\t  return rval;\n\t};\n\t\n\t/**\n\t * Adds a value to a subject. If the value is an array, all values in the\n\t * array will be added.\n\t *\n\t * @param subject the subject to add the value to.\n\t * @param property the property that relates the value to the subject.\n\t * @param value the value to add.\n\t * @param [options] the options to use:\n\t *        [propertyIsArray] true if the property is always an array, false\n\t *          if not (default: false).\n\t *        [allowDuplicate] true to allow duplicates, false not to (uses a\n\t *          simple shallow comparison of subject ID or value) (default: true).\n\t */\n\tjsonld.addValue = function(subject, property, value, options) {\n\t  options = options || {};\n\t  if(!('propertyIsArray' in options)) {\n\t    options.propertyIsArray = false;\n\t  }\n\t  if(!('allowDuplicate' in options)) {\n\t    options.allowDuplicate = true;\n\t  }\n\t\n\t  if(_isArray(value)) {\n\t    if(value.length === 0 && options.propertyIsArray &&\n\t      !(property in subject)) {\n\t      subject[property] = [];\n\t    }\n\t    for(var i = 0; i < value.length; ++i) {\n\t      jsonld.addValue(subject, property, value[i], options);\n\t    }\n\t  } else if(property in subject) {\n\t    // check if subject already has value if duplicates not allowed\n\t    var hasValue = (!options.allowDuplicate &&\n\t      jsonld.hasValue(subject, property, value));\n\t\n\t    // make property an array if value not present or always an array\n\t    if(!_isArray(subject[property]) &&\n\t      (!hasValue || options.propertyIsArray)) {\n\t      subject[property] = [subject[property]];\n\t    }\n\t\n\t    // add new value\n\t    if(!hasValue) {\n\t      subject[property].push(value);\n\t    }\n\t  } else {\n\t    // add new value as set or single value\n\t    subject[property] = options.propertyIsArray ? [value] : value;\n\t  }\n\t};\n\t\n\t/**\n\t * Gets all of the values for a subject's property as an array.\n\t *\n\t * @param subject the subject.\n\t * @param property the property.\n\t *\n\t * @return all of the values for a subject's property as an array.\n\t */\n\tjsonld.getValues = function(subject, property) {\n\t  var rval = subject[property] || [];\n\t  if(!_isArray(rval)) {\n\t    rval = [rval];\n\t  }\n\t  return rval;\n\t};\n\t\n\t/**\n\t * Removes a property from a subject.\n\t *\n\t * @param subject the subject.\n\t * @param property the property.\n\t */\n\tjsonld.removeProperty = function(subject, property) {\n\t  delete subject[property];\n\t};\n\t\n\t/**\n\t * Removes a value from a subject.\n\t *\n\t * @param subject the subject.\n\t * @param property the property that relates the value to the subject.\n\t * @param value the value to remove.\n\t * @param [options] the options to use:\n\t *          [propertyIsArray] true if the property is always an array, false\n\t *            if not (default: false).\n\t */\n\tjsonld.removeValue = function(subject, property, value, options) {\n\t  options = options || {};\n\t  if(!('propertyIsArray' in options)) {\n\t    options.propertyIsArray = false;\n\t  }\n\t\n\t  // filter out value\n\t  var values = jsonld.getValues(subject, property).filter(function(e) {\n\t    return !jsonld.compareValues(e, value);\n\t  });\n\t\n\t  if(values.length === 0) {\n\t    jsonld.removeProperty(subject, property);\n\t  } else if(values.length === 1 && !options.propertyIsArray) {\n\t    subject[property] = values[0];\n\t  } else {\n\t    subject[property] = values;\n\t  }\n\t};\n\t\n\t/**\n\t * Compares two JSON-LD values for equality. Two JSON-LD values will be\n\t * considered equal if:\n\t *\n\t * 1. They are both primitives of the same type and value.\n\t * 2. They are both @values with the same @value, @type, @language,\n\t *   and @index, OR\n\t * 3. They both have @ids they are the same.\n\t *\n\t * @param v1 the first value.\n\t * @param v2 the second value.\n\t *\n\t * @return true if v1 and v2 are considered equal, false if not.\n\t */\n\tjsonld.compareValues = function(v1, v2) {\n\t  // 1. equal primitives\n\t  if(v1 === v2) {\n\t    return true;\n\t  }\n\t\n\t  // 2. equal @values\n\t  if(_isValue(v1) && _isValue(v2) &&\n\t    v1['@value'] === v2['@value'] &&\n\t    v1['@type'] === v2['@type'] &&\n\t    v1['@language'] === v2['@language'] &&\n\t    v1['@index'] === v2['@index']) {\n\t    return true;\n\t  }\n\t\n\t  // 3. equal @ids\n\t  if(_isObject(v1) && ('@id' in v1) && _isObject(v2) && ('@id' in v2)) {\n\t    return v1['@id'] === v2['@id'];\n\t  }\n\t\n\t  return false;\n\t};\n\t\n\t/**\n\t * Gets the value for the given active context key and type, null if none is\n\t * set.\n\t *\n\t * @param ctx the active context.\n\t * @param key the context key.\n\t * @param [type] the type of value to get (eg: '@id', '@type'), if not\n\t *          specified gets the entire entry for a key, null if not found.\n\t *\n\t * @return the value.\n\t */\n\tjsonld.getContextValue = function(ctx, key, type) {\n\t  var rval = null;\n\t\n\t  // return null for invalid key\n\t  if(key === null) {\n\t    return rval;\n\t  }\n\t\n\t  // get default language\n\t  if(type === '@language' && (type in ctx)) {\n\t    rval = ctx[type];\n\t  }\n\t\n\t  // get specific entry information\n\t  if(ctx.mappings[key]) {\n\t    var entry = ctx.mappings[key];\n\t\n\t    if(_isUndefined(type)) {\n\t      // return whole entry\n\t      rval = entry;\n\t    } else if(type in entry) {\n\t      // return entry value for type\n\t      rval = entry[type];\n\t    }\n\t  }\n\t\n\t  return rval;\n\t};\n\t\n\t/** Registered RDF dataset parsers hashed by content-type. */\n\tvar _rdfParsers = {};\n\t\n\t/**\n\t * Registers an RDF dataset parser by content-type, for use with\n\t * jsonld.fromRDF. An RDF dataset parser will always be given two parameters,\n\t * a string of input and a callback. An RDF dataset parser can be synchronous\n\t * or asynchronous.\n\t *\n\t * If the parser function returns undefined or null then it will be assumed to\n\t * be asynchronous w/a continuation-passing style and the callback parameter\n\t * given to the parser MUST be invoked.\n\t *\n\t * If it returns a Promise, then it will be assumed to be asynchronous, but the\n\t * callback parameter MUST NOT be invoked. It should instead be ignored.\n\t *\n\t * If it returns an RDF dataset, it will be assumed to be synchronous and the\n\t * callback parameter MUST NOT be invoked. It should instead be ignored.\n\t *\n\t * @param contentType the content-type for the parser.\n\t * @param parser(input, callback(err, dataset)) the parser function (takes a\n\t *          string as a parameter and either returns null/undefined and uses\n\t *          the given callback, returns a Promise, or returns an RDF dataset).\n\t */\n\tjsonld.registerRDFParser = function(contentType, parser) {\n\t  _rdfParsers[contentType] = parser;\n\t};\n\t\n\t/**\n\t * Unregisters an RDF dataset parser by content-type.\n\t *\n\t * @param contentType the content-type for the parser.\n\t */\n\tjsonld.unregisterRDFParser = function(contentType) {\n\t  delete _rdfParsers[contentType];\n\t};\n\t\n\tif(_nodejs) {\n\t  // needed for serialization of XML literals\n\t  if(typeof XMLSerializer === 'undefined') {\n\t    var XMLSerializer = null;\n\t  }\n\t  if(typeof Node === 'undefined') {\n\t    var Node = {\n\t      ELEMENT_NODE: 1,\n\t      ATTRIBUTE_NODE: 2,\n\t      TEXT_NODE: 3,\n\t      CDATA_SECTION_NODE: 4,\n\t      ENTITY_REFERENCE_NODE: 5,\n\t      ENTITY_NODE: 6,\n\t      PROCESSING_INSTRUCTION_NODE: 7,\n\t      COMMENT_NODE: 8,\n\t      DOCUMENT_NODE: 9,\n\t      DOCUMENT_TYPE_NODE: 10,\n\t      DOCUMENT_FRAGMENT_NODE: 11,\n\t      NOTATION_NODE:12\n\t    };\n\t  }\n\t}\n\t\n\t// constants\n\tvar XSD_BOOLEAN = 'http://www.w3.org/2001/XMLSchema#boolean';\n\tvar XSD_DOUBLE = 'http://www.w3.org/2001/XMLSchema#double';\n\tvar XSD_INTEGER = 'http://www.w3.org/2001/XMLSchema#integer';\n\tvar XSD_STRING = 'http://www.w3.org/2001/XMLSchema#string';\n\t\n\tvar RDF = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#';\n\tvar RDF_LIST = RDF + 'List';\n\tvar RDF_FIRST = RDF + 'first';\n\tvar RDF_REST = RDF + 'rest';\n\tvar RDF_NIL = RDF + 'nil';\n\tvar RDF_TYPE = RDF + 'type';\n\tvar RDF_PLAIN_LITERAL = RDF + 'PlainLiteral';\n\tvar RDF_XML_LITERAL = RDF + 'XMLLiteral';\n\tvar RDF_OBJECT = RDF + 'object';\n\tvar RDF_LANGSTRING = RDF + 'langString';\n\t\n\tvar LINK_HEADER_REL = 'http://www.w3.org/ns/json-ld#context';\n\tvar MAX_CONTEXT_URLS = 10;\n\t\n\t/**\n\t * A JSON-LD Error.\n\t *\n\t * @param msg the error message.\n\t * @param type the error type.\n\t * @param details the error details.\n\t */\n\tvar JsonLdError = function(msg, type, details) {\n\t  if(_nodejs) {\n\t    Error.call(this);\n\t    Error.captureStackTrace(this, this.constructor);\n\t  } else if(typeof Error !== 'undefined') {\n\t    this.stack = (new Error()).stack;\n\t  }\n\t  this.name = type || 'jsonld.Error';\n\t  this.message = msg || 'An unspecified JSON-LD error occurred.';\n\t  this.details = details || {};\n\t};\n\tif(_nodejs) {\n\t  __webpack_require__(31).inherits(JsonLdError, Error);\n\t} else if(typeof Error !== 'undefined') {\n\t  JsonLdError.prototype = new Error();\n\t}\n\t\n\t/**\n\t * Constructs a new JSON-LD Processor.\n\t */\n\tvar Processor = function() {};\n\t\n\t/**\n\t * Recursively compacts an element using the given active context. All values\n\t * must be in expanded form before this method is called.\n\t *\n\t * @param activeCtx the active context to use.\n\t * @param activeProperty the compacted property associated with the element\n\t *          to compact, null for none.\n\t * @param element the element to compact.\n\t * @param options the compaction options.\n\t *\n\t * @return the compacted value.\n\t */\n\tProcessor.prototype.compact = function(\n\t  activeCtx, activeProperty, element, options) {\n\t  // recursively compact array\n\t  if(_isArray(element)) {\n\t    var rval = [];\n\t    for(var i = 0; i < element.length; ++i) {\n\t      // compact, dropping any null values\n\t      var compacted = this.compact(\n\t        activeCtx, activeProperty, element[i], options);\n\t      if(compacted !== null) {\n\t        rval.push(compacted);\n\t      }\n\t    }\n\t    if(options.compactArrays && rval.length === 1) {\n\t      // use single element if no container is specified\n\t      var container = jsonld.getContextValue(\n\t        activeCtx, activeProperty, '@container');\n\t      if(container === null) {\n\t        rval = rval[0];\n\t      }\n\t    }\n\t    return rval;\n\t  }\n\t\n\t  // recursively compact object\n\t  if(_isObject(element)) {\n\t    if(options.link && '@id' in element && element['@id'] in options.link) {\n\t      // check for a linked element to reuse\n\t      var linked = options.link[element['@id']];\n\t      for(var i = 0; i < linked.length; ++i) {\n\t        if(linked[i].expanded === element) {\n\t          return linked[i].compacted;\n\t        }\n\t      }\n\t    }\n\t\n\t    // do value compaction on @values and subject references\n\t    if(_isValue(element) || _isSubjectReference(element)) {\n\t      var rval = _compactValue(activeCtx, activeProperty, element);\n\t      if(options.link && _isSubjectReference(element)) {\n\t        // store linked element\n\t        if(!(element['@id'] in options.link)) {\n\t          options.link[element['@id']] = [];\n\t        }\n\t        options.link[element['@id']].push({expanded: element, compacted: rval});\n\t      }\n\t      return rval;\n\t    }\n\t\n\t    // FIXME: avoid misuse of active property as an expanded property?\n\t    var insideReverse = (activeProperty === '@reverse');\n\t\n\t    var rval = {};\n\t\n\t    if(options.link && '@id' in element) {\n\t      // store linked element\n\t      if(!(element['@id'] in options.link)) {\n\t        options.link[element['@id']] = [];\n\t      }\n\t      options.link[element['@id']].push({expanded: element, compacted: rval});\n\t    }\n\t\n\t    // process element keys in order\n\t    var keys = Object.keys(element).sort();\n\t    for(var ki = 0; ki < keys.length; ++ki) {\n\t      var expandedProperty = keys[ki];\n\t      var expandedValue = element[expandedProperty];\n\t\n\t      // compact @id and @type(s)\n\t      if(expandedProperty === '@id' || expandedProperty === '@type') {\n\t        var compactedValue;\n\t\n\t        // compact single @id\n\t        if(_isString(expandedValue)) {\n\t          compactedValue = _compactIri(\n\t            activeCtx, expandedValue, null,\n\t            {vocab: (expandedProperty === '@type')});\n\t        } else {\n\t          // expanded value must be a @type array\n\t          compactedValue = [];\n\t          for(var vi = 0; vi < expandedValue.length; ++vi) {\n\t            compactedValue.push(_compactIri(\n\t              activeCtx, expandedValue[vi], null, {vocab: true}));\n\t          }\n\t        }\n\t\n\t        // use keyword alias and add value\n\t        var alias = _compactIri(activeCtx, expandedProperty);\n\t        var isArray = (_isArray(compactedValue) && expandedValue.length === 0);\n\t        jsonld.addValue(\n\t          rval, alias, compactedValue, {propertyIsArray: isArray});\n\t        continue;\n\t      }\n\t\n\t      // handle @reverse\n\t      if(expandedProperty === '@reverse') {\n\t        // recursively compact expanded value\n\t        var compactedValue = this.compact(\n\t          activeCtx, '@reverse', expandedValue, options);\n\t\n\t        // handle double-reversed properties\n\t        for(var compactedProperty in compactedValue) {\n\t          if(activeCtx.mappings[compactedProperty] &&\n\t            activeCtx.mappings[compactedProperty].reverse) {\n\t            var value = compactedValue[compactedProperty];\n\t            var container = jsonld.getContextValue(\n\t              activeCtx, compactedProperty, '@container');\n\t            var useArray = (container === '@set' || !options.compactArrays);\n\t            jsonld.addValue(\n\t              rval, compactedProperty, value, {propertyIsArray: useArray});\n\t            delete compactedValue[compactedProperty];\n\t          }\n\t        }\n\t\n\t        if(Object.keys(compactedValue).length > 0) {\n\t          // use keyword alias and add value\n\t          var alias = _compactIri(activeCtx, expandedProperty);\n\t          jsonld.addValue(rval, alias, compactedValue);\n\t        }\n\t\n\t        continue;\n\t      }\n\t\n\t      // handle @index property\n\t      if(expandedProperty === '@index') {\n\t        // drop @index if inside an @index container\n\t        var container = jsonld.getContextValue(\n\t          activeCtx, activeProperty, '@container');\n\t        if(container === '@index') {\n\t          continue;\n\t        }\n\t\n\t        // use keyword alias and add value\n\t        var alias = _compactIri(activeCtx, expandedProperty);\n\t        jsonld.addValue(rval, alias, expandedValue);\n\t        continue;\n\t      }\n\t\n\t      // skip array processing for keywords that aren't @graph or @list\n\t      if(expandedProperty !== '@graph' && expandedProperty !== '@list' &&\n\t        _isKeyword(expandedProperty)) {\n\t        // use keyword alias and add value as is\n\t        var alias = _compactIri(activeCtx, expandedProperty);\n\t        jsonld.addValue(rval, alias, expandedValue);\n\t        continue;\n\t      }\n\t\n\t      // Note: expanded value must be an array due to expansion algorithm.\n\t\n\t      // preserve empty arrays\n\t      if(expandedValue.length === 0) {\n\t        var itemActiveProperty = _compactIri(\n\t          activeCtx, expandedProperty, expandedValue, {vocab: true},\n\t          insideReverse);\n\t        jsonld.addValue(\n\t          rval, itemActiveProperty, expandedValue, {propertyIsArray: true});\n\t      }\n\t\n\t      // recusively process array values\n\t      for(var vi = 0; vi < expandedValue.length; ++vi) {\n\t        var expandedItem = expandedValue[vi];\n\t\n\t        // compact property and get container type\n\t        var itemActiveProperty = _compactIri(\n\t          activeCtx, expandedProperty, expandedItem, {vocab: true},\n\t          insideReverse);\n\t        var container = jsonld.getContextValue(\n\t          activeCtx, itemActiveProperty, '@container');\n\t\n\t        // get @list value if appropriate\n\t        var isList = _isList(expandedItem);\n\t        var list = null;\n\t        if(isList) {\n\t          list = expandedItem['@list'];\n\t        }\n\t\n\t        // recursively compact expanded item\n\t        var compactedItem = this.compact(\n\t          activeCtx, itemActiveProperty, isList ? list : expandedItem, options);\n\t\n\t        // handle @list\n\t        if(isList) {\n\t          // ensure @list value is an array\n\t          if(!_isArray(compactedItem)) {\n\t            compactedItem = [compactedItem];\n\t          }\n\t\n\t          if(container !== '@list') {\n\t            // wrap using @list alias\n\t            var wrapper = {};\n\t            wrapper[_compactIri(activeCtx, '@list')] = compactedItem;\n\t            compactedItem = wrapper;\n\t\n\t            // include @index from expanded @list, if any\n\t            if('@index' in expandedItem) {\n\t              compactedItem[_compactIri(activeCtx, '@index')] =\n\t                expandedItem['@index'];\n\t            }\n\t          } else if(itemActiveProperty in rval) {\n\t            // can't use @list container for more than 1 list\n\t            throw new JsonLdError(\n\t              'JSON-LD compact error; property has a \"@list\" @container ' +\n\t              'rule but there is more than a single @list that matches ' +\n\t              'the compacted term in the document. Compaction might mix ' +\n\t              'unwanted items into the list.',\n\t              'jsonld.SyntaxError', {code: 'compaction to list of lists'});\n\t          }\n\t        }\n\t\n\t        // handle language and index maps\n\t        if(container === '@language' || container === '@index') {\n\t          // get or create the map object\n\t          var mapObject;\n\t          if(itemActiveProperty in rval) {\n\t            mapObject = rval[itemActiveProperty];\n\t          } else {\n\t            rval[itemActiveProperty] = mapObject = {};\n\t          }\n\t\n\t          // if container is a language map, simplify compacted value to\n\t          // a simple string\n\t          if(container === '@language' && _isValue(compactedItem)) {\n\t            compactedItem = compactedItem['@value'];\n\t          }\n\t\n\t          // add compact value to map object using key from expanded value\n\t          // based on the container type\n\t          jsonld.addValue(mapObject, expandedItem[container], compactedItem);\n\t        } else {\n\t          // use an array if: compactArrays flag is false,\n\t          // @container is @set or @list , value is an empty\n\t          // array, or key is @graph\n\t          var isArray = (!options.compactArrays || container === '@set' ||\n\t            container === '@list' ||\n\t            (_isArray(compactedItem) && compactedItem.length === 0) ||\n\t            expandedProperty === '@list' || expandedProperty === '@graph');\n\t\n\t          // add compact value\n\t          jsonld.addValue(\n\t            rval, itemActiveProperty, compactedItem,\n\t            {propertyIsArray: isArray});\n\t        }\n\t      }\n\t    }\n\t\n\t    return rval;\n\t  }\n\t\n\t  // only primitives remain which are already compact\n\t  return element;\n\t};\n\t\n\t/**\n\t * Recursively expands an element using the given context. Any context in\n\t * the element will be removed. All context URLs must have been retrieved\n\t * before calling this method.\n\t *\n\t * @param activeCtx the context to use.\n\t * @param activeProperty the property for the element, null for none.\n\t * @param element the element to expand.\n\t * @param options the expansion options.\n\t * @param insideList true if the element is a list, false if not.\n\t *\n\t * @return the expanded value.\n\t */\n\tProcessor.prototype.expand = function(\n\t  activeCtx, activeProperty, element, options, insideList) {\n\t  var self = this;\n\t\n\t  // nothing to expand\n\t  if(element === null || element === undefined) {\n\t    return null;\n\t  }\n\t\n\t  if(!_isArray(element) && !_isObject(element)) {\n\t    // drop free-floating scalars that are not in lists\n\t    if(!insideList && (activeProperty === null ||\n\t      _expandIri(activeCtx, activeProperty, {vocab: true}) === '@graph')) {\n\t      return null;\n\t    }\n\t\n\t    // expand element according to value expansion rules\n\t    return _expandValue(activeCtx, activeProperty, element);\n\t  }\n\t\n\t  // recursively expand array\n\t  if(_isArray(element)) {\n\t    var rval = [];\n\t    var container = jsonld.getContextValue(\n\t      activeCtx, activeProperty, '@container');\n\t    insideList = insideList || container === '@list';\n\t    for(var i = 0; i < element.length; ++i) {\n\t      // expand element\n\t      var e = self.expand(activeCtx, activeProperty, element[i], options);\n\t      if(insideList && (_isArray(e) || _isList(e))) {\n\t        // lists of lists are illegal\n\t        throw new JsonLdError(\n\t          'Invalid JSON-LD syntax; lists of lists are not permitted.',\n\t          'jsonld.SyntaxError', {code: 'list of lists'});\n\t      }\n\t      // drop null values\n\t      if(e !== null) {\n\t        if(_isArray(e)) {\n\t          rval = rval.concat(e);\n\t        } else {\n\t          rval.push(e);\n\t        }\n\t      }\n\t    }\n\t    return rval;\n\t  }\n\t\n\t  // recursively expand object:\n\t\n\t  // if element has a context, process it\n\t  if('@context' in element) {\n\t    activeCtx = self.processContext(activeCtx, element['@context'], options);\n\t  }\n\t\n\t  // expand the active property\n\t  var expandedActiveProperty = _expandIri(\n\t    activeCtx, activeProperty, {vocab: true});\n\t\n\t  var rval = {};\n\t  var keys = Object.keys(element).sort();\n\t  for(var ki = 0; ki < keys.length; ++ki) {\n\t    var key = keys[ki];\n\t    var value = element[key];\n\t    var expandedValue;\n\t\n\t    // skip @context\n\t    if(key === '@context') {\n\t      continue;\n\t    }\n\t\n\t    // expand property\n\t    var expandedProperty = _expandIri(activeCtx, key, {vocab: true});\n\t\n\t    // drop non-absolute IRI keys that aren't keywords\n\t    if(expandedProperty === null ||\n\t      !(_isAbsoluteIri(expandedProperty) || _isKeyword(expandedProperty))) {\n\t      continue;\n\t    }\n\t\n\t    if(_isKeyword(expandedProperty)) {\n\t      if(expandedActiveProperty === '@reverse') {\n\t        throw new JsonLdError(\n\t          'Invalid JSON-LD syntax; a keyword cannot be used as a @reverse ' +\n\t          'property.', 'jsonld.SyntaxError',\n\t          {code: 'invalid reverse property map', value: value});\n\t      }\n\t      if(expandedProperty in rval) {\n\t        throw new JsonLdError(\n\t          'Invalid JSON-LD syntax; colliding keywords detected.',\n\t          'jsonld.SyntaxError',\n\t          {code: 'colliding keywords', keyword: expandedProperty});\n\t      }\n\t    }\n\t\n\t    // syntax error if @id is not a string\n\t    if(expandedProperty === '@id' && !_isString(value)) {\n\t      if(!options.isFrame) {\n\t        throw new JsonLdError(\n\t          'Invalid JSON-LD syntax; \"@id\" value must a string.',\n\t          'jsonld.SyntaxError', {code: 'invalid @id value', value: value});\n\t      }\n\t      if(!_isObject(value)) {\n\t        throw new JsonLdError(\n\t          'Invalid JSON-LD syntax; \"@id\" value must be a string or an ' +\n\t          'object.', 'jsonld.SyntaxError',\n\t          {code: 'invalid @id value', value: value});\n\t      }\n\t    }\n\t\n\t    if(expandedProperty === '@type') {\n\t      _validateTypeValue(value);\n\t    }\n\t\n\t    // @graph must be an array or an object\n\t    if(expandedProperty === '@graph' &&\n\t      !(_isObject(value) || _isArray(value))) {\n\t      throw new JsonLdError(\n\t        'Invalid JSON-LD syntax; \"@graph\" value must not be an ' +\n\t        'object or an array.',\n\t        'jsonld.SyntaxError', {code: 'invalid @graph value', value: value});\n\t    }\n\t\n\t    // @value must not be an object or an array\n\t    if(expandedProperty === '@value' &&\n\t      (_isObject(value) || _isArray(value))) {\n\t      throw new JsonLdError(\n\t        'Invalid JSON-LD syntax; \"@value\" value must not be an ' +\n\t        'object or an array.',\n\t        'jsonld.SyntaxError',\n\t        {code: 'invalid value object value', value: value});\n\t    }\n\t\n\t    // @language must be a string\n\t    if(expandedProperty === '@language') {\n\t      if(value === null) {\n\t        // drop null @language values, they expand as if they didn't exist\n\t        continue;\n\t      }\n\t      if(!_isString(value)) {\n\t        throw new JsonLdError(\n\t          'Invalid JSON-LD syntax; \"@language\" value must be a string.',\n\t          'jsonld.SyntaxError',\n\t          {code: 'invalid language-tagged string', value: value});\n\t      }\n\t      // ensure language value is lowercase\n\t      value = value.toLowerCase();\n\t    }\n\t\n\t    // @index must be a string\n\t    if(expandedProperty === '@index') {\n\t      if(!_isString(value)) {\n\t        throw new JsonLdError(\n\t          'Invalid JSON-LD syntax; \"@index\" value must be a string.',\n\t          'jsonld.SyntaxError',\n\t          {code: 'invalid @index value', value: value});\n\t      }\n\t    }\n\t\n\t    // @reverse must be an object\n\t    if(expandedProperty === '@reverse') {\n\t      if(!_isObject(value)) {\n\t        throw new JsonLdError(\n\t          'Invalid JSON-LD syntax; \"@reverse\" value must be an object.',\n\t          'jsonld.SyntaxError', {code: 'invalid @reverse value', value: value});\n\t      }\n\t\n\t      expandedValue = self.expand(activeCtx, '@reverse', value, options);\n\t\n\t      // properties double-reversed\n\t      if('@reverse' in expandedValue) {\n\t        for(var property in expandedValue['@reverse']) {\n\t          jsonld.addValue(\n\t            rval, property, expandedValue['@reverse'][property],\n\t            {propertyIsArray: true});\n\t        }\n\t      }\n\t\n\t      // FIXME: can this be merged with code below to simplify?\n\t      // merge in all reversed properties\n\t      var reverseMap = rval['@reverse'] || null;\n\t      for(var property in expandedValue) {\n\t        if(property === '@reverse') {\n\t          continue;\n\t        }\n\t        if(reverseMap === null) {\n\t          reverseMap = rval['@reverse'] = {};\n\t        }\n\t        jsonld.addValue(reverseMap, property, [], {propertyIsArray: true});\n\t        var items = expandedValue[property];\n\t        for(var ii = 0; ii < items.length; ++ii) {\n\t          var item = items[ii];\n\t          if(_isValue(item) || _isList(item)) {\n\t            throw new JsonLdError(\n\t              'Invalid JSON-LD syntax; \"@reverse\" value must not be a ' +\n\t              '@value or an @list.', 'jsonld.SyntaxError',\n\t              {code: 'invalid reverse property value', value: expandedValue});\n\t          }\n\t          jsonld.addValue(\n\t            reverseMap, property, item, {propertyIsArray: true});\n\t        }\n\t      }\n\t\n\t      continue;\n\t    }\n\t\n\t    var container = jsonld.getContextValue(activeCtx, key, '@container');\n\t\n\t    if(container === '@language' && _isObject(value)) {\n\t      // handle language map container (skip if value is not an object)\n\t      expandedValue = _expandLanguageMap(value);\n\t    } else if(container === '@index' && _isObject(value)) {\n\t      // handle index container (skip if value is not an object)\n\t      expandedValue = (function _expandIndexMap(activeProperty) {\n\t        var rval = [];\n\t        var keys = Object.keys(value).sort();\n\t        for(var ki = 0; ki < keys.length; ++ki) {\n\t          var key = keys[ki];\n\t          var val = value[key];\n\t          if(!_isArray(val)) {\n\t            val = [val];\n\t          }\n\t          val = self.expand(activeCtx, activeProperty, val, options, false);\n\t          for(var vi = 0; vi < val.length; ++vi) {\n\t            var item = val[vi];\n\t            if(!('@index' in item)) {\n\t              item['@index'] = key;\n\t            }\n\t            rval.push(item);\n\t          }\n\t        }\n\t        return rval;\n\t      })(key);\n\t    } else {\n\t      // recurse into @list or @set\n\t      var isList = (expandedProperty === '@list');\n\t      if(isList || expandedProperty === '@set') {\n\t        var nextActiveProperty = activeProperty;\n\t        if(isList && expandedActiveProperty === '@graph') {\n\t          nextActiveProperty = null;\n\t        }\n\t        expandedValue = self.expand(\n\t          activeCtx, nextActiveProperty, value, options, isList);\n\t        if(isList && _isList(expandedValue)) {\n\t          throw new JsonLdError(\n\t            'Invalid JSON-LD syntax; lists of lists are not permitted.',\n\t            'jsonld.SyntaxError', {code: 'list of lists'});\n\t        }\n\t      } else {\n\t        // recursively expand value with key as new active property\n\t        expandedValue = self.expand(activeCtx, key, value, options, false);\n\t      }\n\t    }\n\t\n\t    // drop null values if property is not @value\n\t    if(expandedValue === null && expandedProperty !== '@value') {\n\t      continue;\n\t    }\n\t\n\t    // convert expanded value to @list if container specifies it\n\t    if(expandedProperty !== '@list' && !_isList(expandedValue) &&\n\t      container === '@list') {\n\t      // ensure expanded value is an array\n\t      expandedValue = (_isArray(expandedValue) ?\n\t        expandedValue : [expandedValue]);\n\t      expandedValue = {'@list': expandedValue};\n\t    }\n\t\n\t    // FIXME: can this be merged with code above to simplify?\n\t    // merge in reverse properties\n\t    if(activeCtx.mappings[key] && activeCtx.mappings[key].reverse) {\n\t      var reverseMap = rval['@reverse'] = rval['@reverse'] || {};\n\t      if(!_isArray(expandedValue)) {\n\t        expandedValue = [expandedValue];\n\t      }\n\t      for(var ii = 0; ii < expandedValue.length; ++ii) {\n\t        var item = expandedValue[ii];\n\t        if(_isValue(item) || _isList(item)) {\n\t          throw new JsonLdError(\n\t            'Invalid JSON-LD syntax; \"@reverse\" value must not be a ' +\n\t            '@value or an @list.', 'jsonld.SyntaxError',\n\t            {code: 'invalid reverse property value', value: expandedValue});\n\t        }\n\t        jsonld.addValue(\n\t          reverseMap, expandedProperty, item, {propertyIsArray: true});\n\t      }\n\t      continue;\n\t    }\n\t\n\t    // add value for property\n\t    // use an array except for certain keywords\n\t    var useArray =\n\t      ['@index', '@id', '@type', '@value', '@language'].indexOf(\n\t        expandedProperty) === -1;\n\t    jsonld.addValue(\n\t      rval, expandedProperty, expandedValue, {propertyIsArray: useArray});\n\t  }\n\t\n\t  // get property count on expanded output\n\t  keys = Object.keys(rval);\n\t  var count = keys.length;\n\t\n\t  if('@value' in rval) {\n\t    // @value must only have @language or @type\n\t    if('@type' in rval && '@language' in rval) {\n\t      throw new JsonLdError(\n\t        'Invalid JSON-LD syntax; an element containing \"@value\" may not ' +\n\t        'contain both \"@type\" and \"@language\".',\n\t        'jsonld.SyntaxError', {code: 'invalid value object', element: rval});\n\t    }\n\t    var validCount = count - 1;\n\t    if('@type' in rval) {\n\t      validCount -= 1;\n\t    }\n\t    if('@index' in rval) {\n\t      validCount -= 1;\n\t    }\n\t    if('@language' in rval) {\n\t      validCount -= 1;\n\t    }\n\t    if(validCount !== 0) {\n\t      throw new JsonLdError(\n\t        'Invalid JSON-LD syntax; an element containing \"@value\" may only ' +\n\t        'have an \"@index\" property and at most one other property ' +\n\t        'which can be \"@type\" or \"@language\".',\n\t        'jsonld.SyntaxError', {code: 'invalid value object', element: rval});\n\t    }\n\t    // drop null @values\n\t    if(rval['@value'] === null) {\n\t      rval = null;\n\t    } else if('@language' in rval && !_isString(rval['@value'])) {\n\t      // if @language is present, @value must be a string\n\t      throw new JsonLdError(\n\t        'Invalid JSON-LD syntax; only strings may be language-tagged.',\n\t        'jsonld.SyntaxError',\n\t        {code: 'invalid language-tagged value', element: rval});\n\t    } else if('@type' in rval && (!_isAbsoluteIri(rval['@type']) ||\n\t      rval['@type'].indexOf('_:') === 0)) {\n\t      throw new JsonLdError(\n\t        'Invalid JSON-LD syntax; an element containing \"@value\" and \"@type\" ' +\n\t        'must have an absolute IRI for the value of \"@type\".',\n\t        'jsonld.SyntaxError', {code: 'invalid typed value', element: rval});\n\t    }\n\t  } else if('@type' in rval && !_isArray(rval['@type'])) {\n\t    // convert @type to an array\n\t    rval['@type'] = [rval['@type']];\n\t  } else if('@set' in rval || '@list' in rval) {\n\t    // handle @set and @list\n\t    if(count > 1 && !(count === 2 && '@index' in rval)) {\n\t      throw new JsonLdError(\n\t        'Invalid JSON-LD syntax; if an element has the property \"@set\" ' +\n\t        'or \"@list\", then it can have at most one other property that is ' +\n\t        '\"@index\".', 'jsonld.SyntaxError',\n\t        {code: 'invalid set or list object', element: rval});\n\t    }\n\t    // optimize away @set\n\t    if('@set' in rval) {\n\t      rval = rval['@set'];\n\t      keys = Object.keys(rval);\n\t      count = keys.length;\n\t    }\n\t  } else if(count === 1 && '@language' in rval) {\n\t    // drop objects with only @language\n\t    rval = null;\n\t  }\n\t\n\t  // drop certain top-level objects that do not occur in lists\n\t  if(_isObject(rval) &&\n\t    !options.keepFreeFloatingNodes && !insideList &&\n\t    (activeProperty === null || expandedActiveProperty === '@graph')) {\n\t    // drop empty object, top-level @value/@list, or object with only @id\n\t    if(count === 0 || '@value' in rval || '@list' in rval ||\n\t      (count === 1 && '@id' in rval)) {\n\t      rval = null;\n\t    }\n\t  }\n\t\n\t  return rval;\n\t};\n\t\n\t/**\n\t * Creates a JSON-LD node map (node ID => node).\n\t *\n\t * @param input the expanded JSON-LD to create a node map of.\n\t * @param [options] the options to use:\n\t *          [issuer] a jsonld.IdentifierIssuer to use to label blank nodes.\n\t *          [namer] (deprecated).\n\t *\n\t * @return the node map.\n\t */\n\tProcessor.prototype.createNodeMap = function(input, options) {\n\t  options = options || {};\n\t\n\t  // produce a map of all subjects and name each bnode\n\t  var issuer = options.namer || options.issuer || new IdentifierIssuer('_:b');\n\t  var graphs = {'@default': {}};\n\t  _createNodeMap(input, graphs, '@default', issuer);\n\t\n\t  // add all non-default graphs to default graph\n\t  return _mergeNodeMaps(graphs);\n\t};\n\t\n\t/**\n\t * Performs JSON-LD flattening.\n\t *\n\t * @param input the expanded JSON-LD to flatten.\n\t *\n\t * @return the flattened output.\n\t */\n\tProcessor.prototype.flatten = function(input) {\n\t  var defaultGraph = this.createNodeMap(input);\n\t\n\t  // produce flattened output\n\t  var flattened = [];\n\t  var keys = Object.keys(defaultGraph).sort();\n\t  for(var ki = 0; ki < keys.length; ++ki) {\n\t    var node = defaultGraph[keys[ki]];\n\t    // only add full subjects to top-level\n\t    if(!_isSubjectReference(node)) {\n\t      flattened.push(node);\n\t    }\n\t  }\n\t  return flattened;\n\t};\n\t\n\t/**\n\t * Performs JSON-LD framing.\n\t *\n\t * @param input the expanded JSON-LD to frame.\n\t * @param frame the expanded JSON-LD frame to use.\n\t * @param options the framing options.\n\t *\n\t * @return the framed output.\n\t */\n\tProcessor.prototype.frame = function(input, frame, options) {\n\t  // create framing state\n\t  var state = {\n\t    options: options,\n\t    graphs: {'@default': {}, '@merged': {}},\n\t    subjectStack: [],\n\t    link: {}\n\t  };\n\t\n\t  // produce a map of all graphs and name each bnode\n\t  // FIXME: currently uses subjects from @merged graph only\n\t  var issuer = new IdentifierIssuer('_:b');\n\t  _createNodeMap(input, state.graphs, '@merged', issuer);\n\t  state.subjects = state.graphs['@merged'];\n\t\n\t  // frame the subjects\n\t  var framed = [];\n\t  _frame(state, Object.keys(state.subjects).sort(), frame, framed, null);\n\t  return framed;\n\t};\n\t\n\t/**\n\t * Performs normalization on the given RDF dataset.\n\t *\n\t * @param dataset the RDF dataset to normalize.\n\t * @param options the normalization options.\n\t * @param callback(err, normalized) called once the operation completes.\n\t */\n\tProcessor.prototype.normalize = function(dataset, options, callback) {\n\t  if(options.algorithm === 'URDNA2015') {\n\t    return new URDNA2015(options).main(dataset, callback);\n\t  }\n\t  if(options.algorithm === 'URGNA2012') {\n\t    return new URGNA2012(options).main(dataset, callback);\n\t  }\n\t  callback(new Error(\n\t    'Invalid RDF Dataset Normalization algorithm: ' + options.algorithm));\n\t};\n\t\n\t/**\n\t * Converts an RDF dataset to JSON-LD.\n\t *\n\t * @param dataset the RDF dataset.\n\t * @param options the RDF serialization options.\n\t * @param callback(err, output) called once the operation completes.\n\t */\n\tProcessor.prototype.fromRDF = function(dataset, options, callback) {\n\t  var defaultGraph = {};\n\t  var graphMap = {'@default': defaultGraph};\n\t  var referencedOnce = {};\n\t\n\t  for(var name in dataset) {\n\t    var graph = dataset[name];\n\t    if(!(name in graphMap)) {\n\t      graphMap[name] = {};\n\t    }\n\t    if(name !== '@default' && !(name in defaultGraph)) {\n\t      defaultGraph[name] = {'@id': name};\n\t    }\n\t    var nodeMap = graphMap[name];\n\t    for(var ti = 0; ti < graph.length; ++ti) {\n\t      var triple = graph[ti];\n\t\n\t      // get subject, predicate, object\n\t      var s = triple.subject.value;\n\t      var p = triple.predicate.value;\n\t      var o = triple.object;\n\t\n\t      if(!(s in nodeMap)) {\n\t        nodeMap[s] = {'@id': s};\n\t      }\n\t      var node = nodeMap[s];\n\t\n\t      var objectIsId = (o.type === 'IRI' || o.type === 'blank node');\n\t      if(objectIsId && !(o.value in nodeMap)) {\n\t        nodeMap[o.value] = {'@id': o.value};\n\t      }\n\t\n\t      if(p === RDF_TYPE && !options.useRdfType && objectIsId) {\n\t        jsonld.addValue(node, '@type', o.value, {propertyIsArray: true});\n\t        continue;\n\t      }\n\t\n\t      var value = _RDFToObject(o, options.useNativeTypes);\n\t      jsonld.addValue(node, p, value, {propertyIsArray: true});\n\t\n\t      // object may be an RDF list/partial list node but we can't know easily\n\t      // until all triples are read\n\t      if(objectIsId) {\n\t        if(o.value === RDF_NIL) {\n\t          // track rdf:nil uniquely per graph\n\t          var object = nodeMap[o.value];\n\t          if(!('usages' in object)) {\n\t            object.usages = [];\n\t          }\n\t          object.usages.push({\n\t            node: node,\n\t            property: p,\n\t            value: value\n\t          });\n\t        } else if(o.value in referencedOnce) {\n\t          // object referenced more than once\n\t          referencedOnce[o.value] = false;\n\t        } else {\n\t          // keep track of single reference\n\t          referencedOnce[o.value] = {\n\t            node: node,\n\t            property: p,\n\t            value: value\n\t          };\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  // convert linked lists to @list arrays\n\t  for(var name in graphMap) {\n\t    var graphObject = graphMap[name];\n\t\n\t    // no @lists to be converted, continue\n\t    if(!(RDF_NIL in graphObject)) {\n\t      continue;\n\t    }\n\t\n\t    // iterate backwards through each RDF list\n\t    var nil = graphObject[RDF_NIL];\n\t    for(var i = 0; i < nil.usages.length; ++i) {\n\t      var usage = nil.usages[i];\n\t      var node = usage.node;\n\t      var property = usage.property;\n\t      var head = usage.value;\n\t      var list = [];\n\t      var listNodes = [];\n\t\n\t      // ensure node is a well-formed list node; it must:\n\t      // 1. Be referenced only once.\n\t      // 2. Have an array for rdf:first that has 1 item.\n\t      // 3. Have an array for rdf:rest that has 1 item.\n\t      // 4. Have no keys other than: @id, rdf:first, rdf:rest, and,\n\t      //   optionally, @type where the value is rdf:List.\n\t      var nodeKeyCount = Object.keys(node).length;\n\t      while(property === RDF_REST &&\n\t        _isObject(referencedOnce[node['@id']]) &&\n\t        _isArray(node[RDF_FIRST]) && node[RDF_FIRST].length === 1 &&\n\t        _isArray(node[RDF_REST]) && node[RDF_REST].length === 1 &&\n\t        (nodeKeyCount === 3 || (nodeKeyCount === 4 && _isArray(node['@type']) &&\n\t          node['@type'].length === 1 && node['@type'][0] === RDF_LIST))) {\n\t        list.push(node[RDF_FIRST][0]);\n\t        listNodes.push(node['@id']);\n\t\n\t        // get next node, moving backwards through list\n\t        usage = referencedOnce[node['@id']];\n\t        node = usage.node;\n\t        property = usage.property;\n\t        head = usage.value;\n\t        nodeKeyCount = Object.keys(node).length;\n\t\n\t        // if node is not a blank node, then list head found\n\t        if(node['@id'].indexOf('_:') !== 0) {\n\t          break;\n\t        }\n\t      }\n\t\n\t      // the list is nested in another list\n\t      if(property === RDF_FIRST) {\n\t        // empty list\n\t        if(node['@id'] === RDF_NIL) {\n\t          // can't convert rdf:nil to a @list object because it would\n\t          // result in a list of lists which isn't supported\n\t          continue;\n\t        }\n\t\n\t        // preserve list head\n\t        head = graphObject[head['@id']][RDF_REST][0];\n\t        list.pop();\n\t        listNodes.pop();\n\t      }\n\t\n\t      // transform list into @list object\n\t      delete head['@id'];\n\t      head['@list'] = list.reverse();\n\t      for(var j = 0; j < listNodes.length; ++j) {\n\t        delete graphObject[listNodes[j]];\n\t      }\n\t    }\n\t\n\t    delete nil.usages;\n\t  }\n\t\n\t  var result = [];\n\t  var subjects = Object.keys(defaultGraph).sort();\n\t  for(var i = 0; i < subjects.length; ++i) {\n\t    var subject = subjects[i];\n\t    var node = defaultGraph[subject];\n\t    if(subject in graphMap) {\n\t      var graph = node['@graph'] = [];\n\t      var graphObject = graphMap[subject];\n\t      var subjects_ = Object.keys(graphObject).sort();\n\t      for(var si = 0; si < subjects_.length; ++si) {\n\t        var node_ = graphObject[subjects_[si]];\n\t        // only add full subjects to top-level\n\t        if(!_isSubjectReference(node_)) {\n\t          graph.push(node_);\n\t        }\n\t      }\n\t    }\n\t    // only add full subjects to top-level\n\t    if(!_isSubjectReference(node)) {\n\t      result.push(node);\n\t    }\n\t  }\n\t\n\t  callback(null, result);\n\t};\n\t\n\t/**\n\t * Outputs an RDF dataset for the expanded JSON-LD input.\n\t *\n\t * @param input the expanded JSON-LD input.\n\t * @param options the RDF serialization options.\n\t *\n\t * @return the RDF dataset.\n\t */\n\tProcessor.prototype.toRDF = function(input, options) {\n\t  // create node map for default graph (and any named graphs)\n\t  var issuer = new IdentifierIssuer('_:b');\n\t  var nodeMap = {'@default': {}};\n\t  _createNodeMap(input, nodeMap, '@default', issuer);\n\t\n\t  var dataset = {};\n\t  var graphNames = Object.keys(nodeMap).sort();\n\t  for(var i = 0; i < graphNames.length; ++i) {\n\t    var graphName = graphNames[i];\n\t    // skip relative IRIs\n\t    if(graphName === '@default' || _isAbsoluteIri(graphName)) {\n\t      dataset[graphName] = _graphToRDF(nodeMap[graphName], issuer, options);\n\t    }\n\t  }\n\t  return dataset;\n\t};\n\t\n\t/**\n\t * Processes a local context and returns a new active context.\n\t *\n\t * @param activeCtx the current active context.\n\t * @param localCtx the local context to process.\n\t * @param options the context processing options.\n\t *\n\t * @return the new active context.\n\t */\n\tProcessor.prototype.processContext = function(activeCtx, localCtx, options) {\n\t  // normalize local context to an array of @context objects\n\t  if(_isObject(localCtx) && '@context' in localCtx &&\n\t    _isArray(localCtx['@context'])) {\n\t    localCtx = localCtx['@context'];\n\t  }\n\t  var ctxs = _isArray(localCtx) ? localCtx : [localCtx];\n\t\n\t  // no contexts in array, clone existing context\n\t  if(ctxs.length === 0) {\n\t    return activeCtx.clone();\n\t  }\n\t\n\t  // process each context in order, update active context\n\t  // on each iteration to ensure proper caching\n\t  var rval = activeCtx;\n\t  for(var i = 0; i < ctxs.length; ++i) {\n\t    var ctx = ctxs[i];\n\t\n\t    // reset to initial context\n\t    if(ctx === null) {\n\t      rval = activeCtx = _getInitialContext(options);\n\t      continue;\n\t    }\n\t\n\t    // dereference @context key if present\n\t    if(_isObject(ctx) && '@context' in ctx) {\n\t      ctx = ctx['@context'];\n\t    }\n\t\n\t    // context must be an object by now, all URLs retrieved before this call\n\t    if(!_isObject(ctx)) {\n\t      throw new JsonLdError(\n\t        'Invalid JSON-LD syntax; @context must be an object.',\n\t        'jsonld.SyntaxError', {code: 'invalid local context', context: ctx});\n\t    }\n\t\n\t    // get context from cache if available\n\t    if(jsonld.cache.activeCtx) {\n\t      var cached = jsonld.cache.activeCtx.get(activeCtx, ctx);\n\t      if(cached) {\n\t        rval = activeCtx = cached;\n\t        continue;\n\t      }\n\t    }\n\t\n\t    // update active context and clone new one before updating\n\t    activeCtx = rval;\n\t    rval = rval.clone();\n\t\n\t    // define context mappings for keys in local context\n\t    var defined = {};\n\t\n\t    // handle @base\n\t    if('@base' in ctx) {\n\t      var base = ctx['@base'];\n\t\n\t      // clear base\n\t      if(base === null) {\n\t        base = null;\n\t      } else if(!_isString(base)) {\n\t        throw new JsonLdError(\n\t          'Invalid JSON-LD syntax; the value of \"@base\" in a ' +\n\t          '@context must be a string or null.',\n\t          'jsonld.SyntaxError', {code: 'invalid base IRI', context: ctx});\n\t      } else if(base !== '' && !_isAbsoluteIri(base)) {\n\t        throw new JsonLdError(\n\t          'Invalid JSON-LD syntax; the value of \"@base\" in a ' +\n\t          '@context must be an absolute IRI or the empty string.',\n\t          'jsonld.SyntaxError', {code: 'invalid base IRI', context: ctx});\n\t      }\n\t\n\t      if(base !== null) {\n\t        base = jsonld.url.parse(base || '');\n\t      }\n\t      rval['@base'] = base;\n\t      defined['@base'] = true;\n\t    }\n\t\n\t    // handle @vocab\n\t    if('@vocab' in ctx) {\n\t      var value = ctx['@vocab'];\n\t      if(value === null) {\n\t        delete rval['@vocab'];\n\t      } else if(!_isString(value)) {\n\t        throw new JsonLdError(\n\t          'Invalid JSON-LD syntax; the value of \"@vocab\" in a ' +\n\t          '@context must be a string or null.',\n\t          'jsonld.SyntaxError', {code: 'invalid vocab mapping', context: ctx});\n\t      } else if(!_isAbsoluteIri(value)) {\n\t        throw new JsonLdError(\n\t          'Invalid JSON-LD syntax; the value of \"@vocab\" in a ' +\n\t          '@context must be an absolute IRI.',\n\t          'jsonld.SyntaxError', {code: 'invalid vocab mapping', context: ctx});\n\t      } else {\n\t        rval['@vocab'] = value;\n\t      }\n\t      defined['@vocab'] = true;\n\t    }\n\t\n\t    // handle @language\n\t    if('@language' in ctx) {\n\t      var value = ctx['@language'];\n\t      if(value === null) {\n\t        delete rval['@language'];\n\t      } else if(!_isString(value)) {\n\t        throw new JsonLdError(\n\t          'Invalid JSON-LD syntax; the value of \"@language\" in a ' +\n\t          '@context must be a string or null.',\n\t          'jsonld.SyntaxError',\n\t          {code: 'invalid default language', context: ctx});\n\t      } else {\n\t        rval['@language'] = value.toLowerCase();\n\t      }\n\t      defined['@language'] = true;\n\t    }\n\t\n\t    // process all other keys\n\t    for(var key in ctx) {\n\t      _createTermDefinition(rval, ctx, key, defined);\n\t    }\n\t\n\t    // cache result\n\t    if(jsonld.cache.activeCtx) {\n\t      jsonld.cache.activeCtx.set(activeCtx, ctx, rval);\n\t    }\n\t  }\n\t\n\t  return rval;\n\t};\n\t\n\t/**\n\t * Expands a language map.\n\t *\n\t * @param languageMap the language map to expand.\n\t *\n\t * @return the expanded language map.\n\t */\n\tfunction _expandLanguageMap(languageMap) {\n\t  var rval = [];\n\t  var keys = Object.keys(languageMap).sort();\n\t  for(var ki = 0; ki < keys.length; ++ki) {\n\t    var key = keys[ki];\n\t    var val = languageMap[key];\n\t    if(!_isArray(val)) {\n\t      val = [val];\n\t    }\n\t    for(var vi = 0; vi < val.length; ++vi) {\n\t      var item = val[vi];\n\t      if(item === null) {\n\t          // null values are allowed (8.5) but ignored (3.1)\n\t          continue;\n\t      }\n\t      if(!_isString(item)) {\n\t        throw new JsonLdError(\n\t          'Invalid JSON-LD syntax; language map values must be strings.',\n\t          'jsonld.SyntaxError',\n\t          {code: 'invalid language map value', languageMap: languageMap});\n\t      }\n\t      rval.push({\n\t        '@value': item,\n\t        '@language': key.toLowerCase()\n\t      });\n\t    }\n\t  }\n\t  return rval;\n\t}\n\t\n\t/**\n\t * Labels the blank nodes in the given value using the given IdentifierIssuer.\n\t *\n\t * @param issuer the IdentifierIssuer to use.\n\t * @param element the element with blank nodes to rename.\n\t *\n\t * @return the element.\n\t */\n\tfunction _labelBlankNodes(issuer, element) {\n\t  if(_isArray(element)) {\n\t    for(var i = 0; i < element.length; ++i) {\n\t      element[i] = _labelBlankNodes(issuer, element[i]);\n\t    }\n\t  } else if(_isList(element)) {\n\t    element['@list'] = _labelBlankNodes(issuer, element['@list']);\n\t  } else if(_isObject(element)) {\n\t    // relabel blank node\n\t    if(_isBlankNode(element)) {\n\t      element['@id'] = issuer.getId(element['@id']);\n\t    }\n\t\n\t    // recursively apply to all keys\n\t    var keys = Object.keys(element).sort();\n\t    for(var ki = 0; ki < keys.length; ++ki) {\n\t      var key = keys[ki];\n\t      if(key !== '@id') {\n\t        element[key] = _labelBlankNodes(issuer, element[key]);\n\t      }\n\t    }\n\t  }\n\t\n\t  return element;\n\t}\n\t\n\t/**\n\t * Expands the given value by using the coercion and keyword rules in the\n\t * given context.\n\t *\n\t * @param activeCtx the active context to use.\n\t * @param activeProperty the active property the value is associated with.\n\t * @param value the value to expand.\n\t *\n\t * @return the expanded value.\n\t */\n\tfunction _expandValue(activeCtx, activeProperty, value) {\n\t  // nothing to expand\n\t  if(value === null || value === undefined) {\n\t    return null;\n\t  }\n\t\n\t  // special-case expand @id and @type (skips '@id' expansion)\n\t  var expandedProperty = _expandIri(activeCtx, activeProperty, {vocab: true});\n\t  if(expandedProperty === '@id') {\n\t    return _expandIri(activeCtx, value, {base: true});\n\t  } else if(expandedProperty === '@type') {\n\t    return _expandIri(activeCtx, value, {vocab: true, base: true});\n\t  }\n\t\n\t  // get type definition from context\n\t  var type = jsonld.getContextValue(activeCtx, activeProperty, '@type');\n\t\n\t  // do @id expansion (automatic for @graph)\n\t  if(type === '@id' || (expandedProperty === '@graph' && _isString(value))) {\n\t    return {'@id': _expandIri(activeCtx, value, {base: true})};\n\t  }\n\t  // do @id expansion w/vocab\n\t  if(type === '@vocab') {\n\t    return {'@id': _expandIri(activeCtx, value, {vocab: true, base: true})};\n\t  }\n\t\n\t  // do not expand keyword values\n\t  if(_isKeyword(expandedProperty)) {\n\t    return value;\n\t  }\n\t\n\t  var rval = {};\n\t\n\t  if(type !== null) {\n\t    // other type\n\t    rval['@type'] = type;\n\t  } else if(_isString(value)) {\n\t    // check for language tagging for strings\n\t    var language = jsonld.getContextValue(\n\t      activeCtx, activeProperty, '@language');\n\t    if(language !== null) {\n\t      rval['@language'] = language;\n\t    }\n\t  }\n\t  // do conversion of values that aren't basic JSON types to strings\n\t  if(['boolean', 'number', 'string'].indexOf(typeof value) === -1) {\n\t    value = value.toString();\n\t  }\n\t  rval['@value'] = value;\n\t\n\t  return rval;\n\t}\n\t\n\t/**\n\t * Creates an array of RDF triples for the given graph.\n\t *\n\t * @param graph the graph to create RDF triples for.\n\t * @param issuer a IdentifierIssuer for assigning blank node names.\n\t * @param options the RDF serialization options.\n\t *\n\t * @return the array of RDF triples for the given graph.\n\t */\n\tfunction _graphToRDF(graph, issuer, options) {\n\t  var rval = [];\n\t\n\t  var ids = Object.keys(graph).sort();\n\t  for(var i = 0; i < ids.length; ++i) {\n\t    var id = ids[i];\n\t    var node = graph[id];\n\t    var properties = Object.keys(node).sort();\n\t    for(var pi = 0; pi < properties.length; ++pi) {\n\t      var property = properties[pi];\n\t      var items = node[property];\n\t      if(property === '@type') {\n\t        property = RDF_TYPE;\n\t      } else if(_isKeyword(property)) {\n\t        continue;\n\t      }\n\t\n\t      for(var ii = 0; ii < items.length; ++ii) {\n\t        var item = items[ii];\n\t\n\t        // RDF subject\n\t        var subject = {};\n\t        subject.type = (id.indexOf('_:') === 0) ? 'blank node' : 'IRI';\n\t        subject.value = id;\n\t\n\t        // skip relative IRI subjects\n\t        if(!_isAbsoluteIri(id)) {\n\t          continue;\n\t        }\n\t\n\t        // RDF predicate\n\t        var predicate = {};\n\t        predicate.type = (property.indexOf('_:') === 0) ? 'blank node' : 'IRI';\n\t        predicate.value = property;\n\t\n\t        // skip relative IRI predicates\n\t        if(!_isAbsoluteIri(property)) {\n\t          continue;\n\t        }\n\t\n\t        // skip blank node predicates unless producing generalized RDF\n\t        if(predicate.type === 'blank node' && !options.produceGeneralizedRdf) {\n\t          continue;\n\t        }\n\t\n\t        // convert @list to triples\n\t        if(_isList(item)) {\n\t          _listToRDF(item['@list'], issuer, subject, predicate, rval);\n\t        } else {\n\t          // convert value or node object to triple\n\t          var object = _objectToRDF(item);\n\t          // skip null objects (they are relative IRIs)\n\t          if(object) {\n\t            rval.push({subject: subject, predicate: predicate, object: object});\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return rval;\n\t}\n\t\n\t/**\n\t * Converts a @list value into linked list of blank node RDF triples\n\t * (an RDF collection).\n\t *\n\t * @param list the @list value.\n\t * @param issuer a IdentifierIssuer for assigning blank node names.\n\t * @param subject the subject for the head of the list.\n\t * @param predicate the predicate for the head of the list.\n\t * @param triples the array of triples to append to.\n\t */\n\tfunction _listToRDF(list, issuer, subject, predicate, triples) {\n\t  var first = {type: 'IRI', value: RDF_FIRST};\n\t  var rest = {type: 'IRI', value: RDF_REST};\n\t  var nil = {type: 'IRI', value: RDF_NIL};\n\t\n\t  for(var i = 0; i < list.length; ++i) {\n\t    var item = list[i];\n\t\n\t    var blankNode = {type: 'blank node', value: issuer.getId()};\n\t    triples.push({subject: subject, predicate: predicate, object: blankNode});\n\t\n\t    subject = blankNode;\n\t    predicate = first;\n\t    var object = _objectToRDF(item);\n\t\n\t    // skip null objects (they are relative IRIs)\n\t    if(object) {\n\t      triples.push({subject: subject, predicate: predicate, object: object});\n\t    }\n\t\n\t    predicate = rest;\n\t  }\n\t\n\t  triples.push({subject: subject, predicate: predicate, object: nil});\n\t}\n\t\n\t/**\n\t * Converts a JSON-LD value object to an RDF literal or a JSON-LD string or\n\t * node object to an RDF resource.\n\t *\n\t * @param item the JSON-LD value or node object.\n\t *\n\t * @return the RDF literal or RDF resource.\n\t */\n\tfunction _objectToRDF(item) {\n\t  var object = {};\n\t\n\t  // convert value object to RDF\n\t  if(_isValue(item)) {\n\t    object.type = 'literal';\n\t    var value = item['@value'];\n\t    var datatype = item['@type'] || null;\n\t\n\t    // convert to XSD datatypes as appropriate\n\t    if(_isBoolean(value)) {\n\t      object.value = value.toString();\n\t      object.datatype = datatype || XSD_BOOLEAN;\n\t    } else if(_isDouble(value) || datatype === XSD_DOUBLE) {\n\t      if(!_isDouble(value)) {\n\t        value = parseFloat(value);\n\t      }\n\t      // canonical double representation\n\t      object.value = value.toExponential(15).replace(/(\\d)0*e\\+?/, '$1E');\n\t      object.datatype = datatype || XSD_DOUBLE;\n\t    } else if(_isNumber(value)) {\n\t      object.value = value.toFixed(0);\n\t      object.datatype = datatype || XSD_INTEGER;\n\t    } else if('@language' in item) {\n\t      object.value = value;\n\t      object.datatype = datatype || RDF_LANGSTRING;\n\t      object.language = item['@language'];\n\t    } else {\n\t      object.value = value;\n\t      object.datatype = datatype || XSD_STRING;\n\t    }\n\t  } else {\n\t    // convert string/node object to RDF\n\t    var id = _isObject(item) ? item['@id'] : item;\n\t    object.type = (id.indexOf('_:') === 0) ? 'blank node' : 'IRI';\n\t    object.value = id;\n\t  }\n\t\n\t  // skip relative IRIs\n\t  if(object.type === 'IRI' && !_isAbsoluteIri(object.value)) {\n\t    return null;\n\t  }\n\t\n\t  return object;\n\t}\n\t\n\t/**\n\t * Converts an RDF triple object to a JSON-LD object.\n\t *\n\t * @param o the RDF triple object to convert.\n\t * @param useNativeTypes true to output native types, false not to.\n\t *\n\t * @return the JSON-LD object.\n\t */\n\tfunction _RDFToObject(o, useNativeTypes) {\n\t  // convert IRI/blank node object to JSON-LD\n\t  if(o.type === 'IRI' || o.type === 'blank node') {\n\t    return {'@id': o.value};\n\t  }\n\t\n\t  // convert literal to JSON-LD\n\t  var rval = {'@value': o.value};\n\t\n\t  // add language\n\t  if(o.language) {\n\t    rval['@language'] = o.language;\n\t  } else {\n\t    var type = o.datatype;\n\t    if(!type) {\n\t      type = XSD_STRING;\n\t    }\n\t    // use native types for certain xsd types\n\t    if(useNativeTypes) {\n\t      if(type === XSD_BOOLEAN) {\n\t        if(rval['@value'] === 'true') {\n\t          rval['@value'] = true;\n\t        } else if(rval['@value'] === 'false') {\n\t          rval['@value'] = false;\n\t        }\n\t      } else if(_isNumeric(rval['@value'])) {\n\t        if(type === XSD_INTEGER) {\n\t          var i = parseInt(rval['@value'], 10);\n\t          if(i.toFixed(0) === rval['@value']) {\n\t            rval['@value'] = i;\n\t          }\n\t        } else if(type === XSD_DOUBLE) {\n\t          rval['@value'] = parseFloat(rval['@value']);\n\t        }\n\t      }\n\t      // do not add native type\n\t      if([XSD_BOOLEAN, XSD_INTEGER, XSD_DOUBLE, XSD_STRING]\n\t        .indexOf(type) === -1) {\n\t        rval['@type'] = type;\n\t      }\n\t    } else if(type !== XSD_STRING) {\n\t      rval['@type'] = type;\n\t    }\n\t  }\n\t\n\t  return rval;\n\t}\n\t\n\t/**\n\t * Compares two RDF triples for equality.\n\t *\n\t * @param t1 the first triple.\n\t * @param t2 the second triple.\n\t *\n\t * @return true if the triples are the same, false if not.\n\t */\n\tfunction _compareRDFTriples(t1, t2) {\n\t  var attrs = ['subject', 'predicate', 'object'];\n\t  for(var i = 0; i < attrs.length; ++i) {\n\t    var attr = attrs[i];\n\t    if(t1[attr].type !== t2[attr].type || t1[attr].value !== t2[attr].value) {\n\t      return false;\n\t    }\n\t  }\n\t  if(t1.object.language !== t2.object.language) {\n\t    return false;\n\t  }\n\t  if(t1.object.datatype !== t2.object.datatype) {\n\t    return false;\n\t  }\n\t  return true;\n\t}\n\t\n\t/////////////////////////////// DEFINE URDNA2015 //////////////////////////////\n\t\n\tvar URDNA2015 = (function() {\n\t\n\tvar POSITIONS = {'subject': 's', 'object': 'o', 'name': 'g'};\n\t\n\tvar Normalize = function(options) {\n\t  options = options || {};\n\t  this.name = 'URDNA2015';\n\t  this.options = options;\n\t  this.blankNodeInfo = {};\n\t  this.hashToBlankNodes = {};\n\t  this.canonicalIssuer = new IdentifierIssuer('_:c14n');\n\t  this.quads = [];\n\t  this.schedule = {};\n\t  if('maxCallStackDepth' in options) {\n\t    this.schedule.MAX_DEPTH = options.maxCallStackDepth;\n\t  } else {\n\t    this.schedule.MAX_DEPTH = 500;\n\t  }\n\t  if('maxTotalCallStackDepth' in options) {\n\t    this.schedule.MAX_TOTAL_DEPTH = options.maxCallStackDepth;\n\t  } else {\n\t    this.schedule.MAX_TOTAL_DEPTH = 0xFFFFFFFF;\n\t  }\n\t  this.schedule.depth = 0;\n\t  this.schedule.totalDepth = 0;\n\t  if('timeSlice' in options) {\n\t    this.schedule.timeSlice = options.timeSlice;\n\t  } else {\n\t    // milliseconds\n\t    this.schedule.timeSlice = 10;\n\t  }\n\t};\n\t\n\t// do some work in a time slice, but in serial\n\tNormalize.prototype.doWork = function(fn, callback) {\n\t  var schedule = this.schedule;\n\t\n\t  if(schedule.totalDepth >= schedule.MAX_TOTAL_DEPTH) {\n\t    return callback(new Error(\n\t      'Maximum total call stack depth exceeded; normalization aborting.'));\n\t  }\n\t\n\t  (function work() {\n\t    if(schedule.depth === schedule.MAX_DEPTH) {\n\t      // stack too deep, run on next tick\n\t      schedule.depth = 0;\n\t      schedule.running = false;\n\t      return jsonld.nextTick(work);\n\t    }\n\t\n\t    // if not yet running, force run\n\t    var now = new Date().getTime();\n\t    if(!schedule.running) {\n\t      schedule.start = new Date().getTime();\n\t      schedule.deadline = schedule.start + schedule.timeSlice;\n\t    }\n\t\n\t    // TODO: should also include an estimate of expectedWorkTime\n\t    if(now < schedule.deadline) {\n\t      schedule.running = true;\n\t      schedule.depth++;\n\t      schedule.totalDepth++;\n\t      return fn(function(err, result) {\n\t        schedule.depth--;\n\t        schedule.totalDepth--;\n\t        callback(err, result);\n\t      });\n\t    }\n\t\n\t    // not enough time left in this slice, run after letting browser\n\t    // do some other things\n\t    schedule.depth = 0;\n\t    schedule.running = false;\n\t    jsonld.setImmediate(work);\n\t  })();\n\t};\n\t\n\t// asynchronously loop\n\tNormalize.prototype.forEach = function(iterable, fn, callback) {\n\t  var self = this;\n\t  var iterator;\n\t  var idx = 0;\n\t  var length;\n\t  if(_isArray(iterable)) {\n\t    length = iterable.length;\n\t    iterator = function() {\n\t      if(idx === length) {\n\t        return false;\n\t      }\n\t      iterator.value = iterable[idx++];\n\t      iterator.key = idx;\n\t      return true;\n\t    };\n\t  } else {\n\t    var keys = Object.keys(iterable);\n\t    length = keys.length;\n\t    iterator = function() {\n\t      if(idx === length) {\n\t        return false;\n\t      }\n\t      iterator.key = keys[idx++];\n\t      iterator.value = iterable[iterator.key];\n\t      return true;\n\t    };\n\t  }\n\t\n\t  (function iterate(err, result) {\n\t    if(err) {\n\t      return callback(err);\n\t    }\n\t    if(iterator()) {\n\t      return self.doWork(function() {\n\t        fn(iterator.value, iterator.key, iterate);\n\t      });\n\t    }\n\t    callback();\n\t  })();\n\t};\n\t\n\t// asynchronous waterfall\n\tNormalize.prototype.waterfall = function(fns, callback) {\n\t  var self = this;\n\t  self.forEach(fns, function(fn, idx, callback) {\n\t    self.doWork(fn, callback);\n\t  }, callback);\n\t};\n\t\n\t// asynchronous while\n\tNormalize.prototype.whilst = function(condition, fn, callback) {\n\t  var self = this;\n\t  (function loop(err) {\n\t    if(err) {\n\t      return callback(err);\n\t    }\n\t    if(!condition()) {\n\t      return callback();\n\t    }\n\t    self.doWork(fn, loop);\n\t  })();\n\t};\n\t\n\t// 4.4) Normalization Algorithm\n\tNormalize.prototype.main = function(dataset, callback) {\n\t  var self = this;\n\t  self.schedule.start = new Date().getTime();\n\t  var result;\n\t\n\t  // handle invalid output format\n\t  if(self.options.format) {\n\t    if(self.options.format !== 'application/nquads') {\n\t      return callback(new JsonLdError(\n\t        'Unknown output format.',\n\t        'jsonld.UnknownFormat', {format: self.options.format}));\n\t    }\n\t  }\n\t\n\t  // 1) Create the normalization state.\n\t\n\t  // Note: Optimize by generating non-normalized blank node map concurrently.\n\t  var nonNormalized = {};\n\t\n\t  self.waterfall([\n\t    function(callback) {\n\t      // 2) For every quad in input dataset:\n\t      self.forEach(dataset, function(triples, graphName, callback) {\n\t        if(graphName === '@default') {\n\t          graphName = null;\n\t        }\n\t        self.forEach(triples, function(quad, idx, callback) {\n\t          if(graphName !== null) {\n\t            if(graphName.indexOf('_:') === 0) {\n\t              quad.name = {type: 'blank node', value: graphName};\n\t            } else {\n\t              quad.name = {type: 'IRI', value: graphName};\n\t            }\n\t          }\n\t          self.quads.push(quad);\n\t\n\t          // 2.1) For each blank node that occurs in the quad, add a reference\n\t          // to the quad using the blank node identifier in the blank node to\n\t          // quads map, creating a new entry if necessary.\n\t          self.forEachComponent(quad, function(component) {\n\t            if(component.type !== 'blank node') {\n\t              return;\n\t            }\n\t            var id = component.value;\n\t            if(id in self.blankNodeInfo) {\n\t              self.blankNodeInfo[id].quads.push(quad);\n\t            } else {\n\t              nonNormalized[id] = true;\n\t              self.blankNodeInfo[id] = {quads: [quad]};\n\t            }\n\t          });\n\t          callback();\n\t        }, callback);\n\t      }, callback);\n\t    },\n\t    function(callback) {\n\t      // 3) Create a list of non-normalized blank node identifiers\n\t      // non-normalized identifiers and populate it using the keys from the\n\t      // blank node to quads map.\n\t      // Note: We use a map here and it was generated during step 2.\n\t\n\t      // 4) Initialize simple, a boolean flag, to true.\n\t      var simple = true;\n\t\n\t      // 5) While simple is true, issue canonical identifiers for blank nodes:\n\t      self.whilst(function() { return simple; }, function(callback) {\n\t        // 5.1) Set simple to false.\n\t        simple = false;\n\t\n\t        // 5.2) Clear hash to blank nodes map.\n\t        self.hashToBlankNodes = {};\n\t\n\t        self.waterfall([\n\t          function(callback) {\n\t            // 5.3) For each blank node identifier identifier in non-normalized\n\t            // identifiers:\n\t            self.forEach(nonNormalized, function(value, id, callback) {\n\t              // 5.3.1) Create a hash, hash, according to the Hash First Degree\n\t              // Quads algorithm.\n\t              self.hashFirstDegreeQuads(id, function(err, hash) {\n\t                if(err) {\n\t                  return callback(err);\n\t                }\n\t                // 5.3.2) Add hash and identifier to hash to blank nodes map,\n\t                // creating a new entry if necessary.\n\t                if(hash in self.hashToBlankNodes) {\n\t                  self.hashToBlankNodes[hash].push(id);\n\t                } else {\n\t                  self.hashToBlankNodes[hash] = [id];\n\t                }\n\t                callback();\n\t              });\n\t            }, callback);\n\t          },\n\t          function(callback) {\n\t            // 5.4) For each hash to identifier list mapping in hash to blank\n\t            // nodes map, lexicographically-sorted by hash:\n\t            var hashes = Object.keys(self.hashToBlankNodes).sort();\n\t            self.forEach(hashes, function(hash, i, callback) {\n\t              // 5.4.1) If the length of identifier list is greater than 1,\n\t              // continue to the next mapping.\n\t              var idList = self.hashToBlankNodes[hash];\n\t              if(idList.length > 1) {\n\t                return callback();\n\t              }\n\t\n\t              // 5.4.2) Use the Issue Identifier algorithm, passing canonical\n\t              // issuer and the single blank node identifier in identifier\n\t              // list, identifier, to issue a canonical replacement identifier\n\t              // for identifier.\n\t              // TODO: consider changing `getId` to `issue`\n\t              var id = idList[0];\n\t              self.canonicalIssuer.getId(id);\n\t\n\t              // 5.4.3) Remove identifier from non-normalized identifiers.\n\t              delete nonNormalized[id];\n\t\n\t              // 5.4.4) Remove hash from the hash to blank nodes map.\n\t              delete self.hashToBlankNodes[hash];\n\t\n\t              // 5.4.5) Set simple to true.\n\t              simple = true;\n\t              callback();\n\t            }, callback);\n\t          }\n\t        ], callback);\n\t      }, callback);\n\t    },\n\t    function(callback) {\n\t      // 6) For each hash to identifier list mapping in hash to blank nodes map,\n\t      // lexicographically-sorted by hash:\n\t      var hashes = Object.keys(self.hashToBlankNodes).sort();\n\t      self.forEach(hashes, function(hash, idx, callback) {\n\t        // 6.1) Create hash path list where each item will be a result of\n\t        // running the Hash N-Degree Quads algorithm.\n\t        var hashPathList = [];\n\t\n\t        // 6.2) For each blank node identifier identifier in identifier list:\n\t        var idList = self.hashToBlankNodes[hash];\n\t        self.waterfall([\n\t          function(callback) {\n\t            self.forEach(idList, function(id, idx, callback) {\n\t              // 6.2.1) If a canonical identifier has already been issued for\n\t              // identifier, continue to the next identifier.\n\t              if(self.canonicalIssuer.hasId(id)) {\n\t                return callback();\n\t              }\n\t\n\t              // 6.2.2) Create temporary issuer, an identifier issuer\n\t              // initialized with the prefix _:b.\n\t              var issuer = new IdentifierIssuer('_:b');\n\t\n\t              // 6.2.3) Use the Issue Identifier algorithm, passing temporary\n\t              // issuer and identifier, to issue a new temporary blank node\n\t              // identifier for identifier.\n\t              issuer.getId(id);\n\t\n\t              // 6.2.4) Run the Hash N-Degree Quads algorithm, passing\n\t              // temporary issuer, and append the result to the hash path list.\n\t              self.hashNDegreeQuads(id, issuer, function(err, result) {\n\t                if(err) {\n\t                  return callback(err);\n\t                }\n\t                hashPathList.push(result);\n\t                callback();\n\t              });\n\t            }, callback);\n\t          },\n\t          function(callback) {\n\t            // 6.3) For each result in the hash path list,\n\t            // lexicographically-sorted by the hash in result:\n\t            hashPathList.sort(function(a, b) {\n\t              return (a.hash < b.hash) ? -1 : ((a.hash > b.hash) ? 1 : 0);\n\t            });\n\t            self.forEach(hashPathList, function(result, idx, callback) {\n\t              // 6.3.1) For each blank node identifier, existing identifier,\n\t              // that was issued a temporary identifier by identifier issuer\n\t              // in result, issue a canonical identifier, in the same order,\n\t              // using the Issue Identifier algorithm, passing canonical\n\t              // issuer and existing identifier.\n\t              for(var existing in result.issuer.existing) {\n\t                self.canonicalIssuer.getId(existing);\n\t              }\n\t              callback();\n\t            }, callback);\n\t          }\n\t        ], callback);\n\t      }, callback);\n\t    }, function(callback) {\n\t      /* Note: At this point all blank nodes in the set of RDF quads have been\n\t      assigned canonical identifiers, which have been stored in the canonical\n\t      issuer. Here each quad is updated by assigning each of its blank nodes\n\t      its new identifier. */\n\t\n\t      // 7) For each quad, quad, in input dataset:\n\t      var normalized = [];\n\t      self.waterfall([\n\t        function(callback) {\n\t          self.forEach(self.quads, function(quad, idx, callback) {\n\t            // 7.1) Create a copy, quad copy, of quad and replace any existing\n\t            // blank node identifiers using the canonical identifiers\n\t            // previously issued by canonical issuer.\n\t            // Note: We optimize away the copy here.\n\t            self.forEachComponent(quad, function(component) {\n\t              if(component.type === 'blank node' &&\n\t                component.value.indexOf(self.canonicalIssuer.prefix) !== 0) {\n\t                component.value = self.canonicalIssuer.getId(component.value);\n\t              }\n\t            });\n\t            // 7.2) Add quad copy to the normalized dataset.\n\t            normalized.push(_toNQuad(quad));\n\t            callback();\n\t          }, callback);\n\t        },\n\t        function(callback) {\n\t          // sort normalized output\n\t          normalized.sort();\n\t\n\t          // 8) Return the normalized dataset.\n\t          if(self.options.format === 'application/nquads') {\n\t            result = normalized.join('');\n\t            return callback();\n\t          }\n\t\n\t          result = _parseNQuads(normalized.join(''));\n\t          callback();\n\t        }\n\t      ], callback);\n\t    }\n\t  ], function(err) {\n\t    callback(err, result);\n\t  });\n\t};\n\t\n\t// 4.6) Hash First Degree Quads\n\tNormalize.prototype.hashFirstDegreeQuads = function(id, callback) {\n\t  var self = this;\n\t\n\t  // return cached hash\n\t  var info = self.blankNodeInfo[id];\n\t  if('hash' in info) {\n\t    return callback(null, info.hash);\n\t  }\n\t\n\t  // 1) Initialize nquads to an empty list. It will be used to store quads in\n\t  // N-Quads format.\n\t  var nquads = [];\n\t\n\t  // 2) Get the list of quads quads associated with the reference blank node\n\t  // identifier in the blank node to quads map.\n\t  var quads = info.quads;\n\t\n\t  // 3) For each quad quad in quads:\n\t  self.forEach(quads, function(quad, idx, callback) {\n\t    // 3.1) Serialize the quad in N-Quads format with the following special\n\t    // rule:\n\t\n\t    // 3.1.1) If any component in quad is an blank node, then serialize it\n\t    // using a special identifier as follows:\n\t    var copy = {predicate: quad.predicate};\n\t    self.forEachComponent(quad, function(component, key) {\n\t      // 3.1.2) If the blank node's existing blank node identifier matches the\n\t      // reference blank node identifier then use the blank node identifier _:a,\n\t      // otherwise, use the blank node identifier _:z.\n\t      copy[key] = self.modifyFirstDegreeComponent(id, component, key);\n\t    });\n\t    nquads.push(_toNQuad(copy));\n\t    callback();\n\t  }, function(err) {\n\t    if(err) {\n\t      return callback(err);\n\t    }\n\t    // 4) Sort nquads in lexicographical order.\n\t    nquads.sort();\n\t\n\t    // 5) Return the hash that results from passing the sorted, joined nquads\n\t    // through the hash algorithm.\n\t    info.hash = NormalizeHash.hashNQuads(self.name, nquads);\n\t    callback(null, info.hash);\n\t  });\n\t};\n\t\n\t// helper for modifying component during Hash First Degree Quads\n\tNormalize.prototype.modifyFirstDegreeComponent = function(id, component) {\n\t  if(component.type !== 'blank node') {\n\t    return component;\n\t  }\n\t  component = _clone(component);\n\t  component.value = (component.value === id ? '_:a' : '_:z');\n\t  return component;\n\t};\n\t\n\t// 4.7) Hash Related Blank Node\n\tNormalize.prototype.hashRelatedBlankNode = function(\n\t  related, quad, issuer, position, callback) {\n\t  var self = this;\n\t\n\t  // 1) Set the identifier to use for related, preferring first the canonical\n\t  // identifier for related if issued, second the identifier issued by issuer\n\t  // if issued, and last, if necessary, the result of the Hash First Degree\n\t  // Quads algorithm, passing related.\n\t  var id;\n\t  self.waterfall([\n\t    function(callback) {\n\t      if(self.canonicalIssuer.hasId(related)) {\n\t        id = self.canonicalIssuer.getId(related);\n\t        return callback();\n\t      }\n\t      if(issuer.hasId(related)) {\n\t        id = issuer.getId(related);\n\t        return callback();\n\t      }\n\t      self.hashFirstDegreeQuads(related, function(err, hash) {\n\t        if(err) {\n\t          return callback(err);\n\t        }\n\t        id = hash;\n\t        callback();\n\t      });\n\t    }\n\t  ], function(err) {\n\t    if(err) {\n\t      return callback(err);\n\t    }\n\t\n\t    // 2) Initialize a string input to the value of position.\n\t    // Note: We use a hash object instead.\n\t    var md = new NormalizeHash(self.name);\n\t    md.update(position);\n\t\n\t    // 3) If position is not g, append <, the value of the predicate in quad,\n\t    // and > to input.\n\t    if(position !== 'g') {\n\t      md.update(self.getRelatedPredicate(quad));\n\t    }\n\t\n\t    // 4) Append identifier to input.\n\t    md.update(id);\n\t\n\t    // 5) Return the hash that results from passing input through the hash\n\t    // algorithm.\n\t    return callback(null, md.digest());\n\t  });\n\t};\n\t\n\t// helper for getting a related predicate\n\tNormalize.prototype.getRelatedPredicate = function(quad) {\n\t  return '<' + quad.predicate.value + '>';\n\t};\n\t\n\t// 4.8) Hash N-Degree Quads\n\tNormalize.prototype.hashNDegreeQuads = function(id, issuer, callback) {\n\t  var self = this;\n\t\n\t  // 1) Create a hash to related blank nodes map for storing hashes that\n\t  // identify related blank nodes.\n\t  // Note: 2) and 3) handled within `createHashToRelated`\n\t  var hashToRelated;\n\t  var md = new NormalizeHash(self.name);\n\t  self.waterfall([\n\t    function(callback) {\n\t      self.createHashToRelated(id, issuer, function(err, result) {\n\t        if(err) {\n\t          return callback(err);\n\t        }\n\t        hashToRelated = result;\n\t        callback();\n\t      });\n\t    },\n\t    function(callback) {\n\t      // 4) Create an empty string, data to hash.\n\t      // Note: We created a hash object `md` above instead.\n\t\n\t      // 5) For each related hash to blank node list mapping in hash to related\n\t      // blank nodes map, sorted lexicographically by related hash:\n\t      var hashes = Object.keys(hashToRelated).sort();\n\t      self.forEach(hashes, function(hash, idx, callback) {\n\t        // 5.1) Append the related hash to the data to hash.\n\t        md.update(hash);\n\t\n\t        // 5.2) Create a string chosen path.\n\t        var chosenPath = '';\n\t\n\t        // 5.3) Create an unset chosen issuer variable.\n\t        var chosenIssuer;\n\t\n\t        // 5.4) For each permutation of blank node list:\n\t        var permutator = new Permutator(hashToRelated[hash]);\n\t        self.whilst(\n\t          function() { return permutator.hasNext(); },\n\t          function(nextPermutation) {\n\t          var permutation = permutator.next();\n\t\n\t          // 5.4.1) Create a copy of issuer, issuer copy.\n\t          var issuerCopy = issuer.clone();\n\t\n\t          // 5.4.2) Create a string path.\n\t          var path = '';\n\t\n\t          // 5.4.3) Create a recursion list, to store blank node identifiers\n\t          // that must be recursively processed by this algorithm.\n\t          var recursionList = [];\n\t\n\t          self.waterfall([\n\t            function(callback) {\n\t              // 5.4.4) For each related in permutation:\n\t              self.forEach(permutation, function(related, idx, callback) {\n\t                // 5.4.4.1) If a canonical identifier has been issued for\n\t                // related, append it to path.\n\t                if(self.canonicalIssuer.hasId(related)) {\n\t                  path += self.canonicalIssuer.getId(related);\n\t                } else {\n\t                  // 5.4.4.2) Otherwise:\n\t                  // 5.4.4.2.1) If issuer copy has not issued an identifier for\n\t                  // related, append related to recursion list.\n\t                  if(!issuerCopy.hasId(related)) {\n\t                    recursionList.push(related);\n\t                  }\n\t                  // 5.4.4.2.2) Use the Issue Identifier algorithm, passing\n\t                  // issuer copy and related and append the result to path.\n\t                  path += issuerCopy.getId(related);\n\t                }\n\t\n\t                // 5.4.4.3) If chosen path is not empty and the length of path\n\t                // is greater than or equal to the length of chosen path and\n\t                // path is lexicographically greater than chosen path, then\n\t                // skip to the next permutation.\n\t                if(chosenPath.length !== 0 &&\n\t                  path.length >= chosenPath.length && path > chosenPath) {\n\t                  // FIXME: may cause inaccurate total depth calculation\n\t                  return nextPermutation();\n\t                }\n\t                callback();\n\t              }, callback);\n\t            },\n\t            function(callback) {\n\t              // 5.4.5) For each related in recursion list:\n\t              self.forEach(recursionList, function(related, idx, callback) {\n\t                // 5.4.5.1) Set result to the result of recursively executing\n\t                // the Hash N-Degree Quads algorithm, passing related for\n\t                // identifier and issuer copy for path identifier issuer.\n\t                self.hashNDegreeQuads(\n\t                  related, issuerCopy, function(err, result) {\n\t                  if(err) {\n\t                    return callback(err);\n\t                  }\n\t\n\t                  // 5.4.5.2) Use the Issue Identifier algorithm, passing issuer\n\t                  // copy and related and append the result to path.\n\t                  path += issuerCopy.getId(related);\n\t\n\t                  // 5.4.5.3) Append <, the hash in result, and > to path.\n\t                  path += '<' + result.hash + '>';\n\t\n\t                  // 5.4.5.4) Set issuer copy to the identifier issuer in\n\t                  // result.\n\t                  issuerCopy = result.issuer;\n\t\n\t                  // 5.4.5.5) If chosen path is not empty and the length of path\n\t                  // is greater than or equal to the length of chosen path and\n\t                  // path is lexicographically greater than chosen path, then\n\t                  // skip to the next permutation.\n\t                  if(chosenPath.length !== 0 &&\n\t                    path.length >= chosenPath.length && path > chosenPath) {\n\t                    // FIXME: may cause inaccurate total depth calculation\n\t                    return nextPermutation();\n\t                  }\n\t                  callback();\n\t                });\n\t              }, callback);\n\t            },\n\t            function(callback) {\n\t              // 5.4.6) If chosen path is empty or path is lexicographically\n\t              // less than chosen path, set chosen path to path and chosen\n\t              // issuer to issuer copy.\n\t              if(chosenPath.length === 0 || path < chosenPath) {\n\t                chosenPath = path;\n\t                chosenIssuer = issuerCopy;\n\t              }\n\t              callback();\n\t            }\n\t          ], nextPermutation);\n\t        }, function(err) {\n\t          if(err) {\n\t            return callback(err);\n\t          }\n\t\n\t          // 5.5) Append chosen path to data to hash.\n\t          md.update(chosenPath);\n\t\n\t          // 5.6) Replace issuer, by reference, with chosen issuer.\n\t          issuer = chosenIssuer;\n\t          callback();\n\t        });\n\t      }, callback);\n\t    }\n\t  ], function(err) {\n\t    // 6) Return issuer and the hash that results from passing data to hash\n\t    // through the hash algorithm.\n\t    callback(err, {hash: md.digest(), issuer: issuer});\n\t  });\n\t};\n\t\n\t// helper for creating hash to related blank nodes map\n\tNormalize.prototype.createHashToRelated = function(id, issuer, callback) {\n\t  var self = this;\n\t\n\t  // 1) Create a hash to related blank nodes map for storing hashes that\n\t  // identify related blank nodes.\n\t  var hashToRelated = {};\n\t\n\t  // 2) Get a reference, quads, to the list of quads in the blank node to\n\t  // quads map for the key identifier.\n\t  var quads = self.blankNodeInfo[id].quads;\n\t\n\t  // 3) For each quad in quads:\n\t  self.forEach(quads, function(quad, idx, callback) {\n\t    // 3.1) For each component in quad, if component is the subject, object,\n\t    // and graph name and it is a blank node that is not identified by\n\t    // identifier:\n\t    self.forEach(quad, function(component, key, callback) {\n\t      if(key === 'predicate' ||\n\t        !(component.type === 'blank node' && component.value !== id)) {\n\t        return callback();\n\t      }\n\t      // 3.1.1) Set hash to the result of the Hash Related Blank Node\n\t      // algorithm, passing the blank node identifier for component as\n\t      // related, quad, path identifier issuer as issuer, and position as\n\t      // either s, o, or g based on whether component is a subject, object,\n\t      // graph name, respectively.\n\t      var related = component.value;\n\t      var position = POSITIONS[key];\n\t      self.hashRelatedBlankNode(\n\t        related, quad, issuer, position, function(err, hash) {\n\t        if(err) {\n\t          return callback(err);\n\t        }\n\t        // 3.1.2) Add a mapping of hash to the blank node identifier for\n\t        // component to hash to related blank nodes map, adding an entry as\n\t        // necessary.\n\t        if(hash in hashToRelated) {\n\t          hashToRelated[hash].push(related);\n\t        } else {\n\t          hashToRelated[hash] = [related];\n\t        }\n\t        callback();\n\t      });\n\t    }, callback);\n\t  }, function(err) {\n\t    callback(err, hashToRelated);\n\t  });\n\t};\n\t\n\t// helper that iterates over quad components (skips predicate)\n\tNormalize.prototype.forEachComponent = function(quad, op) {\n\t  for(var key in quad) {\n\t    // skip `predicate`\n\t    if(key === 'predicate') {\n\t      continue;\n\t    }\n\t    op(quad[key], key, quad);\n\t  }\n\t};\n\t\n\treturn Normalize;\n\t\n\t})(); // end of define URDNA2015\n\t\n\t/////////////////////////////// DEFINE URGNA2012 //////////////////////////////\n\t\n\tvar URGNA2012 = (function() {\n\t\n\tvar Normalize = function(options) {\n\t  URDNA2015.call(this, options);\n\t  this.name = 'URGNA2012';\n\t};\n\tNormalize.prototype = new URDNA2015();\n\t\n\t// helper for modifying component during Hash First Degree Quads\n\tNormalize.prototype.modifyFirstDegreeComponent = function(id, component, key) {\n\t  if(component.type !== 'blank node') {\n\t    return component;\n\t  }\n\t  component = _clone(component);\n\t  if(key === 'name') {\n\t    component.value = '_:g';\n\t  } else {\n\t    component.value = (component.value === id ? '_:a' : '_:z');\n\t  }\n\t  return component;\n\t};\n\t\n\t// helper for getting a related predicate\n\tNormalize.prototype.getRelatedPredicate = function(quad) {\n\t  return quad.predicate.value;\n\t};\n\t\n\t// helper for creating hash to related blank nodes map\n\tNormalize.prototype.createHashToRelated = function(id, issuer, callback) {\n\t  var self = this;\n\t\n\t  // 1) Create a hash to related blank nodes map for storing hashes that\n\t  // identify related blank nodes.\n\t  var hashToRelated = {};\n\t\n\t  // 2) Get a reference, quads, to the list of quads in the blank node to\n\t  // quads map for the key identifier.\n\t  var quads = self.blankNodeInfo[id].quads;\n\t\n\t  // 3) For each quad in quads:\n\t  self.forEach(quads, function(quad, idx, callback) {\n\t    // 3.1) If the quad's subject is a blank node that does not match\n\t    // identifier, set hash to the result of the Hash Related Blank Node\n\t    // algorithm, passing the blank node identifier for subject as related,\n\t    // quad, path identifier issuer as issuer, and p as position.\n\t    var position;\n\t    var related;\n\t    if(quad.subject.type === 'blank node' && quad.subject.value !== id) {\n\t      related = quad.subject.value;\n\t      position = 'p';\n\t    } else if(quad.object.type === 'blank node' && quad.object.value !== id) {\n\t      // 3.2) Otherwise, if quad's object is a blank node that does not match\n\t      // identifier, to the result of the Hash Related Blank Node algorithm,\n\t      // passing the blank node identifier for object as related, quad, path\n\t      // identifier issuer as issuer, and r as position.\n\t      related = quad.object.value;\n\t      position = 'r';\n\t    } else {\n\t      // 3.3) Otherwise, continue to the next quad.\n\t      return callback();\n\t    }\n\t    // 3.4) Add a mapping of hash to the blank node identifier for the\n\t    // component that matched (subject or object) to hash to related blank\n\t    // nodes map, adding an entry as necessary.\n\t    self.hashRelatedBlankNode(\n\t      related, quad, issuer, position, function(err, hash) {\n\t      if(hash in hashToRelated) {\n\t        hashToRelated[hash].push(related);\n\t      } else {\n\t        hashToRelated[hash] = [related];\n\t      }\n\t      callback();\n\t    });\n\t  }, function(err) {\n\t    callback(err, hashToRelated);\n\t  });\n\t};\n\t\n\treturn Normalize;\n\t\n\t})(); // end of define URGNA2012\n\t\n\t/**\n\t * Recursively flattens the subjects in the given JSON-LD expanded input\n\t * into a node map.\n\t *\n\t * @param input the JSON-LD expanded input.\n\t * @param graphs a map of graph name to subject map.\n\t * @param graph the name of the current graph.\n\t * @param issuer the blank node identifier issuer.\n\t * @param name the name assigned to the current input if it is a bnode.\n\t * @param list the list to append to, null for none.\n\t */\n\tfunction _createNodeMap(input, graphs, graph, issuer, name, list) {\n\t  // recurse through array\n\t  if(_isArray(input)) {\n\t    for(var i = 0; i < input.length; ++i) {\n\t      _createNodeMap(input[i], graphs, graph, issuer, undefined, list);\n\t    }\n\t    return;\n\t  }\n\t\n\t  // add non-object to list\n\t  if(!_isObject(input)) {\n\t    if(list) {\n\t      list.push(input);\n\t    }\n\t    return;\n\t  }\n\t\n\t  // add values to list\n\t  if(_isValue(input)) {\n\t    if('@type' in input) {\n\t      var type = input['@type'];\n\t      // rename @type blank node\n\t      if(type.indexOf('_:') === 0) {\n\t        input['@type'] = type = issuer.getId(type);\n\t      }\n\t    }\n\t    if(list) {\n\t      list.push(input);\n\t    }\n\t    return;\n\t  }\n\t\n\t  // Note: At this point, input must be a subject.\n\t\n\t  // spec requires @type to be named first, so assign names early\n\t  if('@type' in input) {\n\t    var types = input['@type'];\n\t    for(var i = 0; i < types.length; ++i) {\n\t      var type = types[i];\n\t      if(type.indexOf('_:') === 0) {\n\t        issuer.getId(type);\n\t      }\n\t    }\n\t  }\n\t\n\t  // get name for subject\n\t  if(_isUndefined(name)) {\n\t    name = _isBlankNode(input) ? issuer.getId(input['@id']) : input['@id'];\n\t  }\n\t\n\t  // add subject reference to list\n\t  if(list) {\n\t    list.push({'@id': name});\n\t  }\n\t\n\t  // create new subject or merge into existing one\n\t  var subjects = graphs[graph];\n\t  var subject = subjects[name] = subjects[name] || {};\n\t  subject['@id'] = name;\n\t  var properties = Object.keys(input).sort();\n\t  for(var pi = 0; pi < properties.length; ++pi) {\n\t    var property = properties[pi];\n\t\n\t    // skip @id\n\t    if(property === '@id') {\n\t      continue;\n\t    }\n\t\n\t    // handle reverse properties\n\t    if(property === '@reverse') {\n\t      var referencedNode = {'@id': name};\n\t      var reverseMap = input['@reverse'];\n\t      for(var reverseProperty in reverseMap) {\n\t        var items = reverseMap[reverseProperty];\n\t        for(var ii = 0; ii < items.length; ++ii) {\n\t          var item = items[ii];\n\t          var itemName = item['@id'];\n\t          if(_isBlankNode(item)) {\n\t            itemName = issuer.getId(itemName);\n\t          }\n\t          _createNodeMap(item, graphs, graph, issuer, itemName);\n\t          jsonld.addValue(\n\t            subjects[itemName], reverseProperty, referencedNode,\n\t            {propertyIsArray: true, allowDuplicate: false});\n\t        }\n\t      }\n\t      continue;\n\t    }\n\t\n\t    // recurse into graph\n\t    if(property === '@graph') {\n\t      // add graph subjects map entry\n\t      if(!(name in graphs)) {\n\t        graphs[name] = {};\n\t      }\n\t      var g = (graph === '@merged') ? graph : name;\n\t      _createNodeMap(input[property], graphs, g, issuer);\n\t      continue;\n\t    }\n\t\n\t    // copy non-@type keywords\n\t    if(property !== '@type' && _isKeyword(property)) {\n\t      if(property === '@index' && property in subject &&\n\t        (input[property] !== subject[property] ||\n\t        input[property]['@id'] !== subject[property]['@id'])) {\n\t        throw new JsonLdError(\n\t          'Invalid JSON-LD syntax; conflicting @index property detected.',\n\t          'jsonld.SyntaxError',\n\t          {code: 'conflicting indexes', subject: subject});\n\t      }\n\t      subject[property] = input[property];\n\t      continue;\n\t    }\n\t\n\t    // iterate over objects\n\t    var objects = input[property];\n\t\n\t    // if property is a bnode, assign it a new id\n\t    if(property.indexOf('_:') === 0) {\n\t      property = issuer.getId(property);\n\t    }\n\t\n\t    // ensure property is added for empty arrays\n\t    if(objects.length === 0) {\n\t      jsonld.addValue(subject, property, [], {propertyIsArray: true});\n\t      continue;\n\t    }\n\t    for(var oi = 0; oi < objects.length; ++oi) {\n\t      var o = objects[oi];\n\t\n\t      if(property === '@type') {\n\t        // rename @type blank nodes\n\t        o = (o.indexOf('_:') === 0) ? issuer.getId(o) : o;\n\t      }\n\t\n\t      // handle embedded subject or subject reference\n\t      if(_isSubject(o) || _isSubjectReference(o)) {\n\t        // relabel blank node @id\n\t        var id = _isBlankNode(o) ? issuer.getId(o['@id']) : o['@id'];\n\t\n\t        // add reference and recurse\n\t        jsonld.addValue(\n\t          subject, property, {'@id': id},\n\t          {propertyIsArray: true, allowDuplicate: false});\n\t        _createNodeMap(o, graphs, graph, issuer, id);\n\t      } else if(_isList(o)) {\n\t        // handle @list\n\t        var _list = [];\n\t        _createNodeMap(o['@list'], graphs, graph, issuer, name, _list);\n\t        o = {'@list': _list};\n\t        jsonld.addValue(\n\t          subject, property, o,\n\t          {propertyIsArray: true, allowDuplicate: false});\n\t      } else {\n\t        // handle @value\n\t        _createNodeMap(o, graphs, graph, issuer, name);\n\t        jsonld.addValue(\n\t          subject, property, o, {propertyIsArray: true, allowDuplicate: false});\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tfunction _mergeNodeMaps(graphs) {\n\t  // add all non-default graphs to default graph\n\t  var defaultGraph = graphs['@default'];\n\t  var graphNames = Object.keys(graphs).sort();\n\t  for(var i = 0; i < graphNames.length; ++i) {\n\t    var graphName = graphNames[i];\n\t    if(graphName === '@default') {\n\t      continue;\n\t    }\n\t    var nodeMap = graphs[graphName];\n\t    var subject = defaultGraph[graphName];\n\t    if(!subject) {\n\t      defaultGraph[graphName] = subject = {\n\t        '@id': graphName,\n\t        '@graph': []\n\t      };\n\t    } else if(!('@graph' in subject)) {\n\t      subject['@graph'] = [];\n\t    }\n\t    var graph = subject['@graph'];\n\t    var ids = Object.keys(nodeMap).sort();\n\t    for(var ii = 0; ii < ids.length; ++ii) {\n\t      var node = nodeMap[ids[ii]];\n\t      // only add full subjects\n\t      if(!_isSubjectReference(node)) {\n\t        graph.push(node);\n\t      }\n\t    }\n\t  }\n\t  return defaultGraph;\n\t}\n\t\n\t/**\n\t * Frames subjects according to the given frame.\n\t *\n\t * @param state the current framing state.\n\t * @param subjects the subjects to filter.\n\t * @param frame the frame.\n\t * @param parent the parent subject or top-level array.\n\t * @param property the parent property, initialized to null.\n\t */\n\tfunction _frame(state, subjects, frame, parent, property) {\n\t  // validate the frame\n\t  _validateFrame(frame);\n\t  frame = frame[0];\n\t\n\t  // get flags for current frame\n\t  var options = state.options;\n\t  var flags = {\n\t    embed: _getFrameFlag(frame, options, 'embed'),\n\t    explicit: _getFrameFlag(frame, options, 'explicit'),\n\t    requireAll: _getFrameFlag(frame, options, 'requireAll')\n\t  };\n\t\n\t  // filter out subjects that match the frame\n\t  var matches = _filterSubjects(state, subjects, frame, flags);\n\t\n\t  // add matches to output\n\t  var ids = Object.keys(matches).sort();\n\t  for(var idx = 0; idx < ids.length; ++idx) {\n\t    var id = ids[idx];\n\t    var subject = matches[id];\n\t\n\t    if(flags.embed === '@link' && id in state.link) {\n\t      // TODO: may want to also match an existing linked subject against\n\t      // the current frame ... so different frames could produce different\n\t      // subjects that are only shared in-memory when the frames are the same\n\t\n\t      // add existing linked subject\n\t      _addFrameOutput(parent, property, state.link[id]);\n\t      continue;\n\t    }\n\t\n\t    /* Note: In order to treat each top-level match as a compartmentalized\n\t    result, clear the unique embedded subjects map when the property is null,\n\t    which only occurs at the top-level. */\n\t    if(property === null) {\n\t      state.uniqueEmbeds = {};\n\t    }\n\t\n\t    // start output for subject\n\t    var output = {};\n\t    output['@id'] = id;\n\t    state.link[id] = output;\n\t\n\t    // if embed is @never or if a circular reference would be created by an\n\t    // embed, the subject cannot be embedded, just add the reference;\n\t    // note that a circular reference won't occur when the embed flag is\n\t    // `@link` as the above check will short-circuit before reaching this point\n\t    if(flags.embed === '@never' ||\n\t      _createsCircularReference(subject, state.subjectStack)) {\n\t      _addFrameOutput(parent, property, output);\n\t      continue;\n\t    }\n\t\n\t    // if only the last match should be embedded\n\t    if(flags.embed === '@last') {\n\t      // remove any existing embed\n\t      if(id in state.uniqueEmbeds) {\n\t        _removeEmbed(state, id);\n\t      }\n\t      state.uniqueEmbeds[id] = {parent: parent, property: property};\n\t    }\n\t\n\t    // push matching subject onto stack to enable circular embed checks\n\t    state.subjectStack.push(subject);\n\t\n\t    // iterate over subject properties\n\t    var props = Object.keys(subject).sort();\n\t    for(var i = 0; i < props.length; i++) {\n\t      var prop = props[i];\n\t\n\t      // copy keywords to output\n\t      if(_isKeyword(prop)) {\n\t        output[prop] = _clone(subject[prop]);\n\t        continue;\n\t      }\n\t\n\t      // explicit is on and property isn't in the frame, skip processing\n\t      if(flags.explicit && !(prop in frame)) {\n\t        continue;\n\t      }\n\t\n\t      // add objects\n\t      var objects = subject[prop];\n\t      for(var oi = 0; oi < objects.length; ++oi) {\n\t        var o = objects[oi];\n\t\n\t        // recurse into list\n\t        if(_isList(o)) {\n\t          // add empty list\n\t          var list = {'@list': []};\n\t          _addFrameOutput(output, prop, list);\n\t\n\t          // add list objects\n\t          var src = o['@list'];\n\t          for(var n in src) {\n\t            o = src[n];\n\t            if(_isSubjectReference(o)) {\n\t              var subframe = (prop in frame ?\n\t                frame[prop][0]['@list'] : _createImplicitFrame(flags));\n\t              // recurse into subject reference\n\t              _frame(state, [o['@id']], subframe, list, '@list');\n\t            } else {\n\t              // include other values automatically\n\t              _addFrameOutput(list, '@list', _clone(o));\n\t            }\n\t          }\n\t          continue;\n\t        }\n\t\n\t        if(_isSubjectReference(o)) {\n\t          // recurse into subject reference\n\t          var subframe = (prop in frame ?\n\t            frame[prop] : _createImplicitFrame(flags));\n\t          _frame(state, [o['@id']], subframe, output, prop);\n\t        } else {\n\t          // include other values automatically\n\t          _addFrameOutput(output, prop, _clone(o));\n\t        }\n\t      }\n\t    }\n\t\n\t    // handle defaults\n\t    var props = Object.keys(frame).sort();\n\t    for(var i = 0; i < props.length; ++i) {\n\t      var prop = props[i];\n\t\n\t      // skip keywords\n\t      if(_isKeyword(prop)) {\n\t        continue;\n\t      }\n\t\n\t      // if omit default is off, then include default values for properties\n\t      // that appear in the next frame but are not in the matching subject\n\t      var next = frame[prop][0];\n\t      var omitDefaultOn = _getFrameFlag(next, options, 'omitDefault');\n\t      if(!omitDefaultOn && !(prop in output)) {\n\t        var preserve = '@null';\n\t        if('@default' in next) {\n\t          preserve = _clone(next['@default']);\n\t        }\n\t        if(!_isArray(preserve)) {\n\t          preserve = [preserve];\n\t        }\n\t        output[prop] = [{'@preserve': preserve}];\n\t      }\n\t    }\n\t\n\t    // add output to parent\n\t    _addFrameOutput(parent, property, output);\n\t\n\t    // pop matching subject from circular ref-checking stack\n\t    state.subjectStack.pop();\n\t  }\n\t}\n\t\n\t/**\n\t * Creates an implicit frame when recursing through subject matches. If\n\t * a frame doesn't have an explicit frame for a particular property, then\n\t * a wildcard child frame will be created that uses the same flags that the\n\t * parent frame used.\n\t *\n\t * @param flags the current framing flags.\n\t *\n\t * @return the implicit frame.\n\t */\n\tfunction _createImplicitFrame(flags) {\n\t  var frame = {};\n\t  for(var key in flags) {\n\t    if(flags[key] !== undefined) {\n\t      frame['@' + key] = [flags[key]];\n\t    }\n\t  }\n\t  return [frame];\n\t}\n\t\n\t/**\n\t * Checks the current subject stack to see if embedding the given subject\n\t * would cause a circular reference.\n\t *\n\t * @param subjectToEmbed the subject to embed.\n\t * @param subjectStack the current stack of subjects.\n\t *\n\t * @return true if a circular reference would be created, false if not.\n\t */\n\tfunction _createsCircularReference(subjectToEmbed, subjectStack) {\n\t  for(var i = subjectStack.length - 1; i >= 0; --i) {\n\t    if(subjectStack[i]['@id'] === subjectToEmbed['@id']) {\n\t      return true;\n\t    }\n\t  }\n\t  return false;\n\t}\n\t\n\t/**\n\t * Gets the frame flag value for the given flag name.\n\t *\n\t * @param frame the frame.\n\t * @param options the framing options.\n\t * @param name the flag name.\n\t *\n\t * @return the flag value.\n\t */\n\tfunction _getFrameFlag(frame, options, name) {\n\t  var flag = '@' + name;\n\t  var rval = (flag in frame ? frame[flag][0] : options[name]);\n\t  if(name === 'embed') {\n\t    // default is \"@last\"\n\t    // backwards-compatibility support for \"embed\" maps:\n\t    // true => \"@last\"\n\t    // false => \"@never\"\n\t    if(rval === true) {\n\t      rval = '@last';\n\t    } else if(rval === false) {\n\t      rval = '@never';\n\t    } else if(rval !== '@always' && rval !== '@never' && rval !== '@link') {\n\t      rval = '@last';\n\t    }\n\t  }\n\t  return rval;\n\t}\n\t\n\t/**\n\t * Validates a JSON-LD frame, throwing an exception if the frame is invalid.\n\t *\n\t * @param frame the frame to validate.\n\t */\n\tfunction _validateFrame(frame) {\n\t  if(!_isArray(frame) || frame.length !== 1 || !_isObject(frame[0])) {\n\t    throw new JsonLdError(\n\t      'Invalid JSON-LD syntax; a JSON-LD frame must be a single object.',\n\t      'jsonld.SyntaxError', {frame: frame});\n\t  }\n\t}\n\t\n\t/**\n\t * Returns a map of all of the subjects that match a parsed frame.\n\t *\n\t * @param state the current framing state.\n\t * @param subjects the set of subjects to filter.\n\t * @param frame the parsed frame.\n\t * @param flags the frame flags.\n\t *\n\t * @return all of the matched subjects.\n\t */\n\tfunction _filterSubjects(state, subjects, frame, flags) {\n\t  // filter subjects in @id order\n\t  var rval = {};\n\t  for(var i = 0; i < subjects.length; ++i) {\n\t    var id = subjects[i];\n\t    var subject = state.subjects[id];\n\t    if(_filterSubject(subject, frame, flags)) {\n\t      rval[id] = subject;\n\t    }\n\t  }\n\t  return rval;\n\t}\n\t\n\t/**\n\t * Returns true if the given subject matches the given frame.\n\t *\n\t * @param subject the subject to check.\n\t * @param frame the frame to check.\n\t * @param flags the frame flags.\n\t *\n\t * @return true if the subject matches, false if not.\n\t */\n\tfunction _filterSubject(subject, frame, flags) {\n\t  // check @type (object value means 'any' type, fall through to ducktyping)\n\t  if('@type' in frame &&\n\t    !(frame['@type'].length === 1 && _isObject(frame['@type'][0]))) {\n\t    var types = frame['@type'];\n\t    for(var i = 0; i < types.length; ++i) {\n\t      // any matching @type is a match\n\t      if(jsonld.hasValue(subject, '@type', types[i])) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  }\n\t\n\t  // check ducktype\n\t  var wildcard = true;\n\t  var matchesSome = false;\n\t  for(var key in frame) {\n\t    if(_isKeyword(key)) {\n\t      // skip non-@id and non-@type\n\t      if(key !== '@id' && key !== '@type') {\n\t        continue;\n\t      }\n\t      wildcard = false;\n\t\n\t      // check @id for a specific @id value\n\t      if(key === '@id' && _isString(frame[key])) {\n\t        if(subject[key] !== frame[key]) {\n\t          return false;\n\t        }\n\t        matchesSome = true;\n\t        continue;\n\t      }\n\t    }\n\t\n\t    wildcard = false;\n\t\n\t    if(key in subject) {\n\t      // frame[key] === [] means do not match if property is present\n\t      if(_isArray(frame[key]) && frame[key].length === 0 &&\n\t        subject[key] !== undefined) {\n\t        return false;\n\t      }\n\t      matchesSome = true;\n\t      continue;\n\t    }\n\t\n\t    // all properties must match to be a duck unless a @default is specified\n\t    var hasDefault = (_isArray(frame[key]) && _isObject(frame[key][0]) &&\n\t      '@default' in frame[key][0]);\n\t    if(flags.requireAll && !hasDefault) {\n\t      return false;\n\t    }\n\t  }\n\t\n\t  // return true if wildcard or subject matches some properties\n\t  return wildcard || matchesSome;\n\t}\n\t\n\t/**\n\t * Removes an existing embed.\n\t *\n\t * @param state the current framing state.\n\t * @param id the @id of the embed to remove.\n\t */\n\tfunction _removeEmbed(state, id) {\n\t  // get existing embed\n\t  var embeds = state.uniqueEmbeds;\n\t  var embed = embeds[id];\n\t  var parent = embed.parent;\n\t  var property = embed.property;\n\t\n\t  // create reference to replace embed\n\t  var subject = {'@id': id};\n\t\n\t  // remove existing embed\n\t  if(_isArray(parent)) {\n\t    // replace subject with reference\n\t    for(var i = 0; i < parent.length; ++i) {\n\t      if(jsonld.compareValues(parent[i], subject)) {\n\t        parent[i] = subject;\n\t        break;\n\t      }\n\t    }\n\t  } else {\n\t    // replace subject with reference\n\t    var useArray = _isArray(parent[property]);\n\t    jsonld.removeValue(parent, property, subject, {propertyIsArray: useArray});\n\t    jsonld.addValue(parent, property, subject, {propertyIsArray: useArray});\n\t  }\n\t\n\t  // recursively remove dependent dangling embeds\n\t  var removeDependents = function(id) {\n\t    // get embed keys as a separate array to enable deleting keys in map\n\t    var ids = Object.keys(embeds);\n\t    for(var i = 0; i < ids.length; ++i) {\n\t      var next = ids[i];\n\t      if(next in embeds && _isObject(embeds[next].parent) &&\n\t        embeds[next].parent['@id'] === id) {\n\t        delete embeds[next];\n\t        removeDependents(next);\n\t      }\n\t    }\n\t  };\n\t  removeDependents(id);\n\t}\n\t\n\t/**\n\t * Adds framing output to the given parent.\n\t *\n\t * @param parent the parent to add to.\n\t * @param property the parent property.\n\t * @param output the output to add.\n\t */\n\tfunction _addFrameOutput(parent, property, output) {\n\t  if(_isObject(parent)) {\n\t    jsonld.addValue(parent, property, output, {propertyIsArray: true});\n\t  } else {\n\t    parent.push(output);\n\t  }\n\t}\n\t\n\t/**\n\t * Removes the @preserve keywords as the last step of the framing algorithm.\n\t *\n\t * @param ctx the active context used to compact the input.\n\t * @param input the framed, compacted output.\n\t * @param options the compaction options used.\n\t *\n\t * @return the resulting output.\n\t */\n\tfunction _removePreserve(ctx, input, options) {\n\t  // recurse through arrays\n\t  if(_isArray(input)) {\n\t    var output = [];\n\t    for(var i = 0; i < input.length; ++i) {\n\t      var result = _removePreserve(ctx, input[i], options);\n\t      // drop nulls from arrays\n\t      if(result !== null) {\n\t        output.push(result);\n\t      }\n\t    }\n\t    input = output;\n\t  } else if(_isObject(input)) {\n\t    // remove @preserve\n\t    if('@preserve' in input) {\n\t      if(input['@preserve'] === '@null') {\n\t        return null;\n\t      }\n\t      return input['@preserve'];\n\t    }\n\t\n\t    // skip @values\n\t    if(_isValue(input)) {\n\t      return input;\n\t    }\n\t\n\t    // recurse through @lists\n\t    if(_isList(input)) {\n\t      input['@list'] = _removePreserve(ctx, input['@list'], options);\n\t      return input;\n\t    }\n\t\n\t    // handle in-memory linked nodes\n\t    var idAlias = _compactIri(ctx, '@id');\n\t    if(idAlias in input) {\n\t      var id = input[idAlias];\n\t      if(id in options.link) {\n\t        var idx = options.link[id].indexOf(input);\n\t        if(idx === -1) {\n\t          // prevent circular visitation\n\t          options.link[id].push(input);\n\t        } else {\n\t          // already visited\n\t          return options.link[id][idx];\n\t        }\n\t      } else {\n\t        // prevent circular visitation\n\t        options.link[id] = [input];\n\t      }\n\t    }\n\t\n\t    // recurse through properties\n\t    for(var prop in input) {\n\t      var result = _removePreserve(ctx, input[prop], options);\n\t      var container = jsonld.getContextValue(ctx, prop, '@container');\n\t      if(options.compactArrays && _isArray(result) && result.length === 1 &&\n\t        container === null) {\n\t        result = result[0];\n\t      }\n\t      input[prop] = result;\n\t    }\n\t  }\n\t  return input;\n\t}\n\t\n\t/**\n\t * Compares two strings first based on length and then lexicographically.\n\t *\n\t * @param a the first string.\n\t * @param b the second string.\n\t *\n\t * @return -1 if a < b, 1 if a > b, 0 if a == b.\n\t */\n\tfunction _compareShortestLeast(a, b) {\n\t  if(a.length < b.length) {\n\t    return -1;\n\t  }\n\t  if(b.length < a.length) {\n\t    return 1;\n\t  }\n\t  if(a === b) {\n\t    return 0;\n\t  }\n\t  return (a < b) ? -1 : 1;\n\t}\n\t\n\t/**\n\t * Picks the preferred compaction term from the given inverse context entry.\n\t *\n\t * @param activeCtx the active context.\n\t * @param iri the IRI to pick the term for.\n\t * @param value the value to pick the term for.\n\t * @param containers the preferred containers.\n\t * @param typeOrLanguage either '@type' or '@language'.\n\t * @param typeOrLanguageValue the preferred value for '@type' or '@language'.\n\t *\n\t * @return the preferred term.\n\t */\n\tfunction _selectTerm(\n\t  activeCtx, iri, value, containers, typeOrLanguage, typeOrLanguageValue) {\n\t  if(typeOrLanguageValue === null) {\n\t    typeOrLanguageValue = '@null';\n\t  }\n\t\n\t  // preferences for the value of @type or @language\n\t  var prefs = [];\n\t\n\t  // determine prefs for @id based on whether or not value compacts to a term\n\t  if((typeOrLanguageValue === '@id' || typeOrLanguageValue === '@reverse') &&\n\t    _isSubjectReference(value)) {\n\t    // prefer @reverse first\n\t    if(typeOrLanguageValue === '@reverse') {\n\t      prefs.push('@reverse');\n\t    }\n\t    // try to compact value to a term\n\t    var term = _compactIri(activeCtx, value['@id'], null, {vocab: true});\n\t    if(term in activeCtx.mappings &&\n\t      activeCtx.mappings[term] &&\n\t      activeCtx.mappings[term]['@id'] === value['@id']) {\n\t      // prefer @vocab\n\t      prefs.push.apply(prefs, ['@vocab', '@id']);\n\t    } else {\n\t      // prefer @id\n\t      prefs.push.apply(prefs, ['@id', '@vocab']);\n\t    }\n\t  } else {\n\t    prefs.push(typeOrLanguageValue);\n\t  }\n\t  prefs.push('@none');\n\t\n\t  var containerMap = activeCtx.inverse[iri];\n\t  for(var ci = 0; ci < containers.length; ++ci) {\n\t    // if container not available in the map, continue\n\t    var container = containers[ci];\n\t    if(!(container in containerMap)) {\n\t      continue;\n\t    }\n\t\n\t    var typeOrLanguageValueMap = containerMap[container][typeOrLanguage];\n\t    for(var pi = 0; pi < prefs.length; ++pi) {\n\t      // if type/language option not available in the map, continue\n\t      var pref = prefs[pi];\n\t      if(!(pref in typeOrLanguageValueMap)) {\n\t        continue;\n\t      }\n\t\n\t      // select term\n\t      return typeOrLanguageValueMap[pref];\n\t    }\n\t  }\n\t\n\t  return null;\n\t}\n\t\n\t/**\n\t * Compacts an IRI or keyword into a term or prefix if it can be. If the\n\t * IRI has an associated value it may be passed.\n\t *\n\t * @param activeCtx the active context to use.\n\t * @param iri the IRI to compact.\n\t * @param value the value to check or null.\n\t * @param relativeTo options for how to compact IRIs:\n\t *          vocab: true to split after @vocab, false not to.\n\t * @param reverse true if a reverse property is being compacted, false if not.\n\t *\n\t * @return the compacted term, prefix, keyword alias, or the original IRI.\n\t */\n\tfunction _compactIri(activeCtx, iri, value, relativeTo, reverse) {\n\t  // can't compact null\n\t  if(iri === null) {\n\t    return iri;\n\t  }\n\t\n\t  // default value and parent to null\n\t  if(_isUndefined(value)) {\n\t    value = null;\n\t  }\n\t  // default reverse to false\n\t  if(_isUndefined(reverse)) {\n\t    reverse = false;\n\t  }\n\t  relativeTo = relativeTo || {};\n\t\n\t  var inverseCtx = activeCtx.getInverse();\n\t\n\t  // if term is a keyword, it can only be compacted to a simple alias\n\t  if(_isKeyword(iri)) {\n\t    if(iri in inverseCtx) {\n\t      return inverseCtx[iri]['@none']['@type']['@none'];\n\t    }\n\t    return iri;\n\t  }\n\t\n\t  // use inverse context to pick a term if iri is relative to vocab\n\t  if(relativeTo.vocab && iri in inverseCtx) {\n\t    var defaultLanguage = activeCtx['@language'] || '@none';\n\t\n\t    // prefer @index if available in value\n\t    var containers = [];\n\t    if(_isObject(value) && '@index' in value) {\n\t      containers.push('@index');\n\t    }\n\t\n\t    // defaults for term selection based on type/language\n\t    var typeOrLanguage = '@language';\n\t    var typeOrLanguageValue = '@null';\n\t\n\t    if(reverse) {\n\t      typeOrLanguage = '@type';\n\t      typeOrLanguageValue = '@reverse';\n\t      containers.push('@set');\n\t    } else if(_isList(value)) {\n\t      // choose the most specific term that works for all elements in @list\n\t      // only select @list containers if @index is NOT in value\n\t      if(!('@index' in value)) {\n\t        containers.push('@list');\n\t      }\n\t      var list = value['@list'];\n\t      var commonLanguage = (list.length === 0) ? defaultLanguage : null;\n\t      var commonType = null;\n\t      for(var i = 0; i < list.length; ++i) {\n\t        var item = list[i];\n\t        var itemLanguage = '@none';\n\t        var itemType = '@none';\n\t        if(_isValue(item)) {\n\t          if('@language' in item) {\n\t            itemLanguage = item['@language'];\n\t          } else if('@type' in item) {\n\t            itemType = item['@type'];\n\t          } else {\n\t            // plain literal\n\t            itemLanguage = '@null';\n\t          }\n\t        } else {\n\t          itemType = '@id';\n\t        }\n\t        if(commonLanguage === null) {\n\t          commonLanguage = itemLanguage;\n\t        } else if(itemLanguage !== commonLanguage && _isValue(item)) {\n\t          commonLanguage = '@none';\n\t        }\n\t        if(commonType === null) {\n\t          commonType = itemType;\n\t        } else if(itemType !== commonType) {\n\t          commonType = '@none';\n\t        }\n\t        // there are different languages and types in the list, so choose\n\t        // the most generic term, no need to keep iterating the list\n\t        if(commonLanguage === '@none' && commonType === '@none') {\n\t          break;\n\t        }\n\t      }\n\t      commonLanguage = commonLanguage || '@none';\n\t      commonType = commonType || '@none';\n\t      if(commonType !== '@none') {\n\t        typeOrLanguage = '@type';\n\t        typeOrLanguageValue = commonType;\n\t      } else {\n\t        typeOrLanguageValue = commonLanguage;\n\t      }\n\t    } else {\n\t      if(_isValue(value)) {\n\t        if('@language' in value && !('@index' in value)) {\n\t          containers.push('@language');\n\t          typeOrLanguageValue = value['@language'];\n\t        } else if('@type' in value) {\n\t          typeOrLanguage = '@type';\n\t          typeOrLanguageValue = value['@type'];\n\t        }\n\t      } else {\n\t        typeOrLanguage = '@type';\n\t        typeOrLanguageValue = '@id';\n\t      }\n\t      containers.push('@set');\n\t    }\n\t\n\t    // do term selection\n\t    containers.push('@none');\n\t    var term = _selectTerm(\n\t      activeCtx, iri, value, containers, typeOrLanguage, typeOrLanguageValue);\n\t    if(term !== null) {\n\t      return term;\n\t    }\n\t  }\n\t\n\t  // no term match, use @vocab if available\n\t  if(relativeTo.vocab) {\n\t    if('@vocab' in activeCtx) {\n\t      // determine if vocab is a prefix of the iri\n\t      var vocab = activeCtx['@vocab'];\n\t      if(iri.indexOf(vocab) === 0 && iri !== vocab) {\n\t        // use suffix as relative iri if it is not a term in the active context\n\t        var suffix = iri.substr(vocab.length);\n\t        if(!(suffix in activeCtx.mappings)) {\n\t          return suffix;\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  // no term or @vocab match, check for possible CURIEs\n\t  var choice = null;\n\t  var idx = 0;\n\t  var partialMatches = [];\n\t  var iriMap = activeCtx.fastCurieMap;\n\t  // check for partial matches of against `iri`, which means look until\n\t  // iri.length - 1, not full length\n\t  var maxPartialLength = iri.length - 1;\n\t  for(; idx < maxPartialLength && iri[idx] in iriMap; ++idx) {\n\t    iriMap = iriMap[iri[idx]];\n\t    if('' in iriMap) {\n\t      partialMatches.push(iriMap[''][0]);\n\t    }\n\t  }\n\t  // check partial matches in reverse order to prefer longest ones first\n\t  for(var i = partialMatches.length - 1; i >= 0; --i) {\n\t    var entry = partialMatches[i];\n\t    var terms = entry.terms;\n\t    for(var ti = 0; ti < terms.length; ++ti) {\n\t      // a CURIE is usable if:\n\t      // 1. it has no mapping, OR\n\t      // 2. value is null, which means we're not compacting an @value, AND\n\t      //   the mapping matches the IRI\n\t      var curie = terms[ti] + ':' + iri.substr(entry.iri.length);\n\t      var isUsableCurie = (!(curie in activeCtx.mappings) ||\n\t        (value === null && activeCtx.mappings[curie]['@id'] === iri));\n\t\n\t      // select curie if it is shorter or the same length but lexicographically\n\t      // less than the current choice\n\t      if(isUsableCurie && (choice === null ||\n\t        _compareShortestLeast(curie, choice) < 0)) {\n\t        choice = curie;\n\t      }\n\t    }\n\t  }\n\t\n\t  // return chosen curie\n\t  if(choice !== null) {\n\t    return choice;\n\t  }\n\t\n\t  // compact IRI relative to base\n\t  if(!relativeTo.vocab) {\n\t    return _removeBase(activeCtx['@base'], iri);\n\t  }\n\t\n\t  // return IRI as is\n\t  return iri;\n\t}\n\t\n\t/**\n\t * Performs value compaction on an object with '@value' or '@id' as the only\n\t * property.\n\t *\n\t * @param activeCtx the active context.\n\t * @param activeProperty the active property that points to the value.\n\t * @param value the value to compact.\n\t *\n\t * @return the compaction result.\n\t */\n\tfunction _compactValue(activeCtx, activeProperty, value) {\n\t  // value is a @value\n\t  if(_isValue(value)) {\n\t    // get context rules\n\t    var type = jsonld.getContextValue(activeCtx, activeProperty, '@type');\n\t    var language = jsonld.getContextValue(\n\t      activeCtx, activeProperty, '@language');\n\t    var container = jsonld.getContextValue(\n\t      activeCtx, activeProperty, '@container');\n\t\n\t    // whether or not the value has an @index that must be preserved\n\t    var preserveIndex = (('@index' in value) &&\n\t      container !== '@index');\n\t\n\t    // if there's no @index to preserve ...\n\t    if(!preserveIndex) {\n\t      // matching @type or @language specified in context, compact value\n\t      if(value['@type'] === type || value['@language'] === language) {\n\t        return value['@value'];\n\t      }\n\t    }\n\t\n\t    // return just the value of @value if all are true:\n\t    // 1. @value is the only key or @index isn't being preserved\n\t    // 2. there is no default language or @value is not a string or\n\t    //   the key has a mapping with a null @language\n\t    var keyCount = Object.keys(value).length;\n\t    var isValueOnlyKey = (keyCount === 1 ||\n\t      (keyCount === 2 && ('@index' in value) && !preserveIndex));\n\t    var hasDefaultLanguage = ('@language' in activeCtx);\n\t    var isValueString = _isString(value['@value']);\n\t    var hasNullMapping = (activeCtx.mappings[activeProperty] &&\n\t      activeCtx.mappings[activeProperty]['@language'] === null);\n\t    if(isValueOnlyKey &&\n\t      (!hasDefaultLanguage || !isValueString || hasNullMapping)) {\n\t      return value['@value'];\n\t    }\n\t\n\t    var rval = {};\n\t\n\t    // preserve @index\n\t    if(preserveIndex) {\n\t      rval[_compactIri(activeCtx, '@index')] = value['@index'];\n\t    }\n\t\n\t    if('@type' in value) {\n\t      // compact @type IRI\n\t      rval[_compactIri(activeCtx, '@type')] = _compactIri(\n\t        activeCtx, value['@type'], null, {vocab: true});\n\t    } else if('@language' in value) {\n\t      // alias @language\n\t      rval[_compactIri(activeCtx, '@language')] = value['@language'];\n\t    }\n\t\n\t    // alias @value\n\t    rval[_compactIri(activeCtx, '@value')] = value['@value'];\n\t\n\t    return rval;\n\t  }\n\t\n\t  // value is a subject reference\n\t  var expandedProperty = _expandIri(activeCtx, activeProperty, {vocab: true});\n\t  var type = jsonld.getContextValue(activeCtx, activeProperty, '@type');\n\t  var compacted = _compactIri(\n\t    activeCtx, value['@id'], null, {vocab: type === '@vocab'});\n\t\n\t  // compact to scalar\n\t  if(type === '@id' || type === '@vocab' || expandedProperty === '@graph') {\n\t    return compacted;\n\t  }\n\t\n\t  var rval = {};\n\t  rval[_compactIri(activeCtx, '@id')] = compacted;\n\t  return rval;\n\t}\n\t\n\t/**\n\t * Creates a term definition during context processing.\n\t *\n\t * @param activeCtx the current active context.\n\t * @param localCtx the local context being processed.\n\t * @param term the term in the local context to define the mapping for.\n\t * @param defined a map of defining/defined keys to detect cycles and prevent\n\t *          double definitions.\n\t */\n\tfunction _createTermDefinition(activeCtx, localCtx, term, defined) {\n\t  if(term in defined) {\n\t    // term already defined\n\t    if(defined[term]) {\n\t      return;\n\t    }\n\t    // cycle detected\n\t    throw new JsonLdError(\n\t      'Cyclical context definition detected.',\n\t      'jsonld.CyclicalContext',\n\t      {code: 'cyclic IRI mapping', context: localCtx, term: term});\n\t  }\n\t\n\t  // now defining term\n\t  defined[term] = false;\n\t\n\t  if(_isKeyword(term)) {\n\t    throw new JsonLdError(\n\t      'Invalid JSON-LD syntax; keywords cannot be overridden.',\n\t      'jsonld.SyntaxError',\n\t      {code: 'keyword redefinition', context: localCtx, term: term});\n\t  }\n\t\n\t  if(term === '') {\n\t    throw new JsonLdError(\n\t      'Invalid JSON-LD syntax; a term cannot be an empty string.',\n\t      'jsonld.SyntaxError',\n\t      {code: 'invalid term definition', context: localCtx});\n\t  }\n\t\n\t  // remove old mapping\n\t  if(activeCtx.mappings[term]) {\n\t    delete activeCtx.mappings[term];\n\t  }\n\t\n\t  // get context term value\n\t  var value = localCtx[term];\n\t\n\t  // clear context entry\n\t  if(value === null || (_isObject(value) && value['@id'] === null)) {\n\t    activeCtx.mappings[term] = null;\n\t    defined[term] = true;\n\t    return;\n\t  }\n\t\n\t  // convert short-hand value to object w/@id\n\t  if(_isString(value)) {\n\t    value = {'@id': value};\n\t  }\n\t\n\t  if(!_isObject(value)) {\n\t    throw new JsonLdError(\n\t      'Invalid JSON-LD syntax; @context property values must be ' +\n\t      'strings or objects.',\n\t      'jsonld.SyntaxError',\n\t      {code: 'invalid term definition', context: localCtx});\n\t  }\n\t\n\t  // create new mapping\n\t  var mapping = activeCtx.mappings[term] = {};\n\t  mapping.reverse = false;\n\t\n\t  if('@reverse' in value) {\n\t    if('@id' in value) {\n\t      throw new JsonLdError(\n\t        'Invalid JSON-LD syntax; a @reverse term definition must not ' +\n\t        'contain @id.', 'jsonld.SyntaxError',\n\t        {code: 'invalid reverse property', context: localCtx});\n\t    }\n\t    var reverse = value['@reverse'];\n\t    if(!_isString(reverse)) {\n\t      throw new JsonLdError(\n\t        'Invalid JSON-LD syntax; a @context @reverse value must be a string.',\n\t        'jsonld.SyntaxError', {code: 'invalid IRI mapping', context: localCtx});\n\t    }\n\t\n\t    // expand and add @id mapping\n\t    var id = _expandIri(\n\t      activeCtx, reverse, {vocab: true, base: false}, localCtx, defined);\n\t    if(!_isAbsoluteIri(id)) {\n\t      throw new JsonLdError(\n\t        'Invalid JSON-LD syntax; a @context @reverse value must be an ' +\n\t        'absolute IRI or a blank node identifier.',\n\t        'jsonld.SyntaxError', {code: 'invalid IRI mapping', context: localCtx});\n\t    }\n\t    mapping['@id'] = id;\n\t    mapping.reverse = true;\n\t  } else if('@id' in value) {\n\t    var id = value['@id'];\n\t    if(!_isString(id)) {\n\t      throw new JsonLdError(\n\t        'Invalid JSON-LD syntax; a @context @id value must be an array ' +\n\t        'of strings or a string.',\n\t        'jsonld.SyntaxError', {code: 'invalid IRI mapping', context: localCtx});\n\t    }\n\t    if(id !== term) {\n\t      // expand and add @id mapping\n\t      id = _expandIri(\n\t        activeCtx, id, {vocab: true, base: false}, localCtx, defined);\n\t      if(!_isAbsoluteIri(id) && !_isKeyword(id)) {\n\t        throw new JsonLdError(\n\t          'Invalid JSON-LD syntax; a @context @id value must be an ' +\n\t          'absolute IRI, a blank node identifier, or a keyword.',\n\t          'jsonld.SyntaxError',\n\t          {code: 'invalid IRI mapping', context: localCtx});\n\t      }\n\t      mapping['@id'] = id;\n\t    }\n\t  }\n\t\n\t  // always compute whether term has a colon as an optimization for\n\t  // _compactIri\n\t  var colon = term.indexOf(':');\n\t  mapping._termHasColon = (colon !== -1);\n\t\n\t  if(!('@id' in mapping)) {\n\t    // see if the term has a prefix\n\t    if(mapping._termHasColon) {\n\t      var prefix = term.substr(0, colon);\n\t      if(prefix in localCtx) {\n\t        // define parent prefix\n\t        _createTermDefinition(activeCtx, localCtx, prefix, defined);\n\t      }\n\t\n\t      if(activeCtx.mappings[prefix]) {\n\t        // set @id based on prefix parent\n\t        var suffix = term.substr(colon + 1);\n\t        mapping['@id'] = activeCtx.mappings[prefix]['@id'] + suffix;\n\t      } else {\n\t        // term is an absolute IRI\n\t        mapping['@id'] = term;\n\t      }\n\t    } else {\n\t      // non-IRIs *must* define @ids if @vocab is not available\n\t      if(!('@vocab' in activeCtx)) {\n\t        throw new JsonLdError(\n\t          'Invalid JSON-LD syntax; @context terms must define an @id.',\n\t          'jsonld.SyntaxError',\n\t          {code: 'invalid IRI mapping', context: localCtx, term: term});\n\t      }\n\t      // prepend vocab to term\n\t      mapping['@id'] = activeCtx['@vocab'] + term;\n\t    }\n\t  }\n\t\n\t  // IRI mapping now defined\n\t  defined[term] = true;\n\t\n\t  if('@type' in value) {\n\t    var type = value['@type'];\n\t    if(!_isString(type)) {\n\t      throw new JsonLdError(\n\t        'Invalid JSON-LD syntax; an @context @type values must be a string.',\n\t        'jsonld.SyntaxError',\n\t        {code: 'invalid type mapping', context: localCtx});\n\t    }\n\t\n\t    if(type !== '@id' && type !== '@vocab') {\n\t      // expand @type to full IRI\n\t      type = _expandIri(\n\t        activeCtx, type, {vocab: true, base: false}, localCtx, defined);\n\t      if(!_isAbsoluteIri(type)) {\n\t        throw new JsonLdError(\n\t          'Invalid JSON-LD syntax; an @context @type value must be an ' +\n\t          'absolute IRI.',\n\t          'jsonld.SyntaxError',\n\t          {code: 'invalid type mapping', context: localCtx});\n\t      }\n\t      if(type.indexOf('_:') === 0) {\n\t        throw new JsonLdError(\n\t          'Invalid JSON-LD syntax; an @context @type values must be an IRI, ' +\n\t          'not a blank node identifier.',\n\t          'jsonld.SyntaxError',\n\t          {code: 'invalid type mapping', context: localCtx});\n\t      }\n\t    }\n\t\n\t    // add @type to mapping\n\t    mapping['@type'] = type;\n\t  }\n\t\n\t  if('@container' in value) {\n\t    var container = value['@container'];\n\t    if(container !== '@list' && container !== '@set' &&\n\t      container !== '@index' && container !== '@language') {\n\t      throw new JsonLdError(\n\t        'Invalid JSON-LD syntax; @context @container value must be ' +\n\t        'one of the following: @list, @set, @index, or @language.',\n\t        'jsonld.SyntaxError',\n\t        {code: 'invalid container mapping', context: localCtx});\n\t    }\n\t    if(mapping.reverse && container !== '@index' && container !== '@set' &&\n\t      container !== null) {\n\t      throw new JsonLdError(\n\t        'Invalid JSON-LD syntax; @context @container value for a @reverse ' +\n\t        'type definition must be @index or @set.', 'jsonld.SyntaxError',\n\t        {code: 'invalid reverse property', context: localCtx});\n\t    }\n\t\n\t    // add @container to mapping\n\t    mapping['@container'] = container;\n\t  }\n\t\n\t  if('@language' in value && !('@type' in value)) {\n\t    var language = value['@language'];\n\t    if(language !== null && !_isString(language)) {\n\t      throw new JsonLdError(\n\t        'Invalid JSON-LD syntax; @context @language value must be ' +\n\t        'a string or null.', 'jsonld.SyntaxError',\n\t        {code: 'invalid language mapping', context: localCtx});\n\t    }\n\t\n\t    // add @language to mapping\n\t    if(language !== null) {\n\t      language = language.toLowerCase();\n\t    }\n\t    mapping['@language'] = language;\n\t  }\n\t\n\t  // disallow aliasing @context and @preserve\n\t  var id = mapping['@id'];\n\t  if(id === '@context' || id === '@preserve') {\n\t    throw new JsonLdError(\n\t      'Invalid JSON-LD syntax; @context and @preserve cannot be aliased.',\n\t      'jsonld.SyntaxError', {code: 'invalid keyword alias', context: localCtx});\n\t  }\n\t}\n\t\n\t/**\n\t * Expands a string to a full IRI. The string may be a term, a prefix, a\n\t * relative IRI, or an absolute IRI. The associated absolute IRI will be\n\t * returned.\n\t *\n\t * @param activeCtx the current active context.\n\t * @param value the string to expand.\n\t * @param relativeTo options for how to resolve relative IRIs:\n\t *          base: true to resolve against the base IRI, false not to.\n\t *          vocab: true to concatenate after @vocab, false not to.\n\t * @param localCtx the local context being processed (only given if called\n\t *          during context processing).\n\t * @param defined a map for tracking cycles in context definitions (only given\n\t *          if called during context processing).\n\t *\n\t * @return the expanded value.\n\t */\n\tfunction _expandIri(activeCtx, value, relativeTo, localCtx, defined) {\n\t  // already expanded\n\t  if(value === null || _isKeyword(value)) {\n\t    return value;\n\t  }\n\t\n\t  // ensure value is interpreted as a string\n\t  value = String(value);\n\t\n\t  // define term dependency if not defined\n\t  if(localCtx && value in localCtx && defined[value] !== true) {\n\t    _createTermDefinition(activeCtx, localCtx, value, defined);\n\t  }\n\t\n\t  relativeTo = relativeTo || {};\n\t  if(relativeTo.vocab) {\n\t    var mapping = activeCtx.mappings[value];\n\t\n\t    // value is explicitly ignored with a null mapping\n\t    if(mapping === null) {\n\t      return null;\n\t    }\n\t\n\t    if(mapping) {\n\t      // value is a term\n\t      return mapping['@id'];\n\t    }\n\t  }\n\t\n\t  // split value into prefix:suffix\n\t  var colon = value.indexOf(':');\n\t  if(colon !== -1) {\n\t    var prefix = value.substr(0, colon);\n\t    var suffix = value.substr(colon + 1);\n\t\n\t    // do not expand blank nodes (prefix of '_') or already-absolute\n\t    // IRIs (suffix of '//')\n\t    if(prefix === '_' || suffix.indexOf('//') === 0) {\n\t      return value;\n\t    }\n\t\n\t    // prefix dependency not defined, define it\n\t    if(localCtx && prefix in localCtx) {\n\t      _createTermDefinition(activeCtx, localCtx, prefix, defined);\n\t    }\n\t\n\t    // use mapping if prefix is defined\n\t    var mapping = activeCtx.mappings[prefix];\n\t    if(mapping) {\n\t      return mapping['@id'] + suffix;\n\t    }\n\t\n\t    // already absolute IRI\n\t    return value;\n\t  }\n\t\n\t  // prepend vocab\n\t  if(relativeTo.vocab && '@vocab' in activeCtx) {\n\t    return activeCtx['@vocab'] + value;\n\t  }\n\t\n\t  // prepend base\n\t  var rval = value;\n\t  if(relativeTo.base) {\n\t    rval = jsonld.prependBase(activeCtx['@base'], rval);\n\t  }\n\t\n\t  return rval;\n\t}\n\t\n\tfunction _prependBase(base, iri) {\n\t  // skip IRI processing\n\t  if(base === null) {\n\t    return iri;\n\t  }\n\t  // already an absolute IRI\n\t  if(iri.indexOf(':') !== -1) {\n\t    return iri;\n\t  }\n\t\n\t  // parse base if it is a string\n\t  if(_isString(base)) {\n\t    base = jsonld.url.parse(base || '');\n\t  }\n\t\n\t  // parse given IRI\n\t  var rel = jsonld.url.parse(iri);\n\t\n\t  // per RFC3986 5.2.2\n\t  var transform = {\n\t    protocol: base.protocol || ''\n\t  };\n\t\n\t  if(rel.authority !== null) {\n\t    transform.authority = rel.authority;\n\t    transform.path = rel.path;\n\t    transform.query = rel.query;\n\t  } else {\n\t    transform.authority = base.authority;\n\t\n\t    if(rel.path === '') {\n\t      transform.path = base.path;\n\t      if(rel.query !== null) {\n\t        transform.query = rel.query;\n\t      } else {\n\t        transform.query = base.query;\n\t      }\n\t    } else {\n\t      if(rel.path.indexOf('/') === 0) {\n\t        // IRI represents an absolute path\n\t        transform.path = rel.path;\n\t      } else {\n\t        // merge paths\n\t        var path = base.path;\n\t\n\t        // append relative path to the end of the last directory from base\n\t        if(rel.path !== '') {\n\t          path = path.substr(0, path.lastIndexOf('/') + 1);\n\t          if(path.length > 0 && path.substr(-1) !== '/') {\n\t            path += '/';\n\t          }\n\t          path += rel.path;\n\t        }\n\t\n\t        transform.path = path;\n\t      }\n\t      transform.query = rel.query;\n\t    }\n\t  }\n\t\n\t  // remove slashes and dots in path\n\t  transform.path = _removeDotSegments(transform.path, !!transform.authority);\n\t\n\t  // construct URL\n\t  var rval = transform.protocol;\n\t  if(transform.authority !== null) {\n\t    rval += '//' + transform.authority;\n\t  }\n\t  rval += transform.path;\n\t  if(transform.query !== null) {\n\t    rval += '?' + transform.query;\n\t  }\n\t  if(rel.fragment !== null) {\n\t    rval += '#' + rel.fragment;\n\t  }\n\t\n\t  // handle empty base\n\t  if(rval === '') {\n\t    rval = './';\n\t  }\n\t\n\t  return rval;\n\t}\n\t\n\t/**\n\t * Removes a base IRI from the given absolute IRI.\n\t *\n\t * @param base the base IRI.\n\t * @param iri the absolute IRI.\n\t *\n\t * @return the relative IRI if relative to base, otherwise the absolute IRI.\n\t */\n\tfunction _removeBase(base, iri) {\n\t  // skip IRI processing\n\t  if(base === null) {\n\t    return iri;\n\t  }\n\t\n\t  if(_isString(base)) {\n\t    base = jsonld.url.parse(base || '');\n\t  }\n\t\n\t  // establish base root\n\t  var root = '';\n\t  if(base.href !== '') {\n\t    root += (base.protocol || '') + '//' + (base.authority || '');\n\t  } else if(iri.indexOf('//')) {\n\t    // support network-path reference with empty base\n\t    root += '//';\n\t  }\n\t\n\t  // IRI not relative to base\n\t  if(iri.indexOf(root) !== 0) {\n\t    return iri;\n\t  }\n\t\n\t  // remove root from IRI and parse remainder\n\t  var rel = jsonld.url.parse(iri.substr(root.length));\n\t\n\t  // remove path segments that match (do not remove last segment unless there\n\t  // is a hash or query)\n\t  var baseSegments = base.normalizedPath.split('/');\n\t  var iriSegments = rel.normalizedPath.split('/');\n\t  var last = (rel.fragment || rel.query) ? 0 : 1;\n\t  while(baseSegments.length > 0 && iriSegments.length > last) {\n\t    if(baseSegments[0] !== iriSegments[0]) {\n\t      break;\n\t    }\n\t    baseSegments.shift();\n\t    iriSegments.shift();\n\t  }\n\t\n\t  // use '../' for each non-matching base segment\n\t  var rval = '';\n\t  if(baseSegments.length > 0) {\n\t    // don't count the last segment (if it ends with '/' last path doesn't\n\t    // count and if it doesn't end with '/' it isn't a path)\n\t    baseSegments.pop();\n\t    for(var i = 0; i < baseSegments.length; ++i) {\n\t      rval += '../';\n\t    }\n\t  }\n\t\n\t  // prepend remaining segments\n\t  rval += iriSegments.join('/');\n\t\n\t  // add query and hash\n\t  if(rel.query !== null) {\n\t    rval += '?' + rel.query;\n\t  }\n\t  if(rel.fragment !== null) {\n\t    rval += '#' + rel.fragment;\n\t  }\n\t\n\t  // handle empty base\n\t  if(rval === '') {\n\t    rval = './';\n\t  }\n\t\n\t  return rval;\n\t}\n\t\n\t/**\n\t * Gets the initial context.\n\t *\n\t * @param options the options to use:\n\t *          [base] the document base IRI.\n\t *\n\t * @return the initial context.\n\t */\n\tfunction _getInitialContext(options) {\n\t  var base = jsonld.url.parse(options.base || '');\n\t  return {\n\t    '@base': base,\n\t    mappings: {},\n\t    inverse: null,\n\t    getInverse: _createInverseContext,\n\t    clone: _cloneActiveContext\n\t  };\n\t\n\t  /**\n\t   * Generates an inverse context for use in the compaction algorithm, if\n\t   * not already generated for the given active context.\n\t   *\n\t   * @return the inverse context.\n\t   */\n\t  function _createInverseContext() {\n\t    var activeCtx = this;\n\t\n\t    // lazily create inverse\n\t    if(activeCtx.inverse) {\n\t      return activeCtx.inverse;\n\t    }\n\t    var inverse = activeCtx.inverse = {};\n\t\n\t    // variables for building fast CURIE map\n\t    var fastCurieMap = activeCtx.fastCurieMap = {};\n\t    var irisToTerms = {};\n\t\n\t    // handle default language\n\t    var defaultLanguage = activeCtx['@language'] || '@none';\n\t\n\t    // create term selections for each mapping in the context, ordered by\n\t    // shortest and then lexicographically least\n\t    var mappings = activeCtx.mappings;\n\t    var terms = Object.keys(mappings).sort(_compareShortestLeast);\n\t    for(var i = 0; i < terms.length; ++i) {\n\t      var term = terms[i];\n\t      var mapping = mappings[term];\n\t      if(mapping === null) {\n\t        continue;\n\t      }\n\t\n\t      var container = mapping['@container'] || '@none';\n\t\n\t      // iterate over every IRI in the mapping\n\t      var ids = mapping['@id'];\n\t      if(!_isArray(ids)) {\n\t        ids = [ids];\n\t      }\n\t      for(var ii = 0; ii < ids.length; ++ii) {\n\t        var iri = ids[ii];\n\t        var entry = inverse[iri];\n\t        var isKeyword = _isKeyword(iri);\n\t\n\t        if(!entry) {\n\t          // initialize entry\n\t          inverse[iri] = entry = {};\n\t\n\t          if(!isKeyword && !mapping._termHasColon) {\n\t            // init IRI to term map and fast CURIE prefixes\n\t            irisToTerms[iri] = [term];\n\t            var fastCurieEntry = {iri: iri, terms: irisToTerms[iri]};\n\t            if(iri[0] in fastCurieMap) {\n\t              fastCurieMap[iri[0]].push(fastCurieEntry);\n\t            } else {\n\t              fastCurieMap[iri[0]] = [fastCurieEntry];\n\t            }\n\t          }\n\t        } else if(!isKeyword && !mapping._termHasColon) {\n\t          // add IRI to term match\n\t          irisToTerms[iri].push(term);\n\t        }\n\t\n\t        // add new entry\n\t        if(!entry[container]) {\n\t          entry[container] = {\n\t            '@language': {},\n\t            '@type': {}\n\t          };\n\t        }\n\t        entry = entry[container];\n\t\n\t        if(mapping.reverse) {\n\t          // term is preferred for values using @reverse\n\t          _addPreferredTerm(mapping, term, entry['@type'], '@reverse');\n\t        } else if('@type' in mapping) {\n\t          // term is preferred for values using specific type\n\t          _addPreferredTerm(mapping, term, entry['@type'], mapping['@type']);\n\t        } else if('@language' in mapping) {\n\t          // term is preferred for values using specific language\n\t          var language = mapping['@language'] || '@null';\n\t          _addPreferredTerm(mapping, term, entry['@language'], language);\n\t        } else {\n\t          // term is preferred for values w/default language or no type and\n\t          // no language\n\t          // add an entry for the default language\n\t          _addPreferredTerm(mapping, term, entry['@language'], defaultLanguage);\n\t\n\t          // add entries for no type and no language\n\t          _addPreferredTerm(mapping, term, entry['@type'], '@none');\n\t          _addPreferredTerm(mapping, term, entry['@language'], '@none');\n\t        }\n\t      }\n\t    }\n\t\n\t    // build fast CURIE map\n\t    for(var key in fastCurieMap) {\n\t      _buildIriMap(fastCurieMap, key, 1);\n\t    }\n\t\n\t    return inverse;\n\t  }\n\t\n\t  /**\n\t   * Runs a recursive algorithm to build a lookup map for quickly finding\n\t   * potential CURIEs.\n\t   *\n\t   * @param iriMap the map to build.\n\t   * @param key the current key in the map to work on.\n\t   * @param idx the index into the IRI to compare.\n\t   */\n\t  function _buildIriMap(iriMap, key, idx) {\n\t    var entries = iriMap[key];\n\t    var next = iriMap[key] = {};\n\t\n\t    var iri;\n\t    var letter;\n\t    for(var i = 0; i < entries.length; ++i) {\n\t      iri = entries[i].iri;\n\t      if(idx >= iri.length) {\n\t        letter = '';\n\t      } else {\n\t        letter = iri[idx];\n\t      }\n\t      if(letter in next) {\n\t        next[letter].push(entries[i]);\n\t      } else {\n\t        next[letter] = [entries[i]];\n\t      }\n\t    }\n\t\n\t    for(var key in next) {\n\t      if(key === '') {\n\t        continue;\n\t      }\n\t      _buildIriMap(next, key, idx + 1);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Adds the term for the given entry if not already added.\n\t   *\n\t   * @param mapping the term mapping.\n\t   * @param term the term to add.\n\t   * @param entry the inverse context typeOrLanguage entry to add to.\n\t   * @param typeOrLanguageValue the key in the entry to add to.\n\t   */\n\t  function _addPreferredTerm(mapping, term, entry, typeOrLanguageValue) {\n\t    if(!(typeOrLanguageValue in entry)) {\n\t      entry[typeOrLanguageValue] = term;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Clones an active context, creating a child active context.\n\t   *\n\t   * @return a clone (child) of the active context.\n\t   */\n\t  function _cloneActiveContext() {\n\t    var child = {};\n\t    child['@base'] = this['@base'];\n\t    child.mappings = _clone(this.mappings);\n\t    child.clone = this.clone;\n\t    child.inverse = null;\n\t    child.getInverse = this.getInverse;\n\t    if('@language' in this) {\n\t      child['@language'] = this['@language'];\n\t    }\n\t    if('@vocab' in this) {\n\t      child['@vocab'] = this['@vocab'];\n\t    }\n\t    return child;\n\t  }\n\t}\n\t\n\t/**\n\t * Returns whether or not the given value is a keyword.\n\t *\n\t * @param v the value to check.\n\t *\n\t * @return true if the value is a keyword, false if not.\n\t */\n\tfunction _isKeyword(v) {\n\t  if(!_isString(v)) {\n\t    return false;\n\t  }\n\t  switch(v) {\n\t  case '@base':\n\t  case '@context':\n\t  case '@container':\n\t  case '@default':\n\t  case '@embed':\n\t  case '@explicit':\n\t  case '@graph':\n\t  case '@id':\n\t  case '@index':\n\t  case '@language':\n\t  case '@list':\n\t  case '@omitDefault':\n\t  case '@preserve':\n\t  case '@requireAll':\n\t  case '@reverse':\n\t  case '@set':\n\t  case '@type':\n\t  case '@value':\n\t  case '@vocab':\n\t    return true;\n\t  }\n\t  return false;\n\t}\n\t\n\t/**\n\t * Returns true if the given value is an Object.\n\t *\n\t * @param v the value to check.\n\t *\n\t * @return true if the value is an Object, false if not.\n\t */\n\tfunction _isObject(v) {\n\t  return (Object.prototype.toString.call(v) === '[object Object]');\n\t}\n\t\n\t/**\n\t * Returns true if the given value is an empty Object.\n\t *\n\t * @param v the value to check.\n\t *\n\t * @return true if the value is an empty Object, false if not.\n\t */\n\tfunction _isEmptyObject(v) {\n\t  return _isObject(v) && Object.keys(v).length === 0;\n\t}\n\t\n\t/**\n\t * Returns true if the given value is an Array.\n\t *\n\t * @param v the value to check.\n\t *\n\t * @return true if the value is an Array, false if not.\n\t */\n\tfunction _isArray(v) {\n\t  return Array.isArray(v);\n\t}\n\t\n\t/**\n\t * Throws an exception if the given value is not a valid @type value.\n\t *\n\t * @param v the value to check.\n\t */\n\tfunction _validateTypeValue(v) {\n\t  // can be a string or an empty object\n\t  if(_isString(v) || _isEmptyObject(v)) {\n\t    return;\n\t  }\n\t\n\t  // must be an array\n\t  var isValid = false;\n\t  if(_isArray(v)) {\n\t    // must contain only strings\n\t    isValid = true;\n\t    for(var i = 0; i < v.length; ++i) {\n\t      if(!(_isString(v[i]))) {\n\t        isValid = false;\n\t        break;\n\t      }\n\t    }\n\t  }\n\t\n\t  if(!isValid) {\n\t    throw new JsonLdError(\n\t      'Invalid JSON-LD syntax; \"@type\" value must a string, an array of ' +\n\t      'strings, or an empty object.', 'jsonld.SyntaxError',\n\t      {code: 'invalid type value', value: v});\n\t  }\n\t}\n\t\n\t/**\n\t * Returns true if the given value is a String.\n\t *\n\t * @param v the value to check.\n\t *\n\t * @return true if the value is a String, false if not.\n\t */\n\tfunction _isString(v) {\n\t  return (typeof v === 'string' ||\n\t    Object.prototype.toString.call(v) === '[object String]');\n\t}\n\t\n\t/**\n\t * Returns true if the given value is a Number.\n\t *\n\t * @param v the value to check.\n\t *\n\t * @return true if the value is a Number, false if not.\n\t */\n\tfunction _isNumber(v) {\n\t  return (typeof v === 'number' ||\n\t    Object.prototype.toString.call(v) === '[object Number]');\n\t}\n\t\n\t/**\n\t * Returns true if the given value is a double.\n\t *\n\t * @param v the value to check.\n\t *\n\t * @return true if the value is a double, false if not.\n\t */\n\tfunction _isDouble(v) {\n\t  return _isNumber(v) && String(v).indexOf('.') !== -1;\n\t}\n\t\n\t/**\n\t * Returns true if the given value is numeric.\n\t *\n\t * @param v the value to check.\n\t *\n\t * @return true if the value is numeric, false if not.\n\t */\n\tfunction _isNumeric(v) {\n\t  return !isNaN(parseFloat(v)) && isFinite(v);\n\t}\n\t\n\t/**\n\t * Returns true if the given value is a Boolean.\n\t *\n\t * @param v the value to check.\n\t *\n\t * @return true if the value is a Boolean, false if not.\n\t */\n\tfunction _isBoolean(v) {\n\t  return (typeof v === 'boolean' ||\n\t    Object.prototype.toString.call(v) === '[object Boolean]');\n\t}\n\t\n\t/**\n\t * Returns true if the given value is undefined.\n\t *\n\t * @param v the value to check.\n\t *\n\t * @return true if the value is undefined, false if not.\n\t */\n\tfunction _isUndefined(v) {\n\t  return (typeof v === 'undefined');\n\t}\n\t\n\t/**\n\t * Returns true if the given value is a subject with properties.\n\t *\n\t * @param v the value to check.\n\t *\n\t * @return true if the value is a subject with properties, false if not.\n\t */\n\tfunction _isSubject(v) {\n\t  // Note: A value is a subject if all of these hold true:\n\t  // 1. It is an Object.\n\t  // 2. It is not a @value, @set, or @list.\n\t  // 3. It has more than 1 key OR any existing key is not @id.\n\t  var rval = false;\n\t  if(_isObject(v) &&\n\t    !(('@value' in v) || ('@set' in v) || ('@list' in v))) {\n\t    var keyCount = Object.keys(v).length;\n\t    rval = (keyCount > 1 || !('@id' in v));\n\t  }\n\t  return rval;\n\t}\n\t\n\t/**\n\t * Returns true if the given value is a subject reference.\n\t *\n\t * @param v the value to check.\n\t *\n\t * @return true if the value is a subject reference, false if not.\n\t */\n\tfunction _isSubjectReference(v) {\n\t  // Note: A value is a subject reference if all of these hold true:\n\t  // 1. It is an Object.\n\t  // 2. It has a single key: @id.\n\t  return (_isObject(v) && Object.keys(v).length === 1 && ('@id' in v));\n\t}\n\t\n\t/**\n\t * Returns true if the given value is a @value.\n\t *\n\t * @param v the value to check.\n\t *\n\t * @return true if the value is a @value, false if not.\n\t */\n\tfunction _isValue(v) {\n\t  // Note: A value is a @value if all of these hold true:\n\t  // 1. It is an Object.\n\t  // 2. It has the @value property.\n\t  return _isObject(v) && ('@value' in v);\n\t}\n\t\n\t/**\n\t * Returns true if the given value is a @list.\n\t *\n\t * @param v the value to check.\n\t *\n\t * @return true if the value is a @list, false if not.\n\t */\n\tfunction _isList(v) {\n\t  // Note: A value is a @list if all of these hold true:\n\t  // 1. It is an Object.\n\t  // 2. It has the @list property.\n\t  return _isObject(v) && ('@list' in v);\n\t}\n\t\n\t/**\n\t * Returns true if the given value is a blank node.\n\t *\n\t * @param v the value to check.\n\t *\n\t * @return true if the value is a blank node, false if not.\n\t */\n\tfunction _isBlankNode(v) {\n\t  // Note: A value is a blank node if all of these hold true:\n\t  // 1. It is an Object.\n\t  // 2. If it has an @id key its value begins with '_:'.\n\t  // 3. It has no keys OR is not a @value, @set, or @list.\n\t  var rval = false;\n\t  if(_isObject(v)) {\n\t    if('@id' in v) {\n\t      rval = (v['@id'].indexOf('_:') === 0);\n\t    } else {\n\t      rval = (Object.keys(v).length === 0 ||\n\t        !(('@value' in v) || ('@set' in v) || ('@list' in v)));\n\t    }\n\t  }\n\t  return rval;\n\t}\n\t\n\t/**\n\t * Returns true if the given value is an absolute IRI, false if not.\n\t *\n\t * @param v the value to check.\n\t *\n\t * @return true if the value is an absolute IRI, false if not.\n\t */\n\tfunction _isAbsoluteIri(v) {\n\t  return _isString(v) && v.indexOf(':') !== -1;\n\t}\n\t\n\t/**\n\t * Clones an object, array, or string/number. If a typed JavaScript object\n\t * is given, such as a Date, it will be converted to a string.\n\t *\n\t * @param value the value to clone.\n\t *\n\t * @return the cloned value.\n\t */\n\tfunction _clone(value) {\n\t  if(value && typeof value === 'object') {\n\t    var rval;\n\t    if(_isArray(value)) {\n\t      rval = [];\n\t      for(var i = 0; i < value.length; ++i) {\n\t        rval[i] = _clone(value[i]);\n\t      }\n\t    } else if(_isObject(value)) {\n\t      rval = {};\n\t      for(var key in value) {\n\t        rval[key] = _clone(value[key]);\n\t      }\n\t    } else {\n\t      rval = value.toString();\n\t    }\n\t    return rval;\n\t  }\n\t  return value;\n\t}\n\t\n\t/**\n\t * Finds all @context URLs in the given JSON-LD input.\n\t *\n\t * @param input the JSON-LD input.\n\t * @param urls a map of URLs (url => false/@contexts).\n\t * @param replace true to replace the URLs in the given input with the\n\t *           @contexts from the urls map, false not to.\n\t * @param base the base IRI to use to resolve relative IRIs.\n\t *\n\t * @return true if new URLs to retrieve were found, false if not.\n\t */\n\tfunction _findContextUrls(input, urls, replace, base) {\n\t  var count = Object.keys(urls).length;\n\t  if(_isArray(input)) {\n\t    for(var i = 0; i < input.length; ++i) {\n\t      _findContextUrls(input[i], urls, replace, base);\n\t    }\n\t    return (count < Object.keys(urls).length);\n\t  } else if(_isObject(input)) {\n\t    for(var key in input) {\n\t      if(key !== '@context') {\n\t        _findContextUrls(input[key], urls, replace, base);\n\t        continue;\n\t      }\n\t\n\t      // get @context\n\t      var ctx = input[key];\n\t\n\t      // array @context\n\t      if(_isArray(ctx)) {\n\t        var length = ctx.length;\n\t        for(var i = 0; i < length; ++i) {\n\t          var _ctx = ctx[i];\n\t          if(_isString(_ctx)) {\n\t            _ctx = jsonld.prependBase(base, _ctx);\n\t            // replace w/@context if requested\n\t            if(replace) {\n\t              _ctx = urls[_ctx];\n\t              if(_isArray(_ctx)) {\n\t                // add flattened context\n\t                Array.prototype.splice.apply(ctx, [i, 1].concat(_ctx));\n\t                i += _ctx.length - 1;\n\t                length = ctx.length;\n\t              } else {\n\t                ctx[i] = _ctx;\n\t              }\n\t            } else if(!(_ctx in urls)) {\n\t              // @context URL found\n\t              urls[_ctx] = false;\n\t            }\n\t          }\n\t        }\n\t      } else if(_isString(ctx)) {\n\t        // string @context\n\t        ctx = jsonld.prependBase(base, ctx);\n\t        // replace w/@context if requested\n\t        if(replace) {\n\t          input[key] = urls[ctx];\n\t        } else if(!(ctx in urls)) {\n\t          // @context URL found\n\t          urls[ctx] = false;\n\t        }\n\t      }\n\t    }\n\t    return (count < Object.keys(urls).length);\n\t  }\n\t  return false;\n\t}\n\t\n\t/**\n\t * Retrieves external @context URLs using the given document loader. Every\n\t * instance of @context in the input that refers to a URL will be replaced\n\t * with the JSON @context found at that URL.\n\t *\n\t * @param input the JSON-LD input with possible contexts.\n\t * @param options the options to use:\n\t *          documentLoader(url, callback(err, remoteDoc)) the document loader.\n\t * @param callback(err, input) called once the operation completes.\n\t */\n\tfunction _retrieveContextUrls(input, options, callback) {\n\t  // if any error occurs during URL resolution, quit\n\t  var error = null;\n\t\n\t  // recursive document loader\n\t  var documentLoader = options.documentLoader;\n\t  var retrieve = function(input, cycles, documentLoader, base, callback) {\n\t    if(Object.keys(cycles).length > MAX_CONTEXT_URLS) {\n\t      error = new JsonLdError(\n\t        'Maximum number of @context URLs exceeded.',\n\t        'jsonld.ContextUrlError',\n\t        {code: 'loading remote context failed', max: MAX_CONTEXT_URLS});\n\t      return callback(error);\n\t    }\n\t\n\t    // for tracking the URLs to retrieve\n\t    var urls = {};\n\t\n\t    // finished will be called once the URL queue is empty\n\t    var finished = function() {\n\t      // replace all URLs in the input\n\t      _findContextUrls(input, urls, true, base);\n\t      callback(null, input);\n\t    };\n\t\n\t    // find all URLs in the given input\n\t    if(!_findContextUrls(input, urls, false, base)) {\n\t      // no new URLs in input\n\t      finished();\n\t    }\n\t\n\t    // queue all unretrieved URLs\n\t    var queue = [];\n\t    for(var url in urls) {\n\t      if(urls[url] === false) {\n\t        queue.push(url);\n\t      }\n\t    }\n\t\n\t    // retrieve URLs in queue\n\t    var count = queue.length;\n\t    for(var i = 0; i < queue.length; ++i) {\n\t      (function(url) {\n\t        // check for context URL cycle\n\t        if(url in cycles) {\n\t          error = new JsonLdError(\n\t            'Cyclical @context URLs detected.',\n\t            'jsonld.ContextUrlError',\n\t            {code: 'recursive context inclusion', url: url});\n\t          return callback(error);\n\t        }\n\t        var _cycles = _clone(cycles);\n\t        _cycles[url] = true;\n\t        var done = function(err, remoteDoc) {\n\t          // short-circuit if there was an error with another URL\n\t          if(error) {\n\t            return;\n\t          }\n\t\n\t          var ctx = remoteDoc ? remoteDoc.document : null;\n\t\n\t          // parse string context as JSON\n\t          if(!err && _isString(ctx)) {\n\t            try {\n\t              ctx = JSON.parse(ctx);\n\t            } catch(ex) {\n\t              err = ex;\n\t            }\n\t          }\n\t\n\t          // ensure ctx is an object\n\t          if(err) {\n\t            err = new JsonLdError(\n\t              'Dereferencing a URL did not result in a valid JSON-LD object. ' +\n\t              'Possible causes are an inaccessible URL perhaps due to ' +\n\t              'a same-origin policy (ensure the server uses CORS if you are ' +\n\t              'using client-side JavaScript), too many redirects, a ' +\n\t              'non-JSON response, or more than one HTTP Link Header was ' +\n\t              'provided for a remote context.',\n\t              'jsonld.InvalidUrl',\n\t              {code: 'loading remote context failed', url: url, cause: err});\n\t          } else if(!_isObject(ctx)) {\n\t            err = new JsonLdError(\n\t              'Dereferencing a URL did not result in a JSON object. The ' +\n\t              'response was valid JSON, but it was not a JSON object.',\n\t              'jsonld.InvalidUrl',\n\t              {code: 'invalid remote context', url: url, cause: err});\n\t          }\n\t          if(err) {\n\t            error = err;\n\t            return callback(error);\n\t          }\n\t\n\t          // use empty context if no @context key is present\n\t          if(!('@context' in ctx)) {\n\t            ctx = {'@context': {}};\n\t          } else {\n\t            ctx = {'@context': ctx['@context']};\n\t          }\n\t\n\t          // append context URL to context if given\n\t          if(remoteDoc.contextUrl) {\n\t            if(!_isArray(ctx['@context'])) {\n\t              ctx['@context'] = [ctx['@context']];\n\t            }\n\t            ctx['@context'].push(remoteDoc.contextUrl);\n\t          }\n\t\n\t          // recurse\n\t          retrieve(ctx, _cycles, documentLoader, url, function(err, ctx) {\n\t            if(err) {\n\t              return callback(err);\n\t            }\n\t            urls[url] = ctx['@context'];\n\t            count -= 1;\n\t            if(count === 0) {\n\t              finished();\n\t            }\n\t          });\n\t        };\n\t        var promise = documentLoader(url, done);\n\t        if(promise && 'then' in promise) {\n\t          promise.then(done.bind(null, null), done);\n\t        }\n\t      }(queue[i]));\n\t    }\n\t  };\n\t  retrieve(input, {}, documentLoader, options.base, callback);\n\t}\n\t\n\t// define js 1.8.5 Object.keys method if not present\n\tif(!Object.keys) {\n\t  Object.keys = function(o) {\n\t    if(o !== Object(o)) {\n\t      throw new TypeError('Object.keys called on non-object');\n\t    }\n\t    var rval = [];\n\t    for(var p in o) {\n\t      if(Object.prototype.hasOwnProperty.call(o, p)) {\n\t        rval.push(p);\n\t      }\n\t    }\n\t    return rval;\n\t  };\n\t}\n\t\n\t/**\n\t * Parses RDF in the form of N-Quads.\n\t *\n\t * @param input the N-Quads input to parse.\n\t *\n\t * @return an RDF dataset.\n\t */\n\tfunction _parseNQuads(input) {\n\t  // define partial regexes\n\t  var iri = '(?:<([^:]+:[^>]*)>)';\n\t  var bnode = '(_:(?:[A-Za-z0-9]+))';\n\t  var plain = '\"([^\"\\\\\\\\]*(?:\\\\\\\\.[^\"\\\\\\\\]*)*)\"';\n\t  var datatype = '(?:\\\\^\\\\^' + iri + ')';\n\t  var language = '(?:@([a-z]+(?:-[a-z0-9]+)*))';\n\t  var literal = '(?:' + plain + '(?:' + datatype + '|' + language + ')?)';\n\t  var comment = '(?:#.*)?';\n\t  var ws = '[ \\\\t]+';\n\t  var wso = '[ \\\\t]*';\n\t  var eoln = /(?:\\r\\n)|(?:\\n)|(?:\\r)/g;\n\t  var empty = new RegExp('^' + wso + comment + '$');\n\t\n\t  // define quad part regexes\n\t  var subject = '(?:' + iri + '|' + bnode + ')' + ws;\n\t  var property = iri + ws;\n\t  var object = '(?:' + iri + '|' + bnode + '|' + literal + ')' + wso;\n\t  var graphName = '(?:\\\\.|(?:(?:' + iri + '|' + bnode + ')' + wso + '\\\\.))';\n\t\n\t  // full quad regex\n\t  var quad = new RegExp(\n\t    '^' + wso + subject + property + object + graphName + wso + comment + '$');\n\t\n\t  // build RDF dataset\n\t  var dataset = {};\n\t\n\t  // split N-Quad input into lines\n\t  var lines = input.split(eoln);\n\t  var lineNumber = 0;\n\t  for(var li = 0; li < lines.length; ++li) {\n\t    var line = lines[li];\n\t    lineNumber++;\n\t\n\t    // skip empty lines\n\t    if(empty.test(line)) {\n\t      continue;\n\t    }\n\t\n\t    // parse quad\n\t    var match = line.match(quad);\n\t    if(match === null) {\n\t      throw new JsonLdError(\n\t        'Error while parsing N-Quads; invalid quad.',\n\t        'jsonld.ParseError', {line: lineNumber});\n\t    }\n\t\n\t    // create RDF triple\n\t    var triple = {};\n\t\n\t    // get subject\n\t    if(!_isUndefined(match[1])) {\n\t      triple.subject = {type: 'IRI', value: match[1]};\n\t    } else {\n\t      triple.subject = {type: 'blank node', value: match[2]};\n\t    }\n\t\n\t    // get predicate\n\t    triple.predicate = {type: 'IRI', value: match[3]};\n\t\n\t    // get object\n\t    if(!_isUndefined(match[4])) {\n\t      triple.object = {type: 'IRI', value: match[4]};\n\t    } else if(!_isUndefined(match[5])) {\n\t      triple.object = {type: 'blank node', value: match[5]};\n\t    } else {\n\t      triple.object = {type: 'literal'};\n\t      if(!_isUndefined(match[7])) {\n\t        triple.object.datatype = match[7];\n\t      } else if(!_isUndefined(match[8])) {\n\t        triple.object.datatype = RDF_LANGSTRING;\n\t        triple.object.language = match[8];\n\t      } else {\n\t        triple.object.datatype = XSD_STRING;\n\t      }\n\t      var unescaped = match[6]\n\t        .replace(/\\\\\"/g, '\"')\n\t        .replace(/\\\\t/g, '\\t')\n\t        .replace(/\\\\n/g, '\\n')\n\t        .replace(/\\\\r/g, '\\r')\n\t        .replace(/\\\\\\\\/g, '\\\\');\n\t      triple.object.value = unescaped;\n\t    }\n\t\n\t    // get graph name ('@default' is used for the default graph)\n\t    var name = '@default';\n\t    if(!_isUndefined(match[9])) {\n\t      name = match[9];\n\t    } else if(!_isUndefined(match[10])) {\n\t      name = match[10];\n\t    }\n\t\n\t    // initialize graph in dataset\n\t    if(!(name in dataset)) {\n\t      dataset[name] = [triple];\n\t    } else {\n\t      // add triple if unique to its graph\n\t      var unique = true;\n\t      var triples = dataset[name];\n\t      for(var ti = 0; unique && ti < triples.length; ++ti) {\n\t        if(_compareRDFTriples(triples[ti], triple)) {\n\t          unique = false;\n\t        }\n\t      }\n\t      if(unique) {\n\t        triples.push(triple);\n\t      }\n\t    }\n\t  }\n\t\n\t  return dataset;\n\t}\n\t\n\t// register the N-Quads RDF parser\n\tjsonld.registerRDFParser('application/nquads', _parseNQuads);\n\t\n\t/**\n\t * Converts an RDF dataset to N-Quads.\n\t *\n\t * @param dataset the RDF dataset to convert.\n\t *\n\t * @return the N-Quads string.\n\t */\n\tfunction _toNQuads(dataset) {\n\t  var quads = [];\n\t  for(var graphName in dataset) {\n\t    var triples = dataset[graphName];\n\t    for(var ti = 0; ti < triples.length; ++ti) {\n\t      var triple = triples[ti];\n\t      if(graphName === '@default') {\n\t        graphName = null;\n\t      }\n\t      quads.push(_toNQuad(triple, graphName));\n\t    }\n\t  }\n\t  return quads.sort().join('');\n\t}\n\t\n\t/**\n\t * Converts an RDF triple and graph name to an N-Quad string (a single quad).\n\t *\n\t * @param triple the RDF triple or quad to convert (a triple or quad may be\n\t *          passed, if a triple is passed then `graphName` should be given\n\t *          to specify the name of the graph the triple is in, `null` for\n\t *          the default graph).\n\t * @param graphName the name of the graph containing the triple, null for\n\t *          the default graph.\n\t *\n\t * @return the N-Quad string.\n\t */\n\tfunction _toNQuad(triple, graphName) {\n\t  var s = triple.subject;\n\t  var p = triple.predicate;\n\t  var o = triple.object;\n\t  var g = graphName || null;\n\t  if('name' in triple && triple.name) {\n\t    g = triple.name.value;\n\t  }\n\t\n\t  var quad = '';\n\t\n\t  // subject is an IRI\n\t  if(s.type === 'IRI') {\n\t    quad += '<' + s.value + '>';\n\t  } else {\n\t    quad += s.value;\n\t  }\n\t  quad += ' ';\n\t\n\t  // predicate is an IRI\n\t  if(p.type === 'IRI') {\n\t    quad += '<' + p.value + '>';\n\t  } else {\n\t    quad += p.value;\n\t  }\n\t  quad += ' ';\n\t\n\t  // object is IRI, bnode, or literal\n\t  if(o.type === 'IRI') {\n\t    quad += '<' + o.value + '>';\n\t  } else if(o.type === 'blank node') {\n\t    quad += o.value;\n\t  } else {\n\t    var escaped = o.value\n\t      .replace(/\\\\/g, '\\\\\\\\')\n\t      .replace(/\\t/g, '\\\\t')\n\t      .replace(/\\n/g, '\\\\n')\n\t      .replace(/\\r/g, '\\\\r')\n\t      .replace(/\\\"/g, '\\\\\"');\n\t    quad += '\"' + escaped + '\"';\n\t    if(o.datatype === RDF_LANGSTRING) {\n\t      if(o.language) {\n\t        quad += '@' + o.language;\n\t      }\n\t    } else if(o.datatype !== XSD_STRING) {\n\t      quad += '^^<' + o.datatype + '>';\n\t    }\n\t  }\n\t\n\t  // graph\n\t  if(g !== null && g !== undefined) {\n\t    if(g.indexOf('_:') !== 0) {\n\t      quad += ' <' + g + '>';\n\t    } else {\n\t      quad += ' ' + g;\n\t    }\n\t  }\n\t\n\t  quad += ' .\\n';\n\t  return quad;\n\t}\n\t\n\t/**\n\t * Parses the RDF dataset found via the data object from the RDFa API.\n\t *\n\t * @param data the RDFa API data object.\n\t *\n\t * @return the RDF dataset.\n\t */\n\tfunction _parseRdfaApiData(data) {\n\t  var dataset = {};\n\t  dataset['@default'] = [];\n\t\n\t  var subjects = data.getSubjects();\n\t  for(var si = 0; si < subjects.length; ++si) {\n\t    var subject = subjects[si];\n\t    if(subject === null) {\n\t      continue;\n\t    }\n\t\n\t    // get all related triples\n\t    var triples = data.getSubjectTriples(subject);\n\t    if(triples === null) {\n\t      continue;\n\t    }\n\t    var predicates = triples.predicates;\n\t    for(var predicate in predicates) {\n\t      // iterate over objects\n\t      var objects = predicates[predicate].objects;\n\t      for(var oi = 0; oi < objects.length; ++oi) {\n\t        var object = objects[oi];\n\t\n\t        // create RDF triple\n\t        var triple = {};\n\t\n\t        // add subject\n\t        if(subject.indexOf('_:') === 0) {\n\t          triple.subject = {type: 'blank node', value: subject};\n\t        } else {\n\t          triple.subject = {type: 'IRI', value: subject};\n\t        }\n\t\n\t        // add predicate\n\t        if(predicate.indexOf('_:') === 0) {\n\t          triple.predicate = {type: 'blank node', value: predicate};\n\t        } else {\n\t          triple.predicate = {type: 'IRI', value: predicate};\n\t        }\n\t\n\t        // serialize XML literal\n\t        var value = object.value;\n\t        if(object.type === RDF_XML_LITERAL) {\n\t          // initialize XMLSerializer\n\t          if(!XMLSerializer) {\n\t            _defineXMLSerializer();\n\t          }\n\t          var serializer = new XMLSerializer();\n\t          value = '';\n\t          for(var x = 0; x < object.value.length; x++) {\n\t            if(object.value[x].nodeType === Node.ELEMENT_NODE) {\n\t              value += serializer.serializeToString(object.value[x]);\n\t            } else if(object.value[x].nodeType === Node.TEXT_NODE) {\n\t              value += object.value[x].nodeValue;\n\t            }\n\t          }\n\t        }\n\t\n\t        // add object\n\t        triple.object = {};\n\t\n\t        // object is an IRI\n\t        if(object.type === RDF_OBJECT) {\n\t          if(object.value.indexOf('_:') === 0) {\n\t            triple.object.type = 'blank node';\n\t          } else {\n\t            triple.object.type = 'IRI';\n\t          }\n\t        } else {\n\t          // object is a literal\n\t          triple.object.type = 'literal';\n\t          if(object.type === RDF_PLAIN_LITERAL) {\n\t            if(object.language) {\n\t              triple.object.datatype = RDF_LANGSTRING;\n\t              triple.object.language = object.language;\n\t            } else {\n\t              triple.object.datatype = XSD_STRING;\n\t            }\n\t          } else {\n\t            triple.object.datatype = object.type;\n\t          }\n\t        }\n\t        triple.object.value = value;\n\t\n\t        // add triple to dataset in default graph\n\t        dataset['@default'].push(triple);\n\t      }\n\t    }\n\t  }\n\t\n\t  return dataset;\n\t}\n\t\n\t// register the RDFa API RDF parser\n\tjsonld.registerRDFParser('rdfa-api', _parseRdfaApiData);\n\t\n\t/**\n\t * Creates a new IdentifierIssuer. A IdentifierIssuer issues unique\n\t * identifiers, keeping track of any previously issued identifiers.\n\t *\n\t * @param prefix the prefix to use ('<prefix><counter>').\n\t */\n\tfunction IdentifierIssuer(prefix) {\n\t  this.prefix = prefix;\n\t  this.counter = 0;\n\t  this.existing = {};\n\t}\n\tjsonld.IdentifierIssuer = IdentifierIssuer;\n\t// backwards-compability\n\tjsonld.UniqueNamer = IdentifierIssuer;\n\t\n\t/**\n\t * Copies this IdentifierIssuer.\n\t *\n\t * @return a copy of this IdentifierIssuer.\n\t */\n\tIdentifierIssuer.prototype.clone = function() {\n\t  var copy = new IdentifierIssuer(this.prefix);\n\t  copy.counter = this.counter;\n\t  copy.existing = _clone(this.existing);\n\t  return copy;\n\t};\n\t\n\t/**\n\t * Gets the new identifier for the given old identifier, where if no old\n\t * identifier is given a new identifier will be generated.\n\t *\n\t * @param [old] the old identifier to get the new identifier for.\n\t *\n\t * @return the new identifier.\n\t */\n\tIdentifierIssuer.prototype.getId = function(old) {\n\t  // return existing old identifier\n\t  if(old && old in this.existing) {\n\t    return this.existing[old];\n\t  }\n\t\n\t  // get next identifier\n\t  var identifier = this.prefix + this.counter;\n\t  this.counter += 1;\n\t\n\t  // save mapping\n\t  if(old) {\n\t    this.existing[old] = identifier;\n\t  }\n\t\n\t  return identifier;\n\t};\n\t// alias\n\tIdentifierIssuer.prototype.getName = IdentifierIssuer.prototype.getName;\n\t\n\t/**\n\t * Returns true if the given old identifer has already been assigned a new\n\t * identifier.\n\t *\n\t * @param old the old identifier to check.\n\t *\n\t * @return true if the old identifier has been assigned a new identifier, false\n\t *   if not.\n\t */\n\tIdentifierIssuer.prototype.hasId = function(old) {\n\t  return (old in this.existing);\n\t};\n\t// alias\n\tIdentifierIssuer.prototype.isNamed = IdentifierIssuer.prototype.hasId;\n\t\n\t/**\n\t * A Permutator iterates over all possible permutations of the given array\n\t * of elements.\n\t *\n\t * @param list the array of elements to iterate over.\n\t */\n\tvar Permutator = function(list) {\n\t  // original array\n\t  this.list = list.sort();\n\t  // indicates whether there are more permutations\n\t  this.done = false;\n\t  // directional info for permutation algorithm\n\t  this.left = {};\n\t  for(var i = 0; i < list.length; ++i) {\n\t    this.left[list[i]] = true;\n\t  }\n\t};\n\t\n\t/**\n\t * Returns true if there is another permutation.\n\t *\n\t * @return true if there is another permutation, false if not.\n\t */\n\tPermutator.prototype.hasNext = function() {\n\t  return !this.done;\n\t};\n\t\n\t/**\n\t * Gets the next permutation. Call hasNext() to ensure there is another one\n\t * first.\n\t *\n\t * @return the next permutation.\n\t */\n\tPermutator.prototype.next = function() {\n\t  // copy current permutation\n\t  var rval = this.list.slice();\n\t\n\t  /* Calculate the next permutation using the Steinhaus-Johnson-Trotter\n\t   permutation algorithm. */\n\t\n\t  // get largest mobile element k\n\t  // (mobile: element is greater than the one it is looking at)\n\t  var k = null;\n\t  var pos = 0;\n\t  var length = this.list.length;\n\t  for(var i = 0; i < length; ++i) {\n\t    var element = this.list[i];\n\t    var left = this.left[element];\n\t    if((k === null || element > k) &&\n\t      ((left && i > 0 && element > this.list[i - 1]) ||\n\t      (!left && i < (length - 1) && element > this.list[i + 1]))) {\n\t      k = element;\n\t      pos = i;\n\t    }\n\t  }\n\t\n\t  // no more permutations\n\t  if(k === null) {\n\t    this.done = true;\n\t  } else {\n\t    // swap k and the element it is looking at\n\t    var swap = this.left[k] ? pos - 1 : pos + 1;\n\t    this.list[pos] = this.list[swap];\n\t    this.list[swap] = k;\n\t\n\t    // reverse the direction of all elements larger than k\n\t    for(var i = 0; i < length; ++i) {\n\t      if(this.list[i] > k) {\n\t        this.left[this.list[i]] = !this.left[this.list[i]];\n\t      }\n\t    }\n\t  }\n\t\n\t  return rval;\n\t};\n\t\n\t//////////////////////// DEFINE NORMALIZATION HASH API ////////////////////////\n\t\n\t/**\n\t * Creates a new NormalizeHash for use by the given normalization algorithm.\n\t *\n\t * @param algorithm the RDF Dataset Normalization algorithm to use:\n\t *          'URDNA2015' or 'URGNA2012'.\n\t */\n\tvar NormalizeHash = function(algorithm) {\n\t  if(!(this instanceof NormalizeHash)) {\n\t    return new NormalizeHash(algorithm);\n\t  }\n\t  if(['URDNA2015', 'URGNA2012'].indexOf(algorithm) === -1) {\n\t    throw new Error(\n\t      'Invalid RDF Dataset Normalization algorithm: ' + algorithm);\n\t  }\n\t  NormalizeHash._init.call(this, algorithm);\n\t};\n\tNormalizeHash.hashNQuads = function(algorithm, nquads) {\n\t  var md = new NormalizeHash(algorithm);\n\t  for(var i = 0; i < nquads.length; ++i) {\n\t    md.update(nquads[i]);\n\t  }\n\t  return md.digest();\n\t};\n\t\n\t// switch definition of NormalizeHash based on environment\n\t(function(_nodejs) {\n\t\n\tif(_nodejs) {\n\t  // define NormalizeHash using native crypto lib\n\t  var crypto = __webpack_require__(31);\n\t  NormalizeHash._init = function(algorithm) {\n\t    if(algorithm === 'URDNA2015') {\n\t      algorithm = 'sha256';\n\t    } else {\n\t      // assume URGNA2012\n\t      algorithm = 'sha1';\n\t    }\n\t    this.md = crypto.createHash(algorithm);\n\t  };\n\t  NormalizeHash.prototype.update = function(msg) {\n\t    return this.md.update(msg, 'utf8');\n\t  };\n\t  NormalizeHash.prototype.digest = function() {\n\t    return this.md.digest('hex');\n\t  };\n\t  return;\n\t}\n\t\n\t// define NormalizeHash using JavaScript\n\tNormalizeHash._init = function(algorithm) {\n\t  if(algorithm === 'URDNA2015') {\n\t    algorithm = new sha256.Algorithm();\n\t  } else {\n\t    // assume URGNA2012\n\t    algorithm = new sha1.Algorithm();\n\t  }\n\t  this.md = new MessageDigest(algorithm);\n\t};\n\tNormalizeHash.prototype.update = function(msg) {\n\t  return this.md.update(msg);\n\t};\n\tNormalizeHash.prototype.digest = function() {\n\t  return this.md.digest().toHex();\n\t};\n\t\n\t/////////////////////////// DEFINE MESSAGE DIGEST API /////////////////////////\n\t\n\t/**\n\t * Creates a new MessageDigest.\n\t *\n\t * @param algorithm the algorithm to use.\n\t */\n\tvar MessageDigest = function(algorithm) {\n\t  if(!(this instanceof MessageDigest)) {\n\t    return new MessageDigest(algorithm);\n\t  }\n\t\n\t  this._algorithm = algorithm;\n\t\n\t  // create shared padding as needed\n\t  if(!MessageDigest._padding ||\n\t    MessageDigest._padding.length < this._algorithm.blockSize) {\n\t    MessageDigest._padding = String.fromCharCode(128);\n\t    var c = String.fromCharCode(0x00);\n\t    var n = 64;\n\t    while(n > 0) {\n\t      if(n & 1) {\n\t        MessageDigest._padding += c;\n\t      }\n\t      n >>>= 1;\n\t      if(n > 0) {\n\t        c += c;\n\t      }\n\t    }\n\t  }\n\t\n\t  // start digest automatically for first time\n\t  this.start();\n\t};\n\t\n\t/**\n\t * Starts the digest.\n\t *\n\t * @return this digest object.\n\t */\n\tMessageDigest.prototype.start = function() {\n\t  // up to 56-bit message length for convenience\n\t  this.messageLength = 0;\n\t\n\t  // full message length\n\t  this.fullMessageLength = [];\n\t  var int32s = this._algorithm.messageLengthSize / 4;\n\t  for(var i = 0; i < int32s; ++i) {\n\t    this.fullMessageLength.push(0);\n\t  }\n\t\n\t  // input buffer\n\t  this._input = new MessageDigest.ByteBuffer();\n\t\n\t  // get starting state\n\t  this.state = this._algorithm.start();\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Updates the digest with the given message input. The input must be\n\t * a string of characters.\n\t *\n\t * @param msg the message input to update with (ByteBuffer or string).\n\t *\n\t * @return this digest object.\n\t */\n\tMessageDigest.prototype.update = function(msg) {\n\t  // encode message as a UTF-8 encoded binary string\n\t  msg = new MessageDigest.ByteBuffer(unescape(encodeURIComponent(msg)));\n\t\n\t  // update message length\n\t  this.messageLength += msg.length();\n\t  var len = msg.length();\n\t  len = [(len / 0x100000000) >>> 0, len >>> 0];\n\t  for(var i = this.fullMessageLength.length - 1; i >= 0; --i) {\n\t    this.fullMessageLength[i] += len[1];\n\t    len[1] = len[0] + ((this.fullMessageLength[i] / 0x100000000) >>> 0);\n\t    this.fullMessageLength[i] = this.fullMessageLength[i] >>> 0;\n\t    len[0] = ((len[1] / 0x100000000) >>> 0);\n\t  }\n\t\n\t  // add bytes to input buffer\n\t  this._input.putBytes(msg.bytes());\n\t\n\t  // digest blocks\n\t  while(this._input.length() >= this._algorithm.blockSize) {\n\t    this.state = this._algorithm.digest(this.state, this._input);\n\t  }\n\t\n\t  // compact input buffer every 2K or if empty\n\t  if(this._input.read > 2048 || this._input.length() === 0) {\n\t    this._input.compact();\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Produces the digest.\n\t *\n\t * @return a byte buffer containing the digest value.\n\t */\n\tMessageDigest.prototype.digest = function() {\n\t  /* Note: Here we copy the remaining bytes in the input buffer and add the\n\t  appropriate padding. Then we do the final update on a copy of the state so\n\t  that if the user wants to get intermediate digests they can do so. */\n\t\n\t  /* Determine the number of bytes that must be added to the message to\n\t  ensure its length is appropriately congruent. In other words, the data to\n\t  be digested must be a multiple of `blockSize`. This data includes the\n\t  message, some padding, and the length of the message. Since the length of\n\t  the message will be encoded as `messageLengthSize` bytes, that means that\n\t  the last segment of the data must have `blockSize` - `messageLengthSize`\n\t  bytes of message and padding. Therefore, the length of the message plus the\n\t  padding must be congruent to X mod `blockSize` because\n\t  `blockSize` - `messageLengthSize` = X.\n\t\n\t  For example, SHA-1 is congruent to 448 mod 512 and SHA-512 is congruent to\n\t  896 mod 1024. SHA-1 uses a `blockSize` of 64 bytes (512 bits) and a\n\t  `messageLengthSize` of 8 bytes (64 bits). SHA-512 uses a `blockSize` of\n\t  128 bytes (1024 bits) and a `messageLengthSize` of 16 bytes (128 bits).\n\t\n\t  In order to fill up the message length it must be filled with padding that\n\t  begins with 1 bit followed by all 0 bits. Padding must *always* be present,\n\t  so if the message length is already congruent, then `blockSize` padding bits\n\t  must be added. */\n\t\n\t  // create final block\n\t  var finalBlock = new MessageDigest.ByteBuffer();\n\t  finalBlock.putBytes(this._input.bytes());\n\t\n\t  // compute remaining size to be digested (include message length size)\n\t  var remaining = (\n\t    this.fullMessageLength[this.fullMessageLength.length - 1] +\n\t    this._algorithm.messageLengthSize);\n\t\n\t  // add padding for overflow blockSize - overflow\n\t  // _padding starts with 1 byte with first bit is set (byte value 128), then\n\t  // there may be up to (blockSize - 1) other pad bytes\n\t  var overflow = remaining & (this._algorithm.blockSize - 1);\n\t  finalBlock.putBytes(MessageDigest._padding.substr(\n\t    0, this._algorithm.blockSize - overflow));\n\t\n\t  // serialize message length in bits in big-endian order; since length\n\t  // is stored in bytes we multiply by 8 (left shift by 3 and merge in\n\t  // remainder from )\n\t  var messageLength = new MessageDigest.ByteBuffer();\n\t  for(var i = 0; i < this.fullMessageLength.length; ++i) {\n\t    messageLength.putInt32((this.fullMessageLength[i] << 3) |\n\t      (this.fullMessageLength[i + 1] >>> 28));\n\t  }\n\t\n\t  // write the length of the message (algorithm-specific)\n\t  this._algorithm.writeMessageLength(finalBlock, messageLength);\n\t\n\t  // digest final block\n\t  var state = this._algorithm.digest(this.state.copy(), finalBlock);\n\t\n\t  // write state to buffer\n\t  var rval = new MessageDigest.ByteBuffer();\n\t  state.write(rval);\n\t  return rval;\n\t};\n\t\n\t/**\n\t * Creates a simple byte buffer for message digest operations.\n\t *\n\t * @param data the data to put in the buffer.\n\t */\n\tMessageDigest.ByteBuffer = function(data) {\n\t  if(typeof data === 'string') {\n\t    this.data = data;\n\t  } else {\n\t    this.data = '';\n\t  }\n\t  this.read = 0;\n\t};\n\t\n\t/**\n\t * Puts a 32-bit integer into this buffer in big-endian order.\n\t *\n\t * @param i the 32-bit integer.\n\t */\n\tMessageDigest.ByteBuffer.prototype.putInt32 = function(i) {\n\t  this.data += (\n\t    String.fromCharCode(i >> 24 & 0xFF) +\n\t    String.fromCharCode(i >> 16 & 0xFF) +\n\t    String.fromCharCode(i >> 8 & 0xFF) +\n\t    String.fromCharCode(i & 0xFF));\n\t};\n\t\n\t/**\n\t * Gets a 32-bit integer from this buffer in big-endian order and\n\t * advances the read pointer by 4.\n\t *\n\t * @return the word.\n\t */\n\tMessageDigest.ByteBuffer.prototype.getInt32 = function() {\n\t  var rval = (\n\t    this.data.charCodeAt(this.read) << 24 ^\n\t    this.data.charCodeAt(this.read + 1) << 16 ^\n\t    this.data.charCodeAt(this.read + 2) << 8 ^\n\t    this.data.charCodeAt(this.read + 3));\n\t  this.read += 4;\n\t  return rval;\n\t};\n\t\n\t/**\n\t * Puts the given bytes into this buffer.\n\t *\n\t * @param bytes the bytes as a binary-encoded string.\n\t */\n\tMessageDigest.ByteBuffer.prototype.putBytes = function(bytes) {\n\t  this.data += bytes;\n\t};\n\t\n\t/**\n\t * Gets the bytes in this buffer.\n\t *\n\t * @return a string full of UTF-8 encoded characters.\n\t */\n\tMessageDigest.ByteBuffer.prototype.bytes = function() {\n\t  return this.data.slice(this.read);\n\t};\n\t\n\t/**\n\t * Gets the number of bytes in this buffer.\n\t *\n\t * @return the number of bytes in this buffer.\n\t */\n\tMessageDigest.ByteBuffer.prototype.length = function() {\n\t  return this.data.length - this.read;\n\t};\n\t\n\t/**\n\t * Compacts this buffer.\n\t */\n\tMessageDigest.ByteBuffer.prototype.compact = function() {\n\t  this.data = this.data.slice(this.read);\n\t  this.read = 0;\n\t};\n\t\n\t/**\n\t * Converts this buffer to a hexadecimal string.\n\t *\n\t * @return a hexadecimal string.\n\t */\n\tMessageDigest.ByteBuffer.prototype.toHex = function() {\n\t  var rval = '';\n\t  for(var i = this.read; i < this.data.length; ++i) {\n\t    var b = this.data.charCodeAt(i);\n\t    if(b < 16) {\n\t      rval += '0';\n\t    }\n\t    rval += b.toString(16);\n\t  }\n\t  return rval;\n\t};\n\t\n\t///////////////////////////// DEFINE SHA-1 ALGORITHM //////////////////////////\n\t\n\tvar sha1 = {\n\t  // used for word storage\n\t  _w: null\n\t};\n\t\n\tsha1.Algorithm = function() {\n\t  this.name = 'sha1',\n\t  this.blockSize = 64;\n\t  this.digestLength = 20;\n\t  this.messageLengthSize = 8;\n\t};\n\t\n\tsha1.Algorithm.prototype.start = function() {\n\t  if(!sha1._w) {\n\t    sha1._w = new Array(80);\n\t  }\n\t  return sha1._createState();\n\t};\n\t\n\tsha1.Algorithm.prototype.writeMessageLength = function(\n\t  finalBlock, messageLength) {\n\t  // message length is in bits and in big-endian order; simply append\n\t  finalBlock.putBytes(messageLength.bytes());\n\t};\n\t\n\tsha1.Algorithm.prototype.digest = function(s, input) {\n\t  // consume 512 bit (64 byte) chunks\n\t  var t, a, b, c, d, e, f, i;\n\t  var len = input.length();\n\t  var _w = sha1._w;\n\t  while(len >= 64) {\n\t    // initialize hash value for this chunk\n\t    a = s.h0;\n\t    b = s.h1;\n\t    c = s.h2;\n\t    d = s.h3;\n\t    e = s.h4;\n\t\n\t    // the _w array will be populated with sixteen 32-bit big-endian words\n\t    // and then extended into 80 32-bit words according to SHA-1 algorithm\n\t    // and for 32-79 using Max Locktyukhin's optimization\n\t\n\t    // round 1\n\t    for(i = 0; i < 16; ++i) {\n\t      t = input.getInt32();\n\t      _w[i] = t;\n\t      f = d ^ (b & (c ^ d));\n\t      t = ((a << 5) | (a >>> 27)) + f + e + 0x5A827999 + t;\n\t      e = d;\n\t      d = c;\n\t      c = (b << 30) | (b >>> 2);\n\t      b = a;\n\t      a = t;\n\t    }\n\t    for(; i < 20; ++i) {\n\t      t = (_w[i - 3] ^ _w[i - 8] ^ _w[i - 14] ^ _w[i - 16]);\n\t      t = (t << 1) | (t >>> 31);\n\t      _w[i] = t;\n\t      f = d ^ (b & (c ^ d));\n\t      t = ((a << 5) | (a >>> 27)) + f + e + 0x5A827999 + t;\n\t      e = d;\n\t      d = c;\n\t      c = (b << 30) | (b >>> 2);\n\t      b = a;\n\t      a = t;\n\t    }\n\t    // round 2\n\t    for(; i < 32; ++i) {\n\t      t = (_w[i - 3] ^ _w[i - 8] ^ _w[i - 14] ^ _w[i - 16]);\n\t      t = (t << 1) | (t >>> 31);\n\t      _w[i] = t;\n\t      f = b ^ c ^ d;\n\t      t = ((a << 5) | (a >>> 27)) + f + e + 0x6ED9EBA1 + t;\n\t      e = d;\n\t      d = c;\n\t      c = (b << 30) | (b >>> 2);\n\t      b = a;\n\t      a = t;\n\t    }\n\t    for(; i < 40; ++i) {\n\t      t = (_w[i - 6] ^ _w[i - 16] ^ _w[i - 28] ^ _w[i - 32]);\n\t      t = (t << 2) | (t >>> 30);\n\t      _w[i] = t;\n\t      f = b ^ c ^ d;\n\t      t = ((a << 5) | (a >>> 27)) + f + e + 0x6ED9EBA1 + t;\n\t      e = d;\n\t      d = c;\n\t      c = (b << 30) | (b >>> 2);\n\t      b = a;\n\t      a = t;\n\t    }\n\t    // round 3\n\t    for(; i < 60; ++i) {\n\t      t = (_w[i - 6] ^ _w[i - 16] ^ _w[i - 28] ^ _w[i - 32]);\n\t      t = (t << 2) | (t >>> 30);\n\t      _w[i] = t;\n\t      f = (b & c) | (d & (b ^ c));\n\t      t = ((a << 5) | (a >>> 27)) + f + e + 0x8F1BBCDC + t;\n\t      e = d;\n\t      d = c;\n\t      c = (b << 30) | (b >>> 2);\n\t      b = a;\n\t      a = t;\n\t    }\n\t    // round 4\n\t    for(; i < 80; ++i) {\n\t      t = (_w[i - 6] ^ _w[i - 16] ^ _w[i - 28] ^ _w[i - 32]);\n\t      t = (t << 2) | (t >>> 30);\n\t      _w[i] = t;\n\t      f = b ^ c ^ d;\n\t      t = ((a << 5) | (a >>> 27)) + f + e + 0xCA62C1D6 + t;\n\t      e = d;\n\t      d = c;\n\t      c = (b << 30) | (b >>> 2);\n\t      b = a;\n\t      a = t;\n\t    }\n\t\n\t    // update hash state\n\t    s.h0 = (s.h0 + a) | 0;\n\t    s.h1 = (s.h1 + b) | 0;\n\t    s.h2 = (s.h2 + c) | 0;\n\t    s.h3 = (s.h3 + d) | 0;\n\t    s.h4 = (s.h4 + e) | 0;\n\t\n\t    len -= 64;\n\t  }\n\t\n\t  return s;\n\t};\n\t\n\tsha1._createState = function() {\n\t  var state = {\n\t    h0: 0x67452301,\n\t    h1: 0xEFCDAB89,\n\t    h2: 0x98BADCFE,\n\t    h3: 0x10325476,\n\t    h4: 0xC3D2E1F0\n\t  };\n\t  state.copy = function() {\n\t    var rval = sha1._createState();\n\t    rval.h0 = state.h0;\n\t    rval.h1 = state.h1;\n\t    rval.h2 = state.h2;\n\t    rval.h3 = state.h3;\n\t    rval.h4 = state.h4;\n\t    return rval;\n\t  };\n\t  state.write = function(buffer) {\n\t    buffer.putInt32(state.h0);\n\t    buffer.putInt32(state.h1);\n\t    buffer.putInt32(state.h2);\n\t    buffer.putInt32(state.h3);\n\t    buffer.putInt32(state.h4);\n\t  };\n\t  return state;\n\t};\n\t\n\t//////////////////////////// DEFINE SHA-256 ALGORITHM /////////////////////////\n\t\n\tvar sha256 = {\n\t  // shared state\n\t  _k: null,\n\t  _w: null\n\t};\n\t\n\tsha256.Algorithm = function() {\n\t  this.name = 'sha256',\n\t  this.blockSize = 64;\n\t  this.digestLength = 32;\n\t  this.messageLengthSize = 8;\n\t};\n\t\n\tsha256.Algorithm.prototype.start = function() {\n\t  if(!sha256._k) {\n\t    sha256._init();\n\t  }\n\t  return sha256._createState();\n\t};\n\t\n\tsha256.Algorithm.prototype.writeMessageLength = function(\n\t  finalBlock, messageLength) {\n\t  // message length is in bits and in big-endian order; simply append\n\t  finalBlock.putBytes(messageLength.bytes());\n\t};\n\t\n\tsha256.Algorithm.prototype.digest = function(s, input) {\n\t  // consume 512 bit (64 byte) chunks\n\t  var t1, t2, s0, s1, ch, maj, i, a, b, c, d, e, f, g, h;\n\t  var len = input.length();\n\t  var _k = sha256._k;\n\t  var _w = sha256._w;\n\t  while(len >= 64) {\n\t    // the w array will be populated with sixteen 32-bit big-endian words\n\t    // and then extended into 64 32-bit words according to SHA-256\n\t    for(i = 0; i < 16; ++i) {\n\t      _w[i] = input.getInt32();\n\t    }\n\t    for(; i < 64; ++i) {\n\t      // XOR word 2 words ago rot right 17, rot right 19, shft right 10\n\t      t1 = _w[i - 2];\n\t      t1 =\n\t        ((t1 >>> 17) | (t1 << 15)) ^\n\t        ((t1 >>> 19) | (t1 << 13)) ^\n\t        (t1 >>> 10);\n\t      // XOR word 15 words ago rot right 7, rot right 18, shft right 3\n\t      t2 = _w[i - 15];\n\t      t2 =\n\t        ((t2 >>> 7) | (t2 << 25)) ^\n\t        ((t2 >>> 18) | (t2 << 14)) ^\n\t        (t2 >>> 3);\n\t      // sum(t1, word 7 ago, t2, word 16 ago) modulo 2^32\n\t      _w[i] = (t1 + _w[i - 7] + t2 + _w[i - 16]) | 0;\n\t    }\n\t\n\t    // initialize hash value for this chunk\n\t    a = s.h0;\n\t    b = s.h1;\n\t    c = s.h2;\n\t    d = s.h3;\n\t    e = s.h4;\n\t    f = s.h5;\n\t    g = s.h6;\n\t    h = s.h7;\n\t\n\t    // round function\n\t    for(i = 0; i < 64; ++i) {\n\t      // Sum1(e)\n\t      s1 =\n\t        ((e >>> 6) | (e << 26)) ^\n\t        ((e >>> 11) | (e << 21)) ^\n\t        ((e >>> 25) | (e << 7));\n\t      // Ch(e, f, g) (optimized the same way as SHA-1)\n\t      ch = g ^ (e & (f ^ g));\n\t      // Sum0(a)\n\t      s0 =\n\t        ((a >>> 2) | (a << 30)) ^\n\t        ((a >>> 13) | (a << 19)) ^\n\t        ((a >>> 22) | (a << 10));\n\t      // Maj(a, b, c) (optimized the same way as SHA-1)\n\t      maj = (a & b) | (c & (a ^ b));\n\t\n\t      // main algorithm\n\t      t1 = h + s1 + ch + _k[i] + _w[i];\n\t      t2 = s0 + maj;\n\t      h = g;\n\t      g = f;\n\t      f = e;\n\t      e = (d + t1) | 0;\n\t      d = c;\n\t      c = b;\n\t      b = a;\n\t      a = (t1 + t2) | 0;\n\t    }\n\t\n\t    // update hash state\n\t    s.h0 = (s.h0 + a) | 0;\n\t    s.h1 = (s.h1 + b) | 0;\n\t    s.h2 = (s.h2 + c) | 0;\n\t    s.h3 = (s.h3 + d) | 0;\n\t    s.h4 = (s.h4 + e) | 0;\n\t    s.h5 = (s.h5 + f) | 0;\n\t    s.h6 = (s.h6 + g) | 0;\n\t    s.h7 = (s.h7 + h) | 0;\n\t    len -= 64;\n\t  }\n\t\n\t  return s;\n\t};\n\t\n\tsha256._createState = function() {\n\t  var state = {\n\t    h0: 0x6A09E667,\n\t    h1: 0xBB67AE85,\n\t    h2: 0x3C6EF372,\n\t    h3: 0xA54FF53A,\n\t    h4: 0x510E527F,\n\t    h5: 0x9B05688C,\n\t    h6: 0x1F83D9AB,\n\t    h7: 0x5BE0CD19\n\t  };\n\t  state.copy = function() {\n\t    var rval = sha256._createState();\n\t    rval.h0 = state.h0;\n\t    rval.h1 = state.h1;\n\t    rval.h2 = state.h2;\n\t    rval.h3 = state.h3;\n\t    rval.h4 = state.h4;\n\t    rval.h5 = state.h5;\n\t    rval.h6 = state.h6;\n\t    rval.h7 = state.h7;\n\t    return rval;\n\t  };\n\t  state.write = function(buffer) {\n\t    buffer.putInt32(state.h0);\n\t    buffer.putInt32(state.h1);\n\t    buffer.putInt32(state.h2);\n\t    buffer.putInt32(state.h3);\n\t    buffer.putInt32(state.h4);\n\t    buffer.putInt32(state.h5);\n\t    buffer.putInt32(state.h6);\n\t    buffer.putInt32(state.h7);\n\t  };\n\t  return state;\n\t};\n\t\n\tsha256._init = function() {\n\t  // create K table for SHA-256\n\t  sha256._k = [\n\t    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n\t    0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n\t    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n\t    0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n\t    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n\t    0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n\t    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n\t    0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n\t    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n\t    0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n\t    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n\t    0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n\t    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n\t    0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n\t    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n\t    0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n\t\n\t  // used for word storage\n\t  sha256._w = new Array(64);\n\t};\n\t\n\t})(_nodejs); // end definition of NormalizeHash\n\t\n\tif(!XMLSerializer) {\n\t\n\tvar _defineXMLSerializer = function() {\n\t  XMLSerializer = __webpack_require__(31).XMLSerializer;\n\t};\n\t\n\t} // end _defineXMLSerializer\n\t\n\t// define URL parser\n\t// parseUri 1.2.2\n\t// (c) Steven Levithan <stevenlevithan.com>\n\t// MIT License\n\t// with local jsonld.js modifications\n\tjsonld.url = {};\n\tjsonld.url.parsers = {\n\t  simple: {\n\t    // RFC 3986 basic parts\n\t    keys: ['href','scheme','authority','path','query','fragment'],\n\t    regex: /^(?:([^:\\/?#]+):)?(?:\\/\\/([^\\/?#]*))?([^?#]*)(?:\\?([^#]*))?(?:#(.*))?/\n\t  },\n\t  full: {\n\t    keys: ['href','protocol','scheme','authority','auth','user','password','hostname','port','path','directory','file','query','fragment'],\n\t    regex: /^(([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?(?:(((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/\n\t  }\n\t};\n\tjsonld.url.parse = function(str, parser) {\n\t  var parsed = {};\n\t  var o = jsonld.url.parsers[parser || 'full'];\n\t  var m = o.regex.exec(str);\n\t  var i = o.keys.length;\n\t  while(i--) {\n\t    parsed[o.keys[i]] = (m[i] === undefined) ? null : m[i];\n\t  }\n\t  parsed.normalizedPath = _removeDotSegments(parsed.path, !!parsed.authority);\n\t  return parsed;\n\t};\n\t\n\t/**\n\t * Removes dot segments from a URL path.\n\t *\n\t * @param path the path to remove dot segments from.\n\t * @param hasAuthority true if the URL has an authority, false if not.\n\t */\n\tfunction _removeDotSegments(path, hasAuthority) {\n\t  var rval = '';\n\t\n\t  if(path.indexOf('/') === 0) {\n\t    rval = '/';\n\t  }\n\t\n\t  // RFC 3986 5.2.4 (reworked)\n\t  var input = path.split('/');\n\t  var output = [];\n\t  while(input.length > 0) {\n\t    if(input[0] === '.' || (input[0] === '' && input.length > 1)) {\n\t      input.shift();\n\t      continue;\n\t    }\n\t    if(input[0] === '..') {\n\t      input.shift();\n\t      if(hasAuthority ||\n\t        (output.length > 0 && output[output.length - 1] !== '..')) {\n\t        output.pop();\n\t      } else {\n\t        // leading relative URL '..'\n\t        output.push('..');\n\t      }\n\t      continue;\n\t    }\n\t    output.push(input.shift());\n\t  }\n\t\n\t  return rval + output.join('/');\n\t}\n\t\n\tif(_nodejs) {\n\t  // use node document loader by default\n\t  jsonld.useDocumentLoader('node');\n\t} else if(typeof XMLHttpRequest !== 'undefined') {\n\t  // use xhr document loader by default\n\t  jsonld.useDocumentLoader('xhr');\n\t}\n\t\n\tif(_nodejs) {\n\t  jsonld.use = function(extension) {\n\t    switch(extension) {\n\t      // TODO: Deprecated as of 0.4.0. Remove at some point.\n\t      case 'request':\n\t        // use node JSON-LD request extension\n\t        jsonld.request = __webpack_require__(31);\n\t        break;\n\t      default:\n\t        throw new JsonLdError(\n\t          'Unknown extension.',\n\t          'jsonld.UnknownExtension', {extension: extension});\n\t    }\n\t  };\n\t\n\t  // expose version\n\t  var _module = {exports: {}, filename: __dirname};\n\t  __webpack_require__(31)(_module, 'version');\n\t  jsonld.version = _module.exports.version;\n\t}\n\t\n\t// end of jsonld API factory\n\treturn jsonld;\n\t};\n\t\n\t// external APIs:\n\t\n\t// used to generate a new jsonld API instance\n\tvar factory = function() {\n\t  return wrapper(function() {\n\t    return factory();\n\t  });\n\t};\n\t\n\tif(!_nodejs && (\"function\" === 'function' && __webpack_require__(32))) {\n\t  // export AMD API\n\t  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t    // now that module is defined, wrap main jsonld API instance\n\t    wrapper(factory);\n\t    return factory;\n\t  }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else {\n\t  // wrap the main jsonld API instance\n\t  wrapper(factory);\n\t\n\t  if(\"function\" === 'function' &&\n\t    typeof module !== 'undefined' && module.exports) {\n\t    // export CommonJS/nodejs API\n\t    module.exports = factory;\n\t  }\n\t\n\t  if(_browser) {\n\t    // export simple browser API\n\t    if(typeof jsonld === 'undefined') {\n\t      jsonld = jsonldjs = factory;\n\t    } else {\n\t      jsonldjs = factory;\n\t    }\n\t  }\n\t}\n\t\n\treturn factory;\n\t\n\t})();\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(24), (function() { return this; }()), __webpack_require__(25).setImmediate, \"/\"))\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar require;var __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(process, setImmediate, global, module) {/*!\n\t * @overview es6-promise - a tiny implementation of Promises/A+.\n\t * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n\t * @license   Licensed under MIT license\n\t *            See https://raw.githubusercontent.com/jakearchibald/es6-promise/master/LICENSE\n\t * @version   2.3.0\n\t */\n\t\n\t(function() {\n\t    \"use strict\";\n\t    function lib$es6$promise$utils$$objectOrFunction(x) {\n\t      return typeof x === 'function' || (typeof x === 'object' && x !== null);\n\t    }\n\t\n\t    function lib$es6$promise$utils$$isFunction(x) {\n\t      return typeof x === 'function';\n\t    }\n\t\n\t    function lib$es6$promise$utils$$isMaybeThenable(x) {\n\t      return typeof x === 'object' && x !== null;\n\t    }\n\t\n\t    var lib$es6$promise$utils$$_isArray;\n\t    if (!Array.isArray) {\n\t      lib$es6$promise$utils$$_isArray = function (x) {\n\t        return Object.prototype.toString.call(x) === '[object Array]';\n\t      };\n\t    } else {\n\t      lib$es6$promise$utils$$_isArray = Array.isArray;\n\t    }\n\t\n\t    var lib$es6$promise$utils$$isArray = lib$es6$promise$utils$$_isArray;\n\t    var lib$es6$promise$asap$$len = 0;\n\t    var lib$es6$promise$asap$$toString = {}.toString;\n\t    var lib$es6$promise$asap$$vertxNext;\n\t    var lib$es6$promise$asap$$customSchedulerFn;\n\t\n\t    var lib$es6$promise$asap$$asap = function asap(callback, arg) {\n\t      lib$es6$promise$asap$$queue[lib$es6$promise$asap$$len] = callback;\n\t      lib$es6$promise$asap$$queue[lib$es6$promise$asap$$len + 1] = arg;\n\t      lib$es6$promise$asap$$len += 2;\n\t      if (lib$es6$promise$asap$$len === 2) {\n\t        // If len is 2, that means that we need to schedule an async flush.\n\t        // If additional callbacks are queued before the queue is flushed, they\n\t        // will be processed by this flush that we are scheduling.\n\t        if (lib$es6$promise$asap$$customSchedulerFn) {\n\t          lib$es6$promise$asap$$customSchedulerFn(lib$es6$promise$asap$$flush);\n\t        } else {\n\t          lib$es6$promise$asap$$scheduleFlush();\n\t        }\n\t      }\n\t    }\n\t\n\t    function lib$es6$promise$asap$$setScheduler(scheduleFn) {\n\t      lib$es6$promise$asap$$customSchedulerFn = scheduleFn;\n\t    }\n\t\n\t    function lib$es6$promise$asap$$setAsap(asapFn) {\n\t      lib$es6$promise$asap$$asap = asapFn;\n\t    }\n\t\n\t    var lib$es6$promise$asap$$browserWindow = (typeof window !== 'undefined') ? window : undefined;\n\t    var lib$es6$promise$asap$$browserGlobal = lib$es6$promise$asap$$browserWindow || {};\n\t    var lib$es6$promise$asap$$BrowserMutationObserver = lib$es6$promise$asap$$browserGlobal.MutationObserver || lib$es6$promise$asap$$browserGlobal.WebKitMutationObserver;\n\t    var lib$es6$promise$asap$$isNode = typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n\t\n\t    // test for web worker but not in IE10\n\t    var lib$es6$promise$asap$$isWorker = typeof Uint8ClampedArray !== 'undefined' &&\n\t      typeof importScripts !== 'undefined' &&\n\t      typeof MessageChannel !== 'undefined';\n\t\n\t    // node\n\t    function lib$es6$promise$asap$$useNextTick() {\n\t      var nextTick = process.nextTick;\n\t      // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n\t      // setImmediate should be used instead instead\n\t      var version = process.versions.node.match(/^(?:(\\d+)\\.)?(?:(\\d+)\\.)?(\\*|\\d+)$/);\n\t      if (Array.isArray(version) && version[1] === '0' && version[2] === '10') {\n\t        nextTick = setImmediate;\n\t      }\n\t      return function() {\n\t        nextTick(lib$es6$promise$asap$$flush);\n\t      };\n\t    }\n\t\n\t    // vertx\n\t    function lib$es6$promise$asap$$useVertxTimer() {\n\t      return function() {\n\t        lib$es6$promise$asap$$vertxNext(lib$es6$promise$asap$$flush);\n\t      };\n\t    }\n\t\n\t    function lib$es6$promise$asap$$useMutationObserver() {\n\t      var iterations = 0;\n\t      var observer = new lib$es6$promise$asap$$BrowserMutationObserver(lib$es6$promise$asap$$flush);\n\t      var node = document.createTextNode('');\n\t      observer.observe(node, { characterData: true });\n\t\n\t      return function() {\n\t        node.data = (iterations = ++iterations % 2);\n\t      };\n\t    }\n\t\n\t    // web worker\n\t    function lib$es6$promise$asap$$useMessageChannel() {\n\t      var channel = new MessageChannel();\n\t      channel.port1.onmessage = lib$es6$promise$asap$$flush;\n\t      return function () {\n\t        channel.port2.postMessage(0);\n\t      };\n\t    }\n\t\n\t    function lib$es6$promise$asap$$useSetTimeout() {\n\t      return function() {\n\t        setTimeout(lib$es6$promise$asap$$flush, 1);\n\t      };\n\t    }\n\t\n\t    var lib$es6$promise$asap$$queue = new Array(1000);\n\t    function lib$es6$promise$asap$$flush() {\n\t      for (var i = 0; i < lib$es6$promise$asap$$len; i+=2) {\n\t        var callback = lib$es6$promise$asap$$queue[i];\n\t        var arg = lib$es6$promise$asap$$queue[i+1];\n\t\n\t        callback(arg);\n\t\n\t        lib$es6$promise$asap$$queue[i] = undefined;\n\t        lib$es6$promise$asap$$queue[i+1] = undefined;\n\t      }\n\t\n\t      lib$es6$promise$asap$$len = 0;\n\t    }\n\t\n\t    function lib$es6$promise$asap$$attemptVertex() {\n\t      try {\n\t        var r = require;\n\t        var vertx = __webpack_require__(29);\n\t        lib$es6$promise$asap$$vertxNext = vertx.runOnLoop || vertx.runOnContext;\n\t        return lib$es6$promise$asap$$useVertxTimer();\n\t      } catch(e) {\n\t        return lib$es6$promise$asap$$useSetTimeout();\n\t      }\n\t    }\n\t\n\t    var lib$es6$promise$asap$$scheduleFlush;\n\t    // Decide what async method to use to triggering processing of queued callbacks:\n\t    if (lib$es6$promise$asap$$isNode) {\n\t      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useNextTick();\n\t    } else if (lib$es6$promise$asap$$BrowserMutationObserver) {\n\t      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useMutationObserver();\n\t    } else if (lib$es6$promise$asap$$isWorker) {\n\t      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useMessageChannel();\n\t    } else if (lib$es6$promise$asap$$browserWindow === undefined && \"function\" === 'function') {\n\t      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$attemptVertex();\n\t    } else {\n\t      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useSetTimeout();\n\t    }\n\t\n\t    function lib$es6$promise$$internal$$noop() {}\n\t\n\t    var lib$es6$promise$$internal$$PENDING   = void 0;\n\t    var lib$es6$promise$$internal$$FULFILLED = 1;\n\t    var lib$es6$promise$$internal$$REJECTED  = 2;\n\t\n\t    var lib$es6$promise$$internal$$GET_THEN_ERROR = new lib$es6$promise$$internal$$ErrorObject();\n\t\n\t    function lib$es6$promise$$internal$$selfFullfillment() {\n\t      return new TypeError(\"You cannot resolve a promise with itself\");\n\t    }\n\t\n\t    function lib$es6$promise$$internal$$cannotReturnOwn() {\n\t      return new TypeError('A promises callback cannot return that same promise.');\n\t    }\n\t\n\t    function lib$es6$promise$$internal$$getThen(promise) {\n\t      try {\n\t        return promise.then;\n\t      } catch(error) {\n\t        lib$es6$promise$$internal$$GET_THEN_ERROR.error = error;\n\t        return lib$es6$promise$$internal$$GET_THEN_ERROR;\n\t      }\n\t    }\n\t\n\t    function lib$es6$promise$$internal$$tryThen(then, value, fulfillmentHandler, rejectionHandler) {\n\t      try {\n\t        then.call(value, fulfillmentHandler, rejectionHandler);\n\t      } catch(e) {\n\t        return e;\n\t      }\n\t    }\n\t\n\t    function lib$es6$promise$$internal$$handleForeignThenable(promise, thenable, then) {\n\t       lib$es6$promise$asap$$asap(function(promise) {\n\t        var sealed = false;\n\t        var error = lib$es6$promise$$internal$$tryThen(then, thenable, function(value) {\n\t          if (sealed) { return; }\n\t          sealed = true;\n\t          if (thenable !== value) {\n\t            lib$es6$promise$$internal$$resolve(promise, value);\n\t          } else {\n\t            lib$es6$promise$$internal$$fulfill(promise, value);\n\t          }\n\t        }, function(reason) {\n\t          if (sealed) { return; }\n\t          sealed = true;\n\t\n\t          lib$es6$promise$$internal$$reject(promise, reason);\n\t        }, 'Settle: ' + (promise._label || ' unknown promise'));\n\t\n\t        if (!sealed && error) {\n\t          sealed = true;\n\t          lib$es6$promise$$internal$$reject(promise, error);\n\t        }\n\t      }, promise);\n\t    }\n\t\n\t    function lib$es6$promise$$internal$$handleOwnThenable(promise, thenable) {\n\t      if (thenable._state === lib$es6$promise$$internal$$FULFILLED) {\n\t        lib$es6$promise$$internal$$fulfill(promise, thenable._result);\n\t      } else if (thenable._state === lib$es6$promise$$internal$$REJECTED) {\n\t        lib$es6$promise$$internal$$reject(promise, thenable._result);\n\t      } else {\n\t        lib$es6$promise$$internal$$subscribe(thenable, undefined, function(value) {\n\t          lib$es6$promise$$internal$$resolve(promise, value);\n\t        }, function(reason) {\n\t          lib$es6$promise$$internal$$reject(promise, reason);\n\t        });\n\t      }\n\t    }\n\t\n\t    function lib$es6$promise$$internal$$handleMaybeThenable(promise, maybeThenable) {\n\t      if (maybeThenable.constructor === promise.constructor) {\n\t        lib$es6$promise$$internal$$handleOwnThenable(promise, maybeThenable);\n\t      } else {\n\t        var then = lib$es6$promise$$internal$$getThen(maybeThenable);\n\t\n\t        if (then === lib$es6$promise$$internal$$GET_THEN_ERROR) {\n\t          lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$GET_THEN_ERROR.error);\n\t        } else if (then === undefined) {\n\t          lib$es6$promise$$internal$$fulfill(promise, maybeThenable);\n\t        } else if (lib$es6$promise$utils$$isFunction(then)) {\n\t          lib$es6$promise$$internal$$handleForeignThenable(promise, maybeThenable, then);\n\t        } else {\n\t          lib$es6$promise$$internal$$fulfill(promise, maybeThenable);\n\t        }\n\t      }\n\t    }\n\t\n\t    function lib$es6$promise$$internal$$resolve(promise, value) {\n\t      if (promise === value) {\n\t        lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$selfFullfillment());\n\t      } else if (lib$es6$promise$utils$$objectOrFunction(value)) {\n\t        lib$es6$promise$$internal$$handleMaybeThenable(promise, value);\n\t      } else {\n\t        lib$es6$promise$$internal$$fulfill(promise, value);\n\t      }\n\t    }\n\t\n\t    function lib$es6$promise$$internal$$publishRejection(promise) {\n\t      if (promise._onerror) {\n\t        promise._onerror(promise._result);\n\t      }\n\t\n\t      lib$es6$promise$$internal$$publish(promise);\n\t    }\n\t\n\t    function lib$es6$promise$$internal$$fulfill(promise, value) {\n\t      if (promise._state !== lib$es6$promise$$internal$$PENDING) { return; }\n\t\n\t      promise._result = value;\n\t      promise._state = lib$es6$promise$$internal$$FULFILLED;\n\t\n\t      if (promise._subscribers.length !== 0) {\n\t        lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publish, promise);\n\t      }\n\t    }\n\t\n\t    function lib$es6$promise$$internal$$reject(promise, reason) {\n\t      if (promise._state !== lib$es6$promise$$internal$$PENDING) { return; }\n\t      promise._state = lib$es6$promise$$internal$$REJECTED;\n\t      promise._result = reason;\n\t\n\t      lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publishRejection, promise);\n\t    }\n\t\n\t    function lib$es6$promise$$internal$$subscribe(parent, child, onFulfillment, onRejection) {\n\t      var subscribers = parent._subscribers;\n\t      var length = subscribers.length;\n\t\n\t      parent._onerror = null;\n\t\n\t      subscribers[length] = child;\n\t      subscribers[length + lib$es6$promise$$internal$$FULFILLED] = onFulfillment;\n\t      subscribers[length + lib$es6$promise$$internal$$REJECTED]  = onRejection;\n\t\n\t      if (length === 0 && parent._state) {\n\t        lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publish, parent);\n\t      }\n\t    }\n\t\n\t    function lib$es6$promise$$internal$$publish(promise) {\n\t      var subscribers = promise._subscribers;\n\t      var settled = promise._state;\n\t\n\t      if (subscribers.length === 0) { return; }\n\t\n\t      var child, callback, detail = promise._result;\n\t\n\t      for (var i = 0; i < subscribers.length; i += 3) {\n\t        child = subscribers[i];\n\t        callback = subscribers[i + settled];\n\t\n\t        if (child) {\n\t          lib$es6$promise$$internal$$invokeCallback(settled, child, callback, detail);\n\t        } else {\n\t          callback(detail);\n\t        }\n\t      }\n\t\n\t      promise._subscribers.length = 0;\n\t    }\n\t\n\t    function lib$es6$promise$$internal$$ErrorObject() {\n\t      this.error = null;\n\t    }\n\t\n\t    var lib$es6$promise$$internal$$TRY_CATCH_ERROR = new lib$es6$promise$$internal$$ErrorObject();\n\t\n\t    function lib$es6$promise$$internal$$tryCatch(callback, detail) {\n\t      try {\n\t        return callback(detail);\n\t      } catch(e) {\n\t        lib$es6$promise$$internal$$TRY_CATCH_ERROR.error = e;\n\t        return lib$es6$promise$$internal$$TRY_CATCH_ERROR;\n\t      }\n\t    }\n\t\n\t    function lib$es6$promise$$internal$$invokeCallback(settled, promise, callback, detail) {\n\t      var hasCallback = lib$es6$promise$utils$$isFunction(callback),\n\t          value, error, succeeded, failed;\n\t\n\t      if (hasCallback) {\n\t        value = lib$es6$promise$$internal$$tryCatch(callback, detail);\n\t\n\t        if (value === lib$es6$promise$$internal$$TRY_CATCH_ERROR) {\n\t          failed = true;\n\t          error = value.error;\n\t          value = null;\n\t        } else {\n\t          succeeded = true;\n\t        }\n\t\n\t        if (promise === value) {\n\t          lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$cannotReturnOwn());\n\t          return;\n\t        }\n\t\n\t      } else {\n\t        value = detail;\n\t        succeeded = true;\n\t      }\n\t\n\t      if (promise._state !== lib$es6$promise$$internal$$PENDING) {\n\t        // noop\n\t      } else if (hasCallback && succeeded) {\n\t        lib$es6$promise$$internal$$resolve(promise, value);\n\t      } else if (failed) {\n\t        lib$es6$promise$$internal$$reject(promise, error);\n\t      } else if (settled === lib$es6$promise$$internal$$FULFILLED) {\n\t        lib$es6$promise$$internal$$fulfill(promise, value);\n\t      } else if (settled === lib$es6$promise$$internal$$REJECTED) {\n\t        lib$es6$promise$$internal$$reject(promise, value);\n\t      }\n\t    }\n\t\n\t    function lib$es6$promise$$internal$$initializePromise(promise, resolver) {\n\t      try {\n\t        resolver(function resolvePromise(value){\n\t          lib$es6$promise$$internal$$resolve(promise, value);\n\t        }, function rejectPromise(reason) {\n\t          lib$es6$promise$$internal$$reject(promise, reason);\n\t        });\n\t      } catch(e) {\n\t        lib$es6$promise$$internal$$reject(promise, e);\n\t      }\n\t    }\n\t\n\t    function lib$es6$promise$enumerator$$Enumerator(Constructor, input) {\n\t      var enumerator = this;\n\t\n\t      enumerator._instanceConstructor = Constructor;\n\t      enumerator.promise = new Constructor(lib$es6$promise$$internal$$noop);\n\t\n\t      if (enumerator._validateInput(input)) {\n\t        enumerator._input     = input;\n\t        enumerator.length     = input.length;\n\t        enumerator._remaining = input.length;\n\t\n\t        enumerator._init();\n\t\n\t        if (enumerator.length === 0) {\n\t          lib$es6$promise$$internal$$fulfill(enumerator.promise, enumerator._result);\n\t        } else {\n\t          enumerator.length = enumerator.length || 0;\n\t          enumerator._enumerate();\n\t          if (enumerator._remaining === 0) {\n\t            lib$es6$promise$$internal$$fulfill(enumerator.promise, enumerator._result);\n\t          }\n\t        }\n\t      } else {\n\t        lib$es6$promise$$internal$$reject(enumerator.promise, enumerator._validationError());\n\t      }\n\t    }\n\t\n\t    lib$es6$promise$enumerator$$Enumerator.prototype._validateInput = function(input) {\n\t      return lib$es6$promise$utils$$isArray(input);\n\t    };\n\t\n\t    lib$es6$promise$enumerator$$Enumerator.prototype._validationError = function() {\n\t      return new Error('Array Methods must be provided an Array');\n\t    };\n\t\n\t    lib$es6$promise$enumerator$$Enumerator.prototype._init = function() {\n\t      this._result = new Array(this.length);\n\t    };\n\t\n\t    var lib$es6$promise$enumerator$$default = lib$es6$promise$enumerator$$Enumerator;\n\t\n\t    lib$es6$promise$enumerator$$Enumerator.prototype._enumerate = function() {\n\t      var enumerator = this;\n\t\n\t      var length  = enumerator.length;\n\t      var promise = enumerator.promise;\n\t      var input   = enumerator._input;\n\t\n\t      for (var i = 0; promise._state === lib$es6$promise$$internal$$PENDING && i < length; i++) {\n\t        enumerator._eachEntry(input[i], i);\n\t      }\n\t    };\n\t\n\t    lib$es6$promise$enumerator$$Enumerator.prototype._eachEntry = function(entry, i) {\n\t      var enumerator = this;\n\t      var c = enumerator._instanceConstructor;\n\t\n\t      if (lib$es6$promise$utils$$isMaybeThenable(entry)) {\n\t        if (entry.constructor === c && entry._state !== lib$es6$promise$$internal$$PENDING) {\n\t          entry._onerror = null;\n\t          enumerator._settledAt(entry._state, i, entry._result);\n\t        } else {\n\t          enumerator._willSettleAt(c.resolve(entry), i);\n\t        }\n\t      } else {\n\t        enumerator._remaining--;\n\t        enumerator._result[i] = entry;\n\t      }\n\t    };\n\t\n\t    lib$es6$promise$enumerator$$Enumerator.prototype._settledAt = function(state, i, value) {\n\t      var enumerator = this;\n\t      var promise = enumerator.promise;\n\t\n\t      if (promise._state === lib$es6$promise$$internal$$PENDING) {\n\t        enumerator._remaining--;\n\t\n\t        if (state === lib$es6$promise$$internal$$REJECTED) {\n\t          lib$es6$promise$$internal$$reject(promise, value);\n\t        } else {\n\t          enumerator._result[i] = value;\n\t        }\n\t      }\n\t\n\t      if (enumerator._remaining === 0) {\n\t        lib$es6$promise$$internal$$fulfill(promise, enumerator._result);\n\t      }\n\t    };\n\t\n\t    lib$es6$promise$enumerator$$Enumerator.prototype._willSettleAt = function(promise, i) {\n\t      var enumerator = this;\n\t\n\t      lib$es6$promise$$internal$$subscribe(promise, undefined, function(value) {\n\t        enumerator._settledAt(lib$es6$promise$$internal$$FULFILLED, i, value);\n\t      }, function(reason) {\n\t        enumerator._settledAt(lib$es6$promise$$internal$$REJECTED, i, reason);\n\t      });\n\t    };\n\t    function lib$es6$promise$promise$all$$all(entries) {\n\t      return new lib$es6$promise$enumerator$$default(this, entries).promise;\n\t    }\n\t    var lib$es6$promise$promise$all$$default = lib$es6$promise$promise$all$$all;\n\t    function lib$es6$promise$promise$race$$race(entries) {\n\t      /*jshint validthis:true */\n\t      var Constructor = this;\n\t\n\t      var promise = new Constructor(lib$es6$promise$$internal$$noop);\n\t\n\t      if (!lib$es6$promise$utils$$isArray(entries)) {\n\t        lib$es6$promise$$internal$$reject(promise, new TypeError('You must pass an array to race.'));\n\t        return promise;\n\t      }\n\t\n\t      var length = entries.length;\n\t\n\t      function onFulfillment(value) {\n\t        lib$es6$promise$$internal$$resolve(promise, value);\n\t      }\n\t\n\t      function onRejection(reason) {\n\t        lib$es6$promise$$internal$$reject(promise, reason);\n\t      }\n\t\n\t      for (var i = 0; promise._state === lib$es6$promise$$internal$$PENDING && i < length; i++) {\n\t        lib$es6$promise$$internal$$subscribe(Constructor.resolve(entries[i]), undefined, onFulfillment, onRejection);\n\t      }\n\t\n\t      return promise;\n\t    }\n\t    var lib$es6$promise$promise$race$$default = lib$es6$promise$promise$race$$race;\n\t    function lib$es6$promise$promise$resolve$$resolve(object) {\n\t      /*jshint validthis:true */\n\t      var Constructor = this;\n\t\n\t      if (object && typeof object === 'object' && object.constructor === Constructor) {\n\t        return object;\n\t      }\n\t\n\t      var promise = new Constructor(lib$es6$promise$$internal$$noop);\n\t      lib$es6$promise$$internal$$resolve(promise, object);\n\t      return promise;\n\t    }\n\t    var lib$es6$promise$promise$resolve$$default = lib$es6$promise$promise$resolve$$resolve;\n\t    function lib$es6$promise$promise$reject$$reject(reason) {\n\t      /*jshint validthis:true */\n\t      var Constructor = this;\n\t      var promise = new Constructor(lib$es6$promise$$internal$$noop);\n\t      lib$es6$promise$$internal$$reject(promise, reason);\n\t      return promise;\n\t    }\n\t    var lib$es6$promise$promise$reject$$default = lib$es6$promise$promise$reject$$reject;\n\t\n\t    var lib$es6$promise$promise$$counter = 0;\n\t\n\t    function lib$es6$promise$promise$$needsResolver() {\n\t      throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n\t    }\n\t\n\t    function lib$es6$promise$promise$$needsNew() {\n\t      throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n\t    }\n\t\n\t    var lib$es6$promise$promise$$default = lib$es6$promise$promise$$Promise;\n\t    /**\n\t      Promise objects represent the eventual result of an asynchronous operation. The\n\t      primary way of interacting with a promise is through its `then` method, which\n\t      registers callbacks to receive either a promise's eventual value or the reason\n\t      why the promise cannot be fulfilled.\n\t\n\t      Terminology\n\t      -----------\n\t\n\t      - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n\t      - `thenable` is an object or function that defines a `then` method.\n\t      - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n\t      - `exception` is a value that is thrown using the throw statement.\n\t      - `reason` is a value that indicates why a promise was rejected.\n\t      - `settled` the final resting state of a promise, fulfilled or rejected.\n\t\n\t      A promise can be in one of three states: pending, fulfilled, or rejected.\n\t\n\t      Promises that are fulfilled have a fulfillment value and are in the fulfilled\n\t      state.  Promises that are rejected have a rejection reason and are in the\n\t      rejected state.  A fulfillment value is never a thenable.\n\t\n\t      Promises can also be said to *resolve* a value.  If this value is also a\n\t      promise, then the original promise's settled state will match the value's\n\t      settled state.  So a promise that *resolves* a promise that rejects will\n\t      itself reject, and a promise that *resolves* a promise that fulfills will\n\t      itself fulfill.\n\t\n\t\n\t      Basic Usage:\n\t      ------------\n\t\n\t      ```js\n\t      var promise = new Promise(function(resolve, reject) {\n\t        // on success\n\t        resolve(value);\n\t\n\t        // on failure\n\t        reject(reason);\n\t      });\n\t\n\t      promise.then(function(value) {\n\t        // on fulfillment\n\t      }, function(reason) {\n\t        // on rejection\n\t      });\n\t      ```\n\t\n\t      Advanced Usage:\n\t      ---------------\n\t\n\t      Promises shine when abstracting away asynchronous interactions such as\n\t      `XMLHttpRequest`s.\n\t\n\t      ```js\n\t      function getJSON(url) {\n\t        return new Promise(function(resolve, reject){\n\t          var xhr = new XMLHttpRequest();\n\t\n\t          xhr.open('GET', url);\n\t          xhr.onreadystatechange = handler;\n\t          xhr.responseType = 'json';\n\t          xhr.setRequestHeader('Accept', 'application/json');\n\t          xhr.send();\n\t\n\t          function handler() {\n\t            if (this.readyState === this.DONE) {\n\t              if (this.status === 200) {\n\t                resolve(this.response);\n\t              } else {\n\t                reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n\t              }\n\t            }\n\t          };\n\t        });\n\t      }\n\t\n\t      getJSON('/posts.json').then(function(json) {\n\t        // on fulfillment\n\t      }, function(reason) {\n\t        // on rejection\n\t      });\n\t      ```\n\t\n\t      Unlike callbacks, promises are great composable primitives.\n\t\n\t      ```js\n\t      Promise.all([\n\t        getJSON('/posts'),\n\t        getJSON('/comments')\n\t      ]).then(function(values){\n\t        values[0] // => postsJSON\n\t        values[1] // => commentsJSON\n\t\n\t        return values;\n\t      });\n\t      ```\n\t\n\t      @class Promise\n\t      @param {function} resolver\n\t      Useful for tooling.\n\t      @constructor\n\t    */\n\t    function lib$es6$promise$promise$$Promise(resolver) {\n\t      this._id = lib$es6$promise$promise$$counter++;\n\t      this._state = undefined;\n\t      this._result = undefined;\n\t      this._subscribers = [];\n\t\n\t      if (lib$es6$promise$$internal$$noop !== resolver) {\n\t        if (!lib$es6$promise$utils$$isFunction(resolver)) {\n\t          lib$es6$promise$promise$$needsResolver();\n\t        }\n\t\n\t        if (!(this instanceof lib$es6$promise$promise$$Promise)) {\n\t          lib$es6$promise$promise$$needsNew();\n\t        }\n\t\n\t        lib$es6$promise$$internal$$initializePromise(this, resolver);\n\t      }\n\t    }\n\t\n\t    lib$es6$promise$promise$$Promise.all = lib$es6$promise$promise$all$$default;\n\t    lib$es6$promise$promise$$Promise.race = lib$es6$promise$promise$race$$default;\n\t    lib$es6$promise$promise$$Promise.resolve = lib$es6$promise$promise$resolve$$default;\n\t    lib$es6$promise$promise$$Promise.reject = lib$es6$promise$promise$reject$$default;\n\t    lib$es6$promise$promise$$Promise._setScheduler = lib$es6$promise$asap$$setScheduler;\n\t    lib$es6$promise$promise$$Promise._setAsap = lib$es6$promise$asap$$setAsap;\n\t    lib$es6$promise$promise$$Promise._asap = lib$es6$promise$asap$$asap;\n\t\n\t    lib$es6$promise$promise$$Promise.prototype = {\n\t      constructor: lib$es6$promise$promise$$Promise,\n\t\n\t    /**\n\t      The primary way of interacting with a promise is through its `then` method,\n\t      which registers callbacks to receive either a promise's eventual value or the\n\t      reason why the promise cannot be fulfilled.\n\t\n\t      ```js\n\t      findUser().then(function(user){\n\t        // user is available\n\t      }, function(reason){\n\t        // user is unavailable, and you are given the reason why\n\t      });\n\t      ```\n\t\n\t      Chaining\n\t      --------\n\t\n\t      The return value of `then` is itself a promise.  This second, 'downstream'\n\t      promise is resolved with the return value of the first promise's fulfillment\n\t      or rejection handler, or rejected if the handler throws an exception.\n\t\n\t      ```js\n\t      findUser().then(function (user) {\n\t        return user.name;\n\t      }, function (reason) {\n\t        return 'default name';\n\t      }).then(function (userName) {\n\t        // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n\t        // will be `'default name'`\n\t      });\n\t\n\t      findUser().then(function (user) {\n\t        throw new Error('Found user, but still unhappy');\n\t      }, function (reason) {\n\t        throw new Error('`findUser` rejected and we're unhappy');\n\t      }).then(function (value) {\n\t        // never reached\n\t      }, function (reason) {\n\t        // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n\t        // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n\t      });\n\t      ```\n\t      If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n\t\n\t      ```js\n\t      findUser().then(function (user) {\n\t        throw new PedagogicalException('Upstream error');\n\t      }).then(function (value) {\n\t        // never reached\n\t      }).then(function (value) {\n\t        // never reached\n\t      }, function (reason) {\n\t        // The `PedgagocialException` is propagated all the way down to here\n\t      });\n\t      ```\n\t\n\t      Assimilation\n\t      ------------\n\t\n\t      Sometimes the value you want to propagate to a downstream promise can only be\n\t      retrieved asynchronously. This can be achieved by returning a promise in the\n\t      fulfillment or rejection handler. The downstream promise will then be pending\n\t      until the returned promise is settled. This is called *assimilation*.\n\t\n\t      ```js\n\t      findUser().then(function (user) {\n\t        return findCommentsByAuthor(user);\n\t      }).then(function (comments) {\n\t        // The user's comments are now available\n\t      });\n\t      ```\n\t\n\t      If the assimliated promise rejects, then the downstream promise will also reject.\n\t\n\t      ```js\n\t      findUser().then(function (user) {\n\t        return findCommentsByAuthor(user);\n\t      }).then(function (comments) {\n\t        // If `findCommentsByAuthor` fulfills, we'll have the value here\n\t      }, function (reason) {\n\t        // If `findCommentsByAuthor` rejects, we'll have the reason here\n\t      });\n\t      ```\n\t\n\t      Simple Example\n\t      --------------\n\t\n\t      Synchronous Example\n\t\n\t      ```javascript\n\t      var result;\n\t\n\t      try {\n\t        result = findResult();\n\t        // success\n\t      } catch(reason) {\n\t        // failure\n\t      }\n\t      ```\n\t\n\t      Errback Example\n\t\n\t      ```js\n\t      findResult(function(result, err){\n\t        if (err) {\n\t          // failure\n\t        } else {\n\t          // success\n\t        }\n\t      });\n\t      ```\n\t\n\t      Promise Example;\n\t\n\t      ```javascript\n\t      findResult().then(function(result){\n\t        // success\n\t      }, function(reason){\n\t        // failure\n\t      });\n\t      ```\n\t\n\t      Advanced Example\n\t      --------------\n\t\n\t      Synchronous Example\n\t\n\t      ```javascript\n\t      var author, books;\n\t\n\t      try {\n\t        author = findAuthor();\n\t        books  = findBooksByAuthor(author);\n\t        // success\n\t      } catch(reason) {\n\t        // failure\n\t      }\n\t      ```\n\t\n\t      Errback Example\n\t\n\t      ```js\n\t\n\t      function foundBooks(books) {\n\t\n\t      }\n\t\n\t      function failure(reason) {\n\t\n\t      }\n\t\n\t      findAuthor(function(author, err){\n\t        if (err) {\n\t          failure(err);\n\t          // failure\n\t        } else {\n\t          try {\n\t            findBoooksByAuthor(author, function(books, err) {\n\t              if (err) {\n\t                failure(err);\n\t              } else {\n\t                try {\n\t                  foundBooks(books);\n\t                } catch(reason) {\n\t                  failure(reason);\n\t                }\n\t              }\n\t            });\n\t          } catch(error) {\n\t            failure(err);\n\t          }\n\t          // success\n\t        }\n\t      });\n\t      ```\n\t\n\t      Promise Example;\n\t\n\t      ```javascript\n\t      findAuthor().\n\t        then(findBooksByAuthor).\n\t        then(function(books){\n\t          // found books\n\t      }).catch(function(reason){\n\t        // something went wrong\n\t      });\n\t      ```\n\t\n\t      @method then\n\t      @param {Function} onFulfilled\n\t      @param {Function} onRejected\n\t      Useful for tooling.\n\t      @return {Promise}\n\t    */\n\t      then: function(onFulfillment, onRejection) {\n\t        var parent = this;\n\t        var state = parent._state;\n\t\n\t        if (state === lib$es6$promise$$internal$$FULFILLED && !onFulfillment || state === lib$es6$promise$$internal$$REJECTED && !onRejection) {\n\t          return this;\n\t        }\n\t\n\t        var child = new this.constructor(lib$es6$promise$$internal$$noop);\n\t        var result = parent._result;\n\t\n\t        if (state) {\n\t          var callback = arguments[state - 1];\n\t          lib$es6$promise$asap$$asap(function(){\n\t            lib$es6$promise$$internal$$invokeCallback(state, child, callback, result);\n\t          });\n\t        } else {\n\t          lib$es6$promise$$internal$$subscribe(parent, child, onFulfillment, onRejection);\n\t        }\n\t\n\t        return child;\n\t      },\n\t\n\t    /**\n\t      `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n\t      as the catch block of a try/catch statement.\n\t\n\t      ```js\n\t      function findAuthor(){\n\t        throw new Error('couldn't find that author');\n\t      }\n\t\n\t      // synchronous\n\t      try {\n\t        findAuthor();\n\t      } catch(reason) {\n\t        // something went wrong\n\t      }\n\t\n\t      // async with promises\n\t      findAuthor().catch(function(reason){\n\t        // something went wrong\n\t      });\n\t      ```\n\t\n\t      @method catch\n\t      @param {Function} onRejection\n\t      Useful for tooling.\n\t      @return {Promise}\n\t    */\n\t      'catch': function(onRejection) {\n\t        return this.then(null, onRejection);\n\t      }\n\t    };\n\t    function lib$es6$promise$polyfill$$polyfill() {\n\t      var local;\n\t\n\t      if (typeof global !== 'undefined') {\n\t          local = global;\n\t      } else if (typeof self !== 'undefined') {\n\t          local = self;\n\t      } else {\n\t          try {\n\t              local = Function('return this')();\n\t          } catch (e) {\n\t              throw new Error('polyfill failed because global object is unavailable in this environment');\n\t          }\n\t      }\n\t\n\t      var P = local.Promise;\n\t\n\t      if (P && Object.prototype.toString.call(P.resolve()) === '[object Promise]' && !P.cast) {\n\t        return;\n\t      }\n\t\n\t      local.Promise = lib$es6$promise$promise$$default;\n\t    }\n\t    var lib$es6$promise$polyfill$$default = lib$es6$promise$polyfill$$polyfill;\n\t\n\t    var lib$es6$promise$umd$$ES6Promise = {\n\t      'Promise': lib$es6$promise$promise$$default,\n\t      'polyfill': lib$es6$promise$polyfill$$default\n\t    };\n\t\n\t    /* global define:true module:true window: true */\n\t    if (\"function\" === 'function' && __webpack_require__(30)['amd']) {\n\t      !(__WEBPACK_AMD_DEFINE_RESULT__ = function() { return lib$es6$promise$umd$$ES6Promise; }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t    } else if (typeof module !== 'undefined' && module['exports']) {\n\t      module['exports'] = lib$es6$promise$umd$$ES6Promise;\n\t    } else if (typeof this !== 'undefined') {\n\t      this['ES6Promise'] = lib$es6$promise$umd$$ES6Promise;\n\t    }\n\t\n\t    lib$es6$promise$polyfill$$default();\n\t}).call(this);\n\t\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(24), __webpack_require__(25).setImmediate, (function() { return this; }()), __webpack_require__(6)(module)))\n\n/***/ },\n/* 29 */\n/***/ function(module, exports) {\n\n\t/* (ignored) */\n\n/***/ },\n/* 30 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function() { throw new Error(\"define cannot be used indirect\"); };\r\n\n\n/***/ },\n/* 31 */\n/***/ function(module, exports) {\n\n\t// Ignore module for browserify (see package.json)\n\n/***/ },\n/* 32 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {module.exports = __webpack_amd_options__;\r\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, {}))\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar require;var require;// Replace local require by a lazy loader\n\tvar globalRequire = require;\n\trequire = function () {};\n\t\n\t// Expose submodules\n\tvar exports = module.exports = {\n\t  Lexer:        require('./lib/N3Lexer'),\n\t  Parser:       require('./lib/N3Parser'),\n\t  Writer:       require('./lib/N3Writer'),\n\t  Store:        require('./lib/N3Store'),\n\t  StreamParser: require('./lib/N3StreamParser'),\n\t  StreamWriter: require('./lib/N3StreamWriter'),\n\t  Util:         require('./lib/N3Util'),\n\t};\n\t\n\t// Load submodules on first access\n\tObject.keys(exports).forEach(function (submodule) {\n\t  Object.defineProperty(exports, submodule, {\n\t    configurable: true,\n\t    enumerable: true,\n\t    get: function () {\n\t      delete exports[submodule];\n\t      return exports[submodule] = __webpack_require__(34)(\"./N3\" + submodule);\n\t    },\n\t  });\n\t});\n\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar map = {\n\t\t\"./N3Lexer\": 35,\n\t\t\"./N3Lexer.js\": 35,\n\t\t\"./N3Parser\": 36,\n\t\t\"./N3Parser.js\": 36,\n\t\t\"./N3Store\": 37,\n\t\t\"./N3Store.js\": 37,\n\t\t\"./N3StreamParser\": 39,\n\t\t\"./N3StreamParser.js\": 39,\n\t\t\"./N3StreamWriter\": 68,\n\t\t\"./N3StreamWriter.js\": 68,\n\t\t\"./N3Util\": 38,\n\t\t\"./N3Util.js\": 38,\n\t\t\"./N3Writer\": 69,\n\t\t\"./N3Writer.js\": 69\n\t};\n\tfunction webpackContext(req) {\n\t\treturn __webpack_require__(webpackContextResolve(req));\n\t};\n\tfunction webpackContextResolve(req) {\n\t\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n\t};\n\twebpackContext.keys = function webpackContextKeys() {\n\t\treturn Object.keys(map);\n\t};\n\twebpackContext.resolve = webpackContextResolve;\n\tmodule.exports = webpackContext;\n\twebpackContext.id = 34;\n\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(setImmediate) {// **N3Lexer** tokenizes N3 documents.\n\tvar fromCharCode = String.fromCharCode;\n\tvar immediately = typeof setImmediate === 'function' ? setImmediate :\n\t                  function setImmediate(func) { setTimeout(func, 0); };\n\t\n\t// Regular expression and replacement string to escape N3 strings.\n\t// Note how we catch invalid unicode sequences separately (they will trigger an error).\n\tvar escapeSequence = /\\\\u([a-fA-F0-9]{4})|\\\\U([a-fA-F0-9]{8})|\\\\[uU]|\\\\(.)/g;\n\tvar escapeReplacements = { '\\\\': '\\\\', \"'\": \"'\", '\"': '\"',\n\t                           'n': '\\n', 'r': '\\r', 't': '\\t', 'f': '\\f', 'b': '\\b',\n\t                           '_': '_', '~': '~', '.': '.', '-': '-', '!': '!', '$': '$', '&': '&',\n\t                           '(': '(', ')': ')', '*': '*', '+': '+', ',': ',', ';': ';', '=': '=',\n\t                           '/': '/', '?': '?', '#': '#', '@': '@', '%': '%' };\n\tvar illegalIriChars = /[\\x00-\\x20<>\\\\\"\\{\\}\\|\\^\\`]/;\n\t\n\t// ## Constructor\n\tfunction N3Lexer(options) {\n\t  if (!(this instanceof N3Lexer))\n\t    return new N3Lexer(options);\n\t\n\t  // In line mode (N-Triples or N-Quads), only simple features may be parsed\n\t  if (options && options.lineMode) {\n\t    // Don't tokenize special literals\n\t    this._tripleQuotedString = this._number = this._boolean = /$0^/;\n\t    // Swap the tokenize method for a restricted version\n\t    var self = this;\n\t    this._tokenize = this.tokenize;\n\t    this.tokenize = function (input, callback) {\n\t      this._tokenize(input, function (error, token) {\n\t        if (!error && /^(?:IRI|prefixed|literal|langcode|type|\\.|eof)$/.test(token.type))\n\t          callback && callback(error, token);\n\t        else\n\t          callback && callback(error || self._syntaxError(token.type, callback = null));\n\t      });\n\t    };\n\t  }\n\t}\n\t\n\tN3Lexer.prototype = {\n\t  // ## Regular expressions\n\t  // It's slightly faster to have these as properties than as in-scope variables.\n\t\n\t  _iri: /^<((?:[^>\\\\]|\\\\[uU])+)>/, // IRI with escape sequences; needs sanity check after unescaping\n\t  _unescapedIri: /^<([^\\x00-\\x20<>\\\\\"\\{\\}\\|\\^\\`]*)>/, // IRI without escape sequences; no unescaping\n\t  _unescapedString: /^\"[^\"\\\\]+\"(?=[^\"\\\\])/, // non-empty string without escape sequences\n\t  _singleQuotedString: /^\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\"(?=[^\"\\\\])|^'[^'\\\\]*(?:\\\\.[^'\\\\]*)*'(?=[^'\\\\])/,\n\t  _tripleQuotedString: /^\"\"(\"[^\"\\\\]*(?:(?:\\\\.|\"(?!\"\"))[^\"\\\\]*)*\")\"\"|^''('[^'\\\\]*(?:(?:\\\\.|'(?!''))[^'\\\\]*)*')''/,\n\t  _langcode: /^@([a-z]+(?:-[a-z0-9]+)*)(?=[^a-z0-9\\-])/i,\n\t  _prefix: /^((?:[A-Za-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:\\.?[\\-0-9A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)?:(?=[#\\s<])/,\n\t  _prefixed: /^((?:[A-Za-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:\\.?[\\-0-9A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)?:((?:(?:[0-:A-Z_a-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff]|%[0-9a-fA-F]{2}|\\\\[!#-\\/;=?\\-@_~])(?:(?:[\\.\\-0-:A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff]|%[0-9a-fA-F]{2}|\\\\[!#-\\/;=?\\-@_~])*(?:[\\-0-:A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff]|%[0-9a-fA-F]{2}|\\\\[!#-\\/;=?\\-@_~]))?)?)(?=\\.?[,;\\s#()\\[\\]\\{\\}\"'<])/,\n\t  _blank: /^_:((?:[0-9A-Z_a-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:\\.?[\\-0-9A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)(?=\\.?[,;:\\s#()\\[\\]\\{\\}\"'<])/,\n\t  _number: /^[\\-+]?(?:\\d+\\.?\\d*([eE](?:[\\-\\+])?\\d+)|\\d*\\.?\\d+)(?=[.,;:\\s#()\\[\\]\\{\\}\"'<])/,\n\t  _boolean: /^(?:true|false)(?=[.,;:\\s#()\\[\\]\\{\\}\"'<])/,\n\t  _keyword: /^@[a-z]+(?=[\\s#<:])/,\n\t  _sparqlKeyword: /^(?:PREFIX|BASE|GRAPH)(?=[\\s#<:])/i,\n\t  _shortPredicates: /^a(?=\\s+|<)/,\n\t  _newline: /^[ \\t]*(?:#[^\\n\\r]*)?(?:\\r\\n|\\n|\\r)[ \\t]*/,\n\t  _whitespace: /^[ \\t]+/,\n\t  _endOfFile: /^(?:#[^\\n\\r]*)?$/,\n\t\n\t  // ## Private methods\n\t\n\t  // ### `_tokenizeToEnd` tokenizes as for as possible, emitting tokens through the callback.\n\t  _tokenizeToEnd: function (callback, inputFinished) {\n\t    // Continue parsing as far as possible; the loop will return eventually.\n\t    var input = this._input;\n\t    while (true) {\n\t      // Count and skip whitespace lines.\n\t      var whiteSpaceMatch;\n\t      while (whiteSpaceMatch = this._newline.exec(input))\n\t        input = input.substr(whiteSpaceMatch[0].length, input.length), this._line++;\n\t      // Skip whitespace on current line.\n\t      if (whiteSpaceMatch = this._whitespace.exec(input))\n\t        input = input.substr(whiteSpaceMatch[0].length, input.length);\n\t\n\t      // Stop for now if we're at the end.\n\t      if (this._endOfFile.test(input)) {\n\t        // If the input is finished, emit EOF.\n\t        if (inputFinished)\n\t          callback(input = null, { line: this._line, type: 'eof', value: '', prefix: '' });\n\t        return this._input = input;\n\t      }\n\t\n\t      // Look for specific token types based on the first character.\n\t      var line = this._line, type = '', value = '', prefix = '',\n\t          firstChar = input[0], match = null, matchLength = 0, unescaped, inconclusive = false;\n\t      switch (firstChar) {\n\t      case '^':\n\t        // Try to match a type.\n\t        if (input.length === 1) break;\n\t        else if (input[1] !== '^') return reportSyntaxError(this);\n\t        this._prevTokenType = '^';\n\t        // Move to type IRI or prefixed name.\n\t        input = input.substr(2);\n\t        if (input[0] !== '<') {\n\t          inconclusive = true;\n\t          break;\n\t        }\n\t        // Fall through in case the type is an IRI.\n\t\n\t      case '<':\n\t        // Try to find a full IRI without escape sequences.\n\t        if (match = this._unescapedIri.exec(input))\n\t          type = 'IRI', value = match[1];\n\t        // Try to find a full IRI with escape sequences.\n\t        else if (match = this._iri.exec(input)) {\n\t          unescaped = this._unescape(match[1]);\n\t          if (unescaped === null || illegalIriChars.test(unescaped))\n\t            return reportSyntaxError(this);\n\t          type = 'IRI', value = unescaped;\n\t        }\n\t        break;\n\t\n\t      case '_':\n\t        // Try to find a blank node. Since it can contain (but not end with) a dot,\n\t        // we always need a non-dot character before deciding it is a prefixed name.\n\t        // Therefore, try inserting a space if we're at the end of the input.\n\t        if ((match = this._blank.exec(input)) ||\n\t            inputFinished && (match = this._blank.exec(input + ' ')))\n\t          type = 'prefixed', prefix = '_', value = match[1];\n\t        break;\n\t\n\t      case '\"':\n\t      case \"'\":\n\t        // Try to find a non-empty double-quoted literal without escape sequences.\n\t        if (match = this._unescapedString.exec(input))\n\t          type = 'literal', value = match[0];\n\t        // Try to find any other literal wrapped in a pair of single or double quotes.\n\t        else if (match = this._singleQuotedString.exec(input)) {\n\t          unescaped = this._unescape(match[0]);\n\t          if (unescaped === null)\n\t            return reportSyntaxError(this);\n\t          type = 'literal', value = unescaped.replace(/^'|'$/g, '\"');\n\t        }\n\t        // Try to find a literal wrapped in three pairs of single or double quotes.\n\t        else if (match = this._tripleQuotedString.exec(input)) {\n\t          unescaped = match[1] || match[2];\n\t          // Count the newlines and advance line counter.\n\t          this._line += unescaped.split(/\\r\\n|\\r|\\n/).length - 1;\n\t          unescaped = this._unescape(unescaped);\n\t          if (unescaped === null)\n\t            return reportSyntaxError(this);\n\t          type = 'literal', value = unescaped.replace(/^'|'$/g, '\"');\n\t        }\n\t        break;\n\t\n\t      case '@':\n\t        // Try to find a language code.\n\t        if (this._prevTokenType === 'literal' && (match = this._langcode.exec(input)))\n\t          type = 'langcode', value = match[1];\n\t        // Try to find a keyword.\n\t        else if (match = this._keyword.exec(input))\n\t          type = match[0];\n\t        break;\n\t\n\t      case '.':\n\t        // Try to find a dot as punctuation.\n\t        if (input.length === 1 ? inputFinished : (input[1] < '0' || input[1] > '9')) {\n\t          type = '.';\n\t          matchLength = 1;\n\t          break;\n\t        }\n\t        // Fall through to numerical case (could be a decimal dot).\n\t\n\t      case '0':\n\t      case '1':\n\t      case '2':\n\t      case '3':\n\t      case '4':\n\t      case '5':\n\t      case '6':\n\t      case '7':\n\t      case '8':\n\t      case '9':\n\t      case '+':\n\t      case '-':\n\t        // Try to find a number.\n\t        if (match = this._number.exec(input)) {\n\t          type = 'literal';\n\t          value = '\"' + match[0] + '\"^^http://www.w3.org/2001/XMLSchema#' +\n\t                  (match[1] ? 'double' : (/^[+\\-]?\\d+$/.test(match[0]) ? 'integer' : 'decimal'));\n\t        }\n\t        break;\n\t\n\t      case 'B':\n\t      case 'b':\n\t      case 'p':\n\t      case 'P':\n\t      case 'G':\n\t      case 'g':\n\t        // Try to find a SPARQL-style keyword.\n\t        if (match = this._sparqlKeyword.exec(input))\n\t          type = match[0].toUpperCase();\n\t        else\n\t          inconclusive = true;\n\t        break;\n\t\n\t      case 'f':\n\t      case 't':\n\t        // Try to match a boolean.\n\t        if (match = this._boolean.exec(input))\n\t          type = 'literal', value = '\"' + match[0] + '\"^^http://www.w3.org/2001/XMLSchema#boolean';\n\t        else\n\t          inconclusive = true;\n\t        break;\n\t\n\t      case 'a':\n\t        // Try to find an abbreviated predicate.\n\t        if (match = this._shortPredicates.exec(input))\n\t          type = 'abbreviation', value = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type';\n\t        else\n\t          inconclusive = true;\n\t        break;\n\t\n\t      case ',':\n\t      case ';':\n\t      case '[':\n\t      case ']':\n\t      case '(':\n\t      case ')':\n\t      case '{':\n\t      case '}':\n\t        // The next token is punctuation\n\t        matchLength = 1;\n\t        type = firstChar;\n\t        break;\n\t\n\t      default:\n\t        inconclusive = true;\n\t      }\n\t\n\t      // Some first characters do not allow an immediate decision, so inspect more.\n\t      if (inconclusive) {\n\t        // Try to find a prefix.\n\t        if ((this._prevTokenType === '@prefix' || this._prevTokenType === 'PREFIX') &&\n\t            (match = this._prefix.exec(input)))\n\t          type = 'prefix', value = match[1] || '';\n\t        // Try to find a prefixed name. Since it can contain (but not end with) a dot,\n\t        // we always need a non-dot character before deciding it is a prefixed name.\n\t        // Therefore, try inserting a space if we're at the end of the input.\n\t        else if ((match = this._prefixed.exec(input)) ||\n\t                 inputFinished && (match = this._prefixed.exec(input + ' ')))\n\t          type = 'prefixed', prefix = match[1] || '', value = this._unescape(match[2]);\n\t      }\n\t\n\t      // A type token is special: it can only be emitted after an IRI or prefixed name is read.\n\t      if (this._prevTokenType === '^')\n\t        type = (type === 'IRI' || type === 'prefixed') ? 'type' : '';\n\t\n\t      // What if nothing of the above was found?\n\t      if (!type) {\n\t        // We could be in streaming mode, and then we just wait for more input to arrive.\n\t        // Otherwise, a syntax error has occurred in the input.\n\t        // One exception: error on an unaccounted linebreak (= not inside a triple-quoted literal).\n\t        if (inputFinished || (!/^'''|^\"\"\"/.test(input) && /\\n|\\r/.test(input)))\n\t          return reportSyntaxError(this);\n\t        else\n\t          return this._input = input;\n\t      }\n\t\n\t      // Emit the parsed token.\n\t      callback(null, { line: line, type: type, value: value, prefix: prefix });\n\t      this._prevTokenType = type;\n\t\n\t      // Advance to next part to tokenize.\n\t      input = input.substr(matchLength || match[0].length, input.length);\n\t    }\n\t\n\t    // Signals the syntax error through the callback\n\t    function reportSyntaxError(self) { callback(self._syntaxError(/^\\S*/.exec(input)[0])); }\n\t  },\n\t\n\t  // ### `_unescape` replaces N3 escape codes by their corresponding characters.\n\t  _unescape: function (item) {\n\t    try {\n\t      return item.replace(escapeSequence, function (sequence, unicode4, unicode8, escapedChar) {\n\t        var charCode;\n\t        if (unicode4) {\n\t          charCode = parseInt(unicode4, 16);\n\t          if (isNaN(charCode)) throw new Error(); // can never happen (regex), but helps performance\n\t          return fromCharCode(charCode);\n\t        }\n\t        else if (unicode8) {\n\t          charCode = parseInt(unicode8, 16);\n\t          if (isNaN(charCode)) throw new Error(); // can never happen (regex), but helps performance\n\t          if (charCode <= 0xFFFF) return fromCharCode(charCode);\n\t          return fromCharCode(0xD800 + ((charCode -= 0x10000) / 0x400), 0xDC00 + (charCode & 0x3FF));\n\t        }\n\t        else {\n\t          var replacement = escapeReplacements[escapedChar];\n\t          if (!replacement)\n\t            throw new Error();\n\t          return replacement;\n\t        }\n\t      });\n\t    }\n\t    catch (error) { return null; }\n\t  },\n\t\n\t  // ### `_syntaxError` creates a syntax error for the given issue\n\t  _syntaxError: function (issue) {\n\t    this._input = null;\n\t    return new Error('Syntax error: unexpected \"' + issue + '\" on line ' + this._line + '.');\n\t  },\n\t\n\t\n\t  // ## Public methods\n\t\n\t  // ### `tokenize` starts the transformation of an N3 document into an array of tokens.\n\t  // The input can be a string or a stream.\n\t  tokenize: function (input, callback) {\n\t    var self = this;\n\t    this._line = 1;\n\t\n\t    // If the input is a string, continuously emit tokens through the callback until the end.\n\t    if (typeof input === 'string') {\n\t      this._input = input;\n\t      immediately(function () { self._tokenizeToEnd(callback, true); });\n\t    }\n\t    // Otherwise, the input will be streamed.\n\t    else {\n\t      this._input = '';\n\t\n\t      // If no input was given, it will be streamed through `addChunk` and ended with `end`\n\t      if (!input || typeof input === 'function') {\n\t        this.addChunk = addChunk;\n\t        this.end = end;\n\t        if (!callback)\n\t          callback = input;\n\t      }\n\t      // Otherwise, the input itself must be a stream\n\t      else {\n\t        if (typeof input.setEncoding === 'function')\n\t          input.setEncoding('utf8');\n\t        input.on('data', addChunk);\n\t        input.on('end', end);\n\t      }\n\t    }\n\t\n\t    // Adds the data chunk to the buffer and parses as far as possible\n\t    function addChunk(data) {\n\t      if (self._input !== null) {\n\t        self._input += data;\n\t        self._tokenizeToEnd(callback, false);\n\t      }\n\t    }\n\t\n\t    // Parses until the end\n\t    function end() {\n\t      if (self._input !== null)\n\t        self._tokenizeToEnd(callback, true);\n\t    }\n\t  },\n\t};\n\t\n\t// ## Exports\n\t\n\t// Export the `N3Lexer` class as a whole.\n\tmodule.exports = N3Lexer;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(25).setImmediate))\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// **N3Parser** parses N3 documents.\n\tvar N3Lexer = __webpack_require__(35);\n\t\n\tvar RDF_PREFIX = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',\n\t    RDF_NIL    = RDF_PREFIX + 'nil',\n\t    RDF_FIRST  = RDF_PREFIX + 'first',\n\t    RDF_REST   = RDF_PREFIX + 'rest';\n\t\n\tvar absoluteIRI = /^[a-z][a-z0-9+.-]*:/i,\n\t    schemeAuthority = /^(?:([a-z][a-z0-9+.-]*:))?(?:\\/\\/[^\\/]*)?/i,\n\t    dotSegments = /(?:^|\\/)\\.\\.?(?:$|[\\/#?])/;\n\t\n\t// The next ID for new blank nodes\n\tvar blankNodePrefix = 0, blankNodeCount = 0;\n\t\n\t// ## Constructor\n\tfunction N3Parser(options) {\n\t  if (!(this instanceof N3Parser))\n\t    return new N3Parser(options);\n\t  this._tripleStack = [];\n\t  this._graph = null;\n\t\n\t  // Set the document IRI.\n\t  options = options || {};\n\t  this._setBase(options.documentIRI);\n\t\n\t  // Set supported features depending on the format.\n\t  var format = (typeof options.format === 'string') && options.format.match(/\\w*$/)[0].toLowerCase(),\n\t      isTurtle = format === 'turtle', isTriG = format === 'trig',\n\t      isNTriples = /triple/.test(format), isNQuads = /quad/.test(format),\n\t      isLineMode = isNTriples || isNQuads;\n\t  if (!(this._supportsNamedGraphs = !isTurtle))\n\t    this._readPredicateOrNamedGraph = this._readPredicate;\n\t  this._supportsQuads = !(isTurtle || isTriG || isNTriples);\n\t  // Disable relative IRIs in N-Triples or N-Quads mode\n\t  if (isLineMode) {\n\t    this._base = '';\n\t    this._resolveIRI = function (token) {\n\t      this._error('Disallowed relative IRI', token);\n\t      return this._callback = noop, this._subject = null;\n\t    };\n\t  }\n\t  this._blankNodePrefix = typeof options.blankNodePrefix !== 'string' ? '' :\n\t                            '_:' + options.blankNodePrefix.replace(/^_:/, '');\n\t  this._lexer = options.lexer || new N3Lexer({ lineMode: isLineMode });\n\t}\n\t\n\t// ## Private class methods\n\t\n\t// ### `_resetBlankNodeIds` restarts blank node identification.\n\tN3Parser._resetBlankNodeIds = function () {\n\t  blankNodePrefix = blankNodeCount = 0;\n\t};\n\t\n\tN3Parser.prototype = {\n\t  // ## Private methods\n\t\n\t  // ### `_setBase` sets the base IRI to resolve relative IRIs.\n\t  _setBase: function (baseIRI) {\n\t    if (!baseIRI)\n\t      baseIRI = null;\n\t    else if (baseIRI.indexOf('#') >= 0)\n\t      throw new Error('Invalid base IRI ' + baseIRI);\n\t    // Set base IRI and its components\n\t    if (this._base = baseIRI) {\n\t      this._basePath   = baseIRI.replace(/[^\\/?]*(?:\\?.*)?$/, '');\n\t      baseIRI = baseIRI.match(schemeAuthority);\n\t      this._baseRoot   = baseIRI[0];\n\t      this._baseScheme = baseIRI[1];\n\t    }\n\t  },\n\t\n\t  // ### `_readInTopContext` reads a token when in the top context.\n\t  _readInTopContext: function (token) {\n\t    switch (token.type) {\n\t    // If an EOF token arrives in the top context, signal that we're done.\n\t    case 'eof':\n\t      if (this._graph !== null)\n\t        return this._error('Unclosed graph', token);\n\t      delete this._prefixes._;\n\t      return this._callback(null, null, this._prefixes);\n\t    // It could be a prefix declaration.\n\t    case '@prefix':\n\t      this._sparqlStyle = false;\n\t      return this._readPrefix;\n\t    case 'PREFIX':\n\t      this._sparqlStyle = true;\n\t      return this._readPrefix;\n\t    // It could be a base declaration.\n\t    case '@base':\n\t      this._sparqlStyle = false;\n\t      return this._readBaseIRI;\n\t    case 'BASE':\n\t      this._sparqlStyle = true;\n\t      return this._readBaseIRI;\n\t    // It could be a graph.\n\t    case '{':\n\t      if (this._supportsNamedGraphs) {\n\t        this._graph = '';\n\t        this._subject = null;\n\t        return this._readSubject;\n\t      }\n\t    case 'GRAPH':\n\t      if (this._supportsNamedGraphs)\n\t        return this._readNamedGraphLabel;\n\t    // Otherwise, the next token must be a subject.\n\t    default:\n\t      return this._readSubject(token);\n\t    }\n\t  },\n\t\n\t  // ### `_readSubject` reads a triple's subject.\n\t  _readSubject: function (token) {\n\t    this._predicate = null;\n\t    switch (token.type) {\n\t    case 'IRI':\n\t      if (this._base === null || absoluteIRI.test(token.value))\n\t        this._subject = token.value;\n\t      else\n\t        this._subject = this._resolveIRI(token);\n\t      break;\n\t    case 'prefixed':\n\t      var prefix = this._prefixes[token.prefix];\n\t      if (prefix === undefined)\n\t        return this._error('Undefined prefix \"' + token.prefix + ':\"', token);\n\t      this._subject = prefix + token.value;\n\t      break;\n\t    case '[':\n\t      // Start a new triple with a new blank node as subject.\n\t      this._subject = '_:b' + blankNodeCount++;\n\t      this._tripleStack.push({ subject: this._subject, predicate: null, object: null, type: 'blank' });\n\t      return this._readBlankNodeHead;\n\t    case '(':\n\t      // Start a new list\n\t      this._tripleStack.push({ subject: RDF_NIL, predicate: null, object: null, type: 'list' });\n\t      this._subject = null;\n\t      return this._readListItem;\n\t    case '}':\n\t      return this._readPunctuation(token);\n\t    default:\n\t      return this._error('Expected subject but got ' + token.type, token);\n\t    }\n\t    // The next token must be a predicate,\n\t    // or, if the subject was actually a graph IRI, a named graph.\n\t    return this._readPredicateOrNamedGraph;\n\t  },\n\t\n\t  // ### `_readPredicate` reads a triple's predicate.\n\t  _readPredicate: function (token) {\n\t    var type = token.type;\n\t    switch (type) {\n\t    case 'IRI':\n\t    case 'abbreviation':\n\t      if (this._base === null || absoluteIRI.test(token.value))\n\t        this._predicate = token.value;\n\t      else\n\t        this._predicate = this._resolveIRI(token);\n\t      break;\n\t    case 'prefixed':\n\t      if (token.prefix === '_')\n\t        return this._error('Disallowed blank node as predicate', token);\n\t      var prefix = this._prefixes[token.prefix];\n\t      if (prefix === undefined)\n\t        return this._error('Undefined prefix \"' + token.prefix + ':\"', token);\n\t      this._predicate = prefix + token.value;\n\t      break;\n\t    case '.':\n\t    case ']':\n\t    case '}':\n\t      // Expected predicate didn't come, must have been trailing semicolon.\n\t      if (this._predicate === null)\n\t        return this._error('Unexpected ' + type, token);\n\t      this._subject = null;\n\t      return type === ']' ? this._readBlankNodeTail(token) : this._readPunctuation(token);\n\t    case ';':\n\t      // Extra semicolons can be safely ignored\n\t      return this._readPredicate;\n\t    default:\n\t      return this._error('Expected predicate to follow \"' + this._subject + '\"', token);\n\t    }\n\t    // The next token must be an object.\n\t    return this._readObject;\n\t  },\n\t\n\t  // ### `_readObject` reads a triple's object.\n\t  _readObject: function (token) {\n\t    switch (token.type) {\n\t    case 'IRI':\n\t      if (this._base === null || absoluteIRI.test(token.value))\n\t        this._object = token.value;\n\t      else\n\t        this._object = this._resolveIRI(token);\n\t      break;\n\t    case 'prefixed':\n\t      var prefix = this._prefixes[token.prefix];\n\t      if (prefix === undefined)\n\t        return this._error('Undefined prefix \"' + token.prefix + ':\"', token);\n\t      this._object = prefix + token.value;\n\t      break;\n\t    case 'literal':\n\t      this._object = token.value;\n\t      return this._readDataTypeOrLang;\n\t    case '[':\n\t      // Start a new triple with a new blank node as subject.\n\t      var blank = '_:b' + blankNodeCount++;\n\t      this._tripleStack.push({ subject: this._subject, predicate: this._predicate, object: blank, type: 'blank' });\n\t      this._subject = blank;\n\t      return this._readBlankNodeHead;\n\t    case '(':\n\t      // Start a new list\n\t      this._tripleStack.push({ subject: this._subject, predicate: this._predicate, object: RDF_NIL, type: 'list' });\n\t      this._subject = null;\n\t      return this._readListItem;\n\t    default:\n\t      return this._error('Expected object to follow \"' + this._predicate + '\"', token);\n\t    }\n\t    return this._getTripleEndReader();\n\t  },\n\t\n\t  // ### `_readPredicateOrNamedGraph` reads a triple's predicate, or a named graph.\n\t  _readPredicateOrNamedGraph: function (token) {\n\t    return token.type === '{' ? this._readGraph(token) : this._readPredicate(token);\n\t  },\n\t\n\t  // ### `_readGraph` reads a graph.\n\t  _readGraph: function (token) {\n\t    if (token.type !== '{')\n\t      return this._error('Expected graph but got ' + token.type, token);\n\t    // The \"subject\" we read is actually the GRAPH's label\n\t    this._graph = this._subject, this._subject = null;\n\t    return this._readSubject;\n\t  },\n\t\n\t  // ### `_readBlankNodeHead` reads the head of a blank node.\n\t  _readBlankNodeHead: function (token) {\n\t    if (token.type === ']') {\n\t      this._subject = null;\n\t      return this._readBlankNodeTail(token);\n\t    }\n\t    else {\n\t      this._predicate = null;\n\t      return this._readPredicate(token);\n\t    }\n\t  },\n\t\n\t  // ### `_readBlankNodeTail` reads the end of a blank node.\n\t  _readBlankNodeTail: function (token) {\n\t    if (token.type !== ']')\n\t      return this._readBlankNodePunctuation(token);\n\t\n\t    // Store blank node triple.\n\t    if (this._subject !== null)\n\t      this._callback(null, { subject:   this._subject,\n\t                             predicate: this._predicate,\n\t                             object:    this._object,\n\t                             graph:     this._graph || '' });\n\t\n\t    // Restore parent triple that contains the blank node.\n\t    var triple = this._tripleStack.pop();\n\t    this._subject = triple.subject;\n\t    // Was the blank node the object?\n\t    if (triple.object !== null) {\n\t      // Restore predicate and object as well, and continue by reading punctuation.\n\t      this._predicate = triple.predicate;\n\t      this._object = triple.object;\n\t      return this._getTripleEndReader();\n\t    }\n\t    // The blank node was the subject, so continue reading the predicate.\n\t    // If the blank node didn't contain any predicates, it could also be the label of a named graph.\n\t    return this._predicate !== null ? this._readPredicate : this._readPredicateOrNamedGraph;\n\t  },\n\t\n\t  // ### `_readDataTypeOrLang` reads an _optional_ data type or language.\n\t  _readDataTypeOrLang: function (token) {\n\t    switch (token.type) {\n\t    case 'type':\n\t      var value;\n\t      if (token.prefix === '') {\n\t        if (this._base === null || absoluteIRI.test(token.value))\n\t          value = token.value;\n\t        else\n\t          value = this._resolveIRI(token);\n\t      }\n\t      else {\n\t        var prefix = this._prefixes[token.prefix];\n\t        if (prefix === undefined)\n\t          return this._error('Undefined prefix \"' + token.prefix + ':\"', token);\n\t        value = prefix + token.value;\n\t      }\n\t      this._object += '^^' + value;\n\t      return this._getTripleEndReader();\n\t    case 'langcode':\n\t      this._object += '@' + token.value.toLowerCase();\n\t      return this._getTripleEndReader();\n\t    default:\n\t      return this._getTripleEndReader().call(this, token);\n\t    }\n\t  },\n\t\n\t  // ### `_readListItem` reads items from a list.\n\t  _readListItem: function (token) {\n\t    var item = null,                  // The actual list item.\n\t        itemHead = null,              // The head of the rdf:first predicate.\n\t        prevItemHead = this._subject, // The head of the previous rdf:first predicate.\n\t        stack = this._tripleStack,    // The stack of triples part of recursion (lists, blanks, etc.).\n\t        parentTriple = stack[stack.length - 1], // The triple containing the current list.\n\t        next = this._readListItem;    // The next function to execute.\n\t\n\t    switch (token.type) {\n\t    case 'IRI':\n\t      if (this._base === null || absoluteIRI.test(token.value))\n\t        item = token.value;\n\t      else\n\t        item = this._resolveIRI(token);\n\t      break;\n\t    case 'prefixed':\n\t      var prefix = this._prefixes[token.prefix];\n\t      if (prefix === undefined)\n\t        return this._error('Undefined prefix \"' + token.prefix + ':\"', token);\n\t      item = prefix + token.value;\n\t      break;\n\t    case 'literal':\n\t      item = token.value;\n\t      next = this._readDataTypeOrLang;\n\t      break;\n\t    case '[':\n\t      // Stack the current list triple and start a new triple with a blank node as subject.\n\t      itemHead = '_:b' + blankNodeCount++;\n\t      item     = '_:b' + blankNodeCount++;\n\t      stack.push({ subject: itemHead, predicate: RDF_FIRST, object: item, type: 'blank' });\n\t      this._subject = item;\n\t      next = this._readBlankNodeHead;\n\t      break;\n\t    case '(':\n\t      // Stack the current list triple and start a new list\n\t      itemHead = '_:b' + blankNodeCount++;\n\t      stack.push({ subject: itemHead, predicate: RDF_FIRST, object: RDF_NIL, type: 'list' });\n\t      this._subject = null;\n\t      next = this._readListItem;\n\t      break;\n\t    case ')':\n\t      // Restore the parent triple.\n\t      stack.pop();\n\t      // If this list is contained within a parent list, return the membership triple here.\n\t      // This will be `<parent list element> rdf:first <this list>.`.\n\t      if (stack.length !== 0 && stack[stack.length - 1].type === 'list')\n\t        this._callback(null, { subject:   parentTriple.subject,\n\t                               predicate: parentTriple.predicate,\n\t                               object:    parentTriple.object,\n\t                               graph:     this._graph || '' });\n\t      // Restore the parent triple's subject.\n\t      this._subject = parentTriple.subject;\n\t      // Was this list in the parent triple's subject?\n\t      if (parentTriple.predicate === null) {\n\t        // The next token is the predicate.\n\t        next = this._readPredicate;\n\t        // Skip writing the list tail if this was an empty list.\n\t        if (parentTriple.subject === RDF_NIL)\n\t          return next;\n\t      }\n\t      // The list was in the parent triple's object.\n\t      else {\n\t        // Restore the parent triple's predicate and object as well.\n\t        this._predicate = parentTriple.predicate;\n\t        this._object = parentTriple.object;\n\t        next = this._getTripleEndReader();\n\t        // Skip writing the list tail if this was an empty list.\n\t        if (parentTriple.object === RDF_NIL)\n\t          return next;\n\t      }\n\t      // Close the list by making the item head nil.\n\t      itemHead = RDF_NIL;\n\t      break;\n\t    default:\n\t      return this._error('Expected list item instead of \"' + token.type + '\"', token);\n\t    }\n\t\n\t     // Create a new blank node if no item head was assigned yet.\n\t    if (itemHead === null)\n\t      this._subject = itemHead = '_:b' + blankNodeCount++;\n\t\n\t    // Is this the first element of the list?\n\t    if (prevItemHead === null) {\n\t      // This list is either the object or the subject.\n\t      if (parentTriple.object === RDF_NIL)\n\t        parentTriple.object = itemHead;\n\t      else\n\t        parentTriple.subject = itemHead;\n\t    }\n\t    else {\n\t      // The rest of the list is in the current head.\n\t      this._callback(null, { subject:   prevItemHead,\n\t                             predicate: RDF_REST,\n\t                             object:    itemHead,\n\t                             graph:     this._graph || '' });\n\t    }\n\t    // Add the item's value.\n\t    if (item !== null)\n\t      this._callback(null, { subject:   itemHead,\n\t                             predicate: RDF_FIRST,\n\t                             object:    item,\n\t                             graph:     this._graph || '' });\n\t    return next;\n\t  },\n\t\n\t  // ### `_readPunctuation` reads punctuation between triples or triple parts.\n\t  _readPunctuation: function (token) {\n\t    var next, subject = this._subject, graph = this._graph;\n\t    switch (token.type) {\n\t    // A closing brace ends a graph\n\t    case '}':\n\t      if (this._graph === null)\n\t        return this._error('Unexpected graph closing', token);\n\t      this._graph = null;\n\t    // A dot just ends the statement, without sharing anything with the next.\n\t    case '.':\n\t      this._subject = null;\n\t      next = this._readInTopContext;\n\t      break;\n\t    // Semicolon means the subject is shared; predicate and object are different.\n\t    case ';':\n\t      next = this._readPredicate;\n\t      break;\n\t    // Comma means both the subject and predicate are shared; the object is different.\n\t    case ',':\n\t      next = this._readObject;\n\t      break;\n\t    // An IRI means this is a quad (only allowed if not already inside a graph).\n\t    case 'IRI':\n\t      if (this._supportsQuads && this._graph === null) {\n\t        if (this._base === null || absoluteIRI.test(token.value))\n\t          graph = token.value;\n\t        else\n\t          graph = this._resolveIRI(token);\n\t        subject = this._subject;\n\t        next = this._readQuadPunctuation;\n\t        break;\n\t      }\n\t    // An prefixed name means this is a quad (only allowed if not already inside a graph).\n\t    case 'prefixed':\n\t      if (this._supportsQuads && this._graph === null) {\n\t        var prefix = this._prefixes[token.prefix];\n\t        if (prefix === undefined)\n\t          return this._error('Undefined prefix \"' + token.prefix + ':\"', token);\n\t        graph = prefix + token.value;\n\t        next = this._readQuadPunctuation;\n\t        break;\n\t      }\n\t    default:\n\t      return this._error('Expected punctuation to follow \"' + this._object + '\"', token);\n\t    }\n\t    // A triple has been completed now, so return it.\n\t    if (subject !== null)\n\t      this._callback(null, { subject:   subject,\n\t                             predicate: this._predicate,\n\t                             object:    this._object,\n\t                             graph:     graph || '' });\n\t    return next;\n\t  },\n\t\n\t    // ### `_readBlankNodePunctuation` reads punctuation in a blank node\n\t  _readBlankNodePunctuation: function (token) {\n\t    var next;\n\t    switch (token.type) {\n\t    // Semicolon means the subject is shared; predicate and object are different.\n\t    case ';':\n\t      next = this._readPredicate;\n\t      break;\n\t    // Comma means both the subject and predicate are shared; the object is different.\n\t    case ',':\n\t      next = this._readObject;\n\t      break;\n\t    default:\n\t      return this._error('Expected punctuation to follow \"' + this._object + '\"', token);\n\t    }\n\t    // A triple has been completed now, so return it.\n\t    this._callback(null, { subject:   this._subject,\n\t                           predicate: this._predicate,\n\t                           object:    this._object,\n\t                           graph:     this._graph || '' });\n\t    return next;\n\t  },\n\t\n\t  // ### `_readQuadPunctuation` reads punctuation after a quad.\n\t  _readQuadPunctuation: function (token) {\n\t    if (token.type !== '.')\n\t      return this._error('Expected dot to follow quad', token);\n\t    return this._readInTopContext;\n\t  },\n\t\n\t  // ### `_readPrefix` reads the prefix of a prefix declaration.\n\t  _readPrefix: function (token) {\n\t    if (token.type !== 'prefix')\n\t      return this._error('Expected prefix to follow @prefix', token);\n\t    this._prefix = token.value;\n\t    return this._readPrefixIRI;\n\t  },\n\t\n\t  // ### `_readPrefixIRI` reads the IRI of a prefix declaration.\n\t  _readPrefixIRI: function (token) {\n\t    if (token.type !== 'IRI')\n\t      return this._error('Expected IRI to follow prefix \"' + this._prefix + ':\"', token);\n\t    var prefixIRI;\n\t    if (this._base === null || absoluteIRI.test(token.value))\n\t      prefixIRI = token.value;\n\t    else\n\t      prefixIRI = this._resolveIRI(token);\n\t    this._prefixes[this._prefix] = prefixIRI;\n\t    this._prefixCallback(this._prefix, prefixIRI);\n\t    return this._readDeclarationPunctuation;\n\t  },\n\t\n\t  // ### `_readBaseIRI` reads the IRI of a base declaration.\n\t  _readBaseIRI: function (token) {\n\t    if (token.type !== 'IRI')\n\t      return this._error('Expected IRI to follow base declaration', token);\n\t    try {\n\t      this._setBase(this._base === null ||\n\t                    absoluteIRI.test(token.value) ? token.value : this._resolveIRI(token));\n\t    }\n\t    catch (error) { this._error(error.message, token); }\n\t    return this._readDeclarationPunctuation;\n\t  },\n\t\n\t  // ### `_readNamedGraphLabel` reads the label of a named graph.\n\t  _readNamedGraphLabel: function (token) {\n\t    switch (token.type) {\n\t    case 'IRI':\n\t    case 'prefixed':\n\t      return this._readSubject(token), this._readGraph;\n\t    case '[':\n\t      return this._readNamedGraphBlankLabel;\n\t    default:\n\t      return this._error('Invalid graph label', token);\n\t    }\n\t  },\n\t\n\t  // ### `_readNamedGraphLabel` reads a blank node label of a named graph.\n\t  _readNamedGraphBlankLabel: function (token) {\n\t    if (token.type !== ']')\n\t      return this._error('Invalid graph label', token);\n\t    this._subject = '_:b' + blankNodeCount++;\n\t    return this._readGraph;\n\t  },\n\t\n\t  // ### `_readDeclarationPunctuation` reads the punctuation of a declaration.\n\t  _readDeclarationPunctuation: function (token) {\n\t    // SPARQL-style declarations don't have punctuation.\n\t    if (this._sparqlStyle)\n\t      return this._readInTopContext(token);\n\t\n\t    if (token.type !== '.')\n\t      return this._error('Expected declaration to end with a dot', token);\n\t    return this._readInTopContext;\n\t  },\n\t\n\t  // ### `_getTripleEndReader` gets the next reader function at the end of a triple.\n\t  _getTripleEndReader: function () {\n\t    var stack = this._tripleStack;\n\t    if (stack.length === 0)\n\t      return this._readPunctuation;\n\t\n\t    switch (stack[stack.length - 1].type) {\n\t    case 'blank':\n\t      return this._readBlankNodeTail;\n\t    case 'list':\n\t      return this._readListItem;\n\t    }\n\t  },\n\t\n\t  // ### `_error` emits an error message through the callback.\n\t  _error: function (message, token) {\n\t    this._callback(new Error(message + ' at line ' + token.line + '.'));\n\t  },\n\t\n\t  // ### `_resolveIRI` resolves a relative IRI token against the base path,\n\t  // assuming that a base path has been set and that the IRI is indeed relative.\n\t  _resolveIRI: function (token) {\n\t    var iri = token.value;\n\t    switch (iri[0]) {\n\t    // An empty relative IRI indicates the base IRI\n\t    case undefined: return this._base;\n\t    // Resolve relative fragment IRIs against the base IRI\n\t    case '#': return this._base + iri;\n\t    // Resolve relative query string IRIs by replacing the query string\n\t    case '?': return this._base.replace(/(?:\\?.*)?$/, iri);\n\t    // Resolve root-relative IRIs at the root of the base IRI\n\t    case '/':\n\t      // Resolve scheme-relative IRIs to the scheme\n\t      return (iri[1] === '/' ? this._baseScheme : this._baseRoot) + this._removeDotSegments(iri);\n\t    // Resolve all other IRIs at the base IRI's path\n\t    default:\n\t      return this._removeDotSegments(this._basePath + iri);\n\t    }\n\t  },\n\t\n\t  // ### `_removeDotSegments` resolves './' and '../' path segments in an IRI as per RFC3986.\n\t  _removeDotSegments: function (iri) {\n\t    // Don't modify the IRI if it does not contain any dot segments\n\t    if (!dotSegments.test(iri))\n\t      return iri;\n\t\n\t    // Start with an imaginary slash before the IRI in order to resolve trailing './' and '../'\n\t    var result = '', length = iri.length, i = -1, pathStart = -1, segmentStart = 0, next = '/';\n\t\n\t    while (i < length) {\n\t      switch (next) {\n\t      // The path starts with the first slash after the authority\n\t      case ':':\n\t        if (pathStart < 0) {\n\t          // Skip two slashes before the authority\n\t          if (iri[++i] === '/' && iri[++i] === '/')\n\t            // Skip to slash after the authority\n\t            while ((pathStart = i + 1) < length && iri[pathStart] !== '/')\n\t              i = pathStart;\n\t        }\n\t        break;\n\t      // Don't modify a query string or fragment\n\t      case '?':\n\t      case '#':\n\t        i = length;\n\t        break;\n\t      // Handle '/.' or '/..' path segments\n\t      case '/':\n\t        if (iri[i + 1] === '.') {\n\t          next = iri[++i + 1];\n\t          switch (next) {\n\t          // Remove a '/.' segment\n\t          case '/':\n\t            result += iri.substring(segmentStart, i - 1);\n\t            segmentStart = i + 1;\n\t            break;\n\t          // Remove a trailing '/.' segment\n\t          case undefined:\n\t          case '?':\n\t          case '#':\n\t            return result + iri.substring(segmentStart, i) + iri.substr(i + 1);\n\t          // Remove a '/..' segment\n\t          case '.':\n\t            next = iri[++i + 1];\n\t            if (next === undefined || next === '/' || next === '?' || next === '#') {\n\t              result += iri.substring(segmentStart, i - 2);\n\t              // Try to remove the parent path from result\n\t              if ((segmentStart = result.lastIndexOf('/')) >= pathStart)\n\t                result = result.substr(0, segmentStart);\n\t              // Remove a trailing '/..' segment\n\t              if (next !== '/')\n\t                return result + '/' + iri.substr(i + 1);\n\t              segmentStart = i + 1;\n\t            }\n\t          }\n\t        }\n\t      }\n\t      next = iri[++i];\n\t    }\n\t    return result + iri.substring(segmentStart);\n\t  },\n\t\n\t  // ## Public methods\n\t\n\t  // ### `parse` parses the N3 input and emits each parsed triple through the callback.\n\t  parse: function (input, tripleCallback, prefixCallback) {\n\t    // The read callback is the next function to be executed when a token arrives.\n\t    // We start reading in the top context.\n\t    this._readCallback = this._readInTopContext;\n\t    this._prefixes = Object.create(null);\n\t    this._prefixes._ = this._blankNodePrefix || '_:b' + blankNodePrefix++ + '_';\n\t\n\t    // If the input argument is not given, shift parameters\n\t    if (typeof input === 'function')\n\t      prefixCallback = tripleCallback, tripleCallback = input, input = null;\n\t\n\t    // Set the triple and prefix callbacks.\n\t    this._callback = tripleCallback || noop;\n\t    this._prefixCallback = prefixCallback || noop;\n\t\n\t    // Execute the read callback when a token arrives.\n\t    var self = this;\n\t    this._lexer.tokenize(input, function (error, token) {\n\t      if (error !== null)\n\t        self._callback(error), self._callback = noop;\n\t      else if (self._readCallback !== undefined)\n\t        self._readCallback = self._readCallback(token);\n\t    });\n\t\n\t    // If no input was given, it can be added with `addChunk` and ended with `end`\n\t    if (!input) {\n\t      this.addChunk = this._lexer.addChunk;\n\t      this.end = this._lexer.end;\n\t    }\n\t  },\n\t};\n\t\n\t// The empty function\n\tfunction noop() {}\n\t\n\t// ## Exports\n\t\n\t// Export the `N3Parser` class as a whole.\n\tmodule.exports = N3Parser;\n\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// **N3Store** objects store N3 triples by graph in memory.\n\t\n\tvar expandPrefixedName = __webpack_require__(38).expandPrefixedName;\n\t\n\t// ## Constructor\n\tfunction N3Store(triples, options) {\n\t  if (!(this instanceof N3Store))\n\t    return new N3Store(triples, options);\n\t\n\t  // The number of triples is initially zero.\n\t  this._size = 0;\n\t  // `_graphs` contains subject, predicate, and object indexes per graph.\n\t  this._graphs = Object.create(null);\n\t  // `_entities` maps entities such as `http://xmlns.com/foaf/0.1/name` to numbers.\n\t  // This saves memory, since only the numbers have to be stored in `_graphs`.\n\t  this._entities = Object.create(null);\n\t  this._entities['><'] = 0; // Dummy entry, so the first actual key is non-zero\n\t  this._entityCount = 0;\n\t  // `_blankNodeIndex` is the index of the last created blank node that was automatically named\n\t  this._blankNodeIndex = 0;\n\t\n\t  // Shift parameters if `triples` is not given\n\t  if (!options && triples && !triples[0])\n\t    options = triples, triples = null;\n\t\n\t  // Add triples and prefixes if passed\n\t  this._prefixes = Object.create(null);\n\t  if (options && options.prefixes)\n\t    this.addPrefixes(options.prefixes);\n\t  if (triples)\n\t    this.addTriples(triples);\n\t}\n\t\n\tN3Store.prototype = {\n\t  // ## Public properties\n\t\n\t  // ### `size` returns the number of triples in the store.\n\t  get size() {\n\t    // Return the triple count if if was cached.\n\t    var size = this._size;\n\t    if (size !== null)\n\t      return size;\n\t\n\t    // Calculate the number of triples by counting to the deepest level.\n\t    var graphs = this._graphs, subjects, subject;\n\t    for (var graphKey in graphs)\n\t      for (var subjectKey in (subjects = graphs[graphKey].subjects))\n\t        for (var predicateKey in (subject = subjects[subjectKey]))\n\t          size += Object.keys(subject[predicateKey]).length;\n\t    return this._size = size;\n\t  },\n\t\n\t  // ## Private methods\n\t\n\t  // ### `_addToIndex` adds a triple to a three-layered index.\n\t  _addToIndex: function (index0, key0, key1, key2) {\n\t    // Create layers as necessary.\n\t    var index1 = index0[key0] || (index0[key0] = {});\n\t    var index2 = index1[key1] || (index1[key1] = {});\n\t    // Setting the key to _any_ value signalizes the presence of the triple.\n\t    index2[key2] = null;\n\t  },\n\t\n\t  // ### `_removeFromIndex` removes a triple from a three-layered index.\n\t  _removeFromIndex: function (index0, key0, key1, key2) {\n\t    // Remove the triple from the index.\n\t    var index1 = index0[key0], index2 = index1[key1], key;\n\t    delete index2[key2];\n\t\n\t    // Remove intermediary index layers if they are empty.\n\t    for (key in index2) return;\n\t    delete index1[key1];\n\t    for (key in index1) return;\n\t    delete index0[key0];\n\t  },\n\t\n\t  // ### `_findInIndex` finds a set of triples in a three-layered index.\n\t  // The index base is `index0` and the keys at each level are `key0`, `key1`, and `key2`.\n\t  // Any of these keys can be `null`, which is interpreted as a wildcard.\n\t  // `name0`, `name1`, and `name2` are the names of the keys at each level,\n\t  // used when reconstructing the resulting triple\n\t  // (for instance: _subject_, _predicate_, and _object_).\n\t  // Finally, `graph` will be the graph of the created triples.\n\t  _findInIndex: function (index0, key0, key1, key2, name0, name1, name2, graph) {\n\t    var results = [], entityKeys = Object.keys(this._entities), tmp, index1, index2;\n\t\n\t    // If a key is specified, use only that part of index 0.\n\t    if (key0) (tmp = index0, index0 = {})[key0] = tmp[key0];\n\t    for (var value0 in index0) {\n\t      var entity0 = entityKeys[value0];\n\t\n\t      if (index1 = index0[value0]) {\n\t        // If a key is specified, use only that part of index 1.\n\t        if (key1) (tmp = index1, index1 = {})[key1] = tmp[key1];\n\t        for (var value1 in index1) {\n\t          var entity1 = entityKeys[value1];\n\t\n\t          if (index2 = index1[value1]) {\n\t            // If a key is specified, use only that part of index 2, if it exists.\n\t            var values = key2 ? (key2 in index2 ? [key2] : []) : Object.keys(index2);\n\t            // Create triples for all items found in index 2.\n\t            for (var l = values.length - 1; l >= 0; l--) {\n\t              var result = { subject: '', predicate: '', object: '', graph: graph };\n\t              result[name0] = entity0;\n\t              result[name1] = entity1;\n\t              result[name2] = entityKeys[values[l]];\n\t              results.push(result);\n\t            }\n\t          }\n\t        }\n\t      }\n\t    }\n\t    return results;\n\t  },\n\t\n\t  // ### `_countInIndex` counts matching triples in a three-layered index.\n\t  // The index base is `index0` and the keys at each level are `key0`, `key1`, and `key2`.\n\t  // Any of these keys can be `null`, which is interpreted as a wildcard.\n\t  _countInIndex: function (index0, key0, key1, key2) {\n\t    var count = 0, tmp, index1, index2;\n\t\n\t    // If a key is specified, count only that part of index 0.\n\t    if (key0) (tmp = index0, index0 = {})[key0] = tmp[key0];\n\t    for (var value0 in index0) {\n\t      if (index1 = index0[value0]) {\n\t        // If a key is specified, count only that part of index 1.\n\t        if (key1) (tmp = index1, index1 = {})[key1] = tmp[key1];\n\t        for (var value1 in index1) {\n\t          if (index2 = index1[value1]) {\n\t            // If a key is specified, count the triple if it exists.\n\t            if (key2) (key2 in index2) && count++;\n\t            // Otherwise, count all triples.\n\t            else count += Object.keys(index2).length;\n\t          }\n\t        }\n\t      }\n\t    }\n\t    return count;\n\t  },\n\t\n\t  // ## Public methods\n\t\n\t  // ### `addTriple` adds a new N3 triple to the store.\n\t  addTriple: function (subject, predicate, object, graph) {\n\t    // Shift arguments if a triple object is given instead of components\n\t    if (!predicate)\n\t      graph = subject.graph, object = subject.object,\n\t        predicate = subject.predicate, subject = subject.subject;\n\t\n\t    // Find the graph that will contain the triple.\n\t    graph = graph || '';\n\t    var graphItem = this._graphs[graph];\n\t    // Create the graph if it doesn't exist yet.\n\t    if (!graphItem) {\n\t      graphItem = this._graphs[graph] = { subjects: {}, predicates: {}, objects: {} };\n\t      // Freezing a graph helps subsequent `add` performance,\n\t      // and properties will never be modified anyway.\n\t      Object.freeze(graphItem);\n\t    }\n\t\n\t    // Since entities can often be long IRIs, we avoid storing them in every index.\n\t    // Instead, we have a separate index that maps entities to numbers,\n\t    // which are then used as keys in the other indexes.\n\t    var entities = this._entities;\n\t    subject   = entities[subject]   || (entities[subject]   = ++this._entityCount);\n\t    predicate = entities[predicate] || (entities[predicate] = ++this._entityCount);\n\t    object    = entities[object]    || (entities[object]    = ++this._entityCount);\n\t\n\t    this._addToIndex(graphItem.subjects,   subject,   predicate, object);\n\t    this._addToIndex(graphItem.predicates, predicate, object,    subject);\n\t    this._addToIndex(graphItem.objects,    object,    subject,   predicate);\n\t\n\t    // The cached triple count is now invalid.\n\t    this._size = null;\n\t  },\n\t\n\t  // ### `addTriples` adds multiple N3 triples to the store.\n\t  addTriples: function (triples) {\n\t    for (var i = triples.length - 1; i >= 0; i--)\n\t      this.addTriple(triples[i]);\n\t  },\n\t\n\t  // ### `addPrefix` adds support for querying with the given prefix\n\t  addPrefix: function (prefix, iri) {\n\t    this._prefixes[prefix] = iri;\n\t  },\n\t\n\t  // ### `addPrefixes` adds support for querying with the given prefixes\n\t  addPrefixes: function (prefixes) {\n\t    for (var prefix in prefixes)\n\t      this.addPrefix(prefix, prefixes[prefix]);\n\t  },\n\t\n\t  // ### `removeTriple` removes an N3 triple from the store if it exists.\n\t  removeTriple: function (subject, predicate, object, graph) {\n\t    // Shift arguments if a triple object is given instead of components.\n\t    if (!predicate)\n\t      graph = subject.graph, object = subject.object,\n\t        predicate = subject.predicate, subject = subject.subject;\n\t    graph = graph || '';\n\t\n\t    // Find internal identifiers for all components.\n\t    var graphItem, entities = this._entities, graphs = this._graphs;\n\t    if (!(subject     = entities[subject]))   return;\n\t    if (!(predicate   = entities[predicate])) return;\n\t    if (!(object      = entities[object]))    return;\n\t    if (!(graphItem   = graphs[graph]))       return;\n\t\n\t    // Verify that the triple exists.\n\t    var subjects, predicates;\n\t    if (!(subjects   = graphItem.subjects[subject])) return;\n\t    if (!(predicates = subjects[predicate])) return;\n\t    if (!(object in predicates)) return;\n\t\n\t    // Remove it from all indexes.\n\t    this._removeFromIndex(graphItem.subjects,   subject,   predicate, object);\n\t    this._removeFromIndex(graphItem.predicates, predicate, object,    subject);\n\t    this._removeFromIndex(graphItem.objects,    object,    subject,   predicate);\n\t    if (this._size !== null) this._size--;\n\t\n\t    // Remove the graph if it is empty.\n\t    for (subject in graphItem.subjects) return;\n\t    delete graphs[graph];\n\t  },\n\t\n\t  // ### `removeTriples` removes multiple N3 triples from the store.\n\t  removeTriples: function (triples) {\n\t    for (var i = triples.length - 1; i >= 0; i--)\n\t      this.removeTriple(triples[i]);\n\t  },\n\t\n\t  // ### `find` finds a set of triples matching a pattern, expanding prefixes as necessary.\n\t  // Setting `subject`, `predicate`, or `object` to `null` means an _anything_ wildcard.\n\t  // Setting `graph` to `null` means the default graph.\n\t  find: function (subject, predicate, object, graph) {\n\t    var prefixes = this._prefixes;\n\t    return this.findByIRI(\n\t      expandPrefixedName(subject,   prefixes),\n\t      expandPrefixedName(predicate, prefixes),\n\t      expandPrefixedName(object,    prefixes),\n\t      expandPrefixedName(graph,     prefixes)\n\t    );\n\t  },\n\t\n\t  // ### `findByIRI` finds a set of triples matching a pattern.\n\t  // Setting `subject`, `predicate`, or `object` to a falsy value means an _anything_ wildcard.\n\t  // Setting `graph` to a falsy value means the default graph.\n\t  findByIRI: function (subject, predicate, object, graph) {\n\t    graph = graph || '';\n\t    var graphItem = this._graphs[graph], entities = this._entities;\n\t\n\t    // If the specified graph contain no triples, there are no results.\n\t    if (!graphItem) return [];\n\t\n\t    // Translate IRIs to internal index keys.\n\t    // Optimization: if the entity doesn't exist, no triples with it exist.\n\t    if (subject   && !(subject   = entities[subject]))   return [];\n\t    if (predicate && !(predicate = entities[predicate])) return [];\n\t    if (object    && !(object    = entities[object]))    return [];\n\t\n\t    // Choose the optimal index, based on what fields are present\n\t    if (subject) {\n\t      if (object)\n\t        // If subject and object are given, the object index will be the fastest.\n\t        return this._findInIndex(graphItem.objects, object, subject, predicate,\n\t                                 'object', 'subject', 'predicate', graph);\n\t      else\n\t        // If only subject and possibly predicate are given, the subject index will be the fastest.\n\t        return this._findInIndex(graphItem.subjects, subject, predicate, null,\n\t                                 'subject', 'predicate', 'object', graph);\n\t    }\n\t    else if (predicate)\n\t      // If only predicate and possibly object are given, the predicate index will be the fastest.\n\t      return this._findInIndex(graphItem.predicates, predicate, object, null,\n\t                               'predicate', 'object', 'subject', graph);\n\t    else if (object)\n\t      // If only object is given, the object index will be the fastest.\n\t      return this._findInIndex(graphItem.objects, object, null, null,\n\t                               'object', 'subject', 'predicate', graph);\n\t    else\n\t      // If nothing is given, iterate subjects and predicates first\n\t      return this._findInIndex(graphItem.subjects, null, null, null,\n\t                               'subject', 'predicate', 'object', graph);\n\t  },\n\t\n\t  // ### `count` returns the number of triples matching a pattern, expanding prefixes as necessary.\n\t  // Setting `subject`, `predicate`, or `object` to `null` means an _anything_ wildcard.\n\t  // Setting `graph` to `null` means the default graph.\n\t  count: function (subject, predicate, object, graph) {\n\t    var prefixes = this._prefixes;\n\t    return this.countByIRI(\n\t      expandPrefixedName(subject,   prefixes),\n\t      expandPrefixedName(predicate, prefixes),\n\t      expandPrefixedName(object,    prefixes),\n\t      expandPrefixedName(graph,     prefixes)\n\t    );\n\t  },\n\t\n\t  // ### `countByIRI` returns the number of triples matching a pattern.\n\t  // Setting `subject`, `predicate`, or `object` to `null` means an _anything_ wildcard.\n\t  // Setting `graph` to `null` means the default graph.\n\t  countByIRI: function (subject, predicate, object, graph) {\n\t    graph = graph || '';\n\t    var graphItem = this._graphs[graph], entities = this._entities;\n\t\n\t    // If the specified graph contain no triples, there are no results.\n\t    if (!graphItem) return 0;\n\t\n\t    // Translate IRIs to internal index keys.\n\t    // Optimization: if the entity doesn't exist, no triples with it exist.\n\t    if (subject   && !(subject   = entities[subject]))   return 0;\n\t    if (predicate && !(predicate = entities[predicate])) return 0;\n\t    if (object    && !(object    = entities[object]))    return 0;\n\t\n\t    // Choose the optimal index, based on what fields are present\n\t    if (subject) {\n\t      if (object)\n\t        // If subject and object are given, the object index will be the fastest.\n\t        return this._countInIndex(graphItem.objects, object, subject, predicate);\n\t      else\n\t        // If only subject and possibly predicate are given, the subject index will be the fastest.\n\t        return this._countInIndex(graphItem.subjects, subject, predicate, object);\n\t    }\n\t    else if (predicate) {\n\t      // If only predicate and possibly object are given, the predicate index will be the fastest.\n\t      return this._countInIndex(graphItem.predicates, predicate, object, subject);\n\t    }\n\t    else {\n\t      // If only object is possibly given, the object index will be the fastest.\n\t      return this._countInIndex(graphItem.objects, object, subject, predicate);\n\t    }\n\t  },\n\t\n\t  // ### `createBlankNode` creates a new blank node, returning its name.\n\t  createBlankNode: function (suggestedName) {\n\t    var name, index;\n\t    // Generate a name based on the suggested name\n\t    if (suggestedName) {\n\t      name = suggestedName = '_:' + suggestedName, index = 1;\n\t      while (this._entities[name])\n\t        name = suggestedName + index++;\n\t    }\n\t    // Generate a generic blank node name\n\t    else {\n\t      do { name = '_:b' + this._blankNodeIndex++; }\n\t      while (this._entities[name]);\n\t    }\n\t    // Add the blank node to the entities, avoiding the generation of duplicates\n\t    this._entities[name] = ++this._entityCount;\n\t    return name;\n\t  },\n\t};\n\t\n\t// ## Exports\n\t\n\t// Export the `N3Store` class as a whole.\n\tmodule.exports = N3Store;\n\n\n/***/ },\n/* 38 */\n/***/ function(module, exports) {\n\n\t// **N3Util** provides N3 utility functions\n\t\n\tvar Xsd = 'http://www.w3.org/2001/XMLSchema#';\n\tvar XsdString  = Xsd + 'string';\n\tvar XsdInteger = Xsd + 'integer';\n\tvar XsdDecimal = Xsd + 'decimal';\n\tvar XsdBoolean = Xsd + 'boolean';\n\tvar RdfLangString = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#langString';\n\t\n\tvar N3Util = {\n\t  // Tests whether the given entity (triple object) represents an IRI in the N3 library\n\t  isIRI: function (entity) {\n\t    if (!entity)\n\t      return entity;\n\t    var firstChar = entity[0];\n\t    return firstChar !== '\"' && firstChar !== '_';\n\t  },\n\t\n\t  // Tests whether the given entity (triple object) represents a literal in the N3 library\n\t  isLiteral: function (entity) {\n\t    return entity && entity[0] === '\"';\n\t  },\n\t\n\t  // Tests whether the given entity (triple object) represents a blank node in the N3 library\n\t  isBlank: function (entity) {\n\t    return entity && entity.substr(0, 2) === '_:';\n\t  },\n\t\n\t  // Gets the string value of a literal in the N3 library\n\t  getLiteralValue: function (literal) {\n\t    var match = /^\"([^]*)\"/.exec(literal);\n\t    if (!match)\n\t      throw new Error(literal + ' is not a literal');\n\t    return match[1];\n\t  },\n\t\n\t  // Gets the type of a literal in the N3 library\n\t  getLiteralType: function (literal) {\n\t    var match = /^\"[^]*\"(?:\\^\\^([^\"]+)|(@)[^@\"]+)?$/.exec(literal);\n\t    if (!match)\n\t      throw new Error(literal + ' is not a literal');\n\t    return match[1] || (match[2] ? RdfLangString : XsdString);\n\t  },\n\t\n\t  // Gets the language of a literal in the N3 library\n\t  getLiteralLanguage: function (literal) {\n\t    var match = /^\"[^]*\"(?:@([^@\"]+)|\\^\\^[^\"]+)?$/.exec(literal);\n\t    if (!match)\n\t      throw new Error(literal + ' is not a literal');\n\t    return match[1] ? match[1].toLowerCase() : '';\n\t  },\n\t\n\t  // Tests whether the given entity (triple object) represents a prefixed name\n\t  isPrefixedName: function (entity) {\n\t    return entity && /^[^:\\/\"']*:[^:\\/\"']+$/.test(entity);\n\t  },\n\t\n\t  // Expands the prefixed name to a full IRI (also when it occurs as a literal's type)\n\t  expandPrefixedName: function (prefixedName, prefixes) {\n\t    var match = /(?:^|\"\\^\\^)([^:\\/#\"'\\^_]*):[^\\/]*$/.exec(prefixedName), prefix, base, index;\n\t    if (match)\n\t      prefix = match[1], base = prefixes[prefix], index = match.index;\n\t    if (base === undefined)\n\t      return prefixedName;\n\t\n\t    // The match index is non-zero when expanding a literal's type.\n\t    return index === 0 ? base + prefixedName.substr(prefix.length + 1)\n\t                       : prefixedName.substr(0, index + 3) +\n\t                         base + prefixedName.substr(index + prefix.length + 4);\n\t  },\n\t\n\t  // Creates an IRI in N3.js representation\n\t  createIRI: function (iri) {\n\t    return iri && iri[0] === '\"' ? N3Util.getLiteralValue(iri) : iri;\n\t  },\n\t\n\t  // Creates a literal in N3.js representation\n\t  createLiteral: function (value, modifier) {\n\t    if (!modifier) {\n\t      switch (typeof value) {\n\t      case 'boolean':\n\t        modifier = XsdBoolean;\n\t        break;\n\t      case 'number':\n\t        if (isFinite(value)) {\n\t          modifier = value % 1 === 0 ? XsdInteger : XsdDecimal;\n\t          break;\n\t        }\n\t      default:\n\t        return '\"' + value + '\"';\n\t      }\n\t    }\n\t    return '\"' + value +\n\t           (/^[a-z]+(-[a-z0-9]+)*$/i.test(modifier) ? '\"@'  + modifier.toLowerCase()\n\t                                                    : '\"^^' + modifier);\n\t  },\n\t};\n\t\n\t// Add the N3Util functions to the given object or its prototype\n\tfunction addN3Util(parent, toPrototype) {\n\t  for (var name in N3Util)\n\t    if (!toPrototype)\n\t      parent[name] = N3Util[name];\n\t    else\n\t      parent.prototype[name] = applyToThis(N3Util[name]);\n\t\n\t  return parent;\n\t}\n\t\n\t// Returns a function that applies `f` to the `this` object\n\tfunction applyToThis(f) {\n\t  return function (a) { return f(this, a); };\n\t}\n\t\n\t// Expose N3Util, attaching all functions to it\n\tmodule.exports = addN3Util(addN3Util);\n\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// **N3StreamParser** parses an N3 stream into a triple stream\n\tvar Transform = __webpack_require__(40).Transform,\n\t    util = __webpack_require__(65),\n\t    N3Parser = __webpack_require__(36);\n\t\n\t// ## Constructor\n\tfunction N3StreamParser(options) {\n\t  if (!(this instanceof N3StreamParser))\n\t    return new N3StreamParser(options);\n\t\n\t  // Initialize Transform base class\n\t  Transform.call(this, { decodeStrings: true });\n\t  this._readableState.objectMode = true;\n\t\n\t  // Set up parser\n\t  var self = this, parser = new N3Parser(options);\n\t  parser.parse(\n\t    // Handle triples by pushing them down the pipeline\n\t    function (error, triple) {\n\t      triple && self.push(triple) ||\n\t      error  && self.emit('error', error);\n\t    },\n\t    // Emit prefixes through the `prefix` event\n\t    this.emit.bind(this, 'prefix'));\n\t\n\t  // Implement Transform methods on top of parser\n\t  this._transform = function (chunk, encoding, done) { parser.addChunk(chunk); done(); };\n\t  this._flush = function (done) { parser.end(); done(); };\n\t}\n\tutil.inherits(N3StreamParser, Transform);\n\t\n\t// ## Exports\n\t// Export the `N3StreamParser` class as a whole.\n\tmodule.exports = N3StreamParser;\n\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tmodule.exports = Stream;\n\t\n\tvar EE = __webpack_require__(41).EventEmitter;\n\tvar inherits = __webpack_require__(42);\n\t\n\tinherits(Stream, EE);\n\tStream.Readable = __webpack_require__(43);\n\tStream.Writable = __webpack_require__(61);\n\tStream.Duplex = __webpack_require__(62);\n\tStream.Transform = __webpack_require__(63);\n\tStream.PassThrough = __webpack_require__(64);\n\t\n\t// Backwards-compat with node 0.4.x\n\tStream.Stream = Stream;\n\t\n\t\n\t\n\t// old-style streams.  Note that the pipe method (the only relevant\n\t// part of this class) is overridden in the Readable class.\n\t\n\tfunction Stream() {\n\t  EE.call(this);\n\t}\n\t\n\tStream.prototype.pipe = function(dest, options) {\n\t  var source = this;\n\t\n\t  function ondata(chunk) {\n\t    if (dest.writable) {\n\t      if (false === dest.write(chunk) && source.pause) {\n\t        source.pause();\n\t      }\n\t    }\n\t  }\n\t\n\t  source.on('data', ondata);\n\t\n\t  function ondrain() {\n\t    if (source.readable && source.resume) {\n\t      source.resume();\n\t    }\n\t  }\n\t\n\t  dest.on('drain', ondrain);\n\t\n\t  // If the 'end' option is not supplied, dest.end() will be called when\n\t  // source gets the 'end' or 'close' events.  Only dest.end() once.\n\t  if (!dest._isStdio && (!options || options.end !== false)) {\n\t    source.on('end', onend);\n\t    source.on('close', onclose);\n\t  }\n\t\n\t  var didOnEnd = false;\n\t  function onend() {\n\t    if (didOnEnd) return;\n\t    didOnEnd = true;\n\t\n\t    dest.end();\n\t  }\n\t\n\t\n\t  function onclose() {\n\t    if (didOnEnd) return;\n\t    didOnEnd = true;\n\t\n\t    if (typeof dest.destroy === 'function') dest.destroy();\n\t  }\n\t\n\t  // don't leave dangling pipes when there are errors.\n\t  function onerror(er) {\n\t    cleanup();\n\t    if (EE.listenerCount(this, 'error') === 0) {\n\t      throw er; // Unhandled stream error in pipe.\n\t    }\n\t  }\n\t\n\t  source.on('error', onerror);\n\t  dest.on('error', onerror);\n\t\n\t  // remove all the event listeners that were added.\n\t  function cleanup() {\n\t    source.removeListener('data', ondata);\n\t    dest.removeListener('drain', ondrain);\n\t\n\t    source.removeListener('end', onend);\n\t    source.removeListener('close', onclose);\n\t\n\t    source.removeListener('error', onerror);\n\t    dest.removeListener('error', onerror);\n\t\n\t    source.removeListener('end', cleanup);\n\t    source.removeListener('close', cleanup);\n\t\n\t    dest.removeListener('close', cleanup);\n\t  }\n\t\n\t  source.on('end', cleanup);\n\t  source.on('close', cleanup);\n\t\n\t  dest.on('close', cleanup);\n\t\n\t  dest.emit('pipe', source);\n\t\n\t  // Allow for unix-like usage: A.pipe(B).pipe(C)\n\t  return dest;\n\t};\n\n\n/***/ },\n/* 41 */\n/***/ function(module, exports) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tfunction EventEmitter() {\n\t  this._events = this._events || {};\n\t  this._maxListeners = this._maxListeners || undefined;\n\t}\n\tmodule.exports = EventEmitter;\n\t\n\t// Backwards-compat with node 0.10.x\n\tEventEmitter.EventEmitter = EventEmitter;\n\t\n\tEventEmitter.prototype._events = undefined;\n\tEventEmitter.prototype._maxListeners = undefined;\n\t\n\t// By default EventEmitters will print a warning if more than 10 listeners are\n\t// added to it. This is a useful default which helps finding memory leaks.\n\tEventEmitter.defaultMaxListeners = 10;\n\t\n\t// Obviously not all Emitters should be limited to 10. This function allows\n\t// that to be increased. Set to zero for unlimited.\n\tEventEmitter.prototype.setMaxListeners = function(n) {\n\t  if (!isNumber(n) || n < 0 || isNaN(n))\n\t    throw TypeError('n must be a positive number');\n\t  this._maxListeners = n;\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.emit = function(type) {\n\t  var er, handler, len, args, i, listeners;\n\t\n\t  if (!this._events)\n\t    this._events = {};\n\t\n\t  // If there is no 'error' event listener then throw.\n\t  if (type === 'error') {\n\t    if (!this._events.error ||\n\t        (isObject(this._events.error) && !this._events.error.length)) {\n\t      er = arguments[1];\n\t      if (er instanceof Error) {\n\t        throw er; // Unhandled 'error' event\n\t      } else {\n\t        // At least give some kind of context to the user\n\t        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n\t        err.context = er;\n\t        throw err;\n\t      }\n\t    }\n\t  }\n\t\n\t  handler = this._events[type];\n\t\n\t  if (isUndefined(handler))\n\t    return false;\n\t\n\t  if (isFunction(handler)) {\n\t    switch (arguments.length) {\n\t      // fast cases\n\t      case 1:\n\t        handler.call(this);\n\t        break;\n\t      case 2:\n\t        handler.call(this, arguments[1]);\n\t        break;\n\t      case 3:\n\t        handler.call(this, arguments[1], arguments[2]);\n\t        break;\n\t      // slower\n\t      default:\n\t        args = Array.prototype.slice.call(arguments, 1);\n\t        handler.apply(this, args);\n\t    }\n\t  } else if (isObject(handler)) {\n\t    args = Array.prototype.slice.call(arguments, 1);\n\t    listeners = handler.slice();\n\t    len = listeners.length;\n\t    for (i = 0; i < len; i++)\n\t      listeners[i].apply(this, args);\n\t  }\n\t\n\t  return true;\n\t};\n\t\n\tEventEmitter.prototype.addListener = function(type, listener) {\n\t  var m;\n\t\n\t  if (!isFunction(listener))\n\t    throw TypeError('listener must be a function');\n\t\n\t  if (!this._events)\n\t    this._events = {};\n\t\n\t  // To avoid recursion in the case that type === \"newListener\"! Before\n\t  // adding it to the listeners, first emit \"newListener\".\n\t  if (this._events.newListener)\n\t    this.emit('newListener', type,\n\t              isFunction(listener.listener) ?\n\t              listener.listener : listener);\n\t\n\t  if (!this._events[type])\n\t    // Optimize the case of one listener. Don't need the extra array object.\n\t    this._events[type] = listener;\n\t  else if (isObject(this._events[type]))\n\t    // If we've already got an array, just append.\n\t    this._events[type].push(listener);\n\t  else\n\t    // Adding the second element, need to change to array.\n\t    this._events[type] = [this._events[type], listener];\n\t\n\t  // Check for listener leak\n\t  if (isObject(this._events[type]) && !this._events[type].warned) {\n\t    if (!isUndefined(this._maxListeners)) {\n\t      m = this._maxListeners;\n\t    } else {\n\t      m = EventEmitter.defaultMaxListeners;\n\t    }\n\t\n\t    if (m && m > 0 && this._events[type].length > m) {\n\t      this._events[type].warned = true;\n\t      console.error('(node) warning: possible EventEmitter memory ' +\n\t                    'leak detected. %d listeners added. ' +\n\t                    'Use emitter.setMaxListeners() to increase limit.',\n\t                    this._events[type].length);\n\t      if (typeof console.trace === 'function') {\n\t        // not supported in IE 10\n\t        console.trace();\n\t      }\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\t\n\tEventEmitter.prototype.once = function(type, listener) {\n\t  if (!isFunction(listener))\n\t    throw TypeError('listener must be a function');\n\t\n\t  var fired = false;\n\t\n\t  function g() {\n\t    this.removeListener(type, g);\n\t\n\t    if (!fired) {\n\t      fired = true;\n\t      listener.apply(this, arguments);\n\t    }\n\t  }\n\t\n\t  g.listener = listener;\n\t  this.on(type, g);\n\t\n\t  return this;\n\t};\n\t\n\t// emits a 'removeListener' event iff the listener was removed\n\tEventEmitter.prototype.removeListener = function(type, listener) {\n\t  var list, position, length, i;\n\t\n\t  if (!isFunction(listener))\n\t    throw TypeError('listener must be a function');\n\t\n\t  if (!this._events || !this._events[type])\n\t    return this;\n\t\n\t  list = this._events[type];\n\t  length = list.length;\n\t  position = -1;\n\t\n\t  if (list === listener ||\n\t      (isFunction(list.listener) && list.listener === listener)) {\n\t    delete this._events[type];\n\t    if (this._events.removeListener)\n\t      this.emit('removeListener', type, listener);\n\t\n\t  } else if (isObject(list)) {\n\t    for (i = length; i-- > 0;) {\n\t      if (list[i] === listener ||\n\t          (list[i].listener && list[i].listener === listener)) {\n\t        position = i;\n\t        break;\n\t      }\n\t    }\n\t\n\t    if (position < 0)\n\t      return this;\n\t\n\t    if (list.length === 1) {\n\t      list.length = 0;\n\t      delete this._events[type];\n\t    } else {\n\t      list.splice(position, 1);\n\t    }\n\t\n\t    if (this._events.removeListener)\n\t      this.emit('removeListener', type, listener);\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.removeAllListeners = function(type) {\n\t  var key, listeners;\n\t\n\t  if (!this._events)\n\t    return this;\n\t\n\t  // not listening for removeListener, no need to emit\n\t  if (!this._events.removeListener) {\n\t    if (arguments.length === 0)\n\t      this._events = {};\n\t    else if (this._events[type])\n\t      delete this._events[type];\n\t    return this;\n\t  }\n\t\n\t  // emit removeListener for all listeners on all events\n\t  if (arguments.length === 0) {\n\t    for (key in this._events) {\n\t      if (key === 'removeListener') continue;\n\t      this.removeAllListeners(key);\n\t    }\n\t    this.removeAllListeners('removeListener');\n\t    this._events = {};\n\t    return this;\n\t  }\n\t\n\t  listeners = this._events[type];\n\t\n\t  if (isFunction(listeners)) {\n\t    this.removeListener(type, listeners);\n\t  } else if (listeners) {\n\t    // LIFO order\n\t    while (listeners.length)\n\t      this.removeListener(type, listeners[listeners.length - 1]);\n\t  }\n\t  delete this._events[type];\n\t\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.listeners = function(type) {\n\t  var ret;\n\t  if (!this._events || !this._events[type])\n\t    ret = [];\n\t  else if (isFunction(this._events[type]))\n\t    ret = [this._events[type]];\n\t  else\n\t    ret = this._events[type].slice();\n\t  return ret;\n\t};\n\t\n\tEventEmitter.prototype.listenerCount = function(type) {\n\t  if (this._events) {\n\t    var evlistener = this._events[type];\n\t\n\t    if (isFunction(evlistener))\n\t      return 1;\n\t    else if (evlistener)\n\t      return evlistener.length;\n\t  }\n\t  return 0;\n\t};\n\t\n\tEventEmitter.listenerCount = function(emitter, type) {\n\t  return emitter.listenerCount(type);\n\t};\n\t\n\tfunction isFunction(arg) {\n\t  return typeof arg === 'function';\n\t}\n\t\n\tfunction isNumber(arg) {\n\t  return typeof arg === 'number';\n\t}\n\t\n\tfunction isObject(arg) {\n\t  return typeof arg === 'object' && arg !== null;\n\t}\n\t\n\tfunction isUndefined(arg) {\n\t  return arg === void 0;\n\t}\n\n\n/***/ },\n/* 42 */\n/***/ function(module, exports) {\n\n\tif (typeof Object.create === 'function') {\n\t  // implementation from standard node.js 'util' module\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor\n\t    ctor.prototype = Object.create(superCtor.prototype, {\n\t      constructor: {\n\t        value: ctor,\n\t        enumerable: false,\n\t        writable: true,\n\t        configurable: true\n\t      }\n\t    });\n\t  };\n\t} else {\n\t  // old school shim for old browsers\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor\n\t    var TempCtor = function () {}\n\t    TempCtor.prototype = superCtor.prototype\n\t    ctor.prototype = new TempCtor()\n\t    ctor.prototype.constructor = ctor\n\t  }\n\t}\n\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {var Stream = (function (){\n\t  try {\n\t    return __webpack_require__(40); // hack to fix a circular dependency issue when used with browserify\n\t  } catch(_){}\n\t}());\n\texports = module.exports = __webpack_require__(44);\n\texports.Stream = Stream || exports;\n\texports.Readable = exports;\n\texports.Writable = __webpack_require__(56);\n\texports.Duplex = __webpack_require__(55);\n\texports.Transform = __webpack_require__(59);\n\texports.PassThrough = __webpack_require__(60);\n\t\n\tif (!process.browser && process.env.READABLE_STREAM === 'disable' && Stream) {\n\t  module.exports = Stream;\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(24)))\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {'use strict';\n\t\n\tmodule.exports = Readable;\n\t\n\t/*<replacement>*/\n\tvar processNextTick = __webpack_require__(45);\n\t/*</replacement>*/\n\t\n\t/*<replacement>*/\n\tvar isArray = __webpack_require__(46);\n\t/*</replacement>*/\n\t\n\t/*<replacement>*/\n\tvar Duplex;\n\t/*</replacement>*/\n\t\n\tReadable.ReadableState = ReadableState;\n\t\n\t/*<replacement>*/\n\tvar EE = __webpack_require__(41).EventEmitter;\n\t\n\tvar EElistenerCount = function (emitter, type) {\n\t  return emitter.listeners(type).length;\n\t};\n\t/*</replacement>*/\n\t\n\t/*<replacement>*/\n\tvar Stream;\n\t(function () {\n\t  try {\n\t    Stream = __webpack_require__(40);\n\t  } catch (_) {} finally {\n\t    if (!Stream) Stream = __webpack_require__(41).EventEmitter;\n\t  }\n\t})();\n\t/*</replacement>*/\n\t\n\tvar Buffer = __webpack_require__(47).Buffer;\n\t/*<replacement>*/\n\tvar bufferShim = __webpack_require__(51);\n\t/*</replacement>*/\n\t\n\t/*<replacement>*/\n\tvar util = __webpack_require__(52);\n\tutil.inherits = __webpack_require__(42);\n\t/*</replacement>*/\n\t\n\t/*<replacement>*/\n\tvar debugUtil = __webpack_require__(53);\n\tvar debug = void 0;\n\tif (debugUtil && debugUtil.debuglog) {\n\t  debug = debugUtil.debuglog('stream');\n\t} else {\n\t  debug = function () {};\n\t}\n\t/*</replacement>*/\n\t\n\tvar BufferList = __webpack_require__(54);\n\tvar StringDecoder;\n\t\n\tutil.inherits(Readable, Stream);\n\t\n\tfunction prependListener(emitter, event, fn) {\n\t  // Sadly this is not cacheable as some libraries bundle their own\n\t  // event emitter implementation with them.\n\t  if (typeof emitter.prependListener === 'function') {\n\t    return emitter.prependListener(event, fn);\n\t  } else {\n\t    // This is a hack to make sure that our error handler is attached before any\n\t    // userland ones.  NEVER DO THIS. This is here only because this code needs\n\t    // to continue to work with older versions of Node.js that do not include\n\t    // the prependListener() method. The goal is to eventually remove this hack.\n\t    if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n\t  }\n\t}\n\t\n\tfunction ReadableState(options, stream) {\n\t  Duplex = Duplex || __webpack_require__(55);\n\t\n\t  options = options || {};\n\t\n\t  // object stream flag. Used to make read(n) ignore n and to\n\t  // make all the buffer merging and length checks go away\n\t  this.objectMode = !!options.objectMode;\n\t\n\t  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\t\n\t  // the point at which it stops calling _read() to fill the buffer\n\t  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n\t  var hwm = options.highWaterMark;\n\t  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\t  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;\n\t\n\t  // cast to ints.\n\t  this.highWaterMark = ~ ~this.highWaterMark;\n\t\n\t  // A linked list is used to store data chunks instead of an array because the\n\t  // linked list can remove elements from the beginning faster than\n\t  // array.shift()\n\t  this.buffer = new BufferList();\n\t  this.length = 0;\n\t  this.pipes = null;\n\t  this.pipesCount = 0;\n\t  this.flowing = null;\n\t  this.ended = false;\n\t  this.endEmitted = false;\n\t  this.reading = false;\n\t\n\t  // a flag to be able to tell if the onwrite cb is called immediately,\n\t  // or on a later tick.  We set this to true at first, because any\n\t  // actions that shouldn't happen until \"later\" should generally also\n\t  // not happen before the first write call.\n\t  this.sync = true;\n\t\n\t  // whenever we return null, then we set a flag to say\n\t  // that we're awaiting a 'readable' event emission.\n\t  this.needReadable = false;\n\t  this.emittedReadable = false;\n\t  this.readableListening = false;\n\t  this.resumeScheduled = false;\n\t\n\t  // Crypto is kind of old and crusty.  Historically, its default string\n\t  // encoding is 'binary' so we have to make this configurable.\n\t  // Everything else in the universe uses 'utf8', though.\n\t  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\t\n\t  // when piping, we only care about 'readable' events that happen\n\t  // after read()ing all the bytes and not getting any pushback.\n\t  this.ranOut = false;\n\t\n\t  // the number of writers that are awaiting a drain event in .pipe()s\n\t  this.awaitDrain = 0;\n\t\n\t  // if true, a maybeReadMore has been scheduled\n\t  this.readingMore = false;\n\t\n\t  this.decoder = null;\n\t  this.encoding = null;\n\t  if (options.encoding) {\n\t    if (!StringDecoder) StringDecoder = __webpack_require__(58).StringDecoder;\n\t    this.decoder = new StringDecoder(options.encoding);\n\t    this.encoding = options.encoding;\n\t  }\n\t}\n\t\n\tfunction Readable(options) {\n\t  Duplex = Duplex || __webpack_require__(55);\n\t\n\t  if (!(this instanceof Readable)) return new Readable(options);\n\t\n\t  this._readableState = new ReadableState(options, this);\n\t\n\t  // legacy\n\t  this.readable = true;\n\t\n\t  if (options && typeof options.read === 'function') this._read = options.read;\n\t\n\t  Stream.call(this);\n\t}\n\t\n\t// Manually shove something into the read() buffer.\n\t// This returns true if the highWaterMark has not been hit yet,\n\t// similar to how Writable.write() returns true if you should\n\t// write() some more.\n\tReadable.prototype.push = function (chunk, encoding) {\n\t  var state = this._readableState;\n\t\n\t  if (!state.objectMode && typeof chunk === 'string') {\n\t    encoding = encoding || state.defaultEncoding;\n\t    if (encoding !== state.encoding) {\n\t      chunk = bufferShim.from(chunk, encoding);\n\t      encoding = '';\n\t    }\n\t  }\n\t\n\t  return readableAddChunk(this, state, chunk, encoding, false);\n\t};\n\t\n\t// Unshift should *always* be something directly out of read()\n\tReadable.prototype.unshift = function (chunk) {\n\t  var state = this._readableState;\n\t  return readableAddChunk(this, state, chunk, '', true);\n\t};\n\t\n\tReadable.prototype.isPaused = function () {\n\t  return this._readableState.flowing === false;\n\t};\n\t\n\tfunction readableAddChunk(stream, state, chunk, encoding, addToFront) {\n\t  var er = chunkInvalid(state, chunk);\n\t  if (er) {\n\t    stream.emit('error', er);\n\t  } else if (chunk === null) {\n\t    state.reading = false;\n\t    onEofChunk(stream, state);\n\t  } else if (state.objectMode || chunk && chunk.length > 0) {\n\t    if (state.ended && !addToFront) {\n\t      var e = new Error('stream.push() after EOF');\n\t      stream.emit('error', e);\n\t    } else if (state.endEmitted && addToFront) {\n\t      var _e = new Error('stream.unshift() after end event');\n\t      stream.emit('error', _e);\n\t    } else {\n\t      var skipAdd;\n\t      if (state.decoder && !addToFront && !encoding) {\n\t        chunk = state.decoder.write(chunk);\n\t        skipAdd = !state.objectMode && chunk.length === 0;\n\t      }\n\t\n\t      if (!addToFront) state.reading = false;\n\t\n\t      // Don't add to the buffer if we've decoded to an empty string chunk and\n\t      // we're not in object mode\n\t      if (!skipAdd) {\n\t        // if we want the data now, just emit it.\n\t        if (state.flowing && state.length === 0 && !state.sync) {\n\t          stream.emit('data', chunk);\n\t          stream.read(0);\n\t        } else {\n\t          // update the buffer info.\n\t          state.length += state.objectMode ? 1 : chunk.length;\n\t          if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\t\n\t          if (state.needReadable) emitReadable(stream);\n\t        }\n\t      }\n\t\n\t      maybeReadMore(stream, state);\n\t    }\n\t  } else if (!addToFront) {\n\t    state.reading = false;\n\t  }\n\t\n\t  return needMoreData(state);\n\t}\n\t\n\t// if it's past the high water mark, we can push in some more.\n\t// Also, if we have no data yet, we can stand some\n\t// more bytes.  This is to work around cases where hwm=0,\n\t// such as the repl.  Also, if the push() triggered a\n\t// readable event, and the user called read(largeNumber) such that\n\t// needReadable was set, then we ought to push more, so that another\n\t// 'readable' event will be triggered.\n\tfunction needMoreData(state) {\n\t  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n\t}\n\t\n\t// backwards compatibility.\n\tReadable.prototype.setEncoding = function (enc) {\n\t  if (!StringDecoder) StringDecoder = __webpack_require__(58).StringDecoder;\n\t  this._readableState.decoder = new StringDecoder(enc);\n\t  this._readableState.encoding = enc;\n\t  return this;\n\t};\n\t\n\t// Don't raise the hwm > 8MB\n\tvar MAX_HWM = 0x800000;\n\tfunction computeNewHighWaterMark(n) {\n\t  if (n >= MAX_HWM) {\n\t    n = MAX_HWM;\n\t  } else {\n\t    // Get the next highest power of 2 to prevent increasing hwm excessively in\n\t    // tiny amounts\n\t    n--;\n\t    n |= n >>> 1;\n\t    n |= n >>> 2;\n\t    n |= n >>> 4;\n\t    n |= n >>> 8;\n\t    n |= n >>> 16;\n\t    n++;\n\t  }\n\t  return n;\n\t}\n\t\n\t// This function is designed to be inlinable, so please take care when making\n\t// changes to the function body.\n\tfunction howMuchToRead(n, state) {\n\t  if (n <= 0 || state.length === 0 && state.ended) return 0;\n\t  if (state.objectMode) return 1;\n\t  if (n !== n) {\n\t    // Only flow one buffer at a time\n\t    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n\t  }\n\t  // If we're asking for more than the current hwm, then raise the hwm.\n\t  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n\t  if (n <= state.length) return n;\n\t  // Don't have enough\n\t  if (!state.ended) {\n\t    state.needReadable = true;\n\t    return 0;\n\t  }\n\t  return state.length;\n\t}\n\t\n\t// you can override either this method, or the async _read(n) below.\n\tReadable.prototype.read = function (n) {\n\t  debug('read', n);\n\t  n = parseInt(n, 10);\n\t  var state = this._readableState;\n\t  var nOrig = n;\n\t\n\t  if (n !== 0) state.emittedReadable = false;\n\t\n\t  // if we're doing read(0) to trigger a readable event, but we\n\t  // already have a bunch of data in the buffer, then just trigger\n\t  // the 'readable' event and move on.\n\t  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n\t    debug('read: emitReadable', state.length, state.ended);\n\t    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n\t    return null;\n\t  }\n\t\n\t  n = howMuchToRead(n, state);\n\t\n\t  // if we've ended, and we're now clear, then finish it up.\n\t  if (n === 0 && state.ended) {\n\t    if (state.length === 0) endReadable(this);\n\t    return null;\n\t  }\n\t\n\t  // All the actual chunk generation logic needs to be\n\t  // *below* the call to _read.  The reason is that in certain\n\t  // synthetic stream cases, such as passthrough streams, _read\n\t  // may be a completely synchronous operation which may change\n\t  // the state of the read buffer, providing enough data when\n\t  // before there was *not* enough.\n\t  //\n\t  // So, the steps are:\n\t  // 1. Figure out what the state of things will be after we do\n\t  // a read from the buffer.\n\t  //\n\t  // 2. If that resulting state will trigger a _read, then call _read.\n\t  // Note that this may be asynchronous, or synchronous.  Yes, it is\n\t  // deeply ugly to write APIs this way, but that still doesn't mean\n\t  // that the Readable class should behave improperly, as streams are\n\t  // designed to be sync/async agnostic.\n\t  // Take note if the _read call is sync or async (ie, if the read call\n\t  // has returned yet), so that we know whether or not it's safe to emit\n\t  // 'readable' etc.\n\t  //\n\t  // 3. Actually pull the requested chunks out of the buffer and return.\n\t\n\t  // if we need a readable event, then we need to do some reading.\n\t  var doRead = state.needReadable;\n\t  debug('need readable', doRead);\n\t\n\t  // if we currently have less than the highWaterMark, then also read some\n\t  if (state.length === 0 || state.length - n < state.highWaterMark) {\n\t    doRead = true;\n\t    debug('length less than watermark', doRead);\n\t  }\n\t\n\t  // however, if we've ended, then there's no point, and if we're already\n\t  // reading, then it's unnecessary.\n\t  if (state.ended || state.reading) {\n\t    doRead = false;\n\t    debug('reading or ended', doRead);\n\t  } else if (doRead) {\n\t    debug('do read');\n\t    state.reading = true;\n\t    state.sync = true;\n\t    // if the length is currently zero, then we *need* a readable event.\n\t    if (state.length === 0) state.needReadable = true;\n\t    // call internal read method\n\t    this._read(state.highWaterMark);\n\t    state.sync = false;\n\t    // If _read pushed data synchronously, then `reading` will be false,\n\t    // and we need to re-evaluate how much data we can return to the user.\n\t    if (!state.reading) n = howMuchToRead(nOrig, state);\n\t  }\n\t\n\t  var ret;\n\t  if (n > 0) ret = fromList(n, state);else ret = null;\n\t\n\t  if (ret === null) {\n\t    state.needReadable = true;\n\t    n = 0;\n\t  } else {\n\t    state.length -= n;\n\t  }\n\t\n\t  if (state.length === 0) {\n\t    // If we have nothing in the buffer, then we want to know\n\t    // as soon as we *do* get something into the buffer.\n\t    if (!state.ended) state.needReadable = true;\n\t\n\t    // If we tried to read() past the EOF, then emit end on the next tick.\n\t    if (nOrig !== n && state.ended) endReadable(this);\n\t  }\n\t\n\t  if (ret !== null) this.emit('data', ret);\n\t\n\t  return ret;\n\t};\n\t\n\tfunction chunkInvalid(state, chunk) {\n\t  var er = null;\n\t  if (!Buffer.isBuffer(chunk) && typeof chunk !== 'string' && chunk !== null && chunk !== undefined && !state.objectMode) {\n\t    er = new TypeError('Invalid non-string/buffer chunk');\n\t  }\n\t  return er;\n\t}\n\t\n\tfunction onEofChunk(stream, state) {\n\t  if (state.ended) return;\n\t  if (state.decoder) {\n\t    var chunk = state.decoder.end();\n\t    if (chunk && chunk.length) {\n\t      state.buffer.push(chunk);\n\t      state.length += state.objectMode ? 1 : chunk.length;\n\t    }\n\t  }\n\t  state.ended = true;\n\t\n\t  // emit 'readable' now to make sure it gets picked up.\n\t  emitReadable(stream);\n\t}\n\t\n\t// Don't emit readable right away in sync mode, because this can trigger\n\t// another read() call => stack overflow.  This way, it might trigger\n\t// a nextTick recursion warning, but that's not so bad.\n\tfunction emitReadable(stream) {\n\t  var state = stream._readableState;\n\t  state.needReadable = false;\n\t  if (!state.emittedReadable) {\n\t    debug('emitReadable', state.flowing);\n\t    state.emittedReadable = true;\n\t    if (state.sync) processNextTick(emitReadable_, stream);else emitReadable_(stream);\n\t  }\n\t}\n\t\n\tfunction emitReadable_(stream) {\n\t  debug('emit readable');\n\t  stream.emit('readable');\n\t  flow(stream);\n\t}\n\t\n\t// at this point, the user has presumably seen the 'readable' event,\n\t// and called read() to consume some data.  that may have triggered\n\t// in turn another _read(n) call, in which case reading = true if\n\t// it's in progress.\n\t// However, if we're not ended, or reading, and the length < hwm,\n\t// then go ahead and try to read some more preemptively.\n\tfunction maybeReadMore(stream, state) {\n\t  if (!state.readingMore) {\n\t    state.readingMore = true;\n\t    processNextTick(maybeReadMore_, stream, state);\n\t  }\n\t}\n\t\n\tfunction maybeReadMore_(stream, state) {\n\t  var len = state.length;\n\t  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n\t    debug('maybeReadMore read 0');\n\t    stream.read(0);\n\t    if (len === state.length)\n\t      // didn't get any data, stop spinning.\n\t      break;else len = state.length;\n\t  }\n\t  state.readingMore = false;\n\t}\n\t\n\t// abstract method.  to be overridden in specific implementation classes.\n\t// call cb(er, data) where data is <= n in length.\n\t// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n\t// arbitrary, and perhaps not very meaningful.\n\tReadable.prototype._read = function (n) {\n\t  this.emit('error', new Error('_read() is not implemented'));\n\t};\n\t\n\tReadable.prototype.pipe = function (dest, pipeOpts) {\n\t  var src = this;\n\t  var state = this._readableState;\n\t\n\t  switch (state.pipesCount) {\n\t    case 0:\n\t      state.pipes = dest;\n\t      break;\n\t    case 1:\n\t      state.pipes = [state.pipes, dest];\n\t      break;\n\t    default:\n\t      state.pipes.push(dest);\n\t      break;\n\t  }\n\t  state.pipesCount += 1;\n\t  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\t\n\t  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\t\n\t  var endFn = doEnd ? onend : cleanup;\n\t  if (state.endEmitted) processNextTick(endFn);else src.once('end', endFn);\n\t\n\t  dest.on('unpipe', onunpipe);\n\t  function onunpipe(readable) {\n\t    debug('onunpipe');\n\t    if (readable === src) {\n\t      cleanup();\n\t    }\n\t  }\n\t\n\t  function onend() {\n\t    debug('onend');\n\t    dest.end();\n\t  }\n\t\n\t  // when the dest drains, it reduces the awaitDrain counter\n\t  // on the source.  This would be more elegant with a .once()\n\t  // handler in flow(), but adding and removing repeatedly is\n\t  // too slow.\n\t  var ondrain = pipeOnDrain(src);\n\t  dest.on('drain', ondrain);\n\t\n\t  var cleanedUp = false;\n\t  function cleanup() {\n\t    debug('cleanup');\n\t    // cleanup event handlers once the pipe is broken\n\t    dest.removeListener('close', onclose);\n\t    dest.removeListener('finish', onfinish);\n\t    dest.removeListener('drain', ondrain);\n\t    dest.removeListener('error', onerror);\n\t    dest.removeListener('unpipe', onunpipe);\n\t    src.removeListener('end', onend);\n\t    src.removeListener('end', cleanup);\n\t    src.removeListener('data', ondata);\n\t\n\t    cleanedUp = true;\n\t\n\t    // if the reader is waiting for a drain event from this\n\t    // specific writer, then it would cause it to never start\n\t    // flowing again.\n\t    // So, if this is awaiting a drain, then we just call it now.\n\t    // If we don't know, then assume that we are waiting for one.\n\t    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n\t  }\n\t\n\t  // If the user pushes more data while we're writing to dest then we'll end up\n\t  // in ondata again. However, we only want to increase awaitDrain once because\n\t  // dest will only emit one 'drain' event for the multiple writes.\n\t  // => Introduce a guard on increasing awaitDrain.\n\t  var increasedAwaitDrain = false;\n\t  src.on('data', ondata);\n\t  function ondata(chunk) {\n\t    debug('ondata');\n\t    increasedAwaitDrain = false;\n\t    var ret = dest.write(chunk);\n\t    if (false === ret && !increasedAwaitDrain) {\n\t      // If the user unpiped during `dest.write()`, it is possible\n\t      // to get stuck in a permanently paused state if that write\n\t      // also returned false.\n\t      // => Check whether `dest` is still a piping destination.\n\t      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n\t        debug('false write response, pause', src._readableState.awaitDrain);\n\t        src._readableState.awaitDrain++;\n\t        increasedAwaitDrain = true;\n\t      }\n\t      src.pause();\n\t    }\n\t  }\n\t\n\t  // if the dest has an error, then stop piping into it.\n\t  // however, don't suppress the throwing behavior for this.\n\t  function onerror(er) {\n\t    debug('onerror', er);\n\t    unpipe();\n\t    dest.removeListener('error', onerror);\n\t    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n\t  }\n\t\n\t  // Make sure our error handler is attached before userland ones.\n\t  prependListener(dest, 'error', onerror);\n\t\n\t  // Both close and finish should trigger unpipe, but only once.\n\t  function onclose() {\n\t    dest.removeListener('finish', onfinish);\n\t    unpipe();\n\t  }\n\t  dest.once('close', onclose);\n\t  function onfinish() {\n\t    debug('onfinish');\n\t    dest.removeListener('close', onclose);\n\t    unpipe();\n\t  }\n\t  dest.once('finish', onfinish);\n\t\n\t  function unpipe() {\n\t    debug('unpipe');\n\t    src.unpipe(dest);\n\t  }\n\t\n\t  // tell the dest that it's being piped to\n\t  dest.emit('pipe', src);\n\t\n\t  // start the flow if it hasn't been started already.\n\t  if (!state.flowing) {\n\t    debug('pipe resume');\n\t    src.resume();\n\t  }\n\t\n\t  return dest;\n\t};\n\t\n\tfunction pipeOnDrain(src) {\n\t  return function () {\n\t    var state = src._readableState;\n\t    debug('pipeOnDrain', state.awaitDrain);\n\t    if (state.awaitDrain) state.awaitDrain--;\n\t    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n\t      state.flowing = true;\n\t      flow(src);\n\t    }\n\t  };\n\t}\n\t\n\tReadable.prototype.unpipe = function (dest) {\n\t  var state = this._readableState;\n\t\n\t  // if we're not piping anywhere, then do nothing.\n\t  if (state.pipesCount === 0) return this;\n\t\n\t  // just one destination.  most common case.\n\t  if (state.pipesCount === 1) {\n\t    // passed in one, but it's not the right one.\n\t    if (dest && dest !== state.pipes) return this;\n\t\n\t    if (!dest) dest = state.pipes;\n\t\n\t    // got a match.\n\t    state.pipes = null;\n\t    state.pipesCount = 0;\n\t    state.flowing = false;\n\t    if (dest) dest.emit('unpipe', this);\n\t    return this;\n\t  }\n\t\n\t  // slow case. multiple pipe destinations.\n\t\n\t  if (!dest) {\n\t    // remove all.\n\t    var dests = state.pipes;\n\t    var len = state.pipesCount;\n\t    state.pipes = null;\n\t    state.pipesCount = 0;\n\t    state.flowing = false;\n\t\n\t    for (var i = 0; i < len; i++) {\n\t      dests[i].emit('unpipe', this);\n\t    }return this;\n\t  }\n\t\n\t  // try to find the right one.\n\t  var index = indexOf(state.pipes, dest);\n\t  if (index === -1) return this;\n\t\n\t  state.pipes.splice(index, 1);\n\t  state.pipesCount -= 1;\n\t  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\t\n\t  dest.emit('unpipe', this);\n\t\n\t  return this;\n\t};\n\t\n\t// set up data events if they are asked for\n\t// Ensure readable listeners eventually get something\n\tReadable.prototype.on = function (ev, fn) {\n\t  var res = Stream.prototype.on.call(this, ev, fn);\n\t\n\t  if (ev === 'data') {\n\t    // Start flowing on next tick if stream isn't explicitly paused\n\t    if (this._readableState.flowing !== false) this.resume();\n\t  } else if (ev === 'readable') {\n\t    var state = this._readableState;\n\t    if (!state.endEmitted && !state.readableListening) {\n\t      state.readableListening = state.needReadable = true;\n\t      state.emittedReadable = false;\n\t      if (!state.reading) {\n\t        processNextTick(nReadingNextTick, this);\n\t      } else if (state.length) {\n\t        emitReadable(this, state);\n\t      }\n\t    }\n\t  }\n\t\n\t  return res;\n\t};\n\tReadable.prototype.addListener = Readable.prototype.on;\n\t\n\tfunction nReadingNextTick(self) {\n\t  debug('readable nexttick read 0');\n\t  self.read(0);\n\t}\n\t\n\t// pause() and resume() are remnants of the legacy readable stream API\n\t// If the user uses them, then switch into old mode.\n\tReadable.prototype.resume = function () {\n\t  var state = this._readableState;\n\t  if (!state.flowing) {\n\t    debug('resume');\n\t    state.flowing = true;\n\t    resume(this, state);\n\t  }\n\t  return this;\n\t};\n\t\n\tfunction resume(stream, state) {\n\t  if (!state.resumeScheduled) {\n\t    state.resumeScheduled = true;\n\t    processNextTick(resume_, stream, state);\n\t  }\n\t}\n\t\n\tfunction resume_(stream, state) {\n\t  if (!state.reading) {\n\t    debug('resume read 0');\n\t    stream.read(0);\n\t  }\n\t\n\t  state.resumeScheduled = false;\n\t  state.awaitDrain = 0;\n\t  stream.emit('resume');\n\t  flow(stream);\n\t  if (state.flowing && !state.reading) stream.read(0);\n\t}\n\t\n\tReadable.prototype.pause = function () {\n\t  debug('call pause flowing=%j', this._readableState.flowing);\n\t  if (false !== this._readableState.flowing) {\n\t    debug('pause');\n\t    this._readableState.flowing = false;\n\t    this.emit('pause');\n\t  }\n\t  return this;\n\t};\n\t\n\tfunction flow(stream) {\n\t  var state = stream._readableState;\n\t  debug('flow', state.flowing);\n\t  while (state.flowing && stream.read() !== null) {}\n\t}\n\t\n\t// wrap an old-style stream as the async data source.\n\t// This is *not* part of the readable stream interface.\n\t// It is an ugly unfortunate mess of history.\n\tReadable.prototype.wrap = function (stream) {\n\t  var state = this._readableState;\n\t  var paused = false;\n\t\n\t  var self = this;\n\t  stream.on('end', function () {\n\t    debug('wrapped end');\n\t    if (state.decoder && !state.ended) {\n\t      var chunk = state.decoder.end();\n\t      if (chunk && chunk.length) self.push(chunk);\n\t    }\n\t\n\t    self.push(null);\n\t  });\n\t\n\t  stream.on('data', function (chunk) {\n\t    debug('wrapped data');\n\t    if (state.decoder) chunk = state.decoder.write(chunk);\n\t\n\t    // don't skip over falsy values in objectMode\n\t    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\t\n\t    var ret = self.push(chunk);\n\t    if (!ret) {\n\t      paused = true;\n\t      stream.pause();\n\t    }\n\t  });\n\t\n\t  // proxy all the other methods.\n\t  // important when wrapping filters and duplexes.\n\t  for (var i in stream) {\n\t    if (this[i] === undefined && typeof stream[i] === 'function') {\n\t      this[i] = function (method) {\n\t        return function () {\n\t          return stream[method].apply(stream, arguments);\n\t        };\n\t      }(i);\n\t    }\n\t  }\n\t\n\t  // proxy certain important events.\n\t  var events = ['error', 'close', 'destroy', 'pause', 'resume'];\n\t  forEach(events, function (ev) {\n\t    stream.on(ev, self.emit.bind(self, ev));\n\t  });\n\t\n\t  // when we try to consume some more bytes, simply unpause the\n\t  // underlying stream.\n\t  self._read = function (n) {\n\t    debug('wrapped _read', n);\n\t    if (paused) {\n\t      paused = false;\n\t      stream.resume();\n\t    }\n\t  };\n\t\n\t  return self;\n\t};\n\t\n\t// exposed for testing purposes only.\n\tReadable._fromList = fromList;\n\t\n\t// Pluck off n bytes from an array of buffers.\n\t// Length is the combined lengths of all the buffers in the list.\n\t// This function is designed to be inlinable, so please take care when making\n\t// changes to the function body.\n\tfunction fromList(n, state) {\n\t  // nothing buffered\n\t  if (state.length === 0) return null;\n\t\n\t  var ret;\n\t  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n\t    // read it all, truncate the list\n\t    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n\t    state.buffer.clear();\n\t  } else {\n\t    // read part of list\n\t    ret = fromListPartial(n, state.buffer, state.decoder);\n\t  }\n\t\n\t  return ret;\n\t}\n\t\n\t// Extracts only enough buffered data to satisfy the amount requested.\n\t// This function is designed to be inlinable, so please take care when making\n\t// changes to the function body.\n\tfunction fromListPartial(n, list, hasStrings) {\n\t  var ret;\n\t  if (n < list.head.data.length) {\n\t    // slice is the same for buffers and strings\n\t    ret = list.head.data.slice(0, n);\n\t    list.head.data = list.head.data.slice(n);\n\t  } else if (n === list.head.data.length) {\n\t    // first chunk is a perfect match\n\t    ret = list.shift();\n\t  } else {\n\t    // result spans more than one buffer\n\t    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n\t  }\n\t  return ret;\n\t}\n\t\n\t// Copies a specified amount of characters from the list of buffered data\n\t// chunks.\n\t// This function is designed to be inlinable, so please take care when making\n\t// changes to the function body.\n\tfunction copyFromBufferString(n, list) {\n\t  var p = list.head;\n\t  var c = 1;\n\t  var ret = p.data;\n\t  n -= ret.length;\n\t  while (p = p.next) {\n\t    var str = p.data;\n\t    var nb = n > str.length ? str.length : n;\n\t    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n\t    n -= nb;\n\t    if (n === 0) {\n\t      if (nb === str.length) {\n\t        ++c;\n\t        if (p.next) list.head = p.next;else list.head = list.tail = null;\n\t      } else {\n\t        list.head = p;\n\t        p.data = str.slice(nb);\n\t      }\n\t      break;\n\t    }\n\t    ++c;\n\t  }\n\t  list.length -= c;\n\t  return ret;\n\t}\n\t\n\t// Copies a specified amount of bytes from the list of buffered data chunks.\n\t// This function is designed to be inlinable, so please take care when making\n\t// changes to the function body.\n\tfunction copyFromBuffer(n, list) {\n\t  var ret = bufferShim.allocUnsafe(n);\n\t  var p = list.head;\n\t  var c = 1;\n\t  p.data.copy(ret);\n\t  n -= p.data.length;\n\t  while (p = p.next) {\n\t    var buf = p.data;\n\t    var nb = n > buf.length ? buf.length : n;\n\t    buf.copy(ret, ret.length - n, 0, nb);\n\t    n -= nb;\n\t    if (n === 0) {\n\t      if (nb === buf.length) {\n\t        ++c;\n\t        if (p.next) list.head = p.next;else list.head = list.tail = null;\n\t      } else {\n\t        list.head = p;\n\t        p.data = buf.slice(nb);\n\t      }\n\t      break;\n\t    }\n\t    ++c;\n\t  }\n\t  list.length -= c;\n\t  return ret;\n\t}\n\t\n\tfunction endReadable(stream) {\n\t  var state = stream._readableState;\n\t\n\t  // If we get here before consuming all the bytes, then that is a\n\t  // bug in node.  Should never happen.\n\t  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\t\n\t  if (!state.endEmitted) {\n\t    state.ended = true;\n\t    processNextTick(endReadableNT, state, stream);\n\t  }\n\t}\n\t\n\tfunction endReadableNT(state, stream) {\n\t  // Check that we didn't get one last unshift.\n\t  if (!state.endEmitted && state.length === 0) {\n\t    state.endEmitted = true;\n\t    stream.readable = false;\n\t    stream.emit('end');\n\t  }\n\t}\n\t\n\tfunction forEach(xs, f) {\n\t  for (var i = 0, l = xs.length; i < l; i++) {\n\t    f(xs[i], i);\n\t  }\n\t}\n\t\n\tfunction indexOf(xs, x) {\n\t  for (var i = 0, l = xs.length; i < l; i++) {\n\t    if (xs[i] === x) return i;\n\t  }\n\t  return -1;\n\t}\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(24)))\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {'use strict';\n\t\n\tif (!process.version ||\n\t    process.version.indexOf('v0.') === 0 ||\n\t    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n\t  module.exports = nextTick;\n\t} else {\n\t  module.exports = process.nextTick;\n\t}\n\t\n\tfunction nextTick(fn, arg1, arg2, arg3) {\n\t  if (typeof fn !== 'function') {\n\t    throw new TypeError('\"callback\" argument must be a function');\n\t  }\n\t  var len = arguments.length;\n\t  var args, i;\n\t  switch (len) {\n\t  case 0:\n\t  case 1:\n\t    return process.nextTick(fn);\n\t  case 2:\n\t    return process.nextTick(function afterTickOne() {\n\t      fn.call(null, arg1);\n\t    });\n\t  case 3:\n\t    return process.nextTick(function afterTickTwo() {\n\t      fn.call(null, arg1, arg2);\n\t    });\n\t  case 4:\n\t    return process.nextTick(function afterTickThree() {\n\t      fn.call(null, arg1, arg2, arg3);\n\t    });\n\t  default:\n\t    args = new Array(len - 1);\n\t    i = 0;\n\t    while (i < args.length) {\n\t      args[i++] = arguments[i];\n\t    }\n\t    return process.nextTick(function afterTick() {\n\t      fn.apply(null, args);\n\t    });\n\t  }\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(24)))\n\n/***/ },\n/* 46 */\n/***/ function(module, exports) {\n\n\tvar toString = {}.toString;\n\t\n\tmodule.exports = Array.isArray || function (arr) {\n\t  return toString.call(arr) == '[object Array]';\n\t};\n\n\n/***/ },\n/* 47 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*!\n\t * The buffer module from node.js, for the browser.\n\t *\n\t * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n\t * @license  MIT\n\t */\n\t/* eslint-disable no-proto */\n\t\n\t'use strict'\n\t\n\tvar base64 = __webpack_require__(48)\n\tvar ieee754 = __webpack_require__(49)\n\tvar isArray = __webpack_require__(50)\n\t\n\texports.Buffer = Buffer\n\texports.SlowBuffer = SlowBuffer\n\texports.INSPECT_MAX_BYTES = 50\n\t\n\t/**\n\t * If `Buffer.TYPED_ARRAY_SUPPORT`:\n\t *   === true    Use Uint8Array implementation (fastest)\n\t *   === false   Use Object implementation (most compatible, even IE6)\n\t *\n\t * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n\t * Opera 11.6+, iOS 4.2+.\n\t *\n\t * Due to various browser bugs, sometimes the Object implementation will be used even\n\t * when the browser supports typed arrays.\n\t *\n\t * Note:\n\t *\n\t *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n\t *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n\t *\n\t *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n\t *\n\t *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n\t *     incorrect length in some situations.\n\t\n\t * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n\t * get the Object implementation, which is slower but behaves correctly.\n\t */\n\tBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n\t  ? global.TYPED_ARRAY_SUPPORT\n\t  : typedArraySupport()\n\t\n\t/*\n\t * Export kMaxLength after typed array support is determined.\n\t */\n\texports.kMaxLength = kMaxLength()\n\t\n\tfunction typedArraySupport () {\n\t  try {\n\t    var arr = new Uint8Array(1)\n\t    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n\t    return arr.foo() === 42 && // typed array instances can be augmented\n\t        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n\t        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n\t  } catch (e) {\n\t    return false\n\t  }\n\t}\n\t\n\tfunction kMaxLength () {\n\t  return Buffer.TYPED_ARRAY_SUPPORT\n\t    ? 0x7fffffff\n\t    : 0x3fffffff\n\t}\n\t\n\tfunction createBuffer (that, length) {\n\t  if (kMaxLength() < length) {\n\t    throw new RangeError('Invalid typed array length')\n\t  }\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // Return an augmented `Uint8Array` instance, for best performance\n\t    that = new Uint8Array(length)\n\t    that.__proto__ = Buffer.prototype\n\t  } else {\n\t    // Fallback: Return an object instance of the Buffer class\n\t    if (that === null) {\n\t      that = new Buffer(length)\n\t    }\n\t    that.length = length\n\t  }\n\t\n\t  return that\n\t}\n\t\n\t/**\n\t * The Buffer constructor returns instances of `Uint8Array` that have their\n\t * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n\t * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n\t * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n\t * returns a single octet.\n\t *\n\t * The `Uint8Array` prototype remains unmodified.\n\t */\n\t\n\tfunction Buffer (arg, encodingOrOffset, length) {\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n\t    return new Buffer(arg, encodingOrOffset, length)\n\t  }\n\t\n\t  // Common case.\n\t  if (typeof arg === 'number') {\n\t    if (typeof encodingOrOffset === 'string') {\n\t      throw new Error(\n\t        'If encoding is specified then the first argument must be a string'\n\t      )\n\t    }\n\t    return allocUnsafe(this, arg)\n\t  }\n\t  return from(this, arg, encodingOrOffset, length)\n\t}\n\t\n\tBuffer.poolSize = 8192 // not used by this implementation\n\t\n\t// TODO: Legacy, not needed anymore. Remove in next major version.\n\tBuffer._augment = function (arr) {\n\t  arr.__proto__ = Buffer.prototype\n\t  return arr\n\t}\n\t\n\tfunction from (that, value, encodingOrOffset, length) {\n\t  if (typeof value === 'number') {\n\t    throw new TypeError('\"value\" argument must not be a number')\n\t  }\n\t\n\t  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n\t    return fromArrayBuffer(that, value, encodingOrOffset, length)\n\t  }\n\t\n\t  if (typeof value === 'string') {\n\t    return fromString(that, value, encodingOrOffset)\n\t  }\n\t\n\t  return fromObject(that, value)\n\t}\n\t\n\t/**\n\t * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n\t * if value is a number.\n\t * Buffer.from(str[, encoding])\n\t * Buffer.from(array)\n\t * Buffer.from(buffer)\n\t * Buffer.from(arrayBuffer[, byteOffset[, length]])\n\t **/\n\tBuffer.from = function (value, encodingOrOffset, length) {\n\t  return from(null, value, encodingOrOffset, length)\n\t}\n\t\n\tif (Buffer.TYPED_ARRAY_SUPPORT) {\n\t  Buffer.prototype.__proto__ = Uint8Array.prototype\n\t  Buffer.__proto__ = Uint8Array\n\t  if (typeof Symbol !== 'undefined' && Symbol.species &&\n\t      Buffer[Symbol.species] === Buffer) {\n\t    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n\t    Object.defineProperty(Buffer, Symbol.species, {\n\t      value: null,\n\t      configurable: true\n\t    })\n\t  }\n\t}\n\t\n\tfunction assertSize (size) {\n\t  if (typeof size !== 'number') {\n\t    throw new TypeError('\"size\" argument must be a number')\n\t  } else if (size < 0) {\n\t    throw new RangeError('\"size\" argument must not be negative')\n\t  }\n\t}\n\t\n\tfunction alloc (that, size, fill, encoding) {\n\t  assertSize(size)\n\t  if (size <= 0) {\n\t    return createBuffer(that, size)\n\t  }\n\t  if (fill !== undefined) {\n\t    // Only pay attention to encoding if it's a string. This\n\t    // prevents accidentally sending in a number that would\n\t    // be interpretted as a start offset.\n\t    return typeof encoding === 'string'\n\t      ? createBuffer(that, size).fill(fill, encoding)\n\t      : createBuffer(that, size).fill(fill)\n\t  }\n\t  return createBuffer(that, size)\n\t}\n\t\n\t/**\n\t * Creates a new filled Buffer instance.\n\t * alloc(size[, fill[, encoding]])\n\t **/\n\tBuffer.alloc = function (size, fill, encoding) {\n\t  return alloc(null, size, fill, encoding)\n\t}\n\t\n\tfunction allocUnsafe (that, size) {\n\t  assertSize(size)\n\t  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n\t    for (var i = 0; i < size; ++i) {\n\t      that[i] = 0\n\t    }\n\t  }\n\t  return that\n\t}\n\t\n\t/**\n\t * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n\t * */\n\tBuffer.allocUnsafe = function (size) {\n\t  return allocUnsafe(null, size)\n\t}\n\t/**\n\t * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n\t */\n\tBuffer.allocUnsafeSlow = function (size) {\n\t  return allocUnsafe(null, size)\n\t}\n\t\n\tfunction fromString (that, string, encoding) {\n\t  if (typeof encoding !== 'string' || encoding === '') {\n\t    encoding = 'utf8'\n\t  }\n\t\n\t  if (!Buffer.isEncoding(encoding)) {\n\t    throw new TypeError('\"encoding\" must be a valid string encoding')\n\t  }\n\t\n\t  var length = byteLength(string, encoding) | 0\n\t  that = createBuffer(that, length)\n\t\n\t  var actual = that.write(string, encoding)\n\t\n\t  if (actual !== length) {\n\t    // Writing a hex string, for example, that contains invalid characters will\n\t    // cause everything after the first invalid character to be ignored. (e.g.\n\t    // 'abxxcd' will be treated as 'ab')\n\t    that = that.slice(0, actual)\n\t  }\n\t\n\t  return that\n\t}\n\t\n\tfunction fromArrayLike (that, array) {\n\t  var length = array.length < 0 ? 0 : checked(array.length) | 0\n\t  that = createBuffer(that, length)\n\t  for (var i = 0; i < length; i += 1) {\n\t    that[i] = array[i] & 255\n\t  }\n\t  return that\n\t}\n\t\n\tfunction fromArrayBuffer (that, array, byteOffset, length) {\n\t  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\t\n\t  if (byteOffset < 0 || array.byteLength < byteOffset) {\n\t    throw new RangeError('\\'offset\\' is out of bounds')\n\t  }\n\t\n\t  if (array.byteLength < byteOffset + (length || 0)) {\n\t    throw new RangeError('\\'length\\' is out of bounds')\n\t  }\n\t\n\t  if (byteOffset === undefined && length === undefined) {\n\t    array = new Uint8Array(array)\n\t  } else if (length === undefined) {\n\t    array = new Uint8Array(array, byteOffset)\n\t  } else {\n\t    array = new Uint8Array(array, byteOffset, length)\n\t  }\n\t\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // Return an augmented `Uint8Array` instance, for best performance\n\t    that = array\n\t    that.__proto__ = Buffer.prototype\n\t  } else {\n\t    // Fallback: Return an object instance of the Buffer class\n\t    that = fromArrayLike(that, array)\n\t  }\n\t  return that\n\t}\n\t\n\tfunction fromObject (that, obj) {\n\t  if (Buffer.isBuffer(obj)) {\n\t    var len = checked(obj.length) | 0\n\t    that = createBuffer(that, len)\n\t\n\t    if (that.length === 0) {\n\t      return that\n\t    }\n\t\n\t    obj.copy(that, 0, 0, len)\n\t    return that\n\t  }\n\t\n\t  if (obj) {\n\t    if ((typeof ArrayBuffer !== 'undefined' &&\n\t        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n\t      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n\t        return createBuffer(that, 0)\n\t      }\n\t      return fromArrayLike(that, obj)\n\t    }\n\t\n\t    if (obj.type === 'Buffer' && isArray(obj.data)) {\n\t      return fromArrayLike(that, obj.data)\n\t    }\n\t  }\n\t\n\t  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n\t}\n\t\n\tfunction checked (length) {\n\t  // Note: cannot use `length < kMaxLength()` here because that fails when\n\t  // length is NaN (which is otherwise coerced to zero.)\n\t  if (length >= kMaxLength()) {\n\t    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n\t                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n\t  }\n\t  return length | 0\n\t}\n\t\n\tfunction SlowBuffer (length) {\n\t  if (+length != length) { // eslint-disable-line eqeqeq\n\t    length = 0\n\t  }\n\t  return Buffer.alloc(+length)\n\t}\n\t\n\tBuffer.isBuffer = function isBuffer (b) {\n\t  return !!(b != null && b._isBuffer)\n\t}\n\t\n\tBuffer.compare = function compare (a, b) {\n\t  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n\t    throw new TypeError('Arguments must be Buffers')\n\t  }\n\t\n\t  if (a === b) return 0\n\t\n\t  var x = a.length\n\t  var y = b.length\n\t\n\t  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n\t    if (a[i] !== b[i]) {\n\t      x = a[i]\n\t      y = b[i]\n\t      break\n\t    }\n\t  }\n\t\n\t  if (x < y) return -1\n\t  if (y < x) return 1\n\t  return 0\n\t}\n\t\n\tBuffer.isEncoding = function isEncoding (encoding) {\n\t  switch (String(encoding).toLowerCase()) {\n\t    case 'hex':\n\t    case 'utf8':\n\t    case 'utf-8':\n\t    case 'ascii':\n\t    case 'latin1':\n\t    case 'binary':\n\t    case 'base64':\n\t    case 'ucs2':\n\t    case 'ucs-2':\n\t    case 'utf16le':\n\t    case 'utf-16le':\n\t      return true\n\t    default:\n\t      return false\n\t  }\n\t}\n\t\n\tBuffer.concat = function concat (list, length) {\n\t  if (!isArray(list)) {\n\t    throw new TypeError('\"list\" argument must be an Array of Buffers')\n\t  }\n\t\n\t  if (list.length === 0) {\n\t    return Buffer.alloc(0)\n\t  }\n\t\n\t  var i\n\t  if (length === undefined) {\n\t    length = 0\n\t    for (i = 0; i < list.length; ++i) {\n\t      length += list[i].length\n\t    }\n\t  }\n\t\n\t  var buffer = Buffer.allocUnsafe(length)\n\t  var pos = 0\n\t  for (i = 0; i < list.length; ++i) {\n\t    var buf = list[i]\n\t    if (!Buffer.isBuffer(buf)) {\n\t      throw new TypeError('\"list\" argument must be an Array of Buffers')\n\t    }\n\t    buf.copy(buffer, pos)\n\t    pos += buf.length\n\t  }\n\t  return buffer\n\t}\n\t\n\tfunction byteLength (string, encoding) {\n\t  if (Buffer.isBuffer(string)) {\n\t    return string.length\n\t  }\n\t  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n\t      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n\t    return string.byteLength\n\t  }\n\t  if (typeof string !== 'string') {\n\t    string = '' + string\n\t  }\n\t\n\t  var len = string.length\n\t  if (len === 0) return 0\n\t\n\t  // Use a for loop to avoid recursion\n\t  var loweredCase = false\n\t  for (;;) {\n\t    switch (encoding) {\n\t      case 'ascii':\n\t      case 'latin1':\n\t      case 'binary':\n\t        return len\n\t      case 'utf8':\n\t      case 'utf-8':\n\t      case undefined:\n\t        return utf8ToBytes(string).length\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return len * 2\n\t      case 'hex':\n\t        return len >>> 1\n\t      case 'base64':\n\t        return base64ToBytes(string).length\n\t      default:\n\t        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n\t        encoding = ('' + encoding).toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\tBuffer.byteLength = byteLength\n\t\n\tfunction slowToString (encoding, start, end) {\n\t  var loweredCase = false\n\t\n\t  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n\t  // property of a typed array.\n\t\n\t  // This behaves neither like String nor Uint8Array in that we set start/end\n\t  // to their upper/lower bounds if the value passed is out of range.\n\t  // undefined is handled specially as per ECMA-262 6th Edition,\n\t  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n\t  if (start === undefined || start < 0) {\n\t    start = 0\n\t  }\n\t  // Return early if start > this.length. Done here to prevent potential uint32\n\t  // coercion fail below.\n\t  if (start > this.length) {\n\t    return ''\n\t  }\n\t\n\t  if (end === undefined || end > this.length) {\n\t    end = this.length\n\t  }\n\t\n\t  if (end <= 0) {\n\t    return ''\n\t  }\n\t\n\t  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n\t  end >>>= 0\n\t  start >>>= 0\n\t\n\t  if (end <= start) {\n\t    return ''\n\t  }\n\t\n\t  if (!encoding) encoding = 'utf8'\n\t\n\t  while (true) {\n\t    switch (encoding) {\n\t      case 'hex':\n\t        return hexSlice(this, start, end)\n\t\n\t      case 'utf8':\n\t      case 'utf-8':\n\t        return utf8Slice(this, start, end)\n\t\n\t      case 'ascii':\n\t        return asciiSlice(this, start, end)\n\t\n\t      case 'latin1':\n\t      case 'binary':\n\t        return latin1Slice(this, start, end)\n\t\n\t      case 'base64':\n\t        return base64Slice(this, start, end)\n\t\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return utf16leSlice(this, start, end)\n\t\n\t      default:\n\t        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n\t        encoding = (encoding + '').toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\t\n\t// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n\t// Buffer instances.\n\tBuffer.prototype._isBuffer = true\n\t\n\tfunction swap (b, n, m) {\n\t  var i = b[n]\n\t  b[n] = b[m]\n\t  b[m] = i\n\t}\n\t\n\tBuffer.prototype.swap16 = function swap16 () {\n\t  var len = this.length\n\t  if (len % 2 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 16-bits')\n\t  }\n\t  for (var i = 0; i < len; i += 2) {\n\t    swap(this, i, i + 1)\n\t  }\n\t  return this\n\t}\n\t\n\tBuffer.prototype.swap32 = function swap32 () {\n\t  var len = this.length\n\t  if (len % 4 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 32-bits')\n\t  }\n\t  for (var i = 0; i < len; i += 4) {\n\t    swap(this, i, i + 3)\n\t    swap(this, i + 1, i + 2)\n\t  }\n\t  return this\n\t}\n\t\n\tBuffer.prototype.swap64 = function swap64 () {\n\t  var len = this.length\n\t  if (len % 8 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 64-bits')\n\t  }\n\t  for (var i = 0; i < len; i += 8) {\n\t    swap(this, i, i + 7)\n\t    swap(this, i + 1, i + 6)\n\t    swap(this, i + 2, i + 5)\n\t    swap(this, i + 3, i + 4)\n\t  }\n\t  return this\n\t}\n\t\n\tBuffer.prototype.toString = function toString () {\n\t  var length = this.length | 0\n\t  if (length === 0) return ''\n\t  if (arguments.length === 0) return utf8Slice(this, 0, length)\n\t  return slowToString.apply(this, arguments)\n\t}\n\t\n\tBuffer.prototype.equals = function equals (b) {\n\t  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n\t  if (this === b) return true\n\t  return Buffer.compare(this, b) === 0\n\t}\n\t\n\tBuffer.prototype.inspect = function inspect () {\n\t  var str = ''\n\t  var max = exports.INSPECT_MAX_BYTES\n\t  if (this.length > 0) {\n\t    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n\t    if (this.length > max) str += ' ... '\n\t  }\n\t  return '<Buffer ' + str + '>'\n\t}\n\t\n\tBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n\t  if (!Buffer.isBuffer(target)) {\n\t    throw new TypeError('Argument must be a Buffer')\n\t  }\n\t\n\t  if (start === undefined) {\n\t    start = 0\n\t  }\n\t  if (end === undefined) {\n\t    end = target ? target.length : 0\n\t  }\n\t  if (thisStart === undefined) {\n\t    thisStart = 0\n\t  }\n\t  if (thisEnd === undefined) {\n\t    thisEnd = this.length\n\t  }\n\t\n\t  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n\t    throw new RangeError('out of range index')\n\t  }\n\t\n\t  if (thisStart >= thisEnd && start >= end) {\n\t    return 0\n\t  }\n\t  if (thisStart >= thisEnd) {\n\t    return -1\n\t  }\n\t  if (start >= end) {\n\t    return 1\n\t  }\n\t\n\t  start >>>= 0\n\t  end >>>= 0\n\t  thisStart >>>= 0\n\t  thisEnd >>>= 0\n\t\n\t  if (this === target) return 0\n\t\n\t  var x = thisEnd - thisStart\n\t  var y = end - start\n\t  var len = Math.min(x, y)\n\t\n\t  var thisCopy = this.slice(thisStart, thisEnd)\n\t  var targetCopy = target.slice(start, end)\n\t\n\t  for (var i = 0; i < len; ++i) {\n\t    if (thisCopy[i] !== targetCopy[i]) {\n\t      x = thisCopy[i]\n\t      y = targetCopy[i]\n\t      break\n\t    }\n\t  }\n\t\n\t  if (x < y) return -1\n\t  if (y < x) return 1\n\t  return 0\n\t}\n\t\n\t// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n\t// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n\t//\n\t// Arguments:\n\t// - buffer - a Buffer to search\n\t// - val - a string, Buffer, or number\n\t// - byteOffset - an index into `buffer`; will be clamped to an int32\n\t// - encoding - an optional encoding, relevant is val is a string\n\t// - dir - true for indexOf, false for lastIndexOf\n\tfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n\t  // Empty buffer means no match\n\t  if (buffer.length === 0) return -1\n\t\n\t  // Normalize byteOffset\n\t  if (typeof byteOffset === 'string') {\n\t    encoding = byteOffset\n\t    byteOffset = 0\n\t  } else if (byteOffset > 0x7fffffff) {\n\t    byteOffset = 0x7fffffff\n\t  } else if (byteOffset < -0x80000000) {\n\t    byteOffset = -0x80000000\n\t  }\n\t  byteOffset = +byteOffset  // Coerce to Number.\n\t  if (isNaN(byteOffset)) {\n\t    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n\t    byteOffset = dir ? 0 : (buffer.length - 1)\n\t  }\n\t\n\t  // Normalize byteOffset: negative offsets start from the end of the buffer\n\t  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n\t  if (byteOffset >= buffer.length) {\n\t    if (dir) return -1\n\t    else byteOffset = buffer.length - 1\n\t  } else if (byteOffset < 0) {\n\t    if (dir) byteOffset = 0\n\t    else return -1\n\t  }\n\t\n\t  // Normalize val\n\t  if (typeof val === 'string') {\n\t    val = Buffer.from(val, encoding)\n\t  }\n\t\n\t  // Finally, search either indexOf (if dir is true) or lastIndexOf\n\t  if (Buffer.isBuffer(val)) {\n\t    // Special case: looking for empty string/buffer always fails\n\t    if (val.length === 0) {\n\t      return -1\n\t    }\n\t    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n\t  } else if (typeof val === 'number') {\n\t    val = val & 0xFF // Search for a byte value [0-255]\n\t    if (Buffer.TYPED_ARRAY_SUPPORT &&\n\t        typeof Uint8Array.prototype.indexOf === 'function') {\n\t      if (dir) {\n\t        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n\t      } else {\n\t        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n\t      }\n\t    }\n\t    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n\t  }\n\t\n\t  throw new TypeError('val must be string, number or Buffer')\n\t}\n\t\n\tfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n\t  var indexSize = 1\n\t  var arrLength = arr.length\n\t  var valLength = val.length\n\t\n\t  if (encoding !== undefined) {\n\t    encoding = String(encoding).toLowerCase()\n\t    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n\t        encoding === 'utf16le' || encoding === 'utf-16le') {\n\t      if (arr.length < 2 || val.length < 2) {\n\t        return -1\n\t      }\n\t      indexSize = 2\n\t      arrLength /= 2\n\t      valLength /= 2\n\t      byteOffset /= 2\n\t    }\n\t  }\n\t\n\t  function read (buf, i) {\n\t    if (indexSize === 1) {\n\t      return buf[i]\n\t    } else {\n\t      return buf.readUInt16BE(i * indexSize)\n\t    }\n\t  }\n\t\n\t  var i\n\t  if (dir) {\n\t    var foundIndex = -1\n\t    for (i = byteOffset; i < arrLength; i++) {\n\t      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n\t        if (foundIndex === -1) foundIndex = i\n\t        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n\t      } else {\n\t        if (foundIndex !== -1) i -= i - foundIndex\n\t        foundIndex = -1\n\t      }\n\t    }\n\t  } else {\n\t    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n\t    for (i = byteOffset; i >= 0; i--) {\n\t      var found = true\n\t      for (var j = 0; j < valLength; j++) {\n\t        if (read(arr, i + j) !== read(val, j)) {\n\t          found = false\n\t          break\n\t        }\n\t      }\n\t      if (found) return i\n\t    }\n\t  }\n\t\n\t  return -1\n\t}\n\t\n\tBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n\t  return this.indexOf(val, byteOffset, encoding) !== -1\n\t}\n\t\n\tBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n\t  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n\t}\n\t\n\tBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n\t  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n\t}\n\t\n\tfunction hexWrite (buf, string, offset, length) {\n\t  offset = Number(offset) || 0\n\t  var remaining = buf.length - offset\n\t  if (!length) {\n\t    length = remaining\n\t  } else {\n\t    length = Number(length)\n\t    if (length > remaining) {\n\t      length = remaining\n\t    }\n\t  }\n\t\n\t  // must be an even number of digits\n\t  var strLen = string.length\n\t  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\t\n\t  if (length > strLen / 2) {\n\t    length = strLen / 2\n\t  }\n\t  for (var i = 0; i < length; ++i) {\n\t    var parsed = parseInt(string.substr(i * 2, 2), 16)\n\t    if (isNaN(parsed)) return i\n\t    buf[offset + i] = parsed\n\t  }\n\t  return i\n\t}\n\t\n\tfunction utf8Write (buf, string, offset, length) {\n\t  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n\t}\n\t\n\tfunction asciiWrite (buf, string, offset, length) {\n\t  return blitBuffer(asciiToBytes(string), buf, offset, length)\n\t}\n\t\n\tfunction latin1Write (buf, string, offset, length) {\n\t  return asciiWrite(buf, string, offset, length)\n\t}\n\t\n\tfunction base64Write (buf, string, offset, length) {\n\t  return blitBuffer(base64ToBytes(string), buf, offset, length)\n\t}\n\t\n\tfunction ucs2Write (buf, string, offset, length) {\n\t  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n\t}\n\t\n\tBuffer.prototype.write = function write (string, offset, length, encoding) {\n\t  // Buffer#write(string)\n\t  if (offset === undefined) {\n\t    encoding = 'utf8'\n\t    length = this.length\n\t    offset = 0\n\t  // Buffer#write(string, encoding)\n\t  } else if (length === undefined && typeof offset === 'string') {\n\t    encoding = offset\n\t    length = this.length\n\t    offset = 0\n\t  // Buffer#write(string, offset[, length][, encoding])\n\t  } else if (isFinite(offset)) {\n\t    offset = offset | 0\n\t    if (isFinite(length)) {\n\t      length = length | 0\n\t      if (encoding === undefined) encoding = 'utf8'\n\t    } else {\n\t      encoding = length\n\t      length = undefined\n\t    }\n\t  // legacy write(string, encoding, offset, length) - remove in v0.13\n\t  } else {\n\t    throw new Error(\n\t      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n\t    )\n\t  }\n\t\n\t  var remaining = this.length - offset\n\t  if (length === undefined || length > remaining) length = remaining\n\t\n\t  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n\t    throw new RangeError('Attempt to write outside buffer bounds')\n\t  }\n\t\n\t  if (!encoding) encoding = 'utf8'\n\t\n\t  var loweredCase = false\n\t  for (;;) {\n\t    switch (encoding) {\n\t      case 'hex':\n\t        return hexWrite(this, string, offset, length)\n\t\n\t      case 'utf8':\n\t      case 'utf-8':\n\t        return utf8Write(this, string, offset, length)\n\t\n\t      case 'ascii':\n\t        return asciiWrite(this, string, offset, length)\n\t\n\t      case 'latin1':\n\t      case 'binary':\n\t        return latin1Write(this, string, offset, length)\n\t\n\t      case 'base64':\n\t        // Warning: maxLength not taken into account in base64Write\n\t        return base64Write(this, string, offset, length)\n\t\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return ucs2Write(this, string, offset, length)\n\t\n\t      default:\n\t        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n\t        encoding = ('' + encoding).toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\t\n\tBuffer.prototype.toJSON = function toJSON () {\n\t  return {\n\t    type: 'Buffer',\n\t    data: Array.prototype.slice.call(this._arr || this, 0)\n\t  }\n\t}\n\t\n\tfunction base64Slice (buf, start, end) {\n\t  if (start === 0 && end === buf.length) {\n\t    return base64.fromByteArray(buf)\n\t  } else {\n\t    return base64.fromByteArray(buf.slice(start, end))\n\t  }\n\t}\n\t\n\tfunction utf8Slice (buf, start, end) {\n\t  end = Math.min(buf.length, end)\n\t  var res = []\n\t\n\t  var i = start\n\t  while (i < end) {\n\t    var firstByte = buf[i]\n\t    var codePoint = null\n\t    var bytesPerSequence = (firstByte > 0xEF) ? 4\n\t      : (firstByte > 0xDF) ? 3\n\t      : (firstByte > 0xBF) ? 2\n\t      : 1\n\t\n\t    if (i + bytesPerSequence <= end) {\n\t      var secondByte, thirdByte, fourthByte, tempCodePoint\n\t\n\t      switch (bytesPerSequence) {\n\t        case 1:\n\t          if (firstByte < 0x80) {\n\t            codePoint = firstByte\n\t          }\n\t          break\n\t        case 2:\n\t          secondByte = buf[i + 1]\n\t          if ((secondByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n\t            if (tempCodePoint > 0x7F) {\n\t              codePoint = tempCodePoint\n\t            }\n\t          }\n\t          break\n\t        case 3:\n\t          secondByte = buf[i + 1]\n\t          thirdByte = buf[i + 2]\n\t          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n\t            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n\t              codePoint = tempCodePoint\n\t            }\n\t          }\n\t          break\n\t        case 4:\n\t          secondByte = buf[i + 1]\n\t          thirdByte = buf[i + 2]\n\t          fourthByte = buf[i + 3]\n\t          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n\t            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n\t              codePoint = tempCodePoint\n\t            }\n\t          }\n\t      }\n\t    }\n\t\n\t    if (codePoint === null) {\n\t      // we did not generate a valid codePoint so insert a\n\t      // replacement char (U+FFFD) and advance only 1 byte\n\t      codePoint = 0xFFFD\n\t      bytesPerSequence = 1\n\t    } else if (codePoint > 0xFFFF) {\n\t      // encode to utf16 (surrogate pair dance)\n\t      codePoint -= 0x10000\n\t      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n\t      codePoint = 0xDC00 | codePoint & 0x3FF\n\t    }\n\t\n\t    res.push(codePoint)\n\t    i += bytesPerSequence\n\t  }\n\t\n\t  return decodeCodePointsArray(res)\n\t}\n\t\n\t// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n\t// the lowest limit is Chrome, with 0x10000 args.\n\t// We go 1 magnitude less, for safety\n\tvar MAX_ARGUMENTS_LENGTH = 0x1000\n\t\n\tfunction decodeCodePointsArray (codePoints) {\n\t  var len = codePoints.length\n\t  if (len <= MAX_ARGUMENTS_LENGTH) {\n\t    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n\t  }\n\t\n\t  // Decode in chunks to avoid \"call stack size exceeded\".\n\t  var res = ''\n\t  var i = 0\n\t  while (i < len) {\n\t    res += String.fromCharCode.apply(\n\t      String,\n\t      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n\t    )\n\t  }\n\t  return res\n\t}\n\t\n\tfunction asciiSlice (buf, start, end) {\n\t  var ret = ''\n\t  end = Math.min(buf.length, end)\n\t\n\t  for (var i = start; i < end; ++i) {\n\t    ret += String.fromCharCode(buf[i] & 0x7F)\n\t  }\n\t  return ret\n\t}\n\t\n\tfunction latin1Slice (buf, start, end) {\n\t  var ret = ''\n\t  end = Math.min(buf.length, end)\n\t\n\t  for (var i = start; i < end; ++i) {\n\t    ret += String.fromCharCode(buf[i])\n\t  }\n\t  return ret\n\t}\n\t\n\tfunction hexSlice (buf, start, end) {\n\t  var len = buf.length\n\t\n\t  if (!start || start < 0) start = 0\n\t  if (!end || end < 0 || end > len) end = len\n\t\n\t  var out = ''\n\t  for (var i = start; i < end; ++i) {\n\t    out += toHex(buf[i])\n\t  }\n\t  return out\n\t}\n\t\n\tfunction utf16leSlice (buf, start, end) {\n\t  var bytes = buf.slice(start, end)\n\t  var res = ''\n\t  for (var i = 0; i < bytes.length; i += 2) {\n\t    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n\t  }\n\t  return res\n\t}\n\t\n\tBuffer.prototype.slice = function slice (start, end) {\n\t  var len = this.length\n\t  start = ~~start\n\t  end = end === undefined ? len : ~~end\n\t\n\t  if (start < 0) {\n\t    start += len\n\t    if (start < 0) start = 0\n\t  } else if (start > len) {\n\t    start = len\n\t  }\n\t\n\t  if (end < 0) {\n\t    end += len\n\t    if (end < 0) end = 0\n\t  } else if (end > len) {\n\t    end = len\n\t  }\n\t\n\t  if (end < start) end = start\n\t\n\t  var newBuf\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    newBuf = this.subarray(start, end)\n\t    newBuf.__proto__ = Buffer.prototype\n\t  } else {\n\t    var sliceLen = end - start\n\t    newBuf = new Buffer(sliceLen, undefined)\n\t    for (var i = 0; i < sliceLen; ++i) {\n\t      newBuf[i] = this[i + start]\n\t    }\n\t  }\n\t\n\t  return newBuf\n\t}\n\t\n\t/*\n\t * Need to make sure that buffer isn't trying to write out of bounds.\n\t */\n\tfunction checkOffset (offset, ext, length) {\n\t  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n\t  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n\t}\n\t\n\tBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\t\n\t  var val = this[offset]\n\t  var mul = 1\n\t  var i = 0\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    val += this[offset + i] * mul\n\t  }\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) {\n\t    checkOffset(offset, byteLength, this.length)\n\t  }\n\t\n\t  var val = this[offset + --byteLength]\n\t  var mul = 1\n\t  while (byteLength > 0 && (mul *= 0x100)) {\n\t    val += this[offset + --byteLength] * mul\n\t  }\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 1, this.length)\n\t  return this[offset]\n\t}\n\t\n\tBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  return this[offset] | (this[offset + 1] << 8)\n\t}\n\t\n\tBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  return (this[offset] << 8) | this[offset + 1]\n\t}\n\t\n\tBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return ((this[offset]) |\n\t      (this[offset + 1] << 8) |\n\t      (this[offset + 2] << 16)) +\n\t      (this[offset + 3] * 0x1000000)\n\t}\n\t\n\tBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return (this[offset] * 0x1000000) +\n\t    ((this[offset + 1] << 16) |\n\t    (this[offset + 2] << 8) |\n\t    this[offset + 3])\n\t}\n\t\n\tBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\t\n\t  var val = this[offset]\n\t  var mul = 1\n\t  var i = 0\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    val += this[offset + i] * mul\n\t  }\n\t  mul *= 0x80\n\t\n\t  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\t\n\t  var i = byteLength\n\t  var mul = 1\n\t  var val = this[offset + --i]\n\t  while (i > 0 && (mul *= 0x100)) {\n\t    val += this[offset + --i] * mul\n\t  }\n\t  mul *= 0x80\n\t\n\t  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 1, this.length)\n\t  if (!(this[offset] & 0x80)) return (this[offset])\n\t  return ((0xff - this[offset] + 1) * -1)\n\t}\n\t\n\tBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  var val = this[offset] | (this[offset + 1] << 8)\n\t  return (val & 0x8000) ? val | 0xFFFF0000 : val\n\t}\n\t\n\tBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  var val = this[offset + 1] | (this[offset] << 8)\n\t  return (val & 0x8000) ? val | 0xFFFF0000 : val\n\t}\n\t\n\tBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return (this[offset]) |\n\t    (this[offset + 1] << 8) |\n\t    (this[offset + 2] << 16) |\n\t    (this[offset + 3] << 24)\n\t}\n\t\n\tBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return (this[offset] << 24) |\n\t    (this[offset + 1] << 16) |\n\t    (this[offset + 2] << 8) |\n\t    (this[offset + 3])\n\t}\n\t\n\tBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t  return ieee754.read(this, offset, true, 23, 4)\n\t}\n\t\n\tBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t  return ieee754.read(this, offset, false, 23, 4)\n\t}\n\t\n\tBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 8, this.length)\n\t  return ieee754.read(this, offset, true, 52, 8)\n\t}\n\t\n\tBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 8, this.length)\n\t  return ieee754.read(this, offset, false, 52, 8)\n\t}\n\t\n\tfunction checkInt (buf, value, offset, ext, max, min) {\n\t  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n\t  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n\t  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n\t}\n\t\n\tBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) {\n\t    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n\t    checkInt(this, value, offset, byteLength, maxBytes, 0)\n\t  }\n\t\n\t  var mul = 1\n\t  var i = 0\n\t  this[offset] = value & 0xFF\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    this[offset + i] = (value / mul) & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) {\n\t    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n\t    checkInt(this, value, offset, byteLength, maxBytes, 0)\n\t  }\n\t\n\t  var i = byteLength - 1\n\t  var mul = 1\n\t  this[offset + i] = value & 0xFF\n\t  while (--i >= 0 && (mul *= 0x100)) {\n\t    this[offset + i] = (value / mul) & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n\t  this[offset] = (value & 0xff)\n\t  return offset + 1\n\t}\n\t\n\tfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n\t  if (value < 0) value = 0xffff + value + 1\n\t  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n\t    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n\t      (littleEndian ? i : 1 - i) * 8\n\t  }\n\t}\n\t\n\tBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value & 0xff)\n\t    this[offset + 1] = (value >>> 8)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, true)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 8)\n\t    this[offset + 1] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, false)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n\t  if (value < 0) value = 0xffffffff + value + 1\n\t  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n\t    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n\t  }\n\t}\n\t\n\tBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset + 3] = (value >>> 24)\n\t    this[offset + 2] = (value >>> 16)\n\t    this[offset + 1] = (value >>> 8)\n\t    this[offset] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, true)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 24)\n\t    this[offset + 1] = (value >>> 16)\n\t    this[offset + 2] = (value >>> 8)\n\t    this[offset + 3] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, false)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) {\n\t    var limit = Math.pow(2, 8 * byteLength - 1)\n\t\n\t    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n\t  }\n\t\n\t  var i = 0\n\t  var mul = 1\n\t  var sub = 0\n\t  this[offset] = value & 0xFF\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n\t      sub = 1\n\t    }\n\t    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) {\n\t    var limit = Math.pow(2, 8 * byteLength - 1)\n\t\n\t    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n\t  }\n\t\n\t  var i = byteLength - 1\n\t  var mul = 1\n\t  var sub = 0\n\t  this[offset + i] = value & 0xFF\n\t  while (--i >= 0 && (mul *= 0x100)) {\n\t    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n\t      sub = 1\n\t    }\n\t    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n\t  if (value < 0) value = 0xff + value + 1\n\t  this[offset] = (value & 0xff)\n\t  return offset + 1\n\t}\n\t\n\tBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value & 0xff)\n\t    this[offset + 1] = (value >>> 8)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, true)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 8)\n\t    this[offset + 1] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, false)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value & 0xff)\n\t    this[offset + 1] = (value >>> 8)\n\t    this[offset + 2] = (value >>> 16)\n\t    this[offset + 3] = (value >>> 24)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, true)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n\t  if (value < 0) value = 0xffffffff + value + 1\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 24)\n\t    this[offset + 1] = (value >>> 16)\n\t    this[offset + 2] = (value >>> 8)\n\t    this[offset + 3] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, false)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n\t  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n\t  if (offset < 0) throw new RangeError('Index out of range')\n\t}\n\t\n\tfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n\t  if (!noAssert) {\n\t    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n\t  }\n\t  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n\t  return writeFloat(this, value, offset, true, noAssert)\n\t}\n\t\n\tBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n\t  return writeFloat(this, value, offset, false, noAssert)\n\t}\n\t\n\tfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n\t  if (!noAssert) {\n\t    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n\t  }\n\t  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n\t  return offset + 8\n\t}\n\t\n\tBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n\t  return writeDouble(this, value, offset, true, noAssert)\n\t}\n\t\n\tBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n\t  return writeDouble(this, value, offset, false, noAssert)\n\t}\n\t\n\t// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n\tBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n\t  if (!start) start = 0\n\t  if (!end && end !== 0) end = this.length\n\t  if (targetStart >= target.length) targetStart = target.length\n\t  if (!targetStart) targetStart = 0\n\t  if (end > 0 && end < start) end = start\n\t\n\t  // Copy 0 bytes; we're done\n\t  if (end === start) return 0\n\t  if (target.length === 0 || this.length === 0) return 0\n\t\n\t  // Fatal error conditions\n\t  if (targetStart < 0) {\n\t    throw new RangeError('targetStart out of bounds')\n\t  }\n\t  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n\t  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\t\n\t  // Are we oob?\n\t  if (end > this.length) end = this.length\n\t  if (target.length - targetStart < end - start) {\n\t    end = target.length - targetStart + start\n\t  }\n\t\n\t  var len = end - start\n\t  var i\n\t\n\t  if (this === target && start < targetStart && targetStart < end) {\n\t    // descending copy from end\n\t    for (i = len - 1; i >= 0; --i) {\n\t      target[i + targetStart] = this[i + start]\n\t    }\n\t  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // ascending copy from start\n\t    for (i = 0; i < len; ++i) {\n\t      target[i + targetStart] = this[i + start]\n\t    }\n\t  } else {\n\t    Uint8Array.prototype.set.call(\n\t      target,\n\t      this.subarray(start, start + len),\n\t      targetStart\n\t    )\n\t  }\n\t\n\t  return len\n\t}\n\t\n\t// Usage:\n\t//    buffer.fill(number[, offset[, end]])\n\t//    buffer.fill(buffer[, offset[, end]])\n\t//    buffer.fill(string[, offset[, end]][, encoding])\n\tBuffer.prototype.fill = function fill (val, start, end, encoding) {\n\t  // Handle string cases:\n\t  if (typeof val === 'string') {\n\t    if (typeof start === 'string') {\n\t      encoding = start\n\t      start = 0\n\t      end = this.length\n\t    } else if (typeof end === 'string') {\n\t      encoding = end\n\t      end = this.length\n\t    }\n\t    if (val.length === 1) {\n\t      var code = val.charCodeAt(0)\n\t      if (code < 256) {\n\t        val = code\n\t      }\n\t    }\n\t    if (encoding !== undefined && typeof encoding !== 'string') {\n\t      throw new TypeError('encoding must be a string')\n\t    }\n\t    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n\t      throw new TypeError('Unknown encoding: ' + encoding)\n\t    }\n\t  } else if (typeof val === 'number') {\n\t    val = val & 255\n\t  }\n\t\n\t  // Invalid ranges are not set to a default, so can range check early.\n\t  if (start < 0 || this.length < start || this.length < end) {\n\t    throw new RangeError('Out of range index')\n\t  }\n\t\n\t  if (end <= start) {\n\t    return this\n\t  }\n\t\n\t  start = start >>> 0\n\t  end = end === undefined ? this.length : end >>> 0\n\t\n\t  if (!val) val = 0\n\t\n\t  var i\n\t  if (typeof val === 'number') {\n\t    for (i = start; i < end; ++i) {\n\t      this[i] = val\n\t    }\n\t  } else {\n\t    var bytes = Buffer.isBuffer(val)\n\t      ? val\n\t      : utf8ToBytes(new Buffer(val, encoding).toString())\n\t    var len = bytes.length\n\t    for (i = 0; i < end - start; ++i) {\n\t      this[i + start] = bytes[i % len]\n\t    }\n\t  }\n\t\n\t  return this\n\t}\n\t\n\t// HELPER FUNCTIONS\n\t// ================\n\t\n\tvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\t\n\tfunction base64clean (str) {\n\t  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n\t  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n\t  // Node converts strings with length < 2 to ''\n\t  if (str.length < 2) return ''\n\t  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n\t  while (str.length % 4 !== 0) {\n\t    str = str + '='\n\t  }\n\t  return str\n\t}\n\t\n\tfunction stringtrim (str) {\n\t  if (str.trim) return str.trim()\n\t  return str.replace(/^\\s+|\\s+$/g, '')\n\t}\n\t\n\tfunction toHex (n) {\n\t  if (n < 16) return '0' + n.toString(16)\n\t  return n.toString(16)\n\t}\n\t\n\tfunction utf8ToBytes (string, units) {\n\t  units = units || Infinity\n\t  var codePoint\n\t  var length = string.length\n\t  var leadSurrogate = null\n\t  var bytes = []\n\t\n\t  for (var i = 0; i < length; ++i) {\n\t    codePoint = string.charCodeAt(i)\n\t\n\t    // is surrogate component\n\t    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n\t      // last char was a lead\n\t      if (!leadSurrogate) {\n\t        // no lead yet\n\t        if (codePoint > 0xDBFF) {\n\t          // unexpected trail\n\t          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t          continue\n\t        } else if (i + 1 === length) {\n\t          // unpaired lead\n\t          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t          continue\n\t        }\n\t\n\t        // valid lead\n\t        leadSurrogate = codePoint\n\t\n\t        continue\n\t      }\n\t\n\t      // 2 leads in a row\n\t      if (codePoint < 0xDC00) {\n\t        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t        leadSurrogate = codePoint\n\t        continue\n\t      }\n\t\n\t      // valid surrogate pair\n\t      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n\t    } else if (leadSurrogate) {\n\t      // valid bmp char, but last char was a lead\n\t      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t    }\n\t\n\t    leadSurrogate = null\n\t\n\t    // encode utf8\n\t    if (codePoint < 0x80) {\n\t      if ((units -= 1) < 0) break\n\t      bytes.push(codePoint)\n\t    } else if (codePoint < 0x800) {\n\t      if ((units -= 2) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0x6 | 0xC0,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else if (codePoint < 0x10000) {\n\t      if ((units -= 3) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0xC | 0xE0,\n\t        codePoint >> 0x6 & 0x3F | 0x80,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else if (codePoint < 0x110000) {\n\t      if ((units -= 4) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0x12 | 0xF0,\n\t        codePoint >> 0xC & 0x3F | 0x80,\n\t        codePoint >> 0x6 & 0x3F | 0x80,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else {\n\t      throw new Error('Invalid code point')\n\t    }\n\t  }\n\t\n\t  return bytes\n\t}\n\t\n\tfunction asciiToBytes (str) {\n\t  var byteArray = []\n\t  for (var i = 0; i < str.length; ++i) {\n\t    // Node's code seems to be doing this and not & 0x7F..\n\t    byteArray.push(str.charCodeAt(i) & 0xFF)\n\t  }\n\t  return byteArray\n\t}\n\t\n\tfunction utf16leToBytes (str, units) {\n\t  var c, hi, lo\n\t  var byteArray = []\n\t  for (var i = 0; i < str.length; ++i) {\n\t    if ((units -= 2) < 0) break\n\t\n\t    c = str.charCodeAt(i)\n\t    hi = c >> 8\n\t    lo = c % 256\n\t    byteArray.push(lo)\n\t    byteArray.push(hi)\n\t  }\n\t\n\t  return byteArray\n\t}\n\t\n\tfunction base64ToBytes (str) {\n\t  return base64.toByteArray(base64clean(str))\n\t}\n\t\n\tfunction blitBuffer (src, dst, offset, length) {\n\t  for (var i = 0; i < length; ++i) {\n\t    if ((i + offset >= dst.length) || (i >= src.length)) break\n\t    dst[i + offset] = src[i]\n\t  }\n\t  return i\n\t}\n\t\n\tfunction isnan (val) {\n\t  return val !== val // eslint-disable-line no-self-compare\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 48 */\n/***/ function(module, exports) {\n\n\t'use strict'\n\t\n\texports.byteLength = byteLength\n\texports.toByteArray = toByteArray\n\texports.fromByteArray = fromByteArray\n\t\n\tvar lookup = []\n\tvar revLookup = []\n\tvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\t\n\tvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n\tfor (var i = 0, len = code.length; i < len; ++i) {\n\t  lookup[i] = code[i]\n\t  revLookup[code.charCodeAt(i)] = i\n\t}\n\t\n\trevLookup['-'.charCodeAt(0)] = 62\n\trevLookup['_'.charCodeAt(0)] = 63\n\t\n\tfunction placeHoldersCount (b64) {\n\t  var len = b64.length\n\t  if (len % 4 > 0) {\n\t    throw new Error('Invalid string. Length must be a multiple of 4')\n\t  }\n\t\n\t  // the number of equal signs (place holders)\n\t  // if there are two placeholders, than the two characters before it\n\t  // represent one byte\n\t  // if there is only one, then the three characters before it represent 2 bytes\n\t  // this is just a cheap hack to not do indexOf twice\n\t  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n\t}\n\t\n\tfunction byteLength (b64) {\n\t  // base64 is 4/3 + up to two characters of the original data\n\t  return b64.length * 3 / 4 - placeHoldersCount(b64)\n\t}\n\t\n\tfunction toByteArray (b64) {\n\t  var i, j, l, tmp, placeHolders, arr\n\t  var len = b64.length\n\t  placeHolders = placeHoldersCount(b64)\n\t\n\t  arr = new Arr(len * 3 / 4 - placeHolders)\n\t\n\t  // if there are placeholders, only get up to the last complete 4 chars\n\t  l = placeHolders > 0 ? len - 4 : len\n\t\n\t  var L = 0\n\t\n\t  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n\t    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n\t    arr[L++] = (tmp >> 16) & 0xFF\n\t    arr[L++] = (tmp >> 8) & 0xFF\n\t    arr[L++] = tmp & 0xFF\n\t  }\n\t\n\t  if (placeHolders === 2) {\n\t    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n\t    arr[L++] = tmp & 0xFF\n\t  } else if (placeHolders === 1) {\n\t    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n\t    arr[L++] = (tmp >> 8) & 0xFF\n\t    arr[L++] = tmp & 0xFF\n\t  }\n\t\n\t  return arr\n\t}\n\t\n\tfunction tripletToBase64 (num) {\n\t  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n\t}\n\t\n\tfunction encodeChunk (uint8, start, end) {\n\t  var tmp\n\t  var output = []\n\t  for (var i = start; i < end; i += 3) {\n\t    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n\t    output.push(tripletToBase64(tmp))\n\t  }\n\t  return output.join('')\n\t}\n\t\n\tfunction fromByteArray (uint8) {\n\t  var tmp\n\t  var len = uint8.length\n\t  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n\t  var output = ''\n\t  var parts = []\n\t  var maxChunkLength = 16383 // must be multiple of 3\n\t\n\t  // go through the array every three bytes, we'll deal with trailing stuff later\n\t  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n\t    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n\t  }\n\t\n\t  // pad the end with zeros, but make sure to not forget the extra bytes\n\t  if (extraBytes === 1) {\n\t    tmp = uint8[len - 1]\n\t    output += lookup[tmp >> 2]\n\t    output += lookup[(tmp << 4) & 0x3F]\n\t    output += '=='\n\t  } else if (extraBytes === 2) {\n\t    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n\t    output += lookup[tmp >> 10]\n\t    output += lookup[(tmp >> 4) & 0x3F]\n\t    output += lookup[(tmp << 2) & 0x3F]\n\t    output += '='\n\t  }\n\t\n\t  parts.push(output)\n\t\n\t  return parts.join('')\n\t}\n\n\n/***/ },\n/* 49 */\n/***/ function(module, exports) {\n\n\texports.read = function (buffer, offset, isLE, mLen, nBytes) {\n\t  var e, m\n\t  var eLen = nBytes * 8 - mLen - 1\n\t  var eMax = (1 << eLen) - 1\n\t  var eBias = eMax >> 1\n\t  var nBits = -7\n\t  var i = isLE ? (nBytes - 1) : 0\n\t  var d = isLE ? -1 : 1\n\t  var s = buffer[offset + i]\n\t\n\t  i += d\n\t\n\t  e = s & ((1 << (-nBits)) - 1)\n\t  s >>= (-nBits)\n\t  nBits += eLen\n\t  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\t\n\t  m = e & ((1 << (-nBits)) - 1)\n\t  e >>= (-nBits)\n\t  nBits += mLen\n\t  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\t\n\t  if (e === 0) {\n\t    e = 1 - eBias\n\t  } else if (e === eMax) {\n\t    return m ? NaN : ((s ? -1 : 1) * Infinity)\n\t  } else {\n\t    m = m + Math.pow(2, mLen)\n\t    e = e - eBias\n\t  }\n\t  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n\t}\n\t\n\texports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n\t  var e, m, c\n\t  var eLen = nBytes * 8 - mLen - 1\n\t  var eMax = (1 << eLen) - 1\n\t  var eBias = eMax >> 1\n\t  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n\t  var i = isLE ? 0 : (nBytes - 1)\n\t  var d = isLE ? 1 : -1\n\t  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\t\n\t  value = Math.abs(value)\n\t\n\t  if (isNaN(value) || value === Infinity) {\n\t    m = isNaN(value) ? 1 : 0\n\t    e = eMax\n\t  } else {\n\t    e = Math.floor(Math.log(value) / Math.LN2)\n\t    if (value * (c = Math.pow(2, -e)) < 1) {\n\t      e--\n\t      c *= 2\n\t    }\n\t    if (e + eBias >= 1) {\n\t      value += rt / c\n\t    } else {\n\t      value += rt * Math.pow(2, 1 - eBias)\n\t    }\n\t    if (value * c >= 2) {\n\t      e++\n\t      c /= 2\n\t    }\n\t\n\t    if (e + eBias >= eMax) {\n\t      m = 0\n\t      e = eMax\n\t    } else if (e + eBias >= 1) {\n\t      m = (value * c - 1) * Math.pow(2, mLen)\n\t      e = e + eBias\n\t    } else {\n\t      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n\t      e = 0\n\t    }\n\t  }\n\t\n\t  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\t\n\t  e = (e << mLen) | m\n\t  eLen += mLen\n\t  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\t\n\t  buffer[offset + i - d] |= s * 128\n\t}\n\n\n/***/ },\n/* 50 */\n46,\n/* 51 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\tvar buffer = __webpack_require__(47);\n\tvar Buffer = buffer.Buffer;\n\tvar SlowBuffer = buffer.SlowBuffer;\n\tvar MAX_LEN = buffer.kMaxLength || 2147483647;\n\texports.alloc = function alloc(size, fill, encoding) {\n\t  if (typeof Buffer.alloc === 'function') {\n\t    return Buffer.alloc(size, fill, encoding);\n\t  }\n\t  if (typeof encoding === 'number') {\n\t    throw new TypeError('encoding must not be number');\n\t  }\n\t  if (typeof size !== 'number') {\n\t    throw new TypeError('size must be a number');\n\t  }\n\t  if (size > MAX_LEN) {\n\t    throw new RangeError('size is too large');\n\t  }\n\t  var enc = encoding;\n\t  var _fill = fill;\n\t  if (_fill === undefined) {\n\t    enc = undefined;\n\t    _fill = 0;\n\t  }\n\t  var buf = new Buffer(size);\n\t  if (typeof _fill === 'string') {\n\t    var fillBuf = new Buffer(_fill, enc);\n\t    var flen = fillBuf.length;\n\t    var i = -1;\n\t    while (++i < size) {\n\t      buf[i] = fillBuf[i % flen];\n\t    }\n\t  } else {\n\t    buf.fill(_fill);\n\t  }\n\t  return buf;\n\t}\n\texports.allocUnsafe = function allocUnsafe(size) {\n\t  if (typeof Buffer.allocUnsafe === 'function') {\n\t    return Buffer.allocUnsafe(size);\n\t  }\n\t  if (typeof size !== 'number') {\n\t    throw new TypeError('size must be a number');\n\t  }\n\t  if (size > MAX_LEN) {\n\t    throw new RangeError('size is too large');\n\t  }\n\t  return new Buffer(size);\n\t}\n\texports.from = function from(value, encodingOrOffset, length) {\n\t  if (typeof Buffer.from === 'function' && (!global.Uint8Array || Uint8Array.from !== Buffer.from)) {\n\t    return Buffer.from(value, encodingOrOffset, length);\n\t  }\n\t  if (typeof value === 'number') {\n\t    throw new TypeError('\"value\" argument must not be a number');\n\t  }\n\t  if (typeof value === 'string') {\n\t    return new Buffer(value, encodingOrOffset);\n\t  }\n\t  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n\t    var offset = encodingOrOffset;\n\t    if (arguments.length === 1) {\n\t      return new Buffer(value);\n\t    }\n\t    if (typeof offset === 'undefined') {\n\t      offset = 0;\n\t    }\n\t    var len = length;\n\t    if (typeof len === 'undefined') {\n\t      len = value.byteLength - offset;\n\t    }\n\t    if (offset >= value.byteLength) {\n\t      throw new RangeError('\\'offset\\' is out of bounds');\n\t    }\n\t    if (len > value.byteLength - offset) {\n\t      throw new RangeError('\\'length\\' is out of bounds');\n\t    }\n\t    return new Buffer(value.slice(offset, offset + len));\n\t  }\n\t  if (Buffer.isBuffer(value)) {\n\t    var out = new Buffer(value.length);\n\t    value.copy(out, 0, 0, value.length);\n\t    return out;\n\t  }\n\t  if (value) {\n\t    if (Array.isArray(value) || (typeof ArrayBuffer !== 'undefined' && value.buffer instanceof ArrayBuffer) || 'length' in value) {\n\t      return new Buffer(value);\n\t    }\n\t    if (value.type === 'Buffer' && Array.isArray(value.data)) {\n\t      return new Buffer(value.data);\n\t    }\n\t  }\n\t\n\t  throw new TypeError('First argument must be a string, Buffer, ' + 'ArrayBuffer, Array, or array-like object.');\n\t}\n\texports.allocUnsafeSlow = function allocUnsafeSlow(size) {\n\t  if (typeof Buffer.allocUnsafeSlow === 'function') {\n\t    return Buffer.allocUnsafeSlow(size);\n\t  }\n\t  if (typeof size !== 'number') {\n\t    throw new TypeError('size must be a number');\n\t  }\n\t  if (size >= MAX_LEN) {\n\t    throw new RangeError('size is too large');\n\t  }\n\t  return new SlowBuffer(size);\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 52 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer) {// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t// NOTE: These type checking functions intentionally don't use `instanceof`\n\t// because it is fragile and can be easily faked with `Object.create()`.\n\t\n\tfunction isArray(arg) {\n\t  if (Array.isArray) {\n\t    return Array.isArray(arg);\n\t  }\n\t  return objectToString(arg) === '[object Array]';\n\t}\n\texports.isArray = isArray;\n\t\n\tfunction isBoolean(arg) {\n\t  return typeof arg === 'boolean';\n\t}\n\texports.isBoolean = isBoolean;\n\t\n\tfunction isNull(arg) {\n\t  return arg === null;\n\t}\n\texports.isNull = isNull;\n\t\n\tfunction isNullOrUndefined(arg) {\n\t  return arg == null;\n\t}\n\texports.isNullOrUndefined = isNullOrUndefined;\n\t\n\tfunction isNumber(arg) {\n\t  return typeof arg === 'number';\n\t}\n\texports.isNumber = isNumber;\n\t\n\tfunction isString(arg) {\n\t  return typeof arg === 'string';\n\t}\n\texports.isString = isString;\n\t\n\tfunction isSymbol(arg) {\n\t  return typeof arg === 'symbol';\n\t}\n\texports.isSymbol = isSymbol;\n\t\n\tfunction isUndefined(arg) {\n\t  return arg === void 0;\n\t}\n\texports.isUndefined = isUndefined;\n\t\n\tfunction isRegExp(re) {\n\t  return objectToString(re) === '[object RegExp]';\n\t}\n\texports.isRegExp = isRegExp;\n\t\n\tfunction isObject(arg) {\n\t  return typeof arg === 'object' && arg !== null;\n\t}\n\texports.isObject = isObject;\n\t\n\tfunction isDate(d) {\n\t  return objectToString(d) === '[object Date]';\n\t}\n\texports.isDate = isDate;\n\t\n\tfunction isError(e) {\n\t  return (objectToString(e) === '[object Error]' || e instanceof Error);\n\t}\n\texports.isError = isError;\n\t\n\tfunction isFunction(arg) {\n\t  return typeof arg === 'function';\n\t}\n\texports.isFunction = isFunction;\n\t\n\tfunction isPrimitive(arg) {\n\t  return arg === null ||\n\t         typeof arg === 'boolean' ||\n\t         typeof arg === 'number' ||\n\t         typeof arg === 'string' ||\n\t         typeof arg === 'symbol' ||  // ES6 symbol\n\t         typeof arg === 'undefined';\n\t}\n\texports.isPrimitive = isPrimitive;\n\t\n\texports.isBuffer = Buffer.isBuffer;\n\t\n\tfunction objectToString(o) {\n\t  return Object.prototype.toString.call(o);\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(47).Buffer))\n\n/***/ },\n/* 53 */\n29,\n/* 54 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar Buffer = __webpack_require__(47).Buffer;\n\t/*<replacement>*/\n\tvar bufferShim = __webpack_require__(51);\n\t/*</replacement>*/\n\t\n\tmodule.exports = BufferList;\n\t\n\tfunction BufferList() {\n\t  this.head = null;\n\t  this.tail = null;\n\t  this.length = 0;\n\t}\n\t\n\tBufferList.prototype.push = function (v) {\n\t  var entry = { data: v, next: null };\n\t  if (this.length > 0) this.tail.next = entry;else this.head = entry;\n\t  this.tail = entry;\n\t  ++this.length;\n\t};\n\t\n\tBufferList.prototype.unshift = function (v) {\n\t  var entry = { data: v, next: this.head };\n\t  if (this.length === 0) this.tail = entry;\n\t  this.head = entry;\n\t  ++this.length;\n\t};\n\t\n\tBufferList.prototype.shift = function () {\n\t  if (this.length === 0) return;\n\t  var ret = this.head.data;\n\t  if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n\t  --this.length;\n\t  return ret;\n\t};\n\t\n\tBufferList.prototype.clear = function () {\n\t  this.head = this.tail = null;\n\t  this.length = 0;\n\t};\n\t\n\tBufferList.prototype.join = function (s) {\n\t  if (this.length === 0) return '';\n\t  var p = this.head;\n\t  var ret = '' + p.data;\n\t  while (p = p.next) {\n\t    ret += s + p.data;\n\t  }return ret;\n\t};\n\t\n\tBufferList.prototype.concat = function (n) {\n\t  if (this.length === 0) return bufferShim.alloc(0);\n\t  if (this.length === 1) return this.head.data;\n\t  var ret = bufferShim.allocUnsafe(n >>> 0);\n\t  var p = this.head;\n\t  var i = 0;\n\t  while (p) {\n\t    p.data.copy(ret, i);\n\t    i += p.data.length;\n\t    p = p.next;\n\t  }\n\t  return ret;\n\t};\n\n/***/ },\n/* 55 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// a duplex stream is just a stream that is both readable and writable.\n\t// Since JS doesn't have multiple prototypal inheritance, this class\n\t// prototypally inherits from Readable, and then parasitically from\n\t// Writable.\n\t\n\t'use strict';\n\t\n\t/*<replacement>*/\n\t\n\tvar objectKeys = Object.keys || function (obj) {\n\t  var keys = [];\n\t  for (var key in obj) {\n\t    keys.push(key);\n\t  }return keys;\n\t};\n\t/*</replacement>*/\n\t\n\tmodule.exports = Duplex;\n\t\n\t/*<replacement>*/\n\tvar processNextTick = __webpack_require__(45);\n\t/*</replacement>*/\n\t\n\t/*<replacement>*/\n\tvar util = __webpack_require__(52);\n\tutil.inherits = __webpack_require__(42);\n\t/*</replacement>*/\n\t\n\tvar Readable = __webpack_require__(44);\n\tvar Writable = __webpack_require__(56);\n\t\n\tutil.inherits(Duplex, Readable);\n\t\n\tvar keys = objectKeys(Writable.prototype);\n\tfor (var v = 0; v < keys.length; v++) {\n\t  var method = keys[v];\n\t  if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n\t}\n\t\n\tfunction Duplex(options) {\n\t  if (!(this instanceof Duplex)) return new Duplex(options);\n\t\n\t  Readable.call(this, options);\n\t  Writable.call(this, options);\n\t\n\t  if (options && options.readable === false) this.readable = false;\n\t\n\t  if (options && options.writable === false) this.writable = false;\n\t\n\t  this.allowHalfOpen = true;\n\t  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\t\n\t  this.once('end', onend);\n\t}\n\t\n\t// the no-half-open enforcer\n\tfunction onend() {\n\t  // if we allow half-open state, or if the writable side ended,\n\t  // then we're ok.\n\t  if (this.allowHalfOpen || this._writableState.ended) return;\n\t\n\t  // no more data can be written.\n\t  // But allow more writes to happen in this tick.\n\t  processNextTick(onEndNT, this);\n\t}\n\t\n\tfunction onEndNT(self) {\n\t  self.end();\n\t}\n\t\n\tfunction forEach(xs, f) {\n\t  for (var i = 0, l = xs.length; i < l; i++) {\n\t    f(xs[i], i);\n\t  }\n\t}\n\n/***/ },\n/* 56 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process, setImmediate) {// A bit simpler than readable streams.\n\t// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n\t// the drain event emission and buffering.\n\t\n\t'use strict';\n\t\n\tmodule.exports = Writable;\n\t\n\t/*<replacement>*/\n\tvar processNextTick = __webpack_require__(45);\n\t/*</replacement>*/\n\t\n\t/*<replacement>*/\n\tvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : processNextTick;\n\t/*</replacement>*/\n\t\n\t/*<replacement>*/\n\tvar Duplex;\n\t/*</replacement>*/\n\t\n\tWritable.WritableState = WritableState;\n\t\n\t/*<replacement>*/\n\tvar util = __webpack_require__(52);\n\tutil.inherits = __webpack_require__(42);\n\t/*</replacement>*/\n\t\n\t/*<replacement>*/\n\tvar internalUtil = {\n\t  deprecate: __webpack_require__(57)\n\t};\n\t/*</replacement>*/\n\t\n\t/*<replacement>*/\n\tvar Stream;\n\t(function () {\n\t  try {\n\t    Stream = __webpack_require__(40);\n\t  } catch (_) {} finally {\n\t    if (!Stream) Stream = __webpack_require__(41).EventEmitter;\n\t  }\n\t})();\n\t/*</replacement>*/\n\t\n\tvar Buffer = __webpack_require__(47).Buffer;\n\t/*<replacement>*/\n\tvar bufferShim = __webpack_require__(51);\n\t/*</replacement>*/\n\t\n\tutil.inherits(Writable, Stream);\n\t\n\tfunction nop() {}\n\t\n\tfunction WriteReq(chunk, encoding, cb) {\n\t  this.chunk = chunk;\n\t  this.encoding = encoding;\n\t  this.callback = cb;\n\t  this.next = null;\n\t}\n\t\n\tfunction WritableState(options, stream) {\n\t  Duplex = Duplex || __webpack_require__(55);\n\t\n\t  options = options || {};\n\t\n\t  // object stream flag to indicate whether or not this stream\n\t  // contains buffers or objects.\n\t  this.objectMode = !!options.objectMode;\n\t\n\t  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\t\n\t  // the point at which write() starts returning false\n\t  // Note: 0 is a valid value, means that we always return false if\n\t  // the entire buffer is not flushed immediately on write()\n\t  var hwm = options.highWaterMark;\n\t  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\t  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;\n\t\n\t  // cast to ints.\n\t  this.highWaterMark = ~ ~this.highWaterMark;\n\t\n\t  // drain event flag.\n\t  this.needDrain = false;\n\t  // at the start of calling end()\n\t  this.ending = false;\n\t  // when end() has been called, and returned\n\t  this.ended = false;\n\t  // when 'finish' is emitted\n\t  this.finished = false;\n\t\n\t  // should we decode strings into buffers before passing to _write?\n\t  // this is here so that some node-core streams can optimize string\n\t  // handling at a lower level.\n\t  var noDecode = options.decodeStrings === false;\n\t  this.decodeStrings = !noDecode;\n\t\n\t  // Crypto is kind of old and crusty.  Historically, its default string\n\t  // encoding is 'binary' so we have to make this configurable.\n\t  // Everything else in the universe uses 'utf8', though.\n\t  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\t\n\t  // not an actual buffer we keep track of, but a measurement\n\t  // of how much we're waiting to get pushed to some underlying\n\t  // socket or file.\n\t  this.length = 0;\n\t\n\t  // a flag to see when we're in the middle of a write.\n\t  this.writing = false;\n\t\n\t  // when true all writes will be buffered until .uncork() call\n\t  this.corked = 0;\n\t\n\t  // a flag to be able to tell if the onwrite cb is called immediately,\n\t  // or on a later tick.  We set this to true at first, because any\n\t  // actions that shouldn't happen until \"later\" should generally also\n\t  // not happen before the first write call.\n\t  this.sync = true;\n\t\n\t  // a flag to know if we're processing previously buffered items, which\n\t  // may call the _write() callback in the same tick, so that we don't\n\t  // end up in an overlapped onwrite situation.\n\t  this.bufferProcessing = false;\n\t\n\t  // the callback that's passed to _write(chunk,cb)\n\t  this.onwrite = function (er) {\n\t    onwrite(stream, er);\n\t  };\n\t\n\t  // the callback that the user supplies to write(chunk,encoding,cb)\n\t  this.writecb = null;\n\t\n\t  // the amount that is being written when _write is called.\n\t  this.writelen = 0;\n\t\n\t  this.bufferedRequest = null;\n\t  this.lastBufferedRequest = null;\n\t\n\t  // number of pending user-supplied write callbacks\n\t  // this must be 0 before 'finish' can be emitted\n\t  this.pendingcb = 0;\n\t\n\t  // emit prefinish if the only thing we're waiting for is _write cbs\n\t  // This is relevant for synchronous Transform streams\n\t  this.prefinished = false;\n\t\n\t  // True if the error was already emitted and should not be thrown again\n\t  this.errorEmitted = false;\n\t\n\t  // count buffered requests\n\t  this.bufferedRequestCount = 0;\n\t\n\t  // allocate the first CorkedRequest, there is always\n\t  // one allocated and free to use, and we maintain at most two\n\t  this.corkedRequestsFree = new CorkedRequest(this);\n\t}\n\t\n\tWritableState.prototype.getBuffer = function getBuffer() {\n\t  var current = this.bufferedRequest;\n\t  var out = [];\n\t  while (current) {\n\t    out.push(current);\n\t    current = current.next;\n\t  }\n\t  return out;\n\t};\n\t\n\t(function () {\n\t  try {\n\t    Object.defineProperty(WritableState.prototype, 'buffer', {\n\t      get: internalUtil.deprecate(function () {\n\t        return this.getBuffer();\n\t      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.')\n\t    });\n\t  } catch (_) {}\n\t})();\n\t\n\t// Test _writableState for inheritance to account for Duplex streams,\n\t// whose prototype chain only points to Readable.\n\tvar realHasInstance;\n\tif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n\t  realHasInstance = Function.prototype[Symbol.hasInstance];\n\t  Object.defineProperty(Writable, Symbol.hasInstance, {\n\t    value: function (object) {\n\t      if (realHasInstance.call(this, object)) return true;\n\t\n\t      return object && object._writableState instanceof WritableState;\n\t    }\n\t  });\n\t} else {\n\t  realHasInstance = function (object) {\n\t    return object instanceof this;\n\t  };\n\t}\n\t\n\tfunction Writable(options) {\n\t  Duplex = Duplex || __webpack_require__(55);\n\t\n\t  // Writable ctor is applied to Duplexes, too.\n\t  // `realHasInstance` is necessary because using plain `instanceof`\n\t  // would return false, as no `_writableState` property is attached.\n\t\n\t  // Trying to use the custom `instanceof` for Writable here will also break the\n\t  // Node.js LazyTransform implementation, which has a non-trivial getter for\n\t  // `_writableState` that would lead to infinite recursion.\n\t  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n\t    return new Writable(options);\n\t  }\n\t\n\t  this._writableState = new WritableState(options, this);\n\t\n\t  // legacy.\n\t  this.writable = true;\n\t\n\t  if (options) {\n\t    if (typeof options.write === 'function') this._write = options.write;\n\t\n\t    if (typeof options.writev === 'function') this._writev = options.writev;\n\t  }\n\t\n\t  Stream.call(this);\n\t}\n\t\n\t// Otherwise people can pipe Writable streams, which is just wrong.\n\tWritable.prototype.pipe = function () {\n\t  this.emit('error', new Error('Cannot pipe, not readable'));\n\t};\n\t\n\tfunction writeAfterEnd(stream, cb) {\n\t  var er = new Error('write after end');\n\t  // TODO: defer error events consistently everywhere, not just the cb\n\t  stream.emit('error', er);\n\t  processNextTick(cb, er);\n\t}\n\t\n\t// If we get something that is not a buffer, string, null, or undefined,\n\t// and we're not in objectMode, then that's an error.\n\t// Otherwise stream chunks are all considered to be of length=1, and the\n\t// watermarks determine how many objects to keep in the buffer, rather than\n\t// how many bytes or characters.\n\tfunction validChunk(stream, state, chunk, cb) {\n\t  var valid = true;\n\t  var er = false;\n\t  // Always throw error if a null is written\n\t  // if we are not in object mode then throw\n\t  // if it is not a buffer, string, or undefined.\n\t  if (chunk === null) {\n\t    er = new TypeError('May not write null values to stream');\n\t  } else if (!Buffer.isBuffer(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n\t    er = new TypeError('Invalid non-string/buffer chunk');\n\t  }\n\t  if (er) {\n\t    stream.emit('error', er);\n\t    processNextTick(cb, er);\n\t    valid = false;\n\t  }\n\t  return valid;\n\t}\n\t\n\tWritable.prototype.write = function (chunk, encoding, cb) {\n\t  var state = this._writableState;\n\t  var ret = false;\n\t\n\t  if (typeof encoding === 'function') {\n\t    cb = encoding;\n\t    encoding = null;\n\t  }\n\t\n\t  if (Buffer.isBuffer(chunk)) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\t\n\t  if (typeof cb !== 'function') cb = nop;\n\t\n\t  if (state.ended) writeAfterEnd(this, cb);else if (validChunk(this, state, chunk, cb)) {\n\t    state.pendingcb++;\n\t    ret = writeOrBuffer(this, state, chunk, encoding, cb);\n\t  }\n\t\n\t  return ret;\n\t};\n\t\n\tWritable.prototype.cork = function () {\n\t  var state = this._writableState;\n\t\n\t  state.corked++;\n\t};\n\t\n\tWritable.prototype.uncork = function () {\n\t  var state = this._writableState;\n\t\n\t  if (state.corked) {\n\t    state.corked--;\n\t\n\t    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n\t  }\n\t};\n\t\n\tWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n\t  // node::ParseEncoding() requires lower case.\n\t  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n\t  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n\t  this._writableState.defaultEncoding = encoding;\n\t  return this;\n\t};\n\t\n\tfunction decodeChunk(state, chunk, encoding) {\n\t  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n\t    chunk = bufferShim.from(chunk, encoding);\n\t  }\n\t  return chunk;\n\t}\n\t\n\t// if we're already writing something, then just put this\n\t// in the queue, and wait our turn.  Otherwise, call _write\n\t// If we return false, then we need a drain event, so set that flag.\n\tfunction writeOrBuffer(stream, state, chunk, encoding, cb) {\n\t  chunk = decodeChunk(state, chunk, encoding);\n\t\n\t  if (Buffer.isBuffer(chunk)) encoding = 'buffer';\n\t  var len = state.objectMode ? 1 : chunk.length;\n\t\n\t  state.length += len;\n\t\n\t  var ret = state.length < state.highWaterMark;\n\t  // we must ensure that previous needDrain will not be reset to false.\n\t  if (!ret) state.needDrain = true;\n\t\n\t  if (state.writing || state.corked) {\n\t    var last = state.lastBufferedRequest;\n\t    state.lastBufferedRequest = new WriteReq(chunk, encoding, cb);\n\t    if (last) {\n\t      last.next = state.lastBufferedRequest;\n\t    } else {\n\t      state.bufferedRequest = state.lastBufferedRequest;\n\t    }\n\t    state.bufferedRequestCount += 1;\n\t  } else {\n\t    doWrite(stream, state, false, len, chunk, encoding, cb);\n\t  }\n\t\n\t  return ret;\n\t}\n\t\n\tfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n\t  state.writelen = len;\n\t  state.writecb = cb;\n\t  state.writing = true;\n\t  state.sync = true;\n\t  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n\t  state.sync = false;\n\t}\n\t\n\tfunction onwriteError(stream, state, sync, er, cb) {\n\t  --state.pendingcb;\n\t  if (sync) processNextTick(cb, er);else cb(er);\n\t\n\t  stream._writableState.errorEmitted = true;\n\t  stream.emit('error', er);\n\t}\n\t\n\tfunction onwriteStateUpdate(state) {\n\t  state.writing = false;\n\t  state.writecb = null;\n\t  state.length -= state.writelen;\n\t  state.writelen = 0;\n\t}\n\t\n\tfunction onwrite(stream, er) {\n\t  var state = stream._writableState;\n\t  var sync = state.sync;\n\t  var cb = state.writecb;\n\t\n\t  onwriteStateUpdate(state);\n\t\n\t  if (er) onwriteError(stream, state, sync, er, cb);else {\n\t    // Check if we're actually ready to finish, but don't emit yet\n\t    var finished = needFinish(state);\n\t\n\t    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n\t      clearBuffer(stream, state);\n\t    }\n\t\n\t    if (sync) {\n\t      /*<replacement>*/\n\t      asyncWrite(afterWrite, stream, state, finished, cb);\n\t      /*</replacement>*/\n\t    } else {\n\t        afterWrite(stream, state, finished, cb);\n\t      }\n\t  }\n\t}\n\t\n\tfunction afterWrite(stream, state, finished, cb) {\n\t  if (!finished) onwriteDrain(stream, state);\n\t  state.pendingcb--;\n\t  cb();\n\t  finishMaybe(stream, state);\n\t}\n\t\n\t// Must force callback to be called on nextTick, so that we don't\n\t// emit 'drain' before the write() consumer gets the 'false' return\n\t// value, and has a chance to attach a 'drain' listener.\n\tfunction onwriteDrain(stream, state) {\n\t  if (state.length === 0 && state.needDrain) {\n\t    state.needDrain = false;\n\t    stream.emit('drain');\n\t  }\n\t}\n\t\n\t// if there's something in the buffer waiting, then process it\n\tfunction clearBuffer(stream, state) {\n\t  state.bufferProcessing = true;\n\t  var entry = state.bufferedRequest;\n\t\n\t  if (stream._writev && entry && entry.next) {\n\t    // Fast case, write everything using _writev()\n\t    var l = state.bufferedRequestCount;\n\t    var buffer = new Array(l);\n\t    var holder = state.corkedRequestsFree;\n\t    holder.entry = entry;\n\t\n\t    var count = 0;\n\t    while (entry) {\n\t      buffer[count] = entry;\n\t      entry = entry.next;\n\t      count += 1;\n\t    }\n\t\n\t    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\t\n\t    // doWrite is almost always async, defer these to save a bit of time\n\t    // as the hot path ends with doWrite\n\t    state.pendingcb++;\n\t    state.lastBufferedRequest = null;\n\t    if (holder.next) {\n\t      state.corkedRequestsFree = holder.next;\n\t      holder.next = null;\n\t    } else {\n\t      state.corkedRequestsFree = new CorkedRequest(state);\n\t    }\n\t  } else {\n\t    // Slow case, write chunks one-by-one\n\t    while (entry) {\n\t      var chunk = entry.chunk;\n\t      var encoding = entry.encoding;\n\t      var cb = entry.callback;\n\t      var len = state.objectMode ? 1 : chunk.length;\n\t\n\t      doWrite(stream, state, false, len, chunk, encoding, cb);\n\t      entry = entry.next;\n\t      // if we didn't call the onwrite immediately, then\n\t      // it means that we need to wait until it does.\n\t      // also, that means that the chunk and cb are currently\n\t      // being processed, so move the buffer counter past them.\n\t      if (state.writing) {\n\t        break;\n\t      }\n\t    }\n\t\n\t    if (entry === null) state.lastBufferedRequest = null;\n\t  }\n\t\n\t  state.bufferedRequestCount = 0;\n\t  state.bufferedRequest = entry;\n\t  state.bufferProcessing = false;\n\t}\n\t\n\tWritable.prototype._write = function (chunk, encoding, cb) {\n\t  cb(new Error('_write() is not implemented'));\n\t};\n\t\n\tWritable.prototype._writev = null;\n\t\n\tWritable.prototype.end = function (chunk, encoding, cb) {\n\t  var state = this._writableState;\n\t\n\t  if (typeof chunk === 'function') {\n\t    cb = chunk;\n\t    chunk = null;\n\t    encoding = null;\n\t  } else if (typeof encoding === 'function') {\n\t    cb = encoding;\n\t    encoding = null;\n\t  }\n\t\n\t  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\t\n\t  // .end() fully uncorks\n\t  if (state.corked) {\n\t    state.corked = 1;\n\t    this.uncork();\n\t  }\n\t\n\t  // ignore unnecessary end() calls.\n\t  if (!state.ending && !state.finished) endWritable(this, state, cb);\n\t};\n\t\n\tfunction needFinish(state) {\n\t  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n\t}\n\t\n\tfunction prefinish(stream, state) {\n\t  if (!state.prefinished) {\n\t    state.prefinished = true;\n\t    stream.emit('prefinish');\n\t  }\n\t}\n\t\n\tfunction finishMaybe(stream, state) {\n\t  var need = needFinish(state);\n\t  if (need) {\n\t    if (state.pendingcb === 0) {\n\t      prefinish(stream, state);\n\t      state.finished = true;\n\t      stream.emit('finish');\n\t    } else {\n\t      prefinish(stream, state);\n\t    }\n\t  }\n\t  return need;\n\t}\n\t\n\tfunction endWritable(stream, state, cb) {\n\t  state.ending = true;\n\t  finishMaybe(stream, state);\n\t  if (cb) {\n\t    if (state.finished) processNextTick(cb);else stream.once('finish', cb);\n\t  }\n\t  state.ended = true;\n\t  stream.writable = false;\n\t}\n\t\n\t// It seems a linked list but it is not\n\t// there will be only 2 of these for each stream\n\tfunction CorkedRequest(state) {\n\t  var _this = this;\n\t\n\t  this.next = null;\n\t  this.entry = null;\n\t\n\t  this.finish = function (err) {\n\t    var entry = _this.entry;\n\t    _this.entry = null;\n\t    while (entry) {\n\t      var cb = entry.callback;\n\t      state.pendingcb--;\n\t      cb(err);\n\t      entry = entry.next;\n\t    }\n\t    if (state.corkedRequestsFree) {\n\t      state.corkedRequestsFree.next = _this;\n\t    } else {\n\t      state.corkedRequestsFree = _this;\n\t    }\n\t  };\n\t}\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(24), __webpack_require__(25).setImmediate))\n\n/***/ },\n/* 57 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = deprecate;\n\t\n\t/**\n\t * Mark that a method should not be used.\n\t * Returns a modified function which warns once by default.\n\t *\n\t * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n\t *\n\t * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n\t * will throw an Error when invoked.\n\t *\n\t * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n\t * will invoke `console.trace()` instead of `console.error()`.\n\t *\n\t * @param {Function} fn - the function to deprecate\n\t * @param {String} msg - the string to print to the console when `fn` is invoked\n\t * @returns {Function} a new \"deprecated\" version of `fn`\n\t * @api public\n\t */\n\t\n\tfunction deprecate (fn, msg) {\n\t  if (config('noDeprecation')) {\n\t    return fn;\n\t  }\n\t\n\t  var warned = false;\n\t  function deprecated() {\n\t    if (!warned) {\n\t      if (config('throwDeprecation')) {\n\t        throw new Error(msg);\n\t      } else if (config('traceDeprecation')) {\n\t        console.trace(msg);\n\t      } else {\n\t        console.warn(msg);\n\t      }\n\t      warned = true;\n\t    }\n\t    return fn.apply(this, arguments);\n\t  }\n\t\n\t  return deprecated;\n\t}\n\t\n\t/**\n\t * Checks `localStorage` for boolean values for the given `name`.\n\t *\n\t * @param {String} name\n\t * @returns {Boolean}\n\t * @api private\n\t */\n\t\n\tfunction config (name) {\n\t  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n\t  try {\n\t    if (!global.localStorage) return false;\n\t  } catch (_) {\n\t    return false;\n\t  }\n\t  var val = global.localStorage[name];\n\t  if (null == val) return false;\n\t  return String(val).toLowerCase() === 'true';\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 58 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tvar Buffer = __webpack_require__(47).Buffer;\n\t\n\tvar isBufferEncoding = Buffer.isEncoding\n\t  || function(encoding) {\n\t       switch (encoding && encoding.toLowerCase()) {\n\t         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;\n\t         default: return false;\n\t       }\n\t     }\n\t\n\t\n\tfunction assertEncoding(encoding) {\n\t  if (encoding && !isBufferEncoding(encoding)) {\n\t    throw new Error('Unknown encoding: ' + encoding);\n\t  }\n\t}\n\t\n\t// StringDecoder provides an interface for efficiently splitting a series of\n\t// buffers into a series of JS strings without breaking apart multi-byte\n\t// characters. CESU-8 is handled as part of the UTF-8 encoding.\n\t//\n\t// @TODO Handling all encodings inside a single object makes it very difficult\n\t// to reason about this code, so it should be split up in the future.\n\t// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code\n\t// points as used by CESU-8.\n\tvar StringDecoder = exports.StringDecoder = function(encoding) {\n\t  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');\n\t  assertEncoding(encoding);\n\t  switch (this.encoding) {\n\t    case 'utf8':\n\t      // CESU-8 represents each of Surrogate Pair by 3-bytes\n\t      this.surrogateSize = 3;\n\t      break;\n\t    case 'ucs2':\n\t    case 'utf16le':\n\t      // UTF-16 represents each of Surrogate Pair by 2-bytes\n\t      this.surrogateSize = 2;\n\t      this.detectIncompleteChar = utf16DetectIncompleteChar;\n\t      break;\n\t    case 'base64':\n\t      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.\n\t      this.surrogateSize = 3;\n\t      this.detectIncompleteChar = base64DetectIncompleteChar;\n\t      break;\n\t    default:\n\t      this.write = passThroughWrite;\n\t      return;\n\t  }\n\t\n\t  // Enough space to store all bytes of a single character. UTF-8 needs 4\n\t  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).\n\t  this.charBuffer = new Buffer(6);\n\t  // Number of bytes received for the current incomplete multi-byte character.\n\t  this.charReceived = 0;\n\t  // Number of bytes expected for the current incomplete multi-byte character.\n\t  this.charLength = 0;\n\t};\n\t\n\t\n\t// write decodes the given buffer and returns it as JS string that is\n\t// guaranteed to not contain any partial multi-byte characters. Any partial\n\t// character found at the end of the buffer is buffered up, and will be\n\t// returned when calling write again with the remaining bytes.\n\t//\n\t// Note: Converting a Buffer containing an orphan surrogate to a String\n\t// currently works, but converting a String to a Buffer (via `new Buffer`, or\n\t// Buffer#write) will replace incomplete surrogates with the unicode\n\t// replacement character. See https://codereview.chromium.org/121173009/ .\n\tStringDecoder.prototype.write = function(buffer) {\n\t  var charStr = '';\n\t  // if our last write ended with an incomplete multibyte character\n\t  while (this.charLength) {\n\t    // determine how many remaining bytes this buffer has to offer for this char\n\t    var available = (buffer.length >= this.charLength - this.charReceived) ?\n\t        this.charLength - this.charReceived :\n\t        buffer.length;\n\t\n\t    // add the new bytes to the char buffer\n\t    buffer.copy(this.charBuffer, this.charReceived, 0, available);\n\t    this.charReceived += available;\n\t\n\t    if (this.charReceived < this.charLength) {\n\t      // still not enough chars in this buffer? wait for more ...\n\t      return '';\n\t    }\n\t\n\t    // remove bytes belonging to the current character from the buffer\n\t    buffer = buffer.slice(available, buffer.length);\n\t\n\t    // get the character that was split\n\t    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);\n\t\n\t    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n\t    var charCode = charStr.charCodeAt(charStr.length - 1);\n\t    if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n\t      this.charLength += this.surrogateSize;\n\t      charStr = '';\n\t      continue;\n\t    }\n\t    this.charReceived = this.charLength = 0;\n\t\n\t    // if there are no more bytes in this buffer, just emit our char\n\t    if (buffer.length === 0) {\n\t      return charStr;\n\t    }\n\t    break;\n\t  }\n\t\n\t  // determine and set charLength / charReceived\n\t  this.detectIncompleteChar(buffer);\n\t\n\t  var end = buffer.length;\n\t  if (this.charLength) {\n\t    // buffer the incomplete character bytes we got\n\t    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);\n\t    end -= this.charReceived;\n\t  }\n\t\n\t  charStr += buffer.toString(this.encoding, 0, end);\n\t\n\t  var end = charStr.length - 1;\n\t  var charCode = charStr.charCodeAt(end);\n\t  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n\t  if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n\t    var size = this.surrogateSize;\n\t    this.charLength += size;\n\t    this.charReceived += size;\n\t    this.charBuffer.copy(this.charBuffer, size, 0, size);\n\t    buffer.copy(this.charBuffer, 0, 0, size);\n\t    return charStr.substring(0, end);\n\t  }\n\t\n\t  // or just emit the charStr\n\t  return charStr;\n\t};\n\t\n\t// detectIncompleteChar determines if there is an incomplete UTF-8 character at\n\t// the end of the given buffer. If so, it sets this.charLength to the byte\n\t// length that character, and sets this.charReceived to the number of bytes\n\t// that are available for this character.\n\tStringDecoder.prototype.detectIncompleteChar = function(buffer) {\n\t  // determine how many bytes we have to check at the end of this buffer\n\t  var i = (buffer.length >= 3) ? 3 : buffer.length;\n\t\n\t  // Figure out if one of the last i bytes of our buffer announces an\n\t  // incomplete char.\n\t  for (; i > 0; i--) {\n\t    var c = buffer[buffer.length - i];\n\t\n\t    // See http://en.wikipedia.org/wiki/UTF-8#Description\n\t\n\t    // 110XXXXX\n\t    if (i == 1 && c >> 5 == 0x06) {\n\t      this.charLength = 2;\n\t      break;\n\t    }\n\t\n\t    // 1110XXXX\n\t    if (i <= 2 && c >> 4 == 0x0E) {\n\t      this.charLength = 3;\n\t      break;\n\t    }\n\t\n\t    // 11110XXX\n\t    if (i <= 3 && c >> 3 == 0x1E) {\n\t      this.charLength = 4;\n\t      break;\n\t    }\n\t  }\n\t  this.charReceived = i;\n\t};\n\t\n\tStringDecoder.prototype.end = function(buffer) {\n\t  var res = '';\n\t  if (buffer && buffer.length)\n\t    res = this.write(buffer);\n\t\n\t  if (this.charReceived) {\n\t    var cr = this.charReceived;\n\t    var buf = this.charBuffer;\n\t    var enc = this.encoding;\n\t    res += buf.slice(0, cr).toString(enc);\n\t  }\n\t\n\t  return res;\n\t};\n\t\n\tfunction passThroughWrite(buffer) {\n\t  return buffer.toString(this.encoding);\n\t}\n\t\n\tfunction utf16DetectIncompleteChar(buffer) {\n\t  this.charReceived = buffer.length % 2;\n\t  this.charLength = this.charReceived ? 2 : 0;\n\t}\n\t\n\tfunction base64DetectIncompleteChar(buffer) {\n\t  this.charReceived = buffer.length % 3;\n\t  this.charLength = this.charReceived ? 3 : 0;\n\t}\n\n\n/***/ },\n/* 59 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// a transform stream is a readable/writable stream where you do\n\t// something with the data.  Sometimes it's called a \"filter\",\n\t// but that's not a great name for it, since that implies a thing where\n\t// some bits pass through, and others are simply ignored.  (That would\n\t// be a valid example of a transform, of course.)\n\t//\n\t// While the output is causally related to the input, it's not a\n\t// necessarily symmetric or synchronous transformation.  For example,\n\t// a zlib stream might take multiple plain-text writes(), and then\n\t// emit a single compressed chunk some time in the future.\n\t//\n\t// Here's how this works:\n\t//\n\t// The Transform stream has all the aspects of the readable and writable\n\t// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n\t// internally, and returns false if there's a lot of pending writes\n\t// buffered up.  When you call read(), that calls _read(n) until\n\t// there's enough pending readable data buffered up.\n\t//\n\t// In a transform stream, the written data is placed in a buffer.  When\n\t// _read(n) is called, it transforms the queued up data, calling the\n\t// buffered _write cb's as it consumes chunks.  If consuming a single\n\t// written chunk would result in multiple output chunks, then the first\n\t// outputted bit calls the readcb, and subsequent chunks just go into\n\t// the read buffer, and will cause it to emit 'readable' if necessary.\n\t//\n\t// This way, back-pressure is actually determined by the reading side,\n\t// since _read has to be called to start processing a new chunk.  However,\n\t// a pathological inflate type of transform can cause excessive buffering\n\t// here.  For example, imagine a stream where every byte of input is\n\t// interpreted as an integer from 0-255, and then results in that many\n\t// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n\t// 1kb of data being output.  In this case, you could write a very small\n\t// amount of input, and end up with a very large amount of output.  In\n\t// such a pathological inflating mechanism, there'd be no way to tell\n\t// the system to stop doing the transform.  A single 4MB write could\n\t// cause the system to run out of memory.\n\t//\n\t// However, even in such a pathological case, only a single written chunk\n\t// would be consumed, and then the rest would wait (un-transformed) until\n\t// the results of the previous transformed chunk were consumed.\n\t\n\t'use strict';\n\t\n\tmodule.exports = Transform;\n\t\n\tvar Duplex = __webpack_require__(55);\n\t\n\t/*<replacement>*/\n\tvar util = __webpack_require__(52);\n\tutil.inherits = __webpack_require__(42);\n\t/*</replacement>*/\n\t\n\tutil.inherits(Transform, Duplex);\n\t\n\tfunction TransformState(stream) {\n\t  this.afterTransform = function (er, data) {\n\t    return afterTransform(stream, er, data);\n\t  };\n\t\n\t  this.needTransform = false;\n\t  this.transforming = false;\n\t  this.writecb = null;\n\t  this.writechunk = null;\n\t  this.writeencoding = null;\n\t}\n\t\n\tfunction afterTransform(stream, er, data) {\n\t  var ts = stream._transformState;\n\t  ts.transforming = false;\n\t\n\t  var cb = ts.writecb;\n\t\n\t  if (!cb) return stream.emit('error', new Error('no writecb in Transform class'));\n\t\n\t  ts.writechunk = null;\n\t  ts.writecb = null;\n\t\n\t  if (data !== null && data !== undefined) stream.push(data);\n\t\n\t  cb(er);\n\t\n\t  var rs = stream._readableState;\n\t  rs.reading = false;\n\t  if (rs.needReadable || rs.length < rs.highWaterMark) {\n\t    stream._read(rs.highWaterMark);\n\t  }\n\t}\n\t\n\tfunction Transform(options) {\n\t  if (!(this instanceof Transform)) return new Transform(options);\n\t\n\t  Duplex.call(this, options);\n\t\n\t  this._transformState = new TransformState(this);\n\t\n\t  var stream = this;\n\t\n\t  // start out asking for a readable event once data is transformed.\n\t  this._readableState.needReadable = true;\n\t\n\t  // we have implemented the _read method, and done the other things\n\t  // that Readable wants before the first _read call, so unset the\n\t  // sync guard flag.\n\t  this._readableState.sync = false;\n\t\n\t  if (options) {\n\t    if (typeof options.transform === 'function') this._transform = options.transform;\n\t\n\t    if (typeof options.flush === 'function') this._flush = options.flush;\n\t  }\n\t\n\t  // When the writable side finishes, then flush out anything remaining.\n\t  this.once('prefinish', function () {\n\t    if (typeof this._flush === 'function') this._flush(function (er, data) {\n\t      done(stream, er, data);\n\t    });else done(stream);\n\t  });\n\t}\n\t\n\tTransform.prototype.push = function (chunk, encoding) {\n\t  this._transformState.needTransform = false;\n\t  return Duplex.prototype.push.call(this, chunk, encoding);\n\t};\n\t\n\t// This is the part where you do stuff!\n\t// override this function in implementation classes.\n\t// 'chunk' is an input chunk.\n\t//\n\t// Call `push(newChunk)` to pass along transformed output\n\t// to the readable side.  You may call 'push' zero or more times.\n\t//\n\t// Call `cb(err)` when you are done with this chunk.  If you pass\n\t// an error, then that'll put the hurt on the whole operation.  If you\n\t// never call cb(), then you'll never get another chunk.\n\tTransform.prototype._transform = function (chunk, encoding, cb) {\n\t  throw new Error('_transform() is not implemented');\n\t};\n\t\n\tTransform.prototype._write = function (chunk, encoding, cb) {\n\t  var ts = this._transformState;\n\t  ts.writecb = cb;\n\t  ts.writechunk = chunk;\n\t  ts.writeencoding = encoding;\n\t  if (!ts.transforming) {\n\t    var rs = this._readableState;\n\t    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n\t  }\n\t};\n\t\n\t// Doesn't matter what the args are here.\n\t// _transform does all the work.\n\t// That we got here means that the readable side wants more data.\n\tTransform.prototype._read = function (n) {\n\t  var ts = this._transformState;\n\t\n\t  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n\t    ts.transforming = true;\n\t    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n\t  } else {\n\t    // mark that we need a transform, so that any data that comes in\n\t    // will get processed, now that we've asked for it.\n\t    ts.needTransform = true;\n\t  }\n\t};\n\t\n\tfunction done(stream, er, data) {\n\t  if (er) return stream.emit('error', er);\n\t\n\t  if (data !== null && data !== undefined) stream.push(data);\n\t\n\t  // if there's nothing in the write buffer, then that means\n\t  // that nothing more will ever be provided\n\t  var ws = stream._writableState;\n\t  var ts = stream._transformState;\n\t\n\t  if (ws.length) throw new Error('Calling transform done when ws.length != 0');\n\t\n\t  if (ts.transforming) throw new Error('Calling transform done when still transforming');\n\t\n\t  return stream.push(null);\n\t}\n\n/***/ },\n/* 60 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// a passthrough stream.\n\t// basically just the most minimal sort of Transform stream.\n\t// Every written chunk gets output as-is.\n\t\n\t'use strict';\n\t\n\tmodule.exports = PassThrough;\n\t\n\tvar Transform = __webpack_require__(59);\n\t\n\t/*<replacement>*/\n\tvar util = __webpack_require__(52);\n\tutil.inherits = __webpack_require__(42);\n\t/*</replacement>*/\n\t\n\tutil.inherits(PassThrough, Transform);\n\t\n\tfunction PassThrough(options) {\n\t  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\t\n\t  Transform.call(this, options);\n\t}\n\t\n\tPassThrough.prototype._transform = function (chunk, encoding, cb) {\n\t  cb(null, chunk);\n\t};\n\n/***/ },\n/* 61 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(56)\n\n\n/***/ },\n/* 62 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(55)\n\n\n/***/ },\n/* 63 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(59)\n\n\n/***/ },\n/* 64 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(60)\n\n\n/***/ },\n/* 65 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tvar formatRegExp = /%[sdj%]/g;\n\texports.format = function(f) {\n\t  if (!isString(f)) {\n\t    var objects = [];\n\t    for (var i = 0; i < arguments.length; i++) {\n\t      objects.push(inspect(arguments[i]));\n\t    }\n\t    return objects.join(' ');\n\t  }\n\t\n\t  var i = 1;\n\t  var args = arguments;\n\t  var len = args.length;\n\t  var str = String(f).replace(formatRegExp, function(x) {\n\t    if (x === '%%') return '%';\n\t    if (i >= len) return x;\n\t    switch (x) {\n\t      case '%s': return String(args[i++]);\n\t      case '%d': return Number(args[i++]);\n\t      case '%j':\n\t        try {\n\t          return JSON.stringify(args[i++]);\n\t        } catch (_) {\n\t          return '[Circular]';\n\t        }\n\t      default:\n\t        return x;\n\t    }\n\t  });\n\t  for (var x = args[i]; i < len; x = args[++i]) {\n\t    if (isNull(x) || !isObject(x)) {\n\t      str += ' ' + x;\n\t    } else {\n\t      str += ' ' + inspect(x);\n\t    }\n\t  }\n\t  return str;\n\t};\n\t\n\t\n\t// Mark that a method should not be used.\n\t// Returns a modified function which warns once by default.\n\t// If --no-deprecation is set, then it is a no-op.\n\texports.deprecate = function(fn, msg) {\n\t  // Allow for deprecating things in the process of starting up.\n\t  if (isUndefined(global.process)) {\n\t    return function() {\n\t      return exports.deprecate(fn, msg).apply(this, arguments);\n\t    };\n\t  }\n\t\n\t  if (process.noDeprecation === true) {\n\t    return fn;\n\t  }\n\t\n\t  var warned = false;\n\t  function deprecated() {\n\t    if (!warned) {\n\t      if (process.throwDeprecation) {\n\t        throw new Error(msg);\n\t      } else if (process.traceDeprecation) {\n\t        console.trace(msg);\n\t      } else {\n\t        console.error(msg);\n\t      }\n\t      warned = true;\n\t    }\n\t    return fn.apply(this, arguments);\n\t  }\n\t\n\t  return deprecated;\n\t};\n\t\n\t\n\tvar debugs = {};\n\tvar debugEnviron;\n\texports.debuglog = function(set) {\n\t  if (isUndefined(debugEnviron))\n\t    debugEnviron = process.env.NODE_DEBUG || '';\n\t  set = set.toUpperCase();\n\t  if (!debugs[set]) {\n\t    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n\t      var pid = process.pid;\n\t      debugs[set] = function() {\n\t        var msg = exports.format.apply(exports, arguments);\n\t        console.error('%s %d: %s', set, pid, msg);\n\t      };\n\t    } else {\n\t      debugs[set] = function() {};\n\t    }\n\t  }\n\t  return debugs[set];\n\t};\n\t\n\t\n\t/**\n\t * Echos the value of a value. Trys to print the value out\n\t * in the best way possible given the different types.\n\t *\n\t * @param {Object} obj The object to print out.\n\t * @param {Object} opts Optional options object that alters the output.\n\t */\n\t/* legacy: obj, showHidden, depth, colors*/\n\tfunction inspect(obj, opts) {\n\t  // default options\n\t  var ctx = {\n\t    seen: [],\n\t    stylize: stylizeNoColor\n\t  };\n\t  // legacy...\n\t  if (arguments.length >= 3) ctx.depth = arguments[2];\n\t  if (arguments.length >= 4) ctx.colors = arguments[3];\n\t  if (isBoolean(opts)) {\n\t    // legacy...\n\t    ctx.showHidden = opts;\n\t  } else if (opts) {\n\t    // got an \"options\" object\n\t    exports._extend(ctx, opts);\n\t  }\n\t  // set default options\n\t  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n\t  if (isUndefined(ctx.depth)) ctx.depth = 2;\n\t  if (isUndefined(ctx.colors)) ctx.colors = false;\n\t  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n\t  if (ctx.colors) ctx.stylize = stylizeWithColor;\n\t  return formatValue(ctx, obj, ctx.depth);\n\t}\n\texports.inspect = inspect;\n\t\n\t\n\t// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\n\tinspect.colors = {\n\t  'bold' : [1, 22],\n\t  'italic' : [3, 23],\n\t  'underline' : [4, 24],\n\t  'inverse' : [7, 27],\n\t  'white' : [37, 39],\n\t  'grey' : [90, 39],\n\t  'black' : [30, 39],\n\t  'blue' : [34, 39],\n\t  'cyan' : [36, 39],\n\t  'green' : [32, 39],\n\t  'magenta' : [35, 39],\n\t  'red' : [31, 39],\n\t  'yellow' : [33, 39]\n\t};\n\t\n\t// Don't use 'blue' not visible on cmd.exe\n\tinspect.styles = {\n\t  'special': 'cyan',\n\t  'number': 'yellow',\n\t  'boolean': 'yellow',\n\t  'undefined': 'grey',\n\t  'null': 'bold',\n\t  'string': 'green',\n\t  'date': 'magenta',\n\t  // \"name\": intentionally not styling\n\t  'regexp': 'red'\n\t};\n\t\n\t\n\tfunction stylizeWithColor(str, styleType) {\n\t  var style = inspect.styles[styleType];\n\t\n\t  if (style) {\n\t    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n\t           '\\u001b[' + inspect.colors[style][1] + 'm';\n\t  } else {\n\t    return str;\n\t  }\n\t}\n\t\n\t\n\tfunction stylizeNoColor(str, styleType) {\n\t  return str;\n\t}\n\t\n\t\n\tfunction arrayToHash(array) {\n\t  var hash = {};\n\t\n\t  array.forEach(function(val, idx) {\n\t    hash[val] = true;\n\t  });\n\t\n\t  return hash;\n\t}\n\t\n\t\n\tfunction formatValue(ctx, value, recurseTimes) {\n\t  // Provide a hook for user-specified inspect functions.\n\t  // Check that value is an object with an inspect function on it\n\t  if (ctx.customInspect &&\n\t      value &&\n\t      isFunction(value.inspect) &&\n\t      // Filter out the util module, it's inspect function is special\n\t      value.inspect !== exports.inspect &&\n\t      // Also filter out any prototype objects using the circular check.\n\t      !(value.constructor && value.constructor.prototype === value)) {\n\t    var ret = value.inspect(recurseTimes, ctx);\n\t    if (!isString(ret)) {\n\t      ret = formatValue(ctx, ret, recurseTimes);\n\t    }\n\t    return ret;\n\t  }\n\t\n\t  // Primitive types cannot have properties\n\t  var primitive = formatPrimitive(ctx, value);\n\t  if (primitive) {\n\t    return primitive;\n\t  }\n\t\n\t  // Look up the keys of the object.\n\t  var keys = Object.keys(value);\n\t  var visibleKeys = arrayToHash(keys);\n\t\n\t  if (ctx.showHidden) {\n\t    keys = Object.getOwnPropertyNames(value);\n\t  }\n\t\n\t  // IE doesn't make error fields non-enumerable\n\t  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n\t  if (isError(value)\n\t      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n\t    return formatError(value);\n\t  }\n\t\n\t  // Some type of object without properties can be shortcutted.\n\t  if (keys.length === 0) {\n\t    if (isFunction(value)) {\n\t      var name = value.name ? ': ' + value.name : '';\n\t      return ctx.stylize('[Function' + name + ']', 'special');\n\t    }\n\t    if (isRegExp(value)) {\n\t      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n\t    }\n\t    if (isDate(value)) {\n\t      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n\t    }\n\t    if (isError(value)) {\n\t      return formatError(value);\n\t    }\n\t  }\n\t\n\t  var base = '', array = false, braces = ['{', '}'];\n\t\n\t  // Make Array say that they are Array\n\t  if (isArray(value)) {\n\t    array = true;\n\t    braces = ['[', ']'];\n\t  }\n\t\n\t  // Make functions say that they are functions\n\t  if (isFunction(value)) {\n\t    var n = value.name ? ': ' + value.name : '';\n\t    base = ' [Function' + n + ']';\n\t  }\n\t\n\t  // Make RegExps say that they are RegExps\n\t  if (isRegExp(value)) {\n\t    base = ' ' + RegExp.prototype.toString.call(value);\n\t  }\n\t\n\t  // Make dates with properties first say the date\n\t  if (isDate(value)) {\n\t    base = ' ' + Date.prototype.toUTCString.call(value);\n\t  }\n\t\n\t  // Make error with message first say the error\n\t  if (isError(value)) {\n\t    base = ' ' + formatError(value);\n\t  }\n\t\n\t  if (keys.length === 0 && (!array || value.length == 0)) {\n\t    return braces[0] + base + braces[1];\n\t  }\n\t\n\t  if (recurseTimes < 0) {\n\t    if (isRegExp(value)) {\n\t      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n\t    } else {\n\t      return ctx.stylize('[Object]', 'special');\n\t    }\n\t  }\n\t\n\t  ctx.seen.push(value);\n\t\n\t  var output;\n\t  if (array) {\n\t    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n\t  } else {\n\t    output = keys.map(function(key) {\n\t      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n\t    });\n\t  }\n\t\n\t  ctx.seen.pop();\n\t\n\t  return reduceToSingleString(output, base, braces);\n\t}\n\t\n\t\n\tfunction formatPrimitive(ctx, value) {\n\t  if (isUndefined(value))\n\t    return ctx.stylize('undefined', 'undefined');\n\t  if (isString(value)) {\n\t    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n\t                                             .replace(/'/g, \"\\\\'\")\n\t                                             .replace(/\\\\\"/g, '\"') + '\\'';\n\t    return ctx.stylize(simple, 'string');\n\t  }\n\t  if (isNumber(value))\n\t    return ctx.stylize('' + value, 'number');\n\t  if (isBoolean(value))\n\t    return ctx.stylize('' + value, 'boolean');\n\t  // For some reason typeof null is \"object\", so special case here.\n\t  if (isNull(value))\n\t    return ctx.stylize('null', 'null');\n\t}\n\t\n\t\n\tfunction formatError(value) {\n\t  return '[' + Error.prototype.toString.call(value) + ']';\n\t}\n\t\n\t\n\tfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n\t  var output = [];\n\t  for (var i = 0, l = value.length; i < l; ++i) {\n\t    if (hasOwnProperty(value, String(i))) {\n\t      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n\t          String(i), true));\n\t    } else {\n\t      output.push('');\n\t    }\n\t  }\n\t  keys.forEach(function(key) {\n\t    if (!key.match(/^\\d+$/)) {\n\t      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n\t          key, true));\n\t    }\n\t  });\n\t  return output;\n\t}\n\t\n\t\n\tfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n\t  var name, str, desc;\n\t  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n\t  if (desc.get) {\n\t    if (desc.set) {\n\t      str = ctx.stylize('[Getter/Setter]', 'special');\n\t    } else {\n\t      str = ctx.stylize('[Getter]', 'special');\n\t    }\n\t  } else {\n\t    if (desc.set) {\n\t      str = ctx.stylize('[Setter]', 'special');\n\t    }\n\t  }\n\t  if (!hasOwnProperty(visibleKeys, key)) {\n\t    name = '[' + key + ']';\n\t  }\n\t  if (!str) {\n\t    if (ctx.seen.indexOf(desc.value) < 0) {\n\t      if (isNull(recurseTimes)) {\n\t        str = formatValue(ctx, desc.value, null);\n\t      } else {\n\t        str = formatValue(ctx, desc.value, recurseTimes - 1);\n\t      }\n\t      if (str.indexOf('\\n') > -1) {\n\t        if (array) {\n\t          str = str.split('\\n').map(function(line) {\n\t            return '  ' + line;\n\t          }).join('\\n').substr(2);\n\t        } else {\n\t          str = '\\n' + str.split('\\n').map(function(line) {\n\t            return '   ' + line;\n\t          }).join('\\n');\n\t        }\n\t      }\n\t    } else {\n\t      str = ctx.stylize('[Circular]', 'special');\n\t    }\n\t  }\n\t  if (isUndefined(name)) {\n\t    if (array && key.match(/^\\d+$/)) {\n\t      return str;\n\t    }\n\t    name = JSON.stringify('' + key);\n\t    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n\t      name = name.substr(1, name.length - 2);\n\t      name = ctx.stylize(name, 'name');\n\t    } else {\n\t      name = name.replace(/'/g, \"\\\\'\")\n\t                 .replace(/\\\\\"/g, '\"')\n\t                 .replace(/(^\"|\"$)/g, \"'\");\n\t      name = ctx.stylize(name, 'string');\n\t    }\n\t  }\n\t\n\t  return name + ': ' + str;\n\t}\n\t\n\t\n\tfunction reduceToSingleString(output, base, braces) {\n\t  var numLinesEst = 0;\n\t  var length = output.reduce(function(prev, cur) {\n\t    numLinesEst++;\n\t    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n\t    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n\t  }, 0);\n\t\n\t  if (length > 60) {\n\t    return braces[0] +\n\t           (base === '' ? '' : base + '\\n ') +\n\t           ' ' +\n\t           output.join(',\\n  ') +\n\t           ' ' +\n\t           braces[1];\n\t  }\n\t\n\t  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n\t}\n\t\n\t\n\t// NOTE: These type checking functions intentionally don't use `instanceof`\n\t// because it is fragile and can be easily faked with `Object.create()`.\n\tfunction isArray(ar) {\n\t  return Array.isArray(ar);\n\t}\n\texports.isArray = isArray;\n\t\n\tfunction isBoolean(arg) {\n\t  return typeof arg === 'boolean';\n\t}\n\texports.isBoolean = isBoolean;\n\t\n\tfunction isNull(arg) {\n\t  return arg === null;\n\t}\n\texports.isNull = isNull;\n\t\n\tfunction isNullOrUndefined(arg) {\n\t  return arg == null;\n\t}\n\texports.isNullOrUndefined = isNullOrUndefined;\n\t\n\tfunction isNumber(arg) {\n\t  return typeof arg === 'number';\n\t}\n\texports.isNumber = isNumber;\n\t\n\tfunction isString(arg) {\n\t  return typeof arg === 'string';\n\t}\n\texports.isString = isString;\n\t\n\tfunction isSymbol(arg) {\n\t  return typeof arg === 'symbol';\n\t}\n\texports.isSymbol = isSymbol;\n\t\n\tfunction isUndefined(arg) {\n\t  return arg === void 0;\n\t}\n\texports.isUndefined = isUndefined;\n\t\n\tfunction isRegExp(re) {\n\t  return isObject(re) && objectToString(re) === '[object RegExp]';\n\t}\n\texports.isRegExp = isRegExp;\n\t\n\tfunction isObject(arg) {\n\t  return typeof arg === 'object' && arg !== null;\n\t}\n\texports.isObject = isObject;\n\t\n\tfunction isDate(d) {\n\t  return isObject(d) && objectToString(d) === '[object Date]';\n\t}\n\texports.isDate = isDate;\n\t\n\tfunction isError(e) {\n\t  return isObject(e) &&\n\t      (objectToString(e) === '[object Error]' || e instanceof Error);\n\t}\n\texports.isError = isError;\n\t\n\tfunction isFunction(arg) {\n\t  return typeof arg === 'function';\n\t}\n\texports.isFunction = isFunction;\n\t\n\tfunction isPrimitive(arg) {\n\t  return arg === null ||\n\t         typeof arg === 'boolean' ||\n\t         typeof arg === 'number' ||\n\t         typeof arg === 'string' ||\n\t         typeof arg === 'symbol' ||  // ES6 symbol\n\t         typeof arg === 'undefined';\n\t}\n\texports.isPrimitive = isPrimitive;\n\t\n\texports.isBuffer = __webpack_require__(66);\n\t\n\tfunction objectToString(o) {\n\t  return Object.prototype.toString.call(o);\n\t}\n\t\n\t\n\tfunction pad(n) {\n\t  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n\t}\n\t\n\t\n\tvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n\t              'Oct', 'Nov', 'Dec'];\n\t\n\t// 26 Feb 16:19:34\n\tfunction timestamp() {\n\t  var d = new Date();\n\t  var time = [pad(d.getHours()),\n\t              pad(d.getMinutes()),\n\t              pad(d.getSeconds())].join(':');\n\t  return [d.getDate(), months[d.getMonth()], time].join(' ');\n\t}\n\t\n\t\n\t// log is just a thin wrapper to console.log that prepends a timestamp\n\texports.log = function() {\n\t  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n\t};\n\t\n\t\n\t/**\n\t * Inherit the prototype methods from one constructor into another.\n\t *\n\t * The Function.prototype.inherits from lang.js rewritten as a standalone\n\t * function (not on Function.prototype). NOTE: If this file is to be loaded\n\t * during bootstrapping this function needs to be rewritten using some native\n\t * functions as prototype setup using normal JavaScript does not work as\n\t * expected during bootstrapping (see mirror.js in r114903).\n\t *\n\t * @param {function} ctor Constructor function which needs to inherit the\n\t *     prototype.\n\t * @param {function} superCtor Constructor function to inherit prototype from.\n\t */\n\texports.inherits = __webpack_require__(67);\n\t\n\texports._extend = function(origin, add) {\n\t  // Don't do anything if add isn't an object\n\t  if (!add || !isObject(add)) return origin;\n\t\n\t  var keys = Object.keys(add);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    origin[keys[i]] = add[keys[i]];\n\t  }\n\t  return origin;\n\t};\n\t\n\tfunction hasOwnProperty(obj, prop) {\n\t  return Object.prototype.hasOwnProperty.call(obj, prop);\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(24)))\n\n/***/ },\n/* 66 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function isBuffer(arg) {\n\t  return arg && typeof arg === 'object'\n\t    && typeof arg.copy === 'function'\n\t    && typeof arg.fill === 'function'\n\t    && typeof arg.readUInt8 === 'function';\n\t}\n\n/***/ },\n/* 67 */\n42,\n/* 68 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// **N3StreamWriter** serializes a triple stream into an N3 stream\n\tvar Transform = __webpack_require__(40).Transform,\n\t    util = __webpack_require__(65),\n\t    N3Writer = __webpack_require__(69);\n\t\n\t// ## Constructor\n\tfunction N3StreamWriter(options) {\n\t  if (!(this instanceof N3StreamWriter))\n\t    return new N3StreamWriter(options);\n\t\n\t  // Initialize Transform base class\n\t  Transform.call(this, { encoding: 'utf8' });\n\t  this._writableState.objectMode = true;\n\t\n\t  // Set up writer with a dummy stream object\n\t  var self = this;\n\t  var writer = new N3Writer({\n\t    write: function (chunk, encoding, callback) { self.push(chunk); callback && callback(); },\n\t    end: function (callback) { self.push(null); callback && callback(); },\n\t  }, options);\n\t\n\t  // Implement Transform methods on top of writer\n\t  this._transform = function (triple, encoding, done) { writer.addTriple(triple, done); };\n\t  this._flush = function (done) { writer.end(done); };\n\t}\n\tutil.inherits(N3StreamWriter, Transform);\n\t\n\t// ## Exports\n\t// Export the `N3StreamWriter` class as a whole.\n\tmodule.exports = N3StreamWriter;\n\n\n/***/ },\n/* 69 */\n/***/ function(module, exports) {\n\n\t// **N3Writer** writes N3 documents.\n\t\n\t// Matches a literal as represented in memory by the N3 library\n\tvar N3LiteralMatcher = /^\"([^]*)\"(?:\\^\\^(.+)|@([\\-a-z]+))?$/i;\n\t\n\t// rdf:type predicate (for 'a' abbreviation)\n\tvar RDF_PREFIX = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',\n\t    RDF_TYPE   = RDF_PREFIX + 'type';\n\t\n\t// Characters in literals that require escaping\n\tvar escape    = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019\\ud800-\\udbff]/,\n\t    escapeAll = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019]|[\\ud800-\\udbff][\\udc00-\\udfff]/g,\n\t    escapeReplacements = { '\\\\': '\\\\\\\\', '\"': '\\\\\"', '\\t': '\\\\t',\n\t                           '\\n': '\\\\n', '\\r': '\\\\r', '\\b': '\\\\b', '\\f': '\\\\f' };\n\t\n\t// ## Constructor\n\tfunction N3Writer(outputStream, options) {\n\t  if (!(this instanceof N3Writer))\n\t    return new N3Writer(outputStream, options);\n\t\n\t  // Shift arguments if the first argument is not a stream\n\t  if (outputStream && typeof outputStream.write !== 'function')\n\t    options = outputStream, outputStream = null;\n\t  options = options || {};\n\t\n\t  // If no output stream given, send the output as string through the end callback\n\t  if (!outputStream) {\n\t    var output = '';\n\t    this._outputStream = {\n\t      write: function (chunk, encoding, done) { output += chunk; done && done(); },\n\t      end:   function (done) { done && done(null, output); },\n\t    };\n\t    this._endStream = true;\n\t  }\n\t  else {\n\t    this._outputStream = outputStream;\n\t    this._endStream = options.end === undefined ? true : !!options.end;\n\t  }\n\t\n\t  // Initialize writer, depending on the format\n\t  this._subject = null;\n\t  if (!(/triple|quad/i).test(options.format)) {\n\t    this._graph = '';\n\t    this._prefixIRIs = Object.create(null);\n\t    options.prefixes && this.addPrefixes(options.prefixes);\n\t  }\n\t  else {\n\t    this._writeTriple = this._writeTripleLine;\n\t  }\n\t}\n\t\n\tN3Writer.prototype = {\n\t  // ## Private methods\n\t\n\t  // ### `_write` writes the argument to the output stream\n\t  _write: function (string, callback) {\n\t    this._outputStream.write(string, 'utf8', callback);\n\t  },\n\t\n\t    // ### `_writeTriple` writes the triple to the output stream\n\t  _writeTriple: function (subject, predicate, object, graph, done) {\n\t    try {\n\t      // Write the graph's label if it has changed\n\t      if (this._graph !== graph) {\n\t        // Close the previous graph and start the new one\n\t        this._write((this._subject === null ? '' : (this._graph ? '\\n}\\n' : '.\\n')) +\n\t                    (graph ? this._encodeIriOrBlankNode(graph) + ' {\\n' : ''));\n\t        this._subject = null;\n\t        // Don't treat identical blank nodes as repeating graphs\n\t        this._graph = graph[0] !== '[' ? graph : ']';\n\t      }\n\t      // Don't repeat the subject if it's the same\n\t      if (this._subject === subject) {\n\t        // Don't repeat the predicate if it's the same\n\t        if (this._predicate === predicate)\n\t          this._write(', ' + this._encodeObject(object), done);\n\t        // Same subject, different predicate\n\t        else\n\t          this._write(';\\n    ' +\n\t                      this._encodePredicate(this._predicate = predicate) + ' ' +\n\t                      this._encodeObject(object), done);\n\t      }\n\t      // Different subject; write the whole triple\n\t      else\n\t        this._write((this._subject === null ? '' : '.\\n') +\n\t                    this._encodeSubject(this._subject = subject) + ' ' +\n\t                    this._encodePredicate(this._predicate = predicate) + ' ' +\n\t                    this._encodeObject(object), done);\n\t    }\n\t    catch (error) { done && done(error); }\n\t  },\n\t\n\t  // ### `_writeTripleLine` writes the triple or quad to the output stream as a single line\n\t  _writeTripleLine: function (subject, predicate, object, graph, done) {\n\t    // Don't use prefixes\n\t    delete this._prefixMatch;\n\t    // Write the triple\n\t    try {\n\t      this._write(this._encodeIriOrBlankNode(subject) + ' ' +\n\t                  this._encodeIriOrBlankNode(predicate) + ' ' +\n\t                  this._encodeObject(object) +\n\t                  (graph ? ' ' + this._encodeIriOrBlankNode(graph) + '.\\n' : '.\\n'), done);\n\t    }\n\t    catch (error) { done && done(error); }\n\t  },\n\t\n\t  // ### `_encodeIriOrBlankNode` represents an IRI or blank node\n\t  _encodeIriOrBlankNode: function (entity) {\n\t    // A blank node or list is represented as-is\n\t    var firstChar = entity[0];\n\t    if (firstChar === '[' || firstChar === '(' || firstChar === '_' && entity[1] === ':')\n\t      return entity;\n\t    // Escape special characters\n\t    if (escape.test(entity))\n\t      entity = entity.replace(escapeAll, characterReplacer);\n\t    // Try to represent the IRI as prefixed name\n\t    var prefixMatch = this._prefixRegex.exec(entity);\n\t    return !prefixMatch ? '<' + entity + '>' :\n\t           (!prefixMatch[1] ? entity : this._prefixIRIs[prefixMatch[1]] + prefixMatch[2]);\n\t  },\n\t\n\t  // ### `_encodeLiteral` represents a literal\n\t  _encodeLiteral: function (value, type, language) {\n\t    // Escape special characters\n\t    if (escape.test(value))\n\t      value = value.replace(escapeAll, characterReplacer);\n\t    // Write the literal, possibly with type or language\n\t    if (language)\n\t      return '\"' + value + '\"@' + language;\n\t    else if (type)\n\t      return '\"' + value + '\"^^' + this._encodeIriOrBlankNode(type);\n\t    else\n\t      return '\"' + value + '\"';\n\t  },\n\t\n\t  // ### `_encodeSubject` represents a subject\n\t  _encodeSubject: function (subject) {\n\t    if (subject[0] === '\"')\n\t      throw new Error('A literal as subject is not allowed: ' + subject);\n\t    // Don't treat identical blank nodes as repeating subjects\n\t    if (subject[0] === '[')\n\t      this._subject = ']';\n\t    return this._encodeIriOrBlankNode(subject);\n\t  },\n\t\n\t  // ### `_encodePredicate` represents a predicate\n\t  _encodePredicate: function (predicate) {\n\t    if (predicate[0] === '\"')\n\t      throw new Error('A literal as predicate is not allowed: ' + predicate);\n\t    return predicate === RDF_TYPE ? 'a' : this._encodeIriOrBlankNode(predicate);\n\t  },\n\t\n\t  // ### `_encodeObject` represents an object\n\t  _encodeObject: function (object) {\n\t    // Represent an IRI or blank node\n\t    if (object[0] !== '\"')\n\t      return this._encodeIriOrBlankNode(object);\n\t    // Represent a literal\n\t    var match = N3LiteralMatcher.exec(object);\n\t    if (!match) throw new Error('Invalid literal: ' + object);\n\t    return this._encodeLiteral(match[1], match[2], match[3]);\n\t  },\n\t\n\t  // ### `_blockedWrite` replaces `_write` after the writer has been closed\n\t  _blockedWrite: function () {\n\t    throw new Error('Cannot write because the writer has been closed.');\n\t  },\n\t\n\t  // ### `addTriple` adds the triple to the output stream\n\t  addTriple: function (subject, predicate, object, graph, done) {\n\t    // The triple was given as a triple object, so shift parameters\n\t    if (object === undefined)\n\t      this._writeTriple(subject.subject, subject.predicate, subject.object,\n\t                        subject.graph || '', predicate);\n\t    // The optional `graph` parameter was not provided\n\t    else if (typeof graph !== 'string')\n\t      this._writeTriple(subject, predicate, object, '', graph);\n\t    // The `graph` parameter was provided\n\t    else\n\t      this._writeTriple(subject, predicate, object, graph, done);\n\t  },\n\t\n\t  // ### `addTriples` adds the triples to the output stream\n\t  addTriples: function (triples) {\n\t    for (var i = 0; i < triples.length; i++)\n\t      this.addTriple(triples[i]);\n\t  },\n\t\n\t  // ### `addPrefix` adds the prefix to the output stream\n\t  addPrefix: function (prefix, iri, done) {\n\t    var prefixes = {};\n\t    prefixes[prefix] = iri;\n\t    this.addPrefixes(prefixes, done);\n\t  },\n\t\n\t  // ### `addPrefixes` adds the prefixes to the output stream\n\t  addPrefixes: function (prefixes, done) {\n\t    // Add all useful prefixes\n\t    var prefixIRIs = this._prefixIRIs, hasPrefixes = false;\n\t    for (var prefix in prefixes) {\n\t      // Verify whether the prefix can be used and does not exist yet\n\t      var iri = prefixes[prefix];\n\t      if (/[#\\/]$/.test(iri) && prefixIRIs[iri] !== (prefix += ':')) {\n\t        hasPrefixes = true;\n\t        prefixIRIs[iri] = prefix;\n\t        // Finish a possible pending triple\n\t        if (this._subject !== null) {\n\t          this._write(this._graph ? '\\n}\\n' : '.\\n');\n\t          this._subject = null, this._graph = '';\n\t        }\n\t        // Write prefix\n\t        this._write('@prefix ' + prefix + ' <' + iri + '>.\\n');\n\t      }\n\t    }\n\t    // Recreate the prefix matcher\n\t    if (hasPrefixes) {\n\t      var IRIlist = '', prefixList = '';\n\t      for (var prefixIRI in prefixIRIs) {\n\t        IRIlist += IRIlist ? '|' + prefixIRI : prefixIRI;\n\t        prefixList += (prefixList ? '|' : '') + prefixIRIs[prefixIRI];\n\t      }\n\t      IRIlist = IRIlist.replace(/[\\]\\/\\(\\)\\*\\+\\?\\.\\\\\\$]/g, '\\\\$&');\n\t      this._prefixRegex = new RegExp('^(?:' + prefixList + ')[^\\/]*$|' +\n\t                                     '^(' + IRIlist + ')([a-zA-Z][\\\\-_a-zA-Z0-9]*)$');\n\t    }\n\t    // End a prefix block with a newline\n\t    this._write(hasPrefixes ? '\\n' : '', done);\n\t  },\n\t\n\t  // ### `blank` creates a blank node with the given content\n\t  blank: function (predicate, object) {\n\t    var children = predicate, child, length;\n\t    // Empty blank node\n\t    if (predicate === undefined)\n\t      children = [];\n\t    // Blank node passed as blank(\"predicate\", \"object\")\n\t    else if (typeof predicate === 'string')\n\t      children = [{ predicate: predicate, object: object }];\n\t    // Blank node passed as blank({ predicate: predicate, object: object })\n\t    else if (!('length' in predicate))\n\t      children = [predicate];\n\t\n\t    switch (length = children.length) {\n\t    // Generate an empty blank node\n\t    case 0:\n\t      return '[]';\n\t    // Generate a non-nested one-triple blank node\n\t    case 1:\n\t      child = children[0];\n\t      if (child.object[0] !== '[')\n\t        return '[ ' + this._encodePredicate(child.predicate) + ' ' +\n\t                      this._encodeObject(child.object) + ' ]';\n\t    // Generate a multi-triple or nested blank node\n\t    default:\n\t      var contents = '[';\n\t      // Write all triples in order\n\t      for (var i = 0; i < length; i++) {\n\t        child = children[i];\n\t        // Write only the object is the predicate is the same as the previous\n\t        if (child.predicate === predicate)\n\t          contents += ', ' + this._encodeObject(child.object);\n\t        // Otherwise, write the predicate and the object\n\t        else {\n\t          contents += (i ? ';\\n  ' : '\\n  ') +\n\t                      this._encodePredicate(child.predicate) + ' ' +\n\t                      this._encodeObject(child.object);\n\t          predicate = child.predicate;\n\t        }\n\t      }\n\t      return contents + '\\n]';\n\t    }\n\t  },\n\t\n\t  // ### `list` creates a list node with the given content\n\t  list: function (elements) {\n\t    var length = elements && elements.length || 0, contents = new Array(length);\n\t    for (var i = 0; i < length; i++)\n\t      contents[i] = this._encodeObject(elements[i]);\n\t    return '(' + contents.join(' ') + ')';\n\t  },\n\t\n\t  // ### `_prefixRegex` matches a prefixed name or IRI that begins with one of the added prefixes\n\t  _prefixRegex: /$0^/,\n\t\n\t  // ### `end` signals the end of the output stream\n\t  end: function (done) {\n\t    // Finish a possible pending triple\n\t    if (this._subject !== null) {\n\t      this._write(this._graph ? '\\n}\\n' : '.\\n');\n\t      this._subject = null;\n\t    }\n\t    // Disallow further writing\n\t    this._write = this._blockedWrite;\n\t\n\t    // Try to end the underlying stream, ensuring done is called exactly one time\n\t    var singleDone = done && function (error, result) { singleDone = null, done(error, result); };\n\t    if (this._endStream) {\n\t      try { return this._outputStream.end(singleDone); }\n\t      catch (error) { /* error closing stream */ }\n\t    }\n\t    singleDone && singleDone();\n\t  },\n\t};\n\t\n\t// Replaces a character by its escaped version\n\tfunction characterReplacer(character) {\n\t  // Replace a single character by its escaped version\n\t  var result = escapeReplacements[character];\n\t  if (result === undefined) {\n\t    // Replace a single character with its 4-bit unicode escape sequence\n\t    if (character.length === 1) {\n\t      result = character.charCodeAt(0).toString(16);\n\t      result = '\\\\u0000'.substr(0, 6 - result.length) + result;\n\t    }\n\t    // Replace a surrogate pair with its 8-bit unicode escape sequence\n\t    else {\n\t      result = ((character.charCodeAt(0) - 0xD800) * 0x400 +\n\t                 character.charCodeAt(1) + 0x2400).toString(16);\n\t      result = '\\\\U00000000'.substr(0, 10 - result.length) + result;\n\t    }\n\t  }\n\t  return result;\n\t}\n\t\n\t// ## Exports\n\t\n\t// Export the `N3Writer` class as a whole.\n\tmodule.exports = N3Writer;\n\n\n/***/ },\n/* 70 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/*      Serialization of RDF Graphs\n\t**\n\t** Tim Berners-Lee 2006\n\t** This is or was http://dig.csail.mit.edu/2005/ajar/ajaw/js/rdf/serialize.js\n\t**\n\t** Bug: can't serialize  http://data.semanticweb.org/person/abraham-bernstein/rdf\n\t** in XML (from mhausenblas)\n\t*/\n\t// @@@ Check the whole toStr thing tosee whetehr it still makes sense -- tbl\n\tvar NamedNode = __webpack_require__(8);\n\tvar BlankNode = __webpack_require__(12);\n\tvar Uri = __webpack_require__(7);\n\tvar Util = __webpack_require__(5);\n\tvar XSD = __webpack_require__(14);\n\t\n\tvar Serializer = function () {\n\t  var __Serializer = function __Serializer(store) {\n\t    this.flags = '';\n\t    this.base = null;\n\t\n\t    this.prefixes = []; // suggested prefixes\n\t    this.namespaces = []; // complementary indexes\n\t\n\t    this.suggestPrefix('rdf', 'http://www.w3.org/1999/02/22-rdf-syntax-ns#'); // XML code assumes this!\n\t    this.suggestPrefix('xml', 'reserved:reservedForFutureUse'); // XML reserves xml: in the spec.\n\t\n\t    this.namespacesUsed = []; // Count actually used and so needed in @prefixes\n\t    this.keywords = ['a']; // The only one we generate at the moment\n\t    this.prefixchars = 'abcdefghijklmnopqustuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\t    this.incoming = null; // Array not calculated yet\n\t    this.formulas = []; // remebering original formulae from hashes\n\t    this.store = store;\n\t\n\t    /* pass */\n\t  };\n\t\n\t  __Serializer.prototype.setBase = function (base) {\n\t    this.base = base;return this;\n\t  };\n\t\n\t  __Serializer.prototype.setFlags = function (flags) {\n\t    this.flags = flags ? flags : '';return this;\n\t  };\n\t\n\t  __Serializer.prototype.toStr = function (x) {\n\t    var s = x.toNT();\n\t    if (x.termType == 'formula') {\n\t      this.formulas[s] = x; // remember as reverse does not work\n\t    }\n\t    return s;\n\t  };\n\t\n\t  __Serializer.prototype.fromStr = function (s) {\n\t    if (s[0] == '{') {\n\t      var x = this.formulas[s];\n\t      if (!x) console.log('No formula object for ' + s);\n\t      return x;\n\t    }\n\t    return this.store.fromNT(s);\n\t  };\n\t  /* Accumulate Namespaces\n\t  **\n\t  ** These are only hints.  If two overlap, only one gets used\n\t  ** There is therefore no guarantee in general.\n\t  */\n\t  __Serializer.prototype.suggestPrefix = function (prefix, uri) {\n\t    if (prefix.slice(0, 7) === 'default') return; // Try to weed these out\n\t    if (prefix.slice(0, 2) === 'ns') return; //  From others inferior algos\n\t    if (!prefix || !uri) return; // empty strings not suitable\n\t    if (prefix in this.namespaces || uri in this.prefixes) return; // already used\n\t    this.prefixes[uri] = prefix;\n\t    this.namespaces[prefix] = uri;\n\t  };\n\t\n\t  // Takes a namespace -> prefix map\n\t  __Serializer.prototype.suggestNamespaces = function (namespaces) {\n\t    for (var px in namespaces) {\n\t      this.suggestPrefix(px, namespaces[px]);\n\t      return this;\n\t    }\n\t  };\n\t\n\t  __Serializer.prototype.checkIntegrity = function () {\n\t    var p, ns;\n\t    for (p in this.namespaces) {\n\t      if (this.prefixes[this.namespaces[p]] !== p) {\n\t        throw 'Serializer integity error 1: ' + p + ', ' + this.namespaces[p] + ', ' + this.prefixes[this.namespaces[p]] + '!';\n\t      }\n\t    }\n\t    for (ns in this.prefixes) {\n\t      if (this.namespaces[this.prefixes[ns]] !== ns) {\n\t        throw 'Serializer integity error 2: ' + ns + ', ' + this.prefixs[ns] + ', ' + this.namespaces[this.prefixes[ns]] + '!';\n\t      }\n\t    }\n\t  };\n\t\n\t  // Make up an unused prefix for a random namespace\n\t  __Serializer.prototype.makeUpPrefix = function (uri) {\n\t    var p = uri;\n\t    var pok;\n\t    function canUse(pp) {\n\t      if (!__Serializer.prototype.validPrefix.test(pp)) return false; // bad format\n\t      if (pp === 'ns') return false; // boring\n\t      if (pp in this.namespaces) return false; // already used\n\t      this.prefixes[uri] = pp;\n\t      this.namespaces[pp] = uri;\n\t      pok = pp;\n\t      return true;\n\t    }\n\t    canUse = canUse.bind(this);\n\t    /*    for (var ns in this.prefixes) {\n\t            namespaces[this.prefixes[ns]] = ns // reverse index foo\n\t        }\n\t        */\n\t    if ('#/'.indexOf(p[p.length - 1]) >= 0) p = p.slice(0, -1);\n\t    var slash = p.lastIndexOf('/');\n\t    if (slash >= 0) p = p.slice(slash + 1);\n\t    var i = 0;\n\t    while (i < p.length) {\n\t      if (this.prefixchars.indexOf(p[i])) i++;else break;\n\t    }p = p.slice(0, i);\n\t    if (p.length < 6 && canUse(p)) return pok; // exact i sbest\n\t    if (canUse(p.slice(0, 3))) return pok;\n\t    if (canUse(p.slice(0, 2))) return pok;\n\t    if (canUse(p.slice(0, 4))) return pok;\n\t    if (canUse(p.slice(0, 1))) return pok;\n\t    if (canUse(p.slice(0, 5))) return pok;\n\t    if (!__Serializer.prototype.validPrefix.test(p)) {\n\t      p = 'n'; // Otherwise the loop below may never termimnate\n\t    }\n\t    for (var i = 0;; i++) {\n\t      if (canUse(p.slice(0, 3) + i)) return pok;\n\t    }\n\t  };\n\t  // Todo:\n\t  //  - Sort the statements by subject, pred, object\n\t  //  - do stuff about the docu first and then (or first) about its primary topic.\n\t\n\t  __Serializer.prototype.rootSubjects = function (sts) {\n\t    var incoming = {};\n\t    var subjects = {};\n\t    var allBnodes = {};\n\t\n\t    /* This scan is to find out which nodes will have to be the roots of trees\n\t    ** in the serialized form. This will be any symbols, and any bnodes\n\t    ** which hve more or less than one incoming arc, and any bnodes which have\n\t    ** one incoming arc but it is an uninterrupted loop of such nodes back to itself.\n\t    ** This should be kept linear time with repect to the number of statements.\n\t    ** Note it does not use any indexing of the store.\n\t    */\n\t    // $rdf.log.debug('serialize.js Find bnodes with only one incoming arc\\n')\n\t    for (var i = 0; i < sts.length; i++) {\n\t      var st = sts[i];\n\t      var st2 = [st.subject, st.predicate, st.object];\n\t      st2.map(function (y) {\n\t        if (y.termType == 'BlankNode') {\n\t          allBnodes[y.toNT()] = true;\n\t        }\n\t      });\n\t      var x = sts[i].object;\n\t      if (!incoming.hasOwnProperty(x)) incoming[x] = [];\n\t      incoming[x].push(st.subject); // List of things which will cause this to be printed\n\t      var ss = subjects[this.toStr(st.subject)]; // Statements with this as subject\n\t      if (!ss) ss = [];\n\t      ss.push(st);\n\t      subjects[this.toStr(st.subject)] = ss; // Make hash. @@ too slow for formula?\n\t      // $rdf.log.debug(' sz potential subject: '+sts[i].subject)\n\t    }\n\t\n\t    var roots = [];\n\t    for (var xNT in subjects) {\n\t      if (!subjects.hasOwnProperty(xNT)) continue;\n\t      var x = this.fromStr(xNT);\n\t      if (x.termType != 'BlankNode' || !incoming[x] || incoming[x].length != 1) {\n\t        roots.push(x);\n\t        // $rdf.log.debug(' sz actual subject -: ' + x)\n\t        continue;\n\t      }\n\t    }\n\t    this.incoming = incoming; // Keep for serializing @@ Bug for nested formulas\n\t\n\t    // ////////// New bit for CONNECTED bnode loops:frootshash\n\t\n\t    // This scans to see whether the serialization is gpoing to lead to a bnode loop\n\t    // and at the same time accumulates a list of all bnodes mentioned.\n\t    // This is in fact a cut down N3 serialization\n\t    /*\n\t        // $rdf.log.debug('serialize.js Looking for connected bnode loops\\n')\n\t        for (var i=0; i<sts.length; i++) { // @@TBL\n\t            // dump('\\t'+sts[i]+'\\n')\n\t        }\n\t        var doneBnodesNT = {}\n\t        function dummyPropertyTree(subject, subjects, rootsHash) {\n\t            // dump('dummyPropertyTree('+subject+'...)\\n')\n\t            var sts = subjects[sz.toStr(subject)] // relevant statements\n\t            for (var i=0; i<sts.length; i++) {\n\t                dummyObjectTree(sts[i].object, subjects, rootsHash)\n\t            }\n\t        }\n\t         // Convert a set of statements into a nested tree of lists and strings\n\t        // @param force,    \"we know this is a root, do it anyway. It isn't a loop.\"\n\t        function dummyObjectTree(obj, subjects, rootsHash, force) {\n\t            // dump('dummyObjectTree('+obj+'...)\\n')\n\t            if (obj.termType == 'BlankNode' && (subjects[sz.toStr(obj)]  &&\n\t                (force || (rootsHash[obj.toNT()] == undefined )))) {// and there are statements\n\t                if (doneBnodesNT[obj.toNT()]) { // Ah-ha! a loop\n\t                    throw \"Serializer: Should be no loops \"+obj\n\t                }\n\t                doneBnodesNT[obj.toNT()] = true\n\t                return  dummyPropertyTree(obj, subjects, rootsHash)\n\t            }\n\t            return dummyTermToN3(obj, subjects, rootsHash)\n\t        }\n\t         // Scan for bnodes nested inside lists too\n\t        function dummy  subjects, rootsHash) {\n\t            if (expr.termType == 'BlankNode') doneBnodesNT[expr.toNT()] = true\n\t            // $rdf.log.debug('serialize: seen '+expr)\n\t            if (expr.termType == 'collection') {\n\t                for (i=0; i<expr.elements.length; i++) {\n\t                    if (expr.elements[i].termType == 'BlankNode')\n\t                        dummyObjectTree(expr.elements[i], subjects, rootsHash)\n\t                }\n\t            return\n\t            }\n\t        }\n\t         // The tree for a subject\n\t        function dummySubjectTree(subject, subjects, rootsHash) {\n\t            // dump('dummySubjectTree('+subject+'...)\\n')\n\t            if (subject.termType == 'BlankNode' && !incoming[subject])\n\t                return dummyObjectTree(subject, subjects, rootsHash, true) // Anonymous bnode subject\n\t            dummyTermToN3(subject, subjects, rootsHash)\n\t            dummyPropertyTree(subject, subjects, rootsHash)\n\t        }\n\t    */\n\t    // Now do the scan using existing roots\n\t    // $rdf.log.debug('serialize.js Dummy serialize to check for missing nodes')\n\t    var rootsHash = {};\n\t    for (var i = 0; i < roots.length; i++) {\n\t      rootsHash[roots[i].toNT()] = true;\n\t    } /*\n\t          for (var i=0; i<roots.length; i++) {\n\t              var root = roots[i]\n\t              dummySubjectTree(root, subjects, rootsHash)\n\t          }\n\t          // dump('Looking for mising bnodes...\\n')\n\t       // Now in new roots for anythig not acccounted for\n\t      // Now we check for any bndoes which have not been covered.\n\t      // Such bnodes must be in isolated rings of pure bnodes.\n\t      // They each have incoming link of 1.\n\t           // $rdf.log.debug('serialize.js Looking for connected bnode loops\\n')\n\t          for (;;) {\n\t              var bnt\n\t              var found = null\n\t              for (bnt in allBnodes) { // @@ Note: not repeatable. No canonicalisation\n\t                  if (doneBnodesNT[bnt]) continue\n\t                  found = bnt; // Ah-ha! not covered\n\t                  break\n\t              }\n\t              if (found == null) break; // All done - no bnodes left out/\n\t              // dump('Found isolated bnode:'+found+'\\n')\n\t              doneBnodesNT[bnt] = true\n\t              var root = this.store.fromNT(found)\n\t              roots.push(root) // Add a new root\n\t              rootsHash[found] = true\n\t              // $rdf.log.debug('isolated bnode:'+found+', subjects[found]:'+subjects[found]+'\\n')\n\t              if (subjects[found] == undefined) {\n\t                  for (var i=0; i<sts.length; i++) {\n\t                      // dump('\\t'+sts[i]+'\\n')\n\t                  }\n\t                  throw \"Isolated node should be a subject\" +found\n\t              }\n\t              dummySubjectTree(root, subjects, rootsHash) // trace out the ring\n\t          }\n\t          // dump('Done bnode adjustments.\\n')\n\t      */\n\t    return { 'roots': roots, 'subjects': subjects,\n\t      'rootsHash': rootsHash, 'incoming': incoming };\n\t  };\n\t\n\t  // //////////////////////////////////////////////////////\n\t\n\t  __Serializer.prototype.toN3 = function (f) {\n\t    return this.statementsToN3(f.statements);\n\t  };\n\t\n\t  __Serializer.prototype._notQNameChars = '\\t\\r\\n !\"#$%&\\'()*.,+/;<=>?@[\\\\]^`{|}~';\n\t  __Serializer.prototype._notNameChars = __Serializer.prototype._notQNameChars + ':';\n\t\n\t  __Serializer.prototype.explicitURI = function (uri) {\n\t    if (this.flags.indexOf('r') < 0 && this.base) uri = Uri.refTo(this.base, uri);else if (this.flags.indexOf('u') >= 0) // Unicode encoding NTriples style\n\t      uri = backslashUify(uri);else uri = hexify(uri);\n\t    return '<' + uri + '>';\n\t  };\n\t\n\t  __Serializer.prototype.statementsToNTriples = function (sts) {\n\t    var sorted = sts.slice();\n\t    sorted.sort();\n\t    var str = '';\n\t    var rdfns = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#';\n\t    var self = this;\n\t    var kb = this.store;\n\t    var termToNT = function termToNT(x) {\n\t      if (x.termType !== 'collection') {\n\t        return self.atomicTermToN3(x);\n\t      }\n\t      var list = x.elements;\n\t      var rest = kb.sym(rdfns + 'nill');\n\t      for (var i = list.length - 1; i >= 0; i--) {\n\t        var bnode = new BlankNode();\n\t        str += termToNT(bnode) + ' ' + termToNT(kb.sym(rdfns + 'first')) + ' ' + termToNT(list[i]) + '.\\n';\n\t        str += termToNT(bnode) + ' ' + termToNT(kb.sym(rdfns + 'rest')) + ' ' + termToNT(rest) + '.\\n';\n\t        rest = bnode;\n\t      }\n\t      return self.atomicTermToN3(rest);\n\t    };\n\t    for (var i = 0; i < sorted.length; i++) {\n\t      var st = sorted[i];\n\t      var s = '';\n\t      s += termToNT(st.subject) + ' ';\n\t      s += termToNT(st.predicate) + ' ';\n\t      s += termToNT(st.object) + ' ';\n\t      if (this.flags.indexOf('q') >= 0) {\n\t        // Do quads not nrtiples\n\t        s += termToNT(st.why) + ' ';\n\t      }\n\t      s += '.\\n';\n\t      str += s;\n\t    }\n\t    return str;\n\t  };\n\t\n\t  __Serializer.prototype.statementsToN3 = function (sts) {\n\t    var indent = 4;\n\t    var width = 80;\n\t\n\t    var predMap = {};\n\t\n\t    if (this.flags.indexOf('s') < 0) {\n\t      predMap['http://www.w3.org/2002/07/owl#sameAs'] = '=';\n\t    }\n\t    if (this.flags.indexOf('t') < 0) {\n\t      predMap['http://www.w3.org/1999/02/22-rdf-syntax-ns#type'] = 'a';\n\t    }\n\t    if (this.flags.indexOf('i') < 0) {\n\t      predMap['http://www.w3.org/2000/10/swap/log#implies'] = '=>';\n\t    }\n\t    // //////////////////////// Arrange the bits of text\n\t\n\t    var spaces = function spaces(n) {\n\t      var s = '';\n\t      for (var i = 0; i < n; i++) {\n\t        s += ' ';\n\t      }return s;\n\t    };\n\t\n\t    var treeToLine = function treeToLine(tree) {\n\t      var str = '';\n\t      for (var i = 0; i < tree.length; i++) {\n\t        var branch = tree[i];\n\t        var s2 = typeof branch == 'string' ? branch : treeToLine(branch);\n\t        // Note the space before the dot in case statement ends 123. which is in fact allowed but be conservative.\n\t        if (i != 0 && s2 != ',' && s2 != ';') str += ' '; // was also:  && s2 != '.'\n\t        str += s2;\n\t      }\n\t      return str;\n\t    };\n\t\n\t    // Convert a nested tree of lists and strings to a string\n\t    var treeToString = function treeToString(tree, level) {\n\t      var str = '';\n\t      var lastLength = 100000;\n\t      if (!level) level = 0;\n\t      for (var i = 0; i < tree.length; i++) {\n\t        var branch = tree[i];\n\t        if (typeof branch != 'string') {\n\t          var substr = treeToString(branch, level + 1);\n\t          if (substr.length < 10 * (width - indent * level) && substr.indexOf('\"\"\"') < 0) {\n\t            // Don't mess up multiline strings\n\t            var line = treeToLine(branch);\n\t            if (line.length < width - indent * level) {\n\t              branch = '   ' + line; //   @@ Hack: treat as string below\n\t              substr = '';\n\t            }\n\t          }\n\t          if (substr) lastLength = 10000;\n\t          str += substr;\n\t        }\n\t        if (typeof branch == 'string') {\n\t          if (branch.length == '1' && str.slice(-1) == '\\n') {\n\t            if (',.;'.indexOf(branch) >= 0) {\n\t              str = str.slice(0, -1) + branch + '\\n'; //  slip punct'n on end\n\t              lastLength += 1;\n\t              continue;\n\t            } else if ('])}'.indexOf(branch) >= 0) {\n\t              str = str.slice(0, -1) + ' ' + branch + '\\n';\n\t              lastLength += 2;\n\t              continue;\n\t            }\n\t          }\n\t          if (lastLength < indent * level + 4) {\n\t            // continue\n\t            str = str.slice(0, -1) + ' ' + branch + '\\n';\n\t            lastLength += branch.length + 1;\n\t          } else {\n\t            var line = spaces(indent * level) + branch;\n\t            str += line + '\\n';\n\t            lastLength = line.length;\n\t          }\n\t        } else {// not string\n\t        }\n\t      }\n\t      return str;\n\t    };\n\t\n\t    // //////////////////////////////////////////// Structure for N3\n\t    // Convert a set of statements into a nested tree of lists and strings\n\t    function statementListToTree(statements) {\n\t      // print('Statement tree for '+statements.length)\n\t      var res = [];\n\t      var stats = this.rootSubjects(statements);\n\t      var roots = stats.roots;\n\t      var results = [];\n\t      for (var i = 0; i < roots.length; i++) {\n\t        var root = roots[i];\n\t        results.push(subjectTree(root, stats));\n\t      }\n\t      return results;\n\t    }\n\t    statementListToTree = statementListToTree.bind(this);\n\t\n\t    // The tree for a subject\n\t    function subjectTree(subject, stats) {\n\t      if (subject.termType == 'BlankNode' && !stats.incoming[subject]) return objectTree(subject, stats, true).concat(['.']); // Anonymous bnode subject\n\t      return [termToN3(subject, stats)].concat([propertyTree(subject, stats)]).concat(['.']);\n\t    }\n\t    // The property tree for a single subject or anonymous node\n\t    function propertyTree(subject, stats) {\n\t      // print('Proprty tree for '+subject)\n\t      var results = [];\n\t      var lastPred = null;\n\t      var sts = stats.subjects[this.toStr(subject)]; // relevant statements\n\t      if (typeof sts == 'undefined') {\n\t        throw 'Cant find statements for ' + subject;\n\t      }\n\t\n\t      var SPO = function SPO(x, y) {\n\t        return Util.heavyCompareSPO(x, y, this.store);\n\t      };\n\t      sts.sort(); // 2014-09-30\n\t      //        sts.sort(SPO); // 2014-09-30\n\t      var objects = [];\n\t      for (var i = 0; i < sts.length; i++) {\n\t        var st = sts[i];\n\t        if (st.predicate.uri == lastPred) {\n\t          objects.push(',');\n\t        } else {\n\t          if (lastPred) {\n\t            results = results.concat([objects]).concat([';']);\n\t            objects = [];\n\t          }\n\t          results.push(predMap[st.predicate.uri] ? predMap[st.predicate.uri] : termToN3(st.predicate, stats));\n\t        }\n\t        lastPred = st.predicate.uri;\n\t        objects.push(objectTree(st.object, stats));\n\t      }\n\t      results = results.concat([objects]);\n\t      return results;\n\t    }\n\t    propertyTree = propertyTree.bind(this);\n\t\n\t    function objectTree(obj, stats, force) {\n\t      if (obj.termType == 'BlankNode' && stats.subjects[this.toStr(obj)] && ( // and there are statements\n\t      force || stats.rootsHash[obj.toNT()] == undefined)) // and not a root\n\t        return ['['].concat(propertyTree(obj, stats)).concat([']']);\n\t      return termToN3(obj, stats);\n\t    }\n\t    objectTree = objectTree.bind(this);\n\t\n\t    function termToN3(expr, stats) {\n\t      //\n\t      var i;\n\t      switch (expr.termType) {\n\t        case 'formula':\n\t          var res = ['{'];\n\t          res = res.concat(statementListToTree(expr.statements));\n\t          return res.concat(['}']);\n\t\n\t        case 'collection':\n\t          var res = ['('];\n\t          for (i = 0; i < expr.elements.length; i++) {\n\t            res.push([objectTree(expr.elements[i], stats)]);\n\t          }\n\t          res.push(')');\n\t          return res;\n\t\n\t        default:\n\t          return this.atomicTermToN3(expr);\n\t      }\n\t    }\n\t    __Serializer.prototype.termToN3 = termToN3;\n\t    termToN3 = termToN3.bind(this);\n\t\n\t    function prefixDirectives() {\n\t      var str = '';\n\t      if (this.defaultNamespace) str += '@prefix : <' + this.defaultNamespace + '>.\\n';\n\t      for (var ns in this.prefixes) {\n\t        if (!this.prefixes.hasOwnProperty(ns)) continue;\n\t        if (!this.namespacesUsed[ns]) continue;\n\t        str += '@prefix ' + this.prefixes[ns] + ': ' + this.explicitURI(ns) + '.\\n';\n\t      }\n\t      return str + '\\n';\n\t    }\n\t    var prefixDirectives = prefixDirectives.bind(this);\n\t\n\t    // Body of statementsToN3:\n\t\n\t    var tree = statementListToTree(sts);\n\t    return prefixDirectives() + treeToString(tree, -1);\n\t  };\n\t  // //////////////////////////////////////////// Atomic Terms\n\t\n\t  //  Deal with term level things and nesting with no bnode structure\n\t  __Serializer.prototype.atomicTermToN3 = function atomicTermToN3(expr, stats) {\n\t    switch (expr.termType) {\n\t      case 'BlankNode':\n\t      case 'Variable':\n\t        return expr.toNT();\n\t      case 'Literal':\n\t        if (expr.datatype && this.flags.indexOf('x') < 0) {\n\t          // Supress native numbers\n\t          switch (expr.datatype.uri) {\n\t            case 'http://www.w3.org/2001/XMLSchema#integer':\n\t              return expr.value.toString();\n\t\n\t            // case 'http://www.w3.org/2001/XMLSchema#double': // Must force use of 'e'\n\t\n\t            case 'http://www.w3.org/2001/XMLSchema#boolean':\n\t              return expr.value ? 'true' : 'false';\n\t          }\n\t        }\n\t        var str = this.stringToN3(expr.value);\n\t        if (expr.language) {\n\t          str += '@' + expr.language;\n\t        } else if (!expr.datatype.equals(XSD.string)) {\n\t          str += '^^' + this.atomicTermToN3(expr.datatype, stats);\n\t        }\n\t        return str;\n\t      case 'NamedNode':\n\t        return this.symbolToN3(expr);\n\t      default:\n\t        throw 'Internal: atomicTermToN3 cannot handle ' + expr + ' of termType: ' + expr.termType + '\\n';\n\t        return '' + expr;\n\t    }\n\t  };\n\t\n\t  //  stringToN3:  String escaping for N3\n\t\n\t  __Serializer.prototype.validPrefix = new RegExp(/^[a-zA-Z][a-zA-Z0-9]*$/);\n\t\n\t  __Serializer.prototype.forbidden1 = new RegExp(/[\\\\\"\\b\\f\\r\\v\\t\\n\\u0080-\\uffff]/gm);\n\t  __Serializer.prototype.forbidden3 = new RegExp(/[\\\\\"\\b\\f\\r\\v\\u0080-\\uffff]/gm);\n\t  __Serializer.prototype.stringToN3 = function stringToN3(str, flags) {\n\t    if (!flags) flags = 'e';\n\t    var res = '',\n\t        i = 0,\n\t        j = 0;\n\t    var delim;\n\t    var forbidden;\n\t    if (str.length > 20 // Long enough to make sense\n\t    && str.slice(-1) != '\"' // corner case'\n\t    && flags.indexOf('n') < 0 // Force single line\n\t    && (str.indexOf('\\n') > 0 || str.indexOf('\"') > 0)) {\n\t      delim = '\"\"\"';\n\t      forbidden = __Serializer.prototype.forbidden3;\n\t    } else {\n\t      delim = '\"';\n\t      forbidden = __Serializer.prototype.forbidden1;\n\t    }\n\t    for (var i = 0; i < str.length;) {\n\t      forbidden.lastIndex = 0;\n\t      var m = forbidden.exec(str.slice(i));\n\t      if (m == null) break;\n\t      j = i + forbidden.lastIndex - 1;\n\t      res += str.slice(i, j);\n\t      var ch = str[j];\n\t      if (ch == '\"' && delim == '\"\"\"' && str.slice(j, j + 3) != '\"\"\"') {\n\t        res += ch;\n\t      } else {\n\t        var k = '\\b\\f\\r\\t\\v\\n\\\\\"'.indexOf(ch); // No escaping of bell (7)?\n\t        if (k >= 0) {\n\t          res += '\\\\' + 'bfrtvn\\\\\"'[k];\n\t        } else {\n\t          if (flags.indexOf('e') >= 0) {\n\t            // Unicode escaping in strings not unix style\n\t            res += '\\\\u' + ('000' + ch.charCodeAt(0).toString(16).toLowerCase()).slice(-4);\n\t          } else {\n\t            // no 'e' flag\n\t            res += ch;\n\t          }\n\t        }\n\t      }\n\t      i = j + 1;\n\t    }\n\t    return delim + res + str.slice(i) + delim;\n\t  };\n\t  //  A single symbol, either in  <> or namespace notation\n\t\n\t  __Serializer.prototype.symbolToN3 = function symbolToN3(x) {\n\t    // c.f. symbolString() in notation3.py\n\t    var uri = x.uri;\n\t    var j = uri.indexOf('#');\n\t    if (j < 0 && this.flags.indexOf('/') < 0) {\n\t      j = uri.lastIndexOf('/');\n\t    }\n\t    if (j >= 0 && this.flags.indexOf('p') < 0 && (\n\t    // Can split at namespace but only if http[s]: URI or file: or ws[s] (why not others?)\n\t    uri.indexOf('http') === 0 || uri.indexOf('ws') === 0 || uri.indexOf('file') === 0)) {\n\t      var canSplit = true;\n\t      for (var k = j + 1; k < uri.length; k++) {\n\t        if (__Serializer.prototype._notNameChars.indexOf(uri[k]) >= 0) {\n\t          canSplit = false;\n\t          break;\n\t        }\n\t      }\n\t\n\t      if (uri.slice(0, j + 1) == this.base + '#') {\n\t        // base-relative\n\t        return '<#' + uri.slice(j + 1) + '>';\n\t      }\n\t      if (canSplit) {\n\t        var localid = uri.slice(j + 1);\n\t        var namesp = uri.slice(0, j + 1);\n\t        if (this.defaultNamespace && this.defaultNamespace == namesp && this.flags.indexOf('d') < 0) {\n\t          // d -> suppress default\n\t          if (this.flags.indexOf('k') >= 0 && this.keyords.indexOf(localid) < 0) return localid;\n\t          return ':' + localid;\n\t        }\n\t        this.checkIntegrity(); //  @@@ Remove when not testing\n\t        var prefix = this.prefixes[namesp];\n\t        if (!prefix) prefix = this.makeUpPrefix(namesp);\n\t        if (prefix) {\n\t          this.namespacesUsed[namesp] = true;\n\t          return prefix + ':' + localid;\n\t        }\n\t        // Fall though if can't do qname\n\t      }\n\t    }\n\t    return this.explicitURI(uri);\n\t  };\n\t\n\t  // String escaping utilities\n\t\n\t  function hexify(str) {\n\t    // also used in parser\n\t    return encodeURI(str);\n\t  }\n\t\n\t  function backslashUify(str) {\n\t    var res = '',\n\t        k;\n\t    for (var i = 0; i < str.length; i++) {\n\t      k = str.charCodeAt(i);\n\t      if (k > 65535) res += '\\\\U' + ('00000000' + k.toString(16)).slice(-8); // convert to upper?\n\t      else if (k > 126) res += '\\\\u' + ('0000' + k.toString(16)).slice(-4);else res += str[i];\n\t    }\n\t    return res;\n\t  }\n\t\n\t  // /////////////////////////// Quad store serialization\n\t\n\t  // @para. write  - a function taking a single string to be output\n\t  //\n\t  __Serializer.prototype.writeStore = function (write) {\n\t    var kb = this.store;\n\t    var fetcher = kb.fetcher;\n\t    var session = fetcher && fetcher.appNode;\n\t\n\t    // The core data\n\t\n\t    var sources = this.store.index[3];\n\t    for (var s in sources) {\n\t      // -> assume we can use -> as short for log:semantics\n\t      var source = kb.fromNT(s);\n\t      if (session && source.sameTerm(session)) continue;\n\t      write('\\n' + this.atomicTermToN3(source) + ' ' + this.atomicTermToN3(kb.sym('http://www.w3.org/2000/10/swap/log#semantics')) + ' { ' + this.statementsToN3(kb.statementsMatching(undefined, undefined, undefined, source)) + ' }.\\n');\n\t    }\n\t\n\t    // The metadata from HTTP interactions:\n\t\n\t    kb.statementsMatching(undefined, kb.sym('http://www.w3.org/2007/ont/link#requestedURI')).map(function (st) {\n\t      write('\\n<' + st.object.value + '> log:metadata {\\n');\n\t      var sts = kb.statementsMatching(undefined, undefined, undefined, st.subject);\n\t      write(this.statementsToN3(this.statementsToN3(sts)));\n\t      write('}.\\n');\n\t    });\n\t\n\t    // Inferences we have made ourselves not attributable to anyone else\n\t\n\t    var metaSources = [];\n\t    if (session) metaSources.push(session);\n\t    var metadata = [];\n\t    metaSources.map(function (source) {\n\t      metadata = metadata.concat(kb.statementsMatching(undefined, undefined, undefined, source));\n\t    });\n\t    write(this.statementsToN3(metadata));\n\t  };\n\t\n\t  // ////////////////////////////////////////////// XML serialization\n\t\n\t  __Serializer.prototype.statementsToXML = function (sts) {\n\t    var indent = 4;\n\t    var width = 80;\n\t\n\t    var namespaceCounts = []; // which have been used\n\t    namespaceCounts['http://www.w3.org/1999/02/22-rdf-syntax-ns#'] = true;\n\t\n\t    var liPrefix = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#_'; // prefix for ordered list items\n\t\n\t    // //////////////////////// Arrange the bits of XML text\n\t\n\t    var spaces = function spaces(n) {\n\t      var s = '';\n\t      for (var i = 0; i < n; i++) {\n\t        s += ' ';\n\t      }return s;\n\t    };\n\t\n\t    var XMLtreeToLine = function XMLtreeToLine(tree) {\n\t      var str = '';\n\t      for (var i = 0; i < tree.length; i++) {\n\t        var branch = tree[i];\n\t        var s2 = typeof branch == 'string' ? branch : XMLtreeToLine(branch);\n\t        str += s2;\n\t      }\n\t      return str;\n\t    };\n\t\n\t    // Convert a nested tree of lists and strings to a string\n\t    var XMLtreeToString = function XMLtreeToString(tree, level) {\n\t      var str = '';\n\t      var lastLength = 100000;\n\t      if (!level) level = 0;\n\t      for (var i = 0; i < tree.length; i++) {\n\t        var branch = tree[i];\n\t        if (typeof branch != 'string') {\n\t          var substr = XMLtreeToString(branch, level + 1);\n\t          if (substr.length < 10 * (width - indent * level) && substr.indexOf('\"\"\"') < 0) {\n\t            // Don't mess up multiline strings\n\t            var line = XMLtreeToLine(branch);\n\t            if (line.length < width - indent * level) {\n\t              branch = '   ' + line; //   @@ Hack: treat as string below\n\t              substr = '';\n\t            }\n\t          }\n\t          if (substr) lastLength = 10000;\n\t          str += substr;\n\t        }\n\t        if (typeof branch == 'string') {\n\t          if (lastLength < indent * level + 4) {\n\t            // continue\n\t            str = str.slice(0, -1) + ' ' + branch + '\\n';\n\t            lastLength += branch.length + 1;\n\t          } else {\n\t            var line = spaces(indent * level) + branch;\n\t            str += line + '\\n';\n\t            lastLength = line.length;\n\t          }\n\t        } else {// not string\n\t        }\n\t      }\n\t      return str;\n\t    };\n\t\n\t    function statementListToXMLTree(statements) {\n\t      this.suggestPrefix('rdf', 'http://www.w3.org/1999/02/22-rdf-syntax-ns#');\n\t      var stats = this.rootSubjects(statements);\n\t      var roots = stats.roots;\n\t      var results = [];\n\t      for (var i = 0; i < roots.length; i++) {\n\t        root = roots[i];\n\t        results.push(subjectXMLTree(root, stats));\n\t      }\n\t      return results;\n\t    }\n\t    statementListToXMLTree = statementListToXMLTree.bind(this);\n\t\n\t    function escapeForXML(str) {\n\t      if (typeof str == 'undefined') return '@@@undefined@@@@';\n\t      return str.replace(/[&<\"]/g, function (m) {\n\t        switch (m[0]) {\n\t          case '&':\n\t            return '&amp;';\n\t          case '<':\n\t            return '&lt;';\n\t          case '\"':\n\t            return '&quot;'; // '\n\t        }\n\t      });\n\t    }\n\t\n\t    function relURI(term) {\n\t      return escapeForXML(this.base ? Util.uri.refTo(this.base, term.uri) : term.uri);\n\t    }\n\t    relURI = relURI.bind(this);\n\t\n\t    // The tree for a subject\n\t    function subjectXMLTree(subject, stats) {\n\t      var results = [];\n\t      var type, t, st, pred;\n\t      var sts = stats.subjects[this.toStr(subject)]; // relevant statements\n\t      if (typeof sts == 'undefined') {\n\t        throw 'Serializing XML - Cant find statements for ' + subject;\n\t      }\n\t\n\t      // Sort only on the predicate, leave the order at object\n\t      // level undisturbed.  This leaves multilingual content in\n\t      // the order of entry (for partner literals), which helps\n\t      // readability.\n\t      //\n\t      // For the predicate sort, we attempt to split the uri\n\t      // as a hint to the sequence\n\t      sts.sort(function (a, b) {\n\t        var ap = a.predicate.uri;\n\t        var bp = b.predicate.uri;\n\t        if (ap.substring(0, liPrefix.length) == liPrefix || bp.substring(0, liPrefix.length) == liPrefix) {\n\t          // we're only interested in sorting list items\n\t          return ap.localeCompare(bp);\n\t        }\n\t\n\t        var as = ap.substring(liPrefix.length);\n\t        var bs = bp.substring(liPrefix.length);\n\t        var an = parseInt(as);\n\t        var bn = parseInt(bs);\n\t        if (isNaN(an) || isNaN(bn) || an != as || bn != bs) {\n\t          // we only care about integers\n\t          return ap.localeCompare(bp);\n\t        }\n\t\n\t        return an - bn;\n\t      });\n\t\n\t      for (var i = 0; i < sts.length; i++) {\n\t        st = sts[i];\n\t        // look for a type\n\t        if (st.predicate.uri == 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type' && !type && st.object.termType == 'symbol') {\n\t          type = st.object;\n\t          continue; // don't include it as a child element\n\t        }\n\t\n\t        // see whether predicate can be replaced with \"li\"\n\t        pred = st.predicate;\n\t        if (pred.uri.substr(0, liPrefix.length) == liPrefix) {\n\t          var number = pred.uri.substr(liPrefix.length);\n\t          // make sure these are actually numeric list items\n\t          var intNumber = parseInt(number);\n\t          if (number == intNumber.toString()) {\n\t            // was numeric; don't need to worry about ordering since we've already\n\t            // sorted the statements\n\t            pred = new NamedNode('http://www.w3.org/1999/02/22-rdf-syntax-ns#li');\n\t          }\n\t        }\n\t\n\t        t = qname(pred);\n\t        switch (st.object.termType) {\n\t          case 'BlankNode':\n\t            if (stats.incoming[st.object].length == 1) {\n\t              // there should always be something in the incoming array for a bnode\n\t              results = results.concat(['<' + t + '>', subjectXMLTree(st.object, stats), '</' + t + '>']);\n\t            } else {\n\t              results = results.concat(['<' + t + ' rdf:nodeID=\"' + st.object.toNT().slice(2) + '\"/>']);\n\t            }\n\t            break;\n\t          case 'NamedNode':\n\t            results = results.concat(['<' + t + ' rdf:resource=\"' + relURI(st.object) + '\"/>']);\n\t            break;\n\t          case 'Literal':\n\t            results = results.concat(['<' + t + (st.object.datatype.equals(XSD.string) ? '' : ' rdf:datatype=\"' + escapeForXML(st.object.datatype.uri) + '\"') + (st.object.language ? ' xml:lang=\"' + st.object.language + '\"' : '') + '>' + escapeForXML(st.object.value) + '</' + t + '>']);\n\t            break;\n\t          case 'collection':\n\t            results = results.concat(['<' + t + ' rdf:parseType=\"Collection\">', collectionXMLTree(st.object, stats), '</' + t + '>']);\n\t            break;\n\t          default:\n\t            throw \"Can't serialize object of type \" + st.object.termType + ' into XML';\n\t        } // switch\n\t      }\n\t\n\t      var tag = type ? qname(type) : 'rdf:Description';\n\t\n\t      var attrs = '';\n\t      if (subject.termType == 'BlankNode') {\n\t        if (!stats.incoming[subject] || stats.incoming[subject].length != 1) {\n\t          // not an anonymous bnode\n\t          attrs = ' rdf:nodeID=\"' + subject.toNT().slice(2) + '\"';\n\t        }\n\t      } else {\n\t        attrs = ' rdf:about=\"' + relURI(subject) + '\"';\n\t      }\n\t\n\t      return ['<' + tag + attrs + '>'].concat([results]).concat(['</' + tag + '>']);\n\t    }\n\t\n\t    subjectXMLTree = subjectXMLTree.bind(this);\n\t\n\t    function collectionXMLTree(subject, stats) {\n\t      var res = [];\n\t      for (var i = 0; i < subject.elements.length; i++) {\n\t        res.push(subjectXMLTree(subject.elements[i], stats));\n\t      }\n\t      return res;\n\t    }\n\t\n\t    // The property tree for a single subject or anonymos node\n\t    function propertyXMLTree(subject, stats) {\n\t      var results = [];\n\t      var sts = stats.subjects[this.toStr(subject)]; // relevant statements\n\t      if (sts == undefined) return results; // No relevant statements\n\t      sts.sort();\n\t      for (var i = 0; i < sts.length; i++) {\n\t        var st = sts[i];\n\t        switch (st.object.termType) {\n\t          case 'BlankNode':\n\t            if (stats.rootsHash[st.object.toNT()]) {\n\t              // This bnode has been done as a root -- no content here @@ what bout first time\n\t              results = results.concat(['<' + qname(st.predicate) + ' rdf:nodeID=\"' + st.object.toNT().slice(2) + '\">', '</' + qname(st.predicate) + '>']);\n\t            } else {\n\t              results = results.concat(['<' + qname(st.predicate) + ' rdf:parseType=\"Resource\">', propertyXMLTree(st.object, stats), '</' + qname(st.predicate) + '>']);\n\t            }\n\t            break;\n\t          case 'NamedNode':\n\t            results = results.concat(['<' + qname(st.predicate) + ' rdf:resource=\"' + relURI(st.object) + '\"/>']);\n\t            break;\n\t          case 'Literal':\n\t            results = results.concat(['<' + qname(st.predicate) + (st.object.datatype.equals(XSD.string) ? '' : ' rdf:datatype=\"' + escapeForXML(st.object.datatype.value) + '\"') + (st.object.language ? ' xml:lang=\"' + st.object.language + '\"' : '') + '>' + escapeForXML(st.object.value) + '</' + qname(st.predicate) + '>']);\n\t            break;\n\t          case 'collection':\n\t            results = results.concat(['<' + qname(st.predicate) + ' rdf:parseType=\"Collection\">', collectionXMLTree(st.object, stats), '</' + qname(st.predicate) + '>']);\n\t            break;\n\t          default:\n\t            throw \"Can't serialize object of type \" + st.object.termType + ' into XML';\n\t\n\t        } // switch\n\t      }\n\t      return results;\n\t    }\n\t    propertyXMLTree = propertyXMLTree.bind(this);\n\t\n\t    function qname(term) {\n\t      var uri = term.uri;\n\t\n\t      var j = uri.indexOf('#');\n\t      if (j < 0 && this.flags.indexOf('/') < 0) {\n\t        j = uri.lastIndexOf('/');\n\t      }\n\t      if (j < 0) throw 'Cannot make qname out of <' + uri + '>';\n\t\n\t      var canSplit = true;\n\t      for (var k = j + 1; k < uri.length; k++) {\n\t        if (__Serializer.prototype._notNameChars.indexOf(uri[k]) >= 0) {\n\t          throw 'Invalid character \"' + uri[k] + '\" cannot be in XML qname for URI: ' + uri;\n\t        }\n\t      }\n\t      var localid = uri.slice(j + 1);\n\t      var namesp = uri.slice(0, j + 1);\n\t      if (this.defaultNamespace && this.defaultNamespace == namesp && this.flags.indexOf('d') < 0) {\n\t        // d -> suppress default\n\t        return localid;\n\t      }\n\t      var prefix = this.prefixes[namesp];\n\t      if (!prefix) prefix = this.makeUpPrefix(namesp);\n\t      namespaceCounts[namesp] = true;\n\t      return prefix + ':' + localid;\n\t      //        throw ('No prefix for namespace \"'+namesp +'\" for XML qname for '+uri+', namespaces: '+sz.prefixes+' sz='+sz)\n\t    }\n\t    qname = qname.bind(this);\n\t\n\t    // Body of toXML:\n\t\n\t    var tree = statementListToXMLTree(sts);\n\t    var str = '<rdf:RDF';\n\t    if (this.defaultNamespace) str += ' xmlns=\"' + escapeForXML(this.defaultNamespace) + '\"';\n\t    for (var ns in namespaceCounts) {\n\t      if (!namespaceCounts.hasOwnProperty(ns)) continue;\n\t      str += '\\n xmlns:' + this.prefixes[ns] + '=\"' + escapeForXML(ns) + '\"';\n\t    }\n\t    str += '>';\n\t\n\t    var tree2 = [str, tree, '</rdf:RDF>']; // @@ namespace declrations\n\t    return XMLtreeToString(tree2, -1);\n\t  }; // End @@ body\n\t\n\t  var Serializer = function Serializer(store) {\n\t    return new __Serializer(store);\n\t  };\n\t  return Serializer;\n\t}();\n\t\n\tmodule.exports = Serializer;\n\n/***/ },\n/* 71 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Node = __webpack_require__(10);\n\t\n\tvar Statement = function () {\n\t  function Statement(subject, predicate, object, graph) {\n\t    _classCallCheck(this, Statement);\n\t\n\t    this.subject = Node.fromValue(subject);\n\t    this.predicate = Node.fromValue(predicate);\n\t    this.object = Node.fromValue(object);\n\t    this.why = graph; // property currently used by rdflib\n\t  }\n\t\n\t  _createClass(Statement, [{\n\t    key: 'equals',\n\t    value: function equals(other) {\n\t      return other.subject.equals(this.subject) && other.predicate.equals(this.predicate) && other.object.equals(this.object) && other.graph.equals(this.graph);\n\t    }\n\t  }, {\n\t    key: 'substitute',\n\t    value: function substitute(bindings) {\n\t      var y = new Statement(this.subject.substitute(bindings), this.predicate.substitute(bindings), this.object.substitute(bindings), this.why.substitute(bindings)); // 2016\n\t      console.log('@@@ statement substitute:' + y);\n\t      return y;\n\t    }\n\t  }, {\n\t    key: 'toCanonical',\n\t    value: function toCanonical() {\n\t      var terms = [this.subject.toCanonical(), this.predicate.toCanonical(), this.object.toCanonical()];\n\t      if (this.graph && this.graph.termType !== 'DefaultGraph') {\n\t        terms.push(this.graph.toCanonical());\n\t      }\n\t      return terms.join(' ') + ' .';\n\t    }\n\t  }, {\n\t    key: 'toNT',\n\t    value: function toNT() {\n\t      return [this.subject.toNT(), this.predicate.toNT(), this.object.toNT()].join(' ') + ' .';\n\t    }\n\t  }, {\n\t    key: 'toString',\n\t    value: function toString() {\n\t      return this.toNT();\n\t    }\n\t  }, {\n\t    key: 'graph',\n\t    get: function get() {\n\t      return this.why;\n\t    },\n\t    set: function set(g) {\n\t      this.why = g;\n\t    }\n\t  }]);\n\t\n\t  return Statement;\n\t}();\n\t\n\tmodule.exports = Statement;\n\n/***/ },\n/* 72 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar ClassOrder = __webpack_require__(9);\n\tvar Node = __webpack_require__(10);\n\tvar Uri = __webpack_require__(7);\n\t\n\t/**\n\t * Variables are placeholders used in patterns to be matched.\n\t * In cwm they are symbols which are the formula's list of quantified variables.\n\t * In sparql they are not visibly URIs.  Here we compromise, by having\n\t * a common special base URI for variables. Their names are uris,\n\t * but the ? notation has an implicit base uri of 'varid:'\n\t * @class Variable\n\t */\n\t\n\tvar Variable = function (_Node) {\n\t  _inherits(Variable, _Node);\n\t\n\t  function Variable() {\n\t    var name = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];\n\t\n\t    _classCallCheck(this, Variable);\n\t\n\t    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Variable).call(this));\n\t\n\t    _this.termType = Variable.termType;\n\t    _this.value = name;\n\t    _this.base = 'varid:';\n\t    _this.uri = Uri.join(name, _this.base);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Variable, [{\n\t    key: 'equals',\n\t    value: function equals(other) {\n\t      if (!other) {\n\t        return false;\n\t      }\n\t      return this.termType === other.termType && this.value === other.value;\n\t    }\n\t  }, {\n\t    key: 'hashString',\n\t    value: function hashString() {\n\t      return this.toString();\n\t    }\n\t  }, {\n\t    key: 'substitute',\n\t    value: function substitute(bindings) {\n\t      var ref;\n\t      return (ref = bindings[this.toNT()]) != null ? ref : this;\n\t    }\n\t  }, {\n\t    key: 'toString',\n\t    value: function toString() {\n\t      if (this.uri.slice(0, this.base.length) === this.base) {\n\t        return '?' + this.uri.slice(this.base.length);\n\t      }\n\t      return '?' + this.uri;\n\t    }\n\t  }]);\n\t\n\t  return Variable;\n\t}(Node);\n\t\n\tVariable.termType = 'Variable';\n\tVariable.prototype.classOrder = ClassOrder['Variable'];\n\tVariable.prototype.isVar = 1;\n\t\n\tmodule.exports = Variable;\n\n/***/ },\n/* 73 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar NamedNode = __webpack_require__(8);\n\t\n\tfunction Namespace(nsuri) {\n\t  return function (ln) {\n\t    return new NamedNode(nsuri + (ln || ''));\n\t  };\n\t}\n\t\n\tmodule.exports = Namespace;\n\n/***/ },\n/* 74 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _indexedFormula = __webpack_require__(4);\n\t\n\tvar _indexedFormula2 = _interopRequireDefault(_indexedFormula);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } } // Matching a formula against another formula\n\t// Assync as well as Synchronously\n\t//\n\t// W3C open source licence 2005.\n\t//\n\t// This builds on term.js, match.js (and identity.js?)\n\t// to allow a query of a formula.\n\t//\n\t// Here we introduce for the first time a subclass of term: variable.\n\t//\n\t// SVN ID: $Id: query.js 25116 2008-11-15 16:13:48Z timbl $\n\t\n\t//  Variable\n\t//\n\t// Compare with BlankNode.  They are similar, but a variable\n\t// stands for something whose value is to be returned.\n\t// Also, users name variables and want the same name back when stuff is printed\n\t/* jsl:option explicit*/ // Turn on JavaScriptLint variable declaration checking\n\t\n\tvar log = __webpack_require__(15);\n\tvar docpart = __webpack_require__(7).docpart;\n\t\n\t/**\n\t * Query class, for tracking queries the user has in the UI.\n\t */\n\t\n\tvar Query = function Query(name, id) {\n\t  _classCallCheck(this, Query);\n\t\n\t  this.pat = new _indexedFormula2.default(); // The pattern to search for\n\t  this.vars = []; // Used by UI code but not in query.js\n\t  //    this.orderBy = [] // Not used yet\n\t  this.name = name;\n\t  this.id = id;\n\t};\n\t\n\t/**\n\t * This function will match a pattern to the current kb\n\t *\n\t * The callback function is called whenever a match is found\n\t * When fetcher is supplied this will be called to satisfy any resource requests\n\t * currently not in the kb. The fetcher function needs to be defined manualy and\n\t * should call $rdf.Util.AJAR_handleNewTerm to process the requested resource.\n\t *\n\t * @param\tmyQuery,\ta knowledgebase containing a pattern to use as query\n\t * @param\tcallback, \twhenever the pattern in myQuery is met this is called with\n\t * \t\t\t\t\t\tthe new bindings as parameter\n\t * @param\tfetcher,\twhenever a resource needs to be loaded this gets called  IGNORED OBSOLETE\n\t *                              f.fetecher is used as a Fetcher instance to do this.\n\t * @param       onDone          callback when\n\t */\n\t\n\t\n\tfunction indexedFormulaQuery(myQuery, callback, fetcher, onDone) {\n\t  // var kb = this\n\t  // /////////// Debug strings\n\t  var bindingDebug = function bindingDebug(b) {\n\t    var str = '';\n\t    var v;\n\t    for (v in b) {\n\t      if (b.hasOwnProperty(v)) {\n\t        str += '    ' + v + ' -> ' + b[v];\n\t      }\n\t    }\n\t    return str;\n\t  };\n\t\n\t  var bindingsDebug = function bindingsDebug(nbs) {\n\t    var str = 'Bindings: ';\n\t    var i;\n\t    var n = nbs.length;\n\t    for (i = 0; i < n; i++) {\n\t      str += bindingDebug(nbs[i][0]) + ';\\n\\t';\n\t    }\n\t    return str;\n\t  }; // bindingsDebug\n\t\n\t  // Unification: see also\n\t  //  http://www.w3.org/2000/10/swap/term.py\n\t  // for similar things in python\n\t  //\n\t  // Unification finds all bindings such that when the binding is applied\n\t  // to one term it is equal to the other.\n\t  // Returns: a list of bindings, where a binding is an associative array\n\t  //  mapping variuable to value.\n\t\n\t  var unifyTerm = function unifyTerm(self, other, bindings, formula) {\n\t    var actual = bindings[self];\n\t    if (actual === undefined) {\n\t      // Not mapped\n\t      if (self.isVar) {\n\t        /* if (self.isBlank)  //bnodes are existential variables\n\t        {\n\t                if (self.toString() == other.toString()) return [[ [], null]]\n\t                else return []\n\t        }*/\n\t        var b = [];\n\t        b[self] = other;\n\t        return [[b, null]]; // Match\n\t      }\n\t      actual = self;\n\t    }\n\t    if (!actual.complexType) {\n\t      if (formula.redirections[actual]) {\n\t        actual = formula.redirections[actual];\n\t      }\n\t      if (formula.redirections[other]) {\n\t        other = formula.redirections[other];\n\t      }\n\t      if (actual.sameTerm(other)) {\n\t        return [[[], null]];\n\t      }\n\t      return [];\n\t    }\n\t    if (self instanceof Array) {\n\t      if (!(other instanceof Array)) {\n\t        return [];\n\t      }\n\t      return unifyContents(self, other, bindings);\n\t    }\n\t    throw new Error('query.js: oops - code not written yet');\n\t    // return undefined;  // for lint - no jslint objects to unreachables\n\t    //    return actual.unifyContents(other, bindings)\n\t  }; // unifyTerm\n\t\n\t  var unifyContents = function unifyContents(self, other, bindings, formula) {\n\t    var nbs2;\n\t    if (self.length !== other.length) {\n\t      return []; // no way\n\t    }\n\t    if (!self.length) {\n\t      return [[[], null]]; // Success\n\t    }\n\t    var nbs = unifyTerm(self[0], other[0], bindings, formula);\n\t    if (nbs.length === 0) {\n\t      return nbs;\n\t    }\n\t    var res = [];\n\t    var i;\n\t    var n = nbs.length;\n\t    var nb;\n\t    var j;\n\t    var m;\n\t    var v;\n\t    var nb2;\n\t    var bindings2;\n\t    for (i = 0; i < n; i++) {\n\t      // for each possibility from the first term\n\t      nb = nbs[i][0]; // new bindings\n\t      bindings2 = [];\n\t      for (v in nb) {\n\t        if (nb.hasOwnProperty(v)) {\n\t          bindings2[v] = nb[v]; // copy\n\t        }\n\t      }\n\t      for (v in bindings) {\n\t        if (bindings.hasOwnProperty(v)) {\n\t          bindings2[v] = bindings[v]; // copy\n\t        }\n\t      }\n\t      nbs2 = unifyContents(self.slice(1), other.slice(1), bindings2, formula);\n\t      m = nbs2.length;\n\t      for (j = 0; j < m; j++) {\n\t        nb2 = nbs2[j][0]; // @@@@ no idea whether this is used or right\n\t        for (v in nb) {\n\t          if (nb.hasOwnProperty(v)) {\n\t            nb2[v] = nb[v];\n\t          }\n\t        }\n\t        res.push([nb2, null]);\n\t      }\n\t    }\n\t    return res;\n\t  }; // unifyContents\n\t\n\t  //  Matching\n\t  //\n\t  // Matching finds all bindings such that when the binding is applied\n\t  // to one term it is equal to the other term.  We only match formulae.\n\t\n\t  /** if x is not in the bindings array, return the var; otherwise, return the bindings **/\n\t  var bind = function bind(x, binding) {\n\t    var y = binding[x];\n\t    if (y === undefined) {\n\t      return x;\n\t    }\n\t    return y;\n\t  };\n\t\n\t  // When there are OPTIONAL clauses, we must return bindings without them if none of them\n\t  // succeed. However, if any of them do succeed, we should not.  (This is what branchCount()\n\t  // tracked. The problem currently is (2011/7) that when several optionals exist, and they\n\t  // all match, multiple sets of bindings are returned, each with one optional filled in.)\n\t\n\t  var union = function union(a, b) {\n\t    var c = {};\n\t    var x;\n\t    for (x in a) {\n\t      if (a.hasOwnProperty(x)) {\n\t        c[x] = a[x];\n\t      }\n\t    }\n\t    for (x in b) {\n\t      if (b.hasOwnProperty(x)) {\n\t        c[x] = b[x];\n\t      }\n\t    }\n\t    return c;\n\t  };\n\t\n\t  var OptionalBranchJunction = function OptionalBranchJunction(originalCallback, trunkBindings) {\n\t    this.trunkBindings = trunkBindings;\n\t    this.originalCallback = originalCallback;\n\t    this.branches = [];\n\t    // this.results = []; // result[i] is an array of bindings for branch i\n\t    // this.done = {};  // done[i] means all/any results are in for branch i\n\t    // this.count = {}\n\t    return this;\n\t  };\n\t\n\t  OptionalBranchJunction.prototype.checkAllDone = function () {\n\t    var i;\n\t    for (i = 0; i < this.branches.length; i++) {\n\t      if (!this.branches[i].done) {\n\t        return;\n\t      }\n\t    }\n\t    log.debug('OPTIONAL BIDNINGS ALL DONE:');\n\t    this.doCallBacks(this.branches.length - 1, this.trunkBindings);\n\t  };\n\t  // Recrursively generate the cross product of the bindings\n\t  OptionalBranchJunction.prototype.doCallBacks = function (b, bindings) {\n\t    var j;\n\t    if (b < 0) {\n\t      return this.originalCallback(bindings);\n\t    }\n\t    for (j = 0; j < this.branches[b].results.length; j++) {\n\t      this.doCallBacks(b - 1, union(bindings, this.branches[b].results[j]));\n\t    }\n\t  };\n\t\n\t  // A mandatory branch is the normal one, where callbacks\n\t  // are made immediately and no junction is needed.\n\t  // Might be useful for onFinsihed callback for query API.\n\t  var MandatoryBranch = function MandatoryBranch(callback, onDone) {\n\t    this.count = 0;\n\t    this.success = false;\n\t    this.done = false;\n\t    // this.results = []\n\t    this.callback = callback;\n\t    this.onDone = onDone;\n\t    // this.junction = junction\n\t    // junction.branches.push(this)\n\t    return this;\n\t  };\n\t\n\t  MandatoryBranch.prototype.reportMatch = function (bindings) {\n\t    // log.error(\"@@@@ query.js 1\"); // @@\n\t    this.callback(bindings);\n\t    this.success = true;\n\t  };\n\t\n\t  MandatoryBranch.prototype.reportDone = function () {\n\t    this.done = true;\n\t    log.info('Mandatory query branch finished.***');\n\t    if (this.onDone !== undefined) {\n\t      this.onDone();\n\t    }\n\t  };\n\t\n\t  // An optional branch hoards its results.\n\t  var OptionalBranch = function OptionalBranch(junction) {\n\t    this.count = 0;\n\t    this.done = false;\n\t    this.results = [];\n\t    this.junction = junction;\n\t    junction.branches.push(this);\n\t    return this;\n\t  };\n\t\n\t  OptionalBranch.prototype.reportMatch = function (bindings) {\n\t    this.results.push(bindings);\n\t  };\n\t\n\t  OptionalBranch.prototype.reportDone = function () {\n\t    log.debug('Optional branch finished - results.length = ' + this.results.length);\n\t    if (this.results.length === 0) {\n\t      // This is what optional means: if no hits,\n\t      this.results.push({}); // mimic success, but with no bindings\n\t      log.debug(\"Optional branch FAILED - that's OK.\");\n\t    }\n\t    this.done = true;\n\t    this.junction.checkAllDone();\n\t  };\n\t\n\t  /** prepare -- sets the index of the item to the possible matches\n\t      * @param f - formula\n\t      * @param item - an Statement, possibly w/ vars in it\n\t      * @param bindings -\n\t  * @returns true if the query fails -- there are no items that match **/\n\t  var prepare = function prepare(f, item, bindings) {\n\t    var t, terms, termIndex, i, ind;\n\t    item.nvars = 0;\n\t    item.index = null;\n\t    // if (!f.statements) log.warn(\"@@@ prepare: f is \"+f)\n\t    //    log.debug(\"Prepare: f has \"+ f.statements.length)\n\t    // log.debug(\"Prepare: Kb size \"+f.statements.length+\" Preparing \"+item)\n\t\n\t    terms = [item.subject, item.predicate, item.object];\n\t    ind = [f.subjectIndex, f.predicateIndex, f.objectIndex];\n\t    for (i = 0; i < 3; i++) {\n\t      // alert(\"Prepare \"+terms[i]+\" \"+(terms[i] in bindings))\n\t      if (terms[i].isVar && !(bindings[terms[i]] !== undefined)) {\n\t        item.nvars++;\n\t      } else {\n\t        t = bind(terms[i], bindings); // returns the RDF binding if bound, otherwise itself\n\t        // if (terms[i]!=bind(terms[i],bindings) alert(\"Term: \"+terms[i]+\"Binding: \"+bind(terms[i], bindings))\n\t        if (f.redirections[t.hashString()]) {\n\t          t = f.redirections[t.hashString()]; // redirect\n\t        }\n\t        termIndex = ind[i][t.hashString()];\n\t\n\t        if (!termIndex) {\n\t          item.index = [];\n\t          return false; // Query line cannot match\n\t        }\n\t        if (item.index === null || item.index.length > termIndex.length) {\n\t          item.index = termIndex;\n\t        }\n\t      }\n\t    }\n\t\n\t    if (item.index === null) {\n\t      // All 3 are variables?\n\t      item.index = f.statements;\n\t    }\n\t    return true;\n\t  }; // prepare\n\t\n\t  /** sorting function -- negative if self is easier **/\n\t  // We always prefer to start with a URI to be able to browse a graph\n\t  // this is why we put off items with more variables till later.\n\t  function easiestQuery(self, other) {\n\t    if (self.nvars !== other.nvars) {\n\t      return self.nvars - other.nvars;\n\t    }\n\t    return self.index.length - other.index.length;\n\t  }\n\t\n\t  var match_index = 0; // index\n\t  /** matches a pattern formula against the knowledge base, e.g. to find matches for table-view\n\t  *\n\t  * @param f - knowledge base formula\n\t  * @param g - pattern formula (may have vars)\n\t  * @param bindingsSoFar  - bindings accumulated in matching to date\n\t  * @param level - spaces to indent stuff also lets you know what level of recursion you're at\n\t  * @param fetcher - function (term, requestedBy) - myFetcher / AJAR_handleNewTerm / the sort\n\t  * @param localCallback - function(bindings, pattern, branch) called on sucess\n\t  * @returns nothing\n\t  *\n\t  * Will fetch linked data from the web iff the knowledge base an associated source fetcher (f.fetcher)\n\t  ***/\n\t  var match = function match(f, g, bindingsSoFar, level, fetcher, localCallback, branch) {\n\t    log.debug('Match begins, Branch count now: ' + branch.count + ' for ' + branch.pattern_debug);\n\t    var sf = f.fetcher ? f.fetcher : null;\n\t    // log.debug(\"match: f has \"+f.statements.length+\", g has \"+g.statements.length)\n\t    var pattern = g.statements;\n\t    if (pattern.length === 0) {\n\t      // when it's satisfied all the pattern triples\n\t      log.debug('FOUND MATCH WITH BINDINGS:' + bindingDebug(bindingsSoFar));\n\t      if (g.optional.length === 0) {\n\t        branch.reportMatch(bindingsSoFar);\n\t      } else {\n\t        log.debug('OPTIONAL: ' + g.optional);\n\t        var junction = new OptionalBranchJunction(callback, bindingsSoFar); // @@ won't work with nested optionals? nest callbacks\n\t        var br = [];\n\t        var b;\n\t        for (b = 0; b < g.optional.length; b++) {\n\t          br[b] = new OptionalBranch(junction); // Allocate branches to prevent premature ending\n\t          br[b].pattern_debug = g.optional[b]; // for diagnotics only\n\t        }\n\t        for (b = 0; b < g.optional.length; b++) {\n\t          br[b].count = br[b].count + 1; // Count how many matches we have yet to complete\n\t          match(f, g.optional[b], bindingsSoFar, '', fetcher, callback, br[b]);\n\t        }\n\t      }\n\t      branch.count--;\n\t      log.debug('Match ends -- success , Branch count now: ' + branch.count + ' for ' + branch.pattern_debug);\n\t      return; // Success\n\t    }\n\t\n\t    var item;\n\t    var i;\n\t    var n = pattern.length;\n\t    // log.debug(level + \"Match \"+n+\" left, bs so far:\"+bindingDebug(bindingsSoFar))\n\t\n\t    // Follow links from variables in query\n\t    if (sf) {\n\t      // Fetcher is used to fetch URIs, function first term is a URI term, second is the requester\n\t      var id = 'match' + match_index++;\n\t      var fetchResource = function fetchResource(requestedTerm, id) {\n\t        var docuri = requestedTerm.uri.split('#')[0];\n\t        sf.nowOrWhenFetched(docuri, undefined, function (err, body, xhr) {\n\t          if (err) {\n\t            console.log('Error following link to <' + requestedTerm.uri + '> in query: ' + body);\n\t          }\n\t          match(f, g, bindingsSoFar, level, fetcher, // match not match2 to look up any others necessary.\n\t          localCallback, branch);\n\t        });\n\t        /*\n\t        if( sf ) {\n\t            sf.addCallback('done', function(uri) {\n\t                if ((kb.canon(kb.sym(uri)).uri !== path) && (uri !== kb.canon(kb.sym(path)))) {\n\t                    return true\n\t                }\n\t                return false\n\t            })\n\t        }\n\t        fetcher(requestedTerm, id)\n\t        */\n\t      };\n\t      for (i = 0; i < n; i++) {\n\t        item = pattern[i]; // for each of the triples in the query\n\t        if (bindingsSoFar[item.subject] !== undefined && bindingsSoFar[item.subject].uri && sf && sf.getState(docpart(bindingsSoFar[item.subject].uri)) === 'unrequested') {\n\t          // fetch the subject info and return to id\n\t          fetchResource(bindingsSoFar[item.subject], id);\n\t          return; // only look up one per line this time, but we will come back again though match\n\t        }\n\t        if (bindingsSoFar[item.object] !== undefined && bindingsSoFar[item.object].uri && sf && sf.getState(docpart(bindingsSoFar[item.object].uri)) === 'unrequested') {\n\t          fetchResource(bindingsSoFar[item.object], id);\n\t          return;\n\t        }\n\t      }\n\t    } // if sf\n\t    match2(f, g, bindingsSoFar, level, fetcher, localCallback, branch);\n\t    return;\n\t  }; // match\n\t\n\t  var constraintsSatisfied = function constraintsSatisfied(bindings, constraints) {\n\t    var res = true;\n\t    var x;\n\t    var test;\n\t    for (x in bindings) {\n\t      if (bindings.hasOwnProperty(x)) {\n\t        if (constraints[x]) {\n\t          test = constraints[x].test;\n\t          if (test && !test(bindings[x])) {\n\t            res = false;\n\t          }\n\t        }\n\t      }\n\t    }\n\t    return res;\n\t  };\n\t\n\t  /** match2 -- stuff after the fetch **/\n\t  var match2 = function match2(f, g, bindingsSoFar, level, fetcher, callback, branch) {\n\t    // post fetch\n\t    var pattern = g.statements;\n\t    var n = pattern.length;\n\t    var i;\n\t    var k;\n\t    var nk;\n\t    var v;\n\t    var bindings2;\n\t    var newBindings1;\n\t    var item;\n\t    for (i = 0; i < n; i++) {\n\t      // For each statement left in the query, run prepare\n\t      item = pattern[i];\n\t      log.info('match2: item=' + item + ', bindingsSoFar=' + bindingDebug(bindingsSoFar));\n\t      prepare(f, item, bindingsSoFar);\n\t    }\n\t    pattern.sort(easiestQuery);\n\t    item = pattern[0];\n\t    // log.debug(\"Sorted pattern:\\n\"+pattern)\n\t    var rest = f.formula();\n\t    rest.optional = g.optional;\n\t    rest.constraints = g.constraints;\n\t    rest.statements = pattern.slice(1); // No indexes: we will not query g.\n\t    log.debug(level + 'match2 searching ' + item.index.length + ' for ' + item + '; bindings so far=' + bindingDebug(bindingsSoFar));\n\t    // var results = []\n\t    var c;\n\t    var nc = item.index.length;\n\t    var nbs1;\n\t    var st;\n\t    var onward = 0;\n\t    // var x\n\t    for (c = 0; c < nc; c++) {\n\t      // For each candidate statement\n\t      st = item.index[c]; // for each statement in the item's index, spawn a new match with that binding\n\t      nbs1 = unifyContents([item.subject, item.predicate, item.object], [st.subject, st.predicate, st.object], bindingsSoFar, f);\n\t      log.info(level + ' From first: ' + nbs1.length + ': ' + bindingsDebug(nbs1));\n\t      nk = nbs1.length;\n\t      // branch.count += nk\n\t      // log.debug(\"Branch count bumped \"+nk+\" to: \"+branch.count)\n\t      for (k = 0; k < nk; k++) {\n\t        // For each way that statement binds\n\t        bindings2 = [];\n\t        newBindings1 = nbs1[k][0];\n\t        if (!constraintsSatisfied(newBindings1, g.constraints)) {\n\t          // branch.count--\n\t          log.debug('Branch count CS: ' + branch.count);\n\t        } else {\n\t          for (v in newBindings1) {\n\t            if (newBindings1.hasOwnProperty(v)) {\n\t              bindings2[v] = newBindings1[v]; // copy\n\t            }\n\t          }\n\t          for (v in bindingsSoFar) {\n\t            if (bindingsSoFar.hasOwnProperty(v)) {\n\t              bindings2[v] = bindingsSoFar[v]; // copy\n\t            }\n\t          }\n\t\n\t          branch.count++; // Count how many matches we have yet to complete\n\t          onward++;\n\t          match(f, rest, bindings2, level + '  ', fetcher, callback, branch); // call match\n\t        }\n\t      }\n\t    }\n\t    branch.count--;\n\t    if (onward === 0) {\n\t      log.debug('Match2 fails completely on ' + item);\n\t    }\n\t    log.debug('Match2 ends, Branch count: ' + branch.count + ' for ' + branch.pattern_debug);\n\t    if (branch.count === 0) {\n\t      log.debug('Branch finished.');\n\t      branch.reportDone();\n\t    }\n\t  }; // match2\n\t  // ////////////////////////// Body of query()  ///////////////////////\n\t  /*\n\t  if(!fetcher) {\n\t      fetcher=function (x, requestedBy) {\n\t          if (x === null) {\n\t              return\n\t          }\n\t          $rdf.Util.AJAR_handleNewTerm(kb, x, requestedBy)\n\t      }\n\t  }\n\t  */\n\t  // prepare, oncallback: match1\n\t  // match1: fetcher, oncallback: match2\n\t  // match2, oncallback: populatetable\n\t  //    log.debug(\"Query F length\"+this.statements.length+\" G=\"+myQuery)\n\t  var f = this;\n\t  log.debug('Query on ' + this.statements.length);\n\t  // kb.remoteQuery(myQuery,'http://jena.hpl.hp.com:3040/backstage',callback)\n\t  // return\n\t  var trunck = new MandatoryBranch(callback, onDone);\n\t  trunck.count++; // count one branch to complete at the moment\n\t  setTimeout(function () {\n\t    match(f, myQuery.pat, myQuery.pat.initBindings, '', fetcher, callback, trunck /* branch */);\n\t  }, 0);\n\t\n\t  return; // returns nothing; callback does the work\n\t} // query\n\t\n\tmodule.exports.Query = Query;\n\tmodule.exports.indexedFormulaQuery = indexedFormulaQuery;\n\n/***/ },\n/* 75 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _indexedFormula = __webpack_require__(4);\n\t\n\tvar _indexedFormula2 = _interopRequireDefault(_indexedFormula);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar BlankNode = __webpack_require__(12);\n\tvar Collection = __webpack_require__(11);\n\tvar DefaultGraph = __webpack_require__(76);\n\tvar Fetcher = __webpack_require__(77);\n\t\n\tvar Literal = __webpack_require__(13);\n\tvar NamedNode = __webpack_require__(8);\n\tvar Statement = __webpack_require__(71);\n\tvar Variable = __webpack_require__(72);\n\t\n\tfunction blankNode(value) {\n\t  return new BlankNode(value);\n\t}\n\tfunction collection(elements) {\n\t  return new Collection(elements);\n\t}\n\tfunction defaultGraph() {\n\t  return new DefaultGraph();\n\t}\n\tfunction fetcher(store, timeout, async) {\n\t  return new Fetcher(store, timeout, async);\n\t}\n\tfunction graph() {\n\t  return new _indexedFormula2.default();\n\t}\n\tfunction lit(val, lang, dt) {\n\t  return new Literal('' + val, lang, dt);\n\t}\n\tfunction literal(value, languageOrDatatype) {\n\t  if (typeof languageOrDatatype === 'string') {\n\t    if (languageOrDatatype.indexOf(':') === -1) {\n\t      return new Literal(value, languageOrDatatype);\n\t    } else {\n\t      return new Literal(value, null, namedNode(languageOrDatatype));\n\t    }\n\t  } else {\n\t    return new Literal(value, null, languageOrDatatype);\n\t  }\n\t}\n\tfunction namedNode(value) {\n\t  return new NamedNode(value);\n\t}\n\tfunction quad(subject, predicate, object, graph) {\n\t  graph = graph || new DefaultGraph();\n\t  return new Statement(subject, predicate, object, graph);\n\t}\n\tfunction st(subject, predicate, object, graph) {\n\t  return new Statement(subject, predicate, object, graph);\n\t}\n\tfunction triple(subject, predicate, object) {\n\t  return quad(subject, predicate, object);\n\t}\n\tfunction variable(name) {\n\t  return new Variable(name);\n\t}\n\t\n\t// rdfjs spec factory methods\n\tmodule.exports.blankNode = blankNode;\n\tmodule.exports.defaultGraph = defaultGraph;\n\tmodule.exports.graph = graph;\n\tmodule.exports.literal = literal;\n\tmodule.exports.namedNode = namedNode;\n\tmodule.exports.quad = quad;\n\tmodule.exports.triple = triple;\n\tmodule.exports.variable = variable;\n\t\n\t// rdflib only\n\tmodule.exports.collection = collection;\n\tmodule.exports.fetcher = fetcher;\n\tmodule.exports.lit = lit;\n\tmodule.exports.st = st;\n\n/***/ },\n/* 76 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Node = __webpack_require__(10);\n\t\n\tvar DefaultGraph = function (_Node) {\n\t  _inherits(DefaultGraph, _Node);\n\t\n\t  function DefaultGraph() {\n\t    _classCallCheck(this, DefaultGraph);\n\t\n\t    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(DefaultGraph).call(this));\n\t\n\t    _this.termType = 'DefaultGraph';\n\t    _this.value = '';\n\t    return _this;\n\t  }\n\t\n\t  _createClass(DefaultGraph, [{\n\t    key: 'toCanonical',\n\t    value: function toCanonical() {\n\t      return this.value;\n\t    }\n\t  }]);\n\t\n\t  return DefaultGraph;\n\t}(Node);\n\t\n\tmodule.exports = DefaultGraph;\n\n/***/ },\n/* 77 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\t/* global $SolidTestEnvironment */\n\t/**\n\t *\n\t * Project: rdflib.js\n\t *\n\t * File: fetcher.js\n\t *\n\t * Description: contains functions for requesting/fetching/retracting\n\t *  This implements quite a lot of the web architecture.\n\t * A fetcher is bound to a specific knowledge base graph, into which\n\t * it loads stuff and into which it writes its metadata\n\t * @@ The metadata should be optionally a separate graph\n\t *\n\t * - implements semantics of HTTP headers, Internet Content Types\n\t * - selects parsers for rdf/xml, n3, rdfa, grddl\n\t *\n\t * Dependencies:\n\t *\n\t * needs: util.js uri.js term.js rdfparser.js rdfa.js n3parser.js\n\t *      identity.js sparql.js jsonparser.js\n\t *\n\t * Independent of jQuery\n\t */\n\t\n\t/**\n\t * Things to test: callbacks on request, refresh, retract\n\t *   loading from HTTP, HTTPS, FTP, FILE, others?\n\t * To do:\n\t * Firing up a mail client for mid:  (message:) URLs\n\t */\n\tvar log = __webpack_require__(15);\n\tvar N3Parser = __webpack_require__(78);\n\tvar NamedNode = __webpack_require__(8);\n\tvar Namespace = __webpack_require__(73);\n\tvar rdfParse = __webpack_require__(79);\n\tvar parseRDFaDOM = __webpack_require__(80).parseRDFaDOM;\n\tvar RDFParser = __webpack_require__(81);\n\tvar Uri = __webpack_require__(7);\n\tvar Util = __webpack_require__(5);\n\tvar serialize = __webpack_require__(21);\n\t\n\tvar Parsable = {\n\t  'text/n3': true,\n\t  'text/turtle': true,\n\t  'application/rdf+xml': true,\n\t  'application/xhtml+xml': true,\n\t  'text/html': true,\n\t  'application/ld+json': true\n\t};\n\t\n\tvar Fetcher = function Fetcher(store, timeout, async) {\n\t  this.store = store;\n\t  this.thisURI = 'http://dig.csail.mit.edu/2005/ajar/ajaw/rdf/sources.js' + '#SourceFetcher'; // -- Kenny\n\t  this.timeout = timeout || 30000;\n\t  this.async = async != null ? async : true;\n\t  this.appNode = this.store.bnode(); // Denoting this session\n\t  this.store.fetcher = this; // Bi-linked\n\t  this.requested = {};\n\t  // this.requested[uri] states:\n\t  //   undefined     no record of web access or records reset\n\t  //   true          has been requested, XHR in progress\n\t  //   'done'        received, Ok\n\t  //   403           HTTP status unauthorized\n\t  //   404           Ressource does not exist. Can be created etc.\n\t  //   'redirected'  In attempt to counter CORS problems retried.\n\t  //   other strings mean various other erros, such as parse errros.\n\t  //\n\t  this.redirectedTo = {}; // Wehn 'redireced'\n\t  this.fetchCallbacks = {}; // fetchCallbacks[uri].push(callback)\n\t\n\t  this.nonexistant = {}; // keep track of explict 404s -> we can overwrite etc\n\t  this.lookedUp = {};\n\t  this.handlers = [];\n\t  this.mediatypes = {};\n\t  var sf = this;\n\t  var kb = this.store;\n\t  var ns = {}; // Convenience namespaces needed in this module:\n\t  // These are delibertely not exported as the user application should\n\t  // make its own list and not rely on the prefixes used here,\n\t  // and not be tempted to add to them, and them clash with those of another\n\t  // application.\n\t  ns.link = Namespace('http://www.w3.org/2007/ont/link#');\n\t  ns.http = Namespace('http://www.w3.org/2007/ont/http#');\n\t  ns.httph = Namespace('http://www.w3.org/2007/ont/httph#');\n\t  ns.rdf = Namespace('http://www.w3.org/1999/02/22-rdf-syntax-ns#');\n\t  ns.rdfs = Namespace('http://www.w3.org/2000/01/rdf-schema#');\n\t  ns.dc = Namespace('http://purl.org/dc/elements/1.1/');\n\t\n\t  sf.mediatypes['image/*'] = {\n\t    'q': 0.9\n\t  };\n\t\n\t  sf.mediatypes['*/*'] = { // Must allow access to random content\n\t    'q': 0.1\n\t  };\n\t\n\t  Fetcher.crossSiteProxy = function (uri) {\n\t    if (Fetcher.crossSiteProxyTemplate) {\n\t      return Fetcher.crossSiteProxyTemplate.replace('{uri}', encodeURIComponent(uri));\n\t    } else {\n\t      return undefined;\n\t    }\n\t  };\n\t\n\t  Fetcher.RDFXMLHandler = function (args) {\n\t    if (args) {\n\t      this.dom = args[0];\n\t    }\n\t    this.handlerFactory = function (xhr) {\n\t      xhr.handle = function (cb) {\n\t        // sf.addStatus(xhr.req, 'parsing soon as RDF/XML...')\n\t        var kb = sf.store;\n\t        if (!this.dom) this.dom = Util.parseXML(xhr.responseText);\n\t        var root = this.dom.documentElement;\n\t        if (root.nodeName === 'parsererror') {\n\t          // @@ Mozilla only See issue/issue110\n\t          sf.failFetch(xhr, 'Badly formed XML in ' + xhr.resource.uri); // have to fail the request\n\t          throw new Error('Badly formed XML in ' + xhr.resource.uri); // @@ Add details\n\t        }\n\t        var parser = new RDFParser(kb);\n\t        try {\n\t          parser.parse(this.dom, xhr.original.uri, xhr.original);\n\t        } catch (e) {\n\t          sf.addStatus(xhr.req, 'Syntax error parsing RDF/XML! ' + e);\n\t          console.log('Syntax error parsing RDF/XML! ' + e);\n\t        }\n\t        if (!xhr.options.noMeta) {\n\t          kb.add(xhr.original, ns.rdf('type'), ns.link('RDFDocument'), sf.appNode);\n\t        }\n\t        cb();\n\t      };\n\t    };\n\t  };\n\t  Fetcher.RDFXMLHandler.toString = function () {\n\t    return 'RDFXMLHandler';\n\t  };\n\t  Fetcher.RDFXMLHandler.register = function (sf) {\n\t    sf.mediatypes['application/rdf+xml'] = {\n\t      'q': 0.9\n\t    };\n\t  };\n\t  Fetcher.RDFXMLHandler.pattern = new RegExp('application/rdf\\\\+xml');\n\t\n\t  // This would much better use on-board XSLT engine. @@\n\t  /*  deprocated 2016-02-17  timbl\n\t  Fetcher.doGRDDL = function(kb, doc, xslturi, xmluri) {\n\t      sf.requestURI('http://www.w3.org/2005/08/' + 'online_xslt/xslt?' + 'xslfile=' + escape(xslturi) + '&xmlfile=' + escape(xmluri), doc)\n\t  }\n\t  */\n\t  Fetcher.XHTMLHandler = function (args) {\n\t    if (args) {\n\t      this.dom = args[0];\n\t    }\n\t    this.handlerFactory = function (xhr) {\n\t      xhr.handle = function (cb) {\n\t        var relation, reverse;\n\t        if (!this.dom) {\n\t          this.dom = Util.parseXML(xhr.responseText);\n\t        }\n\t        var kb = sf.store;\n\t\n\t        // dc:title\n\t        var title = this.dom.getElementsByTagName('title');\n\t        if (title.length > 0) {\n\t          kb.add(xhr.resource, ns.dc('title'), kb.literal(title[0].textContent), xhr.resource);\n\t          // log.info(\"Inferring title of \" + xhr.resource)\n\t        }\n\t\n\t        // link rel\n\t        var links = this.dom.getElementsByTagName('link');\n\t        for (var x = links.length - 1; x >= 0; x--) {\n\t          // @@ rev\n\t          relation = links[x].getAttribute('rel');\n\t          reverse = false;\n\t          if (!relation) {\n\t            relation = links[x].getAttribute('rev');\n\t            reverse = true;\n\t          }\n\t          if (relation) {\n\t            sf.linkData(xhr, relation, links[x].getAttribute('href'), xhr.resource, reverse);\n\t          }\n\t        }\n\t\n\t        // Data Islands\n\t\n\t        var scripts = this.dom.getElementsByTagName('script');\n\t        for (var i = 0; i < scripts.length; i++) {\n\t          var contentType = scripts[i].getAttribute('type');\n\t          if (Parsable[contentType]) {\n\t            rdfParse(scripts[i].textContent, kb, xhr.original.uri, contentType);\n\t          }\n\t        }\n\t\n\t        if (!xhr.options.noMeta) {\n\t          kb.add(xhr.resource, ns.rdf('type'), ns.link('WebPage'), sf.appNode);\n\t        }\n\t\n\t        if (!xhr.options.noRDFa && parseRDFaDOM) {\n\t          // enable by default\n\t          try {\n\t            parseRDFaDOM(this.dom, kb, xhr.original.uri);\n\t          } catch (e) {\n\t            var msg = 'Error trying to parse ' + xhr.resource + ' as RDFa:\\n' + e + ':\\n' + e.stack;\n\t            // dump(msg+\"\\n\")\n\t            sf.failFetch(xhr, msg);\n\t            return;\n\t          }\n\t        }\n\t        cb(); // Fire done callbacks\n\t      };\n\t    };\n\t  };\n\t  Fetcher.XHTMLHandler.toString = function () {\n\t    return 'XHTMLHandler';\n\t  };\n\t  Fetcher.XHTMLHandler.register = function (sf) {\n\t    sf.mediatypes['application/xhtml+xml'] = {};\n\t  };\n\t  Fetcher.XHTMLHandler.pattern = new RegExp('application/xhtml');\n\t\n\t  Fetcher.XMLHandler = function () {\n\t    this.handlerFactory = function (xhr) {\n\t      xhr.handle = function (cb) {\n\t        var dom = Util.parseXML(xhr.responseText);\n\t\n\t        // XML Semantics defined by root element namespace\n\t        // figure out the root element\n\t        for (var c = 0; c < dom.childNodes.length; c++) {\n\t          // is this node an element?\n\t          if (dom.childNodes[c].nodeType === 1) {\n\t            // We've found the first element, it's the root\n\t            var ns = dom.childNodes[c].namespaceURI;\n\t\n\t            // Is it RDF/XML?\n\t            if (ns && ns === ns['rdf']) {\n\t              sf.addStatus(xhr.req, 'Has XML root element in the RDF namespace, so assume RDF/XML.');\n\t              sf.switchHandler('RDFXMLHandler', xhr, cb, [dom]);\n\t              return;\n\t            }\n\t            // it isn't RDF/XML or we can't tell\n\t            // Are there any GRDDL transforms for this namespace?\n\t            // @@ assumes ns documents have already been loaded\n\t            /*\n\t            var xforms = kb.each(kb.sym(ns), kb.sym(\"http://www.w3.org/2003/g/data-view#namespaceTransformation\"))\n\t            for (var i = 0; i < xforms.length; i++) {\n\t                var xform = xforms[i]\n\t                // log.info(xhr.resource.uri + \" namespace \" + ns + \" has GRDDL ns transform\" + xform.uri)\n\t                 Fetcher.doGRDDL(kb, xhr.resource, xform.uri, xhr.resource.uri)\n\t            }\n\t            */\n\t            break;\n\t          }\n\t        }\n\t\n\t        // Or it could be XHTML?\n\t        // Maybe it has an XHTML DOCTYPE?\n\t        if (dom.doctype) {\n\t          // log.info(\"We found a DOCTYPE in \" + xhr.resource)\n\t          if (dom.doctype.name === 'html' && dom.doctype.publicId.match(/^-\\/\\/W3C\\/\\/DTD XHTML/) && dom.doctype.systemId.match(/http:\\/\\/www.w3.org\\/TR\\/xhtml/)) {\n\t            sf.addStatus(xhr.req, 'Has XHTML DOCTYPE. Switching to XHTML Handler.\\n');\n\t            sf.switchHandler('XHTMLHandler', xhr, cb);\n\t            return;\n\t          }\n\t        }\n\t\n\t        // Or what about an XHTML namespace?\n\t        var html = dom.getElementsByTagName('html')[0];\n\t        if (html) {\n\t          var xmlns = html.getAttribute('xmlns');\n\t          if (xmlns && xmlns.match(/^http:\\/\\/www.w3.org\\/1999\\/xhtml/)) {\n\t            sf.addStatus(xhr.req, 'Has a default namespace for ' + 'XHTML. Switching to XHTMLHandler.\\n');\n\t            sf.switchHandler('XHTMLHandler', xhr, cb);\n\t            return;\n\t          }\n\t        }\n\t\n\t        // At this point we should check the namespace document (cache it!) and\n\t        // look for a GRDDL transform\n\t        // @@  Get namespace document <n>, parse it, look for  <n> grddl:namespaceTransform ?y\n\t        // Apply ?y to   dom\n\t        // We give up. What dialect is this?\n\t        sf.failFetch(xhr, 'Unsupported dialect of XML: not RDF or XHTML namespace, etc.\\n' + xhr.responseText.slice(0, 80));\n\t      };\n\t    };\n\t  };\n\t\n\t  Fetcher.XMLHandler.toString = function () {\n\t    return 'XMLHandler';\n\t  };\n\t  Fetcher.XMLHandler.register = function (sf) {\n\t    sf.mediatypes['text/xml'] = {\n\t      'q': 0.5\n\t    };\n\t    sf.mediatypes['application/xml'] = {\n\t      'q': 0.5\n\t    };\n\t  };\n\t  Fetcher.XMLHandler.pattern = new RegExp('(text|application)/(.*)xml');\n\t\n\t  Fetcher.HTMLHandler = function () {\n\t    this.handlerFactory = function (xhr) {\n\t      xhr.handle = function (cb) {\n\t        var rt = xhr.responseText;\n\t        // We only handle XHTML so we have to figure out if this is XML\n\t        // log.info(\"Sniffing HTML \" + xhr.resource + \" for XHTML.\")\n\t\n\t        if (rt.match(/\\s*<\\?xml\\s+version\\s*=[^<>]+\\?>/)) {\n\t          sf.addStatus(xhr.req, \"Has an XML declaration. We'll assume \" + \"it's XHTML as the content-type was text/html.\\n\");\n\t          sf.switchHandler('XHTMLHandler', xhr, cb);\n\t          return;\n\t        }\n\t\n\t        // DOCTYPE\n\t        // There is probably a smarter way to do this\n\t        if (rt.match(/.*<!DOCTYPE\\s+html[^<]+-\\/\\/W3C\\/\\/DTD XHTML[^<]+http:\\/\\/www.w3.org\\/TR\\/xhtml[^<]+>/)) {\n\t          sf.addStatus(xhr.req, 'Has XHTML DOCTYPE. Switching to XHTMLHandler.\\n');\n\t          sf.switchHandler('XHTMLHandler', xhr, cb);\n\t          return;\n\t        }\n\t\n\t        // xmlns\n\t        if (rt.match(/[^(<html)]*<html\\s+[^<]*xmlns=['\"]http:\\/\\/www.w3.org\\/1999\\/xhtml[\"'][^<]*>/)) {\n\t          sf.addStatus(xhr.req, 'Has default namespace for XHTML, so switching to XHTMLHandler.\\n');\n\t          sf.switchHandler('XHTMLHandler', xhr, cb);\n\t          return;\n\t        }\n\t\n\t        // dc:title\t                       //no need to escape '/' here\n\t        var titleMatch = new RegExp('<title>([\\\\s\\\\S]+?)</title>', 'im').exec(rt);\n\t        if (titleMatch) {\n\t          var kb = sf.store;\n\t          kb.add(xhr.resource, ns.dc('title'), kb.literal(titleMatch[1]), xhr.resource); // think about xml:lang later\n\t          kb.add(xhr.resource, ns.rdf('type'), ns.link('WebPage'), sf.appNode);\n\t          cb(); // doneFetch, not failed\n\t          return;\n\t        }\n\t        sf.addStatus(xhr.req, 'non-XML HTML document, not parsed for data.');\n\t        sf.doneFetch(xhr);\n\t        // sf.failFetch(xhr, \"Sorry, can't yet parse non-XML HTML\")\n\t      };\n\t    };\n\t  };\n\t\n\t  Fetcher.HTMLHandler.toString = function () {\n\t    return 'HTMLHandler';\n\t  };\n\t  Fetcher.HTMLHandler.register = function (sf) {\n\t    sf.mediatypes['text/html'] = {\n\t      'q': 0.9\n\t    };\n\t  };\n\t  Fetcher.HTMLHandler.pattern = new RegExp('text/html');\n\t\n\t  Fetcher.TextHandler = function () {\n\t    this.handlerFactory = function (xhr) {\n\t      xhr.handle = function (cb) {\n\t        // We only speak dialects of XML right now. Is this XML?\n\t        var rt = xhr.responseText;\n\t\n\t        // Look for an XML declaration\n\t        if (rt.match(/\\s*<\\?xml\\s+version\\s*=[^<>]+\\?>/)) {\n\t          sf.addStatus(xhr.req, 'Warning: ' + xhr.resource + \" has an XML declaration. We'll assume \" + \"it's XML but its content-type wasn't XML.\\n\");\n\t          sf.switchHandler('XMLHandler', xhr, cb);\n\t          return;\n\t        }\n\t\n\t        // Look for an XML declaration\n\t        if (rt.slice(0, 500).match(/xmlns:/)) {\n\t          sf.addStatus(xhr.req, \"May have an XML namespace. We'll assume \" + \"it's XML but its content-type wasn't XML.\\n\");\n\t          sf.switchHandler('XMLHandler', xhr, cb);\n\t          return;\n\t        }\n\t\n\t        // We give up finding semantics - this is not an error, just no data\n\t        sf.addStatus(xhr.req, 'Plain text document, no known RDF semantics.');\n\t        sf.doneFetch(xhr);\n\t        //                sf.failFetch(xhr, \"unparseable - text/plain not visibly XML\")\n\t        //                dump(xhr.resource + \" unparseable - text/plain not visibly XML, starts:\\n\" + rt.slice(0, 500)+\"\\n\")\n\t      };\n\t    };\n\t  };\n\t\n\t  Fetcher.TextHandler.toString = function () {\n\t    return 'TextHandler';\n\t  };\n\t  Fetcher.TextHandler.register = function (sf) {\n\t    sf.mediatypes['text/plain'] = {\n\t      'q': 0.5\n\t    };\n\t  };\n\t  Fetcher.TextHandler.pattern = new RegExp('text/plain');\n\t\n\t  Fetcher.N3Handler = function () {\n\t    this.handlerFactory = function (xhr) {\n\t      xhr.handle = function (cb) {\n\t        // Parse the text of this non-XML file\n\t\n\t        // console.log('web.js: Parsing as N3 ' + xhr.resource.uri + ' base: ' + xhr.original.uri) // @@@@ comment me out\n\t        // sf.addStatus(xhr.req, \"N3 not parsed yet...\")\n\t        var p = N3Parser(kb, kb, xhr.original.uri, xhr.original.uri, null, null, '', null);\n\t        //                p.loadBuf(xhr.responseText)\n\t        try {\n\t          p.loadBuf(xhr.responseText);\n\t        } catch (e) {\n\t          var msg = 'Error trying to parse ' + xhr.resource + ' as Notation3:\\n' + e + ':\\n' + e.stack;\n\t          // dump(msg+\"\\n\")\n\t          sf.failFetch(xhr, msg);\n\t          return;\n\t        }\n\t\n\t        sf.addStatus(xhr.req, 'N3 parsed: ' + p.statementCount + ' triples in ' + p.lines + ' lines.');\n\t        sf.store.add(xhr.original, ns.rdf('type'), ns.link('RDFDocument'), sf.appNode);\n\t        // var args = [xhr.original.uri] // Other args needed ever?\n\t        sf.doneFetch(xhr);\n\t      };\n\t    };\n\t  };\n\t\n\t  Fetcher.N3Handler.toString = function () {\n\t    return 'N3Handler';\n\t  };\n\t  Fetcher.N3Handler.register = function (sf) {\n\t    sf.mediatypes['text/n3'] = {\n\t      'q': '1.0'\n\t    }; // as per 2008 spec\n\t    /*\n\t    sf.mediatypes['application/x-turtle'] = {\n\t      'q': 1.0\n\t    } // pre 2008\n\t    */\n\t    sf.mediatypes['text/turtle'] = {\n\t      'q': 1.0\n\t    }; // post 2008\n\t  };\n\t  Fetcher.N3Handler.pattern = new RegExp('(application|text)/(x-)?(rdf\\\\+)?(n3|turtle)');\n\t\n\t  Util.callbackify(this, ['request', 'recv', 'headers', 'load', 'fail', 'refresh', 'retract', 'done']);\n\t\n\t  this.addHandler = function (handler) {\n\t    sf.handlers.push(handler);\n\t    handler.register(sf);\n\t  };\n\t\n\t  this.switchHandler = function (name, xhr, cb, args) {\n\t    var Handler = null;\n\t    for (var i = 0; i < this.handlers.length; i++) {\n\t      if ('' + this.handlers[i] === name) {\n\t        Handler = this.handlers[i];\n\t      }\n\t    }\n\t    if (!Handler) {\n\t      throw new Error('web.js: switchHandler: name=' + name + ' , this.handlers =' + this.handlers + '\\n' + 'switchHandler: switching to ' + Handler + '; sf=' + sf + '; typeof Fetcher=' + (typeof Fetcher === 'undefined' ? 'undefined' : _typeof(Fetcher)) + ';\\n\\t Fetcher.HTMLHandler=' + Fetcher.HTMLHandler + '\\n' + '\\n\\tsf.handlers=' + sf.handlers + '\\n');\n\t    }\n\t    new Handler(args).handlerFactory(xhr);\n\t    xhr.handle(cb);\n\t  };\n\t\n\t  this.addStatus = function (req, status) {\n\t    // <Debug about=\"parsePerformance\">\n\t    var now = new Date();\n\t    status = '[' + now.getHours() + ':' + now.getMinutes() + ':' + now.getSeconds() + '.' + now.getMilliseconds() + '] ' + status;\n\t    // </Debug>\n\t    var kb = this.store;\n\t    var s = kb.the(req, ns.link('status'));\n\t    if (s && s.append) {\n\t      s.append(kb.literal(status));\n\t    } else {\n\t      log.warn('web.js: No list to add to: ' + s + ',' + status); // @@@\n\t    }\n\t  };\n\t\n\t  // Record errors in the system on failure\n\t  // Returns xhr so can just do return this.failfetch(...)\n\t  this.failFetch = function (xhr, status) {\n\t    this.addStatus(xhr.req, status);\n\t    if (!xhr.options.noMeta) {\n\t      kb.add(xhr.original, ns.link('error'), status);\n\t    }\n\t    if (!xhr.resource.sameTerm(xhr.original)) {\n\t      console.log('@@ Recording failure original ' + xhr.original + '( as ' + xhr.resource + ') : ' + xhr.status);\n\t    } else {\n\t      console.log('@@ Recording failure for ' + xhr.original + ': ' + xhr.status);\n\t    }\n\t    this.requested[Uri.docpart(xhr.original.uri)] = xhr.status; // changed 2015 was false\n\t    while (this.fetchCallbacks[xhr.original.uri] && this.fetchCallbacks[xhr.original.uri].length) {\n\t      this.fetchCallbacks[xhr.original.uri].shift()(false, 'Fetch of <' + xhr.original.uri + '> failed: ' + status, xhr);\n\t    }\n\t    delete this.fetchCallbacks[xhr.original.uri];\n\t    this.fireCallbacks('fail', [xhr.original.uri, status]);\n\t    xhr.abort();\n\t    return xhr;\n\t  };\n\t\n\t  // in the why part of the quad distinguish between HTML and HTTP header\n\t  // Reverse is set iif the link was rev= as opposed to rel=\n\t  this.linkData = function (xhr, rel, uri, why, reverse) {\n\t    if (!uri) return;\n\t    var predicate;\n\t    // See http://www.w3.org/TR/powder-dr/#httplink for describedby 2008-12-10\n\t    var obj = kb.sym(Uri.join(uri, xhr.original.uri));\n\t    if (rel === 'alternate' || rel === 'seeAlso' || rel === 'meta' || rel === 'describedby') {\n\t      if (obj.uri === xhr.original.uri) return;\n\t      predicate = ns.rdfs('seeAlso');\n\t    } else if (rel === 'type') {\n\t      predicate = kb.sym('http://www.w3.org/1999/02/22-rdf-syntax-ns#type');\n\t    } else {\n\t      // See https://www.iana.org/assignments/link-relations/link-relations.xml\n\t      // Alas not yet in RDF yet for each predicate\n\t      predicate = kb.sym(Uri.join(rel, 'http://www.iana.org/assignments/link-relations/'));\n\t    }\n\t    if (reverse) {\n\t      kb.add(obj, predicate, xhr.original, why);\n\t    } else {\n\t      kb.add(xhr.original, predicate, obj, why);\n\t    }\n\t  };\n\t\n\t  this.parseLinkHeader = function (xhr, thisReq) {\n\t    var link;\n\t    try {\n\t      link = xhr.getResponseHeader('link'); // May crash from CORS error\n\t    } catch (e) {}\n\t    if (link) {\n\t      var linkexp = /<[^>]*>\\s*(\\s*;\\s*[^\\(\\)<>@,;:\"\\/\\[\\]\\?={} \\t]+=(([^\\(\\)<>@,;:\"\\/\\[\\]\\?={} \\t]+)|(\"[^\"]*\")))*(,|$)/g;\n\t      var paramexp = /[^\\(\\)<>@,;:\"\\/\\[\\]\\?={} \\t]+=(([^\\(\\)<>@,;:\"\\/\\[\\]\\?={} \\t]+)|(\"[^\"]*\"))/g;\n\t\n\t      var matches = link.match(linkexp);\n\t      for (var i = 0; i < matches.length; i++) {\n\t        var split = matches[i].split('>');\n\t        var href = split[0].substring(1);\n\t        var ps = split[1];\n\t        var s = ps.match(paramexp);\n\t        for (var j = 0; j < s.length; j++) {\n\t          var p = s[j];\n\t          var paramsplit = p.split('=');\n\t          // var name = paramsplit[0]\n\t          var rel = paramsplit[1].replace(/[\"']/g, ''); // '\"\n\t          this.linkData(xhr, rel, href, thisReq);\n\t        }\n\t      }\n\t    }\n\t  };\n\t\n\t  this.doneFetch = function (xhr) {\n\t    this.addStatus(xhr.req, 'Done.');\n\t    this.requested[xhr.original.uri] = 'done'; // Kenny\n\t    while (this.fetchCallbacks[xhr.original.uri] && this.fetchCallbacks[xhr.original.uri].length) {\n\t      this.fetchCallbacks[xhr.original.uri].shift()(true, undefined, xhr);\n\t    }\n\t    delete this.fetchCallbacks[xhr.original.uri];\n\t    this.fireCallbacks('done', [xhr.original.uri]);\n\t  };\n\t  var handlerList = [Fetcher.RDFXMLHandler, Fetcher.XHTMLHandler, Fetcher.XMLHandler, Fetcher.HTMLHandler, Fetcher.TextHandler, Fetcher.N3Handler];\n\t  handlerList.map(this.addHandler);\n\t\n\t  /** Note two nodes are now smushed\n\t   **\n\t   ** If only one was flagged as looked up, then\n\t   ** the new node is looked up again, which\n\t   ** will make sure all the URIs are dereferenced\n\t   */\n\t  this.nowKnownAs = function (was, now) {\n\t    if (this.lookedUp[was.uri]) {\n\t      if (!this.lookedUp[now.uri]) this.lookUpThing(now, was); //  @@@@  Transfer userCallback\n\t    } else if (this.lookedUp[now.uri]) {\n\t      if (!this.lookedUp[was.uri]) this.lookUpThing(was, now);\n\t    }\n\t  };\n\t\n\t  // Returns promise of XHR\n\t  //\n\t  //  Writes back to the web what we have in the store for this uri\n\t  this.putBack = function (uri, options) {\n\t    uri = uri.uri || uri; // Accept object or string\n\t    var doc = new NamedNode(uri).doc(); // strip off #\n\t    options.data = serialize(doc, this.store, doc.uri, options.contentType || 'text/turtle');\n\t    return this.webOperation('PUT', uri, options);\n\t  };\n\t\n\t  // Returns promise of XHR\n\t  //\n\t  this.webOperation = function (method, uri, options) {\n\t    uri = uri.uri || uri;options = options || {};\n\t    uri = this.proxyIfNecessary(uri);\n\t    var fetcher = this;\n\t    return new Promise(function (resolve, reject) {\n\t      var xhr = Util.XMLHTTPFactory();\n\t      xhr.options = options;\n\t      xhr.original = fetcher.store.sym(uri);\n\t      if (!options.noMeta && typeof tabulator !== 'undefined') {\n\t        fetcher.saveRequestMetadata(xhr, fetcher.store, uri);\n\t      }\n\t      xhr.onreadystatechange = function () {\n\t        if (xhr.readyState === 4) {\n\t          // NOte a 404 can be not afailure\n\t          var ok = !xhr.status || xhr.status >= 200 && xhr.status < 300;\n\t          if (!options.noMeta && typeof tabulator !== 'undefined') {\n\t            fetcher.saveResponseMetadata(xhr, fetcher.store);\n\t          }\n\t          if (ok) {\n\t            resolve(xhr);\n\t          } else {\n\t            reject(xhr.status + ' ' + xhr.statusText);\n\t          }\n\t        }\n\t      };\n\t      xhr.open(method, uri, true);\n\t      xhr.setRequestHeader('Content-type', options.contentType || 'text/turtle');\n\t      xhr.send(options.data ? options.data : undefined);\n\t    });\n\t  };\n\t\n\t  this.webCopy = function (here, there, content_type) {\n\t    var fetcher = this;\n\t    here = here.uri || here;\n\t    return new Promise(function (resolve, reject) {\n\t      fetcher.webOperation('GET', here).then(function (xhr) {\n\t        fetcher.webOperation('PUT', // @@@ change to binary from text\n\t        there, { data: xhr.responseText, contentType: content_type }).then(function (xhr) {\n\t          resolve(xhr);\n\t        }).catch(function (e) {\n\t          reject(e);\n\t        });\n\t      }).catch(function (e) {\n\t        reject(e);\n\t      });\n\t    });\n\t  };\n\t\n\t  // Looks up something.\n\t  //\n\t  // Looks up all the URIs a things has.\n\t  //\n\t  // Parameters:\n\t  //\n\t  //  term:       canonical term for the thing whose URI is to be dereferenced\n\t  //  rterm:      the resource which refered to this (for tracking bad links)\n\t  //  options:    (old: force paraemter) or dictionary of options:\n\t  //      force:      Load the data even if loaded before\n\t  //  oneDone:   is called as callback(ok, errorbody, xhr) for each one\n\t  //  allDone:   is called as callback(ok, errorbody) for all of them\n\t  // Returns      the number of URIs fetched\n\t  //\n\t  this.lookUpThing = function (term, rterm, options, oneDone, allDone) {\n\t    var uris = kb.uris(term); // Get all URIs\n\t    var success = true;\n\t    var errors = '';\n\t    var outstanding = {};\n\t    var force;\n\t    if (options === false || options === true) {\n\t      // Old signature\n\t      force = options;\n\t      options = { force: force };\n\t    } else {\n\t      if (options === undefined) options = {};\n\t      force = !!options.force;\n\t    }\n\t\n\t    if (typeof uris !== 'undefined') {\n\t      for (var i = 0; i < uris.length; i++) {\n\t        var u = uris[i];\n\t        outstanding[u] = true;\n\t        this.lookedUp[u] = true;\n\t        var sf = this;\n\t\n\t        var requestOne = function requestOne(u1) {\n\t          sf.requestURI(Uri.docpart(u1), rterm, options, function (ok, body, xhr) {\n\t            if (ok) {\n\t              if (oneDone) oneDone(true, u1);\n\t            } else {\n\t              if (oneDone) oneDone(false, body);\n\t              success = false;\n\t              errors += body + '\\n';\n\t            }\n\t            delete outstanding[u];\n\t            if (Object.keys(outstanding).length > 0) {\n\t              return;\n\t            }\n\t            if (allDone) {\n\t              allDone(success, errors);\n\t            }\n\t          });\n\t        };\n\t        requestOne(u);\n\t      }\n\t    }\n\t    return uris.length;\n\t  };\n\t\n\t  /* Promise-based load function\n\t  **\n\t  ** NamedNode -> Promise of xhr\n\t  ** uri string -> Promise of xhr\n\t  ** Array of the above -> Promise of array of xhr\n\t  **\n\t  ** @@ todo: If p1 is array then sequence or parallel fetch of all\n\t  */\n\t  this.load = function (uri, options) {\n\t    var fetcher = this;\n\t    if (uri instanceof Array) {\n\t      var ps = uri.map(function (x) {\n\t        return fetcher.load(x);\n\t      });\n\t      return Promise.all(ps);\n\t    }\n\t    uri = uri.uri || uri; // NamedNode or URI string\n\t    return new Promise(function (resolve, reject) {\n\t      fetcher.nowOrWhenFetched(uri, options, function (ok, message, xhr) {\n\t        if (ok) {\n\t          resolve(xhr);\n\t        } else {\n\t          reject(message);\n\t        }\n\t      });\n\t    });\n\t  };\n\t\n\t  /*  Ask for a doc to be loaded if necessary then call back\n\t  **\n\t  ** Changed 2013-08-20:  Added (ok, errormessage) params to callback\n\t  **\n\t  ** Calling methods:\n\t  **   nowOrWhenFetched (uri, userCallback)\n\t  **   nowOrWhenFetched (uri, options, userCallback)\n\t  **   nowOrWhenFetched (uri, referringTerm, userCallback, options)  <-- old\n\t  **   nowOrWhenFetched (uri, referringTerm, userCallback) <-- old\n\t  **\n\t  **  Options include:\n\t  **   referringTerm    The docuemnt in which this link was found.\n\t  **                    this is valuable when finding the source of bad URIs\n\t  **   force            boolean.  Never mind whether you have tried before,\n\t  **                    load this from scratch.\n\t  **   forceContentType Override the incoming header to force the data to be\n\t  **                    treaed as this content-type.\n\t  **/\n\t  this.nowOrWhenFetched = function (uri, p2, userCallback, options) {\n\t    uri = uri.uri || uri; // allow symbol object or string to be passed\n\t    if (typeof p2 === 'function') {\n\t      options = {};\n\t      userCallback = p2;\n\t    } else if (typeof p2 === 'undefined') {// original calling signature\n\t      // referingTerm = undefined\n\t    } else if (p2 instanceof NamedNode) {\n\t      // referingTerm = p2\n\t      options = { referingTerm: p2 };\n\t    } else {\n\t      options = p2;\n\t    }\n\t\n\t    this.requestURI(uri, p2, options || {}, userCallback);\n\t  };\n\t\n\t  this.get = this.nowOrWhenFetched;\n\t\n\t  // Look up response header\n\t  //\n\t  // Returns: a list of header values found in a stored HTTP response\n\t  //      or [] if response was found but no header found\n\t  //      or undefined if no response is available.\n\t  //\n\t  this.getHeader = function (doc, header) {\n\t    var kb = this.store;\n\t    var requests = kb.each(undefined, ns.link('requestedURI'), doc.uri);\n\t    for (var r = 0; r < requests.length; r++) {\n\t      var request = requests[r];\n\t      if (request !== undefined) {\n\t        var response = kb.any(request, ns.link('response'));\n\t        if (request !== undefined) {\n\t          var results = kb.each(response, ns.httph(header.toLowerCase()));\n\t          if (results.length) {\n\t            return results.map(function (v) {\n\t              return v.value;\n\t            });\n\t          }\n\t          return [];\n\t        }\n\t      }\n\t    }\n\t    return undefined;\n\t  };\n\t\n\t  this.proxyIfNecessary = function (uri) {\n\t    if (typeof tabulator !== 'undefined' && tabulator.isExtension) return uri; // Extenstion does not need proxy\n\t\n\t    if (typeof $SolidTestEnvironment !== 'undefined' && $SolidTestEnvironment.localSiteMap) {\n\t      // nested dictionaries of URI parts from origin down\n\t      var hostpath = uri.split('/').slice(2); // the bit after the //\n\t      var lookup = function lookup(parts, index) {\n\t        var z = index[parts.shift()];\n\t        if (!z) return null;\n\t        if (typeof z === 'string') {\n\t          return z + parts.join('/');\n\t        }\n\t        if (!parts) return null;\n\t        return lookup(parts, z);\n\t      };\n\t      var y = lookup(hostpath, $SolidTestEnvironment.localSiteMap);\n\t      if (y) {\n\t        return y;\n\t      }\n\t    }\n\t    // browser does 2014 on as https browser script not trusted\n\t    // If the web app origin is https: then the mixed content rules\n\t    // prevent it loading insecure http: stuff so we need proxy.\n\t    if (Fetcher.crossSiteProxyTemplate && typeof document !== 'undefined' && document.location && ('' + document.location).slice(0, 6) === 'https:' && // origin is secure\n\t    uri.slice(0, 5) === 'http:') {\n\t      // requested data is not\n\t      return Fetcher.crossSiteProxyTemplate.replace('{uri}', encodeURIComponent(uri));\n\t    }\n\t    return uri;\n\t  };\n\t\n\t  this.saveRequestMetadata = function (xhr, kb, docuri) {\n\t    var request = kb.bnode();\n\t    xhr.resource = kb.sym(docuri);\n\t\n\t    xhr.req = request;\n\t    if (!xhr.options.noMeta) {\n\t      // Store no triples but do mind the bnode for req\n\t      var now = new Date();\n\t      var timeNow = '[' + now.getHours() + ':' + now.getMinutes() + ':' + now.getSeconds() + '] ';\n\t      kb.add(request, ns.rdfs('label'), kb.literal(timeNow + ' Request for ' + docuri), this.appNode);\n\t      kb.add(request, ns.link('requestedURI'), kb.literal(docuri), this.appNode);\n\t      if (xhr.original && xhr.original.uri !== docuri) {\n\t        kb.add(request, ns.link('orginalURI'), kb.literal(xhr.original.uri), this.appNode);\n\t      }\n\t      kb.add(request, ns.link('status'), kb.collection(), this.appNode);\n\t    }\n\t    return request;\n\t  };\n\t\n\t  this.saveResponseMetadata = function (xhr, kb) {\n\t    var response = kb.bnode();\n\t\n\t    if (xhr.req) kb.add(xhr.req, ns.link('response'), response);\n\t    kb.add(response, ns.http('status'), kb.literal(xhr.status), response);\n\t    kb.add(response, ns.http('statusText'), kb.literal(xhr.statusText), response);\n\t\n\t    xhr.headers = {};\n\t    if (Uri.protocol(xhr.resource.uri) === 'http' || Uri.protocol(xhr.resource.uri) === 'https') {\n\t      xhr.headers = Util.getHTTPHeaders(xhr);\n\t      for (var h in xhr.headers) {\n\t        // trim below for Safari - adds a CR!\n\t        var value = xhr.headers[h].trim();\n\t        var h2 = h.toLowerCase();\n\t        kb.add(response, ns.httph(h2), value, response);\n\t        if (h2 === 'content-type') {\n\t          // Convert to RDF type\n\t          kb.add(xhr.resource, ns.rdf('type'), Util.mediaTypeClass(value), response);\n\t        }\n\t      }\n\t    }\n\t    return response;\n\t  };\n\t\n\t  /** Requests a document URI and arranges to load the document.\n\t   ** Parameters:\n\t   **\t    term:  term for the thing whose URI is to be dereferenced\n\t   **      rterm:  the resource which refered to this (for tracking bad links)\n\t   **      options:\n\t   **              force:  Load the data even if loaded before\n\t   **              withCredentials:   flag for XHR/CORS etc\n\t   **      userCallback:  Called with (true) or (false, errorbody, {status: 400}) after load is done or failed\n\t   ** Return value:\n\t   **\t    The xhr object for the HTTP access\n\t   **      null if the protocol is not a look-up protocol,\n\t   **              or URI has already been loaded\n\t   */\n\t  this.requestURI = function (docuri, rterm, options, userCallback) {\n\t    // sources_request_new\n\t    // Various calling conventions\n\t    docuri = docuri.uri || docuri; // NamedNode or string\n\t    docuri = docuri.split('#')[0];\n\t    if (typeof options === 'boolean') {\n\t      options = { 'force': options }; // Ols dignature\n\t    }\n\t    if (typeof options === 'undefined') options = {};\n\t\n\t    var force = !!options.force;\n\t    var kb = this.store;\n\t    var args = arguments;\n\t    var baseURI = options.baseURI || docuri; // Preseve though proxying etc\n\t    options.userCallback = userCallback;\n\t\n\t    var pcol = Uri.protocol(docuri);\n\t    if (pcol === 'tel' || pcol === 'mailto' || pcol === 'urn') {\n\t      // \"No look-up operation on these, but they are not errors?\"\n\t      console.log('Unsupported protocol in: ' + docuri);\n\t      return userCallback(false, 'Unsupported protocol', { 'status': 900 }) || undefined;\n\t    }\n\t    var docterm = kb.sym(docuri);\n\t\n\t    var sta = this.getState(docuri);\n\t    if (!force) {\n\t      if (sta === 'fetched') {\n\t        return userCallback ? userCallback(true) : undefined;\n\t      }\n\t      if (sta === 'failed') {\n\t        return userCallback ? userCallback(false, 'Previously failed. ' + this.requested[docuri], { 'status': this.requested[docuri] }) : undefined; // An xhr standin\n\t      }\n\t      // if (sta === 'requested') return userCallback? userCallback(false, \"Sorry already requested - pending already.\", {'status': 999 }) : undefined\n\t    } else {\n\t      delete this.nonexistant[docuri];\n\t    }\n\t    // @@ Should allow concurrent requests\n\t\n\t    // If it is 'failed', then shoulkd we try again?  I think so so an old error doens't get stuck\n\t    // if (sta === 'unrequested')\n\t\n\t    this.fireCallbacks('request', args); // Kenny: fire 'request' callbacks here\n\t    // dump( \"web.js: Requesting uri: \" + docuri + \"\\n\" )\n\t\n\t    if (userCallback) {\n\t      if (!this.fetchCallbacks[docuri]) {\n\t        this.fetchCallbacks[docuri] = [userCallback];\n\t      } else {\n\t        this.fetchCallbacks[docuri].push(userCallback);\n\t      }\n\t    }\n\t\n\t    if (this.requested[docuri] === true) {\n\t      return; // Don't ask again - wait for existing call\n\t    } else {\n\t      this.requested[docuri] = true;\n\t    }\n\t\n\t    if (!options.noMeta && rterm && rterm.uri) {\n\t      kb.add(docterm.uri, ns.link('requestedBy'), rterm.uri, this.appNode);\n\t    }\n\t\n\t    var xhr = Util.XMLHTTPFactory();\n\t    var req = xhr.req = kb.bnode();\n\t    xhr.original = kb.sym(baseURI);\n\t    // console.log('XHR original: ' + xhr.original)\n\t    xhr.options = options;\n\t    xhr.resource = docterm; // This might be proxified\n\t    var sf = this;\n\t\n\t    var now = new Date();\n\t    var timeNow = '[' + now.getHours() + ':' + now.getMinutes() + ':' + now.getSeconds() + '] ';\n\t    if (!options.noMeta) {\n\t      kb.add(req, ns.rdfs('label'), kb.literal(timeNow + ' Request for ' + docuri), this.appNode);\n\t      kb.add(req, ns.link('requestedURI'), kb.literal(docuri), this.appNode);\n\t      kb.add(req, ns.link('status'), kb.collection(), this.appNode);\n\t    }\n\t\n\t    var checkCredentialsRetry = function checkCredentialsRetry() {\n\t      if (!xhr.withCredentials) return false; // not dealt with\n\t\n\t      if (xhr.retriedWithCredentials) {\n\t        return true;\n\t      }\n\t      xhr.retriedWithCredentials = true; // protect against called twice\n\t      console.log('web: Retrying with no credentials for ' + xhr.resource);\n\t      xhr.abort();\n\t      delete sf.requested[docuri]; // forget the original request happened\n\t      var newopt = {};\n\t      for (var opt in options) {\n\t        // transfer baseURI etc\n\t        if (options.hasOwnProperty(opt)) {\n\t          newopt[opt] = options[opt];\n\t        }\n\t      }\n\t      newopt.withCredentials = false;\n\t      sf.addStatus(xhr.req, 'Abort: Will retry with credentials SUPPRESSED to see if that helps');\n\t      sf.requestURI(docuri, rterm, newopt, xhr.userCallback); // userCallback already registered (with where?)\n\t      return true;\n\t    };\n\t\n\t    var onerrorFactory = function onerrorFactory(xhr) {\n\t      return function (event) {\n\t        xhr.onErrorWasCalled = true; // debugging and may need it\n\t        if (typeof document !== 'undefined') {\n\t          // Mashup situation, not node etc\n\t          if (Fetcher.crossSiteProxyTemplate && document.location && !xhr.proxyUsed) {\n\t            var hostpart = Uri.hostpart;\n\t            var here = '' + document.location;\n\t            var uri = xhr.resource.uri;\n\t            if (hostpart(here) && hostpart(uri) && hostpart(here) !== hostpart(uri)) {\n\t              // If cross-site\n\t              if (xhr.status === 401 || xhr.status === 403 || xhr.status === 404) {\n\t                onreadystatechangeFactory(xhr)();\n\t              } else {\n\t                // IT IS A PAIN THAT NO PROPER ERROR REPORTING\n\t                if (checkCredentialsRetry(xhr)) {\n\t                  // If credentials flag set, retry without,\n\t                  return;\n\t                }\n\t                // If it wasn't, or we already tried that\n\t                var newURI = Fetcher.crossSiteProxy(uri);\n\t                console.log('web: Direct failed so trying proxy ' + newURI);\n\t                sf.addStatus(xhr.req, 'BLOCKED -> Cross-site Proxy to <' + newURI + '>');\n\t                if (xhr.aborted) return;\n\t\n\t                var kb = sf.store;\n\t                var oldreq = xhr.req;\n\t                if (!xhr.options.noMeta) {\n\t                  kb.add(oldreq, ns.http('redirectedTo'), kb.sym(newURI), oldreq);\n\t                }\n\t                xhr.abort();\n\t                xhr.aborted = true;\n\t\n\t                sf.addStatus(oldreq, 'redirected to new request'); // why\n\t                // the callback throws an exception when called from xhr.onerror (so removed)\n\t                // sf.fireCallbacks('done', args) // Are these args right? @@@   Not done yet! done means success\n\t                sf.requested[xhr.resource.uri] = 'redirected';\n\t                sf.redirectedTo[xhr.resource.uri] = newURI;\n\t\n\t                if (sf.fetchCallbacks[xhr.resource.uri]) {\n\t                  if (!sf.fetchCallbacks[newURI]) {\n\t                    sf.fetchCallbacks[newURI] = [];\n\t                  }\n\t                  sf.fetchCallbacks[newURI] === sf.fetchCallbacks[newURI].concat(sf.fetchCallbacks[xhr.resource.uri]);\n\t                  delete sf.fetchCallbacks[xhr.resource.uri];\n\t                }\n\t\n\t                var xhr2 = sf.requestURI(newURI, xhr.resource, xhr.options, xhr.userCallback);\n\t                if (xhr2) {\n\t                  xhr2.proxyUsed = true; // only try the proxy once\n\t                  xhr2.original = xhr.original;\n\t                  console.log('Proxying but original still ' + xhr2.original);\n\t                }\n\t                if (xhr2 && xhr2.req) {\n\t                  if (!xhr.options.noMeta) {\n\t                    kb.add(xhr.req, kb.sym('http://www.w3.org/2007/ont/link#redirectedRequest'), xhr2.req, sf.appNode);\n\t                  }\n\t                  return;\n\t                }\n\t              }\n\t            }\n\t            xhr.CORS_status = 999;\n\t            // xhr.status = 999     forbidden - read-only\n\t          }\n\t        } // mashu\n\t      }; // function of event\n\t    }; // onerrorFactory\n\t\n\t    // Set up callbacks\n\t    var onreadystatechangeFactory = function onreadystatechangeFactory(xhr) {\n\t      return function () {\n\t        var handleResponse = function handleResponse() {\n\t          if (xhr.handleResponseDone) return;\n\t          xhr.handleResponseDone = true;\n\t          var handler = null;\n\t          var thisReq = xhr.req; // Might have changes by redirect\n\t          sf.fireCallbacks('recv', args);\n\t          var kb = sf.store;\n\t          sf.saveResponseMetadata(xhr, kb);\n\t          sf.fireCallbacks('headers', [{ uri: docuri, headers: xhr.headers }]);\n\t\n\t          // Check for masked errors.\n\t          // For \"security reasons\" theboraser hides errors such as CORS errors from\n\t          // the calling code (2015). oneror() used to be called but is not now.\n\t          //\n\t          if (xhr.status === 0) {\n\t            console.log('Masked error - status 0 for ' + xhr.resource.uri);\n\t            if (checkCredentialsRetry(xhr)) {\n\t              // retry is could be credentials flag CORS issue\n\t              return;\n\t            }\n\t            xhr.CORS_status = 900; // unknown masked error\n\t            return;\n\t          }\n\t          if (xhr.status >= 400) {\n\t            // For extra dignostics, keep the reply\n\t            //  @@@ 401 should cause  a retry with credential son\n\t            // @@@ cache the credentials flag by host ????\n\t            if (xhr.status === 404) {\n\t              kb.fetcher.nonexistant[xhr.resource.uri] = true;\n\t            }\n\t            if (xhr.responseText.length > 10) {\n\t              var response2 = kb.bnode();\n\t              kb.add(response2, ns.http('content'), kb.literal(xhr.responseText), response2);\n\t              if (xhr.statusText) {\n\t                kb.add(response2, ns.http('statusText'), kb.literal(xhr.statusText), response2);\n\t              }\n\t              // dump(\"HTTP >= 400 responseText:\\n\"+xhr.responseText+\"\\n\"); // @@@@\n\t            }\n\t            sf.failFetch(xhr, 'HTTP error for ' + xhr.resource + ': ' + xhr.status + ' ' + xhr.statusText);\n\t            return;\n\t          }\n\t\n\t          var loc = xhr.headers['content-location'];\n\t\n\t          // deduce some things from the HTTP transaction\n\t          var addType = function addType(cla) {\n\t            // add type to all redirected resources too\n\t            var prev = thisReq;\n\t            if (loc) {\n\t              var docURI = kb.any(prev, ns.link('requestedURI'));\n\t              if (docURI !== loc) {\n\t                kb.add(kb.sym(loc), ns.rdf('type'), cla, sf.appNode);\n\t              }\n\t            }\n\t            for (;;) {\n\t              var doc = kb.any(prev, ns.link('requestedURI'));\n\t              if (doc && doc.value) {\n\t                kb.add(kb.sym(doc.value), ns.rdf('type'), cla, sf.appNode);\n\t              } // convert Literal\n\t              prev = kb.any(undefined, kb.sym('http://www.w3.org/2007/ont/link#redirectedRequest'), prev);\n\t              if (!prev) break;\n\t              var response = kb.any(prev, kb.sym('http://www.w3.org/2007/ont/link#response'));\n\t              if (!response) break;\n\t              var redirection = kb.any(response, kb.sym('http://www.w3.org/2007/ont/http#status'));\n\t              if (!redirection) break;\n\t              if (redirection !== '301' && redirection !== '302') break;\n\t            }\n\t          };\n\t          // This is a minimal set to allow the use of damaged servers if necessary\n\t          var extensionToContentType = {\n\t            'rdf': 'application/rdf+xml', 'owl': 'application/rdf+xml',\n\t            'n3': 'text/n3', 'ttl': 'text/turtle', 'nt': 'text/n3', 'acl': 'text/n3',\n\t            'html': 'text/html',\n\t            'xml': 'text/xml'\n\t          };\n\t          var guess;\n\t          if (xhr.status === 200) {\n\t            addType(ns.link('Document'));\n\t            var ct = xhr.headers['content-type'];\n\t            if (options.forceContentType) {\n\t              xhr.headers['content-type'] = options.forceContentType;\n\t            }\n\t            if (!ct || ct.indexOf('application/octet-stream') >= 0) {\n\t              guess = extensionToContentType[xhr.resource.uri.split('.').pop()];\n\t              if (guess) {\n\t                xhr.headers['content-type'] = guess;\n\t              }\n\t            }\n\t            if (ct) {\n\t              if (ct.indexOf('image/') === 0 || ct.indexOf('application/pdf') === 0) addType(kb.sym('http://purl.org/dc/terms/Image'));\n\t            }\n\t            if (options.clearPreviousData) {\n\t              // Before we parse new data clear old but only on 200\n\t              kb.removeDocument(xhr.resource);\n\t            }\n\t          }\n\t          // application/octet-stream; charset=utf-8\n\t\n\t          if (Uri.protocol(xhr.resource.uri) === 'file' || Uri.protocol(xhr.resource.uri) === 'chrome') {\n\t            if (options.forceContentType) {\n\t              xhr.headers['content-type'] = options.forceContentType;\n\t            } else {\n\t              guess = extensionToContentType[xhr.resource.uri.split('.').pop()];\n\t              if (guess) {\n\t                xhr.headers['content-type'] = guess;\n\t              } else {\n\t                xhr.headers['content-type'] = 'text/xml';\n\t              }\n\t            }\n\t          }\n\t\n\t          // If we have alread got the thing at this location, abort\n\t          if (loc) {\n\t            var udoc = Uri.join(xhr.resource.uri, loc);\n\t            if (!force && udoc !== xhr.resource.uri && sf.requested[udoc] && sf.requested[udoc] === 'done') {\n\t              // we have already fetched this in fact.\n\t              // should we smush too?\n\t              // log.info(\"HTTP headers indicate we have already\" + \" retrieved \" + xhr.resource + \" as \" + udoc + \". Aborting.\")\n\t              sf.doneFetch(xhr);\n\t              xhr.abort();\n\t              return;\n\t            }\n\t            sf.requested[udoc] = true;\n\t          }\n\t\n\t          for (var x = 0; x < sf.handlers.length; x++) {\n\t            if (xhr.headers['content-type'] && xhr.headers['content-type'].match(sf.handlers[x].pattern)) {\n\t              handler = new sf.handlers[x]();\n\t              break;\n\t            }\n\t          }\n\t\n\t          sf.parseLinkHeader(xhr, thisReq);\n\t\n\t          if (handler) {\n\t            try {\n\t              handler.handlerFactory(xhr);\n\t            } catch (e) {\n\t              // Try to avoid silent errors\n\t              sf.failFetch(xhr, 'Exception handling content-type ' + xhr.headers['content-type'] + ' was: ' + e);\n\t            }\n\t          } else {\n\t            sf.doneFetch(xhr); //  Not a problem, we just don't extract data.\n\t            /*\n\t            // sf.failFetch(xhr, \"Unhandled content type: \" + xhr.headers['content-type']+\n\t            //        \", readyState = \"+xhr.readyState)\n\t            */\n\t            return;\n\t          }\n\t        };\n\t\n\t        // DONE: 4\n\t        // HEADERS_RECEIVED: 2\n\t        // LOADING: 3\n\t        // OPENED: 1\n\t        // UNSENT: 0\n\t\n\t        // log.debug(\"web.js: XHR \" + xhr.resource.uri + ' readyState='+xhr.readyState); // @@@@ comment me out\n\t\n\t        switch (xhr.readyState) {\n\t          case 0:\n\t            var uri = xhr.resource.uri;\n\t            var newURI;\n\t            if (this.crossSiteProxyTemplate && typeof document !== 'undefined' && document.location) {\n\t              // In mashup situation\n\t              var hostpart = Uri.hostpart;\n\t              var here = '' + document.location;\n\t              if (hostpart(here) && hostpart(uri) && hostpart(here) !== hostpart(uri)) {\n\t                newURI = this.crossSiteProxyTemplate.replace('{uri}', encodeURIComponent(uri));\n\t                sf.addStatus(xhr.req, 'BLOCKED -> Cross-site Proxy to <' + newURI + '>');\n\t                if (xhr.aborted) return;\n\t\n\t                var kb = sf.store;\n\t                var oldreq = xhr.req;\n\t                kb.add(oldreq, ns.http('redirectedTo'), kb.sym(newURI), oldreq);\n\t\n\t                // //////////// Change the request node to a new one:  @@@@@@@@@@@@ Duplicate?\n\t                var newreq = xhr.req = kb.bnode(); // Make NEW reqest for everything else\n\t                kb.add(oldreq, ns.http('redirectedRequest'), newreq, xhr.req);\n\t\n\t                var now = new Date();\n\t                var timeNow = '[' + now.getHours() + ':' + now.getMinutes() + ':' + now.getSeconds() + '] ';\n\t                kb.add(newreq, ns.rdfs('label'), kb.literal(timeNow + ' Request for ' + newURI), this.appNode);\n\t                kb.add(newreq, ns.link('status'), kb.collection(), this.appNode);\n\t                kb.add(newreq, ns.link('requestedURI'), kb.literal(newURI), this.appNode);\n\t\n\t                var response = kb.bnode();\n\t                kb.add(oldreq, ns.link('response'), response);\n\t                // kb.add(response, ns.http('status'), kb.literal(xhr.status), response)\n\t                // if (xhr.statusText) kb.add(response, ns.http('statusText'), kb.literal(xhr.statusText), response)\n\t\n\t                xhr.abort();\n\t                xhr.aborted = true;\n\t                xhr.redirected = true;\n\t\n\t                sf.addStatus(oldreq, 'redirected XHR'); // why\n\t\n\t                if (sf.fetchCallbacks[xhr.resource.uri]) {\n\t                  if (!sf.fetchCallbacks[newURI]) {\n\t                    sf.fetchCallbacks[newURI] = [];\n\t                  }\n\t                  sf.fetchCallbacks[newURI] === sf.fetchCallbacks[newURI].concat(sf.fetchCallbacks[xhr.resource.uri]);\n\t                  delete sf.fetchCallbacks[xhr.resource.uri];\n\t                }\n\t\n\t                sf.fireCallbacks('redirected', args); // Are these args right? @@@\n\t                sf.requested[xhr.resource.uri] = 'redirected';\n\t\n\t                var xhr2 = sf.requestURI(newURI, xhr.resource, xhr.options || {}, xhr.userCallback);\n\t                if (xhr2 && xhr2.req) {\n\t                  kb.add(xhr.req, kb.sym('http://www.w3.org/2007/ont/link#redirectedRequest'), xhr2.req, sf.appNode);\n\t                  return;\n\t                }\n\t              }\n\t            }\n\t            sf.failFetch(xhr, 'HTTP Blocked. (ReadyState 0) Cross-site violation for <' + docuri + '>');\n\t\n\t            break;\n\t\n\t          case 3:\n\t            // Intermediate state -- 3 may OR MAY NOT be called, selon browser.\n\t            // handleResponse();   // In general it you can't do it yet as the headers are in but not the data\n\t            break;\n\t          case 4:\n\t            // Final state for this XHR but may be redirected\n\t            handleResponse();\n\t            // Now handle\n\t            if (xhr.handle && xhr.responseText !== undefined) {\n\t              // can be validly zero length\n\t              if (sf.requested[xhr.resource.uri] === 'redirected') {\n\t                break;\n\t              }\n\t              sf.fireCallbacks('load', args);\n\t              xhr.handle(function () {\n\t                sf.doneFetch(xhr);\n\t              });\n\t            } else {\n\t              if (xhr.redirected) {\n\t                sf.addStatus(xhr.req, 'Aborted and redirected to new request.');\n\t              } else {\n\t                sf.addStatus(xhr.req, 'Fetch over. No data handled. Aborted = ' + xhr.aborted);\n\t              }\n\t              // sf.failFetch(xhr, \"HTTP failed unusually. (no handler set) (x-site violation? no net?) for <\"+\n\t              //    docuri+\">\")\n\t            }\n\t            break;\n\t        } // switch\n\t      };\n\t    };\n\t\n\t    // Map the URI to a localhost proxy if we are running on localhost\n\t    // This is used for working offline, e.g. on planes.\n\t    // Is the script istelf is running in localhost, then access all data in a localhost mirror.\n\t    // Do not remove without checking with TimBL\n\t    var uri2 = docuri;\n\t    if (typeof tabulator !== 'undefined' && tabulator.preferences.get('offlineModeUsingLocalhost')) {\n\t      if (uri2.slice(0, 7) === 'http://' && uri2.slice(7, 17) !== 'localhost/') {\n\t        uri2 = 'http://localhost/' + uri2.slice(7);\n\t        log.warn('Localhost kludge for offline use: actually getting <' + uri2 + '>');\n\t      } else {\n\t        // log.warn(\"Localhost kludge NOT USED <\" + uri2 + \">\")\n\t      }\n\t    } else {}\n\t      // log.warn(\"Localhost kludge OFF offline use: actually getting <\" + uri2 + \">\")\n\t\n\t      // 2014 probelm:\n\t      // XMLHttpRequest cannot load http://www.w3.org/People/Berners-Lee/card.\n\t      // A wildcard '*' cannot be used in the 'Access-Control-Allow-Origin' header when the credentials flag is true.\n\t      // @ Many ontology files under http: and need CORS wildcard -> can't have withCredentials\n\t\n\t    var withCredentials = uri2.slice(0, 6) === 'https:'; // @@ Kludge -- need for webid which typically is served from https\n\t    if (options.withCredentials !== undefined) {\n\t      withCredentials = options.withCredentials;\n\t    }\n\t    var actualProxyURI = this.proxyIfNecessary(uri2);\n\t\n\t    // Setup the request\n\t    // var xhr\n\t    // xhr = Util.XMLHTTPFactory()\n\t    xhr.onerror = onerrorFactory(xhr);\n\t    xhr.onreadystatechange = onreadystatechangeFactory(xhr);\n\t    xhr.timeout = sf.timeout;\n\t    xhr.withCredentials = withCredentials;\n\t    xhr.actualProxyURI = actualProxyURI;\n\t\n\t    xhr.req = req;\n\t    xhr.options = options;\n\t    xhr.options = options;\n\t    xhr.resource = docterm;\n\t    xhr.requestedURI = uri2;\n\t\n\t    xhr.ontimeout = function () {\n\t      sf.failFetch(xhr, 'requestTimeout');\n\t    };\n\t    try {\n\t      xhr.open('GET', actualProxyURI, this.async);\n\t    } catch (er) {\n\t      return this.failFetch(xhr, 'XHR open for GET failed for <' + uri2 + '>:\\n\\t' + er);\n\t    }\n\t    if (force) {\n\t      // must happen after open\n\t      xhr.setRequestHeader('Cache-control', 'no-cache');\n\t    }\n\t\n\t    // Set redirect callback and request headers -- alas Firefox Extension Only\n\t    if (typeof tabulator !== 'undefined' && tabulator.isExtension && xhr.channel && (Uri.protocol(xhr.resource.uri) === 'http' || Uri.protocol(xhr.resource.uri) === 'https')) {\n\t      try {\n\t        xhr.channel.notificationCallbacks = {\n\t          getInterface: function getInterface(iid) {\n\t            if (iid.equals(Components.interfaces.nsIChannelEventSink)) {\n\t              return {\n\t                onChannelRedirect: function onChannelRedirect(oldC, newC, flags) {\n\t                  if (xhr.aborted) return;\n\t                  var kb = sf.store;\n\t                  var newURI = newC.URI.spec;\n\t                  var oldreq = xhr.req;\n\t                  if (!xhr.options.noMeta) {\n\t                    sf.addStatus(xhr.req, 'Redirected: ' + xhr.status + ' to <' + newURI + '>');\n\t                    kb.add(oldreq, ns.http('redirectedTo'), kb.sym(newURI), xhr.req);\n\t\n\t                    // //////////// Change the request node to a new one:  @@@@@@@@@@@@ Duplicate code?\n\t                    var newreq = xhr.req = kb.bnode(); // Make NEW reqest for everything else\n\t                    kb.add(oldreq, ns.http('redirectedRequest'), newreq, this.appNode);\n\t\n\t                    var now = new Date();\n\t                    var timeNow = '[' + now.getHours() + ':' + now.getMinutes() + ':' + now.getSeconds() + '] ';\n\t                    kb.add(newreq, ns.rdfs('label'), kb.literal(timeNow + ' Request for ' + newURI), this.appNode);\n\t                    kb.add(newreq, ns.link('status'), kb.collection(), this.appNode);\n\t                    kb.add(newreq, ns.link('requestedURI'), kb.literal(newURI), this.appNode);\n\t                    // /////////////\n\t\n\t                    // // log.info('@@ sources onChannelRedirect'+\n\t                    //               \"Redirected: \"+\n\t                    //               xhr.status + \" to <\" + newURI + \">\"); //@@\n\t                    var response = kb.bnode();\n\t                    // kb.add(response, ns.http('location'), newURI, response); Not on this response\n\t                    kb.add(oldreq, ns.link('response'), response);\n\t                    kb.add(response, ns.http('status'), kb.literal(xhr.status), response);\n\t                    if (xhr.statusText) kb.add(response, ns.http('statusText'), kb.literal(xhr.statusText), response);\n\t                  }\n\t                  if (xhr.status - 0 !== 303) kb.HTTPRedirects[xhr.resource.uri] = newURI; // same document as\n\t                  if (xhr.status - 0 === 301 && rterm) {\n\t                    // 301 Moved\n\t                    var badDoc = Uri.docpart(rterm.uri);\n\t                    var msg = 'Warning: ' + xhr.resource + ' has moved to <' + newURI + '>.';\n\t                    if (rterm) {\n\t                      msg += ' Link in <' + badDoc + ' >should be changed';\n\t                      kb.add(badDoc, kb.sym('http://www.w3.org/2007/ont/link#warning'), msg, sf.appNode);\n\t                    }\n\t                    // dump(msg+\"\\n\")\n\t                  }\n\t                  xhr.abort();\n\t                  xhr.aborted = true;\n\t\n\t                  if (sf.fetchCallbacks[xhr.resource.uri]) {\n\t                    if (!sf.fetchCallbacks[newURI]) {\n\t                      sf.fetchCallbacks[newURI] = [];\n\t                    }\n\t                    sf.fetchCallbacks[newURI] === sf.fetchCallbacks[newURI].concat(sf.fetchCallbacks[xhr.resource.uri]);\n\t                    delete sf.fetchCallbacks[xhr.resource.uri];\n\t                  }\n\t\n\t                  sf.addStatus(oldreq, 'redirected'); // why\n\t                  sf.fireCallbacks('redirected', args); // Are these args right? @@@\n\t                  sf.requested[xhr.resource.uri] = 'redirected';\n\t                  sf.redirectedTo[xhr.resource.uri] = newURI;\n\t\n\t                  var hash = newURI.indexOf('#');\n\t                  if (hash >= 0) {\n\t                    if (!xhr.options.noMeta) {\n\t                      kb.add(xhr.resource, kb.sym('http://www.w3.org/2007/ont/link#warning'), 'Warning: ' + xhr.resource + ' HTTP redirects to' + newURI + ' which should not contain a \"#\" sign');\n\t                    }\n\t                    newURI = newURI.slice(0, hash);\n\t                  }\n\t                  var xhr2 = sf.requestURI(newURI, xhr.resource, xhr.options, xhr.userCallback);\n\t                  if (xhr2 && xhr2.req && !options.noMeta) {\n\t                    kb.add(xhr.req, kb.sym('http://www.w3.org/2007/ont/link#redirectedRequest'), xhr2.req, sf.appNode);\n\t                  }\n\t                  // else dump(\"No xhr.req available for redirect from \"+xhr.resource+\" to \"+newURI+\"\\n\")\n\t                },\n\t\n\t                // See https://developer.mozilla.org/en/XPCOM_Interface_Reference/nsIChannelEventSink\n\t                asyncOnChannelRedirect: function asyncOnChannelRedirect(oldC, newC, flags, callback) {\n\t                  if (xhr.aborted) return;\n\t                  var kb = sf.store;\n\t                  var newURI = newC.URI.spec;\n\t                  var oldreq = xhr.req;\n\t                  sf.addStatus(xhr.req, 'Redirected: ' + xhr.status + ' to <' + newURI + '>');\n\t                  kb.add(oldreq, ns.http('redirectedTo'), kb.sym(newURI), xhr.req);\n\t\n\t                  // //////////// Change the request node to a new one:  @@@@@@@@@@@@ Duplicate?\n\t                  var newreq = xhr.req = kb.bnode(); // Make NEW reqest for everything else\n\t                  // xhr.resource = docterm\n\t                  // xhr.requestedURI = args[0]\n\t\n\t                  // kb.add(kb.sym(newURI), ns.link(\"request\"), req, this.appNode)\n\t                  kb.add(oldreq, ns.http('redirectedRequest'), newreq, xhr.req);\n\t\n\t                  var now = new Date();\n\t                  var timeNow = '[' + now.getHours() + ':' + now.getMinutes() + ':' + now.getSeconds() + '] ';\n\t                  kb.add(newreq, ns.rdfs('label'), kb.literal(timeNow + ' Request for ' + newURI), this.appNode);\n\t                  kb.add(newreq, ns.link('status'), kb.collection(), this.appNode);\n\t                  kb.add(newreq, ns.link('requestedURI'), kb.literal(newURI), this.appNode);\n\t                  // /////////////\n\t\n\t                  // // log.info('@@ sources onChannelRedirect'+\n\t                  //               \"Redirected: \"+\n\t                  //               xhr.status + \" to <\" + newURI + \">\"); //@@\n\t                  var response = kb.bnode();\n\t                  // kb.add(response, ns.http('location'), newURI, response); Not on this response\n\t                  kb.add(oldreq, ns.link('response'), response);\n\t                  kb.add(response, ns.http('status'), kb.literal(xhr.status), response);\n\t                  if (xhr.statusText) kb.add(response, ns.http('statusText'), kb.literal(xhr.statusText), response);\n\t\n\t                  if (xhr.status - 0 !== 303) kb.HTTPRedirects[xhr.resource.uri] = newURI; // same document as\n\t                  if (xhr.status - 0 === 301 && rterm) {\n\t                    // 301 Moved\n\t                    var badDoc = Uri.docpart(rterm.uri);\n\t                    var msg = 'Warning: ' + xhr.resource + ' has moved to <' + newURI + '>.';\n\t                    if (rterm) {\n\t                      msg += ' Link in <' + badDoc + ' >should be changed';\n\t                      kb.add(badDoc, kb.sym('http://www.w3.org/2007/ont/link#warning'), msg, sf.appNode);\n\t                    }\n\t                    // dump(msg+\"\\n\")\n\t                  }\n\t                  xhr.abort();\n\t                  xhr.aborted = true;\n\t\n\t                  var hash = newURI.indexOf('#');\n\t                  if (hash >= 0) {\n\t                    var msg2 = 'Warning: ' + xhr.resource + ' HTTP redirects to' + newURI + ' which do not normally contain a \"#\" sign';\n\t                    // dump(msg+\"\\n\")\n\t                    kb.add(xhr.resource, kb.sym('http://www.w3.org/2007/ont/link#warning'), msg2);\n\t                    newURI = newURI.slice(0, hash);\n\t                  }\n\t                  /*\n\t                  if (sf.fetchCallbacks[xhr.resource.uri]) {\n\t                    if (!sf.fetchCallbacks[newURI]) {\n\t                      sf.fetchCallbacks[newURI] = []\n\t                    }\n\t                    sf.fetchCallbacks[newURI] = sf.fetchCallbacks[newURI].concat(sf.fetchCallbacks[xhr.resource.uri])\n\t                    delete sf.fetchCallbacks[xhr.resource.uri]\n\t                  }\n\t                  */\n\t                  sf.requested[xhr.resource.uri] = 'redirected';\n\t                  sf.redirectedTo[xhr.resource.uri] = newURI;\n\t\n\t                  var xhr2 = sf.requestURI(newURI, xhr.resource, xhr.options, xhr.userCallback);\n\t                  if (xhr2) {\n\t                    // may be no XHR is other URI already loaded\n\t                    xhr2.original = xhr.original; // use this for finding base\n\t                    if (xhr2.req) {\n\t                      kb.add(xhr.req, kb.sym('http://www.w3.org/2007/ont/link#redirectedRequest'), xhr2.req, sf.appNode);\n\t                    }\n\t                  }\n\t                  // else dump(\"No xhr.req available for redirect from \"+xhr.resource+\" to \"+newURI+\"\\n\")\n\t                } // asyncOnChannelRedirect\n\t              };\n\t            }\n\t            return Components.results.NS_NOINTERFACE;\n\t          }\n\t        };\n\t      } catch (err) {\n\t        return sf.failFetch(xhr, \"@@ Couldn't set callback for redirects: \" + err);\n\t      } // try\n\t    } // if Firefox extension\n\t\n\t    try {\n\t      var acceptstring = '';\n\t      for (var type in this.mediatypes) {\n\t        // var attrstring = ''\n\t        if (acceptstring !== '') {\n\t          acceptstring += ', ';\n\t        }\n\t        acceptstring += type;\n\t        for (var attr in this.mediatypes[type]) {\n\t          acceptstring += ';' + attr + '=' + this.mediatypes[type][attr];\n\t        }\n\t      }\n\t      xhr.setRequestHeader('Accept', acceptstring);\n\t      this.addStatus(xhr.req, 'Accept: ' + acceptstring);\n\t\n\t      // if (requester) { xhr.setRequestHeader('Referer',requester) }\n\t    } catch (err) {\n\t      throw new Error(\"Can't set Accept header: \" + err);\n\t    }\n\t\n\t    // Fire\n\t    try {\n\t      xhr.send(null);\n\t    } catch (er) {\n\t      return this.failFetch(xhr, 'XHR send failed:' + er);\n\t    }\n\t    setTimeout(function () {\n\t      if (xhr.readyState !== 4 && sf.isPending(xhr.resource.uri)) {\n\t        sf.failFetch(xhr, 'requestTimeout');\n\t      }\n\t    }, this.timeout);\n\t    this.addStatus(xhr.req, 'HTTP Request sent.');\n\t    return xhr;\n\t  }; // this.requestURI()\n\t\n\t  this.objectRefresh = function (term) {\n\t    var uris = kb.uris(term); // Get all URIs\n\t    if (typeof uris !== 'undefined') {\n\t      for (var i = 0; i < uris.length; i++) {\n\t        this.refresh(this.store.sym(Uri.docpart(uris[i])));\n\t        // what about rterm?\n\t      }\n\t    }\n\t  };\n\t\n\t  // deprecated -- use IndexedFormula.removeDocument(doc)\n\t  this.unload = function (term) {\n\t    this.store.removeMany(undefined, undefined, undefined, term);\n\t    delete this.requested[term.uri]; // So it can be loaded again\n\t  };\n\t\n\t  this.refresh = function (term, userCallback) {\n\t    // sources_refresh\n\t    this.fireCallbacks('refresh', arguments);\n\t    this.requestURI(term.uri, undefined, { force: true, clearPreviousData: true }, userCallback);\n\t  };\n\t\n\t  this.retract = function (term) {\n\t    // sources_retract\n\t    this.store.removeMany(undefined, undefined, undefined, term);\n\t    if (term.uri) {\n\t      delete this.requested[Uri.docpart(term.uri)];\n\t    }\n\t    this.fireCallbacks('retract', arguments);\n\t  };\n\t\n\t  this.getState = function (docuri) {\n\t    if (typeof this.requested[docuri] === 'undefined') {\n\t      return 'unrequested';\n\t    } else if (this.requested[docuri] === true) {\n\t      return 'requested';\n\t    } else if (this.requested[docuri] === 'done') {\n\t      return 'fetched';\n\t    } else if (this.requested[docuri] === 'redirected') {\n\t      return this.getState(this.redirectedTo[docuri]);\n\t    } else {\n\t      // An non-200 HTTP error status\n\t      return 'failed';\n\t    }\n\t  };\n\t\n\t  // doing anyStatementMatching is wasting time\n\t  this.isPending = function (docuri) {\n\t    // sources_pending\n\t    // if it's not pending: false -> flailed 'done' -> done 'redirected' -> redirected\n\t    return this.requested[docuri] === true;\n\t  };\n\t  // var updatesVia = new $rdf.UpdatesVia(this) // Subscribe to headers\n\t  // @@@@@@@@ This is turned off because it causes a websocket to be set up for ANY fetch\n\t  // whether we want to track it ot not. including ontologies loaed though the XSSproxy\n\t}; // End of fetcher\n\t\n\tmodule.exports = Fetcher;\n\n/***/ },\n/* 78 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\t/**\n\t*\n\t*  UTF-8 data encode / decode\n\t*  http://www.webtoolkit.info/\n\t*\n\t**/\n\tvar Uri = __webpack_require__(7);\n\tvar ArrayIndexOf = __webpack_require__(5).ArrayIndexOf;\n\t\n\tvar N3Parser = function () {\n\t\n\t    function hexify(str) {\n\t        // also used in parser\n\t        return encodeURI(str);\n\t    }\n\t\n\t    var Utf8 = {\n\t        // public method for url encoding\n\t        encode: function encode(string) {\n\t            string = string.replace(/\\r\\n/g, \"\\n\");\n\t            var utftext = \"\";\n\t\n\t            for (var n = 0; n < string.length; n++) {\n\t\n\t                var c = string.charCodeAt(n);\n\t\n\t                if (c < 128) {\n\t                    utftext += String.fromCharCode(c);\n\t                } else if (c > 127 && c < 2048) {\n\t                    utftext += String.fromCharCode(c >> 6 | 192);\n\t                    utftext += String.fromCharCode(c & 63 | 128);\n\t                } else {\n\t                    utftext += String.fromCharCode(c >> 12 | 224);\n\t                    utftext += String.fromCharCode(c >> 6 & 63 | 128);\n\t                    utftext += String.fromCharCode(c & 63 | 128);\n\t                }\n\t            }\n\t\n\t            return utftext;\n\t        },\n\t        // public method for url decoding\n\t        decode: function decode(utftext) {\n\t            var string = \"\";\n\t            var i = 0;\n\t\n\t            while (i < utftext.length) {\n\t\n\t                var c = utftext.charCodeAt(i);\n\t                if (c < 128) {\n\t                    string += String.fromCharCode(c);\n\t                    i++;\n\t                } else if (c > 191 && c < 224) {\n\t                    string += String.fromCharCode((c & 31) << 6 | utftext.charCodeAt(i + 1) & 63);\n\t                    i += 2;\n\t                } else {\n\t                    string += String.fromCharCode((c & 15) << 12 | (utftext.charCodeAt(i + 1) & 63) << 6 | utftext.charCodeAt(i + 2) & 63);\n\t                    i += 3;\n\t                }\n\t            }\n\t            return string;\n\t        }\n\t    }; // Things we need to define to make converted pythn code work in js\n\t    // environment of $rdf\n\t\n\t    var RDFSink_forSomeSym = \"http://www.w3.org/2000/10/swap/log#forSome\";\n\t    var RDFSink_forAllSym = \"http://www.w3.org/2000/10/swap/log#forAll\";\n\t    var Logic_NS = \"http://www.w3.org/2000/10/swap/log#\";\n\t\n\t    //  pyjs seems to reference runtime library which I didn't find\n\t\n\t    var pyjslib_Tuple = function pyjslib_Tuple(theList) {\n\t        return theList;\n\t    };\n\t\n\t    var pyjslib_List = function pyjslib_List(theList) {\n\t        return theList;\n\t    };\n\t\n\t    var pyjslib_Dict = function pyjslib_Dict(listOfPairs) {\n\t        if (listOfPairs.length > 0) throw \"missing.js: oops nnonempty dict not imp\";\n\t        return [];\n\t    };\n\t\n\t    var pyjslib_len = function pyjslib_len(s) {\n\t        return s.length;\n\t    };\n\t\n\t    var pyjslib_slice = function pyjslib_slice(str, i, j) {\n\t        if (typeof str.slice == 'undefined') throw '@@ mising.js: No .slice function for ' + str + ' of type ' + (typeof str === 'undefined' ? 'undefined' : _typeof(str));\n\t        if (typeof j == 'undefined' || j == null) return str.slice(i);\n\t        return str.slice(i, j); // @ exactly the same spec?\n\t    };\n\t    var StopIteration = Error('dummy error stop iteration');\n\t\n\t    var pyjslib_Iterator = function pyjslib_Iterator(theList) {\n\t        this.last = 0;\n\t        this.li = theList;\n\t        this.next = function () {\n\t            if (this.last == this.li.length) throw StopIteration;\n\t            return this.li[this.last++];\n\t        };\n\t        return this;\n\t    };\n\t\n\t    var ord = function ord(str) {\n\t        return str.charCodeAt(0);\n\t    };\n\t\n\t    var string_find = function string_find(str, s) {\n\t        return str.indexOf(s);\n\t    };\n\t\n\t    var assertFudge = function assertFudge(condition, desc) {\n\t        if (condition) return;\n\t        if (desc) throw \"python Assertion failed: \" + desc;\n\t        throw \"(python) Assertion failed.\";\n\t    };\n\t\n\t    var stringFromCharCode = function stringFromCharCode(uesc) {\n\t        return String.fromCharCode(uesc);\n\t    };\n\t\n\t    String.prototype.encode = function (encoding) {\n\t        if (encoding != 'utf-8') throw \"UTF8_converter: can only do utf-8\";\n\t        return Utf8.encode(this);\n\t    };\n\t    String.prototype.decode = function (encoding) {\n\t        if (encoding != 'utf-8') throw \"UTF8_converter: can only do utf-8\";\n\t        //return Utf8.decode(this);\n\t        return this;\n\t    };\n\t\n\t    var uripath_join = function uripath_join(base, given) {\n\t        return Uri.join(given, base); // sad but true\n\t    };\n\t\n\t    var becauseSubexpression = null; // No reason needed\n\t    var diag_tracking = 0;\n\t    var diag_chatty_flag = 0;\n\t    var diag_progress = function diag_progress(str) {} /*$rdf.log.debug(str);*/\n\t\n\t    // why_BecauseOfData = function(doc, reason) { return doc };\n\t\n\t\n\t    ;var RDF_type_URI = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\";\n\t    var DAML_sameAs_URI = \"http://www.w3.org/2002/07/owl#sameAs\";\n\t\n\t    /*\n\t    function SyntaxError(details) {\n\t        return new __SyntaxError(details);\n\t    }\n\t    */\n\t\n\t    function __SyntaxError(details) {\n\t        this.details = details;\n\t    }\n\t\n\t    /*\n\t    \n\t    $Id: n3parser.js 14561 2008-02-23 06:37:26Z kennyluck $\n\t    \n\t    HAND EDITED FOR CONVERSION TO JAVASCRIPT\n\t    \n\t    This module implements a Nptation3 parser, and the final\n\t    part of a notation3 serializer.\n\t    \n\t    See also:\n\t    \n\t    Notation 3\n\t    http://www.w3.org/DesignIssues/Notation3\n\t    \n\t    Closed World Machine - and RDF Processor\n\t    http://www.w3.org/2000/10/swap/cwm\n\t    \n\t    To DO: See also \"@@\" in comments\n\t    \n\t    - Clean up interfaces\n\t    ______________________________________________\n\t    \n\t    Module originally by Dan Connolly, includeing notation3\n\t    parser and RDF generator. TimBL added RDF stream model\n\t    and N3 generation, replaced stream model with use\n\t    of common store/formula API.  Yosi Scharf developped\n\t    the module, including tests and test harness.\n\t    \n\t    */\n\t\n\t    var ADDED_HASH = \"#\";\n\t    var LOG_implies_URI = \"http://www.w3.org/2000/10/swap/log#implies\";\n\t    var INTEGER_DATATYPE = \"http://www.w3.org/2001/XMLSchema#integer\";\n\t    var FLOAT_DATATYPE = \"http://www.w3.org/2001/XMLSchema#double\";\n\t    var DECIMAL_DATATYPE = \"http://www.w3.org/2001/XMLSchema#decimal\";\n\t    var DATE_DATATYPE = \"http://www.w3.org/2001/XMLSchema#date\";\n\t    var DATETIME_DATATYPE = \"http://www.w3.org/2001/XMLSchema#dateTime\";\n\t    var BOOLEAN_DATATYPE = \"http://www.w3.org/2001/XMLSchema#boolean\";\n\t    var option_noregen = 0;\n\t    var _notQNameChars = \"\\t\\r\\n !\\\"#$%&'()*.,+/;<=>?@[\\\\]^`{|}~\";\n\t    var _notNameChars = _notQNameChars + \":\";\n\t    var _rdfns = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\";\n\t    var N3CommentCharacter = \"#\";\n\t    var eol = new RegExp(\"^[ \\\\t]*(#[^\\\\n]*)?\\\\r?\\\\n\", 'g');\n\t    var eof = new RegExp(\"^[ \\\\t]*(#[^\\\\n]*)?$\", 'g');\n\t    var ws = new RegExp(\"^[ \\\\t]*\", 'g');\n\t    var signed_integer = new RegExp(\"^[-+]?[0-9]+\", 'g');\n\t    var number_syntax = new RegExp(\"^([-+]?[0-9]+)(\\\\.[0-9]+)?(e[-+]?[0-9]+)?\", 'g');\n\t    var datetime_syntax = new RegExp('^[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9](T[0-9][0-9]:[0-9][0-9](:[0-9][0-9](\\\\.[0-9]*)?)?)?Z?');\n\t\n\t    var digitstring = new RegExp(\"^[0-9]+\", 'g');\n\t    var interesting = new RegExp(\"[\\\\\\\\\\\\r\\\\n\\\\\\\"]\", 'g');\n\t    var langcode = new RegExp(\"^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\", 'g');\n\t    function SinkParser(store, openFormula, thisDoc, baseURI, genPrefix, metaURI, flags, why) {\n\t        return new __SinkParser(store, openFormula, thisDoc, baseURI, genPrefix, metaURI, flags, why);\n\t    }\n\t    function __SinkParser(store, openFormula, thisDoc, baseURI, genPrefix, metaURI, flags, why) {\n\t        if (typeof openFormula == 'undefined') openFormula = null;\n\t        if (typeof thisDoc == 'undefined') thisDoc = \"\";\n\t        if (typeof baseURI == 'undefined') baseURI = null;\n\t        if (typeof genPrefix == 'undefined') genPrefix = \"\";\n\t        if (typeof metaURI == 'undefined') metaURI = null;\n\t        if (typeof flags == 'undefined') flags = \"\";\n\t        if (typeof why == 'undefined') why = null;\n\t        /*\n\t        note: namespace names should *not* end in #;\n\t        the # will get added during qname processing */\n\t\n\t        this._bindings = new pyjslib_Dict([]);\n\t        this._flags = flags;\n\t        if (thisDoc != \"\") {\n\t            assertFudge(thisDoc.indexOf(\":\") >= 0, \"Document URI not absolute: \" + thisDoc);\n\t            this._bindings[\"\"] = thisDoc + \"#\";\n\t        }\n\t        this._store = store;\n\t        if (genPrefix) {\n\t            store.setGenPrefix(genPrefix);\n\t        }\n\t        this._thisDoc = thisDoc;\n\t        this.source = store.sym(thisDoc);\n\t        this.lines = 0;\n\t        this.statementCount = 0;\n\t        this.startOfLine = 0;\n\t        this.previousLine = 0;\n\t        this._genPrefix = genPrefix;\n\t        this.keywords = new pyjslib_List([\"a\", \"this\", \"bind\", \"has\", \"is\", \"of\", \"true\", \"false\"]);\n\t        this.keywordsSet = 0;\n\t        this._anonymousNodes = new pyjslib_Dict([]);\n\t        this._variables = new pyjslib_Dict([]);\n\t        this._parentVariables = new pyjslib_Dict([]);\n\t        this._reason = why;\n\t        this._reason2 = null;\n\t        if (diag_tracking) {\n\t            this._reason2 = why_BecauseOfData(store.sym(thisDoc), this._reason);\n\t        }\n\t        if (baseURI) {\n\t            this._baseURI = baseURI;\n\t        } else {\n\t            if (thisDoc) {\n\t                this._baseURI = thisDoc;\n\t            } else {\n\t                this._baseURI = null;\n\t            }\n\t        }\n\t        assertFudge(!this._baseURI || this._baseURI.indexOf(\":\") >= 0);\n\t        if (!this._genPrefix) {\n\t            if (this._thisDoc) {\n\t                this._genPrefix = this._thisDoc + \"#_g\";\n\t            } else {\n\t                this._genPrefix = RDFSink_uniqueURI();\n\t            }\n\t        }\n\t        if (openFormula == null) {\n\t            if (this._thisDoc) {\n\t                this._formula = store.formula(thisDoc + \"#_formula\");\n\t            } else {\n\t                this._formula = store.formula();\n\t            }\n\t        } else {\n\t            this._formula = openFormula;\n\t        }\n\t        this._context = this._formula;\n\t        this._parentContext = null;\n\t    }\n\t    __SinkParser.prototype.here = function (i) {\n\t        return this._genPrefix + \"_L\" + this.lines + \"C\" + (i - this.startOfLine + 1);\n\t    };\n\t    __SinkParser.prototype.formula = function () {\n\t        return this._formula;\n\t    };\n\t    __SinkParser.prototype.loadStream = function (stream) {\n\t        return this.loadBuf(stream.read());\n\t    };\n\t    __SinkParser.prototype.loadBuf = function (buf) {\n\t        /*\n\t        Parses a buffer and returns its top level formula*/\n\t\n\t        this.startDoc();\n\t        this.feed(buf);\n\t        return this.endDoc();\n\t    };\n\t    __SinkParser.prototype.feed = function (octets) {\n\t        /*\n\t        Feed an octet stream tothe parser\n\t         if BadSyntax is raised, the string\n\t        passed in the exception object is the\n\t        remainder after any statements have been parsed.\n\t        So if there is more data to feed to the\n\t        parser, it should be straightforward to recover.*/\n\t\n\t        var str = octets.decode(\"utf-8\");\n\t        var i = 0;\n\t        while (i >= 0) {\n\t            var j = this.skipSpace(str, i);\n\t            if (j < 0) {\n\t                return;\n\t            }\n\t            var i = this.directiveOrStatement(str, j);\n\t            if (i < 0) {\n\t                throw BadSyntax(this._thisDoc, this.lines, str, j, \"expected directive or statement\");\n\t            }\n\t        }\n\t    };\n\t    __SinkParser.prototype.directiveOrStatement = function (str, h) {\n\t        var i = this.skipSpace(str, h);\n\t        if (i < 0) {\n\t            return i;\n\t        }\n\t        var j = this.directive(str, i);\n\t        if (j >= 0) {\n\t            return this.checkDot(str, j);\n\t        }\n\t        var j = this.statement(str, i);\n\t        if (j >= 0) {\n\t            return this.checkDot(str, j);\n\t        }\n\t        return j;\n\t    };\n\t    __SinkParser.prototype.tok = function (tok, str, i) {\n\t        /*\n\t        Check for keyword.  Space must have been stripped on entry and\n\t        we must not be at end of file.*/\n\t        var whitespace = \"\\t\\n\\v\\f\\r \";\n\t        if (pyjslib_slice(str, i, i + 1) == \"@\") {\n\t            var i = i + 1;\n\t        } else {\n\t            if (ArrayIndexOf(this.keywords, tok) < 0) {\n\t                return -1;\n\t            }\n\t        }\n\t        var k = i + pyjslib_len(tok);\n\t        if (pyjslib_slice(str, i, k) == tok && _notQNameChars.indexOf(str.charAt(k)) >= 0) {\n\t            return k;\n\t        } else {\n\t            return -1;\n\t        }\n\t    };\n\t    __SinkParser.prototype.directive = function (str, i) {\n\t        var j = this.skipSpace(str, i);\n\t        if (j < 0) {\n\t            return j;\n\t        }\n\t        var res = new pyjslib_List([]);\n\t        var j = this.tok(\"bind\", str, i);\n\t        if (j > 0) {\n\t            throw BadSyntax(this._thisDoc, this.lines, str, i, \"keyword bind is obsolete: use @prefix\");\n\t        }\n\t        var j = this.tok(\"keywords\", str, i);\n\t        if (j > 0) {\n\t            var i = this.commaSeparatedList(str, j, res, false);\n\t            if (i < 0) {\n\t                throw BadSyntax(this._thisDoc, this.lines, str, i, \"'@keywords' needs comma separated list of words\");\n\t            }\n\t            this.setKeywords(pyjslib_slice(res, null, null));\n\t            if (diag_chatty_flag > 80) {\n\t                diag_progress(\"Keywords \", this.keywords);\n\t            }\n\t            return i;\n\t        }\n\t        var j = this.tok(\"forAll\", str, i);\n\t        if (j > 0) {\n\t            var i = this.commaSeparatedList(str, j, res, true);\n\t            if (i < 0) {\n\t                throw BadSyntax(this._thisDoc, this.lines, str, i, \"Bad variable list after @forAll\");\n\t            }\n\t\n\t            var __x = new pyjslib_Iterator(res);\n\t            try {\n\t                while (true) {\n\t                    var x = __x.next();\n\t\n\t                    if (ArrayIndexOf(this._variables, x) < 0 || ArrayIndexOf(this._parentVariables, x) >= 0) {\n\t                        this._variables[x] = this._context.newUniversal(x);\n\t                    }\n\t                }\n\t            } catch (e) {\n\t                if (e != StopIteration) {\n\t                    throw e;\n\t                }\n\t            }\n\t\n\t            return i;\n\t        }\n\t        var j = this.tok(\"forSome\", str, i);\n\t        if (j > 0) {\n\t            var i = this.commaSeparatedList(str, j, res, this.uri_ref2);\n\t            if (i < 0) {\n\t                throw BadSyntax(this._thisDoc, this.lines, str, i, \"Bad variable list after @forSome\");\n\t            }\n\t\n\t            var __x = new pyjslib_Iterator(res);\n\t            try {\n\t                while (true) {\n\t                    var x = __x.next();\n\t\n\t                    this._context.declareExistential(x);\n\t                }\n\t            } catch (e) {\n\t                if (e != StopIteration) {\n\t                    throw e;\n\t                }\n\t            }\n\t\n\t            return i;\n\t        }\n\t        var j = this.tok(\"prefix\", str, i);\n\t        if (j >= 0) {\n\t            var t = new pyjslib_List([]);\n\t            var i = this.qname(str, j, t);\n\t            if (i < 0) {\n\t                throw BadSyntax(this._thisDoc, this.lines, str, j, \"expected qname after @prefix\");\n\t            }\n\t            var j = this.uri_ref2(str, i, t);\n\t            if (j < 0) {\n\t                throw BadSyntax(this._thisDoc, this.lines, str, i, \"expected <uriref> after @prefix _qname_\");\n\t            }\n\t            var ns = t[1].uri;\n\t            if (this._baseURI) {\n\t                var ns = uripath_join(this._baseURI, ns);\n\t            } else {\n\t                assertFudge(ns.indexOf(\":\") >= 0, \"With no base URI, cannot handle relative URI for NS\");\n\t            }\n\t            assertFudge(ns.indexOf(\":\") >= 0);\n\t            this._bindings[t[0][0]] = ns;\n\t\n\t            this.bind(t[0][0], hexify(ns));\n\t            return j;\n\t        }\n\t        var j = this.tok(\"base\", str, i);\n\t        if (j >= 0) {\n\t            var t = new pyjslib_List([]);\n\t            var i = this.uri_ref2(str, j, t);\n\t            if (i < 0) {\n\t                throw BadSyntax(this._thisDoc, this.lines, str, j, \"expected <uri> after @base \");\n\t            }\n\t            var ns = t[0].uri;\n\t            if (this._baseURI) {\n\t                var ns = uripath_join(this._baseURI, ns);\n\t            } else {\n\t                throw BadSyntax(this._thisDoc, this.lines, str, j, \"With no previous base URI, cannot use relative URI in @base  <\" + ns + \">\");\n\t            }\n\t            assertFudge(ns.indexOf(\":\") >= 0);\n\t            this._baseURI = ns;\n\t            return i;\n\t        }\n\t        return -1;\n\t    };\n\t    __SinkParser.prototype.bind = function (qn, uri) {\n\t        if (qn == \"\") {} else {\n\t            this._store.setPrefixForURI(qn, uri);\n\t        }\n\t    };\n\t    __SinkParser.prototype.setKeywords = function (k) {\n\t        /*\n\t        Takes a list of strings*/\n\t\n\t        if (k == null) {\n\t            this.keywordsSet = 0;\n\t        } else {\n\t            this.keywords = k;\n\t            this.keywordsSet = 1;\n\t        }\n\t    };\n\t    __SinkParser.prototype.startDoc = function () {};\n\t    __SinkParser.prototype.endDoc = function () {\n\t        /*\n\t        Signal end of document and stop parsing. returns formula*/\n\t\n\t        return this._formula;\n\t    };\n\t    __SinkParser.prototype.makeStatement = function (quad) {\n\t        quad[0].add(quad[2], quad[1], quad[3], this.source);\n\t        this.statementCount += 1;\n\t    };\n\t    __SinkParser.prototype.statement = function (str, i) {\n\t        var r = new pyjslib_List([]);\n\t        var i = this.object(str, i, r);\n\t        if (i < 0) {\n\t            return i;\n\t        }\n\t        var j = this.property_list(str, i, r[0]);\n\t        if (j < 0) {\n\t            throw BadSyntax(this._thisDoc, this.lines, str, i, \"expected propertylist\");\n\t        }\n\t        return j;\n\t    };\n\t    __SinkParser.prototype.subject = function (str, i, res) {\n\t        return this.item(str, i, res);\n\t    };\n\t    __SinkParser.prototype.verb = function (str, i, res) {\n\t        /*\n\t        has _prop_\n\t        is _prop_ of\n\t        a\n\t        =\n\t        _prop_\n\t        >- prop ->\n\t        <- prop -<\n\t        _operator_*/\n\t\n\t        var j = this.skipSpace(str, i);\n\t        if (j < 0) {\n\t            return j;\n\t        }\n\t        var r = new pyjslib_List([]);\n\t        var j = this.tok(\"has\", str, i);\n\t        if (j >= 0) {\n\t            var i = this.prop(str, j, r);\n\t            if (i < 0) {\n\t                throw BadSyntax(this._thisDoc, this.lines, str, j, \"expected property after 'has'\");\n\t            }\n\t            res.push(new pyjslib_Tuple([\"->\", r[0]]));\n\t            return i;\n\t        }\n\t        var j = this.tok(\"is\", str, i);\n\t        if (j >= 0) {\n\t            var i = this.prop(str, j, r);\n\t            if (i < 0) {\n\t                throw BadSyntax(this._thisDoc, this.lines, str, j, \"expected <property> after 'is'\");\n\t            }\n\t            var j = this.skipSpace(str, i);\n\t            if (j < 0) {\n\t                throw BadSyntax(this._thisDoc, this.lines, str, i, \"End of file found, expected property after 'is'\");\n\t                return j;\n\t            }\n\t            var i = j;\n\t            var j = this.tok(\"of\", str, i);\n\t            if (j < 0) {\n\t                throw BadSyntax(this._thisDoc, this.lines, str, i, \"expected 'of' after 'is' <prop>\");\n\t            }\n\t            res.push(new pyjslib_Tuple([\"<-\", r[0]]));\n\t            return j;\n\t        }\n\t        var j = this.tok(\"a\", str, i);\n\t        if (j >= 0) {\n\t            res.push(new pyjslib_Tuple([\"->\", this._store.sym(RDF_type_URI)]));\n\t            return j;\n\t        }\n\t        if (pyjslib_slice(str, i, i + 2) == \"<=\") {\n\t            res.push(new pyjslib_Tuple([\"<-\", this._store.sym(Logic_NS + \"implies\")]));\n\t            return i + 2;\n\t        }\n\t        if (pyjslib_slice(str, i, i + 1) == \"=\") {\n\t            if (pyjslib_slice(str, i + 1, i + 2) == \">\") {\n\t                res.push(new pyjslib_Tuple([\"->\", this._store.sym(Logic_NS + \"implies\")]));\n\t                return i + 2;\n\t            }\n\t            res.push(new pyjslib_Tuple([\"->\", this._store.sym(DAML_sameAs_URI)]));\n\t            return i + 1;\n\t        }\n\t        if (pyjslib_slice(str, i, i + 2) == \":=\") {\n\t            res.push(new pyjslib_Tuple([\"->\", Logic_NS + \"becomes\"]));\n\t            return i + 2;\n\t        }\n\t        var j = this.prop(str, i, r);\n\t        if (j >= 0) {\n\t            res.push(new pyjslib_Tuple([\"->\", r[0]]));\n\t            return j;\n\t        }\n\t        if (pyjslib_slice(str, i, i + 2) == \">-\" || pyjslib_slice(str, i, i + 2) == \"<-\") {\n\t            throw BadSyntax(this._thisDoc, this.lines, str, j, \">- ... -> syntax is obsolete.\");\n\t        }\n\t        return -1;\n\t    };\n\t    __SinkParser.prototype.prop = function (str, i, res) {\n\t        return this.item(str, i, res);\n\t    };\n\t    __SinkParser.prototype.item = function (str, i, res) {\n\t        return this.path(str, i, res);\n\t    };\n\t    __SinkParser.prototype.blankNode = function (uri) {\n\t        return this._context.bnode(uri, this._reason2);\n\t    };\n\t    __SinkParser.prototype.path = function (str, i, res) {\n\t        /*\n\t        Parse the path production.\n\t        */\n\t\n\t        var j = this.nodeOrLiteral(str, i, res);\n\t        if (j < 0) {\n\t            return j;\n\t        }\n\t        while (\"!^.\".indexOf(pyjslib_slice(str, j, j + 1)) >= 0) {\n\t            var ch = pyjslib_slice(str, j, j + 1);\n\t            if (ch == \".\") {\n\t                var ahead = pyjslib_slice(str, j + 1, j + 2);\n\t                if (!ahead || _notNameChars.indexOf(ahead) >= 0 && \":?<[{(\".indexOf(ahead) < 0) {\n\t                    break;\n\t                }\n\t            }\n\t            var subj = res.pop();\n\t            var obj = this.blankNode(this.here(j));\n\t            var j = this.node(str, j + 1, res);\n\t            if (j < 0) {\n\t                throw BadSyntax(this._thisDoc, this.lines, str, j, \"EOF found in middle of path syntax\");\n\t            }\n\t            var pred = res.pop();\n\t            if (ch == \"^\") {\n\t                this.makeStatement(new pyjslib_Tuple([this._context, pred, obj, subj]));\n\t            } else {\n\t                this.makeStatement(new pyjslib_Tuple([this._context, pred, subj, obj]));\n\t            }\n\t            res.push(obj);\n\t        }\n\t        return j;\n\t    };\n\t    __SinkParser.prototype.anonymousNode = function (ln) {\n\t        /*\n\t        Remember or generate a term for one of these _: anonymous nodes*/\n\t\n\t        var term = this._anonymousNodes[ln];\n\t        if (term) {\n\t            return term;\n\t        }\n\t        var term = this._store.bnode(this._context, this._reason2);\n\t        this._anonymousNodes[ln] = term;\n\t        return term;\n\t    };\n\t    __SinkParser.prototype.node = function (str, i, res, subjectAlready) {\n\t        if (typeof subjectAlready == 'undefined') subjectAlready = null;\n\t        /*\n\t        Parse the <node> production.\n\t        Space is now skipped once at the beginning\n\t        instead of in multipe calls to self.skipSpace().\n\t        */\n\t\n\t        var subj = subjectAlready;\n\t        var j = this.skipSpace(str, i);\n\t        if (j < 0) {\n\t            return j;\n\t        }\n\t        var i = j;\n\t        var ch = pyjslib_slice(str, i, i + 1);\n\t        if (ch == \"[\") {\n\t            var bnodeID = this.here(i);\n\t            var j = this.skipSpace(str, i + 1);\n\t            if (j < 0) {\n\t                throw BadSyntax(this._thisDoc, this.lines, str, i, \"EOF after '['\");\n\t            }\n\t            if (pyjslib_slice(str, j, j + 1) == \"=\") {\n\t                var i = j + 1;\n\t                var objs = new pyjslib_List([]);\n\t                var j = this.objectList(str, i, objs);\n\t\n\t                if (j >= 0) {\n\t                    var subj = objs[0];\n\t                    if (pyjslib_len(objs) > 1) {\n\t\n\t                        var __obj = new pyjslib_Iterator(objs);\n\t                        try {\n\t                            while (true) {\n\t                                var obj = __obj.next();\n\t\n\t                                this.makeStatement(new pyjslib_Tuple([this._context, this._store.sym(DAML_sameAs_URI), subj, obj]));\n\t                            }\n\t                        } catch (e) {\n\t                            if (e != StopIteration) {\n\t                                throw e;\n\t                            }\n\t                        }\n\t                    }\n\t                    var j = this.skipSpace(str, j);\n\t                    if (j < 0) {\n\t                        throw BadSyntax(this._thisDoc, this.lines, str, i, \"EOF when objectList expected after [ = \");\n\t                    }\n\t                    if (pyjslib_slice(str, j, j + 1) == \";\") {\n\t                        var j = j + 1;\n\t                    }\n\t                } else {\n\t                    throw BadSyntax(this._thisDoc, this.lines, str, i, \"objectList expected after [= \");\n\t                }\n\t            }\n\t            if (subj == null) {\n\t                var subj = this.blankNode(bnodeID);\n\t            }\n\t            var i = this.property_list(str, j, subj);\n\t            if (i < 0) {\n\t                throw BadSyntax(this._thisDoc, this.lines, str, j, \"property_list expected\");\n\t            }\n\t            var j = this.skipSpace(str, i);\n\t            if (j < 0) {\n\t                throw BadSyntax(this._thisDoc, this.lines, str, i, \"EOF when ']' expected after [ <propertyList>\");\n\t            }\n\t            if (pyjslib_slice(str, j, j + 1) != \"]\") {\n\t                throw BadSyntax(this._thisDoc, this.lines, str, j, \"']' expected\");\n\t            }\n\t            res.push(subj);\n\t            return j + 1;\n\t        }\n\t        if (ch == \"{\") {\n\t            var ch2 = pyjslib_slice(str, i + 1, i + 2);\n\t            if (ch2 == \"$\") {\n\t                i += 1;\n\t                var j = i + 1;\n\t                var mylist = new pyjslib_List([]);\n\t                var first_run = true;\n\t                while (1) {\n\t                    var i = this.skipSpace(str, j);\n\t                    if (i < 0) {\n\t                        throw BadSyntax(this._thisDoc, this.lines, str, i, \"needed '$}', found end.\");\n\t                    }\n\t                    if (pyjslib_slice(str, i, i + 2) == \"$}\") {\n\t                        var j = i + 2;\n\t                        break;\n\t                    }\n\t                    if (!first_run) {\n\t                        if (pyjslib_slice(str, i, i + 1) == \",\") {\n\t                            i += 1;\n\t                        } else {\n\t                            throw BadSyntax(this._thisDoc, this.lines, str, i, \"expected: ','\");\n\t                        }\n\t                    } else {\n\t                        var first_run = false;\n\t                    }\n\t                    var item = new pyjslib_List([]);\n\t                    var j = this.item(str, i, item);\n\t                    if (j < 0) {\n\t                        throw BadSyntax(this._thisDoc, this.lines, str, i, \"expected item in set or '$}'\");\n\t                    }\n\t                    mylist.push(item[0]);\n\t                }\n\t                res.push(this._store.newSet(mylist, this._context));\n\t                return j;\n\t            } else {\n\t                var j = i + 1;\n\t                var oldParentContext = this._parentContext;\n\t                this._parentContext = this._context;\n\t                var parentAnonymousNodes = this._anonymousNodes;\n\t                var grandParentVariables = this._parentVariables;\n\t                this._parentVariables = this._variables;\n\t                this._anonymousNodes = new pyjslib_Dict([]);\n\t                this._variables = this._variables.slice();\n\t                var reason2 = this._reason2;\n\t                this._reason2 = becauseSubexpression;\n\t                if (subj == null) {\n\t                    var subj = this._store.formula();\n\t                }\n\t                this._context = subj;\n\t                while (1) {\n\t                    var i = this.skipSpace(str, j);\n\t                    if (i < 0) {\n\t                        throw BadSyntax(this._thisDoc, this.lines, str, i, \"needed '}', found end.\");\n\t                    }\n\t                    if (pyjslib_slice(str, i, i + 1) == \"}\") {\n\t                        var j = i + 1;\n\t                        break;\n\t                    }\n\t                    var j = this.directiveOrStatement(str, i);\n\t                    if (j < 0) {\n\t                        throw BadSyntax(this._thisDoc, this.lines, str, i, \"expected statement or '}'\");\n\t                    }\n\t                }\n\t                this._anonymousNodes = parentAnonymousNodes;\n\t                this._variables = this._parentVariables;\n\t                this._parentVariables = grandParentVariables;\n\t                this._context = this._parentContext;\n\t                this._reason2 = reason2;\n\t                this._parentContext = oldParentContext;\n\t                res.push(subj.close());\n\t                return j;\n\t            }\n\t        }\n\t        if (ch == \"(\") {\n\t            var thing_type = this._store.list;\n\t            var ch2 = pyjslib_slice(str, i + 1, i + 2);\n\t            if (ch2 == \"$\") {\n\t                var thing_type = this._store.newSet;\n\t                i += 1;\n\t            }\n\t            var j = i + 1;\n\t            var mylist = new pyjslib_List([]);\n\t            while (1) {\n\t                var i = this.skipSpace(str, j);\n\t                if (i < 0) {\n\t                    throw BadSyntax(this._thisDoc, this.lines, str, i, \"needed ')', found end.\");\n\t                }\n\t                if (pyjslib_slice(str, i, i + 1) == \")\") {\n\t                    var j = i + 1;\n\t                    break;\n\t                }\n\t                var item = new pyjslib_List([]);\n\t                var j = this.item(str, i, item);\n\t                if (j < 0) {\n\t                    throw BadSyntax(this._thisDoc, this.lines, str, i, \"expected item in list or ')'\");\n\t                }\n\t                mylist.push(item[0]);\n\t            }\n\t            res.push(thing_type(mylist, this._context));\n\t            return j;\n\t        }\n\t        var j = this.tok(\"this\", str, i);\n\t        if (j >= 0) {\n\t            throw BadSyntax(this._thisDoc, this.lines, str, i, \"Keyword 'this' was ancient N3. Now use @forSome and @forAll keywords.\");\n\t            res.push(this._context);\n\t            return j;\n\t        }\n\t        var j = this.tok(\"true\", str, i);\n\t        if (j >= 0) {\n\t            res.push(true);\n\t            return j;\n\t        }\n\t        var j = this.tok(\"false\", str, i);\n\t        if (j >= 0) {\n\t            res.push(false);\n\t            return j;\n\t        }\n\t        if (subj == null) {\n\t            var j = this.uri_ref2(str, i, res);\n\t            if (j >= 0) {\n\t                return j;\n\t            }\n\t        }\n\t        return -1;\n\t    };\n\t    __SinkParser.prototype.property_list = function (str, i, subj) {\n\t        /*\n\t        Parse property list\n\t        Leaves the terminating punctuation in the buffer\n\t        */\n\t\n\t        while (1) {\n\t            var j = this.skipSpace(str, i);\n\t            if (j < 0) {\n\t                throw BadSyntax(this._thisDoc, this.lines, str, i, \"EOF found when expected verb in property list\");\n\t                return j;\n\t            }\n\t            if (pyjslib_slice(str, j, j + 2) == \":-\") {\n\t                var i = j + 2;\n\t                var res = new pyjslib_List([]);\n\t                var j = this.node(str, i, res, subj);\n\t                if (j < 0) {\n\t                    throw BadSyntax(this._thisDoc, this.lines, str, i, \"bad {} or () or [] node after :- \");\n\t                }\n\t                var i = j;\n\t                continue;\n\t            }\n\t            var i = j;\n\t            var v = new pyjslib_List([]);\n\t            var j = this.verb(str, i, v);\n\t            if (j <= 0) {\n\t                return i;\n\t            }\n\t            var objs = new pyjslib_List([]);\n\t            var i = this.objectList(str, j, objs);\n\t            if (i < 0) {\n\t                throw BadSyntax(this._thisDoc, this.lines, str, j, \"objectList expected\");\n\t            }\n\t\n\t            var __obj = new pyjslib_Iterator(objs);\n\t            try {\n\t                while (true) {\n\t                    var obj = __obj.next();\n\t\n\t                    var pairFudge = v[0];\n\t                    var dir = pairFudge[0];\n\t                    var sym = pairFudge[1];\n\t                    if (dir == \"->\") {\n\t                        this.makeStatement(new pyjslib_Tuple([this._context, sym, subj, obj]));\n\t                    } else {\n\t                        this.makeStatement(new pyjslib_Tuple([this._context, sym, obj, subj]));\n\t                    }\n\t                }\n\t            } catch (e) {\n\t                if (e != StopIteration) {\n\t                    throw e;\n\t                }\n\t            }\n\t\n\t            var j = this.skipSpace(str, i);\n\t            if (j < 0) {\n\t                throw BadSyntax(this._thisDoc, this.lines, str, j, \"EOF found in list of objects\");\n\t                return j;\n\t            }\n\t            if (pyjslib_slice(str, i, i + 1) != \";\") {\n\t                return i;\n\t            }\n\t            var i = i + 1;\n\t        }\n\t    };\n\t    __SinkParser.prototype.commaSeparatedList = function (str, j, res, ofUris) {\n\t        /*\n\t        return value: -1 bad syntax; >1 new position in str\n\t        res has things found appended\n\t         Used to use a final value of the function to be called, e.g. this.bareWord\n\t        but passing the function didn't work fo js converion pyjs\n\t        */\n\t\n\t        var i = this.skipSpace(str, j);\n\t        if (i < 0) {\n\t            throw BadSyntax(this._thisDoc, this.lines, str, i, \"EOF found expecting comma sep list\");\n\t            return i;\n\t        }\n\t        if (str.charAt(i) == \".\") {\n\t            return j;\n\t        }\n\t        if (ofUris) {\n\t            var i = this.uri_ref2(str, i, res);\n\t        } else {\n\t            var i = this.bareWord(str, i, res);\n\t        }\n\t        if (i < 0) {\n\t            return -1;\n\t        }\n\t        while (1) {\n\t            var j = this.skipSpace(str, i);\n\t            if (j < 0) {\n\t                return j;\n\t            }\n\t            var ch = pyjslib_slice(str, j, j + 1);\n\t            if (ch != \",\") {\n\t                if (ch != \".\") {\n\t                    return -1;\n\t                }\n\t                return j;\n\t            }\n\t            if (ofUris) {\n\t                var i = this.uri_ref2(str, j + 1, res);\n\t            } else {\n\t                var i = this.bareWord(str, j + 1, res);\n\t            }\n\t            if (i < 0) {\n\t                throw BadSyntax(this._thisDoc, this.lines, str, i, \"bad list content\");\n\t                return i;\n\t            }\n\t        }\n\t    };\n\t    __SinkParser.prototype.objectList = function (str, i, res) {\n\t        var i = this.object(str, i, res);\n\t        if (i < 0) {\n\t            return -1;\n\t        }\n\t        while (1) {\n\t            var j = this.skipSpace(str, i);\n\t            if (j < 0) {\n\t                throw BadSyntax(this._thisDoc, this.lines, str, j, \"EOF found after object\");\n\t                return j;\n\t            }\n\t            if (pyjslib_slice(str, j, j + 1) != \",\") {\n\t                return j;\n\t            }\n\t            var i = this.object(str, j + 1, res);\n\t            if (i < 0) {\n\t                return i;\n\t            }\n\t        }\n\t    };\n\t    __SinkParser.prototype.checkDot = function (str, i) {\n\t        var j = this.skipSpace(str, i);\n\t        if (j < 0) {\n\t            return j;\n\t        }\n\t        if (pyjslib_slice(str, j, j + 1) == \".\") {\n\t            return j + 1;\n\t        }\n\t        if (pyjslib_slice(str, j, j + 1) == \"}\") {\n\t            return j;\n\t        }\n\t        if (pyjslib_slice(str, j, j + 1) == \"]\") {\n\t            return j;\n\t        }\n\t        throw BadSyntax(this._thisDoc, this.lines, str, j, \"expected '.' or '}' or ']' at end of statement\");\n\t        return i;\n\t    };\n\t    __SinkParser.prototype.uri_ref2 = function (str, i, res) {\n\t        /*\n\t        Generate uri from n3 representation.\n\t         Note that the RDF convention of directly concatenating\n\t        NS and local name is now used though I prefer inserting a '#'\n\t        to make the namesapces look more like what XML folks expect.\n\t        */\n\t\n\t        var qn = new pyjslib_List([]);\n\t        var j = this.qname(str, i, qn);\n\t        if (j >= 0) {\n\t            var pairFudge = qn[0];\n\t            var pfx = pairFudge[0];\n\t            var ln = pairFudge[1];\n\t            if (pfx == null) {\n\t                assertFudge(0, \"not used?\");\n\t                var ns = this._baseURI + ADDED_HASH;\n\t            } else {\n\t                var ns = this._bindings[pfx];\n\t                if (!ns) {\n\t                    if (pfx == \"_\") {\n\t                        res.push(this.anonymousNode(ln));\n\t                        return j;\n\t                    }\n\t                    throw BadSyntax(this._thisDoc, this.lines, str, i, \"Prefix \" + pfx + \" not bound.\");\n\t                }\n\t            }\n\t            var symb = this._store.sym(ns + ln);\n\t            if (ArrayIndexOf(this._variables, symb) >= 0) {\n\t                res.push(this._variables[symb]);\n\t            } else {\n\t                res.push(symb);\n\t            }\n\t            return j;\n\t        }\n\t        var i = this.skipSpace(str, i);\n\t        if (i < 0) {\n\t            return -1;\n\t        }\n\t        if (str.charAt(i) == \"?\") {\n\t            var v = new pyjslib_List([]);\n\t            var j = this.variable(str, i, v);\n\t            if (j > 0) {\n\t                res.push(v[0]);\n\t                return j;\n\t            }\n\t            return -1;\n\t        } else if (str.charAt(i) == \"<\") {\n\t            var i = i + 1;\n\t            var st = i;\n\t            while (i < pyjslib_len(str)) {\n\t                if (str.charAt(i) == \">\") {\n\t                    var uref = pyjslib_slice(str, st, i);\n\t                    if (this._baseURI) {\n\t                        var uref = uripath_join(this._baseURI, uref);\n\t                    } else {\n\t                        assertFudge(uref.indexOf(\":\") >= 0, \"With no base URI, cannot deal with relative URIs\");\n\t                    }\n\t                    if (pyjslib_slice(str, i - 1, i) == \"#\" && !(pyjslib_slice(uref, -1, null) == \"#\")) {\n\t                        var uref = uref + \"#\";\n\t                    }\n\t                    var symb = this._store.sym(uref);\n\t                    if (ArrayIndexOf(this._variables, symb) >= 0) {\n\t                        res.push(this._variables[symb]);\n\t                    } else {\n\t                        res.push(symb);\n\t                    }\n\t                    return i + 1;\n\t                }\n\t                var i = i + 1;\n\t            }\n\t            throw BadSyntax(this._thisDoc, this.lines, str, j, \"unterminated URI reference\");\n\t        } else if (this.keywordsSet) {\n\t            var v = new pyjslib_List([]);\n\t            var j = this.bareWord(str, i, v);\n\t            if (j < 0) {\n\t                return -1;\n\t            }\n\t            if (ArrayIndexOf(this.keywords, v[0]) >= 0) {\n\t                throw BadSyntax(this._thisDoc, this.lines, str, i, \"Keyword \\\"\" + v[0] + \"\\\" not allowed here.\");\n\t            }\n\t            res.push(this._store.sym(this._bindings[\"\"] + v[0]));\n\t            return j;\n\t        } else {\n\t            return -1;\n\t        }\n\t    };\n\t    __SinkParser.prototype.skipSpace = function (str, i) {\n\t        /*\n\t        Skip white space, newlines and comments.\n\t        return -1 if EOF, else position of first non-ws character*/\n\t\n\t        var whitespace = ' \\n\\r\\t\\f\\u000b            ​\\u2028\\u2029　';\n\t        for (var j = i ? i : 0; j < str.length; j++) {\n\t            var ch = str.charAt(j);\n\t            // console.log(\"    skipspace j= \"+j + \" i= \" + i + \" n= \" + str.length);\n\t            // console.log(\" skipspace ch <\" + ch + \">\");\n\t            if (whitespace.indexOf(ch) < 0) {\n\t                //not ws\n\t                // console.log(\" skipspace 2 ch <\" + ch + \">\");\n\t                if (str.charAt(j) === '#') {\n\t                    for (;; j++) {\n\t                        // console.log(\"    skipspace2 j= \"+j + \" i= \" + i + \" n= \" + str.length);\n\t                        if (j === str.length) {\n\t                            return -1; // EOF\n\t                        }\n\t                        if (str.charAt(j) === '\\n') {\n\t                            this.lines = this.lines + 1;\n\t                            break;\n\t                        }\n\t                    };\n\t                } else {\n\t                    // Not hash - something interesting\n\t                    // console.log(\" skipspace 3 ch <\" + ch + \">\");\n\t                    return j;\n\t                }\n\t            } else {\n\t                // Whitespace\n\t                // console.log(\" skipspace 5 ch <\" + ch + \">\");\n\t                if (str.charAt(j) === '\\n') {\n\t                    this.lines = this.lines + 1;\n\t                }\n\t            }\n\t        } // next j\n\t        return -1; // EOF\n\t    };\n\t\n\t    __SinkParser.prototype.variable = function (str, i, res) {\n\t        /*\n\t        ?abc -> variable(:abc)\n\t        */\n\t\n\t        var j = this.skipSpace(str, i);\n\t        if (j < 0) {\n\t            return -1;\n\t        }\n\t        if (pyjslib_slice(str, j, j + 1) != \"?\") {\n\t            return -1;\n\t        }\n\t        var j = j + 1;\n\t        var i = j;\n\t        if (\"0123456789-\".indexOf(str.charAt(j)) >= 0) {\n\t            throw BadSyntax(this._thisDoc, this.lines, str, j, \"Varible name can't start with '\" + str.charAt(j) + \"s'\");\n\t            return -1;\n\t        }\n\t        while (i < pyjslib_len(str) && _notNameChars.indexOf(str.charAt(i)) < 0) {\n\t            var i = i + 1;\n\t        }\n\t        if (this._parentContext == null) {\n\t            throw BadSyntax(this._thisDoc, this.lines, str, j, \"Can't use ?xxx syntax for variable in outermost level: \" + pyjslib_slice(str, j - 1, i));\n\t        }\n\t        res.push(this._store.variable(pyjslib_slice(str, j, i)));\n\t        return i;\n\t    };\n\t    __SinkParser.prototype.bareWord = function (str, i, res) {\n\t        /*\n\t        abc -> :abc\n\t        */\n\t\n\t        var j = this.skipSpace(str, i);\n\t        if (j < 0) {\n\t            return -1;\n\t        }\n\t        var ch = str.charAt(j);\n\t        if (\"0123456789-\".indexOf(ch) >= 0) {\n\t            return -1;\n\t        }\n\t        if (_notNameChars.indexOf(ch) >= 0) {\n\t            return -1;\n\t        }\n\t        var i = j;\n\t        while (i < pyjslib_len(str) && _notNameChars.indexOf(str.charAt(i)) < 0) {\n\t            var i = i + 1;\n\t        }\n\t        res.push(pyjslib_slice(str, j, i));\n\t        return i;\n\t    };\n\t    __SinkParser.prototype.qname = function (str, i, res) {\n\t        /*\n\t         xyz:def -> ('xyz', 'def')\n\t        If not in keywords and keywordsSet: def -> ('', 'def')\n\t        :def -> ('', 'def')\n\t        */\n\t\n\t        var i = this.skipSpace(str, i);\n\t        if (i < 0) {\n\t            return -1;\n\t        }\n\t        var c = str.charAt(i);\n\t        if (\"0123456789-+\".indexOf(c) >= 0) {\n\t            return -1;\n\t        }\n\t        if (_notNameChars.indexOf(c) < 0) {\n\t            var ln = c;\n\t            var i = i + 1;\n\t            while (i < pyjslib_len(str)) {\n\t                var c = str.charAt(i);\n\t                if (_notNameChars.indexOf(c) < 0) {\n\t                    var ln = ln + c;\n\t                    var i = i + 1;\n\t                } else {\n\t                    break;\n\t                }\n\t            }\n\t        } else {\n\t            var ln = \"\";\n\t        }\n\t        if (i < pyjslib_len(str) && str.charAt(i) == \":\") {\n\t            var pfx = ln;\n\t            var i = i + 1;\n\t            var ln = \"\";\n\t            while (i < pyjslib_len(str)) {\n\t                var c = str.charAt(i);\n\t                if (_notNameChars.indexOf(c) < 0) {\n\t                    var ln = ln + c;\n\t                    var i = i + 1;\n\t                } else {\n\t                    break;\n\t                }\n\t            }\n\t            res.push(new pyjslib_Tuple([pfx, ln]));\n\t            return i;\n\t        } else {\n\t            if (ln && this.keywordsSet && ArrayIndexOf(this.keywords, ln) < 0) {\n\t                res.push(new pyjslib_Tuple([\"\", ln]));\n\t                return i;\n\t            }\n\t            return -1;\n\t        }\n\t    };\n\t    __SinkParser.prototype.object = function (str, i, res) {\n\t        var j = this.subject(str, i, res);\n\t        if (j >= 0) {\n\t            return j;\n\t        } else {\n\t            var j = this.skipSpace(str, i);\n\t            if (j < 0) {\n\t                return -1;\n\t            } else {\n\t                var i = j;\n\t            }\n\t            if (str.charAt(i) == \"\\\"\") {\n\t                if (pyjslib_slice(str, i, i + 3) == \"\\\"\\\"\\\"\") {\n\t                    var delim = \"\\\"\\\"\\\"\";\n\t                } else {\n\t                    var delim = \"\\\"\";\n\t                }\n\t                var i = i + pyjslib_len(delim);\n\t                var pairFudge = this.strconst(str, i, delim);\n\t                var j = pairFudge[0];\n\t                var s = pairFudge[1];\n\t                res.push(this._store.literal(s));\n\t                diag_progress(\"New string const \", s, j);\n\t                return j;\n\t            } else {\n\t                return -1;\n\t            }\n\t        }\n\t    };\n\t    __SinkParser.prototype.nodeOrLiteral = function (str, i, res) {\n\t        var j = this.node(str, i, res);\n\t        if (j >= 0) {\n\t            return j;\n\t        } else {\n\t            var j = this.skipSpace(str, i);\n\t            if (j < 0) {\n\t                return -1;\n\t            } else {\n\t                var i = j;\n\t            }\n\t            var ch = str.charAt(i);\n\t            if (\"-+0987654321\".indexOf(ch) >= 0) {\n\t\n\t                datetime_syntax.lastIndex = 0;\n\t                var m = datetime_syntax.exec(str.slice(i));\n\t                if (m != null) {\n\t                    // j =  ( i + datetime_syntax.lastIndex ) ;\n\t                    var val = m[0];\n\t                    j = i + val.length;\n\t                    if (val.indexOf(\"T\") >= 0) {\n\t                        res.push(this._store.literal(val, undefined, this._store.sym(DATETIME_DATATYPE)));\n\t                    } else {\n\t                        res.push(this._store.literal(val, undefined, this._store.sym(DATE_DATATYPE)));\n\t                    }\n\t                } else {\n\t                    number_syntax.lastIndex = 0;\n\t                    var m = number_syntax.exec(str.slice(i));\n\t                    if (m == null) {\n\t                        throw BadSyntax(this._thisDoc, this.lines, str, i, \"Bad number or date syntax\");\n\t                    }\n\t                    j = i + number_syntax.lastIndex;\n\t                    var val = pyjslib_slice(str, i, j);\n\t                    if (val.indexOf(\"e\") >= 0) {\n\t                        res.push(this._store.literal(parseFloat(val), undefined, this._store.sym(FLOAT_DATATYPE)));\n\t                    } else if (pyjslib_slice(str, i, j).indexOf(\".\") >= 0) {\n\t                        res.push(this._store.literal(parseFloat(val), undefined, this._store.sym(DECIMAL_DATATYPE)));\n\t                    } else {\n\t                        res.push(this._store.literal(parseInt(val), undefined, this._store.sym(INTEGER_DATATYPE)));\n\t                    }\n\t                };\n\t                return j; // Where we have got up to\n\t            }\n\t            if (str.charAt(i) == \"\\\"\") {\n\t                if (pyjslib_slice(str, i, i + 3) == \"\\\"\\\"\\\"\") {\n\t                    var delim = \"\\\"\\\"\\\"\";\n\t                } else {\n\t                    var delim = \"\\\"\";\n\t                }\n\t                var i = i + pyjslib_len(delim);\n\t                var dt = null;\n\t                var pairFudge = this.strconst(str, i, delim);\n\t                var j = pairFudge[0];\n\t                var s = pairFudge[1];\n\t                var lang = null;\n\t                if (pyjslib_slice(str, j, j + 1) == \"@\") {\n\t                    langcode.lastIndex = 0;\n\t\n\t                    var m = langcode.exec(str.slice(j + 1));\n\t                    if (m == null) {\n\t                        throw BadSyntax(this._thisDoc, startline, str, i, \"Bad language code syntax on string literal, after @\");\n\t                    }\n\t                    var i = langcode.lastIndex + j + 1;\n\t\n\t                    var lang = pyjslib_slice(str, j + 1, i);\n\t                    var j = i;\n\t                }\n\t                if (pyjslib_slice(str, j, j + 2) == \"^^\") {\n\t                    var res2 = new pyjslib_List([]);\n\t                    var j = this.uri_ref2(str, j + 2, res2);\n\t                    var dt = res2[0];\n\t                }\n\t                res.push(this._store.literal(s, lang, dt));\n\t                return j;\n\t            } else {\n\t                return -1;\n\t            }\n\t        }\n\t    };\n\t    __SinkParser.prototype.strconst = function (str, i, delim) {\n\t        /*\n\t        parse an N3 string constant delimited by delim.\n\t        return index, val\n\t        */\n\t\n\t        var j = i;\n\t        var ustr = \"\";\n\t        var startline = this.lines;\n\t        while (j < pyjslib_len(str)) {\n\t            var i = j + pyjslib_len(delim);\n\t            if (pyjslib_slice(str, j, i) == delim) {\n\t                return new pyjslib_Tuple([i, ustr]);\n\t            }\n\t            if (str.charAt(j) == \"\\\"\") {\n\t                var ustr = ustr + \"\\\"\";\n\t                var j = j + 1;\n\t                continue;\n\t            }\n\t            interesting.lastIndex = 0;\n\t            var m = interesting.exec(str.slice(j));\n\t            if (!m) {\n\t                throw BadSyntax(this._thisDoc, startline, str, j, \"Closing quote missing in string at ^ in \" + pyjslib_slice(str, j - 20, j) + \"^\" + pyjslib_slice(str, j, j + 20));\n\t            }\n\t            var i = j + interesting.lastIndex - 1;\n\t            var ustr = ustr + pyjslib_slice(str, j, i);\n\t            var ch = str.charAt(i);\n\t            if (ch == \"\\\"\") {\n\t                var j = i;\n\t                continue;\n\t            } else if (ch == \"\\r\") {\n\t                var j = i + 1;\n\t                continue;\n\t            } else if (ch == \"\\n\") {\n\t                if (delim == \"\\\"\") {\n\t                    throw BadSyntax(this._thisDoc, startline, str, i, \"newline found in string literal\");\n\t                }\n\t                this.lines = this.lines + 1;\n\t                var ustr = ustr + ch;\n\t                var j = i + 1;\n\t                this.previousLine = this.startOfLine;\n\t                this.startOfLine = j;\n\t            } else if (ch == \"\\\\\") {\n\t                var j = i + 1;\n\t                var ch = pyjslib_slice(str, j, j + 1);\n\t                if (!ch) {\n\t                    throw BadSyntax(this._thisDoc, startline, str, i, \"unterminated string literal (2)\");\n\t                }\n\t                var k = string_find(\"abfrtvn\\\\\\\"\", ch);\n\t                if (k >= 0) {\n\t                    var uch = \"\\a\\b\\f\\r\\t\\v\\n\\\\\\\"\".charAt(k);\n\t                    var ustr = ustr + uch;\n\t                    var j = j + 1;\n\t                } else if (ch == \"u\") {\n\t                    var pairFudge = this.uEscape(str, j + 1, startline);\n\t                    var j = pairFudge[0];\n\t                    var ch = pairFudge[1];\n\t                    var ustr = ustr + ch;\n\t                } else if (ch == \"U\") {\n\t                    var pairFudge = this.UEscape(str, j + 1, startline);\n\t                    var j = pairFudge[0];\n\t                    var ch = pairFudge[1];\n\t                    var ustr = ustr + ch;\n\t                } else {\n\t                    throw BadSyntax(this._thisDoc, this.lines, str, i, \"bad escape\");\n\t                }\n\t            }\n\t        }\n\t        throw BadSyntax(this._thisDoc, this.lines, str, i, \"unterminated string literal\");\n\t    };\n\t    __SinkParser.prototype.uEscape = function (str, i, startline) {\n\t        var j = i;\n\t        var count = 0;\n\t        var value = 0;\n\t        while (count < 4) {\n\t            var chFudge = pyjslib_slice(str, j, j + 1);\n\t            var ch = chFudge.toLowerCase();\n\t            var j = j + 1;\n\t            if (ch == \"\") {\n\t                throw BadSyntax(this._thisDoc, startline, str, i, \"unterminated string literal(3)\");\n\t            }\n\t            var k = string_find(\"0123456789abcdef\", ch);\n\t            if (k < 0) {\n\t                throw BadSyntax(this._thisDoc, startline, str, i, \"bad string literal hex escape\");\n\t            }\n\t            var value = value * 16 + k;\n\t            var count = count + 1;\n\t        }\n\t        var uch = String.fromCharCode(value);\n\t        return new pyjslib_Tuple([j, uch]);\n\t    };\n\t    __SinkParser.prototype.UEscape = function (str, i, startline) {\n\t        var j = i;\n\t        var count = 0;\n\t        var value = '\\\\U';\n\t        while (count < 8) {\n\t            var chFudge = pyjslib_slice(str, j, j + 1);\n\t            var ch = chFudge.toLowerCase();\n\t            var j = j + 1;\n\t            if (ch == \"\") {\n\t                throw BadSyntax(this._thisDoc, startline, str, i, \"unterminated string literal(3)\");\n\t            }\n\t            var k = string_find(\"0123456789abcdef\", ch);\n\t            if (k < 0) {\n\t                throw BadSyntax(this._thisDoc, startline, str, i, \"bad string literal hex escape\");\n\t            }\n\t            var value = value + ch;\n\t            var count = count + 1;\n\t        }\n\t        var uch = stringFromCharCode(\"0x\" + pyjslib_slice(value, 2, 10) - 0);\n\t        return new pyjslib_Tuple([j, uch]);\n\t    };\n\t    function OLD_BadSyntax(uri, lines, str, i, why) {\n\t        return new __OLD_BadSyntax(uri, lines, str, i, why);\n\t    }\n\t    function __OLD_BadSyntax(uri, lines, str, i, why) {\n\t        this._str = str.encode(\"utf-8\");\n\t        this._str = str;\n\t        this._i = i;\n\t        this._why = why;\n\t        this.lines = lines;\n\t        this._uri = uri;\n\t    }\n\t    __OLD_BadSyntax.prototype.toString = function () {\n\t        var str = this._str;\n\t        var i = this._i;\n\t        var st = 0;\n\t        if (i > 60) {\n\t            var pre = \"...\";\n\t            var st = i - 60;\n\t        } else {\n\t            var pre = \"\";\n\t        }\n\t        if (pyjslib_len(str) - i > 60) {\n\t            var post = \"...\";\n\t        } else {\n\t            var post = \"\";\n\t        }\n\t        return \"Line %i of <%s>: Bad syntax (%s) at ^ in:\\n\\\"%s%s^%s%s\\\"\" % new pyjslib_Tuple([this.lines + 1, this._uri, this._why, pre, pyjslib_slice(str, st, i), pyjslib_slice(str, i, i + 60), post]);\n\t    };\n\t    function BadSyntax(uri, lines, str, i, why) {\n\t        return \"Line \" + (lines + 1) + \" of <\" + uri + \">: Bad syntax: \" + why + \"\\nat: \\\"\" + pyjslib_slice(str, i, i + 30) + \"\\\"\";\n\t    }\n\t\n\t    function stripCR(str) {\n\t        var res = \"\";\n\t\n\t        var __ch = new pyjslib_Iterator(str);\n\t        try {\n\t            while (true) {\n\t                var ch = __ch.next();\n\t\n\t                if (ch != \"\\r\") {\n\t                    var res = res + ch;\n\t                }\n\t            }\n\t        } catch (e) {\n\t            if (e != StopIteration) {\n\t                throw e;\n\t            }\n\t        }\n\t\n\t        return res;\n\t    }\n\t\n\t    function dummyWrite(x) {}\n\t\n\t    return SinkParser;\n\t}();\n\t\n\tmodule.exports = N3Parser;\n\n/***/ },\n/* 79 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tmodule.exports = parse;\n\t\n\tvar BlankNode = __webpack_require__(12);\n\tvar jsonld = __webpack_require__(27);\n\tvar Literal = __webpack_require__(13);\n\tvar N3 = __webpack_require__(33); // @@ Goal: remove this dependency\n\tvar N3Parser = __webpack_require__(78);\n\tvar NamedNode = __webpack_require__(8);\n\tvar parseRDFaDOM = __webpack_require__(80).parseRDFaDOM;\n\tvar RDFParser = __webpack_require__(81);\n\tvar sparqlUpdateParser = __webpack_require__(82);\n\tvar Util = __webpack_require__(5);\n\t\n\t/**\n\t * Parse a string and put the result into the graph kb.\n\t * Normal method is sync.\n\t * Unfortunately jsdonld is currently written to need to be called async.\n\t * Hence the mess below with executeCallback.\n\t */\n\tfunction parse(str, kb, base, contentType, callback) {\n\t  try {\n\t    if (contentType === 'text/n3' || contentType === 'text/turtle') {\n\t      var p = N3Parser(kb, kb, base, base, null, null, '', null);\n\t      p.loadBuf(str);\n\t      executeCallback();\n\t    } else if (contentType === 'application/rdf+xml') {\n\t      var parser = new RDFParser(kb);\n\t      parser.parse(Util.parseXML(str), base, kb.sym(base));\n\t      executeCallback();\n\t    } else if (contentType === 'application/xhtml+xml') {\n\t      parseRDFaDOM(Util.parseXML(str, { contentType: 'application/xhtml+xml' }), kb, base);\n\t      executeCallback();\n\t    } else if (contentType === 'text/html') {\n\t      parseRDFaDOM(Util.parseXML(str, { contentType: 'text/html' }), kb, base);\n\t      executeCallback();\n\t    } else if (contentType === 'application/sparql-update') {\n\t      // @@ we handle a subset\n\t      sparqlUpdateParser(str, kb, base);\n\t      executeCallback();\n\t    } else if (contentType === 'application/ld+json' || contentType === 'application/nquads' || contentType === 'application/n-quads') {\n\t      var n3Parser = N3.Parser();\n\t      var triples = [];\n\t      if (contentType === 'application/ld+json') {\n\t        var jsonDocument;\n\t        try {\n\t          jsonDocument = JSON.parse(str);\n\t        } catch (parseErr) {\n\t          callback(parseErr, null);\n\t        }\n\t        jsonld.toRDF(jsonDocument, { format: 'application/nquads' }, nquadCallback);\n\t      } else {\n\t        nquadCallback(null, str);\n\t      }\n\t    } else {\n\t      throw new Error(\"Don't know how to parse \" + contentType + ' yet');\n\t    }\n\t  } catch (e) {\n\t    executeErrorCallback(e);\n\t  }\n\t\n\t  function executeCallback() {\n\t    if (callback) {\n\t      callback(null, kb);\n\t    } else {\n\t      return;\n\t    }\n\t  }\n\t\n\t  function executeErrorCallback(e) {\n\t    if (contentType !== 'application/ld+json' || contentType !== 'application/nquads' || contentType !== 'application/n-quads') {\n\t      if (callback) {\n\t        callback(e, kb);\n\t      } else {\n\t        throw new Error('Error trying to parse <' + base + '> as ' + contentType + ':\\n' + e + ':\\n' + e.stack);\n\t      }\n\t    }\n\t  }\n\t  /*\n\t    function setJsonLdBase (doc, base) {\n\t      if (doc instanceof Array) {\n\t        return\n\t      }\n\t      if (!('@context' in doc)) {\n\t        doc['@context'] = {}\n\t      }\n\t      doc['@context']['@base'] = base\n\t    }\n\t  */\n\t  function nquadCallback(err, nquads) {\n\t    if (err) {\n\t      callback(err, kb);\n\t    }\n\t    try {\n\t      n3Parser.parse(nquads, tripleCallback);\n\t    } catch (err) {\n\t      callback(err, kb);\n\t    }\n\t  }\n\t\n\t  function tripleCallback(err, triple, prefixes) {\n\t    if (err) {\n\t      callback(err, kb);\n\t    }\n\t    if (triple) {\n\t      triples.push(triple);\n\t    } else {\n\t      for (var i = 0; i < triples.length; i++) {\n\t        addTriple(kb, triples[i]);\n\t      }\n\t      callback(null, kb);\n\t    }\n\t  }\n\t\n\t  function addTriple(kb, triple) {\n\t    var subject = createTerm(triple.subject);\n\t    var predicate = createTerm(triple.predicate);\n\t    var object = createTerm(triple.object);\n\t    var why = null;\n\t    if (triple.graph) {\n\t      why = createTerm(triple.graph);\n\t    }\n\t    kb.add(subject, predicate, object, why);\n\t  }\n\t\n\t  function createTerm(termString) {\n\t    var value;\n\t    if (N3.Util.isLiteral(termString)) {\n\t      value = N3.Util.getLiteralValue(termString);\n\t      var language = N3.Util.getLiteralLanguage(termString);\n\t      var datatype = new NamedNode(N3.Util.getLiteralType(termString));\n\t      return new Literal(value, language, datatype);\n\t    } else if (N3.Util.isIRI(termString)) {\n\t      return new NamedNode(termString);\n\t    } else if (N3.Util.isBlank(termString)) {\n\t      value = termString.substring(2, termString.length);\n\t      return new BlankNode(value);\n\t    } else {\n\t      return null;\n\t    }\n\t  }\n\t}\n\n/***/ },\n/* 80 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t//  RDFa Parser for rdflib.js\n\t\n\t// Originally by: Alex Milowski\n\t// From https://github.com/alexmilowski/green-turtle\n\t// Converted: timbl 2015-08-25 not yet working\n\t// Added wrapper: csarven 2016-05-09 working\n\t\n\t// RDFaProcessor.prototype = new Object() // Was URIResolver\n\t\n\t// RDFaProcessor.prototype.constructor=RDFaProcessor\n\t\n\t// options.base = base URI    not really an option, shopuld always be set.\n\t//\n\t\n\tvar BlankNode = __webpack_require__(12);\n\tvar Literal = __webpack_require__(13);\n\tvar rdf = __webpack_require__(75);\n\tvar NamedNode = __webpack_require__(8);\n\tvar Uri = __webpack_require__(7);\n\tvar Util = __webpack_require__(5);\n\t\n\tif (typeof Node === 'undefined') {\n\t  //  @@@@@@ Global. Interface to xmldom.\n\t  var Node = {\n\t    ELEMENT_NODE: 1,\n\t    ATTRIBUTE_NODE: 2,\n\t    TEXT_NODE: 3,\n\t    CDATA_SECTION_NODE: 4,\n\t    ENTITY_REFERENCE_NODE: 5,\n\t    ENTITY_NODE: 6,\n\t    PROCESSING_INSTRUCTION_NODE: 7,\n\t    COMMENT_NODE: 8,\n\t    DOCUMENT_NODE: 9,\n\t    DOCUMENT_TYPE_NODE: 10,\n\t    DOCUMENT_FRAGMENT_NODE: 11,\n\t    NOTATION_NODE: 12\n\t  };\n\t}\n\t\n\tvar RDFaProcessor = function () {\n\t  function RDFaProcessor(kb, options) {\n\t    _classCallCheck(this, RDFaProcessor);\n\t\n\t    this.options = options || {};\n\t    this.kb = kb;\n\t    this.target = options.target || {\n\t      graph: {\n\t        subjects: {},\n\t        prefixes: {},\n\t        terms: {}\n\t      }\n\t    };\n\t    // XXX: Added to track bnodes\n\t    this.blankNodes = [];\n\t    // XXX: Added for normalisation\n\t    this.htmlOptions = {\n\t      'selfClosing': 'br img input area base basefont col colgroup source wbr isindex link meta param hr'\n\t    };\n\t    this.theOne = '_:' + new Date().getTime();\n\t    this.language = null;\n\t    this.vocabulary = null;\n\t    this.blankCounter = 0;\n\t    this.langAttributes = [{ namespaceURI: 'http://www.w3.org/XML/1998/namespace', localName: 'lang' }];\n\t    this.inXHTMLMode = false;\n\t    this.absURIRE = /[\\w\\_\\-]+:\\S+/;\n\t    this.finishedHandlers = [];\n\t    this.init();\n\t  }\n\t\n\t  _createClass(RDFaProcessor, [{\n\t    key: 'addTriple',\n\t    value: function addTriple(origin, subject, predicate, object) {\n\t      var su, ob, pr, or;\n\t      if (typeof subject === 'undefined') {\n\t        su = rdf.namedNode(this.options.base);\n\t      } else {\n\t        su = this.toRDFNodeObject(subject);\n\t      }\n\t      pr = this.toRDFNodeObject(predicate);\n\t      ob = this.toRDFNodeObject(object);\n\t      or = rdf.namedNode(this.options.base);\n\t      // console.log('Adding { ' + su + ' ' + pr + ' ' + ob + ' ' + or + ' }')\n\t      this.kb.add(su, pr, ob, or);\n\t    }\n\t  }, {\n\t    key: 'ancestorPath',\n\t    value: function ancestorPath(node) {\n\t      var path = '';\n\t      while (node && node.nodeType !== Node.DOCUMENT_NODE) {\n\t        path = '/' + node.localName + path;\n\t        node = node.parentNode;\n\t      }\n\t      return path;\n\t    }\n\t  }, {\n\t    key: 'copyMappings',\n\t    value: function copyMappings(mappings) {\n\t      var newMappings = {};\n\t      for (var k in mappings) {\n\t        newMappings[k] = mappings[k];\n\t      }\n\t      return newMappings;\n\t    }\n\t  }, {\n\t    key: 'copyProperties',\n\t    value: function copyProperties() {}\n\t  }, {\n\t    key: 'deriveDateTimeType',\n\t    value: function deriveDateTimeType(value) {\n\t      for (var i = 0; i < RDFaProcessor.dateTimeTypes.length; i++) {\n\t        // console.log(\"Checking \"+value+\" against \"+RDFaProcessor.dateTimeTypes[i].type)\n\t        var matched = RDFaProcessor.dateTimeTypes[i].pattern.exec(value);\n\t        if (matched && matched[0].length === value.length) {\n\t          // console.log(\"Matched!\")\n\t          return RDFaProcessor.dateTimeTypes[i].type;\n\t        }\n\t      }\n\t      return null;\n\t    }\n\t  }, {\n\t    key: 'init',\n\t    value: function init() {}\n\t  }, {\n\t    key: 'newBlankNode',\n\t    value: function newBlankNode() {\n\t      this.blankCounter++;\n\t      return '_:' + this.blankCounter;\n\t    }\n\t  }, {\n\t    key: 'newSubjectOrigin',\n\t    value: function newSubjectOrigin(origin, subject) {}\n\t  }, {\n\t    key: 'parseCURIE',\n\t    value: function parseCURIE(value, prefixes, base) {\n\t      var colon = value.indexOf(':');\n\t      var uri;\n\t      if (colon >= 0) {\n\t        var prefix = value.substring(0, colon);\n\t        if (prefix === '') {\n\t          // default prefix\n\t          uri = prefixes[''];\n\t          return uri ? uri + value.substring(colon + 1) : null;\n\t        } else if (prefix === '_') {\n\t          // blank node\n\t          return '_:' + value.substring(colon + 1);\n\t        } else if (RDFaProcessor.NCNAME.test(prefix)) {\n\t          uri = prefixes[prefix];\n\t          if (uri) {\n\t            return uri + value.substring(colon + 1);\n\t          }\n\t        }\n\t      }\n\t      return null;\n\t    }\n\t  }, {\n\t    key: 'parseCURIEOrURI',\n\t    value: function parseCURIEOrURI(value, prefixes, base) {\n\t      var curie = this.parseCURIE(value, prefixes, base);\n\t      if (curie) {\n\t        return curie;\n\t      }\n\t      return this.resolveAndNormalize(base, value);\n\t    }\n\t  }, {\n\t    key: 'parsePredicate',\n\t    value: function parsePredicate(value, defaultVocabulary, terms, prefixes, base, ignoreTerms) {\n\t      if (value === '') {\n\t        return null;\n\t      }\n\t      var predicate = this.parseTermOrCURIEOrAbsURI(value, defaultVocabulary, ignoreTerms ? null : terms, prefixes, base);\n\t      if (predicate && predicate.indexOf('_:') === 0) {\n\t        return null;\n\t      }\n\t      return predicate;\n\t    }\n\t  }, {\n\t    key: 'parsePrefixMappings',\n\t    value: function parsePrefixMappings(str, target) {\n\t      var values = this.tokenize(str);\n\t      var prefix = null;\n\t      // var uri = null\n\t      for (var i = 0; i < values.length; i++) {\n\t        if (values[i][values[i].length - 1] === ':') {\n\t          prefix = values[i].substring(0, values[i].length - 1);\n\t        } else if (prefix) {\n\t          target[prefix] = this.options.base ? Uri.join(values[i], this.options.base) : values[i];\n\t          prefix = null;\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'parseSafeCURIEOrCURIEOrURI',\n\t    value: function parseSafeCURIEOrCURIEOrURI(value, prefixes, base) {\n\t      value = this.trim(value);\n\t      if (value.charAt(0) === '[' && value.charAt(value.length - 1) === ']') {\n\t        value = value.substring(1, value.length - 1);\n\t        value = value.trim(value);\n\t        if (value.length === 0) {\n\t          return null;\n\t        }\n\t        if (value === '_:') {\n\t          // the one node\n\t          return this.theOne;\n\t        }\n\t        return this.parseCURIE(value, prefixes, base);\n\t      } else {\n\t        return this.parseCURIEOrURI(value, prefixes, base);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'parseTermOrCURIEOrAbsURI',\n\t    value: function parseTermOrCURIEOrAbsURI(value, defaultVocabulary, terms, prefixes, base) {\n\t      // alert(\"Parsing \"+value+\" with default vocab \"+defaultVocabulary)\n\t      value = this.trim(value);\n\t      var curie = this.parseCURIE(value, prefixes, base);\n\t      if (curie) {\n\t        return curie;\n\t      } else if (terms) {\n\t        if (defaultVocabulary && !this.absURIRE.exec(value)) {\n\t          return defaultVocabulary + value;\n\t        }\n\t        var term = terms[value];\n\t        if (term) {\n\t          return term;\n\t        }\n\t        var lcvalue = value.toLowerCase();\n\t        term = terms[lcvalue];\n\t        if (term) {\n\t          return term;\n\t        }\n\t      }\n\t      if (this.absURIRE.exec(value)) {\n\t        return this.resolveAndNormalize(base, value);\n\t      }\n\t      return null;\n\t    }\n\t  }, {\n\t    key: 'parseTermOrCURIEOrURI',\n\t    value: function parseTermOrCURIEOrURI(value, defaultVocabulary, terms, prefixes, base) {\n\t      // alert(\"Parsing \"+value+\" with default vocab \"+defaultVocabulary)\n\t      value = this.trim(value);\n\t      var curie = this.parseCURIE(value, prefixes, base);\n\t      if (curie) {\n\t        return curie;\n\t      } else {\n\t        var term = terms[value];\n\t        if (term) {\n\t          return term;\n\t        }\n\t        var lcvalue = value.toLowerCase();\n\t        term = terms[lcvalue];\n\t        if (term) {\n\t          return term;\n\t        }\n\t        if (defaultVocabulary && !this.absURIRE.exec(value)) {\n\t          return defaultVocabulary + value;\n\t        }\n\t      }\n\t      return this.resolveAndNormalize(base, value);\n\t    }\n\t  }, {\n\t    key: 'parseURI',\n\t    value: function parseURI(uri) {\n\t      return uri; // We just use strings as URIs, not objects now.\n\t    }\n\t  }, {\n\t    key: 'process',\n\t    value: function process(node, options) {\n\t      /*\n\t      if (!window.console) {\n\t         window.console = { log: function() {} }\n\t      }*/\n\t      var base;\n\t      if (node.nodeType === Node.DOCUMENT_NODE) {\n\t        base = node.baseURI;\n\t        node = node.documentElement;\n\t        node.baseURI = base;\n\t        this.setContext(node);\n\t      } else if (node.parentNode.nodeType === Node.DOCUMENT_NODE) {\n\t        this.setContext(node);\n\t      }\n\t      var queue = [];\n\t      // Fix for Firefox that includes the hash in the base URI\n\t      var removeHash = function removeHash(baseURI) {\n\t        // Fix for undefined baseURI property\n\t        if (!baseURI && options && options.baseURI) {\n\t          return options.baseURI;\n\t        }\n\t\n\t        var hash = baseURI.indexOf('#');\n\t        if (hash >= 0) {\n\t          baseURI = baseURI.substring(0, hash);\n\t        }\n\t        if (options && options.baseURIMap) {\n\t          baseURI = options.baseURIMap(baseURI);\n\t        }\n\t        return baseURI;\n\t      };\n\t      queue.push({ current: node,\n\t        context: this.push(null, removeHash(node.baseURI))\n\t      });\n\t      while (queue.length > 0) {\n\t        var item = queue.shift();\n\t        if (item.parent) {\n\t          // Sequence Step 14: list triple generation\n\t          if (item.context.parent && item.context.parent.listMapping === item.listMapping) {\n\t            // Skip a child context with exactly the same mapping\n\t            continue;\n\t          }\n\t          // console.log(\"Generating lists for \"+item.subject+\", tag \"+item.parent.localName)\n\t          for (var _predicate in item.listMapping) {\n\t            var list = item.listMapping[_predicate];\n\t            if (list.length === 0) {\n\t              this.addTriple(item.parent, item.subject, _predicate, { type: RDFaProcessor.objectURI, value: 'http://www.w3.org/1999/02/22-rdf-syntax-ns#nil' });\n\t              continue;\n\t            }\n\t            var bnodes = [];\n\t            for (var _i = 0; _i < list.length; _i++) {\n\t              bnodes.push(this.newBlankNode());\n\t              // this.newSubject(item.parent,bnodes[i])\n\t            }\n\t            for (var _i2 = 0; _i2 < bnodes.length; _i2++) {\n\t              this.addTriple(item.parent, bnodes[_i2], 'http://www.w3.org/1999/02/22-rdf-syntax-ns#first', list[_i2]);\n\t              this.addTriple(item.parent, bnodes[_i2], 'http://www.w3.org/1999/02/22-rdf-syntax-ns#rest', { type: RDFaProcessor.objectURI, value: _i2 + 1 < bnodes.length ? bnodes[_i2 + 1] : 'http://www.w3.org/1999/02/22-rdf-syntax-ns#nil' });\n\t            }\n\t            this.addTriple(item.parent, item.subject, _predicate, { type: RDFaProcessor.objectURI, value: bnodes[0] });\n\t          }\n\t          continue;\n\t        }\n\t        var current = item.current;\n\t        var context = item.context;\n\t        // console.log(\"Tag: \"+current.localName+\", listMapping=\"+JSON.stringify(context.listMapping))\n\t        // Sequence Step 1\n\t        var skip = false;\n\t        var newSubject = null;\n\t        var currentObjectResource = null;\n\t        var typedResource = null;\n\t        var prefixes = context.prefixes;\n\t        var prefixesCopied = false;\n\t        var incomplete = [];\n\t        var listMapping = context.listMapping;\n\t        var listMappingDifferent = !context.parent;\n\t        var language = context.language;\n\t        var vocabulary = context.vocabulary;\n\t        // TODO: the \"base\" element may be used for HTML+RDFa 1.1\n\t        base = this.parseURI(removeHash(current.baseURI));\n\t        current.item = null;\n\t        // Sequence Step 2: set the default vocabulary\n\t        var vocabAtt = current.getAttributeNode('vocab');\n\t        if (vocabAtt) {\n\t          var value = this.trim(vocabAtt.value);\n\t          if (value.length > 0) {\n\t            vocabulary = value;\n\t            var baseSubject = base.spec;\n\t            // this.newSubject(current,baseSubject)\n\t            this.addTriple(current, baseSubject, 'http://www.w3.org/ns/rdfa#usesVocabulary', { type: RDFaProcessor.objectURI, value: vocabulary });\n\t          } else {\n\t            vocabulary = this.vocabulary;\n\t          }\n\t        }\n\t        // Sequence Step 3: IRI mappings\n\t        // handle xmlns attributes\n\t        for (var i = 0; i < current.attributes.length; i++) {\n\t          var att = current.attributes[i];\n\t          // if (att.namespaceURI==\"http://www.w3.org/2000/xmlns/\") {\n\t          if (att.nodeName.charAt(0) === 'x' && att.nodeName.indexOf('xmlns:') === 0) {\n\t            if (!prefixesCopied) {\n\t              prefixes = this.copyMappings(prefixes);\n\t              prefixesCopied = true;\n\t            }\n\t            var prefix = att.nodeName.substring(6);\n\t            // TODO: resolve relative?\n\t            var ref = RDFaProcessor.trim(att.value);\n\t            prefixes[prefix] = this.options.base ? Uri.join(ref, this.options.base) : ref;\n\t          }\n\t        }\n\t        // Handle prefix mappings (@prefix)\n\t        var prefixAtt = current.getAttributeNode('prefix');\n\t        if (prefixAtt) {\n\t          if (!prefixesCopied) {\n\t            prefixes = this.copyMappings(prefixes);\n\t            prefixesCopied = true;\n\t          }\n\t          this.parsePrefixMappings(prefixAtt.value, prefixes);\n\t        }\n\t        // Sequence Step 4: language\n\t        var xmlLangAtt = null;\n\t        for (var _i3 = 0; !xmlLangAtt && _i3 < this.langAttributes.length; _i3++) {\n\t          xmlLangAtt = current.getAttributeNodeNS(this.langAttributes[_i3].namespaceURI, this.langAttributes[_i3].localName);\n\t        }\n\t        if (xmlLangAtt) {\n\t          var _value = RDFaProcessor.trim(xmlLangAtt.value);\n\t          if (_value.length > 0) {\n\t            language = _value;\n\t          } else {\n\t            language = null;\n\t          }\n\t        }\n\t        var relAtt = current.getAttributeNode('rel');\n\t        var revAtt = current.getAttributeNode('rev');\n\t        var typeofAtt = current.getAttributeNode('typeof');\n\t        var propertyAtt = current.getAttributeNode('property');\n\t        var datatypeAtt = current.getAttributeNode('datatype');\n\t        var datetimeAtt = this.inHTMLMode ? current.getAttributeNode('datetime') : null;\n\t        var contentAtt = current.getAttributeNode('content');\n\t        var aboutAtt = current.getAttributeNode('about');\n\t        var srcAtt = current.getAttributeNode('src');\n\t        var resourceAtt = current.getAttributeNode('resource');\n\t        var hrefAtt = current.getAttributeNode('href');\n\t        var inlistAtt = current.getAttributeNode('inlist');\n\t        var relAttPredicates = [];\n\t        var predicate, values;\n\t        if (relAtt) {\n\t          values = this.tokenize(relAtt.value);\n\t          for (var _i4 = 0; _i4 < values.length; _i4++) {\n\t            predicate = this.parsePredicate(values[_i4], vocabulary, context.terms, prefixes, base, this.inHTMLMode && propertyAtt !== null);\n\t            if (predicate) {\n\t              relAttPredicates.push(predicate);\n\t            }\n\t          }\n\t        }\n\t        var revAttPredicates = [];\n\t        if (revAtt) {\n\t          values = this.tokenize(revAtt.value);\n\t          for (var _i5 = 0; _i5 < values.length; _i5++) {\n\t            predicate = this.parsePredicate(values[_i5], vocabulary, context.terms, prefixes, base, this.inHTMLMode && propertyAtt);\n\t            if (predicate) {\n\t              revAttPredicates.push(predicate);\n\t            }\n\t          }\n\t        }\n\t        // Section 3.1, bullet 7\n\t        if (this.inHTMLMode && (relAtt || revAtt) && propertyAtt) {\n\t          if (relAttPredicates.length === 0) {\n\t            relAtt = null;\n\t          }\n\t          if (revAttPredicates.length === 0) {\n\t            revAtt = null;\n\t          }\n\t        }\n\t        if (relAtt || revAtt) {\n\t          // Sequence Step 6: establish new subject and value\n\t          if (aboutAtt) {\n\t            newSubject = this.parseSafeCURIEOrCURIEOrURI(aboutAtt.value, prefixes, base);\n\t          }\n\t          if (typeofAtt) {\n\t            typedResource = newSubject;\n\t          }\n\t          if (!newSubject) {\n\t            if (current.parentNode.nodeType === Node.DOCUMENT_NODE) {\n\t              newSubject = removeHash(current.baseURI);\n\t            } else if (context.parentObject) {\n\t              // TODO: Verify: If the xml:base has been set and the parentObject is the baseURI of the parent, then the subject needs to be the new base URI\n\t              newSubject = removeHash(current.parentNode.baseURI) === context.parentObject ? removeHash(current.baseURI) : context.parentObject;\n\t            }\n\t          }\n\t          if (resourceAtt) {\n\t            currentObjectResource = this.parseSafeCURIEOrCURIEOrURI(resourceAtt.value, prefixes, base);\n\t          }\n\t          if (!currentObjectResource) {\n\t            if (hrefAtt) {\n\t              currentObjectResource = this.resolveAndNormalize(base, encodeURI(hrefAtt.value));\n\t            } else if (srcAtt) {\n\t              currentObjectResource = this.resolveAndNormalize(base, encodeURI(srcAtt.value));\n\t            } else if (typeofAtt && !aboutAtt && !(this.inXHTMLMode && (current.localName === 'head' || current.localName === 'body'))) {\n\t              currentObjectResource = this.newBlankNode();\n\t            }\n\t          }\n\t          if (typeofAtt && !aboutAtt && this.inXHTMLMode && (current.localName === 'head' || current.localName === 'body')) {\n\t            typedResource = newSubject;\n\t          } else if (typeofAtt && !aboutAtt) {\n\t            typedResource = currentObjectResource;\n\t          }\n\t        } else if (propertyAtt && !contentAtt && !datatypeAtt) {\n\t          // Sequence Step 5.1: establish a new subject\n\t          if (aboutAtt) {\n\t            newSubject = this.parseSafeCURIEOrCURIEOrURI(aboutAtt.value, prefixes, base);\n\t            if (typeofAtt) {\n\t              typedResource = newSubject;\n\t            }\n\t          }\n\t          if (!newSubject && current.parentNode.nodeType === Node.DOCUMENT_NODE) {\n\t            newSubject = removeHash(current.baseURI);\n\t            if (typeofAtt) {\n\t              typedResource = newSubject;\n\t            }\n\t          } else if (!newSubject && context.parentObject) {\n\t            // TODO: Verify: If the xml:base has been set and the parentObject is the baseURI of the parent, then the subject needs to be the new base URI\n\t            newSubject = removeHash(current.parentNode.baseURI) === context.parentObject ? removeHash(current.baseURI) : context.parentObject;\n\t          }\n\t          if (typeofAtt && !typedResource) {\n\t            if (resourceAtt) {\n\t              typedResource = this.parseSafeCURIEOrCURIEOrURI(resourceAtt.value, prefixes, base);\n\t            }\n\t            if (!typedResource && hrefAtt) {\n\t              typedResource = this.resolveAndNormalize(base, encodeURI(hrefAtt.value));\n\t            }\n\t            if (!typedResource && srcAtt) {\n\t              typedResource = this.resolveAndNormalize(base, encodeURI(srcAtt.value));\n\t            }\n\t            if (!typedResource && (this.inXHTMLMode || this.inHTMLMode) && (current.localName === 'head' || current.localName === 'body')) {\n\t              typedResource = newSubject;\n\t            }\n\t            if (!typedResource) {\n\t              typedResource = this.newBlankNode();\n\t            }\n\t            currentObjectResource = typedResource;\n\t          }\n\t          // console.log(current.localName+\", newSubject=\"+newSubject+\", typedResource=\"+typedResource+\", currentObjectResource=\"+currentObjectResource)\n\t        } else {\n\t          // Sequence Step 5.2: establish a new subject\n\t          if (aboutAtt) {\n\t            newSubject = this.parseSafeCURIEOrCURIEOrURI(aboutAtt.value, prefixes, base);\n\t          }\n\t          if (!newSubject && resourceAtt) {\n\t            newSubject = this.parseSafeCURIEOrCURIEOrURI(resourceAtt.value, prefixes, base);\n\t          }\n\t          if (!newSubject && hrefAtt) {\n\t            newSubject = this.resolveAndNormalize(base, encodeURI(hrefAtt.value));\n\t          }\n\t          if (!newSubject && srcAtt) {\n\t            newSubject = this.resolveAndNormalize(base, encodeURI(srcAtt.value));\n\t          }\n\t          if (!newSubject) {\n\t            if (current.parentNode.nodeType === Node.DOCUMENT_NODE) {\n\t              newSubject = removeHash(current.baseURI);\n\t            } else if ((this.inXHTMLMode || this.inHTMLMode) && (current.localName === 'head' || current.localName === 'body')) {\n\t              newSubject = removeHash(current.parentNode.baseURI) === context.parentObject ? removeHash(current.baseURI) : context.parentObject;\n\t            } else if (typeofAtt) {\n\t              newSubject = this.newBlankNode();\n\t            } else if (context.parentObject) {\n\t              // TODO: Verify: If the xml:base has been set and the parentObject is the baseURI of the parent, then the subject needs to be the new base URI\n\t              newSubject = removeHash(current.parentNode.baseURI) === context.parentObject ? removeHash(current.baseURI) : context.parentObject;\n\t              if (!propertyAtt) {\n\t                skip = true;\n\t              }\n\t            }\n\t          }\n\t          if (typeofAtt) {\n\t            typedResource = newSubject;\n\t          }\n\t        }\n\t        // console.log(current.tagName+\": newSubject=\"+newSubject+\", currentObjectResource=\"+currentObjectResource+\", typedResource=\"+typedResource+\", skip=\"+skip)\n\t        // var rdfaData = null\n\t        if (newSubject) {\n\t          // this.newSubject(current,newSubject)\n\t          if (aboutAtt || resourceAtt || typedResource) {\n\t            var id = newSubject;\n\t            if (typeofAtt && !aboutAtt && !resourceAtt && currentObjectResource) {\n\t              id = currentObjectResource;\n\t            }\n\t            // console.log(\"Setting data attribute for \"+current.localName+\" for subject \"+id)\n\t            this.newSubjectOrigin(current, id);\n\t          }\n\t        }\n\t        // Sequence Step 7: generate type triple\n\t        if (typedResource) {\n\t          values = this.tokenize(typeofAtt.value);\n\t          for (var _i6 = 0; _i6 < values.length; _i6++) {\n\t            var object = this.parseTermOrCURIEOrAbsURI(values[_i6], vocabulary, context.terms, prefixes, base);\n\t            if (object) {\n\t              this.addTriple(current, typedResource, RDFaProcessor.typeURI, { type: RDFaProcessor.objectURI, value: object });\n\t            }\n\t          }\n\t        }\n\t        // Sequence Step 8: new list mappings if there is a new subject\n\t        // console.log(\"Step 8: newSubject=\"+newSubject+\", context.parentObject=\"+context.parentObject)\n\t        if (newSubject && newSubject !== context.parentObject) {\n\t          // console.log(\"Generating new list mapping for \"+newSubject)\n\t          listMapping = {};\n\t          listMappingDifferent = true;\n\t        }\n\t        // Sequence Step 9: generate object triple\n\t        if (currentObjectResource) {\n\t          if (relAtt && inlistAtt) {\n\t            for (var _i7 = 0; _i7 < relAttPredicates.length; _i7++) {\n\t              var _list = listMapping[relAttPredicates[_i7]];\n\t              if (!_list) {\n\t                _list = [];\n\t                listMapping[relAttPredicates[_i7]] = _list;\n\t              }\n\t              _list.push({ type: RDFaProcessor.objectURI, value: currentObjectResource });\n\t            }\n\t          } else if (relAtt) {\n\t            for (var _i8 = 0; _i8 < relAttPredicates.length; _i8++) {\n\t              this.addTriple(current, newSubject, relAttPredicates[_i8], { type: RDFaProcessor.objectURI, value: currentObjectResource });\n\t            }\n\t          }\n\t          if (revAtt) {\n\t            for (var _i9 = 0; _i9 < revAttPredicates.length; _i9++) {\n\t              this.addTriple(current, currentObjectResource, revAttPredicates[_i9], { type: RDFaProcessor.objectURI, value: newSubject });\n\t            }\n\t          }\n\t        } else {\n\t          // Sequence Step 10: incomplete triples\n\t          if (newSubject && !currentObjectResource && (relAtt || revAtt)) {\n\t            currentObjectResource = this.newBlankNode();\n\t            // alert(current.tagName+\": generated blank node, newSubject=\"+newSubject+\" currentObjectResource=\"+currentObjectResource)\n\t          }\n\t          if (relAtt && inlistAtt) {\n\t            for (var _i10 = 0; _i10 < relAttPredicates.length; _i10++) {\n\t              var _list2 = listMapping[relAttPredicates[_i10]];\n\t              if (!_list2) {\n\t                _list2 = [];\n\t                listMapping[predicate] = _list2;\n\t              }\n\t              // console.log(\"Adding incomplete list for \"+predicate)\n\t              incomplete.push({ predicate: relAttPredicates[_i10], list: _list2 });\n\t            }\n\t          } else if (relAtt) {\n\t            for (var _i11 = 0; _i11 < relAttPredicates.length; _i11++) {\n\t              incomplete.push({ predicate: relAttPredicates[_i11], forward: true });\n\t            }\n\t          }\n\t          if (revAtt) {\n\t            for (var _i12 = 0; _i12 < revAttPredicates.length; _i12++) {\n\t              incomplete.push({ predicate: revAttPredicates[_i12], forward: false });\n\t            }\n\t          }\n\t        }\n\t        // Step 11: Current property values\n\t        if (propertyAtt) {\n\t          var datatype = null;\n\t          var content = null;\n\t          if (datatypeAtt) {\n\t            datatype = datatypeAtt.value === '' ? RDFaProcessor.PlainLiteralURI : this.parseTermOrCURIEOrAbsURI(datatypeAtt.value, vocabulary, context.terms, prefixes, base);\n\t            if (datetimeAtt && !contentAtt) {\n\t              content = datetimeAtt.value;\n\t            } else {\n\t              content = datatype === RDFaProcessor.XMLLiteralURI || datatype === RDFaProcessor.HTMLLiteralURI ? null : contentAtt ? contentAtt.value : current.textContent;\n\t            }\n\t          } else if (contentAtt) {\n\t            datatype = RDFaProcessor.PlainLiteralURI;\n\t            content = contentAtt.value;\n\t          } else if (datetimeAtt) {\n\t            content = datetimeAtt.value;\n\t            datatype = RDFaProcessor.deriveDateTimeType(content);\n\t            if (!datatype) {\n\t              datatype = RDFaProcessor.PlainLiteralURI;\n\t            }\n\t          } else if (!relAtt && !revAtt) {\n\t            if (resourceAtt) {\n\t              content = this.parseSafeCURIEOrCURIEOrURI(resourceAtt.value, prefixes, base);\n\t            }\n\t            if (!content && hrefAtt) {\n\t              content = this.resolveAndNormalize(base, encodeURI(hrefAtt.value));\n\t            } else if (!content && srcAtt) {\n\t              content = this.resolveAndNormalize(base, encodeURI(srcAtt.value));\n\t            }\n\t            if (content) {\n\t              datatype = RDFaProcessor.objectURI;\n\t            }\n\t          }\n\t          if (!datatype) {\n\t            if (typeofAtt && !aboutAtt) {\n\t              datatype = RDFaProcessor.objectURI;\n\t              content = typedResource;\n\t            } else {\n\t              content = current.textContent;\n\t              if (this.inHTMLMode && current.localName === 'time') {\n\t                datatype = RDFaProcessor.deriveDateTimeType(content);\n\t              }\n\t              if (!datatype) {\n\t                datatype = RDFaProcessor.PlainLiteralURI;\n\t              }\n\t            }\n\t          }\n\t          values = this.tokenize(propertyAtt.value);\n\t          for (var _i13 = 0; _i13 < values.length; _i13++) {\n\t            var _predicate2 = this.parsePredicate(values[_i13], vocabulary, context.terms, prefixes, base);\n\t            if (_predicate2) {\n\t              if (inlistAtt) {\n\t                var _list3 = listMapping[_predicate2];\n\t                if (!_list3) {\n\t                  _list3 = [];\n\t                  listMapping[_predicate2] = _list3;\n\t                }\n\t                _list3.push(datatype === RDFaProcessor.XMLLiteralURI || datatype === RDFaProcessor.HTMLLiteralURI ? { type: datatype, value: current.childNodes } : { type: datatype ? datatype : RDFaProcessor.PlainLiteralURI, value: content, language: language });\n\t              } else {\n\t                if (datatype === RDFaProcessor.XMLLiteralURI || datatype === RDFaProcessor.HTMLLiteralURI) {\n\t                  this.addTriple(current, newSubject, _predicate2, { type: datatype, value: current.childNodes });\n\t                } else {\n\t                  this.addTriple(current, newSubject, _predicate2, { type: datatype ? datatype : RDFaProcessor.PlainLiteralURI, value: content, language: language });\n\t                  // console.log(newSubject+\" \"+predicate+\"=\"+content)\n\t                }\n\t              }\n\t            }\n\t          }\n\t        }\n\t        // Sequence Step 12: complete incomplete triples with new subject\n\t        if (newSubject && !skip) {\n\t          for (var _i14 = 0; _i14 < context.incomplete.length; _i14++) {\n\t            if (context.incomplete[_i14].list) {\n\t              // console.log(\"Adding subject \"+newSubject+\" to list for \"+context.incomplete[i].predicate)\n\t              // TODO: it is unclear what to do here\n\t              context.incomplete[_i14].list.push({ type: RDFaProcessor.objectURI, value: newSubject });\n\t            } else if (context.incomplete[_i14].forward) {\n\t              // console.log(current.tagName+\": completing forward triple \"+context.incomplete[i].predicate+\" with object=\"+newSubject)\n\t              this.addTriple(current, context.subject, context.incomplete[_i14].predicate, { type: RDFaProcessor.objectURI, value: newSubject });\n\t            } else {\n\t              // console.log(current.tagName+\": completing reverse triple with object=\"+context.subject)\n\t              this.addTriple(current, newSubject, context.incomplete[_i14].predicate, { type: RDFaProcessor.objectURI, value: context.subject });\n\t            }\n\t          }\n\t        }\n\t        var childContext = null;\n\t        var listSubject = newSubject;\n\t        if (skip) {\n\t          // TODO: should subject be null?\n\t          childContext = this.push(context, context.subject);\n\t          // TODO: should the entObject be passed along?  If not, then intermediary children will keep properties from being associated with incomplete triples.\n\t          // TODO: Verify: if the current baseURI has changed and the parentObject is the parent's base URI, then the baseURI should change\n\t          childContext.parentObject = removeHash(current.parentNode.baseURI) === context.parentObject ? removeHash(current.baseURI) : context.parentObject;\n\t          childContext.incomplete = context.incomplete;\n\t          childContext.language = language;\n\t          childContext.prefixes = prefixes;\n\t          childContext.vocabulary = vocabulary;\n\t        } else {\n\t          childContext = this.push(context, newSubject);\n\t          childContext.parentObject = currentObjectResource ? currentObjectResource : newSubject ? newSubject : context.subject;\n\t          childContext.prefixes = prefixes;\n\t          childContext.incomplete = incomplete;\n\t          if (currentObjectResource) {\n\t            // console.log(\"Generating new list mapping for \"+currentObjectResource)\n\t            listSubject = currentObjectResource;\n\t            listMapping = {};\n\t            listMappingDifferent = true;\n\t          }\n\t          childContext.listMapping = listMapping;\n\t          childContext.language = language;\n\t          childContext.vocabulary = vocabulary;\n\t        }\n\t        if (listMappingDifferent) {\n\t          // console.log(\"Pushing list parent \"+current.localName)\n\t          queue.unshift({ parent: current, context: context, subject: listSubject, listMapping: listMapping });\n\t        }\n\t        for (var child = current.lastChild; child; child = child.previousSibling) {\n\t          if (child.nodeType === Node.ELEMENT_NODE) {\n\t            // console.log(\"Pushing child \"+child.localName)\n\t            child.baseURI = current.baseURI;\n\t            queue.unshift({ current: child, context: childContext });\n\t          }\n\t        }\n\t      }\n\t      if (this.inHTMLMode) {\n\t        this.copyProperties();\n\t      }\n\t      for (var _i15 = 0; _i15 < this.finishedHandlers.length; _i15++) {\n\t        this.finishedHandlers[_i15](node);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'push',\n\t    value: function push(parent, subject) {\n\t      return {\n\t        parent: parent,\n\t        subject: subject ? subject : parent ? parent.subject : null,\n\t        parentObject: null,\n\t        incomplete: [],\n\t        listMapping: parent ? parent.listMapping : {},\n\t        language: parent ? parent.language : this.language,\n\t        prefixes: parent ? parent.prefixes : this.target.graph.prefixes,\n\t        terms: parent ? parent.terms : this.target.graph.terms,\n\t        vocabulary: parent ? parent.vocabulary : this.vocabulary\n\t      };\n\t    }\n\t  }, {\n\t    key: 'resolveAndNormalize',\n\t    value: function resolveAndNormalize(base, uri) {\n\t      // console.log(\"Joining \" + uri + \" to \" + base + \" making \" +  Uri.join(uri, base))\n\t      return Uri.join(uri, base); // @@ normalize?\n\t    }\n\t  }, {\n\t    key: 'setContext',\n\t    value: function setContext(node) {\n\t      // We only recognized XHTML+RDFa 1.1 if the version is set propertyly\n\t      if (node.localName === 'html' && node.getAttribute('version') === 'XHTML+RDFa 1.1') {\n\t        this.setXHTMLContext();\n\t      } else if (node.localName === 'html' || node.namespaceURI === 'http://www.w3.org/1999/xhtml') {\n\t        if (typeof document !== 'undefined' && document.doctype) {\n\t          if (document.doctype.publicId === '-//W3C//DTD XHTML+RDFa 1.0//EN' && document.doctype.systemId === 'http://www.w3.org/MarkUp/DTD/xhtml-rdfa-1.dtd') {\n\t            console.log('WARNING: RDF 1.0 is not supported.  Defaulting to HTML5 mode.');\n\t            this.setHTMLContext();\n\t          } else if (document.doctype.publicId === '-//W3C//DTD XHTML+RDFa 1.1//EN' && document.doctype.systemId === 'http://www.w3.org/MarkUp/DTD/xhtml-rdfa-2.dtd') {\n\t            this.setXHTMLContext();\n\t          } else {\n\t            this.setHTMLContext();\n\t          }\n\t        } else {\n\t          this.setHTMLContext();\n\t        }\n\t      } else {\n\t        this.setXMLContext();\n\t      }\n\t    }\n\t  }, {\n\t    key: 'setHTMLContext',\n\t    value: function setHTMLContext() {\n\t      this.setInitialContext();\n\t      this.langAttributes = [{\n\t        namespaceURI: 'http://www.w3.org/XML/1998/namespace',\n\t        localName: 'lang'\n\t      }, { namespaceURI: null, localName: 'lang' }];\n\t      this.inXHTMLMode = false;\n\t      this.inHTMLMode = true;\n\t    }\n\t  }, {\n\t    key: 'setInitialContext',\n\t    value: function setInitialContext() {\n\t      this.vocabulary = null;\n\t      // By default, the prefixes are terms are loaded to the RDFa 1.1. standard within the graph constructor\n\t      this.langAttributes = [{\n\t        namespaceURI: 'http://www.w3.org/XML/1998/namespace',\n\t        localName: 'lang'\n\t      }];\n\t    }\n\t  }, {\n\t    key: 'setXHTMLContext',\n\t    value: function setXHTMLContext() {\n\t      this.setInitialContext();\n\t      this.inXHTMLMode = true;\n\t      this.inHTMLMode = false;\n\t      this.langAttributes = [{\n\t        namespaceURI: 'http://www.w3.org/XML/1998/namespace',\n\t        localName: 'lang' }, { namespaceURI: null, localName: 'lang' }];\n\t      // From http://www.w3.org/2011/rdfa-context/xhtml-rdfa-1.1\n\t      this.target.graph.terms['alternate'] = 'http://www.w3.org/1999/xhtml/vocab#alternate';\n\t      this.target.graph.terms['appendix'] = 'http://www.w3.org/1999/xhtml/vocab#appendix';\n\t      this.target.graph.terms['bookmark'] = 'http://www.w3.org/1999/xhtml/vocab#bookmark';\n\t      this.target.graph.terms['cite'] = 'http://www.w3.org/1999/xhtml/vocab#cite';\n\t      this.target.graph.terms['chapter'] = 'http://www.w3.org/1999/xhtml/vocab#chapter';\n\t      this.target.graph.terms['contents'] = 'http://www.w3.org/1999/xhtml/vocab#contents';\n\t      this.target.graph.terms['copyright'] = 'http://www.w3.org/1999/xhtml/vocab#copyright';\n\t      this.target.graph.terms['first'] = 'http://www.w3.org/1999/xhtml/vocab#first';\n\t      this.target.graph.terms['glossary'] = 'http://www.w3.org/1999/xhtml/vocab#glossary';\n\t      this.target.graph.terms['help'] = 'http://www.w3.org/1999/xhtml/vocab#help';\n\t      this.target.graph.terms['icon'] = 'http://www.w3.org/1999/xhtml/vocab#icon';\n\t      this.target.graph.terms['index'] = 'http://www.w3.org/1999/xhtml/vocab#index';\n\t      this.target.graph.terms['last'] = 'http://www.w3.org/1999/xhtml/vocab#last';\n\t      this.target.graph.terms['license'] = 'http://www.w3.org/1999/xhtml/vocab#license';\n\t      this.target.graph.terms['meta'] = 'http://www.w3.org/1999/xhtml/vocab#meta';\n\t      this.target.graph.terms['next'] = 'http://www.w3.org/1999/xhtml/vocab#next';\n\t      this.target.graph.terms['prev'] = 'http://www.w3.org/1999/xhtml/vocab#prev';\n\t      this.target.graph.terms['previous'] = 'http://www.w3.org/1999/xhtml/vocab#previous';\n\t      this.target.graph.terms['section'] = 'http://www.w3.org/1999/xhtml/vocab#section';\n\t      this.target.graph.terms['stylesheet'] = 'http://www.w3.org/1999/xhtml/vocab#stylesheet';\n\t      this.target.graph.terms['subsection'] = 'http://www.w3.org/1999/xhtml/vocab#subsection';\n\t      this.target.graph.terms['start'] = 'http://www.w3.org/1999/xhtml/vocab#start';\n\t      this.target.graph.terms['top'] = 'http://www.w3.org/1999/xhtml/vocab#top';\n\t      this.target.graph.terms['up'] = 'http://www.w3.org/1999/xhtml/vocab#up';\n\t      this.target.graph.terms['p3pv1'] = 'http://www.w3.org/1999/xhtml/vocab#p3pv1';\n\t      // other\n\t      this.target.graph.terms['related'] = 'http://www.w3.org/1999/xhtml/vocab#related';\n\t      this.target.graph.terms['role'] = 'http://www.w3.org/1999/xhtml/vocab#role';\n\t      this.target.graph.terms['transformation'] = 'http://www.w3.org/1999/xhtml/vocab#transformation';\n\t    }\n\t  }, {\n\t    key: 'setXMLContext',\n\t    value: function setXMLContext() {\n\t      this.setInitialContext();\n\t      this.inXHTMLMode = false;\n\t      this.inHTMLMode = false;\n\t    }\n\t  }, {\n\t    key: 'tokenize',\n\t    value: function tokenize(str) {\n\t      return this.trim(str).split(/\\s+/);\n\t    }\n\t  }, {\n\t    key: 'toRDFNodeObject',\n\t    value: function toRDFNodeObject(x) {\n\t      if (typeof x === 'undefined') return undefined;\n\t      if (typeof x === 'string') {\n\t        if (x.substring(0, 2) === '_:') {\n\t          if (typeof this.blankNodes[x.substring(2)] === 'undefined') {\n\t            this.blankNodes[x.substring(2)] = new BlankNode(x.substring(2));\n\t          }\n\t          return this.blankNodes[x.substring(2)];\n\t        }\n\t        return rdf.namedNode(x);\n\t      }\n\t      switch (x.type) {\n\t        case RDFaProcessor.objectURI:\n\t          if (x.value.substring(0, 2) === '_:') {\n\t            if (typeof this.blankNodes[x.value.substring(2)] === 'undefined') {\n\t              this.blankNodes[x.value.substring(2)] = new BlankNode(x.value.substring(2));\n\t            }\n\t            return this.blankNodes[x.value.substring(2)];\n\t          }\n\t          return rdf.namedNode(x.value);\n\t        case RDFaProcessor.PlainLiteralURI:\n\t          return new Literal(x.value, x.language || '');\n\t        case RDFaProcessor.XMLLiteralURI:\n\t        case RDFaProcessor.HTMLLiteralURI:\n\t          var string = '';\n\t          Object.keys(x.value).forEach(function (i) {\n\t            string += Util.domToString(x.value[i], this.htmlOptions);\n\t          });\n\t          return new Literal(string, '', new NamedNode(x.type));\n\t        default:\n\t          return new Literal(x.value, '', new NamedNode(x.type));\n\t      }\n\t    }\n\t  }, {\n\t    key: 'trim',\n\t    value: function trim(str) {\n\t      return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n\t    }\n\t  }], [{\n\t    key: 'parseRDFaDOM',\n\t    value: function parseRDFaDOM(dom, kb, base) {\n\t      var p = new RDFaProcessor(kb, { 'base': base });\n\t      dom.baseURI = base;\n\t      p.process(dom);\n\t    }\n\t  }]);\n\t\n\t  return RDFaProcessor;\n\t}();\n\t\n\tRDFaProcessor.XMLLiteralURI = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral';\n\tRDFaProcessor.HTMLLiteralURI = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#HTML';\n\tRDFaProcessor.PlainLiteralURI = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#PlainLiteral';\n\tRDFaProcessor.objectURI = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#object';\n\tRDFaProcessor.typeURI = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type';\n\tRDFaProcessor.nameChar = '[-A-Z_a-zÀ-ÖØ-öø-˿Ͱ-ͽͿ-῿‌-‍⁰-↏Ⰰ-⿯、-퟿豈-﷏ﷰ-�က0-F.0-9·̀-ͯ‿-⁀]';\n\tRDFaProcessor.nameStartChar = '[A-Za-zÀ-ÖØ-öø-ÿĀ-ıĴ-ľŁ-ňŊ-žƀ-ǃǍ-ǰǴ-ǵǺ-ȗɐ-ʨʻ-ˁΆΈ-ΊΌΎ-ΡΣ-ώϐ-ϖϚϜϞϠϢ-ϳЁ-ЌЎ-яё-ќў-ҁҐ-ӄӇ-ӈӋ-ӌӐ-ӫӮ-ӵӸ-ӹԱ-Ֆՙա-ֆא-תװ-ײء-غف-يٱ-ڷں-ھۀ-ێې-ۓەۥ-ۦअ-हऽक़-ॡঅ-ঌএ-ঐও-নপ-রলশ-হড়-ঢ়য়-ৡৰ-ৱਅ-ਊਏ-ਐਓ-ਨਪ-ਰਲ-ਲ਼ਵ-ਸ਼ਸ-ਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઋઍએ-ઑઓ-નપ-રલ-ળવ-હઽૠଅ-ଌଏ-ଐଓ-ନପ-ରଲ-ଳଶ-ହଽଡ଼-ଢ଼ୟ-ୡஅ-ஊஎ-ஐஒ-கங-சஜஞ-டண-தந-பம-வஷ-ஹఅ-ఌఎ-ఐఒ-నప-ళవ-హౠ-ౡಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹೞೠ-ೡഅ-ഌഎ-ഐഒ-നപ-ഹൠ-ൡก-ฮะา-ำเ-ๅກ-ຂຄງ-ຈຊຍດ-ທນ-ຟມ-ຣລວສ-ຫອ-ຮະາ-ຳຽເ-ໄཀ-ཇཉ-ཀྵႠ-Ⴥა-ჶᄀᄂ-ᄃᄅ-ᄇᄉᄋ-ᄌᄎ-ᄒᄼᄾᅀᅌᅎᅐᅔ-ᅕᅙᅟ-ᅡᅣᅥᅧᅩᅭ-ᅮᅲ-ᅳᅵᆞᆨᆫᆮ-ᆯᆷ-ᆸᆺᆼ-ᇂᇫᇰᇹḀ-ẛẠ-ỹἀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼΩK-Å℮ↀ-ↂぁ-ゔァ-ヺㄅ-ㄬ가-힣一-龥〇〡-〩_]';\n\tRDFaProcessor.NCNAME = new RegExp('^' + RDFaProcessor.nameStartChar + RDFaProcessor.nameChar + '*$');\n\t\n\t/*\n\tRDFaProcessor.prototype.resolveAndNormalize = function(base,href) {\n\t   var u = base.resolve(href)\n\t   var parsed = this.parseURI(u)\n\t   parsed.normalize()\n\t   return parsed.spec\n\t}\n\t*/\n\t\n\tRDFaProcessor.dateTimeTypes = [{ pattern: /-?P(?:[0-9]+Y)?(?:[0-9]+M)?(?:[0-9]+D)?(?:T(?:[0-9]+H)?(?:[0-9]+M)?(?:[0-9]+(?:\\.[0-9]+)?S)?)?/,\n\t  type: 'http://www.w3.org/2001/XMLSchema#duration' }, { pattern: /-?(?:[1-9][0-9][0-9][0-9]|0[1-9][0-9][0-9]|00[1-9][0-9]|000[1-9])-[0-9][0-9]-[0-9][0-9]T(?:[0-1][0-9]|2[0-4]):[0-5][0-9]:[0-5][0-9](?:\\.[0-9]+)?(?:Z|[+\\-][0-9][0-9]:[0-9][0-9])?/,\n\t  type: 'http://www.w3.org/2001/XMLSchema#dateTime' }, { pattern: /-?(?:[1-9][0-9][0-9][0-9]|0[1-9][0-9][0-9]|00[1-9][0-9]|000[1-9])-[0-9][0-9]-[0-9][0-9](?:Z|[+\\-][0-9][0-9]:[0-9][0-9])?/,\n\t  type: 'http://www.w3.org/2001/XMLSchema#date' }, { pattern: /(?:[0-1][0-9]|2[0-4]):[0-5][0-9]:[0-5][0-9](?:\\.[0-9]+)?(?:Z|[+\\-][0-9][0-9]:[0-9][0-9])?/,\n\t  type: 'http://www.w3.org/2001/XMLSchema#time' }, { pattern: /-?(?:[1-9][0-9][0-9][0-9]|0[1-9][0-9][0-9]|00[1-9][0-9]|000[1-9])-[0-9][0-9]/,\n\t  type: 'http://www.w3.org/2001/XMLSchema#gYearMonth' }, { pattern: /-?[1-9][0-9][0-9][0-9]|0[1-9][0-9][0-9]|00[1-9][0-9]|000[1-9]/,\n\t  type: 'http://www.w3.org/2001/XMLSchema#gYear' }];\n\t\n\tmodule.exports = RDFaProcessor;\n\n/***/ },\n/* 81 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\n\t * @fileoverview\n\t *  RDF/XML PARSER\n\t *\n\t * Version 0.1\n\t *  Parser believed to be in full positive RDF/XML parsing compliance\n\t *  with the possible exception of handling deprecated RDF attributes\n\t *  appropriately. Parser is believed to comply fully with other W3C\n\t *  and industry standards where appropriate (DOM, ECMAScript, &c.)\n\t *\n\t *  Author: David Sheets <dsheets@mit.edu>\n\t *\n\t * W3C® SOFTWARE NOTICE AND LICENSE\n\t * http://www.w3.org/Consortium/Legal/2002/copyright-software-20021231\n\t * This work (and included software, documentation such as READMEs, or\n\t * other related items) is being provided by the copyright holders under\n\t * the following license. By obtaining, using and/or copying this work,\n\t * you (the licensee) agree that you have read, understood, and will\n\t * comply with the following terms and conditions.\n\t *\n\t * Permission to copy, modify, and distribute this software and its\n\t * documentation, with or without modification, for any purpose and\n\t * without fee or royalty is hereby granted, provided that you include\n\t * the following on ALL copies of the software and documentation or\n\t * portions thereof, including modifications:\n\t *\n\t * 1. The full text of this NOTICE in a location viewable to users of\n\t * the redistributed or derivative work.\n\t * 2. Any pre-existing intellectual property disclaimers, notices, or terms and\n\t * conditions. If none exist, the W3C Software Short Notice should be\n\t * included (hypertext is preferred, text is permitted) within the body\n\t * of any redistributed or derivative code.\n\t * 3. Notice of any changes or modifications to the files, including the\n\t * date changes were made. (We recommend you provide URIs to the location\n\t * from which the code is derived.)\n\t *\n\t * THIS SOFTWARE AND DOCUMENTATION IS PROVIDED \"AS IS,\" AND COPYRIGHT\n\t * HOLDERS MAKE NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED,\n\t * INCLUDING BUT NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY OR FITNESS\n\t * FOR ANY PARTICULAR PURPOSE OR THAT THE USE OF THE SOFTWARE OR\n\t * DOCUMENTATION WILL NOT INFRINGE ANY THIRD PARTY PATENTS, COPYRIGHTS,\n\t * TRADEMARKS OR OTHER RIGHTS.\n\t *\n\t * COPYRIGHT HOLDERS WILL NOT BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL\n\t * OR CONSEQUENTIAL DAMAGES ARISING OUT OF ANY USE OF THE SOFTWARE OR\n\t * DOCUMENTATION.\n\t *\n\t * The name and trademarks of copyright holders may NOT be used in\n\t * advertising or publicity pertaining to the software without specific,\n\t * written prior permission. Title to copyright in this software and any\n\t * associated documentation will at all times remain with copyright\n\t * holders.\n\t */\n\t/**\n\t * @class Class defining an RDFParser resource object tied to an RDFStore\n\t *\n\t * @author David Sheets <dsheets@mit.edu>\n\t * @version 0.1\n\t *\n\t * @constructor\n\t * @param {RDFStore} store An RDFStore object\n\t */\n\tvar uriUtil = __webpack_require__(7);\n\t\n\tvar RDFParser = function RDFParser(store) {\n\t  var RDFParser = {};\n\t\n\t  /** Standard namespaces that we know how to handle @final\n\t   *  @member RDFParser\n\t   */\n\t  RDFParser.ns = { 'RDF': 'http://www.w3.org/1999/02/22-rdf-syntax-ns#', 'RDFS': 'http://www.w3.org/2000/01/rdf-schema#' };\n\t\n\t  /** DOM Level 2 node type magic numbers @final\n\t   *  @member RDFParser\n\t   */\n\t  RDFParser.nodeType = { 'ELEMENT': 1, 'ATTRIBUTE': 2, 'TEXT': 3,\n\t    'CDATA_SECTION': 4, 'ENTITY_REFERENCE': 5,\n\t    'ENTITY': 6, 'PROCESSING_INSTRUCTION': 7,\n\t    'COMMENT': 8, 'DOCUMENT': 9, 'DOCUMENT_TYPE': 10,\n\t    'DOCUMENT_FRAGMENT': 11, 'NOTATION': 12 };\n\t\n\t  /**\n\t   * Frame class for namespace and base URI lookups\n\t   * Base lookups will always resolve because the parser knows\n\t   * the default base.\n\t   *\n\t   * @private\n\t   */\n\t\n\t  this.frameFactory = function (parser, parent, element) {\n\t    return { 'NODE': 1, 'ARC': 2, 'parent': parent, 'parser': parser, 'store': parser.store, 'element': element,\n\t      'lastChild': 0, 'base': null, 'lang': null, 'node': null, 'nodeType': null, 'listIndex': 1, 'rdfid': null, 'datatype': null, 'collection': false, /** Terminate the frame and notify the store that we're done */\n\t      'terminateFrame': function terminateFrame() {\n\t        if (this.collection) {\n\t          this.node.close();\n\t        }\n\t      }, /** Add a symbol of a certain type to the this frame */'addSymbol': function addSymbol(type, uri) {\n\t        uri = uriUtil.join(uri, this.base);\n\t        this.node = this.store.sym(uri);\n\t\n\t        this.nodeType = type;\n\t      }, /** Load any constructed triples into the store */'loadTriple': function loadTriple() {\n\t        if (this.parent.parent.collection) {\n\t          this.parent.parent.node.append(this.node);\n\t        } else {\n\t          this.store.add(this.parent.parent.node, this.parent.node, this.node, this.parser.why);\n\t        }\n\t        if (this.parent.rdfid != null) {\n\t          // reify\n\t          var triple = this.store.sym(uriUtil.join('#' + this.parent.rdfid, this.base));\n\t          this.store.add(triple, this.store.sym(RDFParser.ns.RDF + 'type'), this.store.sym(RDFParser.ns.RDF + 'Statement'), this.parser.why);\n\t          this.store.add(triple, this.store.sym(RDFParser.ns.RDF + 'subject'), this.parent.parent.node, this.parser.why);\n\t          this.store.add(triple, this.store.sym(RDFParser.ns.RDF + 'predicate'), this.parent.node, this.parser.why);\n\t\n\t          this.store.add(triple, this.store.sym(RDFParser.ns.RDF + 'object'), this.node, this.parser.why);\n\t        }\n\t      }, /** Check if it's OK to load a triple */'isTripleToLoad': function isTripleToLoad() {\n\t        return this.parent != null && this.parent.parent != null && this.nodeType === this.NODE && this.parent.nodeType === this.ARC && this.parent.parent.nodeType === this.NODE;\n\t      }, /** Add a symbolic node to this frame */'addNode': function addNode(uri) {\n\t        this.addSymbol(this.NODE, uri);\n\t        if (this.isTripleToLoad()) {\n\t          this.loadTriple();\n\t        }\n\t      }, /** Add a collection node to this frame */'addCollection': function addCollection() {\n\t        this.nodeType = this.NODE;\n\t        this.node = this.store.collection();\n\t        this.collection = true;\n\t        if (this.isTripleToLoad()) {\n\t          this.loadTriple();\n\t        }\n\t      }, /** Add a collection arc to this frame */'addCollectionArc': function addCollectionArc() {\n\t        this.nodeType = this.ARC;\n\t      }, /** Add a bnode to this frame */'addBNode': function addBNode(id) {\n\t        if (id != null) {\n\t          if (this.parser.bnodes[id] != null) {\n\t            this.node = this.parser.bnodes[id];\n\t          } else {\n\t            this.node = this.parser.bnodes[id] = this.store.bnode();\n\t          }\n\t        } else {\n\t          this.node = this.store.bnode();\n\t        }\n\t        this.nodeType = this.NODE;\n\t        if (this.isTripleToLoad()) {\n\t          this.loadTriple();\n\t        }\n\t      }, /** Add an arc or property to this frame */'addArc': function addArc(uri) {\n\t        if (uri === RDFParser.ns.RDF + 'li') {\n\t          uri = RDFParser.ns.RDF + '_' + this.parent.listIndex;\n\t          this.parent.listIndex++;\n\t        }\n\t\n\t        this.addSymbol(this.ARC, uri);\n\t      }, /** Add a literal to this frame */'addLiteral': function addLiteral(value) {\n\t        if (this.parent.datatype) {\n\t          this.node = this.store.literal(value, '', this.store.sym(this.parent.datatype));\n\t        } else {\n\t          this.node = this.store.literal(value, this.lang);\n\t        }\n\t        this.nodeType = this.NODE;\n\t        if (this.isTripleToLoad()) {\n\t          this.loadTriple();\n\t        }\n\t      }\n\t    };\n\t  };\n\t\n\t  // from the OpenLayers source .. needed to get around IE problems.\n\t  this.getAttributeNodeNS = function (node, uri, name) {\n\t    var attributeNode = null;\n\t    if (node.getAttributeNodeNS) {\n\t      attributeNode = node.getAttributeNodeNS(uri, name);\n\t    } else {\n\t      var attributes = node.attributes;\n\t      var potentialNode, fullName;\n\t      for (var i = 0; i < attributes.length; ++i) {\n\t        potentialNode = attributes[i];\n\t        if (potentialNode.namespaceURI === uri) {\n\t          fullName = potentialNode.prefix ? potentialNode.prefix + ':' + name : name;\n\t          if (fullName === potentialNode.nodeName) {\n\t            attributeNode = potentialNode;\n\t            break;\n\t          }\n\t        }\n\t      }\n\t    }\n\t    return attributeNode;\n\t  };\n\t\n\t  /** Our triple store reference @private */\n\t\n\t  this.store = store; /** Our identified blank nodes @private */\n\t  this.bnodes = {}; /** A context for context-aware stores @private */\n\t  this.why = null; /** Reification flag */\n\t  this.reify = false;\n\t\n\t  /**\n\t   * Build our initial scope frame and parse the DOM into triples\n\t   * @param {DOMTree} document The DOM to parse\n\t   * @param {String} base The base URL to use\n\t   * @param {Object} why The context to which this resource belongs\n\t   */\n\t\n\t  this.parse = function (document, base, why) {\n\t    var children = document.childNodes; // clean up for the next run\n\t    this.cleanParser(); // figure out the root element\n\t    var root;\n\t    if (document.nodeType === RDFParser.nodeType.DOCUMENT) {\n\t      for (var c = 0; c < children.length; c++) {\n\t        if (children[c].nodeType === RDFParser.nodeType.ELEMENT) {\n\t          root = children[c];\n\t          break;\n\t        }\n\t      }\n\t    } else if (document.nodeType === RDFParser.nodeType.ELEMENT) {\n\t      root = document;\n\t    } else {\n\t      throw new Error(\"RDFParser: can't find root in \" + base + '. Halting. ');\n\t      // return false\n\t    }\n\t    this.why = why; // our topmost frame\n\t    var f = this.frameFactory(this);\n\t    this.base = base;\n\t    f.base = base;\n\t    f.lang = null; // was '' but can't have langs like that 2015 (!)\n\t    this.parseDOM(this.buildFrame(f, root));\n\t    return true;\n\t  };\n\t\n\t  this.parseDOM = function (frame) {\n\t    // a DOM utility function used in parsing\n\t    var rdfid;\n\t    var elementURI = function (el) {\n\t      var result = '';\n\t      if (el.namespaceURI == null) {\n\t        throw new Error('RDF/XML syntax error: No namespace for ' + el.localName + ' in ' + this.base);\n\t      }\n\t      if (el.namespaceURI) {\n\t        result = result + el.namespaceURI;\n\t      }\n\t      if (el.localName) {\n\t        result = result + el.localName;\n\t      } else if (el.nodeName) {\n\t        if (el.nodeName.indexOf(':') >= 0) result = result + el.nodeName.split(':')[1];else result = result + el.nodeName;\n\t      }\n\t      return result;\n\t    }.bind(this);\n\t    var dig = true; // if we'll dig down in the tree on the next iter\n\t    while (frame.parent) {\n\t      var dom = frame.element;\n\t      var attrs = dom.attributes;\n\t      if (dom.nodeType === RDFParser.nodeType.TEXT || dom.nodeType === RDFParser.nodeType.CDATA_SECTION) {\n\t        // we have a literal\n\t        if (frame.parent.nodeType === frame.NODE) {\n\t          // must have had attributes, store as rdf:value\n\t          frame.addArc(RDFParser.ns.RDF + 'value');\n\t          frame = this.buildFrame(frame);\n\t        }\n\t        frame.addLiteral(dom.nodeValue);\n\t      } else if (elementURI(dom) !== RDFParser.ns.RDF + 'RDF') {\n\t        // not root\n\t        if (frame.parent && frame.parent.collection) {\n\t          // we're a collection element\n\t          frame.addCollectionArc();\n\t          frame = this.buildFrame(frame, frame.element);\n\t          frame.parent.element = null;\n\t        }\n\t        if (!frame.parent || !frame.parent.nodeType || frame.parent.nodeType === frame.ARC) {\n\t          // we need a node\n\t          var about = this.getAttributeNodeNS(dom, RDFParser.ns.RDF, 'about');\n\t          rdfid = this.getAttributeNodeNS(dom, RDFParser.ns.RDF, 'ID');\n\t          if (about && rdfid) {\n\t            throw new Error('RDFParser: ' + dom.nodeName + ' has both rdf:id and rdf:about.' + ' Halting. Only one of these' + ' properties may be specified on a' + ' node.');\n\t          }\n\t          if (!about && rdfid) {\n\t            frame.addNode('#' + rdfid.nodeValue);\n\t            dom.removeAttributeNode(rdfid);\n\t          } else if (about == null && rdfid == null) {\n\t            var bnid = this.getAttributeNodeNS(dom, RDFParser.ns.RDF, 'nodeID');\n\t            if (bnid) {\n\t              frame.addBNode(bnid.nodeValue);\n\t              dom.removeAttributeNode(bnid);\n\t            } else {\n\t              frame.addBNode();\n\t            }\n\t          } else {\n\t            frame.addNode(about.nodeValue);\n\t            dom.removeAttributeNode(about);\n\t          }\n\t          // Typed nodes\n\t          var rdftype = this.getAttributeNodeNS(dom, RDFParser.ns.RDF, 'type');\n\t          if (RDFParser.ns.RDF + 'Description' !== elementURI(dom)) {\n\t            rdftype = { 'nodeValue': elementURI(dom) };\n\t          }\n\t          if (rdftype != null) {\n\t            this.store.add(frame.node, this.store.sym(RDFParser.ns.RDF + 'type'), this.store.sym(uriUtil.join(rdftype.nodeValue, frame.base)), this.why);\n\t            if (rdftype.nodeName) {\n\t              dom.removeAttributeNode(rdftype);\n\t            }\n\t          }\n\t          // Property Attributes\n\t          for (var x = attrs.length - 1; x >= 0; x--) {\n\t            this.store.add(frame.node, this.store.sym(elementURI(attrs[x])), this.store.literal(attrs[x].nodeValue, frame.lang), this.why);\n\t          }\n\t        } else {\n\t          // we should add an arc (or implicit bnode+arc)\n\t          frame.addArc(elementURI(dom)); // save the arc's rdf:ID if it has one\n\t          if (this.reify) {\n\t            rdfid = this.getAttributeNodeNS(dom, RDFParser.ns.RDF, 'ID');\n\t            if (rdfid) {\n\t              frame.rdfid = rdfid.nodeValue;\n\t              dom.removeAttributeNode(rdfid);\n\t            }\n\t          }\n\t          var parsetype = this.getAttributeNodeNS(dom, RDFParser.ns.RDF, 'parseType');\n\t          var datatype = this.getAttributeNodeNS(dom, RDFParser.ns.RDF, 'datatype');\n\t          if (datatype) {\n\t            frame.datatype = datatype.nodeValue;\n\t            dom.removeAttributeNode(datatype);\n\t          }\n\t          if (parsetype) {\n\t            var nv = parsetype.nodeValue;\n\t            if (nv === 'Literal') {\n\t              frame.datatype = RDFParser.ns.RDF + 'XMLLiteral'; // (this.buildFrame(frame)).addLiteral(dom)\n\t              // should work but doesn't\n\t              frame = this.buildFrame(frame);\n\t              frame.addLiteral(dom);\n\t              dig = false;\n\t            } else if (nv === 'Resource') {\n\t              frame = this.buildFrame(frame, frame.element);\n\t              frame.parent.element = null;\n\t              frame.addBNode();\n\t            } else if (nv === 'Collection') {\n\t              frame = this.buildFrame(frame, frame.element);\n\t              frame.parent.element = null;\n\t              frame.addCollection();\n\t            }\n\t            dom.removeAttributeNode(parsetype);\n\t          }\n\t          if (attrs.length !== 0) {\n\t            var resource = this.getAttributeNodeNS(dom, RDFParser.ns.RDF, 'resource');\n\t            var bnid2 = this.getAttributeNodeNS(dom, RDFParser.ns.RDF, 'nodeID');\n\t            frame = this.buildFrame(frame);\n\t            if (resource) {\n\t              frame.addNode(resource.nodeValue);\n\t              dom.removeAttributeNode(resource);\n\t            } else {\n\t              if (bnid2) {\n\t                frame.addBNode(bnid2.nodeValue);\n\t                dom.removeAttributeNode(bnid2);\n\t              } else {\n\t                frame.addBNode();\n\t              }\n\t            }\n\t            for (var x1 = attrs.length - 1; x1 >= 0; x1--) {\n\t              var f = this.buildFrame(frame);\n\t              f.addArc(elementURI(attrs[x1]));\n\t              if (elementURI(attrs[x1]) === RDFParser.ns.RDF + 'type') {\n\t                this.buildFrame(f).addNode(attrs[x1].nodeValue);\n\t              } else {\n\t                this.buildFrame(f).addLiteral(attrs[x1].nodeValue);\n\t              }\n\t            }\n\t          } else if (dom.childNodes.length === 0) {\n\t            this.buildFrame(frame).addLiteral('');\n\t          }\n\t        }\n\t      } // rdf:RDF\n\t      // dig dug\n\t      dom = frame.element;\n\t      while (frame.parent) {\n\t        var pframe = frame;\n\t        while (dom == null) {\n\t          frame = frame.parent;\n\t          dom = frame.element;\n\t        }\n\t        var candidate = dom.childNodes && dom.childNodes[frame.lastChild];\n\t        if (!candidate || !dig) {\n\t          frame.terminateFrame();\n\t          if (!(frame = frame.parent)) {\n\t            break;\n\t          } // done\n\t          dom = frame.element;\n\t          dig = true;\n\t        } else if (candidate.nodeType !== RDFParser.nodeType.ELEMENT && candidate.nodeType !== RDFParser.nodeType.TEXT && candidate.nodeType !== RDFParser.nodeType.CDATA_SECTION || (candidate.nodeType === RDFParser.nodeType.TEXT || candidate.nodeType === RDFParser.nodeType.CDATA_SECTION) && dom.childNodes.length !== 1) {\n\t          frame.lastChild++;\n\t        } else {\n\t          // not a leaf\n\t          frame.lastChild++;\n\t          frame = this.buildFrame(pframe, dom.childNodes[frame.lastChild - 1]);\n\t          break;\n\t        }\n\t      }\n\t    } // while\n\t  };\n\t\n\t  /**\n\t   * Cleans out state from a previous parse run\n\t   * @private\n\t   */\n\t  this.cleanParser = function () {\n\t    this.bnodes = {};\n\t    this.why = null;\n\t  };\n\t\n\t  /**\n\t   * Builds scope frame\n\t   * @private\n\t   */\n\t  this.buildFrame = function (parent, element) {\n\t    var frame = this.frameFactory(this, parent, element);\n\t    if (parent) {\n\t      frame.base = parent.base;\n\t      frame.lang = parent.lang;\n\t    }\n\t    if (!element || element.nodeType === RDFParser.nodeType.TEXT || element.nodeType === RDFParser.nodeType.CDATA_SECTION) {\n\t      return frame;\n\t    }\n\t    var attrs = element.attributes;\n\t    var base = element.getAttributeNode('xml:base');\n\t    if (base != null) {\n\t      frame.base = base.nodeValue;\n\t      element.removeAttribute('xml:base');\n\t    }\n\t    var lang = element.getAttributeNode('xml:lang');\n\t    if (lang != null) {\n\t      frame.lang = lang.nodeValue;\n\t      element.removeAttribute('xml:lang');\n\t    }\n\t    // remove all extraneous xml and xmlns attributes\n\t    for (var x = attrs.length - 1; x >= 0; x--) {\n\t      if (attrs[x].nodeName.substr(0, 3) === 'xml') {\n\t        if (attrs[x].name.slice(0, 6) === 'xmlns:') {\n\t          var uri = attrs[x].nodeValue; // alert('base for namespac attr:'+this.base)\n\t          if (this.base) uri = uriUtil.join(uri, this.base);\n\t          this.store.setPrefixForURI(attrs[x].name.slice(6), uri);\n\t        }\n\t        //\t\talert('rdfparser: xml atribute: '+attrs[x].name) //@@\n\t        element.removeAttributeNode(attrs[x]);\n\t      }\n\t    }\n\t    return frame;\n\t  };\n\t};\n\t\n\tmodule.exports = RDFParser;\n\n/***/ },\n/* 82 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t// Parse a simple SPARL-Update subset syntax for patches.\n\t//\n\t//  This parses\n\t//   WHERE {xxx} DELETE {yyy} INSERT DATA {zzz}\n\t// (not necessarily in that order)\n\t// as though it were the n3\n\t//   <#query> patch:where {xxx}; patch:delete {yyy}; patch:insert {zzz}.\n\tmodule.exports = sparqlUpdateParser;\n\t\n\tvar N3Parser = __webpack_require__(78);\n\tvar Namespace = __webpack_require__(73);\n\t\n\tfunction sparqlUpdateParser(str, kb, base) {\n\t  var i, j, k;\n\t  var keywords = ['INSERT', 'DELETE', 'WHERE'];\n\t  var SQNS = Namespace('http://www.w3.org/ns/pim/patch#');\n\t  var p = N3Parser(kb, kb, base, base, null, null, '', null);\n\t  var clauses = {};\n\t\n\t  var badSyntax = function badSyntax(uri, lines, str, i, why) {\n\t    return 'Line ' + (lines + 1) + ' of <' + uri + '>: Bad syntax:\\n   ' + why + '\\n   at: \"' + str.slice(i, i + 30) + '\"';\n\t  };\n\t\n\t  // var check = function (next, last, message) {\n\t  //   if (next < 0) {\n\t  //     throw badSyntax(p._thisDoc, p.lines, str, j, last, message)\n\t  //   }\n\t  //   return next\n\t  // }\n\t  i = 0;\n\t  var query = kb.sym(base + '#query'); // Invent a URI for the query\n\t  clauses['query'] = query; // A way of accessing it in its N3 model.\n\t\n\t  while (true) {\n\t    // console.log(\"A Now at i = \" + i)\n\t    j = p.skipSpace(str, i);\n\t    if (j < 0) {\n\t      return clauses;\n\t    }\n\t    // console.log(\"B After space at j= \" + j)\n\t    if (str[j] === ';') {\n\t      i = p.skipSpace(str, j + 1);\n\t      if (i < 0) {\n\t        return clauses; // Allow end in a\n\t      }\n\t      j = i;\n\t    }\n\t    var found = false;\n\t    for (k = 0; k < keywords.length; k++) {\n\t      var key = keywords[k];\n\t      if (str.slice(j, j + key.length) === key) {\n\t        i = p.skipSpace(str, j + key.length);\n\t        if (i < 0) {\n\t          throw badSyntax(p._thisDoc, p.lines, str, j + key.length, 'found EOF, needed {...} after ' + key);\n\t        }\n\t        if ((key === 'INSERT' || key === 'DELETE') && str.slice(i, i + 4) === 'DATA') {\n\t          // Some wanted 'DATA'. Whatever\n\t          j = p.skipSpace(str, i + 4);\n\t          if (j < 0) {\n\t            throw badSyntax(p._thisDoc, p.lines, str, i + 4, 'needed {...} after INSERT DATA ' + key);\n\t          }\n\t          i = j;\n\t        }\n\t        var res2 = [];\n\t        j = p.node(str, i, res2); // Parse all the complexity of the clause\n\t\n\t        if (j < 0) {\n\t          throw badSyntax(p._thisDoc, p.lines, str, i, 'bad syntax or EOF in {...} after ' + key);\n\t        }\n\t        clauses[key.toLowerCase()] = res2[0];\n\t        kb.add(query, SQNS(key.toLowerCase()), res2[0]); // , kb.sym(base)\n\t        // key is the keyword and res2 has the contents\n\t        found = true;\n\t        i = j;\n\t      }\n\t    }\n\t    if (!found && str.slice(j, j + 7) === '@prefix') {\n\t      i = p.directive(str, j);\n\t      if (i < 0) {\n\t        throw badSyntax(p._thisDoc, p.lines, str, i, 'bad syntax or EOF after @prefix ');\n\t      }\n\t      // console.log(\"P before dot i= \" + i)\n\t      i = p.checkDot(str, i);\n\t      // console.log(\"Q after dot i= \" + i)\n\t      found = true;\n\t    }\n\t    if (!found) {\n\t      // console.log(\"Bad syntax \" + j)\n\t      throw badSyntax(p._thisDoc, p.lines, str, j, \"Unknown syntax at start of statememt: '\" + str.slice(j).slice(0, 20) + \"'\");\n\t    }\n\t  } // while\n\t  // return clauses\n\t}\n\n/***/ },\n/* 83 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Node = __webpack_require__(10);\n\t\n\t/**\n\t * Singleton subclass of an empty Collection.\n\t */\n\t\n\tvar Empty = function (_Node) {\n\t  _inherits(Empty, _Node);\n\t\n\t  function Empty() {\n\t    _classCallCheck(this, Empty);\n\t\n\t    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Empty).call(this));\n\t\n\t    _this.termType = Empty.termType;\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Empty, [{\n\t    key: 'toString',\n\t    value: function toString() {\n\t      return '()';\n\t    }\n\t  }]);\n\t\n\t  return Empty;\n\t}(Node);\n\t\n\tEmpty.termType = 'empty';\n\t\n\tmodule.exports = Empty;\n\n/***/ },\n/* 84 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar jsonParser = function () {\n\t  return {\n\t    parseJSON: function parseJSON(data, source, store) {\n\t      var subject, predicate, object;\n\t      var bnodes = {};\n\t      var why = store.sym(source);\n\t      for (var x in data) {\n\t        if (x.indexOf('_:') === 0) {\n\t          if (bnodes[x]) {\n\t            subject = bnodes[x];\n\t          } else {\n\t            subject = store.bnode(x);\n\t            bnodes[x] = subject;\n\t          }\n\t        } else {\n\t          subject = store.sym(x);\n\t        }\n\t        var preds = data[x];\n\t        for (var y in preds) {\n\t          var objects = preds[y];\n\t          predicate = store.sym(y);\n\t          for (var z in objects) {\n\t            var obj = objects[z];\n\t            if (obj.type === 'uri') {\n\t              object = store.sym(obj.value);\n\t              store.add(subject, predicate, object, why);\n\t            } else if (obj.type === 'BlankNode') {\n\t              if (bnodes[obj.value]) {\n\t                object = bnodes[obj.value];\n\t              } else {\n\t                object = store.bnode(obj.value);\n\t                bnodes[obj.value] = object;\n\t              }\n\t              store.add(subject, predicate, object, why);\n\t            } else if (obj.type === 'Literal') {\n\t              // var datatype\n\t              if (obj.datatype) {\n\t                object = store.literal(obj.value, undefined, store.sym(obj.datatype));\n\t              } else if (obj.lang) {\n\t                object = store.literal(obj.value, obj.lang);\n\t              } else {\n\t                object = store.literal(obj.value);\n\t              }\n\t              store.add(subject, predicate, object, why);\n\t            } else {\n\t              throw new Error('error: unexpected termtype: ' + z.type);\n\t            }\n\t          }\n\t        }\n\t      }\n\t    }\n\t  };\n\t}();\n\t\n\tmodule.exports = jsonParser;\n\n/***/ },\n/* 85 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar log = __webpack_require__(15);\n\t\n\tfunction queryToSPARQL(query) {\n\t  var indent = 0;\n\t  function getSelect(query) {\n\t    var str = addIndent() + 'SELECT ';\n\t    for (var i = 0; i < query.vars.length; i++) {\n\t      str += query.vars[i] + ' ';\n\t    }\n\t    str += '\\n';\n\t    return str;\n\t  }\n\t\n\t  function getPattern(pat) {\n\t    var str = '';\n\t    var st = pat.statements;\n\t    for (var x in st) {\n\t      log.debug('Found statement: ' + st);\n\t      str += addIndent() + st[x] + '\\n';\n\t    }\n\t    return str;\n\t  }\n\t\n\t  function getConstraints(pat) {\n\t    var str = '';\n\t    for (var v in pat.constraints) {\n\t      var foo = pat.constraints[v];\n\t      str += addIndent() + 'FILTER ( ' + foo.describe(v) + ' ) ' + '\\n';\n\t    }\n\t    return str;\n\t  }\n\t\n\t  function getOptionals(pat) {\n\t    var str = '';\n\t    for (var x = 0; x < pat.optional.length; x++) {\n\t      // alert(pat.optional.termType)\n\t      log.debug('Found optional query');\n\t      str += addIndent() + 'OPTIONAL { ' + '\\n';\n\t      indent++;\n\t      str += getPattern(pat.optional[x]);\n\t      str += getConstraints(pat.optional[x]);\n\t      str += getOptionals(pat.optional[x]);\n\t      indent--;\n\t      str += addIndent() + '}' + '\\n';\n\t    }\n\t    return str;\n\t  }\n\t\n\t  function getWhere(pat) {\n\t    var str = addIndent() + 'WHERE \\n' + '{ \\n';\n\t    indent++;\n\t    str += getPattern(pat);\n\t    str += getConstraints(pat);\n\t    str += getOptionals(pat);\n\t    indent--;\n\t    str += '}';\n\t    return str;\n\t  }\n\t\n\t  function addIndent() {\n\t    var str = '';\n\t    for (var i = 0; i < indent; i++) {\n\t      str += '    ';\n\t    }\n\t    return str;\n\t  }\n\t\n\t  function getSPARQL(query) {\n\t    return getSelect(query) + getWhere(query.pat);\n\t  }\n\t\n\t  return getSPARQL(query);\n\t}\n\t\n\tmodule.exports = queryToSPARQL;\n\n/***/ },\n/* 86 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t// Converting between SPARQL queries and the $rdf query API\n\t/*\n\t\n\tfunction SQuery () {\n\t  this.terms = []\n\t  return this\n\t}\n\t\n\tSTerm.prototype.toString = STerm.val\n\tSQuery.prototype.add = function (str) {this.terms.push()}*/\n\t\n\tvar log = __webpack_require__(15);\n\tvar Query = __webpack_require__(74).Query;\n\t// const Fetcher = require('./fetcher')\n\t\n\t/**\n\t * @SPARQL: SPARQL text that is converted to a query object which is returned.\n\t * @testMode: testing flag. Prevents loading of sources.\n\t */\n\tfunction SPARQLToQuery(SPARQL, testMode, kb) {\n\t  // AJAR_ClearTable()\n\t  var variableHash = [];\n\t  function makeVar(name) {\n\t    if (variableHash[name]) {\n\t      return variableHash[name];\n\t    }\n\t    var newVar = kb.variable(name);\n\t    variableHash[name] = newVar;\n\t    return newVar;\n\t  }\n\t\n\t  // term type functions\n\t  function isRealText(term) {\n\t    return typeof term === 'string' && term.match(/[^ \\n\\t]/);\n\t  }\n\t  function isVar(term) {\n\t    return typeof term === 'string' && term.match(/^[\\?\\$]/);\n\t  }\n\t  function fixSymbolBrackets(term) {\n\t    if (typeof term === 'string') {\n\t      return term.replace(/^&lt;/, '<').replace(/&gt;$/, '>');\n\t    } else {\n\t      return term;\n\t    }\n\t  }\n\t  function isSymbol(term) {\n\t    return typeof term === 'string' && term.match(/^<[^>]*>$/);\n\t  }\n\t  function isBnode(term) {\n\t    return typeof term === 'string' && (term.match(/^_:/) || term.match(/^$/));\n\t  }\n\t  function isPrefix(term) {\n\t    return typeof term === 'string' && term.match(/:$/);\n\t  }\n\t  function isPrefixedSymbol(term) {\n\t    return typeof term === 'string' && term.match(/^:|^[^_][^:]*:/);\n\t  }\n\t  function getPrefix(term) {\n\t    var a = term.split(':');\n\t    return a[0];\n\t  }\n\t  function getSuffix(term) {\n\t    var a = term.split(':');\n\t    return a[1];\n\t  }\n\t  function removeBrackets(term) {\n\t    if (isSymbol(term)) {\n\t      return term.slice(1, term.length - 1);\n\t    } else {\n\t      return term;\n\t    }\n\t  }\n\t  // takes a string and returns an array of strings and Literals in the place of literals\n\t  function parseLiterals(str) {\n\t    // var sin = (str.indexOf(/[ \\n]\\'/)==-1)?null:str.indexOf(/[ \\n]\\'/), doub = (str.indexOf(/[ \\n]\\\"/)==-1)?null:str.indexOf(/[ \\n]\\\"/)\n\t    var sin = str.indexOf(\"'\") === -1 ? null : str.indexOf(\"'\");\n\t    var doub = str.indexOf('\"') === -1 ? null : str.indexOf('\"');\n\t    // alert(\"S: \"+sin+\" D: \"+doub)\n\t    if (!sin && !doub) {\n\t      var a = new Array(1);\n\t      a[0] = str;\n\t      return a;\n\t    }\n\t    var res = new Array(2);\n\t    var br;\n\t    var ind;\n\t    if (!sin || doub && doub < sin) {\n\t      br = '\"';\n\t      ind = doub;\n\t    } else if (!doub || sin && sin < doub) {\n\t      br = \"'\";\n\t      ind = sin;\n\t    } else {\n\t      log.error('SQARQL QUERY OOPS!');\n\t      return res;\n\t    }\n\t    res[0] = str.slice(0, ind);\n\t    var end = str.slice(ind + 1).indexOf(br);\n\t    if (end === -1) {\n\t      log.error('SPARQL parsing error: no matching parentheses in literal ' + str);\n\t      return str;\n\t    }\n\t    // alert(str.slice(end + ind + 2).match(/^\\^\\^/))\n\t    var end2;\n\t    if (str.slice(end + ind + 2).match(/^\\^\\^/)) {\n\t      end2 = str.slice(end + ind + 2).indexOf(' ');\n\t      // alert(end2)\n\t      res[1] = kb.literal(str.slice(ind + 1, ind + 1 + end), '', kb.sym(removeBrackets(str.slice(ind + 4 + end, ind + 2 + end + end2))));\n\t      // alert(res[1].datatype.uri)\n\t      res = res.concat(parseLiterals(str.slice(end + ind + 3 + end2)));\n\t    } else if (str.slice(end + ind + 2).match(/^@/)) {\n\t      end2 = str.slice(end + ind + 2).indexOf(' ');\n\t      // alert(end2)\n\t      res[1] = kb.literal(str.slice(ind + 1, ind + 1 + end), str.slice(ind + 3 + end, ind + 2 + end + end2), null);\n\t      // alert(res[1].datatype.uri)\n\t      res = res.concat(parseLiterals(str.slice(end + ind + 2 + end2)));\n\t    } else {\n\t      res[1] = kb.literal(str.slice(ind + 1, ind + 1 + end), '', null);\n\t      log.info('Literal found: ' + res[1]);\n\t      res = res.concat(parseLiterals(str.slice(end + ind + 2))); // finds any other literals\n\t    }\n\t    return res;\n\t  }\n\t\n\t  function spaceDelimit(str) {\n\t    str = str.replace(/\\(/g, ' ( ').replace(/\\)/g, ' ) ').replace(/</g, ' <').replace(/>/g, '> ').replace(/{/g, ' { ').replace(/}/g, ' } ').replace(/[\\t\\n\\r]/g, ' ').replace(/; /g, ' ; ').replace(/\\. /g, ' . ').replace(/, /g, ' , ');\n\t    log.info('New str into spaceDelimit: \\n' + str);\n\t    var res = [];\n\t    var br = str.split(' ');\n\t    for (var x in br) {\n\t      if (isRealText(br[x])) {\n\t        res = res.concat(br[x]);\n\t      }\n\t    }\n\t    return res;\n\t  }\n\t\n\t  function replaceKeywords(input) {\n\t    var strarr = input;\n\t    for (var x = 0; x < strarr.length; x++) {\n\t      if (strarr[x] === 'a') {\n\t        strarr[x] = '<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>';\n\t      }\n\t      if (strarr[x] === 'is' && strarr[x + 2] === 'of') {\n\t        strarr.splice(x, 1);\n\t        strarr.splice(x + 1, 1);\n\t        var s = strarr[x - 1];\n\t        strarr[x - 1] = strarr[x + 1];\n\t        strarr[x + 1] = s;\n\t      }\n\t    }\n\t    return strarr;\n\t  }\n\t\n\t  function toTerms(input) {\n\t    var res = [];\n\t    for (var x = 0; x < input.length; x++) {\n\t      if (typeof input[x] !== 'string') {\n\t        res[x] = input[x];\n\t        continue;\n\t      }\n\t      input[x] = fixSymbolBrackets(input[x]);\n\t      if (isVar(input[x])) {\n\t        res[x] = makeVar(input[x].slice(1));\n\t      } else if (isBnode(input[x])) {\n\t        log.info(input[x] + ' was identified as a bnode.');\n\t        res[x] = kb.bnode();\n\t      } else if (isSymbol(input[x])) {\n\t        log.info(input[x] + ' was identified as a symbol.');\n\t        res[x] = kb.sym(removeBrackets(input[x]));\n\t      } else if (isPrefixedSymbol(input[x])) {\n\t        log.info(input[x] + ' was identified as a prefixed symbol');\n\t        if (prefixes[getPrefix(input[x])]) {\n\t          res[x] = kb.sym(input[x] = prefixes[getPrefix(input[x])] + getSuffix(input[x]));\n\t        } else {\n\t          log.error('SPARQL error: ' + input[x] + ' with prefix ' + getPrefix(input[x]) + ' does not have a correct prefix entry.');\n\t          res[x] = input[x];\n\t        }\n\t      } else {\n\t        res[x] = input[x];\n\t      }\n\t    }\n\t    return res;\n\t  }\n\t\n\t  function tokenize(str) {\n\t    var token1 = parseLiterals(str);\n\t    var token2 = [];\n\t    for (var x in token1) {\n\t      if (typeof token1[x] === 'string') {\n\t        token2 = token2.concat(spaceDelimit(token1[x]));\n\t      } else {\n\t        token2 = token2.concat(token1[x]);\n\t      }\n\t    }\n\t    token2 = replaceKeywords(token2);\n\t    log.info('SPARQL Tokens: ' + token2);\n\t    return token2;\n\t  }\n\t\n\t  // CASE-INSENSITIVE\n\t  function arrayIndexOf(str, arr) {\n\t    for (var i = 0; i < arr.length; i++) {\n\t      if (typeof arr[i] !== 'string') {\n\t        continue;\n\t      }\n\t      if (arr[i].toLowerCase() === str.toLowerCase()) {\n\t        return i;\n\t      }\n\t    }\n\t    // log.warn(\"No instance of \"+str+\" in array \"+arr)\n\t    return null;\n\t  }\n\t\n\t  // CASE-INSENSITIVE\n\t  function arrayIndicesOf(str, arr) {\n\t    var ind = [];\n\t    for (var i = 0; i < arr.length; i++) {\n\t      if (typeof arr[i] !== 'string') {\n\t        continue;\n\t      }\n\t      if (arr[i].toLowerCase() === str.toLowerCase()) {\n\t        ind.push(i);\n\t      }\n\t    }\n\t    return ind;\n\t  }\n\t\n\t  function setVars(input, query) {\n\t    log.info('SPARQL vars: ' + input);\n\t    for (var x in input) {\n\t      if (isVar(input[x])) {\n\t        log.info('Added ' + input[x] + ' to query variables from SPARQL');\n\t        var v = makeVar(input[x].slice(1));\n\t        query.vars.push(v);\n\t        v.label = input[x].slice(1);\n\t      } else {\n\t        log.warn('Incorrect SPARQL variable in SELECT: ' + input[x]);\n\t      }\n\t    }\n\t  }\n\t\n\t  function getPrefixDeclarations(input) {\n\t    var prefInd = arrayIndicesOf('PREFIX', input);\n\t    var res = [];\n\t    for (var i in prefInd) {\n\t      var a = input[prefInd[i] + 1];\n\t      var b = input[prefInd[i] + 2];\n\t      if (!isPrefix(a)) {\n\t        log.error('Invalid SPARQL prefix: ' + a);\n\t      } else if (!isSymbol(b)) {\n\t        log.error('Invalid SPARQL symbol: ' + b);\n\t      } else {\n\t        log.info('Prefix found: ' + a + ' -> ' + b);\n\t        var pref = getPrefix(a);\n\t        var symbol = removeBrackets(b);\n\t        res[pref] = symbol;\n\t      }\n\t    }\n\t    return res;\n\t  }\n\t\n\t  function getMatchingBracket(arr, open, close) {\n\t    log.info('Looking for a close bracket of type ' + close + ' in ' + arr);\n\t    var index = 0;\n\t    for (var i = 0; i < arr.length; i++) {\n\t      if (arr[i] === open) {\n\t        index++;\n\t      }\n\t      if (arr[i] === close) {\n\t        index--;\n\t      }\n\t      if (index < 0) {\n\t        return i;\n\t      }\n\t    }\n\t    log.error('Statement had no close parenthesis in SPARQL query');\n\t    return 0;\n\t  }\n\t\n\t  function constraintGreaterThan(value) {\n\t    this.describe = function (varstr) {\n\t      return varstr + ' > ' + value.toNT();\n\t    };\n\t    this.test = function (term) {\n\t      if (term.value.match(/[0-9]+(\\.[0-9]+)?([eE][+-]?[0-9]+)?/)) {\n\t        return parseFloat(term.value) > parseFloat(value);\n\t      } else {\n\t        return term.toNT() > value.toNT();\n\t      }\n\t    };\n\t    return this;\n\t  }\n\t\n\t  function constraintLessThan(value) {\n\t    // this is not the recommended usage. Should only work on literal, numeric, dateTime\n\t    this.describe = function (varstr) {\n\t      return varstr + ' < ' + value.toNT();\n\t    };\n\t    this.test = function (term) {\n\t      // this.describe = function (varstr) { return varstr + \" < \"+value }\n\t      if (term.value.match(/[0-9]+(\\.[0-9]+)?([eE][+-]?[0-9]+)?/)) {\n\t        return parseFloat(term.value) < parseFloat(value);\n\t      } else {\n\t        return term.toNT() < value.toNT();\n\t      }\n\t    };\n\t    return this;\n\t  }\n\t  // This should only work on literals but doesn't.\n\t  function ConstraintEqualTo(value) {\n\t    this.describe = function (varstr) {\n\t      return varstr + ' = ' + value.toNT();\n\t    };\n\t    this.test = function (term) {\n\t      return value.sameTerm(term);\n\t    };\n\t    return this;\n\t  }\n\t\n\t  // value must be a literal\n\t  function ConstraintRegexp(value) {\n\t    this.describe = function (varstr) {\n\t      return \"REGEXP( '\" + value + \"' , \" + varstr + ' )';\n\t    };\n\t    this.test = function (term) {\n\t      var str = value;\n\t      // str = str.replace(/^//,\"\").replace(//$/,\"\")\n\t      var rg = new RegExp(str);\n\t      if (term.value) {\n\t        return rg.test(term.value);\n\t      } else {\n\t        return false;\n\t      }\n\t    };\n\t  }\n\t\n\t  function setConstraint(input, pat) {\n\t    if (input.length === 3 && input[0].termType === 'Variable' && (input[2].termType === 'NamedNode' || input[2].termType === 'Literal')) {\n\t      if (input[1] === '=') {\n\t        log.debug('Constraint added: ' + input);\n\t        pat.constraints[input[0]] = new ConstraintEqualTo(input[2]);\n\t      } else if (input[1] === '>') {\n\t        log.debug('Constraint added: ' + input);\n\t        pat.constraints[input[0]] = new ConstraintEqualTo(input[2]);\n\t      } else if (input[1] === '<') {\n\t        log.debug('Constraint added: ' + input);\n\t        pat.constraints[input[0]] = new ConstraintEqualTo(input[2]);\n\t      } else {\n\t        log.warn(\"I don't know how to handle the constraint: \" + input);\n\t      }\n\t    } else if (input.length === 6 && typeof input[0] === 'string' && input[0].toLowerCase() === 'regexp' && input[1] === '(' && input[5] === ')' && input[3] === ',' && input[4].termType === 'Variable' && input[2].termType === 'Literal') {\n\t      log.debug('Constraint added: ' + input);\n\t      pat.constraints[input[4]] = new ConstraintRegexp(input[2].value);\n\t    }\n\t    // log.warn(\"I don't know how to handle the constraint: \"+input)\n\t    // alert(\"length: \"+input.length+\" input 0 type: \"+input[0].termType+\" input 1: \"+input[1]+\" input[2] type: \"+input[2].termType)\n\t  }\n\t\n\t  function setOptional(terms, pat) {\n\t    log.debug('Optional query: ' + terms + ' not yet implemented.');\n\t    var opt = kb.formula();\n\t    setWhere(terms, opt);\n\t    pat.optional.push(opt);\n\t  }\n\t\n\t  function setWhere(input, pat) {\n\t    var terms = toTerms(input);\n\t    var end;\n\t    log.debug('WHERE: ' + terms);\n\t    var opt;\n\t    // var opt = arrayIndicesOf(\"OPTIONAL\",terms)\n\t    while (arrayIndexOf('OPTIONAL', terms)) {\n\t      opt = arrayIndexOf('OPTIONAL', terms);\n\t      log.debug('OPT: ' + opt + ' ' + terms[opt] + ' in ' + terms);\n\t      if (terms[opt + 1] !== '{') {\n\t        log.warn('Bad optional opening bracket in word ' + opt);\n\t      }\n\t      end = getMatchingBracket(terms.slice(opt + 2), '{', '}');\n\t      if (end === -1) {\n\t        log.error('No matching bracket in word ' + opt);\n\t      } else {\n\t        setOptional(terms.slice(opt + 2, opt + 2 + end), pat);\n\t        // alert(pat.statements[0].toNT())\n\t        opt = arrayIndexOf('OPTIONAL', terms);\n\t        end = getMatchingBracket(terms.slice(opt + 2), '{', '}');\n\t        terms.splice(opt, end + 3);\n\t      }\n\t    }\n\t    log.debug('WHERE after optionals: ' + terms);\n\t    while (arrayIndexOf('FILTER', terms)) {\n\t      var filt = arrayIndexOf('FILTER', terms);\n\t      if (terms[filt + 1] !== '(') {\n\t        log.warn('Bad filter opening bracket in word ' + filt);\n\t      }\n\t      end = getMatchingBracket(terms.slice(filt + 2), '(', ')');\n\t      if (end === -1) {\n\t        log.error('No matching bracket in word ' + filt);\n\t      } else {\n\t        setConstraint(terms.slice(filt + 2, filt + 2 + end), pat);\n\t        filt = arrayIndexOf('FILTER', terms);\n\t        end = getMatchingBracket(terms.slice(filt + 2), '(', ')');\n\t        terms.splice(filt, end + 3);\n\t      }\n\t    }\n\t    log.debug('WHERE after filters and optionals: ' + terms);\n\t    extractStatements(terms, pat);\n\t  }\n\t\n\t  function extractStatements(terms, formula) {\n\t    var arrayZero = new Array(1);\n\t    arrayZero[0] = -1; // this is just to add the beginning of the where to the periods index.\n\t    var per = arrayZero.concat(arrayIndicesOf('.', terms));\n\t    var stat = [];\n\t    for (var x = 0; x < per.length - 1; x++) {\n\t      stat[x] = terms.slice(per[x] + 1, per[x + 1]);\n\t    }\n\t    // Now it's in an array of statements\n\t    for (x in stat) {\n\t      // THIS MUST BE CHANGED FOR COMMA, SEMICOLON\n\t      log.info('s+p+o ' + x + ' = ' + stat[x]);\n\t      var subj = stat[x][0];\n\t      stat[x].splice(0, 1);\n\t      var sem = arrayZero.concat(arrayIndicesOf(';', stat[x]));\n\t      sem.push(stat[x].length);\n\t      var stat2 = [];\n\t      for (var y = 0; y < sem.length - 1; y++) {\n\t        stat2[y] = stat[x].slice(sem[y] + 1, sem[y + 1]);\n\t      }\n\t      for (x in stat2) {\n\t        log.info('p+o ' + x + ' = ' + stat[x]);\n\t        var pred = stat2[x][0];\n\t        stat2[x].splice(0, 1);\n\t        var com = arrayZero.concat(arrayIndicesOf(',', stat2[x]));\n\t        com.push(stat2[x].length);\n\t        var stat3 = [];\n\t        for (y = 0; y < com.length - 1; y++) {\n\t          stat3[y] = stat2[x].slice(com[y] + 1, com[y + 1]);\n\t        }\n\t        for (x in stat3) {\n\t          var obj = stat3[x][0];\n\t          log.info('Subj=' + subj + ' Pred=' + pred + ' Obj=' + obj);\n\t          formula.add(subj, pred, obj);\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  // ******************************* Body of SPARQLToQuery ***************************//\n\t  log.info('SPARQL input: \\n' + SPARQL);\n\t  var q = new Query();\n\t  var sp = tokenize(SPARQL); // first tokenize everything\n\t  var prefixes = getPrefixDeclarations(sp);\n\t  if (!prefixes.rdf) {\n\t    prefixes.rdf = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#';\n\t  }\n\t  if (!prefixes.rdfs) {\n\t    prefixes.rdfs = 'http://www.w3.org/2000/01/rdf-schema#';\n\t  }\n\t  var selectLoc = arrayIndexOf('SELECT', sp);\n\t  var whereLoc = arrayIndexOf('WHERE', sp);\n\t  if (selectLoc < 0 || whereLoc < 0 || selectLoc > whereLoc) {\n\t    log.error('Invalid or nonexistent SELECT and WHERE tags in SPARQL query');\n\t    return false;\n\t  }\n\t  setVars(sp.slice(selectLoc + 1, whereLoc), q);\n\t\n\t  setWhere(sp.slice(whereLoc + 2, sp.length - 1), q.pat);\n\t\n\t  if (testMode) {\n\t    return q;\n\t  }\n\t\n\t  for (var x in q.pat.statements) {\n\t    var st = q.pat.statements[x];\n\t    if (st.subject.termType === 'NamedNode') {\n\t      /* && sf.isPending(st.subject.uri) */ // This doesn't work.\n\t      // sf.requestURI(st.subject.uri,\"sparql:\"+st.subject) Kenny: I remove these two\n\t      if (kb.fetcher) {\n\t        kb.fetcher.lookUpThing(st.subject, 'sparql:' + st.subject);\n\t      }\n\t    }\n\t    if (st.object.termType === 'NamedNode') {\n\t      /* && sf.isPending(st.object.uri) */\n\t      // sf.requestURI(st.object.uri,\"sparql:\"+st.object)\n\t      if (kb.fetcher) {\n\t        kb.fetcher.lookUpThing(st.object, 'sparql:' + st.object);\n\t      }\n\t    }\n\t  }\n\t  // alert(q.pat)\n\t  return q;\n\t  // checkVars()\n\t  // *******************************************************************//\n\t}\n\t\n\tmodule.exports = SPARQLToQuery;\n\n/***/ },\n/* 87 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\tvar _indexedFormula = __webpack_require__(4);\n\t\n\tvar _indexedFormula2 = _interopRequireDefault(_indexedFormula);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// Joe Presbrey <presbrey@mit.edu>\n\t// 2007-07-15\n\t// 2010-08-08 TimBL folded in Kenny's WEBDAV\n\t// 2010-12-07 TimBL addred local file write code\n\tvar docpart = __webpack_require__(7).docpart;\n\tvar Fetcher = __webpack_require__(77);\n\tvar graph = __webpack_require__(75).graph;\n\t\n\tvar namedNode = __webpack_require__(75).namedNode;\n\tvar Namespace = __webpack_require__(73);\n\tvar Serializer = __webpack_require__(70);\n\tvar uriJoin = __webpack_require__(7).join;\n\tvar Util = __webpack_require__(5);\n\t\n\tvar UpdateManager = function () {\n\t  var sparql = function sparql(store) {\n\t    this.store = store;\n\t    if (store.updater) {\n\t      throw new Error(\"You can't have two UpdateManagers for the same store\");\n\t    }\n\t    if (!store.fetcher) {\n\t      // The store must also/already have a fetcher\n\t      new Fetcher(store);\n\t    }\n\t    store.updater = this;\n\t    this.ifps = {};\n\t    this.fps = {};\n\t    this.ns = {};\n\t    this.ns.link = Namespace('http://www.w3.org/2007/ont/link#');\n\t    this.ns.http = Namespace('http://www.w3.org/2007/ont/http#');\n\t    this.ns.httph = Namespace('http://www.w3.org/2007/ont/httph#');\n\t    this.ns.ldp = Namespace('http://www.w3.org/ns/ldp#');\n\t    this.ns.rdf = Namespace('http://www.w3.org/1999/02/22-rdf-syntax-ns#');\n\t    this.ns.rdfs = Namespace('http://www.w3.org/2000/01/rdf-schema#');\n\t    this.ns.rdf = Namespace('http://www.w3.org/1999/02/22-rdf-syntax-ns#');\n\t    this.ns.owl = Namespace('http://www.w3.org/2002/07/owl#');\n\t\n\t    this.patchControl = []; // index of objects fro coordinating incomng and outgoing patches\n\t  };\n\t\n\t  sparql.prototype.patchControlFor = function (doc) {\n\t    if (!this.patchControl[doc.uri]) {\n\t      this.patchControl[doc.uri] = [];\n\t    }\n\t    return this.patchControl[doc.uri];\n\t  };\n\t\n\t  // Returns The method string SPARQL or DAV or LOCALFILE or false if known, undefined if not known.\n\t  //\n\t  // Files have to have a specific annotaton that they are machine written, for safety.\n\t  // We don't actually check for write access on files.\n\t  //\n\t  sparql.prototype.editable = function (uri, kb) {\n\t    if (!uri) {\n\t      return false; // Eg subject is bnode, no known doc to write to\n\t    }\n\t    if (!kb) {\n\t      kb = this.store;\n\t    }\n\t\n\t    if (uri.slice(0, 8) === 'file:///') {\n\t      if (kb.holds(kb.sym(uri), namedNode('http://www.w3.org/1999/02/22-rdf-syntax-ns#type'), namedNode('http://www.w3.org/2007/ont/link#MachineEditableDocument'))) {\n\t        return 'LOCALFILE';\n\t      }\n\t\n\t      var sts = kb.statementsMatching(kb.sym(uri), undefined, undefined);\n\t\n\t      console.log('sparql.editable: Not MachineEditableDocument file ' + uri + '\\n');\n\t      console.log(sts.map(function (x) {\n\t        return x.toNT();\n\t      }).join('\\n'));\n\t      return false;\n\t      // @@ Would be nifty of course to see whether we actually have write acess first.\n\t    }\n\t\n\t    var request;\n\t    var definitive = false;\n\t    var requests = kb.each(undefined, this.ns.link('requestedURI'), docpart(uri));\n\t\n\t    // Hack for the moment @@@@ 2016-02-12\n\t    if (kb.holds(namedNode(uri), this.ns.rdf('type'), this.ns.ldp('Resource'))) {\n\t      return 'SPARQL';\n\t    }\n\t    var i;\n\t    var method;\n\t    for (var r = 0; r < requests.length; r++) {\n\t      request = requests[r];\n\t      if (request !== undefined) {\n\t        var response = kb.any(request, this.ns.link('response'));\n\t        if (request !== undefined) {\n\t          var acceptPatch = kb.each(response, this.ns.httph('accept-patch'));\n\t          if (acceptPatch.length) {\n\t            for (i = 0; i < acceptPatch.length; i++) {\n\t              method = acceptPatch[i].value.trim();\n\t              if (method.indexOf('application/sparql-update') >= 0) return 'SPARQL';\n\t            }\n\t          }\n\t          var author_via = kb.each(response, this.ns.httph('ms-author-via'));\n\t          if (author_via.length) {\n\t            for (i = 0; i < author_via.length; i++) {\n\t              method = author_via[i].value.trim();\n\t              if (method.indexOf('SPARQL') >= 0) {\n\t                return 'SPARQL';\n\t              }\n\t              if (method.indexOf('DAV') >= 0) {\n\t                return 'DAV';\n\t              }\n\t            }\n\t          }\n\t          var status = kb.each(response, this.ns.http('status'));\n\t          if (status.length) {\n\t            for (i = 0; i < status.length; i++) {\n\t              if (status[i] === 200 || status[i] === 404) {\n\t                definitive = true;\n\t                // return false // A definitive answer\n\t              }\n\t            }\n\t          }\n\t        } else {\n\t          console.log('sparql.editable: No response for ' + uri + '\\n');\n\t        }\n\t      }\n\t    }\n\t    if (requests.length === 0) {\n\t      console.log('sparql.editable: No request for ' + uri + '\\n');\n\t    } else {\n\t      if (definitive) {\n\t        return false; // We have got a request and it did NOT say editable => not editable\n\t      }\n\t    }\n\t    console.log('sparql.editable: inconclusive for ' + uri + '\\n');\n\t    return undefined; // We don't know (yet) as we haven't had a response (yet)\n\t  };\n\t\n\t  // /////////  The identification of bnodes\n\t\n\t  sparql.prototype.anonymize = function (obj) {\n\t    return obj.toNT().substr(0, 2) === '_:' && this._mentioned(obj) ? '?' + obj.toNT().substr(2) : obj.toNT();\n\t  };\n\t\n\t  sparql.prototype.anonymizeNT = function (stmt) {\n\t    return this.anonymize(stmt.subject) + ' ' + this.anonymize(stmt.predicate) + ' ' + this.anonymize(stmt.object) + ' .';\n\t  };\n\t\n\t  // A list of all bnodes occuring in a statement\n\t  sparql.prototype._statement_bnodes = function (st) {\n\t    return [st.subject, st.predicate, st.object].filter(function (x) {\n\t      return x.isBlank;\n\t    });\n\t  };\n\t\n\t  // A list of all bnodes occuring in a list of statements\n\t  sparql.prototype._statement_array_bnodes = function (sts) {\n\t    var bnodes = [];\n\t    for (var i = 0; i < sts.length; i++) {\n\t      bnodes = bnodes.concat(this._statement_bnodes(sts[i]));\n\t    }\n\t    bnodes.sort(); // in place sort - result may have duplicates\n\t    var bnodes2 = [];\n\t    for (var j = 0; j < bnodes.length; j++) {\n\t      if (j === 0 || !bnodes[j].sameTerm(bnodes[j - 1])) {\n\t        bnodes2.push(bnodes[j]);\n\t      }\n\t    }\n\t    return bnodes2;\n\t  };\n\t\n\t  sparql.prototype._cache_ifps = function () {\n\t    // Make a cached list of [Inverse-]Functional properties\n\t    // Call this once before calling context_statements\n\t    this.ifps = {};\n\t    var a = this.store.each(undefined, this.ns.rdf('type'), this.ns.owl('InverseFunctionalProperty'));\n\t    for (var i = 0; i < a.length; i++) {\n\t      this.ifps[a[i].uri] = true;\n\t    }\n\t    this.fps = {};\n\t    a = this.store.each(undefined, this.ns.rdf('type'), this.ns.owl('FunctionalProperty'));\n\t    for (i = 0; i < a.length; i++) {\n\t      this.fps[a[i].uri] = true;\n\t    }\n\t  };\n\t\n\t  // Returns a context to bind a given node, up to a given depth\n\t  sparql.prototype._bnode_context2 = function (x, source, depth) {\n\t    // Return a list of statements which indirectly identify a node\n\t    //  Depth > 1 if try further indirection.\n\t    //  Return array of statements (possibly empty), or null if failure\n\t    var sts = this.store.statementsMatching(undefined, undefined, x, source); // incoming links\n\t    var y;\n\t    var res;\n\t    for (var i = 0; i < sts.length; i++) {\n\t      if (this.fps[sts[i].predicate.uri]) {\n\t        y = sts[i].subject;\n\t        if (!y.isBlank) {\n\t          return [sts[i]];\n\t        }\n\t        if (depth) {\n\t          res = this._bnode_context2(y, source, depth - 1);\n\t          if (res) {\n\t            return res.concat([sts[i]]);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    // outgoing links\n\t    sts = this.store.statementsMatching(x, undefined, undefined, source);\n\t    for (i = 0; i < sts.length; i++) {\n\t      if (this.ifps[sts[i].predicate.uri]) {\n\t        y = sts[i].object;\n\t        if (!y.isBlank) {\n\t          return [sts[i]];\n\t        }\n\t        if (depth) {\n\t          res = this._bnode_context2(y, source, depth - 1);\n\t          if (res) {\n\t            return res.concat([sts[i]]);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    return null; // Failure\n\t  };\n\t\n\t  // Returns the smallest context to bind a given single bnode\n\t  sparql.prototype._bnode_context_1 = function (x, source) {\n\t    // Return a list of statements which indirectly identify a node\n\t    //   Breadth-first\n\t    var self = this;\n\t    for (var depth = 0; depth < 3; depth++) {\n\t      // Try simple first\n\t      var con = this._bnode_context2(x, source, depth);\n\t      if (con !== null) return con;\n\t    }\n\t    // If we can't guarantee unique with logic just send all info about node\n\t    return this.store.connectedStatements(x, source); // was:\n\t    // throw new Error('Unable to uniquely identify bnode: ' + x.toNT())\n\t  };\n\t\n\t  sparql.prototype._mentioned = function (x) {\n\t    return this.store.statementsMatching(x).length !== 0 || // Don't pin fresh bnodes\n\t    this.store.statementsMatching(undefined, x).length !== 0 || this.store.statementsMatching(undefined, undefined, x).length !== 0;\n\t  };\n\t\n\t  sparql.prototype._bnode_context = function (bnodes, doc) {\n\t    var context = [];\n\t    if (bnodes.length) {\n\t      this._cache_ifps();\n\t      for (var i = 0; i < bnodes.length; i++) {\n\t        // Does this occur in old graph?\n\t        var bnode = bnodes[i];\n\t        if (!this._mentioned(bnode)) continue;\n\t        context = context.concat(this._bnode_context_1(bnode, doc));\n\t      }\n\t    }\n\t    return context;\n\t  };\n\t\n\t  /*  Weird code does not make sense -- some code corruption along the line -- st undefined -- weird\n\t      sparql.prototype._bnode_context = function(bnodes) {\n\t          var context = []\n\t          if (bnodes.length) {\n\t              if (this.store.statementsMatching(st.subject.isBlank?undefined:st.subject,\n\t                                        st.predicate.isBlank?undefined:st.predicate,\n\t                                        st.object.isBlank?undefined:st.object,\n\t                                        st.why).length <= 1) {\n\t                  context = context.concat(st)\n\t              } else {\n\t                  this._cache_ifps()\n\t                  for (x in bnodes) {\n\t                      context = context.concat(this._bnode_context_1(bnodes[x], st.why))\n\t                  }\n\t              }\n\t          }\n\t          return context\n\t      }\n\t  */\n\t  // Returns the best context for a single statement\n\t  sparql.prototype._statement_context = function (st) {\n\t    var bnodes = this._statement_bnodes(st);\n\t    return this._bnode_context(bnodes, st.why);\n\t  };\n\t\n\t  sparql.prototype._context_where = function (context) {\n\t    var sparql = this;\n\t    return !context || context.length === 0 ? '' : 'WHERE { ' + context.map(function (x) {\n\t      return sparql.anonymizeNT(x);\n\t    }).join('\\n') + ' }\\n';\n\t  };\n\t\n\t  sparql.prototype._fire = function (uri, query, callback) {\n\t    if (!uri) {\n\t      throw new Error('No URI given for remote editing operation: ' + query);\n\t    }\n\t    console.log('sparql: sending update to <' + uri + '>');\n\t    var xhr = Util.XMLHTTPFactory();\n\t    xhr.options = {};\n\t\n\t    xhr.onreadystatechange = function () {\n\t      // dump(\"SPARQL update ready state for <\"+uri+\"> readyState=\"+xhr.readyState+\"\\n\"+query+\"\\n\")\n\t      if (xhr.readyState === 4) {\n\t        var success = !xhr.status || xhr.status >= 200 && xhr.status < 300;\n\t        if (!success) {\n\t          console.log('sparql: update failed for <' + uri + '> status=' + xhr.status + ', ' + xhr.statusText + ', body length=' + xhr.responseText.length + '\\n   for query: ' + query);\n\t        } else {\n\t          console.log('sparql: update Ok for <' + uri + '>');\n\t        }\n\t        callback(uri, success, xhr.responseText, xhr);\n\t      }\n\t    };\n\t\n\t    xhr.open('PATCH', uri, true); // async=true\n\t    xhr.setRequestHeader('Content-type', 'application/sparql-update');\n\t    xhr.send(query);\n\t  };\n\t\n\t  // This does NOT update the statement.\n\t  // It returns an object whcih includes\n\t  //  function which can be used to change the object of the statement.\n\t  //\n\t  sparql.prototype.update_statement = function (statement) {\n\t    if (statement && !statement.why) {\n\t      return;\n\t    }\n\t    var sparql = this;\n\t    var context = this._statement_context(statement);\n\t\n\t    return {\n\t      statement: statement ? [statement.subject, statement.predicate, statement.object, statement.why] : undefined,\n\t      statementNT: statement ? this.anonymizeNT(statement) : undefined,\n\t      where: sparql._context_where(context),\n\t\n\t      set_object: function set_object(obj, callback) {\n\t        var query = this.where;\n\t        query += 'DELETE DATA { ' + this.statementNT + ' } ;\\n';\n\t        query += 'INSERT DATA { ' + this.anonymize(this.statement[0]) + ' ' + this.anonymize(this.statement[1]) + ' ' + this.anonymize(obj) + ' ' + ' . }\\n';\n\t\n\t        sparql._fire(this.statement[3].uri, query, callback);\n\t      }\n\t    };\n\t  };\n\t\n\t  sparql.prototype.insert_statement = function (st, callback) {\n\t    var st0 = st instanceof Array ? st[0] : st;\n\t    var query = this._context_where(this._statement_context(st0));\n\t\n\t    if (st instanceof Array) {\n\t      var stText = '';\n\t      for (var i = 0; i < st.length; i++) {\n\t        stText += st[i] + '\\n';\n\t      }query += 'INSERT DATA { ' + stText + ' }\\n';\n\t    } else {\n\t      query += 'INSERT DATA { ' + this.anonymize(st.subject) + ' ' + this.anonymize(st.predicate) + ' ' + this.anonymize(st.object) + ' ' + ' . }\\n';\n\t    }\n\t\n\t    this._fire(st0.why.uri, query, callback);\n\t  };\n\t\n\t  sparql.prototype.delete_statement = function (st, callback) {\n\t    var st0 = st instanceof Array ? st[0] : st;\n\t    var query = this._context_where(this._statement_context(st0));\n\t\n\t    if (st instanceof Array) {\n\t      var stText = '';\n\t      for (var i = 0; i < st.length; i++) {\n\t        stText += st[i] + '\\n';\n\t      }query += 'DELETE DATA { ' + stText + ' }\\n';\n\t    } else {\n\t      query += 'DELETE DATA { ' + this.anonymize(st.subject) + ' ' + this.anonymize(st.predicate) + ' ' + this.anonymize(st.object) + ' ' + ' . }\\n';\n\t    }\n\t\n\t    this._fire(st0.why.uri, query, callback);\n\t  };\n\t\n\t  //  Request a now or future action to refresh changes coming downstream\n\t  //\n\t  // This is designed to allow the system to re-request the server version,\n\t  // when a websocket has pinged to say there are changes.\n\t  // If thewebsocket, by contrast, has sent a patch, then this may not be necessary.\n\t  // This may be called out of context so *this* cannot be used.\n\t\n\t  sparql.prototype.requestDownstreamAction = function (doc, action) {\n\t    var control = this.patchControlFor(doc);\n\t    if (!control.pendingUpstream) {\n\t      action(doc);\n\t    } else {\n\t      if (control.downstreamAction) {\n\t        if (control.downstreamAction === action) {\n\t          return;\n\t        } else {\n\t          throw new Error(\"Can't wait for > 1 differnt downstream actions\");\n\t        }\n\t      } else {\n\t        control.downstreamAction = action;\n\t      }\n\t    }\n\t  };\n\t\n\t  // We want to start counting websockt notifications\n\t  // to distinguish the ones from others from our own.\n\t  sparql.prototype.clearUpstreamCount = function (doc) {\n\t    var control = this.patchControlFor(doc);\n\t    control.upstreamCount = 0;\n\t  };\n\t\n\t  sparql.prototype.getUpdatesVia = function (doc) {\n\t    var linkHeaders = this.store.fetcher.getHeader(doc, 'updates-via');\n\t    if (!linkHeaders || !linkHeaders.length) return null;\n\t    return linkHeaders[0].trim();\n\t  };\n\t\n\t  sparql.prototype.addDownstreamChangeListener = function (doc, listener) {\n\t    var control = this.patchControlFor(doc);\n\t    if (!control.downstreamChangeListeners) control.downstreamChangeListeners = [];\n\t    control.downstreamChangeListeners.push(listener);\n\t    var self = this;\n\t    this.setRefreshHandler(doc, function (doc) {\n\t      // a function not a method\n\t      self.reloadAndSync(doc);\n\t    });\n\t  };\n\t\n\t  sparql.prototype.reloadAndSync = function (doc) {\n\t    var control = this.patchControlFor(doc);\n\t    var updater = this;\n\t\n\t    if (control.reloading) {\n\t      console.log('   Already reloading - stop');\n\t      return; // once only needed\n\t    }\n\t    control.reloading = true;\n\t    var retryTimeout = 1000; // ms\n\t    var tryReload = function tryReload() {\n\t      console.log('try reload - timeout = ' + retryTimeout);\n\t      updater.reload(updater.store, doc, function (ok, message, xhr) {\n\t        control.reloading = false;\n\t        if (ok) {\n\t          if (control.downstreamChangeListeners) {\n\t            for (var i = 0; i < control.downstreamChangeListeners.length; i++) {\n\t              console.log('        Calling downstream listener ' + i);\n\t              control.downstreamChangeListeners[i]();\n\t            }\n\t          }\n\t        } else {\n\t          if (xhr.status === 0) {\n\t            console.log('Network error refreshing the data. Retrying in ' + retryTimeout / 1000);\n\t            control.reloading = true;\n\t            retryTimeout = retryTimeout * 2;\n\t            setTimeout(tryReload, retryTimeout);\n\t          } else {\n\t            console.log('Error ' + xhr.status + 'refreshing the data:' + message + '. Stopped' + doc);\n\t          }\n\t        }\n\t      });\n\t    };\n\t    tryReload();\n\t  };\n\t\n\t  // Set up websocket to listen on\n\t  //\n\t  // There is coordination between upstream changes and downstream ones\n\t  // so that a reload is not done in the middle of an upsteeam patch.\n\t  // If you usie this API then you get called when a change happens, and you\n\t  // have to reload the file yourself, and then refresh the UI.\n\t  // Alternative is addDownstreamChangeListener(), where you do not\n\t  // have to do the reload yourslf. Do mot mix them.\n\t  //\n\t  //  kb contains the HTTP  metadata from prefvious operations\n\t  //\n\t  sparql.prototype.setRefreshHandler = function (doc, handler) {\n\t    var wssURI = this.getUpdatesVia(doc); // relative\n\t    // var kb = this.store\n\t    var theHandler = handler;\n\t    var self = this;\n\t    var updater = this;\n\t    var retryTimeout = 1500; // *2 will be 3 Seconds, 6, 12, etc\n\t    var retries = 0;\n\t\n\t    if (!wssURI) {\n\t      console.log('Server doies not support live updates thoughUpdates-Via :-(');\n\t      return false;\n\t    }\n\t\n\t    wssURI = uriJoin(wssURI, doc.uri);\n\t    wssURI = wssURI.replace(/^http:/, 'ws:').replace(/^https:/, 'wss:');\n\t    console.log('Web socket URI ' + wssURI);\n\t\n\t    var openWebsocket = function openWebsocket() {\n\t      // From https://github.com/solid/solid-spec#live-updates\n\t      var socket;\n\t      if (typeof WebSocket !== 'undefined') {\n\t        socket = new WebSocket(wssURI);\n\t      } else if (typeof Services !== 'undefined') {\n\t        // Firefox add on http://stackoverflow.com/questions/24244886/is-websocket-supported-in-firefox-for-android-addons\n\t        socket = Services.wm.getMostRecentWindow('navigator:browser').WebSocket(wssURI);\n\t      } else if (typeof window !== 'undefined' && window.WebSocket) {\n\t        socket = window.WebSocket(wssURI);\n\t      } else {\n\t        console.log('Live update disabled, as WebSocket not supported by platform :-(');\n\t        return;\n\t      }\n\t      socket.onopen = function () {\n\t        console.log('    websocket open');\n\t        retryTimeout = 1500; // reset timeout to fast on success\n\t        this.send('sub ' + doc.uri);\n\t        if (retries) {\n\t          console.log('Web socket has been down, better check for any news.');\n\t          updater.requestDownstreamAction(doc, theHandler);\n\t        }\n\t      };\n\t      var control = self.patchControlFor(doc);\n\t      control.upstreamCount = 0;\n\t\n\t      // https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent\n\t      //\n\t      // 1000\tCLOSE_NORMAL\tNormal closure; the connection successfully completed whatever purpose for which it was created.\n\t      // 1001\tCLOSE_GOING_AWAY\tThe endpoint is going away, either\n\t      //                                  because of a server failure or because the browser is navigating away from the page that opened the connection.\n\t      // 1002\tCLOSE_PROTOCOL_ERROR\tThe endpoint is terminating the connection due to a protocol error.\n\t      // 1003\tCLOSE_UNSUPPORTED\tThe connection is being terminated because the endpoint\n\t      //                                  received data of a type it cannot accept (for example, a text-only endpoint received binary data).\n\t      // 1004                             Reserved. A meaning might be defined in the future.\n\t      // 1005\tCLOSE_NO_STATUS\tReserved.  Indicates that no status code was provided even though one was expected.\n\t      // 1006\tCLOSE_ABNORMAL\tReserved. Used to indicate that a connection was closed abnormally (\n\t      //\n\t      //\n\t      socket.onclose = function (event) {\n\t        console.log('*** Websocket closed with code ' + event.code + \", reason '\" + event.reason + \"' clean = \" + event.clean);\n\t        retryTimeout *= 2;\n\t        retries += 1;\n\t        console.log('Retrying in ' + retryTimeout + 'ms'); // (ask user?)\n\t        setTimeout(function () {\n\t          console.log('Trying websocket again');\n\t          openWebsocket();\n\t        }, retryTimeout);\n\t      };\n\t      socket.onmessage = function (msg) {\n\t        if (msg.data && msg.data.slice(0, 3) === 'pub') {\n\t          if ('upstreamCount' in control) {\n\t            control.upstreamCount -= 1;\n\t            if (control.upstreamCount >= 0) {\n\t              console.log('just an echo: ' + control.upstreamCount);\n\t              return; // Just an echo\n\t            }\n\t          }\n\t          console.log('Assume a real downstream change: ' + control.upstreamCount + ' -> 0');\n\t          control.upstreamCount = 0;\n\t          self.requestDownstreamAction(doc, theHandler);\n\t        }\n\t      };\n\t    }; // openWebsocket\n\t    openWebsocket();\n\t\n\t    return true;\n\t  };\n\t\n\t  // This high-level function updates the local store iff the web is changed successfully.\n\t  //\n\t  //  - deletions, insertions may be undefined or single statements or lists or formulae.\n\t  //      (may contain bnodes which can be indirectly identified by a where clause)\n\t  //\n\t  //  - callback is called as callback(uri, success, errorbody, xhr)\n\t  //\n\t  sparql.prototype.update = function (deletions, insertions, callback) {\n\t    try {\n\t      var kb = this.store;\n\t      var ds = !deletions ? [] : deletions instanceof _indexedFormula2.default ? deletions.statements : deletions instanceof Array ? deletions : [deletions];\n\t      var is = !insertions ? [] : insertions instanceof _indexedFormula2.default ? insertions.statements : insertions instanceof Array ? insertions : [insertions];\n\t      if (!(ds instanceof Array)) {\n\t        throw new Error('Type Error ' + (typeof ds === 'undefined' ? 'undefined' : _typeof(ds)) + ': ' + ds);\n\t      }\n\t      if (!(is instanceof Array)) {\n\t        throw new Error('Type Error ' + (typeof is === 'undefined' ? 'undefined' : _typeof(is)) + ': ' + is);\n\t      }\n\t      if (ds.length === 0 && is.length === 0) {\n\t        return callback(null, true); // success -- nothing needed to be done.\n\t      }\n\t      var doc = ds.length ? ds[0].why : is[0].why;\n\t      var control = this.patchControlFor(doc);\n\t      var startTime = Date.now();\n\t\n\t      var props = ['subject', 'predicate', 'object', 'why'];\n\t      var verbs = ['insert', 'delete'];\n\t      var clauses = { 'delete': ds, 'insert': is };\n\t      verbs.map(function (verb) {\n\t        clauses[verb].map(function (st) {\n\t          if (!doc.sameTerm(st.why)) {\n\t            throw new Error('update: destination ' + doc + ' inconsistent with delete quad ' + st.why);\n\t          }\n\t          props.map(function (prop) {\n\t            if (typeof st[prop] === 'undefined') {\n\t              throw new Error('update: undefined ' + prop + ' of statement.');\n\t            }\n\t          });\n\t        });\n\t      });\n\t\n\t      var protocol = this.editable(doc.uri, kb);\n\t      if (!protocol) {\n\t        throw new Error(\"Can't make changes in uneditable \" + doc);\n\t      }\n\t      var i;\n\t      var newSts;\n\t      var documentString;\n\t      var sz;\n\t      if (protocol.indexOf('SPARQL') >= 0) {\n\t        var bnodes = [];\n\t        if (ds.length) bnodes = this._statement_array_bnodes(ds);\n\t        if (is.length) bnodes = bnodes.concat(this._statement_array_bnodes(is));\n\t        var context = this._bnode_context(bnodes, doc);\n\t        var whereClause = this._context_where(context);\n\t        var query = '';\n\t        if (whereClause.length) {\n\t          // Is there a WHERE clause?\n\t          if (ds.length) {\n\t            query += 'DELETE { ';\n\t            for (i = 0; i < ds.length; i++) {\n\t              query += this.anonymizeNT(ds[i]) + '\\n';\n\t            }\n\t            query += ' }\\n';\n\t          }\n\t          if (is.length) {\n\t            query += 'INSERT { ';\n\t            for (i = 0; i < is.length; i++) {\n\t              query += this.anonymizeNT(is[i]) + '\\n';\n\t            }\n\t            query += ' }\\n';\n\t          }\n\t          query += whereClause;\n\t        } else {\n\t          // no where clause\n\t          if (ds.length) {\n\t            query += 'DELETE DATA { ';\n\t            for (i = 0; i < ds.length; i++) {\n\t              query += this.anonymizeNT(ds[i]) + '\\n';\n\t            }\n\t            query += ' } \\n';\n\t          }\n\t          if (is.length) {\n\t            if (ds.length) query += ' ; ';\n\t            query += 'INSERT DATA { ';\n\t            for (i = 0; i < is.length; i++) {\n\t              query += this.anonymizeNT(is[i]) + '\\n';\n\t            }\n\t            query += ' }\\n';\n\t          }\n\t        }\n\t        // Track pending upstream patches until they have fnished their callback\n\t        control.pendingUpstream = control.pendingUpstream ? control.pendingUpstream + 1 : 1;\n\t        if ('upstreamCount' in control) {\n\t          control.upstreamCount += 1; // count changes we originated ourselves\n\t          console.log('upstream count up to : ' + control.upstreamCount);\n\t        }\n\t\n\t        this._fire(doc.uri, query, function (uri, success, body, xhr) {\n\t          xhr.elapsedTime_ms = Date.now() - startTime;\n\t          console.log('    sparql: Return ' + (success ? 'success' : 'FAILURE ' + xhr.status) + ' elapsed ' + xhr.elapsedTime_ms + 'ms');\n\t          if (success) {\n\t            try {\n\t              kb.remove(ds);\n\t            } catch (e) {\n\t              success = false;\n\t              body = 'Remote Ok BUT error deleting ' + ds.length + ' from store!!! ' + e;\n\t            } // Add in any case -- help recover from weirdness??\n\t            for (var i = 0; i < is.length; i++) {\n\t              kb.add(is[i].subject, is[i].predicate, is[i].object, doc);\n\t            }\n\t          }\n\t\n\t          callback(uri, success, body, xhr);\n\t          control.pendingUpstream -= 1;\n\t          // When upstream patches have been sent, reload state if downstream waiting\n\t          if (control.pendingUpstream === 0 && control.downstreamAction) {\n\t            var downstreamAction = control.downstreamAction;\n\t            delete control.downstreamAction;\n\t            console.log('delayed downstream action:');\n\t            downstreamAction(doc);\n\t          }\n\t        });\n\t      } else if (protocol.indexOf('DAV') >= 0) {\n\t        // The code below is derived from Kenny's UpdateCenter.js\n\t        documentString;\n\t        var request = kb.any(doc, this.ns.link('request'));\n\t        if (!request) {\n\t          throw new Error('No record of our HTTP GET request for document: ' + doc);\n\t        } // should not happen\n\t        var response = kb.any(request, this.ns.link('response'));\n\t        if (!response) {\n\t          return null; // throw \"No record HTTP GET response for document: \"+doc\n\t        }\n\t        var content_type = kb.the(response, this.ns.httph('content-type')).value;\n\t\n\t        // prepare contents of revised document\n\t        newSts = kb.statementsMatching(undefined, undefined, undefined, doc).slice(); // copy!\n\t        for (i = 0; i < ds.length; i++) {\n\t          Util.RDFArrayRemove(newSts, ds[i]);\n\t        }\n\t        for (i = 0; i < is.length; i++) {\n\t          newSts.push(is[i]);\n\t        }\n\t\n\t        // serialize to te appropriate format\n\t        sz = Serializer(kb);\n\t        sz.suggestNamespaces(kb.namespaces);\n\t        sz.setBase(doc.uri); // ?? beware of this - kenny (why? tim)\n\t        switch (content_type) {\n\t          case 'application/rdf+xml':\n\t            documentString = sz.statementsToXML(newSts);\n\t            break;\n\t          case 'text/n3':\n\t          case 'text/turtle':\n\t          case 'application/x-turtle': // Legacy\n\t          case 'application/n3':\n\t            // Legacy\n\t            documentString = sz.statementsToN3(newSts);\n\t            break;\n\t          default:\n\t            throw new Error('Content-type ' + content_type + ' not supported for data write');\n\t        }\n\t\n\t        // Write the new version back\n\t\n\t        var candidateTarget = kb.the(response, this.ns.httph('content-location'));\n\t        var targetURI;\n\t        if (candidateTarget) {\n\t          targetURI = uriJoin(candidateTarget.value, targetURI);\n\t        }\n\t        var xhr = Util.XMLHTTPFactory();\n\t        xhr.options = {};\n\t        xhr.onreadystatechange = function () {\n\t          if (xhr.readyState === 4) {\n\t            // formula from sparqlUpdate.js, what about redirects?\n\t            var success = !xhr.status || xhr.status >= 200 && xhr.status < 300;\n\t            if (success) {\n\t              for (var i = 0; i < ds.length; i++) {\n\t                kb.remove(ds[i]);\n\t              }\n\t              for (i = 0; i < is.length; i++) {\n\t                kb.add(is[i].subject, is[i].predicate, is[i].object, doc);\n\t              }\n\t            }\n\t            callback(doc.uri, success, xhr.responseText);\n\t          }\n\t        };\n\t        xhr.open('PUT', targetURI, true);\n\t        // assume the server does PUT content-negotiation.\n\t        xhr.setRequestHeader('Content-type', content_type); // OK?\n\t        xhr.send(documentString);\n\t      } else {\n\t        if (protocol.indexOf('LOCALFILE') >= 0) {\n\t          try {\n\t            console.log('Writing back to local file\\n');\n\t            // See http://simon-jung.blogspot.com/2007/10/firefox-extension-file-io.html\n\t            // prepare contents of revised document\n\t            newSts = kb.statementsMatching(undefined, undefined, undefined, doc).slice(); // copy!\n\t            for (i = 0; i < ds.length; i++) {\n\t              Util.RDFArrayRemove(newSts, ds[i]);\n\t            }\n\t            for (i = 0; i < is.length; i++) {\n\t              newSts.push(is[i]);\n\t            }\n\t            // serialize to the appropriate format\n\t            documentString;\n\t            sz = Serializer(kb);\n\t            sz.suggestNamespaces(kb.namespaces);\n\t            sz.setBase(doc.uri); // ?? beware of this - kenny (why? tim)\n\t            var dot = doc.uri.lastIndexOf('.');\n\t            if (dot < 1) {\n\t              throw new Error('Rewriting file: No filename extension: ' + doc.uri);\n\t            }\n\t            var ext = doc.uri.slice(dot + 1);\n\t            switch (ext) {\n\t              case 'rdf':\n\t              case 'owl': // Just my experence   ...@@ we should keep the format in which it was parsed\n\t              case 'xml':\n\t                documentString = sz.statementsToXML(newSts);\n\t                break;\n\t              case 'n3':\n\t              case 'nt':\n\t              case 'ttl':\n\t                documentString = sz.statementsToN3(newSts);\n\t                break;\n\t              default:\n\t                throw new Error('File extension .' + ext + ' not supported for data write');\n\t            }\n\t            // Write the new version back\n\t            // create component for file writing\n\t            console.log('Writing back: <<<' + documentString + '>>>');\n\t            var filename = doc.uri.slice(7); // chop off   file://  leaving /path\n\t            // console.log(\"Writeback: Filename: \"+filename+\"\\n\")\n\t            var file = Components.classes['@mozilla.org/file/local;1'].createInstance(Components.interfaces.nsILocalFile);\n\t            file.initWithPath(filename);\n\t            if (!file.exists()) {\n\t              throw new Error('Rewriting file <' + doc.uri + '> but it does not exist!');\n\t            }\n\t            // {\n\t            // file.create( Components.interfaces.nsIFile.NORMAL_FILE_TYPE, 420)\n\t            // }\n\t            // create file output stream and use write/create/truncate mode\n\t            // 0x02 writing, 0x08 create file, 0x20 truncate length if exist\n\t            var stream = Components.classes['@mozilla.org/network/file-output-stream;1'].createInstance(Components.interfaces.nsIFileOutputStream);\n\t\n\t            // Various JS systems object to 0666 in struct mode as dangerous\n\t            stream.init(file, 0x02 | 0x08 | 0x20, parseInt('0666', 8), 0);\n\t\n\t            // write data to file then close output stream\n\t            stream.write(documentString, documentString.length);\n\t            stream.close();\n\t\n\t            for (i = 0; i < ds.length; i++) {\n\t              kb.remove(ds[i]);\n\t            }\n\t            for (i = 0; i < is.length; i++) {\n\t              kb.add(is[i].subject, is[i].predicate, is[i].object, doc);\n\t            }\n\t            callback(doc.uri, true, ''); // success!\n\t          } catch (e) {\n\t            callback(doc.uri, false, 'Exception trying to write back file <' + doc.uri + '>\\n'\n\t            // + tabulator.Util.stackString(e))\n\t            );\n\t          }\n\t        } else {\n\t          throw new Error(\"Unhandled edit method: '\" + protocol + \"' for \" + doc);\n\t        }\n\t      }\n\t    } catch (e) {\n\t      callback(undefined, false, 'Exception in update: ' + e + '\\n' + $rdf.Util.stackString(e));\n\t    }\n\t  }; // wnd update\n\t\n\t  // This suitable for an inital creation of a document\n\t  //\n\t  // data:    string, or array of statements\n\t  //\n\t  sparql.prototype.put = function (doc, data, content_type, callback) {\n\t    var documentString;\n\t    var kb = this.store;\n\t\n\t    if ((typeof data === 'undefined' ? 'undefined' : _typeof(data)) === _typeof('')) {\n\t      documentString = data;\n\t    } else {\n\t      // serialize to te appropriate format\n\t      var sz = Serializer(kb);\n\t      sz.suggestNamespaces(kb.namespaces);\n\t      sz.setBase(doc.uri);\n\t      switch (content_type) {\n\t        case 'application/rdf+xml':\n\t          documentString = sz.statementsToXML(data);\n\t          break;\n\t        case 'text/n3':\n\t        case 'text/turtle':\n\t        case 'application/x-turtle': // Legacy\n\t        case 'application/n3':\n\t          // Legacy\n\t          documentString = sz.statementsToN3(data);\n\t          break;\n\t        default:\n\t          throw new Error('Content-type ' + content_type + ' not supported for data PUT');\n\t      }\n\t    }\n\t    var xhr = Util.XMLHTTPFactory();\n\t    xhr.options = {};\n\t    xhr.onreadystatechange = function () {\n\t      if (xhr.readyState === 4) {\n\t        // formula from sparqlUpdate.js, what about redirects?\n\t        var success = !xhr.status || xhr.status >= 200 && xhr.status < 300;\n\t        if (success && typeof data !== 'string') {\n\t          data.map(function (st) {\n\t            kb.addStatement(st);\n\t          });\n\t          // kb.fetcher.requested[doc.uri] = true // as though fetched\n\t        }\n\t        if (success) {\n\t          delete kb.fetcher.nonexistant[doc.uri];\n\t          delete kb.fetcher.requested[doc.uri];\n\t          // @@ later we can fake it has been requestd if put gives us the header sand we save them.\n\t        }\n\t        callback(doc.uri, success, xhr.responseText, xhr);\n\t      }\n\t    };\n\t    xhr.open('PUT', doc.uri, true);\n\t    xhr.setRequestHeader('Content-type', content_type);\n\t    xhr.send(documentString);\n\t  };\n\t\n\t  // Reload a document.\n\t  //\n\t  // Fast and cheap, no metaata\n\t  // Measure times for the document\n\t  // Load it provisionally\n\t  // Don't delete the statemenst before the load, or it will leave a broken document\n\t  // in the meantime.\n\t\n\t  sparql.prototype.reload = function (kb, doc, callback) {\n\t    var startTime = Date.now();\n\t    // force sets no-cache and\n\t    kb.fetcher.nowOrWhenFetched(doc.uri, { force: true, noMeta: true, clearPreviousData: true }, function (ok, body, xhr) {\n\t      if (!ok) {\n\t        console.log('    ERROR reloading data: ' + body);\n\t        callback(false, 'Error reloading data: ' + body, xhr);\n\t      } else if (xhr.onErrorWasCalled || xhr.status !== 200) {\n\t        console.log('    Non-HTTP error reloading data! onErrorWasCalled=' + xhr.onErrorWasCalled + ' status: ' + xhr.status);\n\t        callback(false, 'Non-HTTP error reloading data: ' + body, xhr);\n\t      } else {\n\t        var elapsedTime_ms = Date.now() - startTime;\n\t        if (!doc.reloadTime_total) doc.reloadTime_total = 0;\n\t        if (!doc.reloadTime_count) doc.reloadTime_count = 0;\n\t        doc.reloadTime_total += elapsedTime_ms;\n\t        doc.reloadTime_count += 1;\n\t        console.log('    Fetch took ' + elapsedTime_ms + 'ms, av. of ' + doc.reloadTime_count + ' = ' + doc.reloadTime_total / doc.reloadTime_count + 'ms.');\n\t        callback(true);\n\t      }\n\t    });\n\t  };\n\t\n\t  sparql.prototype.oldReload = function (kb, doc, callback) {\n\t    var g2 = graph(); // A separate store to hold the data as we load it\n\t    var f2 = fetcher(g2);\n\t    var startTime = Date.now();\n\t    // force sets no-cache and\n\t    f2.nowOrWhenFetched(doc.uri, { force: true, noMeta: true, clearPreviousData: true }, function (ok, body, xhr) {\n\t      if (!ok) {\n\t        console.log('    ERROR reloading data: ' + body);\n\t        callback(false, 'Error reloading data: ' + body, xhr);\n\t      } else if (xhr.onErrorWasCalled || xhr.status !== 200) {\n\t        console.log('    Non-HTTP error reloading data! onErrorWasCalled=' + xhr.onErrorWasCalled + ' status: ' + xhr.status);\n\t        callback(false, 'Non-HTTP error reloading data: ' + body, xhr);\n\t      } else {\n\t        var sts1 = kb.statementsMatching(undefined, undefined, undefined, doc).slice(); // Take a copy!!\n\t        var sts2 = g2.statementsMatching(undefined, undefined, undefined, doc).slice();\n\t        console.log('    replacing ' + sts1.length + ' with ' + sts2.length + ' out of total statements ' + kb.statements.length);\n\t        kb.remove(sts1);\n\t        kb.add(sts2);\n\t        var elapsedTime_ms = Date.now() - startTime;\n\t        if (sts2.length === 0) {\n\t          console.log('????????????????? 0000000');\n\t        }\n\t        if (!doc.reloadTime_total) doc.reloadTime_total = 0;\n\t        if (!doc.reloadTime_count) doc.reloadTime_count = 0;\n\t        doc.reloadTime_total += elapsedTime_ms;\n\t        doc.reloadTime_count += 1;\n\t        console.log('    fetch took ' + elapsedTime_ms + 'ms, av. of ' + doc.reloadTime_count + ' = ' + doc.reloadTime_total / doc.reloadTime_count + 'ms.');\n\t        callback(true);\n\t      }\n\t    });\n\t  };\n\t  return sparql;\n\t}();\n\t\n\tmodule.exports = UpdateManager;\n\n/***/ },\n/* 88 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/*\n\t * Updates-Via\n\t */\n\tvar namedNode = __webpack_require__(75).namedNode;\n\t\n\tvar UpdatesSocket = function () {\n\t  function UpdatesSocket(parent, via) {\n\t    _classCallCheck(this, UpdatesSocket);\n\t\n\t    this.parent = parent;\n\t    this.via = via;\n\t    this.connected = false;\n\t    this.pending = {};\n\t    this.subscribed = {};\n\t    this.socket = {};\n\t    try {\n\t      this.socket = new WebSocket(via);\n\t      this.socket.onopen = this.onOpen;\n\t      this.socket.onclose = this.onClose;\n\t      this.socket.onmessage = this.onMessage;\n\t      this.socket.onerror = this.onError;\n\t    } catch (error) {\n\t      this.onError(error);\n\t    }\n\t  }\n\t\n\t  _createClass(UpdatesSocket, [{\n\t    key: '_decode',\n\t    value: function _decode(q) {\n\t      var elt;\n\t      var i;\n\t      var k;\n\t      var r;\n\t      var ref;\n\t      var ref1;\n\t      var v;\n\t      r = {};\n\t      ref = function () {\n\t        var j, len, ref, results;\n\t        ref = q.split('&');\n\t        results = [];\n\t        for (j = 0, len = ref.length; j < len; j++) {\n\t          elt = ref[j];\n\t          results.push(elt.split('='));\n\t        }\n\t        return results;\n\t      }();\n\t      for (i in ref) {\n\t        elt = ref[i];\n\t        ref1 = [decodeURIComponent(elt[0]), decodeURIComponent(elt[1])];\n\t        k = ref1[0];\n\t        v = ref1[1];\n\t        if (r[k] == null) {\n\t          r[k] = [];\n\t        }\n\t        r[k].push(v);\n\t      }\n\t      return r;\n\t    }\n\t  }, {\n\t    key: '_send',\n\t    value: function _send(method, uri, data) {\n\t      var base, message;\n\t      message = [method, uri, data].join(' ');\n\t      return typeof (base = this.socket).send === 'function' ? base.send(message) : void 0;\n\t    }\n\t  }, {\n\t    key: '_subscribe',\n\t    value: function _subscribe(uri) {\n\t      this._send('sub', uri, '');\n\t      this.subscribed[uri] = true;\n\t      return this.subscribed[uri];\n\t    }\n\t  }, {\n\t    key: 'onClose',\n\t    value: function onClose(e) {\n\t      var uri;\n\t      this.connected = false;\n\t      for (uri in this.subscribed) {\n\t        this.pending[uri] = true;\n\t      }\n\t      this.subscribed = {};\n\t      return this.subscribed;\n\t    }\n\t  }, {\n\t    key: 'onError',\n\t    value: function onError(e) {\n\t      throw new Error('onError' + e);\n\t    }\n\t  }, {\n\t    key: 'onMessage',\n\t    value: function onMessage(e) {\n\t      var base, message;\n\t      message = e.data.split(' ');\n\t      if (message[0] === 'ping') {\n\t        return typeof (base = this.socket).send === 'function' ? base.send('pong ' + message.slice(1).join(' ')) : void 0;\n\t      } else if (message[0] === 'pub') {\n\t        return this.parent.onUpdate(message[1], this._decode(message[2]));\n\t      }\n\t    }\n\t  }, {\n\t    key: 'onOpen',\n\t    value: function onOpen(e) {\n\t      var results, uri;\n\t      this.connected = true;\n\t      results = [];\n\t      for (uri in this.pending) {\n\t        delete this.pending[uri];\n\t        results.push(this._subscribe(uri));\n\t      }\n\t      return results;\n\t    }\n\t  }, {\n\t    key: 'subscribe',\n\t    value: function subscribe(uri) {\n\t      if (this.connected) {\n\t        return this._subscribe(uri);\n\t      } else {\n\t        this.pending[uri] = true;\n\t        return this.pending[uri];\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return UpdatesSocket;\n\t}();\n\t\n\tvar UpdatesVia = function () {\n\t  function UpdatesVia(fetcher) {\n\t    _classCallCheck(this, UpdatesVia);\n\t\n\t    this.fetcher = fetcher;\n\t    this.graph = {};\n\t    this.via = {};\n\t    this.fetcher.addCallback('headers', this.onHeaders);\n\t  }\n\t\n\t  _createClass(UpdatesVia, [{\n\t    key: 'onHeaders',\n\t    value: function onHeaders(d) {\n\t      var etag, uri, via;\n\t      if (d.headers == null) {\n\t        return true;\n\t      }\n\t      if (typeof WebSocket === 'undefined' || WebSocket === null) {\n\t        return true;\n\t      }\n\t      etag = d.headers['etag'];\n\t      via = d.headers['updates-via'];\n\t      uri = d.uri;\n\t      if (etag && via) {\n\t        this.graph[uri] = {\n\t          etag: etag,\n\t          via: via\n\t        };\n\t        this.register(via, uri);\n\t      }\n\t      return true;\n\t    }\n\t  }, {\n\t    key: 'onUpdate',\n\t    value: function onUpdate(uri, d) {\n\t      return this.fetcher.refresh(namedNode(uri));\n\t    }\n\t  }, {\n\t    key: 'register',\n\t    value: function register(via, uri) {\n\t      if (this.via[via] == null) {\n\t        this.via[via] = new UpdatesSocket(this, via);\n\t      }\n\t      return this.via[via].subscribe(uri);\n\t    }\n\t  }]);\n\t\n\t  return UpdatesVia;\n\t}();\n\t\n\tmodule.exports.UpdatesSocket = UpdatesSocket;\n\tmodule.exports.UpdatesVia = UpdatesVia;\n\n/***/ },\n/* 89 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*\n\t The MIT License (MIT)\n\t\n\t Copyright (c) 2016-17 Solid\n\t\n\t Permission is hereby granted, free of charge, to any person obtaining a copy\n\t of this software and associated documentation files (the \"Software\"), to deal\n\t in the Software without restriction, including without limitation the rights\n\t to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t copies of the Software, and to permit persons to whom the Software is\n\t furnished to do so, subject to the following conditions:\n\t\n\t The above copyright notice and this permission notice shall be included in all\n\t copies or substantial portions of the Software.\n\t\n\t THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\t SOFTWARE.\n\t\n\t If you would like to know more about the solid Solid project, please see\n\t https://github.com/solid/solid\n\t */\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar RelyingParty = __webpack_require__(90);\n\t\n\t// URI parameter types\n\tvar HASH = 'hash';\n\tvar QUERY = 'query';\n\t\n\t// AuthenticationRequest sending methods\n\tvar REDIRECT = 'redirect';\n\t\n\tvar ClientAuthOIDC = function () {\n\t  /**\n\t   * @constructor\n\t   * @param [options={}]\n\t   * @param [options.window=Window] Optionally inject global browser window\n\t   * @param [options.localStorage=localStorage] Optionally inject localStorage\n\t   */\n\t  function ClientAuthOIDC() {\n\t    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t\n\t    _classCallCheck(this, ClientAuthOIDC);\n\t\n\t    this.window = options.window || global.window;\n\t    this.localStorage = options.localStorage || global.localStorage;\n\t    this.currentClient = null;\n\t    this.providerUri = null;\n\t    this.webId = null;\n\t    this.idToken = null;\n\t    this.accessToken = null;\n\t    this.method = REDIRECT; // only redirect is currently supported\n\t  }\n\t\n\t  _createClass(ClientAuthOIDC, [{\n\t    key: 'initEventListeners',\n\t    value: function initEventListeners(window) {\n\t      window.addEventListener('message', this.onMessage.bind(this));\n\t    }\n\t\n\t    /**\n\t     * Returns the current window's URI\n\t     * @return {string}\n\t     */\n\t\n\t  }, {\n\t    key: 'currentLocation',\n\t    value: function currentLocation() {\n\t      var window = this.window;\n\t      return window.location.href;\n\t    }\n\t  }, {\n\t    key: 'currentUser',\n\t    value: function currentUser() {\n\t      if (this.webId) {\n\t        return Promise.resolve(this.webId);\n\t      }\n\t      // Attempt to find a provider based on the 'state' param of the current URI\n\t      var providerUri = this.providerFromCurrentUri();\n\t      if (providerUri) {\n\t        return this.login(providerUri);\n\t      } else {\n\t        return Promise.resolve(null);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Extracts and returns the `state` query or hash fragment param from a uri\n\t     * @param uri {string}\n\t     * @param uriType {string} 'hash' or QUERY\n\t     * @return {string|null} Value of the `state` query or hash fragment param\n\t     */\n\t\n\t  }, {\n\t    key: 'extractState',\n\t    value: function extractState(uri) {\n\t      var uriType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : HASH;\n\t\n\t      if (!uri) {\n\t        return null;\n\t      }\n\t      var uriObj = new URL(uri);\n\t      var state = void 0;\n\t      if (uriType === HASH) {\n\t        var hash = uriObj.hash || '#';\n\t        var params = new URLSearchParams(hash.substr(1));\n\t        state = params.get('state');\n\t      }\n\t      if (uriType === QUERY) {\n\t        state = uriObj.searchParams.get('state');\n\t      }\n\t      return state;\n\t    }\n\t  }, {\n\t    key: 'keyByProvider',\n\t    value: function keyByProvider() {\n\t      var providerUri = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.providerUri;\n\t\n\t      return 'oidc.rp.by-provider.' + providerUri;\n\t    }\n\t  }, {\n\t    key: 'keyByState',\n\t    value: function keyByState(state) {\n\t      if (!state) {\n\t        throw new TypeError('No state provided to keyByState()');\n\t      }\n\t      return 'oidc.rp.by-state.' + state;\n\t    }\n\t\n\t    /**\n\t     * @param providerUri {string}\n\t     * @return {Promise<RelyingParty>}\n\t     */\n\t\n\t  }, {\n\t    key: 'loadOrRegisterClient',\n\t    value: function loadOrRegisterClient(providerUri) {\n\t      var _this = this;\n\t\n\t      this.currentClient = null;\n\t      return this.loadClient(providerUri).then(function (loadedClient) {\n\t        if (loadedClient) {\n\t          _this.currentClient = loadedClient;\n\t          return loadedClient;\n\t        } else {\n\t          _this.currentClient = null;\n\t          return _this.registerClient(providerUri);\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * @param providerUri {string}\n\t     * @return {Promise<RelyingParty>}\n\t     */\n\t\n\t  }, {\n\t    key: 'loadClient',\n\t    value: function loadClient(providerUri) {\n\t      if (!providerUri) {\n\t        var error = new Error('Cannot load or register client, providerURI missing');\n\t        return Promise.reject(error);\n\t      }\n\t      if (this.currentClient && this.currentClient.provider.url === providerUri) {\n\t        // Client is cached, return it\n\t        return Promise.resolve(this.currentClient);\n\t      }\n\t\n\t      // Check for client config stored locally\n\t      var key = this.keyByProvider(providerUri);\n\t      var clientConfig = localStorage.getItem(key);\n\t      if (clientConfig) {\n\t        clientConfig = JSON.parse(clientConfig);\n\t        return RelyingParty.from(clientConfig);\n\t      } else {\n\t        return Promise.resolve(null);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Loads a provider's URI from localStorage, given a `state` uri param.\n\t     * @param state {string}\n\t     * @return {string}\n\t     */\n\t\n\t  }, {\n\t    key: 'loadProvider',\n\t    value: function loadProvider(state) {\n\t      var key = this.keyByState(state);\n\t      var providerUri = localStorage.getItem(key);\n\t      return providerUri;\n\t    }\n\t\n\t    /**\n\t     * Resolves to the WebID URI of the current user. Intended to be called\n\t     * on page load (in case the user is already authenticated), as well as\n\t     * triggered when the user initiates login explicitly (such as by pressing\n\t     * a Login button, etc).\n\t     * @param [providerUri] {string} Provider URI, result of a Provider Selection\n\t     *   operation (that the app developer has provided). If `null`, the\n\t     *   `selectProvider()` step will kick off its own UI for Provider Selection.\n\t     * @return {Promise<string>} Resolves to the logged in user's WebID URI\n\t     */\n\t\n\t  }, {\n\t    key: 'login',\n\t    value: function login(providerUri) {\n\t      this.clearCurrentUser();\n\t      var selectProvider = this.selectProvider.bind(this);\n\t      var loadOrRegisterClient = this.loadOrRegisterClient.bind(this);\n\t      var validateOrSendAuthRequest = this.validateOrSendAuthRequest.bind(this);\n\t\n\t      return Promise.resolve(providerUri).then(selectProvider).then(loadOrRegisterClient).then(validateOrSendAuthRequest);\n\t    }\n\t  }, {\n\t    key: 'clearCurrentUser',\n\t    value: function clearCurrentUser() {\n\t      this.webId = null;\n\t      this.accessToken = null;\n\t      this.idToken = null;\n\t    }\n\t  }, {\n\t    key: 'logout',\n\t    value: function logout() {\n\t      this.clearCurrentUser();\n\t      if (!this.currentClient) {\n\t        return Promise.resolve(null);\n\t      }\n\t      return this.currentClient.logout();\n\t    }\n\t\n\t    /**\n\t     * Resolves to the URI of an OIDC identity provider, from one of the following:\n\t     *\n\t     * 1. If a `providerUri` was passed in by the app developer (perhaps they\n\t     *   developed a custom 'Select Provider' UI), that value is returned.\n\t     * 2. The current `this.providerUri` cached on this auth client, if present\n\t     * 3. The `state` parameter of the current window URI (in case the user has\n\t     *   gone through the login workflow and this page is the redirect back).\n\t     * 3. Lastly, if none of the above worked, the clients opens its own\n\t     *   'Select Provider' UI popup window, and sets up an event listener (for\n\t     *   when a user makes a selection.\n\t     *\n\t     * @param [providerUri] {string} If the provider URI is already known to the\n\t     *   app developer, just pass it through, no need to take further action.\n\t     * @return {Promise<string>}\n\t     */\n\t\n\t  }, {\n\t    key: 'selectProvider',\n\t    value: function selectProvider(providerUri) {\n\t      if (providerUri) {\n\t        return Promise.resolve(providerUri);\n\t      }\n\t      // Attempt to find a provider based on the 'state' param of the current URI\n\t      providerUri = this.providerFromCurrentUri();\n\t      if (providerUri) {\n\t        return Promise.resolve(providerUri);\n\t      }\n\t      // Lastly, kick off a Select Provider popup window workflow\n\t      return this.providerFromUI();\n\t    }\n\t\n\t    /**\n\t     * Parses the current URI's `state` hash param and attempts to load a\n\t     * previously saved providerUri from it. If no `state` param is present, or if\n\t     * no providerUri has been saved, returns `null`.\n\t     *\n\t     * @return {string|null} Provider URI, if present\n\t     */\n\t\n\t  }, {\n\t    key: 'providerFromCurrentUri',\n\t    value: function providerFromCurrentUri() {\n\t      var currentUri = this.currentLocation();\n\t      var stateParam = this.extractState(currentUri, HASH);\n\t      if (stateParam) {\n\t        return this.loadProvider(stateParam);\n\t      } else {\n\t        return null;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'providerFromUI',\n\t    value: function providerFromUI() {\n\t      console.log('No state param, getting provider from UI');\n\t      this.initEventListeners(window);\n\t      // Get the provider from the UI somehow\n\t    }\n\t\n\t    /**\n\t     * Tests whether the current URI is the result of an AuthenticationRequest\n\t     * return redirect.\n\t     * @return {boolean}\n\t     */\n\t\n\t  }, {\n\t    key: 'currentUriHasAuthResponse',\n\t    value: function currentUriHasAuthResponse() {\n\t      var currentUri = this.currentLocation();\n\t      var stateParam = this.extractState(currentUri, HASH);\n\t      return !!stateParam;\n\t    }\n\t\n\t    /**\n\t     * Redirects the current window to the given uri.\n\t     * @param uri {string}\n\t     */\n\t\n\t  }, {\n\t    key: 'redirectTo',\n\t    value: function redirectTo(uri) {\n\t      this.window.location = uri;\n\t    }\n\t\n\t    /**\n\t     * @private\n\t     * @param client {RelyingParty}\n\t     * @throws {Error}\n\t     * @return {Promise<null>}\n\t     */\n\t\n\t  }, {\n\t    key: 'sendAuthRequest',\n\t    value: function sendAuthRequest(client) {\n\t      var _this2 = this;\n\t\n\t      var options = {};\n\t      var providerUri = client.provider.url;\n\t      return client.createRequest(options, this.localStorage).then(function (authUri) {\n\t        var state = _this2.extractState(authUri, QUERY);\n\t        if (!state) {\n\t          throw new Error('Invalid authentication request uri');\n\t        }\n\t        _this2.saveProviderByState(state, providerUri);\n\t        if (_this2.method === REDIRECT) {\n\t          _this2.redirectTo(authUri);\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * @param client {RelyingParty}\n\t     * @throws {Error}\n\t     * @return {Promise<null|string>} Resolves to either an AuthenticationRequest\n\t     *   being sent (`null`), or to the webId of the current user (extracted\n\t     *   from the authentication response).\n\t     */\n\t\n\t  }, {\n\t    key: 'validateOrSendAuthRequest',\n\t    value: function validateOrSendAuthRequest(client) {\n\t      if (!client) {\n\t        var error = new Error('Could not load or register a RelyingParty client');\n\t        return Promise.reject(error);\n\t      }\n\t\n\t      if (this.currentUriHasAuthResponse()) {\n\t        return this.initUserFromResponse(client);\n\t      }\n\t\n\t      return this.sendAuthRequest(client);\n\t    }\n\t\n\t    /**\n\t     * Validates the auth response in the current uri, initializes the current\n\t     * user's ID Token and Access token, and returns the\n\t     * @param client {RelyingParty}\n\t     * @throws {Error}\n\t     * @returns {Promise<string>}\n\t     */\n\t\n\t  }, {\n\t    key: 'initUserFromResponse',\n\t    value: function initUserFromResponse(client) {\n\t      var _this3 = this;\n\t\n\t      return client.validateResponse(this.currentLocation(), this.localStorage).then(function (response) {\n\t        _this3.idToken = response.params.id_token;\n\t        _this3.accessToken = response.params.access_token;\n\t        return _this3.extractAndValidateWebId(response.decoded);\n\t      }).catch(function (error) {\n\t        if (error.message === 'Cannot resolve signing key for ID Token.') {\n\t          console.log('ID Token found, but could not validate. Provider likely has changed their public keys. Please retry login.');\n\t          return null;\n\t        } else {\n\t          throw error;\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * @param idToken {IDToken}\n\t     * @throws {Error}\n\t     * @return {string}\n\t     */\n\t\n\t  }, {\n\t    key: 'extractAndValidateWebId',\n\t    value: function extractAndValidateWebId(idToken) {\n\t      var webId = idToken.payload.sub;\n\t      this.webId = webId;\n\t      return webId;\n\t    }\n\t\n\t    /**\n\t     * @param providerUri {string}\n\t     * @param [options={}]\n\t     * @param [options.redirectUri] {string} Defaults to window.location.href\n\t     * @param [options.scope='openid profile'] {string}\n\t     * @param [options.store=localStorage]\n\t     * @throws {TypeError} If providerUri is missing\n\t     * @return {Promise<RelyingParty>} Registered RelyingParty client instance\n\t     */\n\t\n\t  }, {\n\t    key: 'registerClient',\n\t    value: function registerClient(providerUri) {\n\t      var _this4 = this;\n\t\n\t      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t      return this.registerPublicClient(providerUri, options).then(function (registeredClient) {\n\t        _this4.storeClient(registeredClient, providerUri);\n\t        return registeredClient;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * @private\n\t     * @param providerUri {string}\n\t     * @param [options={}]\n\t     * @param [options.redirectUri] {string} Defaults to window.location.href\n\t     * @param [options.scope='openid profile'] {string}\n\t     * @param [options.store=localStorage]\n\t     * @throws {TypeError} If providerUri is missing\n\t     * @return {Promise<RelyingParty>} Registered RelyingParty client instance\n\t     */\n\t\n\t  }, {\n\t    key: 'registerPublicClient',\n\t    value: function registerPublicClient(providerUri) {\n\t      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t      console.log('Registering public client...');\n\t      if (!providerUri) {\n\t        throw new TypeError('Cannot registerClient auth client, missing providerUri');\n\t      }\n\t      var redirectUri = options.redirectUri || this.currentLocation();\n\t      this.redirectUri = redirectUri;\n\t      var registration = {\n\t        issuer: providerUri,\n\t        grant_types: ['implicit'],\n\t        redirect_uris: [redirectUri],\n\t        response_types: ['id_token token'],\n\t        scope: options.scope || 'openid profile'\n\t      };\n\t      var rpOptions = {\n\t        defaults: {\n\t          authenticate: {\n\t            redirect_uri: redirectUri,\n\t            response_type: 'id_token token'\n\t          }\n\t        },\n\t        store: options.store || localStorage\n\t      };\n\t      return RelyingParty.register(providerUri, registration, rpOptions);\n\t    }\n\t  }, {\n\t    key: 'onMessage',\n\t    value: function onMessage(event) {\n\t      console.log('Auth client received event: ', event);\n\t      if (!event || !event.data) {\n\t        return;\n\t      }\n\t      switch (event.data.event_type) {\n\t        case 'providerSelected':\n\t          console.log('Provider selected: ', event.data.value);\n\t          break;\n\t        default:\n\t          console.error('onMessage - unknown event type: ', event);\n\t          break;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * @param state {string}\n\t     * @param providerUri {string}\n\t     * @throws {Error}\n\t     */\n\t\n\t  }, {\n\t    key: 'saveProviderByState',\n\t    value: function saveProviderByState(state, providerUri) {\n\t      if (!state) {\n\t        throw new Error('Cannot save providerUri - state not provided');\n\t      }\n\t      var key = this.keyByState(state);\n\t      localStorage.setItem(key, providerUri);\n\t    }\n\t\n\t    /**\n\t     * Stores a RelyingParty client for a given provider in localStorage.\n\t     * @param client {RelyingParty}\n\t     * @param providerUri {string}\n\t     */\n\t\n\t  }, {\n\t    key: 'storeClient',\n\t    value: function storeClient(client, providerUri) {\n\t      this.currentClient = client;\n\t      localStorage.setItem(this.keyByProvider(providerUri), client.serialize());\n\t    }\n\t  }]);\n\t\n\t  return ClientAuthOIDC;\n\t}();\n\t\n\tmodule.exports = ClientAuthOIDC;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 90 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tmodule.exports = __webpack_require__(91);\n\n/***/ },\n/* 91 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Dependencies\n\t */\n\tvar assert = __webpack_require__(92);\n\tvar fetch = __webpack_require__(93);\n\tvar Headers = fetch.Headers ? fetch.Headers : global.Headers;\n\t\n\tvar _require = __webpack_require__(94),\n\t    JSONSchema = _require.JSONSchema,\n\t    JSONDocument = _require.JSONDocument;\n\t\n\tvar _require2 = __webpack_require__(103),\n\t    JWKSet = _require2.JWKSet;\n\t\n\tvar AuthenticationRequest = __webpack_require__(127);\n\tvar AuthenticationResponse = __webpack_require__(133);\n\tvar RelyingPartySchema = __webpack_require__(136);\n\t// const Session = require('./Session')\n\t\n\t/**\n\t * RelyingParty\n\t *\n\t * @class\n\t * Client interface for OpenID Connect Relying Party.\n\t *\n\t * @example\n\t *  let client = RelyingParty({\n\t *    provider: {\n\t *      name: 'Anvil Research, Inc.',\n\t *      url: 'https://forge.anvil.io'\n\t *      // configuration\n\t *      // jwks\n\t *    },\n\t *    authenticate: {\n\t *      response_type: 'code',\n\t *      display: 'popup',\n\t *      scope: 'openid profile email'\n\t *    },\n\t *    register: {\n\t *      client_name: 'Example',\n\t *      client_uri: 'https://example.com',\n\t *      logo_uri: 'https://example.com/assets/logo.png',\n\t *      redirect_uris: ['https://app.example.com/callback'],\n\t *      response_types: ['code', 'code id_token token'],\n\t *      grant_types: ['authorization_code'],\n\t *      default_max_age: 7200,\n\t *      post_logout_redirect_uris: ['https://app.example.com']\n\t *    },\n\t *    registration: {\n\t *      // if you have it saved somewhere\n\t *    },\n\t *    store: localStorage || req.session,\n\t *    popup: { width: 400, height: 300 }\n\t *  })\n\t *\n\t *  client.discover() => Promise\n\t *  client.jwks() => Promise\n\t *  client.authenticate()\n\t *  client.authenticateUri()\n\t *  client.validateResponse(uri) => Promise\n\t *  client.userinfo() => Promise\n\t *  client.logout()\n\t */\n\t\n\tvar RelyingParty = function (_JSONDocument) {\n\t  _inherits(RelyingParty, _JSONDocument);\n\t\n\t  function RelyingParty() {\n\t    _classCallCheck(this, RelyingParty);\n\t\n\t    return _possibleConstructorReturn(this, (RelyingParty.__proto__ || Object.getPrototypeOf(RelyingParty)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(RelyingParty, [{\n\t    key: 'discover',\n\t\n\t\n\t    /**\n\t     * Discover\n\t     *\n\t     * @description Fetches the issuer's OpenID Configuration.\n\t     * @returns {Promise<Object>} Resolves with the provider configuration response\n\t     */\n\t    value: function discover() {\n\t      var _this2 = this;\n\t\n\t      try {\n\t        var issuer = this.provider.url;\n\t        var endpoint = '.well-known/openid-configuration';\n\t\n\t        assert(issuer, 'RelyingParty provider must define \"url\"');\n\t\n\t        return fetch(issuer + '/' + endpoint)\n\t        //.then(status(200))\n\t        .then(function (response) {\n\t          return response.json().then(function (json) {\n\t            return _this2.provider.configuration = json;\n\t          });\n\t        });\n\t      } catch (error) {\n\t        return Promise.reject(error);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Register\n\t     *\n\t     * @description Register's a client with provider as a Relying Party\n\t     *\n\t     * @param options {Object}\n\t     * @returns {Promise<Object>} Resolves with the registration response object\n\t     */\n\t\n\t  }, {\n\t    key: 'register',\n\t    value: function register(options) {\n\t      var _this3 = this;\n\t\n\t      try {\n\t        var configuration = this.provider.configuration;\n\t\n\t        assert(configuration, 'OpenID Configuration is not initialized.');\n\t        assert(configuration.registration_endpoint, 'OpenID Configuration is missing registration_endpoint.');\n\t\n\t        var uri = configuration.registration_endpoint;\n\t        var method = 'post';\n\t        var headers = new Headers({ 'Content-Type': 'application/json' });\n\t        var params = this.defaults.register;\n\t        var body = JSON.stringify(Object.assign({}, params, options));\n\t\n\t        return fetch(uri, { method: method, headers: headers, body: body })\n\t        //.then(status)\n\t        .then(function (response) {\n\t          return response.json().then(function (json) {\n\t            return _this3.registration = json;\n\t          });\n\t        });\n\t      } catch (error) {\n\t        return Promise.reject(error);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'serialize',\n\t    value: function serialize() {\n\t      return JSON.stringify(this);\n\t    }\n\t\n\t    /**\n\t     * jwks\n\t     *\n\t     * @description Promises the issuer's JWK Set.\n\t     * @returns {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'jwks',\n\t    value: function jwks() {\n\t      var _this4 = this;\n\t\n\t      try {\n\t        var configuration = this.provider.configuration;\n\t\n\t        assert(configuration, 'OpenID Configuration is not initialized.');\n\t        assert(configuration.jwks_uri, 'OpenID Configuration is missing jwks_uri.');\n\t\n\t        var uri = configuration.jwks_uri;\n\t\n\t        return fetch(uri)\n\t        //.then(status(200))\n\t        .then(function (response) {\n\t          return response.json().then(function (json) {\n\t            return JWKSet.importKeys(json);\n\t          }).then(function (jwks) {\n\t            return _this4.provider.jwks = jwks;\n\t          });\n\t        });\n\t      } catch (error) {\n\t        return Promise.reject(error);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * createRequest\n\t     *\n\t     * @param options {Object} Authn request options hashmap\n\t     * @param options.redirect_uri {string}\n\t     * @param options.response_type {string} e.g. 'code' or 'id_token token'\n\t     * @param session {Session|Storage} req.session or localStorage\n\t     * @returns {Promise<string>} Authn request URL\n\t     */\n\t\n\t  }, {\n\t    key: 'createRequest',\n\t    value: function createRequest(options, session) {\n\t      return AuthenticationRequest.create(this, options, session || this.store);\n\t    }\n\t\n\t    /**\n\t     * Validate Response\n\t     *\n\t     * @param response {string} req.query or req.body.text\n\t     * @param session {Session|Storage} req.session or localStorage or similar\n\t     * @returns {Promise<Object>} Custom response object, with `params` and\n\t     *   `mode` properties\n\t     */\n\t\n\t  }, {\n\t    key: 'validateResponse',\n\t    value: function validateResponse(response, session) {\n\t      session = session || this.store;\n\t\n\t      if (response.match(/^http(s?):\\/\\//)) {\n\t        response = { rp: this, redirect: response, session: session };\n\t      } else {\n\t        response = { rp: this, body: response, session: session };\n\t      }\n\t\n\t      return AuthenticationResponse.validateResponse(response);\n\t    }\n\t\n\t    /**\n\t     * userinfo\n\t     *\n\t     * @description Promises the authenticated user's claims.\n\t     * @returns {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'userinfo',\n\t    value: function userinfo() {\n\t      try {\n\t        var configuration = this.provider.configuration;\n\t\n\t        assert(configuration, 'OpenID Configuration is not initialized.');\n\t        assert(configuration.registration_endpoint, 'OpenID Configuration is missing registration_endpoint.');\n\t\n\t        var uri = configuration.userinfo_endpoint;\n\t        var access_token = this.session.access_token;\n\t\n\t        assert(access_token, 'Missing access token.');\n\t\n\t        var headers = new Headers({\n\t          'Content-Type': 'application/json',\n\t          'Authorization': 'Bearer ' + access_token\n\t        });\n\t\n\t        return fetch(uri, { headers: headers }).then(status(200)).then(function (response) {\n\t          return response.json();\n\t        });\n\t      } catch (error) {\n\t        return Promise.reject(error);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Logout\n\t     *\n\t     * @returns {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'logout',\n\t    value: function logout() {\n\t      var configuration = void 0;\n\t      try {\n\t        configuration = this.provider.configuration;\n\t        assert(configuration, 'OpenID Configuration is not initialized.');\n\t        assert(configuration.end_session_endpoint, 'OpenID Configuration is missing end_session_endpoint.');\n\t      } catch (error) {\n\t        return Promise.reject(error);\n\t      }\n\t\n\t      var uri = configuration.end_session_endpoint;\n\t      var method = 'get';\n\t\n\t      return fetch(uri, { method: method });\n\t\n\t      // TODO: Validate `frontchannel_logout_uri` if necessary\n\t      /**\n\t       * frontchannel_logout_uri - OPTIONAL. RP URL that will cause the RP to log\n\t       * itself out when rendered in an iframe by the OP.\n\t       *\n\t       * An `iss` (issuer) query parameter and a `sid`\n\t       * (session ID) query parameter MAY be included by the OP to enable the RP\n\t       * to validate the request and to determine which of the potentially\n\t       * multiple sessions is to be logged out. If a sid (session ID) query\n\t       * parameter is included, an iss (issuer) query parameter MUST also be\n\t       * included.\n\t       * @see https://openid.net/specs/openid-connect-frontchannel-1_0.html#RPLogout\n\t       */\n\t    }\n\t  }], [{\n\t    key: 'from',\n\t\n\t\n\t    /**\n\t     * from\n\t     *\n\t     * @description\n\t     * Create a RelyingParty instance from a previously registered client.\n\t     *\n\t     * @param {Object} data\n\t     * @returns {Promise<RelyingParty>}\n\t     */\n\t    value: function from(data) {\n\t      var rp = new RelyingParty(data);\n\t      var validation = rp.validate();\n\t\n\t      // schema validation\n\t      if (!validation.valid) {\n\t        return Promise.reject(validation);\n\t      }\n\t\n\t      var jwks = rp.provider.jwks;\n\t\n\t      // request the JWK Set if missing\n\t      if (!jwks) {\n\t        return rp.jwks().then(function () {\n\t          return rp;\n\t        });\n\t      }\n\t\n\t      // otherwise import the JWK Set to webcrypto\n\t      return JWKSet.importKeys(jwks).then(function (jwks) {\n\t        rp.provider.jwks = jwks;\n\t        return rp;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * register\n\t     *\n\t     * @param issuer {string} Provider URL\n\t     * @param registration {Object} Client dynamic registration options\n\t     * @param options {Object}\n\t     * @param options.defaults\n\t     * @param [options.store] {Session|Storage}\n\t     * @returns {Promise<RelyingParty>} RelyingParty instance, registered.\n\t     */\n\t\n\t  }, {\n\t    key: 'register',\n\t    value: function register(issuer, registration, options) {\n\t      var rp = new RelyingParty({\n\t        provider: { url: issuer },\n\t        defaults: Object.assign({}, options.defaults),\n\t        store: options.store\n\t      });\n\t\n\t      return Promise.resolve().then(function () {\n\t        return rp.discover();\n\t      }).catch(function (err) {\n\t        console.error('Error in RP register() > discover() step:', err);\n\t        throw err;\n\t      }).then(function () {\n\t        return rp.jwks();\n\t      }).catch(function (err) {\n\t        console.error('Error in RP register() > jwks() step:', err);\n\t        throw err;\n\t      }).then(function () {\n\t        return rp.register(registration);\n\t      }).catch(function (err) {\n\t        console.error('Error in RP register() > register() step:', err);\n\t        throw err;\n\t      }).then(function () {\n\t        return rp;\n\t      });\n\t    }\n\t  }, {\n\t    key: 'schema',\n\t\n\t\n\t    /**\n\t     * Schema\n\t     */\n\t    get: function get() {\n\t      return RelyingPartySchema;\n\t    }\n\t  }]);\n\t\n\t  return RelyingParty;\n\t}(JSONDocument);\n\t\n\tmodule.exports = RelyingParty;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 92 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\t// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n\t// original notice:\n\t\n\t/*!\n\t * The buffer module from node.js, for the browser.\n\t *\n\t * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n\t * @license  MIT\n\t */\n\tfunction compare(a, b) {\n\t  if (a === b) {\n\t    return 0;\n\t  }\n\t\n\t  var x = a.length;\n\t  var y = b.length;\n\t\n\t  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n\t    if (a[i] !== b[i]) {\n\t      x = a[i];\n\t      y = b[i];\n\t      break;\n\t    }\n\t  }\n\t\n\t  if (x < y) {\n\t    return -1;\n\t  }\n\t  if (y < x) {\n\t    return 1;\n\t  }\n\t  return 0;\n\t}\n\tfunction isBuffer(b) {\n\t  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {\n\t    return global.Buffer.isBuffer(b);\n\t  }\n\t  return !!(b != null && b._isBuffer);\n\t}\n\t\n\t// based on node assert, original notice:\n\t\n\t// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n\t//\n\t// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n\t//\n\t// Originally from narwhal.js (http://narwhaljs.org)\n\t// Copyright (c) 2009 Thomas Robinson <280north.com>\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a copy\n\t// of this software and associated documentation files (the 'Software'), to\n\t// deal in the Software without restriction, including without limitation the\n\t// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n\t// sell copies of the Software, and to permit persons to whom the Software is\n\t// furnished to do so, subject to the following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included in\n\t// all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n\t// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n\t// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tvar util = __webpack_require__(65);\n\tvar hasOwn = Object.prototype.hasOwnProperty;\n\tvar pSlice = Array.prototype.slice;\n\tvar functionsHaveNames = (function () {\n\t  return function foo() {}.name === 'foo';\n\t}());\n\tfunction pToString (obj) {\n\t  return Object.prototype.toString.call(obj);\n\t}\n\tfunction isView(arrbuf) {\n\t  if (isBuffer(arrbuf)) {\n\t    return false;\n\t  }\n\t  if (typeof global.ArrayBuffer !== 'function') {\n\t    return false;\n\t  }\n\t  if (typeof ArrayBuffer.isView === 'function') {\n\t    return ArrayBuffer.isView(arrbuf);\n\t  }\n\t  if (!arrbuf) {\n\t    return false;\n\t  }\n\t  if (arrbuf instanceof DataView) {\n\t    return true;\n\t  }\n\t  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n\t    return true;\n\t  }\n\t  return false;\n\t}\n\t// 1. The assert module provides functions that throw\n\t// AssertionError's when particular conditions are not met. The\n\t// assert module must conform to the following interface.\n\t\n\tvar assert = module.exports = ok;\n\t\n\t// 2. The AssertionError is defined in assert.\n\t// new assert.AssertionError({ message: message,\n\t//                             actual: actual,\n\t//                             expected: expected })\n\t\n\tvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n\t// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\n\tfunction getName(func) {\n\t  if (!util.isFunction(func)) {\n\t    return;\n\t  }\n\t  if (functionsHaveNames) {\n\t    return func.name;\n\t  }\n\t  var str = func.toString();\n\t  var match = str.match(regex);\n\t  return match && match[1];\n\t}\n\tassert.AssertionError = function AssertionError(options) {\n\t  this.name = 'AssertionError';\n\t  this.actual = options.actual;\n\t  this.expected = options.expected;\n\t  this.operator = options.operator;\n\t  if (options.message) {\n\t    this.message = options.message;\n\t    this.generatedMessage = false;\n\t  } else {\n\t    this.message = getMessage(this);\n\t    this.generatedMessage = true;\n\t  }\n\t  var stackStartFunction = options.stackStartFunction || fail;\n\t  if (Error.captureStackTrace) {\n\t    Error.captureStackTrace(this, stackStartFunction);\n\t  } else {\n\t    // non v8 browsers so we can have a stacktrace\n\t    var err = new Error();\n\t    if (err.stack) {\n\t      var out = err.stack;\n\t\n\t      // try to strip useless frames\n\t      var fn_name = getName(stackStartFunction);\n\t      var idx = out.indexOf('\\n' + fn_name);\n\t      if (idx >= 0) {\n\t        // once we have located the function frame\n\t        // we need to strip out everything before it (and its line)\n\t        var next_line = out.indexOf('\\n', idx + 1);\n\t        out = out.substring(next_line + 1);\n\t      }\n\t\n\t      this.stack = out;\n\t    }\n\t  }\n\t};\n\t\n\t// assert.AssertionError instanceof Error\n\tutil.inherits(assert.AssertionError, Error);\n\t\n\tfunction truncate(s, n) {\n\t  if (typeof s === 'string') {\n\t    return s.length < n ? s : s.slice(0, n);\n\t  } else {\n\t    return s;\n\t  }\n\t}\n\tfunction inspect(something) {\n\t  if (functionsHaveNames || !util.isFunction(something)) {\n\t    return util.inspect(something);\n\t  }\n\t  var rawname = getName(something);\n\t  var name = rawname ? ': ' + rawname : '';\n\t  return '[Function' +  name + ']';\n\t}\n\tfunction getMessage(self) {\n\t  return truncate(inspect(self.actual), 128) + ' ' +\n\t         self.operator + ' ' +\n\t         truncate(inspect(self.expected), 128);\n\t}\n\t\n\t// At present only the three keys mentioned above are used and\n\t// understood by the spec. Implementations or sub modules can pass\n\t// other keys to the AssertionError's constructor - they will be\n\t// ignored.\n\t\n\t// 3. All of the following functions must throw an AssertionError\n\t// when a corresponding condition is not met, with a message that\n\t// may be undefined if not provided.  All assertion methods provide\n\t// both the actual and expected values to the assertion error for\n\t// display purposes.\n\t\n\tfunction fail(actual, expected, message, operator, stackStartFunction) {\n\t  throw new assert.AssertionError({\n\t    message: message,\n\t    actual: actual,\n\t    expected: expected,\n\t    operator: operator,\n\t    stackStartFunction: stackStartFunction\n\t  });\n\t}\n\t\n\t// EXTENSION! allows for well behaved errors defined elsewhere.\n\tassert.fail = fail;\n\t\n\t// 4. Pure assertion tests whether a value is truthy, as determined\n\t// by !!guard.\n\t// assert.ok(guard, message_opt);\n\t// This statement is equivalent to assert.equal(true, !!guard,\n\t// message_opt);. To test strictly for the value true, use\n\t// assert.strictEqual(true, guard, message_opt);.\n\t\n\tfunction ok(value, message) {\n\t  if (!value) fail(value, true, message, '==', assert.ok);\n\t}\n\tassert.ok = ok;\n\t\n\t// 5. The equality assertion tests shallow, coercive equality with\n\t// ==.\n\t// assert.equal(actual, expected, message_opt);\n\t\n\tassert.equal = function equal(actual, expected, message) {\n\t  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n\t};\n\t\n\t// 6. The non-equality assertion tests for whether two objects are not equal\n\t// with != assert.notEqual(actual, expected, message_opt);\n\t\n\tassert.notEqual = function notEqual(actual, expected, message) {\n\t  if (actual == expected) {\n\t    fail(actual, expected, message, '!=', assert.notEqual);\n\t  }\n\t};\n\t\n\t// 7. The equivalence assertion tests a deep equality relation.\n\t// assert.deepEqual(actual, expected, message_opt);\n\t\n\tassert.deepEqual = function deepEqual(actual, expected, message) {\n\t  if (!_deepEqual(actual, expected, false)) {\n\t    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n\t  }\n\t};\n\t\n\tassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n\t  if (!_deepEqual(actual, expected, true)) {\n\t    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);\n\t  }\n\t};\n\t\n\tfunction _deepEqual(actual, expected, strict, memos) {\n\t  // 7.1. All identical values are equivalent, as determined by ===.\n\t  if (actual === expected) {\n\t    return true;\n\t  } else if (isBuffer(actual) && isBuffer(expected)) {\n\t    return compare(actual, expected) === 0;\n\t\n\t  // 7.2. If the expected value is a Date object, the actual value is\n\t  // equivalent if it is also a Date object that refers to the same time.\n\t  } else if (util.isDate(actual) && util.isDate(expected)) {\n\t    return actual.getTime() === expected.getTime();\n\t\n\t  // 7.3 If the expected value is a RegExp object, the actual value is\n\t  // equivalent if it is also a RegExp object with the same source and\n\t  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n\t  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n\t    return actual.source === expected.source &&\n\t           actual.global === expected.global &&\n\t           actual.multiline === expected.multiline &&\n\t           actual.lastIndex === expected.lastIndex &&\n\t           actual.ignoreCase === expected.ignoreCase;\n\t\n\t  // 7.4. Other pairs that do not both pass typeof value == 'object',\n\t  // equivalence is determined by ==.\n\t  } else if ((actual === null || typeof actual !== 'object') &&\n\t             (expected === null || typeof expected !== 'object')) {\n\t    return strict ? actual === expected : actual == expected;\n\t\n\t  // If both values are instances of typed arrays, wrap their underlying\n\t  // ArrayBuffers in a Buffer each to increase performance\n\t  // This optimization requires the arrays to have the same type as checked by\n\t  // Object.prototype.toString (aka pToString). Never perform binary\n\t  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n\t  // bit patterns are not identical.\n\t  } else if (isView(actual) && isView(expected) &&\n\t             pToString(actual) === pToString(expected) &&\n\t             !(actual instanceof Float32Array ||\n\t               actual instanceof Float64Array)) {\n\t    return compare(new Uint8Array(actual.buffer),\n\t                   new Uint8Array(expected.buffer)) === 0;\n\t\n\t  // 7.5 For all other Object pairs, including Array objects, equivalence is\n\t  // determined by having the same number of owned properties (as verified\n\t  // with Object.prototype.hasOwnProperty.call), the same set of keys\n\t  // (although not necessarily the same order), equivalent values for every\n\t  // corresponding key, and an identical 'prototype' property. Note: this\n\t  // accounts for both named and indexed properties on Arrays.\n\t  } else if (isBuffer(actual) !== isBuffer(expected)) {\n\t    return false;\n\t  } else {\n\t    memos = memos || {actual: [], expected: []};\n\t\n\t    var actualIndex = memos.actual.indexOf(actual);\n\t    if (actualIndex !== -1) {\n\t      if (actualIndex === memos.expected.indexOf(expected)) {\n\t        return true;\n\t      }\n\t    }\n\t\n\t    memos.actual.push(actual);\n\t    memos.expected.push(expected);\n\t\n\t    return objEquiv(actual, expected, strict, memos);\n\t  }\n\t}\n\t\n\tfunction isArguments(object) {\n\t  return Object.prototype.toString.call(object) == '[object Arguments]';\n\t}\n\t\n\tfunction objEquiv(a, b, strict, actualVisitedObjects) {\n\t  if (a === null || a === undefined || b === null || b === undefined)\n\t    return false;\n\t  // if one is a primitive, the other must be same\n\t  if (util.isPrimitive(a) || util.isPrimitive(b))\n\t    return a === b;\n\t  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n\t    return false;\n\t  var aIsArgs = isArguments(a);\n\t  var bIsArgs = isArguments(b);\n\t  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n\t    return false;\n\t  if (aIsArgs) {\n\t    a = pSlice.call(a);\n\t    b = pSlice.call(b);\n\t    return _deepEqual(a, b, strict);\n\t  }\n\t  var ka = objectKeys(a);\n\t  var kb = objectKeys(b);\n\t  var key, i;\n\t  // having the same number of owned properties (keys incorporates\n\t  // hasOwnProperty)\n\t  if (ka.length !== kb.length)\n\t    return false;\n\t  //the same set of keys (although not necessarily the same order),\n\t  ka.sort();\n\t  kb.sort();\n\t  //~~~cheap key test\n\t  for (i = ka.length - 1; i >= 0; i--) {\n\t    if (ka[i] !== kb[i])\n\t      return false;\n\t  }\n\t  //equivalent values for every corresponding key, and\n\t  //~~~possibly expensive deep test\n\t  for (i = ka.length - 1; i >= 0; i--) {\n\t    key = ka[i];\n\t    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n\t      return false;\n\t  }\n\t  return true;\n\t}\n\t\n\t// 8. The non-equivalence assertion tests for any deep inequality.\n\t// assert.notDeepEqual(actual, expected, message_opt);\n\t\n\tassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n\t  if (_deepEqual(actual, expected, false)) {\n\t    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n\t  }\n\t};\n\t\n\tassert.notDeepStrictEqual = notDeepStrictEqual;\n\tfunction notDeepStrictEqual(actual, expected, message) {\n\t  if (_deepEqual(actual, expected, true)) {\n\t    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n\t  }\n\t}\n\t\n\t\n\t// 9. The strict equality assertion tests strict equality, as determined by ===.\n\t// assert.strictEqual(actual, expected, message_opt);\n\t\n\tassert.strictEqual = function strictEqual(actual, expected, message) {\n\t  if (actual !== expected) {\n\t    fail(actual, expected, message, '===', assert.strictEqual);\n\t  }\n\t};\n\t\n\t// 10. The strict non-equality assertion tests for strict inequality, as\n\t// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\t\n\tassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n\t  if (actual === expected) {\n\t    fail(actual, expected, message, '!==', assert.notStrictEqual);\n\t  }\n\t};\n\t\n\tfunction expectedException(actual, expected) {\n\t  if (!actual || !expected) {\n\t    return false;\n\t  }\n\t\n\t  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n\t    return expected.test(actual);\n\t  }\n\t\n\t  try {\n\t    if (actual instanceof expected) {\n\t      return true;\n\t    }\n\t  } catch (e) {\n\t    // Ignore.  The instanceof check doesn't work for arrow functions.\n\t  }\n\t\n\t  if (Error.isPrototypeOf(expected)) {\n\t    return false;\n\t  }\n\t\n\t  return expected.call({}, actual) === true;\n\t}\n\t\n\tfunction _tryBlock(block) {\n\t  var error;\n\t  try {\n\t    block();\n\t  } catch (e) {\n\t    error = e;\n\t  }\n\t  return error;\n\t}\n\t\n\tfunction _throws(shouldThrow, block, expected, message) {\n\t  var actual;\n\t\n\t  if (typeof block !== 'function') {\n\t    throw new TypeError('\"block\" argument must be a function');\n\t  }\n\t\n\t  if (typeof expected === 'string') {\n\t    message = expected;\n\t    expected = null;\n\t  }\n\t\n\t  actual = _tryBlock(block);\n\t\n\t  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n\t            (message ? ' ' + message : '.');\n\t\n\t  if (shouldThrow && !actual) {\n\t    fail(actual, expected, 'Missing expected exception' + message);\n\t  }\n\t\n\t  var userProvidedMessage = typeof message === 'string';\n\t  var isUnwantedException = !shouldThrow && util.isError(actual);\n\t  var isUnexpectedException = !shouldThrow && actual && !expected;\n\t\n\t  if ((isUnwantedException &&\n\t      userProvidedMessage &&\n\t      expectedException(actual, expected)) ||\n\t      isUnexpectedException) {\n\t    fail(actual, expected, 'Got unwanted exception' + message);\n\t  }\n\t\n\t  if ((shouldThrow && actual && expected &&\n\t      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n\t    throw actual;\n\t  }\n\t}\n\t\n\t// 11. Expected to throw an error:\n\t// assert.throws(block, Error_opt, message_opt);\n\t\n\tassert.throws = function(block, /*optional*/error, /*optional*/message) {\n\t  _throws(true, block, error, message);\n\t};\n\t\n\t// EXTENSION! This is annoying to write outside this module.\n\tassert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {\n\t  _throws(false, block, error, message);\n\t};\n\t\n\tassert.ifError = function(err) { if (err) throw err; };\n\t\n\tvar objectKeys = Object.keys || function (obj) {\n\t  var keys = [];\n\t  for (var key in obj) {\n\t    if (hasOwn.call(obj, key)) keys.push(key);\n\t  }\n\t  return keys;\n\t};\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 93 */\n/***/ function(module, exports) {\n\n\tmodule.exports = fetch;\n\n/***/ },\n/* 94 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tmodule.exports = {\n\t  Formats: __webpack_require__(95),\n\t  Initializer: __webpack_require__(96),\n\t  JSONDocument: __webpack_require__(97),\n\t  JSONMapping: __webpack_require__(100),\n\t  JSONPatch: __webpack_require__(98),\n\t  JSONPointer: __webpack_require__(99),\n\t  JSONSchema: __webpack_require__(101),\n\t  Validator: __webpack_require__(102)\n\t};\n\n/***/ },\n/* 95 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t/**\n\t * JSON Schema Formats\n\t *\n\t * TODO\n\t * Is there a good way to express these over multiple lines with comments\n\t * for easier debugging and auditing?\n\t */\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar DATETIME_REGEXP = /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d[t\\s][0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?(?:z|[+-]\\d\\d:\\d\\d)$/i;\n\tvar URI_REGEXP = /^(?:[a-z][a-z0-9+-.]*)?(?:\\:|\\/)\\/?[^\\s]*$/i;\n\tvar EMAIL_REGEXP = /^[a-z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?)*$/i;\n\tvar IPV4_REGEXP = /^(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)$/;\n\tvar IPV6_REGEXP = /^\\s*(?:(?:(?:[0-9a-f]{1,4}:){7}(?:[0-9a-f]{1,4}|:))|(?:(?:[0-9a-f]{1,4}:){6}(?::[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){5}(?:(?:(?::[0-9a-f]{1,4}){1,2})|:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){4}(?:(?:(?::[0-9a-f]{1,4}){1,3})|(?:(?::[0-9a-f]{1,4})?:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){3}(?:(?:(?::[0-9a-f]{1,4}){1,4})|(?:(?::[0-9a-f]{1,4}){0,2}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){2}(?:(?:(?::[0-9a-f]{1,4}){1,5})|(?:(?::[0-9a-f]{1,4}){0,3}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){1}(?:(?:(?::[0-9a-f]{1,4}){1,6})|(?:(?::[0-9a-f]{1,4}){0,4}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?::(?:(?:(?::[0-9a-f]{1,4}){1,7})|(?:(?::[0-9a-f]{1,4}){0,5}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(?:%.+)?\\s*$/i;\n\tvar HOSTNAME_REGEXP = /^[a-z](?:(?:[-0-9a-z]{0,61})?[0-9a-z])?(\\.[a-z](?:(?:[-0-9a-z]{0,61})?[0-9a-z])?)*$/i;\n\t\n\t/**\n\t * Formats\n\t */\n\t\n\tvar Formats = function () {\n\t  function Formats() {\n\t    _classCallCheck(this, Formats);\n\t  }\n\t\n\t  _createClass(Formats, [{\n\t    key: 'register',\n\t\n\t\n\t    /**\n\t     * Register\n\t     *\n\t     * @description\n\t     * Register a new mapping from named format to RegExp instance\n\t     *\n\t     * TODO\n\t     * We can do some extra validation of the RegExp to\n\t     * ensure it's the acceptable subset of RegExps allowed\n\t     * by JSON Schema.\n\t     *\n\t     * @param {string} name\n\t     * @param {RegExp} pattern\n\t     * @returns {RegExp}\n\t     */\n\t    value: function register(name, pattern) {\n\t      // verify name is a string\n\t      if (typeof name !== 'string') {\n\t        throw new Error('Format name must be a string');\n\t      }\n\t\n\t      // cast a string to RegExp\n\t      if (typeof pattern === 'string') {\n\t        pattern = new RegExp(pattern);\n\t      }\n\t\n\t      return this[name] = pattern;\n\t    }\n\t\n\t    /**\n\t     * Resolve\n\t     *\n\t     * @description\n\t     * Given a format name, return the corresponding registered validation. In the\n\t     * event a format is not registered, throw an error.\n\t     *\n\t     * @param {string} name\n\t     * @returns {RegExp}\n\t     */\n\t\n\t  }, {\n\t    key: 'resolve',\n\t    value: function resolve(name) {\n\t      var format = this[name];\n\t\n\t      if (!format) {\n\t        throw new Error('Unknown JSON Schema format.');\n\t      }\n\t\n\t      return format;\n\t    }\n\t\n\t    /**\n\t     * Test\n\t     *\n\t     * @description\n\t     * Test that a value conforms to a format.\n\t     *\n\t     * @param {string} name\n\t     * @param {string} value\n\t     * @returns {Boolean}\n\t     */\n\t\n\t  }, {\n\t    key: 'test',\n\t    value: function test(name, value) {\n\t      var format = this.resolve(name);\n\t      return format.test(value);\n\t    }\n\t  }], [{\n\t    key: 'initialize',\n\t\n\t\n\t    /**\n\t     * Initialize\n\t     *\n\t     * @description\n\t     * Create a new Formats instance and register default formats\n\t     *\n\t     * @returns {Formats}\n\t     */\n\t    value: function initialize() {\n\t      var formats = new Formats();\n\t      formats.register('date-time', DATETIME_REGEXP);\n\t      formats.register('uri', URI_REGEXP);\n\t      formats.register('email', EMAIL_REGEXP);\n\t      formats.register('ipv4', IPV4_REGEXP);\n\t      formats.register('ipv6', IPV6_REGEXP);\n\t      formats.register('hostname', HOSTNAME_REGEXP);\n\t      return formats;\n\t    }\n\t  }]);\n\t\n\t  return Formats;\n\t}();\n\t\n\t/**\n\t * Export\n\t */\n\t\n\t\n\tmodule.exports = Formats.initialize();\n\n/***/ },\n/* 96 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t/**\n\t * Initializer\n\t */\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Initializer = function () {\n\t  _createClass(Initializer, null, [{\n\t    key: 'compile',\n\t\n\t\n\t    /**\n\t     * Compile (static)\n\t     */\n\t    value: function compile(schema) {\n\t      var initializer = new Initializer(schema);\n\t      initializer.parse();\n\t      return initializer.compile();\n\t    }\n\t\n\t    /**\n\t     * Constructor\n\t     */\n\t\n\t  }]);\n\t\n\t  function Initializer(schema) {\n\t    _classCallCheck(this, Initializer);\n\t\n\t    this.schema = schema;\n\t  }\n\t\n\t  /**\n\t   * Parse\n\t   */\n\t\n\t\n\t  _createClass(Initializer, [{\n\t    key: 'parse',\n\t    value: function parse() {\n\t      var schema = this.schema;\n\t      var operations = this.operations = new Map();\n\t\n\t      function parser(schema, chain) {\n\t        var properties = schema.properties || {};\n\t\n\t        Object.keys(properties).forEach(function (key) {\n\t          var refchain = chain.concat([key]);\n\t          var descriptor = properties[key];\n\t\n\t          // operation\n\t          var operation = {\n\t            key: key,\n\t            fn: 'property',\n\t            ref: refchain.join('.'),\n\t            chain: refchain\n\t          };\n\t\n\t          // TODO:\n\t          // The repetitious nature of these conditionals is becoming absurd.\n\t          // Consider using Object.assign(operation, descriptor)\n\t          if (descriptor.private) {\n\t            operation.private = true;\n\t          }\n\t\n\t          if (descriptor.default) {\n\t            operation.default = descriptor.default;\n\t          }\n\t\n\t          if (descriptor.immutable) {\n\t            operation.immutable = true;\n\t          }\n\t\n\t          if (descriptor.set) {\n\t            operation.setter = descriptor.set;\n\t          }\n\t\n\t          if (descriptor.after) {\n\t            operation.after = descriptor.after;\n\t          }\n\t\n\t          // this descriptor is for a property\n\t          if (!descriptor.properties) {\n\t\n\t            // assignment\n\t            operations.set(refchain, operation);\n\t\n\t            // this is a nested schema\n\t          } else {\n\t            if (!operations.get(refchain)) {\n\t              operation.fn = 'ensureContainer';\n\t              operations.set(refchain, operation);\n\t            }\n\t\n\t            // recurse\n\t            parser(descriptor, refchain);\n\t          }\n\t        });\n\t      }\n\t\n\t      parser(schema, []);\n\t    }\n\t\n\t    /**\n\t     * Compile\n\t     */\n\t\n\t  }, {\n\t    key: 'compile',\n\t    value: function compile() {\n\t      var _this = this;\n\t\n\t      var block = 'options = options || {}\\n';\n\t\n\t      this.operations.forEach(function (operation) {\n\t        block += _this[operation.fn](operation);\n\t      });\n\t\n\t      return new Function('target', 'source', 'options', block);\n\t    }\n\t\n\t    /**\n\t     * Grammar\n\t     */\n\t\n\t    /**\n\t     * Property\n\t     */\n\t\n\t  }, {\n\t    key: 'property',\n\t    value: function property(operation) {\n\t      if (operation.private) {\n\t        return this.private(operation);\n\t      } else {\n\t        return this.assign(operation);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Private\n\t     */\n\t\n\t  }, {\n\t    key: 'private',\n\t    value: function _private(operation) {\n\t      return '\\n    if (options.private) {\\n      ' + this.assign(operation) + '\\n    }\\n    ';\n\t    }\n\t\n\t    /**\n\t     * Assign\n\t     */\n\t\n\t  }, {\n\t    key: 'assign',\n\t    value: function assign(operation) {\n\t      var assignment = void 0;\n\t\n\t      if (operation.setter) {\n\t        assignment = this.setterAssign(operation);\n\t      } else if (operation.immutable) {\n\t        assignment = this.immutableAssign(operation);\n\t      } else {\n\t        assignment = this.simpleAssign(operation);\n\t      }\n\t\n\t      assignment = '\\n    if (' + this.condition(operation) + ') {\\n      ' + assignment + '\\n    } ' + (operation.default ? this.defaults(operation) : '') + '\\n    ';\n\t\n\t      if (operation.after) {\n\t        assignment += this.afterAssign(operation);\n\t      }\n\t\n\t      return assignment;\n\t    }\n\t\n\t    /**\n\t     * Immutable assign\n\t     */\n\t\n\t  }, {\n\t    key: 'immutableAssign',\n\t    value: function immutableAssign(operation) {\n\t      var target = 'target';\n\t      var ref = operation.chain.slice(0, operation.chain.length - 1).join('.');\n\t\n\t      // add reference to nested property container\n\t      if (ref) {\n\t        target = target + '.' + ref;\n\t      }\n\t\n\t      return 'Object.defineProperty(' + target + ', \\'' + operation.key + '\\', {\\n        value: source.' + operation.ref + ',\\n        writable: ' + !operation.immutable + ',\\n        enumerable: true\\n      })';\n\t    }\n\t\n\t    /**\n\t     * Simple assign\n\t     */\n\t\n\t  }, {\n\t    key: 'simpleAssign',\n\t    value: function simpleAssign(operation) {\n\t      return 'target.' + operation.ref + ' = source.' + operation.ref;\n\t    }\n\t\n\t    /**\n\t     * Setter assign\n\t     */\n\t\n\t  }, {\n\t    key: 'setterAssign',\n\t    value: function setterAssign(operation) {\n\t      return 'target.' + operation.ref + ' = (' + operation.setter.toString() + ')(source)';\n\t    }\n\t\n\t    /**\n\t     * After assign\n\t     * TODO:\n\t     * These invocations should take place at the end of the\n\t     * generated function\n\t     */\n\t\n\t  }, {\n\t    key: 'afterAssign',\n\t    value: function afterAssign(operation) {\n\t      return '\\n    (' + operation.after.toString() + ').call(target, source)\\n    ';\n\t    }\n\t\n\t    /**\n\t     * Defaults\n\t     */\n\t\n\t  }, {\n\t    key: 'defaults',\n\t    value: function defaults(operation) {\n\t      // TODO:\n\t      // It's not optimal to inline the function definition\n\t      // because the function gets created each time the\n\t      // initializer function is run. Rather, we need to be\n\t      // able to reference functions by symbols/methods available to\n\t      // the definition scope.\n\t      if (typeof operation.default === 'function') {\n\t        operation.defaultString = '(' + operation.default.toString() + ')()';\n\t      } else {\n\t        operation.defaultString = JSON.stringify(operation.default);\n\t      }\n\t\n\t      return 'else if (options.defaults !== false) {\\n      ' + (operation.immutable ? this.immutableDefault(operation) : this.simpleDefault(operation)) + '\\n    }';\n\t    }\n\t\n\t    /**\n\t     * Simple default\n\t     */\n\t\n\t  }, {\n\t    key: 'simpleDefault',\n\t    value: function simpleDefault(operation) {\n\t      return 'target.' + operation.ref + ' = ' + operation.defaultString;\n\t    }\n\t\n\t    /**\n\t     * Immutable default\n\t     */\n\t\n\t  }, {\n\t    key: 'immutableDefault',\n\t    value: function immutableDefault(operation) {\n\t      var target = 'target';\n\t      var ref = operation.chain.slice(0, operation.chain.length - 1).join('.');\n\t\n\t      // add reference to nested property container\n\t      if (ref) {\n\t        target = target + '.' + ref;\n\t      }\n\t\n\t      return 'Object.defineProperty(' + target + ', \\'' + operation.key + '\\', {\\n        value: ' + operation.defaultString + ',\\n        writable: ' + !operation.immutable + ',\\n        enumerable: true\\n      })';\n\t    }\n\t\n\t    /**\n\t     * Condition\n\t     */\n\t\n\t  }, {\n\t    key: 'condition',\n\t    value: function condition(operation) {\n\t      var chain = operation.chain;\n\t      var ref = operation.ref;\n\t\n\t      var guards = chain.reduce(function (result, key, index) {\n\t        if (index > 0) {\n\t          result.push('source.' + chain.slice(0, index).join('.'));\n\t        }\n\t        return result;\n\t      }, []).join(' && ');\n\t\n\t      var condition = guards ? guards + ' && source.' + ref + ' !== undefined' : 'source.' + ref + ' !== undefined';\n\t\n\t      return condition;\n\t    }\n\t\n\t    /**\n\t     * Ensure object reference exists\n\t     */\n\t\n\t  }, {\n\t    key: 'ensureContainer',\n\t    value: function ensureContainer(operation) {\n\t      // should this check the source object for\n\t      // presence of the reference or some default property\n\t      // before adding this property to the source?\n\t      return '\\n    if (!target.' + operation.ref + ') {\\n      target.' + operation.ref + ' = {}\\n    }\\n    ';\n\t    }\n\t  }]);\n\t\n\t  return Initializer;\n\t}();\n\t\n\t/**\n\t * Export\n\t */\n\t\n\t\n\tmodule.exports = Initializer;\n\n/***/ },\n/* 97 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\n\t * Module dependencies\n\t * @ignore\n\t */\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar JSONPatch = __webpack_require__(98);\n\t\n\t/**\n\t * JSONDocument\n\t *\n\t * @class\n\t * JSONDocument is a high level interface that binds together all other features of\n\t * this package and provides the principle method of data modeling.\n\t */\n\t\n\tvar JSONDocument = function () {\n\t  _createClass(JSONDocument, null, [{\n\t    key: 'schema',\n\t\n\t\n\t    /**\n\t     * Schema\n\t     */\n\t    get: function get() {\n\t      throw new Error('Schema must be defined by classes extending JSONDocument');\n\t    }\n\t\n\t    /**\n\t     * Constructor\n\t     *\n\t     * @param {Object} data\n\t     * @param {Object} options\n\t     */\n\t\n\t  }]);\n\t\n\t  function JSONDocument() {\n\t    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t    _classCallCheck(this, JSONDocument);\n\t\n\t    this.initialize(data, options);\n\t  }\n\t\n\t  /**\n\t   * Initialize\n\t   *\n\t   * @param {Object} data\n\t   * @param {Object} options\n\t   */\n\t\n\t\n\t  _createClass(JSONDocument, [{\n\t    key: 'initialize',\n\t    value: function initialize() {\n\t      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t      var schema = this.constructor.schema;\n\t\n\t      schema.initialize(this, data, options);\n\t    }\n\t\n\t    /**\n\t     * Validate\n\t     *\n\t     * @param {JSONSchema} alternate - OPTIONAL alternate schema\n\t     * @returns {Object}\n\t     */\n\t\n\t  }, {\n\t    key: 'validate',\n\t    value: function validate(alternate) {\n\t      var schema = this.constructor.schema;\n\t\n\t      return (alternate || schema).validate(this);\n\t    }\n\t\n\t    /**\n\t     * Patch\n\t     *\n\t     * @param {Array} ops\n\t     */\n\t\n\t  }, {\n\t    key: 'patch',\n\t    value: function patch(ops) {\n\t      var patch = new JSONPatch(ops);\n\t      patch.apply(this);\n\t    }\n\t\n\t    /**\n\t     * Select\n\t     */\n\t\n\t  }, {\n\t    key: 'select',\n\t    value: function select() {}\n\t\n\t    /**\n\t     * Project\n\t     *\n\t     * @description\n\t     * Given a mapping, return an object projected from the current instance.\n\t     *\n\t     * @example\n\t     * let schema = new JSONSchema({\n\t     *   properties: {\n\t     *     foo: { type: 'Array' }\n\t     *   }\n\t     * })\n\t     *\n\t     * let mapping = new JSONMapping({\n\t     *   '/foo/0': '/bar/baz'\n\t     * })\n\t     *\n\t     * class FooTracker extends JSONDocument {\n\t     *   static get schema () { return schema }\n\t     * }\n\t     *\n\t     * let instance = new FooTracker({ foo: ['qux'] })\n\t     * instance.project(mapping)\n\t     * // => { bar: { baz: 'qux' } }\n\t     *\n\t     * @param {JSONMapping} mapping\n\t     * @return {Object}\n\t     */\n\t\n\t  }, {\n\t    key: 'project',\n\t    value: function project(mapping) {\n\t      return mapping.project(this);\n\t    }\n\t\n\t    /**\n\t     * Serialize\n\t     *\n\t     * @param {Object} object\n\t     * @returns {string}\n\t     */\n\t\n\t  }], [{\n\t    key: 'serialize',\n\t    value: function serialize(object) {\n\t      return JSON.stringify(object);\n\t    }\n\t\n\t    /**\n\t     * Deserialize\n\t     *\n\t     * @param {string} data\n\t     * @return {*}\n\t     */\n\t\n\t  }, {\n\t    key: 'deserialize',\n\t    value: function deserialize(data) {\n\t      try {\n\t        return JSON.parse(data);\n\t      } catch (e) {\n\t        throw new Error('Failed to parse JSON');\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return JSONDocument;\n\t}();\n\t\n\t/**\n\t * Export\n\t */\n\t\n\t\n\tmodule.exports = JSONDocument;\n\n/***/ },\n/* 98 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\n\t * Module dependencies\n\t * @ignore\n\t */\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar JSONPointer = __webpack_require__(99);\n\t\n\t/**\n\t * Modes\n\t */\n\tvar THROW = 0;\n\tvar RECOVER = 1;\n\tvar SILENT = 2;\n\t\n\t/**\n\t * Operations list\n\t */\n\tvar OPERATIONS = ['add', 'remove', 'replace', 'move', 'copy', 'test'];\n\t\n\t/**\n\t * Patch\n\t *\n\t * @class\n\t * Implements RFC 6902: JavaScript Object Notation (JSON) Patch\n\t * https://tools.ietf.org/html/rfc6902\n\t */\n\t\n\tvar JSONPatch = function () {\n\t\n\t  /**\n\t   * Constructor\n\t   *\n\t   * @param {Array} ops\n\t   */\n\t  function JSONPatch(ops) {\n\t    _classCallCheck(this, JSONPatch);\n\t\n\t    this.ops = ops || [];\n\t  }\n\t\n\t  /**\n\t   * Apply\n\t   *\n\t   * @todo handle errors/roll back\n\t   * @todo protect properties that are private in the schema\n\t   * @todo map JSON Pointers real property names\n\t   *\n\t   * @param {Object} target\n\t   */\n\t\n\t\n\t  _createClass(JSONPatch, [{\n\t    key: 'apply',\n\t    value: function apply(target) {\n\t      var _this = this;\n\t\n\t      this.ops.forEach(function (operation) {\n\t        var op = operation.op;\n\t\n\t        if (!op) {\n\t          throw new Error('Missing \"op\" in JSON Patch operation');\n\t        }\n\t\n\t        if (OPERATIONS.indexOf(op) === -1) {\n\t          throw new Error('Invalid \"op\" in JSON Patch operation');\n\t        }\n\t\n\t        if (!operation.path) {\n\t          throw new Error('Missing \"path\" in JSON Patch operation');\n\t        }\n\t\n\t        _this[op](operation, target);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Add\n\t     *\n\t     * @param {Object} op\n\t     * @param {Object} target\n\t     */\n\t\n\t  }, {\n\t    key: 'add',\n\t    value: function add(op, target) {\n\t      if (op.value === undefined) {\n\t        throw new Error('Missing \"value\" in JSON Patch add operation');\n\t      }\n\t\n\t      var pointer = new JSONPointer(op.path, SILENT);\n\t      pointer.add(target, op.value);\n\t    }\n\t\n\t    /**\n\t     * Remove\n\t     *\n\t     * @param {Object} op\n\t     * @param {Object} target\n\t     */\n\t\n\t  }, {\n\t    key: 'remove',\n\t    value: function remove(op, target) {\n\t      var pointer = new JSONPointer(op.path);\n\t      pointer.remove(target);\n\t    }\n\t\n\t    /**\n\t     * Replace\n\t     *\n\t     * @param {Object} op\n\t     * @param {Object} target\n\t     */\n\t\n\t  }, {\n\t    key: 'replace',\n\t    value: function replace(op, target) {\n\t      if (op.value === undefined) {\n\t        throw new Error('Missing \"value\" in JSON Patch replace operation');\n\t      }\n\t\n\t      var pointer = new JSONPointer(op.path);\n\t      pointer.replace(target, op.value);\n\t    }\n\t\n\t    /**\n\t     * Move\n\t     *\n\t     * @param {Object} op\n\t     * @param {Object} target\n\t     */\n\t\n\t  }, {\n\t    key: 'move',\n\t    value: function move(op, target) {\n\t      if (op.from === undefined) {\n\t        throw new Error('Missing \"from\" in JSON Patch move operation');\n\t      }\n\t\n\t      if (op.path.match(new RegExp('^' + op.from))) {\n\t        throw new Error('Invalid \"from\" in JSON Patch move operation');\n\t      }\n\t\n\t      var pointer = new JSONPointer(op.path);\n\t      var from = new JSONPointer(op.from);\n\t      var value = from.get(target);\n\t\n\t      from.remove(target);\n\t      pointer.add(target, value);\n\t    }\n\t\n\t    /**\n\t     * Copy\n\t     *\n\t     * @param {Object} op\n\t     * @param {Object} target\n\t     */\n\t\n\t  }, {\n\t    key: 'copy',\n\t    value: function copy(op, target) {\n\t      if (op.from === undefined) {\n\t        throw new Error('Missing \"from\" in JSON Patch copy operation');\n\t      }\n\t\n\t      var pointer = new JSONPointer(op.path);\n\t      var from = new JSONPointer(op.from);\n\t      var value = from.get(target);\n\t\n\t      pointer.add(target, value);\n\t    }\n\t\n\t    /**\n\t     * Test\n\t     *\n\t     * @param {Object} op\n\t     * @param {Object} target\n\t     */\n\t\n\t  }, {\n\t    key: 'test',\n\t    value: function test(op, target) {\n\t      if (op.value === undefined) {\n\t        throw new Error('Missing \"value\" in JSON Patch test operation');\n\t      }\n\t\n\t      var pointer = new JSONPointer(op.path);\n\t      var value = pointer.get(target);\n\t\n\t      switch (_typeof(op.value)) {\n\t        //case 'string':\n\t        //case 'number':\n\t        //case 'boolean':\n\t        //  if (value !== op.value) {\n\t        //    throw new Error('Mismatching JSON Patch test value')\n\t        //  }\n\t        default:\n\t          if (value !== op.value) {\n\t            throw new Error('Mismatching JSON Patch test value');\n\t          }\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return JSONPatch;\n\t}();\n\t\n\t/**\n\t * Exports\n\t */\n\t\n\t\n\tmodule.exports = JSONPatch;\n\n/***/ },\n/* 99 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t/**\n\t * Mode enumeration\n\t */\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar THROW = 0;\n\tvar RECOVER = 1;\n\tvar SILENT = 2;\n\t\n\t/**\n\t * JSONPointer\n\t *\n\t * @class\n\t * Implements RFC 6901: JavaScript Object Notation (JSON) Pointer\n\t * https://tools.ietf.org/html/rfc6901\n\t */\n\t\n\tvar JSONPointer = function () {\n\t\n\t  /**\n\t   * Constructor\n\t   */\n\t  function JSONPointer(expr, mode) {\n\t    _classCallCheck(this, JSONPointer);\n\t\n\t    this.expr = expr;\n\t    this.mode = mode || THROW;\n\t    this.tokens = expr && expr.charAt(0) === '#' ? this.parseURIFragmentIdentifier(expr) : this.parseJSONString(expr);\n\t  }\n\t\n\t  /**\n\t   * Escape\n\t   */\n\t\n\t\n\t  _createClass(JSONPointer, [{\n\t    key: 'escape',\n\t    value: function escape(expr) {\n\t      return expr.replace(/~/g, '~0').replace(/\\//g, '~1');\n\t    }\n\t\n\t    /**\n\t     * Unescape\n\t     */\n\t\n\t  }, {\n\t    key: 'unescape',\n\t    value: function unescape(expr) {\n\t      return expr.replace(/~1/g, '/').replace(/~0/g, '~');\n\t    }\n\t\n\t    /**\n\t     * Parse\n\t     */\n\t\n\t  }, {\n\t    key: 'parseJSONString',\n\t\n\t\n\t    /**\n\t     * Parse JSON String\n\t     *\n\t     * @description Parse an expression into a list of tokens\n\t     * @param {string} expr\n\t     * @returns {Array}\n\t     */\n\t    value: function parseJSONString(expr) {\n\t      if (typeof expr !== 'string') {\n\t        throw new Error('JSON Pointer must be a string');\n\t      }\n\t\n\t      if (expr === '') {\n\t        return [];\n\t      }\n\t\n\t      if (expr.charAt(0) !== '/') {\n\t        throw new Error('Invalid JSON Pointer');\n\t      }\n\t\n\t      if (expr === '/') {\n\t        return [''];\n\t      }\n\t\n\t      return expr.substr(1).split('/').map(this.unescape);\n\t    }\n\t\n\t    /**\n\t     * To JSON String\n\t     *\n\t     * @description Render a JSON string representation of a pointer\n\t     * @returns {string}\n\t     */\n\t\n\t  }, {\n\t    key: 'toJSONString',\n\t    value: function toJSONString() {\n\t      return '/' + this.tokens.map(this.escape).join('/');\n\t    }\n\t\n\t    /**\n\t     * Parse URI Fragment Identifer\n\t     */\n\t\n\t  }, {\n\t    key: 'parseURIFragmentIdentifier',\n\t    value: function parseURIFragmentIdentifier(expr) {\n\t      if (typeof expr !== 'string') {\n\t        throw new Error('JSON Pointer must be a string');\n\t      }\n\t\n\t      if (expr.charAt(0) !== '#') {\n\t        throw new Error('Invalid JSON Pointer URI Fragment Identifier');\n\t      }\n\t\n\t      return this.parseJSONString(decodeURIComponent(expr.substr(1)));\n\t    }\n\t\n\t    /**\n\t     * To URI Fragment Identifier\n\t     *\n\t     * @description Render a URI Fragment Identifier representation of a pointer\n\t     * @returns {string}\n\t     */\n\t\n\t  }, {\n\t    key: 'toURIFragmentIdentifier',\n\t    value: function toURIFragmentIdentifier() {\n\t      var _this = this;\n\t\n\t      var value = this.tokens.map(function (token) {\n\t        return encodeURIComponent(_this.escape(token));\n\t      }).join('/');\n\t\n\t      return '#/' + value;\n\t    }\n\t\n\t    /**\n\t     * Get\n\t     *\n\t     * @description Get a value from the source object referenced by the pointer\n\t     * @param {Object} source\n\t     * @returns {*}\n\t     */\n\t\n\t  }, {\n\t    key: 'get',\n\t    value: function get(source) {\n\t      var current = source;\n\t      var tokens = this.tokens;\n\t\n\t      for (var i = 0; i < tokens.length; i++) {\n\t        if (!current || current[tokens[i]] === undefined) {\n\t          if (this.mode !== THROW) {\n\t            return undefined;\n\t          } else {\n\t            throw new Error('Invalid JSON Pointer reference');\n\t          }\n\t        }\n\t\n\t        current = current[tokens[i]];\n\t      }\n\t\n\t      return current;\n\t    }\n\t\n\t    /**\n\t     * Add\n\t     *\n\t     * @description Set a value on a target object referenced by the pointer. Put\n\t     * will insert an array element. To change an existing array elemnent, use\n\t     * `pointer.set()`\n\t     * @param {Object} target\n\t     * @param {*} value\n\t     */\n\t\n\t  }, {\n\t    key: 'add',\n\t    value: function add(target, value) {\n\t      var tokens = this.tokens;\n\t      var current = target;\n\t\n\t      // iterate through the tokens\n\t      for (var i = 0; i < tokens.length; i++) {\n\t        var token = tokens[i];\n\t\n\t        // set the property on the target location\n\t        if (i === tokens.length - 1) {\n\t          if (token === '-') {\n\t            current.push(value);\n\t          } else if (Array.isArray(current)) {\n\t            current.splice(token, 0, value);\n\t          } else {\n\t            current[token] = value;\n\t          }\n\t\n\t          // handle missing target location based on \"mode\"\n\t        } else if (!current[token]) {\n\t          switch (this.mode) {\n\t            case THROW:\n\t              throw new Error('Invalid JSON Pointer reference');\n\t\n\t            case RECOVER:\n\t              current = current[token] = parseInt(token) ? [] : {};\n\t              break;\n\t\n\t            case SILENT:\n\t              return;\n\t\n\t            default:\n\t              throw new Error('Invalid pointer mode');\n\t          }\n\t\n\t          // reference the next object in the path\n\t        } else {\n\t          current = current[token];\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Replace\n\t     *\n\t     * @description Set a value on a target object referenced by the pointer. Set will\n\t     * overwrite an existing array element at the target location.\n\t     * @param {Object} target\n\t     * @param {*} value\n\t     */\n\t\n\t  }, {\n\t    key: 'replace',\n\t    value: function replace(target, value) {\n\t      var tokens = this.tokens;\n\t      var current = target;\n\t\n\t      for (var i = 0; i < tokens.length; i++) {\n\t        var token = tokens[i];\n\t\n\t        if (i === tokens.length - 1) {\n\t          current[token] = value;\n\t        } else if (!current[token]) {\n\t          current = current[token] = parseInt(token) ? [] : {};\n\t        } else {\n\t          current = current[token];\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Del\n\t     *\n\t     * - if this is an array it should splice the value out\n\t     */\n\t\n\t  }, {\n\t    key: 'remove',\n\t    value: function remove(target) {\n\t      var tokens = this.tokens;\n\t      var current = target;\n\t\n\t      for (var i = 0; i < tokens.length; i++) {\n\t        var token = tokens[i];\n\t\n\t        if (current === undefined || current[token] === undefined) {\n\t          return undefined;\n\t        } else if (Array.isArray(current)) {\n\t          current.splice(token, 1);\n\t          return undefined;\n\t        } else if (i === tokens.length - 1) {\n\t          delete current[token];\n\t        }\n\t\n\t        current = current[token];\n\t      }\n\t\n\t      // delete from the target\n\t    }\n\t  }], [{\n\t    key: 'parse',\n\t    value: function parse(expr) {\n\t      return new JSONPointer(expr);\n\t    }\n\t  }]);\n\t\n\t  return JSONPointer;\n\t}();\n\t\n\t/**\n\t * Exports\n\t */\n\t\n\t\n\tmodule.exports = JSONPointer;\n\n/***/ },\n/* 100 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\n\t * Module dependencies\n\t * @ignore\n\t */\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar JSONPointer = __webpack_require__(99);\n\t\n\t/**\n\t * JSONPointer mode\n\t */\n\tvar RECOVER = 1;\n\t\n\t/**\n\t * JSONMapping\n\t *\n\t * @class\n\t * Defines a means to declaratively translate between object\n\t * representations using JSON Pointer syntax.\n\t */\n\t\n\tvar JSONMapping = function (_Map) {\n\t  _inherits(JSONMapping, _Map);\n\t\n\t  /**\n\t   * Constructor\n\t   *\n\t   * @description Translate pointers from JSON Strings into Pointer objects\n\t   * @param {Object} mapping\n\t   */\n\t  function JSONMapping(mapping) {\n\t    _classCallCheck(this, JSONMapping);\n\t\n\t    var _this = _possibleConstructorReturn(this, (JSONMapping.__proto__ || Object.getPrototypeOf(JSONMapping)).call(this));\n\t\n\t    Object.keys(mapping).forEach(function (key) {\n\t      var value = mapping[key];\n\t      _this.set(new JSONPointer(key, RECOVER), new JSONPointer(value, RECOVER));\n\t    });\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Map\n\t   *\n\t   * @description Assign values from source to target by reading the mapping\n\t   * from right to left.\n\t   * @param {Object} target\n\t   * @param {Object} source\n\t   */\n\t\n\t\n\t  _createClass(JSONMapping, [{\n\t    key: 'map',\n\t    value: function map(target, source) {\n\t      this.forEach(function (right, left) {\n\t        left.add(target, right.get(source));\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Project\n\t     *\n\t     * @description Assign values from source to target by reading the mapping\n\t     * from left to right.\n\t     * @param {Object} source\n\t     * @param {Object} target\n\t     */\n\t\n\t  }, {\n\t    key: 'project',\n\t    value: function project(source, target) {\n\t      this.forEach(function (right, left) {\n\t        right.add(target, left.get(source));\n\t      });\n\t    }\n\t  }]);\n\t\n\t  return JSONMapping;\n\t}(Map);\n\t\n\t/**\n\t * Exports\n\t */\n\t\n\t\n\tmodule.exports = JSONMapping;\n\n/***/ },\n/* 101 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\n\t * Module dependencies\n\t * @ignore\n\t */\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Initializer = __webpack_require__(96);\n\tvar Validator = __webpack_require__(102);\n\t\n\t/**\n\t * JSONSchema\n\t *\n\t * @class\n\t * Compiles JSON Schema documents to an object with object initialization\n\t * and validation methods.\n\t */\n\t\n\tvar JSONSchema = function () {\n\t\n\t  /**\n\t   * Constructor\n\t   *\n\t   * @param {Object} schema\n\t   */\n\t  function JSONSchema(schema) {\n\t    _classCallCheck(this, JSONSchema);\n\t\n\t    // TODO: optionally parse JSON string?\n\t    Object.assign(this, schema);\n\t\n\t    // add schema-derived initialize and validate methods\n\t    Object.defineProperties(this, {\n\t      initialize: {\n\t        enumerable: false,\n\t        writeable: false,\n\t        value: Initializer.compile(schema)\n\t      },\n\t      validate: {\n\t        enumerable: false,\n\t        writeable: false,\n\t        value: Validator.compile(schema)\n\t      }\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Extend\n\t   *\n\t   * @description\n\t   * ...\n\t   * Dear future,\n\t   *\n\t   * This function was meticulously plagiarized from some curious amalgam of\n\t   * stackoverflow posts whilst dozing off at my keyboard, too deprived of REM-\n\t   * sleep to recurse unassisted. If it sucks, you have only yourself to blame.\n\t   *\n\t   * Goodnight.\n\t   *\n\t   * @param {Object} schema\n\t   * @returns {JSONSchema}\n\t   */\n\t\n\t\n\t  _createClass(JSONSchema, [{\n\t    key: 'extend',\n\t    value: function extend(schema) {\n\t      function isObject(data) {\n\t        return data && (typeof data === 'undefined' ? 'undefined' : _typeof(data)) === 'object' && data !== null && !Array.isArray(data);\n\t      }\n\t\n\t      function extender(target, source) {\n\t        var result = Object.assign({}, target);\n\t        if (isObject(target) && isObject(source)) {\n\t          Object.keys(source).forEach(function (key) {\n\t            if (isObject(source[key])) {\n\t              if (!(key in target)) {\n\t                Object.assign(result, _defineProperty({}, key, source[key]));\n\t              } else {\n\t                result[key] = extender(target[key], source[key]);\n\t              }\n\t            } else {\n\t              Object.assign(result, _defineProperty({}, key, source[key]));\n\t            }\n\t          });\n\t        }\n\t        return result;\n\t      }\n\t\n\t      var descriptor = extender(this, schema);\n\t      return new JSONSchema(descriptor);\n\t    }\n\t  }]);\n\t\n\t  return JSONSchema;\n\t}();\n\t\n\t/**\n\t * Export\n\t */\n\t\n\t\n\tmodule.exports = JSONSchema;\n\n/***/ },\n/* 102 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\n\t * Module dependencies\n\t * @ignore\n\t */\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar formats = __webpack_require__(95);\n\t\n\t/**\n\t * Validator\n\t *\n\t * Compile an object describing a JSON Schema into a validation function.\n\t */\n\t\n\tvar Validator = function () {\n\t  _createClass(Validator, null, [{\n\t    key: 'compile',\n\t\n\t\n\t    /**\n\t     * Compile (static)\n\t     *\n\t     * @description\n\t     * Compile an object describing a JSON Schema into a validation function.\n\t     *\n\t     * @param {Object} schema\n\t     * @returns {Function}\n\t     */\n\t    value: function compile(schema) {\n\t      var validator = new Validator(schema);\n\t\n\t      var body = '\\n      // \"cursor\"\\n      let value = data\\n      let container\\n      let stack = []\\n      let top = -1\\n\\n      // error state\\n      let valid = true\\n      let errors = []\\n\\n      // complex schema state\\n      let initialValidity\\n      let anyValid\\n      let notValid\\n      let countOfValid\\n      let initialErrorCount\\n      let accumulatedErrorCount\\n\\n      // validation code\\n      ' + validator.compile() + '\\n\\n      // validation result\\n      return {\\n        valid,\\n        errors\\n      }\\n    ';\n\t\n\t      return new Function('data', body);\n\t    }\n\t\n\t    /**\n\t     * Constructor\n\t     *\n\t     * @param {Object} schema - object representation of a schema\n\t     * @param {string} options - compilation options\n\t     */\n\t\n\t  }]);\n\t\n\t  function Validator(schema) {\n\t    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t    _classCallCheck(this, Validator);\n\t\n\t    // assign schema to this\n\t    this.schema = schema;\n\t\n\t    // assign all options to this\n\t    Object.assign(this, options);\n\t\n\t    // ensure address is defined\n\t    if (!this.address) {\n\t      this.address = '';\n\t    }\n\t\n\t    // ensure require is boolean\n\t    if (this.require !== true) {\n\t      this.require = false;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Compile\n\t   *\n\t   * @description\n\t   * The instance compile method is \"dumb\". It only sequences invocation of\n\t   * more specific compilation methods. It generates code to\n\t   *\n\t   *  - read a value from input\n\t   *  - validate type(s) of input\n\t   *  - validate constraints described by various schema keywords\n\t   *\n\t   * Conditional logic related to code generation is pushed downsteam to\n\t   * type-specific methods.\n\t   */\n\t\n\t\n\t  _createClass(Validator, [{\n\t    key: 'compile',\n\t    value: function compile() {\n\t      var block = '';\n\t\n\t      if (this.require) {\n\t        block += this.required();\n\t      }\n\t\n\t      // type validation\n\t      block += this.type();\n\t\n\t      // type specific validation generators\n\t      // null and boolean are covered by this.type()\n\t      // integer should be covered by number and this.type()\n\t      block += this.array();\n\t      block += this.number();\n\t      block += this.object();\n\t      block += this.string();\n\t\n\t      // non-type-specific validation generators\n\t      block += this.enum();\n\t      block += this.anyOf();\n\t      block += this.allOf();\n\t      block += this.not();\n\t      block += this.oneOf();\n\t\n\t      return block;\n\t    }\n\t\n\t    /**\n\t     * push\n\t     */\n\t\n\t  }, {\n\t    key: 'push',\n\t    value: function push() {\n\t      return '\\n      stack.push(value)\\n      container = value\\n      top++\\n    ';\n\t    }\n\t\n\t    /**\n\t     * pop\n\t     */\n\t\n\t  }, {\n\t    key: 'pop',\n\t    value: function pop() {\n\t      return '\\n      if (stack.length > 1) {\\n        top--\\n        stack.pop()\\n      }\\n\\n      value = container = stack[top]\\n    ';\n\t    }\n\t\n\t    /**\n\t     * type\n\t     *\n\t     * @description\n\t     * > An instance matches successfully if its primitive type is one of the\n\t     * > types defined by keyword. Recall: \"number\" includes \"integer\".\n\t     * > JSON Schema Validation Section 5.5.2\n\t     *\n\t     * @returns {string}\n\t     */\n\t\n\t  }, {\n\t    key: 'type',\n\t    value: function type() {\n\t      var type = this.schema.type,\n\t          address = this.address;\n\t\n\t      var block = '';\n\t\n\t      if (type) {\n\t        var types = Array.isArray(type) ? type : [type];\n\t        var conditions = types.map(function (type) {\n\t          // TODO: can we make a mapping object for this to clean it up?\n\t          if (type === 'array') return '!Array.isArray(value)';\n\t          if (type === 'boolean') return 'typeof value !== \\'boolean\\'';\n\t          if (type === 'integer') return '!Number.isInteger(value)';\n\t          if (type === 'null') return 'value !== null';\n\t          if (type === 'number') return 'typeof value !== \\'number\\'';\n\t          if (type === 'object') return '(typeof value !== \\'object\\' || Array.isArray(value) || value === null)';\n\t          if (type === 'string') return 'typeof value !== \\'string\\'';\n\t        }).join(' && ');\n\t\n\t        block += '\\n      // ' + address + ' type checking\\n      if (value !== undefined && ' + conditions + ') {\\n        valid = false\\n        errors.push({\\n          keyword: \\'type\\',\\n          message: \\'invalid type\\'\\n        })\\n      }\\n      ';\n\t      }\n\t\n\t      return block;\n\t    }\n\t\n\t    /**\n\t     * Type-specific validations\n\t     *\n\t     * Type checking is optional in JSON Schema, and a schema can allow\n\t     * multiple types. Generated code needs to apply type-specific validations\n\t     * only to appropriate values, and ignore everything else. Type validation\n\t     * itself is handled separately from other validation keywords.\n\t     *\n\t     * The methods `array`, `number`, `object`, `string` generate type-specific\n\t     * validation code blocks, wrapped in a conditional such that they will\n\t     * only be applied to values of that type.\n\t     *\n\t     * For example, the `number` method, given the schema\n\t     *\n\t     *     { minimum: 3 }\n\t     *\n\t     * will generate\n\t     *\n\t     *     if (typeof value === 'number') {\n\t     *       if (value < 3) {\n\t     *         valid = false\n\t     *         errors.push({ message: '...' })\n\t     *       }\n\t     *     }\n\t     *\n\t     * Integer values are also numbers, and are validated the same as numbers\n\t     * other than the type validation itself. Therefore no `integer` method is\n\t     * needed.\n\t     */\n\t\n\t    /**\n\t     * array\n\t     *\n\t     * @description\n\t     * Invoke methods for array-specific keywords and wrap resulting code in\n\t     * type-checking conditional so that any resulting validations are only\n\t     * applied to array values.\n\t     *\n\t     * @returns {string}\n\t     */\n\t\n\t  }, {\n\t    key: 'array',\n\t    value: function array() {\n\t      var keywords = ['additionalItems', 'items', 'minItems', 'maxItems', 'uniqueItems'];\n\t      var validations = this.validations(keywords);\n\t      var block = '';\n\t\n\t      if (validations.length > 0) {\n\t        block += '\\n      /**\\n       * Array validations\\n       */\\n      if (Array.isArray(value)) {\\n      ' + validations + '\\n      }\\n      ';\n\t      }\n\t\n\t      return block;\n\t    }\n\t\n\t    /**\n\t     * number\n\t     *\n\t     * @description\n\t     * Invoke methods for number-specific keywords and wrap resulting code in\n\t     * type-checking conditional so that any resulting validations are only\n\t     * applied to number values.\n\t     *\n\t     * @returns {string}\n\t     */\n\t\n\t  }, {\n\t    key: 'number',\n\t    value: function number() {\n\t      var keywords = ['minimum', 'maximum', 'multipleOf'];\n\t      var validations = this.validations(keywords);\n\t      var block = '';\n\t\n\t      if (validations.length > 0) {\n\t        block += '\\n      /**\\n       * Number validations\\n       */\\n      if (typeof value === \\'number\\') {\\n      ' + validations + '\\n      }\\n      ';\n\t      }\n\t\n\t      return block;\n\t    }\n\t\n\t    /**\n\t     * object\n\t     *\n\t     * @description\n\t     * Invoke methods for object-specific keywords and wrap resulting code in\n\t     * type-checking conditional so that any resulting validations are only\n\t     * applied to object values.\n\t     *\n\t     * @returns {string}\n\t     */\n\t\n\t  }, {\n\t    key: 'object',\n\t    value: function object() {\n\t      var keywords = ['maxProperties', 'minProperties', 'additionalProperties', 'properties', 'patternProperties', 'dependencies', 'schemaDependencies', 'propertyDependencies'];\n\t      var validations = this.validations(keywords);\n\t      var block = '';\n\t\n\t      if (validations.length > 0) {\n\t        block += '\\n      /**\\n       * Object validations\\n       */\\n      if (typeof value === \\'object\\' && value !== null && !Array.isArray(value)) {\\n      ' + validations + '\\n      }\\n      ';\n\t      }\n\t\n\t      return block;\n\t    }\n\t\n\t    /**\n\t     * string\n\t     *\n\t     * @description\n\t     * Invoke methods for string-specific keywords and wrap resulting code in\n\t     * type-checking conditional so that any resulting validations are only\n\t     * applied to string values.\n\t     *\n\t     * @returns {string}\n\t     */\n\t\n\t  }, {\n\t    key: 'string',\n\t    value: function string() {\n\t      var keywords = ['maxLength', 'minLength', 'pattern', 'format'];\n\t      var validations = this.validations(keywords);\n\t      var block = '';\n\t\n\t      if (validations.length > 0) {\n\t        block += '\\n      /**\\n       * String validations\\n       */\\n      if (typeof value === \\'string\\') {\\n      ' + validations + '\\n      }\\n      ';\n\t      }\n\t\n\t      return block;\n\t    }\n\t\n\t    /**\n\t     * validations\n\t     *\n\t     * @description\n\t     * Iterate over an array of keywords and invoke code generator methods\n\t     * for each. Concatenate the results together and return. Used by \"type\"\n\t     * methods such as this.array() and this.string()\n\t     *\n\t     * @param {Array} keywords\n\t     * @returns {string}\n\t     */\n\t\n\t  }, {\n\t    key: 'validations',\n\t    value: function validations(keywords) {\n\t      var _this = this;\n\t\n\t      var schema = this.schema;\n\t\n\t      var block = '';\n\t\n\t      var constraints = Object.keys(schema).filter(function (key) {\n\t        return keywords.indexOf(key) !== -1;\n\t      });\n\t\n\t      constraints.forEach(function (keyword) {\n\t        block += _this[keyword]();\n\t      });\n\t\n\t      return block;\n\t    }\n\t\n\t    /**\n\t     * enum\n\t     *\n\t     * @description\n\t     * > An instance validates successfully against this keyword if its value\n\t     * > is equal to one of the elements in this keyword's array value.\n\t     * > JSON Schema Validation Section 5.5.1\n\t     *\n\t     * @returns {string}\n\t     */\n\t\n\t  }, {\n\t    key: 'enum',\n\t    value: function _enum() {\n\t      var enumerated = this.schema.enum,\n\t          address = this.address;\n\t\n\t      var conditions = ['value !== undefined'];\n\t      var block = '';\n\t\n\t      if (enumerated) {\n\t        enumerated.forEach(function (value) {\n\t          switch (typeof value === 'undefined' ? 'undefined' : _typeof(value)) {\n\t            case 'boolean':\n\t              conditions.push('value !== ' + value);\n\t              break;\n\t\n\t            case 'number':\n\t              conditions.push('value !== ' + value);\n\t              break;\n\t\n\t            case 'string':\n\t              conditions.push('value !== \"' + value + '\"');\n\t              break;\n\t\n\t            case 'object':\n\t              if (value === null) {\n\t                conditions.push('value !== null');\n\t              } else {\n\t                conditions.push('\\'' + JSON.stringify(value) + '\\' !== JSON.stringify(value)');\n\t              }\n\t              break;\n\t\n\t            default:\n\t              throw new Error('Things are not well in the land of enum');\n\t\n\t          }\n\t        });\n\t\n\t        block += '\\n      /**\\n       * Validate \"' + address + '\" enum\\n       */\\n      if (' + conditions.join(' && ') + ') {\\n        valid = false\\n        errors.push({\\n          keyword: \\'enum\\',\\n          message: JSON.stringify(value) + \\' is not an enumerated value\\'\\n        })\\n      }\\n      ';\n\t      }\n\t\n\t      return block;\n\t    }\n\t\n\t    /**\n\t     * anyOf\n\t     *\n\t     * @description\n\t     * > An instance validates successfully against this keyword if it\n\t     * > validates successfully against at least one schema defined by this\n\t     * > keyword's value.\n\t     * > JSON Schema Validation Section 5.5.4\n\t     *\n\t     * @returns {string}\n\t     */\n\t\n\t  }, {\n\t    key: 'anyOf',\n\t    value: function anyOf() {\n\t      var anyOf = this.schema.anyOf,\n\t          address = this.address;\n\t\n\t      var block = '';\n\t\n\t      if (Array.isArray(anyOf)) {\n\t        block += '\\n        initialValidity = valid\\n        initialErrorCount = errors.length\\n        anyValid = false\\n      ';\n\t\n\t        anyOf.forEach(function (subschema) {\n\t          var validator = new Validator(subschema, { address: address });\n\t          block += '\\n        accumulatedErrorCount = errors.length\\n        ' + validator.compile() + '\\n        if (accumulatedErrorCount === errors.length) {\\n          anyValid = true\\n        }\\n        ';\n\t        });\n\t\n\t        block += '\\n          if (anyValid === true) {\\n            valid = initialValidity\\n            errors = errors.slice(0, initialErrorCount)\\n          }\\n      ';\n\t      }\n\t\n\t      return block;\n\t    }\n\t\n\t    /**\n\t     * allOf\n\t     *\n\t     * @description\n\t     * > An instance validates successfully against this keyword if it\n\t     * > validates successfully against all schemas defined by this keyword's\n\t     * > value.\n\t     * > JSON Schema Validation Section 5.5.3\n\t     *\n\t     * @returns {string}\n\t     */\n\t\n\t  }, {\n\t    key: 'allOf',\n\t    value: function allOf() {\n\t      var allOf = this.schema.allOf,\n\t          address = this.address;\n\t\n\t      var block = '';\n\t\n\t      if (Array.isArray(allOf)) {\n\t        allOf.forEach(function (subschema) {\n\t          var validator = new Validator(subschema, { address: address });\n\t          block += '\\n        ' + validator.compile() + '\\n        ';\n\t        });\n\t      }\n\t\n\t      return block;\n\t    }\n\t\n\t    /**\n\t     * oneOf\n\t     *\n\t     * @description\n\t     * > An instance validates successfully against this keyword if it\n\t     * > validates successfully against exactly one schema defined by this\n\t     * > keyword's value.\n\t     * > JSON Schema Validation Section 5.5.5\n\t     *\n\t     * @returns {string}\n\t     */\n\t\n\t  }, {\n\t    key: 'oneOf',\n\t    value: function oneOf() {\n\t      var oneOf = this.schema.oneOf,\n\t          address = this.address;\n\t\n\t      var block = '';\n\t\n\t      if (Array.isArray(oneOf)) {\n\t        block += '\\n        /**\\n         * Validate ' + address + ' oneOf\\n         */\\n        initialValidity = valid\\n        initialErrorCount = errors.length\\n        countOfValid = 0\\n      ';\n\t\n\t        oneOf.forEach(function (subschema) {\n\t          var validator = new Validator(subschema, { address: address });\n\t          block += '\\n        accumulatedErrorCount = errors.length\\n        ' + validator.compile() + '\\n        if (accumulatedErrorCount === errors.length) {\\n          countOfValid += 1\\n        }\\n        ';\n\t        });\n\t\n\t        block += '\\n          if (countOfValid === 1) {\\n            valid = initialValidity\\n            errors = errors.slice(0, initialErrorCount)\\n          } else {\\n            valid = false\\n            errors.push({\\n              keyword: \\'oneOf\\',\\n              message: \\'what is a reasonable error message for this case?\\'\\n            })\\n          }\\n      ';\n\t      }\n\t\n\t      return block;\n\t    }\n\t\n\t    /**\n\t     * not\n\t     *\n\t     * @description\n\t     * > An instance is valid against this keyword if it fails to validate\n\t     * > successfully against the schema defined by this keyword.\n\t     * > JSON Schema Validation Section 5.5.6\n\t     *\n\t     * @returns {string}\n\t     */\n\t\n\t  }, {\n\t    key: 'not',\n\t    value: function not() {\n\t      var not = this.schema.not,\n\t          address = this.address;\n\t\n\t      var block = '';\n\t\n\t      if ((typeof not === 'undefined' ? 'undefined' : _typeof(not)) === 'object' && not !== null && !Array.isArray(not)) {\n\t        var subschema = not;\n\t        var validator = new Validator(subschema, { address: address });\n\t\n\t        block += '\\n        /**\\n         * NOT\\n         */\\n        if (value !== undefined) {\\n          initialValidity = valid\\n          initialErrorCount = errors.length\\n          notValid = true\\n\\n          accumulatedErrorCount = errors.length\\n\\n          ' + validator.compile() + '\\n\\n          if (accumulatedErrorCount === errors.length) {\\n            notValid = false\\n          }\\n\\n          if (notValid === true) {\\n            valid = initialValidity\\n            errors = errors.slice(0, initialErrorCount)\\n          } else {\\n            valid = false\\n            errors = errors.slice(0, initialErrorCount)\\n            errors.push({\\n              keyword: \\'not\\',\\n              message: \\'hmm...\\'\\n            })\\n          }\\n        }\\n      ';\n\t      }\n\t\n\t      return block;\n\t    }\n\t\n\t    /**\n\t     * properties\n\t     *\n\t     * @description\n\t     * Iterate over the `properties` schema property if it is an object. For each\n\t     * key, initialize a new Validator for the subschema represented by the property\n\t     * value and invoke compile. Append the result of compiling each subschema to\n\t     * the block of code being generated.\n\t     *\n\t     * @returns {string}\n\t     */\n\t\n\t  }, {\n\t    key: 'properties',\n\t    value: function properties() {\n\t      var schema = this.schema,\n\t          address = this.address;\n\t      var properties = schema.properties,\n\t          required = schema.required;\n\t\n\t      var block = this.push();\n\t\n\t      // ensure the value of \"required\" schema property is an array\n\t      required = Array.isArray(required) ? required : [];\n\t\n\t      if ((typeof properties === 'undefined' ? 'undefined' : _typeof(properties)) === 'object') {\n\t        Object.keys(properties).forEach(function (key) {\n\t          var subschema = properties[key];\n\t          var isRequired = required.indexOf(key) !== -1;\n\t          // TODO\n\t          // how should we be calculating these things? should be json pointer?\n\t          // needs a separate function\n\t          var pointer = [address, key].filter(function (segment) {\n\t            return !!segment;\n\t          }).join('.');\n\t          var validation = new Validator(subschema, { address: pointer, require: isRequired });\n\t\n\t          // read the value\n\t          block += '\\n        value = container[\\'' + key + '\\']\\n        ';\n\t\n\t          block += validation.compile();\n\t        });\n\t      }\n\t\n\t      block += this.pop();\n\t\n\t      return block;\n\t    }\n\t\n\t    /**\n\t     * Other Properties\n\t     *\n\t     * @description\n\t     * This method is not for a keyword. It wraps validations for\n\t     * patternProperties and additionalProperties in a single iteration over\n\t     * an object-type value's properties.\n\t     *\n\t     * It should only be invoked once for a given subschema.\n\t     *\n\t     * @returns {string}\n\t     */\n\t\n\t  }, {\n\t    key: 'otherProperties',\n\t    value: function otherProperties() {\n\t      return '\\n      /**\\n       * Validate Other Properties\\n       */\\n      ' + this.push() + '\\n\\n      for (let key in container) {\\n        value = container[key]\\n        matched = false\\n\\n        ' + this.patternValidations() + '\\n        ' + this.additionalValidations() + '\\n      }\\n\\n      ' + this.pop() + '\\n    ';\n\t    }\n\t\n\t    /**\n\t     * Pattern Validations\n\t     *\n\t     * @description\n\t     * Generate validation code from a subschema for properties matching a\n\t     * regular expression.\n\t     *\n\t     * @returns {string}\n\t     */\n\t\n\t  }, {\n\t    key: 'patternValidations',\n\t    value: function patternValidations() {\n\t      var patternProperties = this.schema.patternProperties;\n\t\n\t      var block = '';\n\t\n\t      if ((typeof patternProperties === 'undefined' ? 'undefined' : _typeof(patternProperties)) === 'object') {\n\t        Object.keys(patternProperties).forEach(function (pattern) {\n\t          var subschema = patternProperties[pattern];\n\t          var validator = new Validator(subschema);\n\t          block += '\\n          if (key.match(\\'' + pattern + '\\')) {\\n            matched = true\\n            ' + validator.compile() + '\\n          }\\n        ';\n\t        });\n\t      }\n\t\n\t      return block;\n\t    }\n\t\n\t    /**\n\t     * Additional Validations\n\t     *\n\t     * @description\n\t     * Generate validation code, either from a subschema for properties not\n\t     * defined in the schema, or to disallow properties not defined in the\n\t     * schema.\n\t     *\n\t     * @returns {string}\n\t     */\n\t\n\t  }, {\n\t    key: 'additionalValidations',\n\t    value: function additionalValidations() {\n\t      var _schema = this.schema,\n\t          properties = _schema.properties,\n\t          additionalProperties = _schema.additionalProperties,\n\t          address = this.address;\n\t\n\t      var validations = '';\n\t      var block = '';\n\t\n\t      // catch additional unmatched properties\n\t      var conditions = ['matched !== true'];\n\t\n\t      // ignore defined properties\n\t      Object.keys(properties || {}).forEach(function (key) {\n\t        conditions.push('key !== \\'' + key + '\\'');\n\t      });\n\t\n\t      // validate additional properties\n\t      if ((typeof additionalProperties === 'undefined' ? 'undefined' : _typeof(additionalProperties)) === 'object') {\n\t        var subschema = additionalProperties;\n\t        var validator = new Validator(subschema, { address: address + '[APKey]' });\n\t        block += '\\n        // validate additional properties\\n        if (' + conditions.join(' && ') + ') {\\n          ' + validator.compile() + '\\n        }\\n      ';\n\t      }\n\t\n\t      // error for additional properties\n\t      if (additionalProperties === false) {\n\t        block += '\\n        // validate non-presence of additional properties\\n        if (' + conditions.join(' && ') + ') {\\n          valid = false\\n          errors.push({\\n            keyword: \\'additionalProperties\\',\\n            message: key + \\' is not a defined property\\'\\n          })\\n        }\\n      ';\n\t      }\n\t\n\t      return block;\n\t    }\n\t\n\t    /**\n\t     * patternProperties\n\t     *\n\t     * @description\n\t     * Generate validation code for properties matching a pattern\n\t     * defined by the property name (key), which must be a string\n\t     * representing a valid regular expression.\n\t     *\n\t     * @returns {string}\n\t     */\n\t\n\t  }, {\n\t    key: 'patternProperties',\n\t    value: function patternProperties() {\n\t      var block = '';\n\t\n\t      if (!this.otherPropertiesCalled) {\n\t        this.otherPropertiesCalled = true;\n\t        block += this.otherProperties();\n\t      }\n\t\n\t      return block;\n\t    }\n\t\n\t    /**\n\t     * additionalProperties\n\t     *\n\t     * @description\n\t     * Generate validation code for additional properties not defined\n\t     * in the schema, or disallow additional properties if the value of\n\t     * `additionalProperties` in the schema is `false`.\n\t     *\n\t     * @returns {string}\n\t     */\n\t\n\t  }, {\n\t    key: 'additionalProperties',\n\t    value: function additionalProperties() {\n\t      var block = '';\n\t\n\t      if (!this.otherPropertiesCalled) {\n\t        this.otherPropertiesCalled = true;\n\t        block += this.otherProperties();\n\t      }\n\t\n\t      return block;\n\t    }\n\t\n\t    /**\n\t     * minProperties\n\t     *\n\t     * @description\n\t     * > An object instance is valid against \"minProperties\" if its number of\n\t     * > properties is greater than, or equal to, the value of this keyword.\n\t     * > JSON Schema Validation Section 5.4.2\n\t     *\n\t     * @returns {string}\n\t     */\n\t\n\t  }, {\n\t    key: 'minProperties',\n\t    value: function minProperties() {\n\t      var minProperties = this.schema.minProperties,\n\t          address = this.address;\n\t\n\t\n\t      return '\\n        // ' + address + ' min properties\\n        if (Object.keys(value).length < ' + minProperties + ') {\\n          valid = false\\n          errors.push({\\n            keyword: \\'minProperties\\',\\n            message: \\'too few properties\\'\\n          })\\n        }\\n    ';\n\t    }\n\t\n\t    /**\n\t     * maxProperties\n\t     *\n\t     * @description\n\t     * > An object instance is valid against \"maxProperties\" if its number of\n\t     * > properties is less than, or equal to, the value of this keyword.\n\t     * > JSON Schema Validation Section 5.4.1\n\t     *\n\t     * @returns {string}\n\t     */\n\t\n\t  }, {\n\t    key: 'maxProperties',\n\t    value: function maxProperties() {\n\t      var maxProperties = this.schema.maxProperties,\n\t          address = this.address;\n\t\n\t\n\t      return '\\n        // ' + address + ' max properties\\n        if (Object.keys(value).length > ' + maxProperties + ') {\\n          valid = false\\n          errors.push({\\n            keyword: \\'maxProperties\\',\\n            message: \\'too many properties\\'\\n          })\\n        }\\n    ';\n\t    }\n\t\n\t    /**\n\t     * Dependencies\n\t     *\n\t     * @description\n\t     * > For all (name, schema) pair of schema dependencies, if the instance has\n\t     * > a property by this name, then it must also validate successfully against\n\t     * > the schema.\n\t     * >\n\t     * > Note that this is the instance itself which must validate successfully,\n\t     * > not the value associated with the property name.\n\t     * >\n\t     * > For each (name, propertyset) pair of property dependencies, if the\n\t     * > instance has a property by this name, then it must also have properties\n\t     * > with the same names as propertyset.\n\t     * > JSON Schema Validation Section 5.4.5.2\n\t     *\n\t     * @returns {string}\n\t     */\n\t\n\t  }, {\n\t    key: 'dependencies',\n\t    value: function dependencies() {\n\t      var dependencies = this.schema.dependencies,\n\t          address = this.address;\n\t\n\t\n\t      var block = this.push();\n\t\n\t      if ((typeof dependencies === 'undefined' ? 'undefined' : _typeof(dependencies)) === 'object') {\n\t        Object.keys(dependencies).forEach(function (key) {\n\t          var dependency = dependencies[key];\n\t          var conditions = [];\n\t\n\t          if (Array.isArray(dependency)) {\n\t            dependency.forEach(function (item) {\n\t              conditions.push('container[\\'' + item + '\\'] === undefined');\n\t            });\n\t\n\t            block += '\\n            if (container[\\'' + key + '\\'] !== undefined && (' + conditions.join(' || ') + ')) {\\n              valid = false\\n              errors.push({\\n                keyword: \\'dependencies\\',\\n                message: \\'unmet dependencies\\'\\n              })\\n            }\\n          ';\n\t          } else if ((typeof dependency === 'undefined' ? 'undefined' : _typeof(dependency)) === 'object') {\n\t            var subschema = dependency;\n\t            var validator = new Validator(subschema, { address: address });\n\t\n\t            block += '\\n            if (container[\\'' + key + '\\'] !== undefined) {\\n              ' + validator.compile() + '\\n            }\\n          ';\n\t          }\n\t        });\n\t      }\n\t\n\t      block += this.pop();\n\t\n\t      return block;\n\t    }\n\t\n\t    /**\n\t     * Required\n\t     *\n\t     * @description\n\t     * > An object instance is valid against this keyword if its property set\n\t     * > contains all elements in this keyword's array value.\n\t     * > JSON Schema Validation Section 5.4.3\n\t     *\n\t     * @returns {string}\n\t     */\n\t\n\t  }, {\n\t    key: 'required',\n\t    value: function required() {\n\t      var properties = this.schema.properties,\n\t          address = this.address;\n\t\n\t      var block = '';\n\t\n\t      block += '\\n      // validate ' + address + ' presence\\n      if (value === undefined) {\\n        valid = false\\n        errors.push({\\n          keyword: \\'required\\',\\n          message: \\'is required\\'\\n        })\\n      }\\n    ';\n\t\n\t      return block;\n\t    }\n\t\n\t    /**\n\t     * additionalItems\n\t     *\n\t     * @description\n\t     * > Successful validation of an array instance with regards to these two\n\t     * > keywords is determined as follows: if \"items\" is not present, or its\n\t     * > value is an object, validation of the instance always succeeds,\n\t     * > regardless of the value of \"additionalItems\"; if the value of\n\t     * > \"additionalItems\" is boolean value true or an object, validation of\n\t     * > the instance always succeeds; if the value of \"additionalItems\" is\n\t     * > boolean value false and the value of \"items\" is an array, the\n\t     * > instance is valid if its size is less than, or equal to, the size\n\t     * > of \"items\".\n\t     * > JSON Schema Validation Section 5.3.1\n\t     *\n\t     * @returns {string}\n\t     */\n\t\n\t  }, {\n\t    key: 'additionalItems',\n\t    value: function additionalItems() {\n\t      var _schema2 = this.schema,\n\t          items = _schema2.items,\n\t          additionalItems = _schema2.additionalItems,\n\t          address = this.address;\n\t\n\t      var block = '';\n\t\n\t      if (additionalItems === false && Array.isArray(items)) {\n\t        block += '\\n        // don\\'t allow additional items\\n        if (value.length > ' + items.length + ') {\\n          valid = false\\n          errors.push({\\n            keyword: \\'additionalItems\\',\\n            message: \\'additional items not allowed\\'\\n          })\\n        }\\n      ';\n\t      }\n\t\n\t      if ((typeof additionalItems === 'undefined' ? 'undefined' : _typeof(additionalItems)) === 'object' && additionalItems !== null && Array.isArray(items)) {\n\t        var subschema = additionalItems;\n\t        var validator = new Validator(subschema);\n\t\n\t        block += '\\n        // additional items\\n        ' + this.push() + '\\n\\n        for (var i = ' + items.length + '; i <= container.length; i++) {\\n          value = container[i]\\n          ' + validator.compile() + '\\n        }\\n\\n        ' + this.pop() + '\\n      ';\n\t      }\n\t\n\t      return block;\n\t    }\n\t\n\t    /**\n\t     * Items\n\t     *\n\t     * @description\n\t     * > Successful validation of an array instance with regards to these two\n\t     * > keywords is determined as follows: if \"items\" is not present, or its\n\t     * > value is an object, validation of the instance always succeeds,\n\t     * > regardless of the value of \"additionalItems\"; if the value of\n\t     * > \"additionalItems\" is boolean value true or an object, validation of\n\t     * > the instance always succeeds; if the value of \"additionalItems\" is\n\t     * > boolean value false and the value of \"items\" is an array, the\n\t     * > instance is valid if its size is less than, or equal to, the size\n\t     * > of \"items\".\n\t     * > JSON Schema Validation Section 5.3.1\n\t     *\n\t     * Code to generate\n\t     *\n\t     *     // this outer conditional is generated by this.array()\n\t     *     if (Array.isArray(value) {\n\t     *       let parent = value\n\t     *       for (let i = 0; i < parent.length; i++) {\n\t     *         value = parent[i]\n\t     *         // other validation code depending on value here\n\t     *       }\n\t     *       value = parent\n\t     *     }\n\t     *\n\t     *\n\t     * @returns {string}\n\t     */\n\t\n\t  }, {\n\t    key: 'items',\n\t    value: function items() {\n\t      var items = this.schema.items,\n\t          address = this.address;\n\t\n\t      var block = '';\n\t\n\t      // if items is an array\n\t      if (Array.isArray(items)) {\n\t        block += this.push();\n\t\n\t        items.forEach(function (item, index) {\n\t          var subschema = item;\n\t          var validator = new Validator(subschema, { address: address + '[' + index + ']' });\n\t\n\t          block += '\\n          // item #' + index + '\\n          value = container[' + index + ']\\n          ' + validator.compile() + '\\n        ';\n\t        });\n\t\n\t        block += this.pop();\n\t\n\t        // if items is an object\n\t      } else if ((typeof items === 'undefined' ? 'undefined' : _typeof(items)) === 'object' && items !== null) {\n\t        var subschema = items;\n\t        var validator = new Validator(subschema);\n\t\n\t        block += '\\n        // items\\n        ' + this.push() + '\\n\\n        for (var i = 0; i < container.length; i++) {\\n          // read array element\\n          value = container[i]\\n          ' + validator.compile() + '\\n        }\\n\\n        ' + this.pop() + '\\n      ';\n\t      }\n\t\n\t      return block;\n\t    }\n\t\n\t    /**\n\t     * minItems\n\t     *\n\t     * @description\n\t     * > An array instance is valid against \"minItems\" if its size is greater\n\t     * > than, or equal to, the value of this keyword.\n\t     * > JSON Schema Validation Section 5.3.3\n\t     *\n\t     * @returns {string}\n\t     */\n\t\n\t  }, {\n\t    key: 'minItems',\n\t    value: function minItems() {\n\t      var minItems = this.schema.minItems,\n\t          address = this.address;\n\t\n\t\n\t      return '\\n        // ' + address + ' min items\\n        if (value.length < ' + minItems + ') {\\n          valid = false\\n          errors.push({\\n            keyword: \\'minItems\\',\\n            message: \\'too few properties\\'\\n          })\\n        }\\n    ';\n\t    }\n\t\n\t    /**\n\t     * maxItems\n\t     *\n\t     * @description\n\t     * > An array instance is valid against \"maxItems\" if its size is less\n\t     * > than, or equal to, the value of this keyword.\n\t     * > JSON Schema Validation Section 5.3.2\n\t     *\n\t     * @returns {string}\n\t     */\n\t\n\t  }, {\n\t    key: 'maxItems',\n\t    value: function maxItems() {\n\t      var maxItems = this.schema.maxItems,\n\t          address = this.address;\n\t\n\t\n\t      return '\\n        // ' + address + ' max items\\n        if (value.length > ' + maxItems + ') {\\n          valid = false\\n          errors.push({\\n            keyword: \\'maxItems\\',\\n            message: \\'too many properties\\'\\n          })\\n        }\\n    ';\n\t    }\n\t\n\t    /**\n\t     * uniqueItems\n\t     *\n\t     * @description\n\t     * > If this keyword has boolean value false, the instance validates\n\t     * > successfully. If it has boolean value true, the instance validates\n\t     * > successfully if all of its elements are unique.\n\t     * > JSON Schema Validation Section 5.3.4\n\t     *\n\t     * TODO\n\t     * optimize\n\t     *\n\t     * @returns {string}\n\t     */\n\t\n\t  }, {\n\t    key: 'uniqueItems',\n\t    value: function uniqueItems() {\n\t      var uniqueItems = this.schema.uniqueItems,\n\t          address = this.address;\n\t\n\t      var block = '';\n\t\n\t      if (uniqueItems === true) {\n\t        block += '\\n        // validate ' + address + ' unique items\\n        let values = value.map(v => JSON.stringify(v)) // TODO: optimize\\n        let set = new Set(values)\\n        if (values.length !== set.size) {\\n          valid = false\\n          errors.push({\\n            keyword: \\'uniqueItems\\',\\n            message: \\'items must be unique\\'\\n          })\\n        }\\n      ';\n\t      }\n\t\n\t      return block;\n\t    }\n\t\n\t    /**\n\t     * minLength\n\t     *\n\t     * @description\n\t     * > A string instance is valid against this keyword if its length is\n\t     * > greater than, or equal to, the value of this keyword. The length of\n\t     * > a string instance is defined as the number of its characters as\n\t     * > defined by RFC 4627 [RFC4627].\n\t     * > JSON Schema Validation Section 5.2.2\n\t     *\n\t     * @returns {string}\n\t     */\n\t\n\t  }, {\n\t    key: 'minLength',\n\t    value: function minLength() {\n\t      var minLength = this.schema.minLength,\n\t          address = this.address;\n\t\n\t\n\t      return '\\n        // ' + address + ' validate minLength\\n        if (Array.from(value).length < ' + minLength + ') {\\n          valid = false\\n          errors.push({\\n            keyword: \\'minLength\\',\\n            message: \\'too short\\'\\n          })\\n        }\\n    ';\n\t    }\n\t\n\t    /**\n\t     * maxLength\n\t     *\n\t     * @description\n\t     * > A string instance is valid against this keyword if its length is less\n\t     * > than, or equal to, the value of this keyword. The length of a string\n\t     * > instance is defined as the number of its characters as defined by\n\t     * > RFC 4627 [RFC4627].\n\t     * > JSON Schema Validation Section 5.2.1\n\t     *\n\t     * @returns {string}\n\t     */\n\t\n\t  }, {\n\t    key: 'maxLength',\n\t    value: function maxLength() {\n\t      var maxLength = this.schema.maxLength,\n\t          address = this.address;\n\t\n\t\n\t      return '\\n        // ' + address + ' validate maxLength\\n        if (Array.from(value).length > ' + maxLength + ') {\\n          valid = false\\n          errors.push({\\n            keyword: \\'maxLength\\',\\n            message: \\'too long\\'\\n          })\\n        }\\n    ';\n\t    }\n\t\n\t    /**\n\t     * Pattern\n\t     *\n\t     * @description\n\t     * > A string instance is considered valid if the regular expression\n\t     * > matches the instance successfully.\n\t     * > JSON Schema Validation Section 5.2.3\n\t     *\n\t     * @returns {string}\n\t     */\n\t\n\t  }, {\n\t    key: 'pattern',\n\t    value: function pattern() {\n\t      var pattern = this.schema.pattern,\n\t          address = this.address;\n\t\n\t\n\t      if (pattern) {\n\t        return '\\n          // ' + address + ' validate pattern\\n          if (!value.match(new RegExp(\\'' + pattern + '\\'))) {\\n            valid = false\\n            errors.push({\\n              keyword: \\'pattern\\',\\n              message: \\'does not match the required pattern\\'\\n            })\\n          }\\n      ';\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Format\n\t     *\n\t     * @description\n\t     * > Structural validation alone may be insufficient to validate that\n\t     * > an instance meets all the requirements of an application. The\n\t     * > \"format\" keyword is defined to allow interoperable semantic\n\t     * > validation for a fixed subset of values which are accurately\n\t     * > described by authoritative resources, be they RFCs or other\n\t     * > external specifications.\n\t     * > JSON Schema Validation Section 7.1\n\t     *\n\t     * @returns {string}\n\t     */\n\t\n\t  }, {\n\t    key: 'format',\n\t    value: function format() {\n\t      var format = this.schema.format,\n\t          address = this.address;\n\t\n\t      var matcher = formats.resolve(format);\n\t\n\t      if (matcher) {\n\t        return '\\n      // ' + address + ' validate format\\n      if (!value.match(' + matcher + ')) {\\n        valid = false\\n        errors.push({\\n          keyword: \\'format\\',\\n          message: \\'is not \"' + format + '\" format\\'\\n        })\\n      }\\n      ';\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Minimum\n\t     *\n\t     * @description\n\t     * > Successful validation depends on the presence and value of\n\t     * > \"exclusiveMinimum\": if \"exclusiveMinimum\" is not present, or has\n\t     * > boolean value false, then the instance is valid if it is greater\n\t     * > than, or equal to, the value of \"minimum\"; if \"exclusiveMinimum\" is\n\t     * > present and has boolean value true, the instance is valid if it is\n\t     * > strictly greater than the value of \"minimum\".\n\t     * > JSON Schema Validation Section 5.1.3\n\t     *\n\t     * @returns {string}\n\t     */\n\t\n\t  }, {\n\t    key: 'minimum',\n\t    value: function minimum() {\n\t      var _schema3 = this.schema,\n\t          minimum = _schema3.minimum,\n\t          exclusiveMinimum = _schema3.exclusiveMinimum,\n\t          address = this.address;\n\t\n\t      var operator = exclusiveMinimum === true ? '<=' : '<';\n\t\n\t      return '\\n        // ' + address + ' validate minimum\\n        if (value ' + operator + ' ' + minimum + ') {\\n          valid = false\\n          errors.push({\\n            keyword: \\'minimum\\',\\n            message: \\'too small\\'\\n          })\\n        }\\n    ';\n\t    }\n\t\n\t    /**\n\t     * Maximum\n\t     *\n\t     * @description\n\t     * > Successful validation depends on the presence and value of\n\t     * > \"exclusiveMaximum\": if \"exclusiveMaximum\" is not present, or has\n\t     * > boolean value false, then the instance is valid if it is lower than,\n\t     * > or equal to, the value of \"maximum\"; if \"exclusiveMaximum\" has\n\t     * > boolean value true, the instance is valid if it is strictly lower\n\t     * > than the value of \"maximum\".\n\t     * > JSON Schema Validation Section 5.1.2\n\t     *\n\t     * @returns {string}\n\t     */\n\t\n\t  }, {\n\t    key: 'maximum',\n\t    value: function maximum() {\n\t      var _schema4 = this.schema,\n\t          maximum = _schema4.maximum,\n\t          exclusiveMaximum = _schema4.exclusiveMaximum,\n\t          address = this.address;\n\t\n\t      var operator = exclusiveMaximum === true ? '>=' : '>';\n\t\n\t      return '\\n        // ' + address + ' validate maximum\\n        if (value ' + operator + ' ' + maximum + ') {\\n          valid = false\\n          errors.push({\\n            keyword: \\'maximum\\',\\n            message: \\'too large\\'\\n          })\\n        }\\n    ';\n\t    }\n\t\n\t    /**\n\t     * multipleOf\n\t     *\n\t     * @description\n\t     * > A numeric instance is valid against \"multipleOf\" if the result of\n\t     * > the division of the instance by this keyword's value is an integer.\n\t     * > JSON Schema Validation Section 5.1.1\n\t     *\n\t     * @returns {string}\n\t     */\n\t\n\t  }, {\n\t    key: 'multipleOf',\n\t    value: function multipleOf() {\n\t      var multipleOf = this.schema.multipleOf;\n\t\n\t      var block = '';\n\t\n\t      if (typeof multipleOf === 'number') {\n\t        var length = multipleOf.toString().length;\n\t        var decimals = length - multipleOf.toFixed(0).length - 1;\n\t        var pow = decimals > 0 ? Math.pow(10, decimals) : 1;\n\t        var condition = void 0;\n\t\n\t        if (decimals > 0) {\n\t          condition = '(value * ' + pow + ') % ' + multipleOf * pow + ' !== 0';\n\t        } else {\n\t          condition = 'value % ' + multipleOf + ' !== 0';\n\t        }\n\t\n\t        block += '\\n        if (' + condition + ') {\\n          valid = false\\n          errors.push({\\n            keyword: \\'multipleOf\\',\\n            message: \\'must be a multiple of ' + multipleOf + '\\'\\n          })\\n        }\\n      ';\n\t      }\n\t\n\t      return block;\n\t    }\n\t  }]);\n\t\n\t  return Validator;\n\t}();\n\t\n\t/**\n\t * Export\n\t */\n\t\n\t\n\tmodule.exports = Validator;\n\n/***/ },\n/* 103 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\n\t * @module JSON Object Signing and Encryption (JOSE)\n\t */\n\tvar JWA = __webpack_require__(104);\n\tvar JWK = __webpack_require__(116);\n\tvar JWKSet = __webpack_require__(119);\n\tvar JWT = __webpack_require__(121);\n\tvar JWS = __webpack_require__(126);\n\tvar Base64URLSchema = __webpack_require__(123);\n\tvar JOSEHeaderSchema = __webpack_require__(125);\n\tvar JWKSchema = __webpack_require__(117);\n\tvar JWKSetSchema = __webpack_require__(120);\n\tvar JWTClaimsSetSchema = __webpack_require__(124);\n\tvar JWTSchema = __webpack_require__(122);\n\t\n\t/**\n\t * Export\n\t */\n\tmodule.exports = {\n\t  JWA: JWA,\n\t  JWK: JWK,\n\t  JWKSet: JWKSet,\n\t  JWT: JWT,\n\t  JWS: JWS,\n\t  Base64URLSchema: Base64URLSchema,\n\t  JOSEHeaderSchema: JOSEHeaderSchema,\n\t  JWKSchema: JWKSchema,\n\t  JWKSetSchema: JWKSetSchema,\n\t  JWTClaimsSetSchema: JWTClaimsSetSchema,\n\t  JWTSchema: JWTSchema\n\t};\n\n/***/ },\n/* 104 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * Dependencies\n\t *\n\t * TODO\n\t * - switch between Node.js webcrypto package and browser implementation\n\t */\n\tvar base64url = __webpack_require__(105);\n\tvar supportedAlgorithms = __webpack_require__(106);\n\t\n\tvar _require = __webpack_require__(114),\n\t    NotSupportedError = _require.NotSupportedError;\n\t\n\t/**\n\t * JWA\n\t * https://tools.ietf.org/html/rfc7518\n\t */\n\t\n\t\n\tvar JWA = function () {\n\t  function JWA() {\n\t    _classCallCheck(this, JWA);\n\t  }\n\t\n\t  _createClass(JWA, null, [{\n\t    key: 'sign',\n\t\n\t\n\t    /**\n\t     * Sign\n\t     *\n\t     * @description\n\t     * Create a digital signature.\n\t     *\n\t     * @param {string} alg\n\t     * @param {CryptoKey} key\n\t     * @param {string|Buffer} data\n\t     *\n\t     * @return {Promise}\n\t     */\n\t    value: function sign(alg, key, data) {\n\t      // normalize the algorithm\n\t      var normalizedAlgorithm = supportedAlgorithms.normalize('sign', alg);\n\t\n\t      // validate algorithm is supported\n\t      if (normalizedAlgorithm instanceof Error) {\n\t        return Promise.reject(new NotSupportedError(alg));\n\t      }\n\t\n\t      // validate type of key\n\t      // TODO\n\t      //  - is the key suitable for the algorithm?\n\t      //  - does that get validated in webcrypto?\n\t      //if (key instanceof CryptoKey) {\n\t      //  return Promise.reject(new InvalidKeyError())\n\t      //}\n\t\n\t      // sign the data\n\t      return normalizedAlgorithm.sign(key, data);\n\t    }\n\t\n\t    /**\n\t     * Verify\n\t     *\n\t     * @description\n\t     * Verify a digital signature.\n\t     *\n\t     * @param {string} alg\n\t     * @param {CryptoKey} privateKey\n\t     * @param {string|Buffer} signature\n\t     * @param {string|Buffer} data\n\t     *\n\t     * @return {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'verify',\n\t    value: function verify(alg, key, signature, data) {\n\t      var normalizedAlgorithm = supportedAlgorithms.normalize('verify', alg);\n\t\n\t      if (normalizedAlgorithm instanceof Error) {\n\t        return Promise.reject(new NotSupportedError(alg));\n\t      }\n\t\n\t      // TODO\n\t      // validate publicKey\n\t\n\t      // verify the signature\n\t      return normalizedAlgorithm.verify(key, signature, data);\n\t    }\n\t\n\t    /**\n\t     * Encrypt\n\t     */\n\t\n\t    /**\n\t     * Decrypt\n\t     */\n\t\n\t    /**\n\t     * Import\n\t     */\n\t\n\t  }, {\n\t    key: 'importKey',\n\t    value: function importKey(key) {\n\t      var normalizedAlgorithm = supportedAlgorithms.normalize('importKey', key.alg);\n\t      return normalizedAlgorithm.importKey(key);\n\t    }\n\t  }]);\n\t\n\t  return JWA;\n\t}();\n\t\n\t/**\n\t * Export\n\t */\n\t\n\t\n\tmodule.exports = JWA;\n\n/***/ },\n/* 105 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer) {function fromBase64(base64string) {\n\t  return (\n\t    base64string\n\t      .replace(/=/g, '')\n\t      .replace(/\\+/g, '-')\n\t      .replace(/\\//g, '_')\n\t  );\n\t}\n\t\n\tfunction toBase64(base64UrlString) {\n\t  if (Buffer.isBuffer(base64UrlString))\n\t    base64UrlString = base64UrlString.toString();\n\t\n\t  var b64str = padString(base64UrlString)\n\t    .replace(/\\-/g, '+')\n\t    .replace(/_/g, '/');\n\t  return b64str;\n\t}\n\t\n\tfunction padString(string) {\n\t  var segmentLength = 4;\n\t  var stringLength = string.length;\n\t  var diff = string.length % segmentLength;\n\t  if (!diff)\n\t    return string;\n\t  var position = stringLength;\n\t  var padLength = segmentLength - diff;\n\t  var paddedStringLength = stringLength + padLength;\n\t  var buffer = Buffer(paddedStringLength);\n\t  buffer.write(string);\n\t  while (padLength--)\n\t    buffer.write('=', position++);\n\t  return buffer.toString();\n\t}\n\t\n\tfunction decodeBase64Url(base64UrlString, encoding) {\n\t  return Buffer(toBase64(base64UrlString), 'base64').toString(encoding);\n\t}\n\t\n\tfunction base64url(stringOrBuffer, encoding) {\n\t  return fromBase64(Buffer(stringOrBuffer, encoding).toString('base64'));\n\t}\n\t\n\tfunction toBuffer(base64string) {\n\t  return Buffer(toBase64(base64string), 'base64');\n\t}\n\t\n\tbase64url.toBase64 = toBase64;\n\tbase64url.fromBase64 = fromBase64;\n\tbase64url.decode = decodeBase64Url;\n\tbase64url.encode = base64url;\n\tbase64url.toBuffer = toBuffer;\n\t\n\tmodule.exports = base64url;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(47).Buffer))\n\n/***/ },\n/* 106 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\n\t * Local dependencies\n\t */\n\tvar HMAC = __webpack_require__(107);\n\tvar RSASSA_PKCS1_v1_5 = __webpack_require__(111);\n\tvar SupportedAlgorithms = __webpack_require__(112);\n\t\n\t/**\n\t * Register Supported Algorithms\n\t */\n\tvar supportedAlgorithms = new SupportedAlgorithms();\n\t\n\t/**\n\t * Sign\n\t */\n\tsupportedAlgorithms.define('HS256', 'sign', new HMAC({\n\t  name: 'HMAC',\n\t  hash: {\n\t    name: 'SHA-256'\n\t  }\n\t}));\n\t\n\tsupportedAlgorithms.define('HS384', 'sign', new HMAC({\n\t  name: 'HMAC',\n\t  hash: {\n\t    name: 'SHA-384'\n\t  }\n\t}));\n\t\n\tsupportedAlgorithms.define('HS512', 'sign', new HMAC({\n\t  name: 'HMAC',\n\t  hash: {\n\t    name: 'SHA-512'\n\t  }\n\t}));\n\t\n\tsupportedAlgorithms.define('RS256', 'sign', new RSASSA_PKCS1_v1_5({\n\t  name: 'RSASSA-PKCS1-v1_5',\n\t  hash: {\n\t    name: 'SHA-256'\n\t  }\n\t}));\n\t\n\tsupportedAlgorithms.define('RS384', 'sign', new RSASSA_PKCS1_v1_5({\n\t  name: 'RSASSA-PKCS1-v1_5',\n\t  hash: {\n\t    name: 'SHA-384'\n\t  }\n\t}));\n\t\n\tsupportedAlgorithms.define('RS512', 'sign', new RSASSA_PKCS1_v1_5({\n\t  name: 'RSASSA-PKCS1-v1_5',\n\t  hash: {\n\t    name: 'SHA-512'\n\t  }\n\t}));\n\t//supportedAlgorithms.define('ES256', 'sign', {})\n\t//supportedAlgorithms.define('ES384', 'sign', {})\n\t//supportedAlgorithms.define('ES512', 'sign', {})\n\t//supportedAlgorithms.define('PS256', 'sign', {})\n\t//supportedAlgorithms.define('PS384', 'sign', {})\n\t//supportedAlgorithms.define('PS512', 'sign', {})\n\tsupportedAlgorithms.define('none', 'sign', {});\n\t\n\t/**\n\t * Verify\n\t */\n\tsupportedAlgorithms.define('HS256', 'verify', new HMAC({\n\t  name: 'HMAC',\n\t  hash: {\n\t    name: 'SHA-256'\n\t  }\n\t}));\n\t\n\tsupportedAlgorithms.define('HS384', 'verify', new HMAC({\n\t  name: 'HMAC',\n\t  hash: {\n\t    name: 'SHA-384'\n\t  }\n\t}));\n\t\n\tsupportedAlgorithms.define('HS512', 'verify', new HMAC({\n\t  name: 'HMAC',\n\t  hash: {\n\t    name: 'SHA-512'\n\t  }\n\t}));\n\t\n\tsupportedAlgorithms.define('RS256', 'verify', new RSASSA_PKCS1_v1_5({\n\t  name: 'RSASSA-PKCS1-v1_5',\n\t  hash: {\n\t    name: 'SHA-256'\n\t  }\n\t}));\n\t\n\tsupportedAlgorithms.define('RS384', 'verify', new RSASSA_PKCS1_v1_5({\n\t  name: 'RSASSA-PKCS1-v1_5',\n\t  hash: {\n\t    name: 'SHA-384'\n\t  }\n\t}));\n\t\n\tsupportedAlgorithms.define('RS512', 'verify', new RSASSA_PKCS1_v1_5({\n\t  name: 'RSASSA-PKCS1-v1_5',\n\t  hash: {\n\t    name: 'SHA-512'\n\t  }\n\t}));\n\t//supportedAlgorithms.define('ES256', 'verify', {})\n\t//supportedAlgorithms.define('ES384', 'verify', {})\n\t//supportedAlgorithms.define('ES512', 'verify', {})\n\t//supportedAlgorithms.define('PS256', 'verify', {})\n\t//supportedAlgorithms.define('PS384', 'verify', {})\n\t//supportedAlgorithms.define('PS512', 'verify', {})\n\tsupportedAlgorithms.define('none', 'verify', {});\n\t\n\tsupportedAlgorithms.define('RS256', 'importKey', new RSASSA_PKCS1_v1_5({\n\t  name: 'RSASSA-PKCS1-v1_5',\n\t  hash: {\n\t    name: 'SHA-256'\n\t  }\n\t}));\n\t\n\tsupportedAlgorithms.define('RS384', 'importKey', new RSASSA_PKCS1_v1_5({\n\t  name: 'RSASSA-PKCS1-v1_5',\n\t  hash: {\n\t    name: 'SHA-384'\n\t  }\n\t}));\n\t\n\tsupportedAlgorithms.define('RS512', 'importKey', new RSASSA_PKCS1_v1_5({\n\t  name: 'RSASSA-PKCS1-v1_5',\n\t  hash: {\n\t    name: 'SHA-512'\n\t  }\n\t}));\n\t\n\t/**\n\t * Export\n\t */\n\tmodule.exports = supportedAlgorithms;\n\n/***/ },\n/* 107 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer) {'use strict';\n\t\n\t/**\n\t * Dependencies\n\t * @ignore\n\t */\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar base64url = __webpack_require__(105);\n\tvar crypto = __webpack_require__(108);\n\tvar TextEncoder = __webpack_require__(109);\n\t\n\t/**\n\t * HMAC with SHA-2 Functions\n\t */\n\t\n\tvar HMAC = function () {\n\t\n\t  /**\n\t   * Constructor\n\t   *\n\t   * @param {string} bitlength\n\t   */\n\t  function HMAC(params) {\n\t    _classCallCheck(this, HMAC);\n\t\n\t    this.params = params;\n\t  }\n\t\n\t  /**\n\t   * Sign\n\t   *\n\t   * @description\n\t   * Generate a hash-based message authentication code for a\n\t   * given input and key. Enforce the key length is equal to\n\t   * or greater than the bitlength.\n\t   *\n\t   * @param {CryptoKey} key\n\t   * @param {string} data\n\t   *\n\t   * @returns {string}\n\t   */\n\t\n\t\n\t  _createClass(HMAC, [{\n\t    key: 'sign',\n\t    value: function sign(key, data) {\n\t      var algorithm = this.params;\n\t\n\t      // TODO: validate key length\n\t\n\t      data = new TextEncoder().encode(data);\n\t\n\t      return crypto.subtle.sign(algorithm, key, data).then(function (signature) {\n\t        return base64url(Buffer.from(signature));\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Verify\n\t     *\n\t     * @description\n\t     * Verify a digital signature for a given input and private key.\n\t     *\n\t     * @param {CryptoKey} key\n\t     * @param {string} signature\n\t     * @param {string} data\n\t     *\n\t     * @returns {Boolean}\n\t     */\n\t\n\t  }, {\n\t    key: 'verify',\n\t    value: function verify(key, signature, data) {\n\t      var algorithm = this.params;\n\t\n\t      if (typeof signature === 'string') {\n\t        signature = Uint8Array.from(base64url.toBuffer(signature));\n\t      }\n\t\n\t      if (typeof data === 'string') {\n\t        data = new TextEncoder().encode(data);\n\t      }\n\t\n\t      return crypto.subtle.verify(algorithm, key, signature, data);\n\t    }\n\t\n\t    /**\n\t     * Assert Sufficient Key Length\n\t     *\n\t     * @description Assert that the key length is sufficient\n\t     * @param {string} key\n\t     */\n\t\n\t  }, {\n\t    key: 'assertSufficientKeyLength',\n\t    value: function assertSufficientKeyLength(key) {\n\t      if (key.length < this.bitlength) {\n\t        throw new Error('The key is too short.');\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return HMAC;\n\t}();\n\t\n\t/**\n\t * Export\n\t */\n\t\n\t\n\tmodule.exports = HMAC;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(47).Buffer))\n\n/***/ },\n/* 108 */\n/***/ function(module, exports) {\n\n\tmodule.exports = crypto;\n\n/***/ },\n/* 109 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\tvar TextEncoder = global.TextEncoder ? global.TextEncoder // browser\n\t: __webpack_require__(110).TextEncoder; // node shim\n\tmodule.exports = TextEncoder;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 110 */\n/***/ function(module, exports) {\n\n\tmodule.exports = TextEncoder;\n\n/***/ },\n/* 111 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer) {'use strict';\n\t\n\t/**\n\t * Dependencies\n\t * @ignore\n\t */\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar base64url = __webpack_require__(105);\n\tvar crypto = __webpack_require__(108);\n\tvar TextEncoder = __webpack_require__(109);\n\t\n\t/**\n\t * RSASSA-PKCS1-v1_5\n\t */\n\t\n\tvar RSASSA_PKCS1_v1_5 = function () {\n\t\n\t  /**\n\t   * constructor\n\t   *\n\t   * @param {string} bitlength\n\t   */\n\t  function RSASSA_PKCS1_v1_5(params) {\n\t    _classCallCheck(this, RSASSA_PKCS1_v1_5);\n\t\n\t    this.params = params;\n\t  }\n\t\n\t  /**\n\t   * sign\n\t   *\n\t   * @description\n\t   * Generate a digital signature for a given input and private key.\n\t   *\n\t   * @param {CryptoKey} key\n\t   * @param {BufferSource} data\n\t   *\n\t   * @returns {Promise}\n\t   */\n\t\n\t\n\t  _createClass(RSASSA_PKCS1_v1_5, [{\n\t    key: 'sign',\n\t    value: function sign(key, data) {\n\t      var algorithm = this.params;\n\t\n\t      // TODO\n\t      //if (!this.sufficientKeySize()) {\n\t      //  return Promise.reject(\n\t      //    new Error(\n\t      //      'A key size of 2048 bits or larger must be used with RSASSA-PKCS1-v1_5'\n\t      //    )\n\t      //  )\n\t      //}\n\t\n\t      data = new TextEncoder().encode(data);\n\t\n\t      return crypto.subtle.sign(algorithm, key, data).then(function (signature) {\n\t        return base64url(Buffer.from(signature));\n\t      });\n\t    }\n\t\n\t    /**\n\t     * verify\n\t     *\n\t     * @description\n\t     * Verify a digital signature for a given input and private key.\n\t     *\n\t     * @param {CryptoKey} key\n\t     * @param {BufferSource} signature\n\t     * @param {BufferSource} data\n\t     *\n\t     * @returns {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'verify',\n\t    value: function verify(key, signature, data) {\n\t      var algorithm = this.params;\n\t\n\t      if (typeof signature === 'string') {\n\t        signature = Uint8Array.from(base64url.toBuffer(signature));\n\t      }\n\t\n\t      if (typeof data === 'string') {\n\t        data = new TextEncoder().encode(data);\n\t      }\n\t      // ...\n\t\n\t      return crypto.subtle.verify(algorithm, key, signature, data);\n\t    }\n\t\n\t    /**\n\t     * importKey\n\t     *\n\t     * @param {JWK} key\n\t     * @returns {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'importKey',\n\t    value: function importKey(key) {\n\t      var jwk = Object.assign({}, key);\n\t      var algorithm = this.params;\n\t      var usages = key['key_ops'] || [];\n\t\n\t      if (key.use === 'sig') {\n\t        usages.push('verify');\n\t      }\n\t\n\t      if (key.use === 'enc') {\n\t        // TODO: handle encryption keys\n\t        return Promise.resolve(key);\n\t      }\n\t\n\t      if (key.key_ops) {\n\t        usages = key.key_ops;\n\t      }\n\t\n\t      return crypto.subtle.importKey('jwk', jwk, algorithm, true, usages).then(function (cryptoKey) {\n\t        Object.defineProperty(jwk, 'cryptoKey', {\n\t          enumerable: false,\n\t          value: cryptoKey\n\t        });\n\t\n\t        return jwk;\n\t      });\n\t    }\n\t  }]);\n\t\n\t  return RSASSA_PKCS1_v1_5;\n\t}();\n\t\n\t/**\n\t * Export\n\t */\n\t\n\t\n\tmodule.exports = RSASSA_PKCS1_v1_5;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(47).Buffer))\n\n/***/ },\n/* 112 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * Dependencies\n\t */\n\tvar NotSupportedError = __webpack_require__(113);\n\t\n\t/**\n\t * Operations\n\t */\n\tvar operations = ['sign', 'verify', 'encrypt', 'decrypt', 'importKey'];\n\t\n\t/**\n\t * SupportedAlgorithms\n\t */\n\t\n\tvar SupportedAlgorithms = function () {\n\t\n\t  /**\n\t   * constructor\n\t   */\n\t  function SupportedAlgorithms() {\n\t    var _this = this;\n\t\n\t    _classCallCheck(this, SupportedAlgorithms);\n\t\n\t    operations.forEach(function (op) {\n\t      _this[op] = {};\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Supported Operations\n\t   */\n\t\n\t\n\t  _createClass(SupportedAlgorithms, [{\n\t    key: 'define',\n\t\n\t\n\t    /**\n\t     * define\n\t     *\n\t     * @description\n\t     * Register Web Crypto API algorithm parameter for an algorithm\n\t     * and operation.\n\t     *\n\t     * @param {string} alg\n\t     * @param {string} op\n\t     * @param {Object} argument\n\t     */\n\t    value: function define(alg, op, argument) {\n\t      var registeredAlgorithms = this[op];\n\t      registeredAlgorithms[alg] = argument;\n\t    }\n\t\n\t    /**\n\t     * normalize\n\t     *\n\t     * @description\n\t     * Map JWA alg name to Web Crypto API algorithm parameter\n\t     *\n\t     * @param {string} op\n\t     * @param {Object} alg\n\t     *\n\t     * @returns {Object}\n\t     */\n\t\n\t  }, {\n\t    key: 'normalize',\n\t    value: function normalize(op, alg) {\n\t      var registeredAlgorithms = this[op];\n\t\n\t      if (!registeredAlgorithms) {\n\t        return new SyntaxError(); // what kind of error should this be?\n\t      }\n\t\n\t      var argument = registeredAlgorithms[alg];\n\t\n\t      if (!argument) {\n\t        return new NotSupportedError(alg);\n\t      }\n\t\n\t      return argument;\n\t    }\n\t  }], [{\n\t    key: 'operations',\n\t    get: function get() {\n\t      return operations;\n\t    }\n\t  }]);\n\t\n\t  return SupportedAlgorithms;\n\t}();\n\t\n\t/**\n\t * Export\n\t */\n\t\n\t\n\tmodule.exports = SupportedAlgorithms;\n\n/***/ },\n/* 113 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * NotSupportedError\n\t */\n\tvar NotSupportedError = function (_Error) {\n\t  _inherits(NotSupportedError, _Error);\n\t\n\t  function NotSupportedError(alg) {\n\t    _classCallCheck(this, NotSupportedError);\n\t\n\t    var _this = _possibleConstructorReturn(this, (NotSupportedError.__proto__ || Object.getPrototypeOf(NotSupportedError)).call(this));\n\t\n\t    _this.message = alg + \" is not a supported algorithm\";\n\t    return _this;\n\t  }\n\t\n\t  return NotSupportedError;\n\t}(Error);\n\t\n\t/**\n\t * Export\n\t */\n\t\n\t\n\tmodule.exports = NotSupportedError;\n\n/***/ },\n/* 114 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tmodule.exports = {\n\t  DataError: __webpack_require__(115),\n\t  NotSupportedError: __webpack_require__(113)\n\t};\n\n/***/ },\n/* 115 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * DataError\n\t */\n\tvar DataError = function (_Error) {\n\t  _inherits(DataError, _Error);\n\t\n\t  function DataError(message) {\n\t    _classCallCheck(this, DataError);\n\t\n\t    return _possibleConstructorReturn(this, (DataError.__proto__ || Object.getPrototypeOf(DataError)).call(this, message));\n\t  }\n\t\n\t  return DataError;\n\t}(Error);\n\t\n\t/**\n\t * Export\n\t */\n\t\n\t\n\tmodule.exports = DataError;\n\n/***/ },\n/* 116 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\n\t * Dependencies\n\t * @ignore\n\t */\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _require = __webpack_require__(94),\n\t    JSONDocument = _require.JSONDocument;\n\t\n\tvar JWKSchema = __webpack_require__(117);\n\tvar JWA = __webpack_require__(104);\n\t\n\t/**\n\t * JWK Class\n\t */\n\t\n\tvar JWK = function (_JSONDocument) {\n\t  _inherits(JWK, _JSONDocument);\n\t\n\t  function JWK() {\n\t    _classCallCheck(this, JWK);\n\t\n\t    return _possibleConstructorReturn(this, (JWK.__proto__ || Object.getPrototypeOf(JWK)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(JWK, null, [{\n\t    key: 'importKey',\n\t\n\t\n\t    /**\n\t     * importKey\n\t     *\n\t     * TODO:\n\t     * - should this be on JWA?\n\t     */\n\t    value: function importKey(jwk) {\n\t      return JWA.importKey(jwk);\n\t    }\n\t  }, {\n\t    key: 'schema',\n\t\n\t\n\t    /**\n\t     * Schema\n\t     */\n\t    get: function get() {\n\t      return JWKSchema;\n\t    }\n\t  }]);\n\t\n\t  return JWK;\n\t}(JSONDocument);\n\t\n\t/**\n\t * Export\n\t */\n\t\n\t\n\tmodule.exports = JWK;\n\n/***/ },\n/* 117 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\n\t * Dependencies\n\t * @ignore\n\t */\n\t\n\tvar _require = __webpack_require__(94),\n\t    JSONSchema = _require.JSONSchema;\n\t\n\tvar _require2 = __webpack_require__(118),\n\t    BASE64_REGEXP = _require2.BASE64_REGEXP;\n\t\n\t/**\n\t * JWK Schema\n\t */\n\t\n\t\n\tvar JWKSchema = new JSONSchema({\n\t  type: 'object',\n\t  properties: {\n\t\n\t    kty: {\n\t      type: 'string',\n\t      //format: 'case-sensitive',\n\t      enum: ['RSA', 'EC', 'oct'] // other values MAY be used\n\t    },\n\t\n\t    use: {\n\t      type: 'string',\n\t      //format: 'case-sensitive',\n\t      enum: ['sig', 'enc'] // other values MAY be used\n\t    },\n\t\n\t    key_ops: {\n\t      type: 'array',\n\t      //format: 'case-sensitive',\n\t      enum: ['sign', 'verify', 'encrypt', 'decrypt', 'wrapKey', 'unwrapKey', 'deriveKey', 'deriveBits'] // other values MAY be used\n\t    },\n\t\n\t    alg: {\n\t      type: 'string',\n\t      //format: 'case-sensitive',\n\t      enum: ['HS256', 'HS384', 'HS512', 'RS256', 'RS384', 'RS512', 'ES256', 'ES384', 'ES512', 'PS256', 'PS384', 'PS512', 'none'] // other values MAY be used\n\t    },\n\t\n\t    kid: {\n\t      type: 'string'\n\t    },\n\t\n\t    x5u: {\n\t      type: 'string'\n\t    },\n\t\n\t    x5c: {\n\t      type: 'array'\n\t    },\n\t\n\t    x5t: {\n\t      type: 'string'\n\t    }\n\t\n\t  }\n\t});\n\t\n\t/**\n\t * Export\n\t */\n\tmodule.exports = JWKSchema;\n\n/***/ },\n/* 118 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\n\t * Package dependencies\n\t */\n\tvar _require = __webpack_require__(94),\n\t    Formats = _require.Formats;\n\t\n\t/**\n\t * Format extensions\n\t */\n\t\n\t\n\tFormats.register('StringOrURI', new RegExp());\n\tFormats.register('NumericDate', new RegExp());\n\tFormats.register('URI', new RegExp());\n\tFormats.register('url', new RegExp());\n\tFormats.register('base64', new RegExp());\n\tFormats.register('base64url', new RegExp());\n\tFormats.register('MediaType', new RegExp());\n\n/***/ },\n/* 119 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\n\t * Dependencies\n\t */\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _require = __webpack_require__(94),\n\t    JSONDocument = _require.JSONDocument;\n\t\n\tvar JWKSetSchema = __webpack_require__(120);\n\tvar JWK = __webpack_require__(116);\n\t\n\t/**\n\t * JWKSet\n\t *\n\t * @class\n\t * JWKSet represents a JSON Web Key Set as described in Section 5 of RFC 7517:\n\t * https://tools.ietf.org/html/rfc7517#section-5\n\t */\n\t\n\tvar JWKSet = function (_JSONDocument) {\n\t  _inherits(JWKSet, _JSONDocument);\n\t\n\t  function JWKSet() {\n\t    _classCallCheck(this, JWKSet);\n\t\n\t    return _possibleConstructorReturn(this, (JWKSet.__proto__ || Object.getPrototypeOf(JWKSet)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(JWKSet, null, [{\n\t    key: 'importKeys',\n\t\n\t\n\t    /**\n\t     * importKeys\n\t     */\n\t    value: function importKeys(jwks) {\n\t      var validation = this.schema.validate(jwks);\n\t\n\t      if (!validation.valid) {\n\t        Promise.reject(validation);\n\t      }\n\t\n\t      var imported = new JWKSet(jwks);\n\t      var importing = jwks.keys.map(function (key) {\n\t        return JWK.importKey(key);\n\t      });\n\t\n\t      return Promise.all(importing).then(function (keys) {\n\t        imported.keys = keys;\n\t        return imported;\n\t      });\n\t    }\n\t  }, {\n\t    key: 'schema',\n\t\n\t\n\t    /**\n\t     * schema\n\t     */\n\t    get: function get() {\n\t      return JWKSetSchema;\n\t    }\n\t  }]);\n\t\n\t  return JWKSet;\n\t}(JSONDocument);\n\t\n\t/**\n\t * Export\n\t */\n\t\n\t\n\tmodule.exports = JWKSet;\n\n/***/ },\n/* 120 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\n\t * Dependencies\n\t */\n\t\n\tvar _require = __webpack_require__(94),\n\t    JSONSchema = _require.JSONSchema;\n\t\n\tvar JWKSchema = __webpack_require__(117);\n\t\n\t/**\n\t * JWKSetSchema\n\t */\n\tvar JWKSetSchema = new JSONSchema({\n\t  type: 'object',\n\t  properties: {\n\t    keys: {\n\t      type: 'array',\n\t      items: JWKSchema\n\t    }\n\t  }\n\t});\n\t\n\t/**\n\t * Export\n\t */\n\tmodule.exports = JWKSetSchema;\n\n/***/ },\n/* 121 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Dependencies\n\t */\n\tvar base64url = __webpack_require__(105);\n\t\n\tvar _require = __webpack_require__(94),\n\t    JSONDocument = _require.JSONDocument;\n\t\n\tvar JWTSchema = __webpack_require__(122);\n\tvar JWS = __webpack_require__(126);\n\tvar DataError = __webpack_require__(115);\n\t\n\t/**\n\t * JWT\n\t */\n\t\n\tvar JWT = function (_JSONDocument) {\n\t  _inherits(JWT, _JSONDocument);\n\t\n\t  function JWT() {\n\t    _classCallCheck(this, JWT);\n\t\n\t    return _possibleConstructorReturn(this, (JWT.__proto__ || Object.getPrototypeOf(JWT)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(JWT, [{\n\t    key: 'isJWE',\n\t\n\t\n\t    /**\n\t     * isJWE\n\t     */\n\t    value: function isJWE() {\n\t      return !!this.header.enc;\n\t    }\n\t\n\t    /**\n\t     * resolveKeys\n\t     * @param jwks {Array<JWK>|JWK|JWKSet}\n\t     * @returns {Boolean}\n\t     */\n\t\n\t  }, {\n\t    key: 'resolveKeys',\n\t    value: function resolveKeys(jwks) {\n\t      var kid = this.header.kid;\n\t      var keys = void 0,\n\t          match = void 0;\n\t\n\t      // treat an array as the \"keys\" property of a JWK Set\n\t      if (Array.isArray(jwks)) {\n\t        keys = jwks;\n\t      }\n\t\n\t      // presence of keys indicates object is a JWK Set\n\t      if (jwks.keys) {\n\t        keys = jwks.keys;\n\t      }\n\t\n\t      // wrap a plain object they is not a JWK Set in Array\n\t      if (!jwks.keys && (typeof jwks === 'undefined' ? 'undefined' : _typeof(jwks)) === 'object') {\n\t        keys = [jwks];\n\t      }\n\t\n\t      // ensure there are keys to search\n\t      if (!keys) {\n\t        throw new DataError('Invalid JWK argument');\n\t      }\n\t\n\t      // match by \"kid\" or \"use\" header\n\t      if (kid) {\n\t        match = keys.find(function (jwk) {\n\t          return jwk.kid === kid;\n\t        });\n\t      } else {\n\t        match = keys.find(function (jwk) {\n\t          return jwk.use === 'sig';\n\t        });\n\t      }\n\t\n\t      // assign matching key to JWT and return a boolean\n\t      if (match) {\n\t        console.log(match);\n\t        this.key = match.cryptoKey;\n\t        return true;\n\t      } else {\n\t        return false;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * encode\n\t     *\n\t     * @description\n\t     * Encode a JWT instance\n\t     *\n\t     * @returns {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'encode',\n\t    value: function encode() {\n\t      // validate\n\t      var validation = this.validate();\n\t\n\t      if (!validation.valid) {\n\t        return Promise.reject(validation);\n\t      }\n\t\n\t      var token = this;\n\t\n\t      if (this.isJWE()) {\n\t        return JWE.encrypt(token);\n\t      } else {\n\t        return JWS.sign(token);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * verify\n\t     *\n\t     * @description\n\t     * Verify a decoded JWT instance\n\t     *\n\t     * @returns {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'verify',\n\t    value: function verify() {\n\t      var validation = this.validate();\n\t\n\t      if (!validation.valid) {\n\t        return Promise.reject(validation);\n\t      }\n\t\n\t      return JWS.verify(this);\n\t    }\n\t  }], [{\n\t    key: 'decode',\n\t\n\t\n\t    /**\n\t     * decode\n\t     *\n\t     * @description\n\t     * Decode a JSON Web Token\n\t     *\n\t     * @param {string} data\n\t     * @returns {JWT}\n\t     */\n\t    value: function decode(data) {\n\t      var ExtendedJWT = this;\n\t      var jwt = void 0;\n\t\n\t      if (typeof data !== 'string') {\n\t        throw new DataError('JWT must be a string');\n\t      }\n\t\n\t      // JSON of Flattened JSON Serialization\n\t      if (data.startsWith('{')) {\n\t        try {\n\t          data = JSON.parse(data, function () {});\n\t        } catch (error) {\n\t          throw new DataError('Invalid JWT serialization');\n\t        }\n\t\n\t        if (data.signatures || data.recipients) {\n\t          data.serialization = 'json';\n\t        } else {\n\t          data.serialization = 'flattened';\n\t        }\n\t\n\t        jwt = new ExtendedJWT(data);\n\t\n\t        // Compact Serialization\n\t      } else {\n\t        try {\n\t          var serialization = 'compact';\n\t          var segments = data.split('.');\n\t          var length = segments.length;\n\t\n\t          if (length !== 3 && length !== 5) {\n\t            throw new Error('Malformed JWT');\n\t          }\n\t\n\t          var header = JSON.parse(base64url.decode(segments[0]));\n\t\n\t          // JSON Web Signature\n\t          if (length === 3) {\n\t            var type = 'JWS';\n\t            var payload = JSON.parse(base64url.decode(segments[1]));\n\t            var signature = segments[2];\n\t\n\t            jwt = new ExtendedJWT({ type: type, segments: segments, header: header, payload: payload, signature: signature, serialization: serialization });\n\t          }\n\t\n\t          // JSON Web Encryption\n\t          if (length === 5) {\n\t            //let type = 'JWE'\n\t            //let [protected, encryption_key, iv, ciphertext, tag] = segments\n\t\n\t            //jwt = new ExtendedJWT({\n\t            //  type,\n\t            //  protected: base64url.decode(JSON.parse(protected)),\n\t            //  encryption_key,\n\t            //  iv,\n\t            //  ciphertext,\n\t            //  tag,\n\t            //  serialization\n\t            //})\n\t          }\n\t        } catch (error) {\n\t          throw new DataError('Invalid JWT compact serialization');\n\t        }\n\t      }\n\t\n\t      return jwt;\n\t    }\n\t\n\t    /**\n\t     * encode\n\t     *\n\t     * @description\n\t     * Encode a JSON Web Token\n\t     *\n\t     * @param {Object} header\n\t     * @param {Object} payload\n\t     * @param {CryptoKey} key\n\t     *\n\t     * @returns {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'encode',\n\t    value: function encode(header, payload, key) {\n\t      var jwt = new JWT(header, payload);\n\t      return jwt.encode(key);\n\t    }\n\t\n\t    /**\n\t     * verify\n\t     *\n\t     * @description\n\t     *\n\t     * @param {CryptoKey} key\n\t     * @param {string} token\n\t     *\n\t     * @returns {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'verify',\n\t    value: function verify(key, token) {\n\t      var jwt = JWT.decode(token);\n\t      jwt.key = key;\n\t      return jwt.verify().then(function (verified) {\n\t        return jwt;\n\t      });\n\t    }\n\t  }, {\n\t    key: 'schema',\n\t\n\t\n\t    /**\n\t     * schema\n\t     */\n\t    get: function get() {\n\t      return JWTSchema;\n\t    }\n\t  }]);\n\t\n\t  return JWT;\n\t}(JSONDocument);\n\t\n\t/**\n\t * Export\n\t */\n\t\n\t\n\tmodule.exports = JWT;\n\n/***/ },\n/* 122 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\n\t * Dependencies\n\t */\n\tvar Base64URLSchema = __webpack_require__(123);\n\tvar JWTClaimsSetSchema = __webpack_require__(124);\n\tvar JOSEHeaderSchema = __webpack_require__(125);\n\t\n\tvar _require = __webpack_require__(94),\n\t    JSONSchema = _require.JSONSchema;\n\t\n\t/**\n\t * JWTSchema\n\t *\n\t * @description\n\t * This schema represents all the things a deserialized JWT can be, i.e.,\n\t * either a JWS or JWE, and any serialization of them. Validation of well-\n\t * formedness for a given serialization is accomplished at the time of\n\t * encoding.\n\t */\n\t\n\t\n\tvar JWTSchema = new JSONSchema({\n\t  type: 'object',\n\t  properties: {\n\t\n\t    /**\n\t     * type\n\t     */\n\t    type: {\n\t      type: 'string',\n\t      enum: ['JWS', 'JWE']\n\t    },\n\t\n\t    /**\n\t     * segments\n\t     */\n\t    segments: {\n\t      type: 'array'\n\t    },\n\t\n\t    /**\n\t     * header\n\t     */\n\t    header: JOSEHeaderSchema,\n\t\n\t    /**\n\t     * protected\n\t     */\n\t    protected: JOSEHeaderSchema,\n\t\n\t    /**\n\t     * unprotected\n\t     */\n\t    unprotected: JOSEHeaderSchema,\n\t\n\t    /**\n\t     * iv\n\t     */\n\t    iv: Base64URLSchema,\n\t\n\t    /**\n\t     * aad\n\t     */\n\t    aad: Base64URLSchema,\n\t\n\t    /**\n\t     * ciphertext\n\t     */\n\t    ciphertext: Base64URLSchema,\n\t\n\t    /**\n\t     * tag\n\t     */\n\t    tag: Base64URLSchema,\n\t\n\t    /**\n\t     * recipients\n\t     */\n\t    recipients: {\n\t      type: 'array',\n\t      items: {\n\t        type: 'object',\n\t        properties: {\n\t          header: JOSEHeaderSchema,\n\t          encrypted_key: Base64URLSchema\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * payload\n\t     */\n\t    payload: JWTClaimsSetSchema,\n\t\n\t    /**\n\t     * signatures\n\t     */\n\t    signatures: {\n\t      type: 'array',\n\t      items: {\n\t        type: 'object',\n\t        properties: {\n\t          protected: JOSEHeaderSchema,\n\t          header: JOSEHeaderSchema,\n\t          signature: Base64URLSchema,\n\t          key: { type: 'object' }\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * signature\n\t     */\n\t    signature: Base64URLSchema,\n\t\n\t    /**\n\t     * verified\n\t     */\n\t    verified: {\n\t      type: 'boolean',\n\t      default: false\n\t    },\n\t\n\t    /**\n\t     * key\n\t     */\n\t    key: {\n\t      type: 'object'\n\t    },\n\t\n\t    /**\n\t     * serialization\n\t     */\n\t    serialization: {\n\t      type: 'string',\n\t      enum: ['compact', 'json', 'flattened'],\n\t      default: 'compact'\n\t    }\n\t  }\n\t});\n\t\n\t/**\n\t * Export\n\t */\n\tmodule.exports = JWTSchema;\n\n/***/ },\n/* 123 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\n\t * Dependencies\n\t */\n\tvar _require = __webpack_require__(94),\n\t    JSONSchema = _require.JSONSchema;\n\t\n\t/**\n\t * Base64URLSchema\n\t */\n\t\n\t\n\tvar Base64URLSchema = new JSONSchema({\n\t  type: 'string',\n\t  format: 'base64url'\n\t});\n\t\n\t/**\n\t * Export\n\t */\n\tmodule.exports = Base64URLSchema;\n\n/***/ },\n/* 124 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\n\t * Dependencies\n\t */\n\tvar _require = __webpack_require__(94),\n\t    JSONSchema = _require.JSONSchema;\n\t\n\t/**\n\t * JWTClaimsSetSchema\n\t *\n\t * JSON Web Token (JWT)\n\t * https://tools.ietf.org/html/rfc7519#section-4\n\t *\n\t * 4.  JWT Claims\n\t *\n\t *   The JWT Claims Set represents a JSON object whose members are the\n\t *   claims conveyed by the JWT.  The Claim Names within a JWT Claims Set\n\t *   MUST be unique; JWT parsers MUST either reject JWTs with duplicate\n\t *   Claim Names or use a JSON parser that returns only the lexically last\n\t *   duplicate member name, as specified in Section 15.12 (\"The JSON\n\t *   Object\") of ECMAScript 5.1 [ECMAScript].\n\t *\n\t *   The set of claims that a JWT must contain to be considered valid is\n\t *   context dependent and is outside the scope of this specification.\n\t *   Specific applications of JWTs will require implementations to\n\t *   understand and process some claims in particular ways.  However, in\n\t *   the absence of such requirements, all claims that are not understood\n\t *   by implementations MUST be ignored.\n\t *\n\t *   There are three classes of JWT Claim Names: Registered Claim Names,\n\t *   Public Claim Names, and Private Claim Names.\n\t */\n\t\n\t\n\tvar JWTClaimsSetSchema = new JSONSchema({\n\t  properties: {\n\t\n\t    /**\n\t     * JSON Web Token (JWT)\n\t     * https://tools.ietf.org/html/rfc7519#section-4.1\n\t     *\n\t     * 4.1.  Registered Claim Names\n\t     *\n\t     *   The following Claim Names are registered in the IANA \"JSON Web Token\n\t     *   Claims\" registry established by Section 10.1.  None of the claims\n\t     *   defined below are intended to be mandatory to use or implement in all\n\t     *   cases, but rather they provide a starting point for a set of useful,\n\t     *   interoperable claims.  Applications using JWTs should define which\n\t     *   specific claims they use and when they are required or optional.  All\n\t     *   the names are short because a core goal of JWTs is for the\n\t     *   representation to be compact.\n\t     */\n\t\n\t    /**\n\t     * iss\n\t     *\n\t     * JSON Web Token (JWT)\n\t     * https://tools.ietf.org/html/rfc7519#section-4.1.1\n\t     *\n\t     * 4.1.1.  \"iss\" (Issuer) Claim\n\t     *\n\t     *   The \"iss\" (issuer) claim identifies the principal that issued the\n\t     *   JWT.  The processing of this claim is generally application specific.\n\t     *   The \"iss\" value is a case-sensitive string containing a StringOrURI\n\t     *   value.  Use of this claim is OPTIONAL.\n\t     */\n\t    iss: {\n\t      type: 'string',\n\t      format: 'StringOrURI'\n\t    },\n\t\n\t    /**\n\t     * sub\n\t     *\n\t     * JSON Web Token (JWT)\n\t     * https://tools.ietf.org/html/rfc7519#section-4.1.2\n\t     *\n\t     * 4.1.2.  \"sub\" (Subject) Claim\n\t     *\n\t     *   The \"sub\" (subject) claim identifies the principal that is the\n\t     *   subject of the JWT.  The claims in a JWT are normally statements\n\t     *   about the subject.  The subject value MUST either be scoped to be\n\t     *   locally unique in the context of the issuer or be globally unique.\n\t     *   The processing of this claim is generally application specific.  The\n\t     *   \"sub\" value is a case-sensitive string containing a StringOrURI\n\t     *   value.  Use of this claim is OPTIONAL.\n\t     */\n\t    sub: {\n\t      type: 'string',\n\t      format: 'StringOrURI'\n\t    },\n\t\n\t    /**\n\t     * aud\n\t     *\n\t     * JSON Web Token (JWT)\n\t     * https://tools.ietf.org/html/rfc7519#section-4.1.3\n\t     *\n\t     * 4.1.3.  \"aud\" (Audience) Claim\n\t     *\n\t     *   The \"aud\" (audience) claim identifies the recipients that the JWT is\n\t     *   intended for.  Each principal intended to process the JWT MUST\n\t     *   identify itself with a value in the audience claim.  If the principal\n\t     *   processing the claim does not identify itself with a value in the\n\t     *   \"aud\" claim when this claim is present, then the JWT MUST be\n\t     *   rejected.  In the general case, the \"aud\" value is an array of case-\n\t     *   sensitive strings, each containing a StringOrURI value.  In the\n\t     *   special case when the JWT has one audience, the \"aud\" value MAY be a\n\t     *   single case-sensitive string containing a StringOrURI value.  The\n\t     *   interpretation of audience values is generally application specific.\n\t     *   Use of this claim is OPTIONAL.\n\t     */\n\t    aud: {\n\t      type: ['array', 'string'],\n\t      format: 'StringOrURI',\n\t      items: {\n\t        format: 'StringOrURI'\n\t      }\n\t    },\n\t\n\t    /**\n\t     * exp\n\t     *\n\t     * JSON Web Token (JWT)\n\t     * https://tools.ietf.org/html/rfc7519#section-4.1.4\n\t     *\n\t     * 4.1.4.  \"exp\" (Expiration Time) Claim\n\t     *\n\t     *   The \"exp\" (expiration time) claim identifies the expiration time on\n\t     *   or after which the JWT MUST NOT be accepted for processing.  The\n\t     *   processing of the \"exp\" claim requires that the current date/time\n\t     *   MUST be before the expiration date/time listed in the \"exp\" claim.\n\t     *\n\t     *   Implementers MAY provide for some small leeway, usually no more than\n\t     *   a few minutes, to account for clock skew.  Its value MUST be a number\n\t     *   containing a NumericDate value.  Use of this claim is OPTIONAL.\n\t     *\n\t     */\n\t    exp: {\n\t      type: 'number',\n\t      format: 'NumericDate'\n\t    },\n\t\n\t    /**\n\t     * nbf\n\t     *\n\t     * JSON Web Token (JWT)\n\t     * https://tools.ietf.org/html/rfc7519#section-4.1.5\n\t     *\n\t     * 4.1.5.  \"nbf\" (Not Before) Claim\n\t     *\n\t     *   The \"nbf\" (not before) claim identifies the time before which the JWT\n\t     *   MUST NOT be accepted for processing.  The processing of the \"nbf\"\n\t     *   claim requires that the current date/time MUST be after or equal to\n\t     *   the not-before date/time listed in the \"nbf\" claim.  Implementers MAY\n\t     *   provide for some small leeway, usually no more than a few minutes, to\n\t     *   account for clock skew.  Its value MUST be a number containing a\n\t     *   NumericDate value.  Use of this claim is OPTIONAL.\n\t     */\n\t    nbf: {\n\t      type: 'number',\n\t      format: 'NumericDate'\n\t    },\n\t\n\t    /**\n\t     * iat\n\t     *\n\t     * JSON Web Token (JWT)\n\t     * https://tools.ietf.org/html/rfc7519#section-4.1.6\n\t     *\n\t     * 4.1.6.  \"iat\" (Issued At) Claim\n\t     *\n\t     *   The \"iat\" (issued at) claim identifies the time at which the JWT was\n\t     *   issued.  This claim can be used to determine the age of the JWT.  Its\n\t     *   value MUST be a number containing a NumericDate value.  Use of this\n\t     *   claim is OPTIONAL.\n\t     */\n\t    iat: {\n\t      type: 'number',\n\t      format: 'NumericDate'\n\t    },\n\t\n\t    /**\n\t     * jti\n\t     *\n\t     * JSON Web Token (JWT)\n\t     * https://tools.ietf.org/html/rfc7519#section-4.1.7\n\t     *\n\t     * 4.1.7.  \"jti\" (JWT ID) Claim\n\t     *\n\t     *   The \"jti\" (JWT ID) claim provides a unique identifier for the JWT.\n\t     *   The identifier value MUST be assigned in a manner that ensures that\n\t     *   there is a negligible probability that the same value will be\n\t     *   accidentally assigned to a different data object; if the application\n\t     *   uses multiple issuers, collisions MUST be prevented among values\n\t     *   produced by different issuers as well.  The \"jti\" claim can be used\n\t     *   to prevent the JWT from being replayed.  The \"jti\" value is a case-\n\t     *   sensitive string.  Use of this claim is OPTIONAL.\n\t     */\n\t    jti: {\n\t      type: 'string'\n\t    }\n\t  }\n\t});\n\t\n\t/**\n\t * Export\n\t */\n\tmodule.exports = JWTClaimsSetSchema;\n\n/***/ },\n/* 125 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\n\t * Dependencies\n\t */\n\tvar JWKSchema = __webpack_require__(117);\n\t\n\tvar _require = __webpack_require__(94),\n\t    JSONSchema = _require.JSONSchema;\n\t\n\t/**\n\t * JOSEHeaderSchema\n\t *\n\t * JSON Web Token (JWT)\n\t * https://tools.ietf.org/html/rfc7519#section-5\n\t *\n\t * 5.  JOSE Header\n\t *\n\t *   For a JWT object, the members of the JSON object represented by the\n\t *   JOSE Header describe the cryptographic operations applied to the JWT\n\t *   and optionally, additional properties of the JWT.  Depending upon\n\t *   whether the JWT is a JWS or JWE, the corresponding rules for the JOSE\n\t *   Header values apply.\n\t */\n\t\n\t\n\tvar JOSEHeaderSchema = new JSONSchema({\n\t  type: 'object',\n\t  properties: {\n\t\n\t    /**\n\t     * typ\n\t     *\n\t     * JSON Web Token (JWT)\n\t     * https://tools.ietf.org/html/rfc7519#section-5.1\n\t     *\n\t     * 5.1.  \"typ\" (Type) Header Parameter\n\t     *\n\t     *   The \"typ\" (type) Header Parameter defined by [JWS] and [JWE] is used\n\t     *   by JWT applications to declare the media type [IANA.MediaTypes] of\n\t     *   this complete JWT.  This is intended for use by the JWT application\n\t     *   when values that are not JWTs could also be present in an application\n\t     *   data structure that can contain a JWT object; the application can use\n\t     *   this value to disambiguate among the different kinds of objects that\n\t     *   might be present.  It will typically not be used by applications when\n\t     *   it is already known that the object is a JWT.  This parameter is\n\t     *   ignored by JWT implementations; any processing of this parameter is\n\t     *   performed by the JWT application.  If present, it is RECOMMENDED that\n\t     *   its value be \"JWT\" to indicate that this object is a JWT.  While\n\t     *   media type names are not case sensitive, it is RECOMMENDED that \"JWT\"\n\t     *   always be spelled using uppercase characters for compatibility with\n\t     *   legacy implementations.  Use of this Header Parameter is OPTIONAL.\n\t     *\n\t     * JSON Web Signature (JWS)\n\t     * https://tools.ietf.org/html/rfc7515#section-4.1.9\n\t     *\n\t     * 4.1.9.  \"typ\" (Type) Header Parameter\n\t     *\n\t     *   The \"typ\" (type) Header Parameter is used by JWS applications to\n\t     *   declare the media type [IANA.MediaTypes] of this complete JWS.  This\n\t     *   is intended for use by the application when more than one kind of\n\t     *   object could be present in an application data structure that can\n\t     *   contain a JWS; the application can use this value to disambiguate\n\t     *   among the different kinds of objects that might be present.  It will\n\t     *   typically not be used by applications when the kind of object is\n\t     *   already known.  This parameter is ignored by JWS implementations; any\n\t     *   processing of this parameter is performed by the JWS application.\n\t     *   Use of this Header Parameter is OPTIONAL.\n\t     *\n\t     *   Per RFC 2045 [RFC2045], all media type values, subtype values, and\n\t     *   parameter names are case insensitive.  However, parameter values are\n\t     *   case sensitive unless otherwise specified for the specific parameter.\n\t     *\n\t     *   To keep messages compact in common situations, it is RECOMMENDED that\n\t     *   producers omit an \"application/\" prefix of a media type value in a\n\t     *   \"typ\" Header Parameter when no other '/' appears in the media type\n\t     *   value.  A recipient using the media type value MUST treat it as if\n\t     *   \"application/\" were prepended to any \"typ\" value not containing a\n\t     *   '/'.  For instance, a \"typ\" value of \"example\" SHOULD be used to\n\t     *   represent the \"application/example\" media type, whereas the media\n\t     *   type \"application/example;part=\"1/2\"\" cannot be shortened to\n\t     *   \"example;part=\"1/2\"\".\n\t     *\n\t     *   The \"typ\" value \"JOSE\" can be used by applications to indicate that\n\t     *   this object is a JWS or JWE using the JWS Compact Serialization or\n\t     *   the JWE Compact Serialization.  The \"typ\" value \"JOSE+JSON\" can be\n\t     *   used by applications to indicate that this object is a JWS or JWE\n\t     *   using the JWS JSON Serialization or the JWE JSON Serialization.\n\t     *   Other type values can also be used by applications.\n\t     *\n\t     * JSON Web Encryption (JWE)\n\t     * https://tools.ietf.org/html/rfc7516#section-4.1.11\n\t     *\n\t     * 4.1.11.  \"typ\" (Type) Header Parameter\n\t     *\n\t     *   This parameter has the same meaning, syntax, and processing rules as\n\t     *   the \"typ\" Header Parameter defined in Section 4.1.9 of [JWS], except\n\t     *   that the type is that of this complete JWE.\n\t     */\n\t    typ: {\n\t      type: 'string'\n\t    },\n\t\n\t    /**\n\t     * cty\n\t     *\n\t     * JSON Web Token (JWT)\n\t     * https://tools.ietf.org/html/rfc7519#section-5.2\n\t     *\n\t     * 5.2.  \"cty\" (Content Type) Header Parameter\n\t     *\n\t     *   The \"cty\" (content type) Header Parameter defined by [JWS] and [JWE]\n\t     *   is used by this specification to convey structural information about\n\t     *   the JWT.\n\t     *\n\t     *   In the normal case in which nested signing or encryption operations\n\t     *   are not employed, the use of this Header Parameter is NOT\n\t     *   RECOMMENDED.  In the case that nested signing or encryption is\n\t     *   employed, this Header Parameter MUST be present; in this case, the\n\t     *   value MUST be \"JWT\", to indicate that a Nested JWT is carried in this\n\t     *   JWT.  While media type names are not case sensitive, it is\n\t     *   RECOMMENDED that \"JWT\" always be spelled using uppercase characters\n\t     *   for compatibility with legacy implementations.  See Appendix A.2 for\n\t     *   an example of a Nested JWT.\n\t     *\n\t     *\n\t     * JSON Web Signature (JWS)\n\t     * https://tools.ietf.org/html/rfc7515#section-4.1.10\n\t     *\n\t     * 4.1.10.  \"cty\" (Content Type) Header Parameter\n\t     *\n\t     *   The \"cty\" (content type) Header Parameter is used by JWS applications\n\t     *   to declare the media type [IANA.MediaTypes] of the secured content\n\t     *   (the payload).  This is intended for use by the application when more\n\t     *   than one kind of object could be present in the JWS Payload; the\n\t     *   application can use this value to disambiguate among the different\n\t     *   kinds of objects that might be present.  It will typically not be\n\t     *   used by applications when the kind of object is already known.  This\n\t     *   parameter is ignored by JWS implementations; any processing of this\n\t     *   parameter is performed by the JWS application.  Use of this Header\n\t     *   Parameter is OPTIONAL.\n\t     *\n\t     *   Per RFC 2045 [RFC2045], all media type values, subtype values, and\n\t     *   parameter names are case insensitive.  However, parameter values are\n\t     *   case sensitive unless otherwise specified for the specific parameter.\n\t     *\n\t     *   To keep messages compact in common situations, it is RECOMMENDED that\n\t     *   producers omit an \"application/\" prefix of a media type value in a\n\t     *   \"cty\" Header Parameter when no other '/' appears in the media type\n\t     *   value.  A recipient using the media type value MUST treat it as if\n\t     *   \"application/\" were prepended to any \"cty\" value not containing a\n\t     *   '/'.  For instance, a \"cty\" value of \"example\" SHOULD be used to\n\t     *   represent the \"application/example\" media type, whereas the media\n\t     *   type \"application/example;part=\"1/2\"\" cannot be shortened to\n\t     *   \"example;part=\"1/2\"\".\n\t     *\n\t     * JSON Web Encryption (JWE)\n\t     * https://tools.ietf.org/html/rfc7516#section-4.1.12\n\t     *\n\t     * 4.1.12.  \"cty\" (Content Type) Header Parameter\n\t     *\n\t     *   This parameter has the same meaning, syntax, and processing rules as\n\t     *   the \"cty\" Header Parameter defined in Section 4.1.10 of [JWS], except\n\t     *   that the type is that of the secured content (the plaintext).\n\t     */\n\t    cty: {\n\t      type: 'string',\n\t      enum: ['JWT']\n\t    },\n\t\n\t    /**\n\t     * alg\n\t     *\n\t     * JSON Web Signature (JWS)\n\t     * https://tools.ietf.org/html/rfc7515#section-4.1.1\n\t     *\n\t     * 4.1.1.  \"alg\" (Algorithm) Header Parameter\n\t     *\n\t     *   The \"alg\" (algorithm) Header Parameter identifies the cryptographic\n\t     *   algorithm used to secure the JWS.  The JWS Signature value is not\n\t     *   valid if the \"alg\" value does not represent a supported algorithm or\n\t     *   if there is not a key for use with that algorithm associated with the\n\t     *   party that digitally signed or MACed the content.  \"alg\" values\n\t     *   should either be registered in the IANA \"JSON Web Signature and\n\t     *   Encryption Algorithms\" registry established by [JWA] or be a value\n\t     *   that contains a Collision-Resistant Name.  The \"alg\" value is a case-\n\t     *   sensitive ASCII string containing a StringOrURI value.  This Header\n\t     *   Parameter MUST be present and MUST be understood and processed by\n\t     *   implementations.\n\t     *\n\t     *   A list of defined \"alg\" values for this use can be found in the IANA\n\t     *   \"JSON Web Signature and Encryption Algorithms\" registry established\n\t     *   by [JWA]; the initial contents of this registry are the values\n\t     *   defined in Section 3.1 of [JWA].\n\t     *\n\t     * JSON Web Encryption (JWE)\n\t     * https://tools.ietf.org/html/rfc7516#section-4.1.1\n\t     *\n\t     * 4.1.1.  \"alg\" (Algorithm) Header Parameter\n\t     *\n\t     *   This parameter has the same meaning, syntax, and processing rules as\n\t     *   the \"alg\" Header Parameter defined in Section 4.1.1 of [JWS], except\n\t     *   that the Header Parameter identifies the cryptographic algorithm used\n\t     *   to encrypt or determine the value of the CEK.  The encrypted content\n\t     *   is not usable if the \"alg\" value does not represent a supported\n\t     *   algorithm, or if the recipient does not have a key that can be used\n\t     *   with that algorithm.\n\t     *\n\t     *   A list of defined \"alg\" values for this use can be found in the IANA\n\t     *   \"JSON Web Signature and Encryption Algorithms\" registry established\n\t     *   by [JWA]; the initial contents of this registry are the values\n\t     *   defined in Section 4.1 of [JWA].\n\t     */\n\t    alg: {\n\t      type: 'string',\n\t      format: 'StringOrURI'\n\t    },\n\t\n\t    /**\n\t     * jku\n\t     *\n\t     * JSON Web Signature (JWS)\n\t     * https://tools.ietf.org/html/rfc7515#section-4.1.2\n\t     *\n\t     * 4.1.2.  \"jku\" (JWK Set URL) Header Parameter (JWS)\n\t     *\n\t     *   The \"jku\" (JWK Set URL) Header Parameter is a URI [RFC3986] that\n\t     *   refers to a resource for a set of JSON-encoded public keys, one of\n\t     *   which corresponds to the key used to digitally sign the JWS.  The\n\t     *   keys MUST be encoded as a JWK Set [JWK].  The protocol used to\n\t     *   acquire the resource MUST provide integrity protection; an HTTP GET\n\t     *   request to retrieve the JWK Set MUST use Transport Layer Security\n\t     *   (TLS) [RFC2818] [RFC5246]; and the identity of the server MUST be\n\t     *   validated, as per Section 6 of RFC 6125 [RFC6125].  Also, see\n\t     *   Section 8 on TLS requirements.  Use of this Header Parameter is\n\t     *   OPTIONAL.\n\t     *\n\t     * JSON Web Encryption (JWE)\n\t     * https://tools.ietf.org/html/rfc7516#section-4.1.4\n\t     *\n\t     * 4.1.4.  \"jku\" (JWK Set URL) Header Parameter (JWE)\n\t     *\n\t     *   This parameter has the same meaning, syntax, and processing rules as\n\t     *   the \"jku\" Header Parameter defined in Section 4.1.2 of [JWS], except\n\t     *   that the JWK Set resource contains the public key to which the JWE\n\t     *   was encrypted; this can be used to determine the private key needed\n\t     *   to decrypt the JWE.\n\t     */\n\t    jku: {\n\t      type: 'string',\n\t      format: 'URI'\n\t    },\n\t\n\t    /**\n\t     * jwk\n\t     *\n\t     * JSON Web Signature (JWS)\n\t     * https://tools.ietf.org/html/rfc7515#section-4.1.3\n\t     *\n\t     * 4.1.3.  \"jwk\" (JSON Web Key) Header Parameter\n\t     *\n\t     *   The \"jwk\" (JSON Web Key) Header Parameter is the public key that\n\t     *   corresponds to the key used to digitally sign the JWS.  This key is\n\t     *   represented as a JSON Web Key [JWK].  Use of this Header Parameter is\n\t     *   OPTIONAL.\n\t     *\n\t     * JSON Web Encryption (JWE)\n\t     * https://tools.ietf.org/html/rfc7516#section-4.1.5\n\t     *\n\t     * 4.1.5.  \"jwk\" (JSON Web Key) Header Parameter\n\t     *\n\t     *   This parameter has the same meaning, syntax, and processing rules as\n\t     *   the \"jwk\" Header Parameter defined in Section 4.1.3 of [JWS], except\n\t     *   that the key is the public key to which the JWE was encrypted; this\n\t     *   can be used to determine the private key needed to decrypt the JWE.\n\t     */\n\t    //jwk: JWKSchema,\n\t\n\t    /**\n\t     * kid\n\t     *\n\t     * JSON Web Signature (JWS)\n\t     * https://tools.ietf.org/html/rfc7515#section-4.1.4\n\t     *\n\t     * 4.1.4.  \"kid\" (Key ID) Header Parameter\n\t     *\n\t     *   The \"kid\" (key ID) Header Parameter is a hint indicating which key\n\t     *   was used to secure the JWS.  This parameter allows originators to\n\t     *   explicitly signal a change of key to recipients.  The structure of\n\t     *   the \"kid\" value is unspecified.  Its value MUST be a case-sensitive\n\t     *   string.  Use of this Header Parameter is OPTIONAL.\n\t     *\n\t     *   When used with a JWK, the \"kid\" value is used to match a JWK \"kid\"\n\t     *   parameter value.\n\t     *\n\t     *\n\t     * JSON Web Encryption (JWE)\n\t     * https://tools.ietf.org/html/rfc7516#section-4.1.6\n\t     *\n\t     * 4.1.6.  \"kid\" (Key ID) Header Parameter\n\t     *\n\t     *   This parameter has the same meaning, syntax, and processing rules as\n\t     *   the \"kid\" Header Parameter defined in Section 4.1.4 of [JWS], except\n\t     *   that the key hint references the public key to which the JWE was\n\t     *   encrypted; this can be used to determine the private key needed to\n\t     *   decrypt the JWE.  This parameter allows originators to explicitly\n\t     *   signal a change of key to JWE recipients.\n\t     */\n\t    kid: {\n\t      type: 'string'\n\t    },\n\t\n\t    /**\n\t     * x5u\n\t     *\n\t     * JSON Web Signature (JWS)\n\t     * https://tools.ietf.org/html/rfc7515#section-4.1.5\n\t     *\n\t     * 4.1.5.  \"x5u\" (X.509 URL) Header Parameter\n\t     *\n\t     *   The \"x5u\" (X.509 URL) Header Parameter is a URI [RFC3986] that refers\n\t     *   to a resource for the X.509 public key certificate or certificate\n\t     *   chain [RFC5280] corresponding to the key used to digitally sign the\n\t     *   JWS.  The identified resource MUST provide a representation of the\n\t     *   certificate or certificate chain that conforms to RFC 5280 [RFC5280]\n\t     *   in PEM-encoded form, with each certificate delimited as specified in\n\t     *   Section 6.1 of RFC 4945 [RFC4945].  The certificate containing the\n\t     *   public key corresponding to the key used to digitally sign the JWS\n\t     *   MUST be the first certificate.  This MAY be followed by additional\n\t     *   certificates, with each subsequent certificate being the one used to\n\t     *   certify the previous one.  The protocol used to acquire the resource\n\t     *   MUST provide integrity protection; an HTTP GET request to retrieve\n\t     *   the certificate MUST use TLS [RFC2818] [RFC5246]; and the identity of\n\t     *   the server MUST be validated, as per Section 6 of RFC 6125 [RFC6125].\n\t     *   Also, see Section 8 on TLS requirements.  Use of this Header\n\t     *   Parameter is OPTIONAL.\n\t     *\n\t     * JSON Web Encryption (JWE)\n\t     * https://tools.ietf.org/html/rfc7516#section-4.1.7\n\t     *\n\t     * 4.1.7.  \"x5u\" (X.509 URL) Header Parameter\n\t     *\n\t     *   This parameter has the same meaning, syntax, and processing rules as\n\t     *   the \"x5u\" Header Parameter defined in Section 4.1.5 of [JWS], except\n\t     *   that the X.509 public key certificate or certificate chain [RFC5280]\n\t     *   contains the public key to which the JWE was encrypted; this can be\n\t     *   used to determine the private key needed to decrypt the JWE.\n\t     */\n\t    x5u: {\n\t      type: 'string',\n\t      format: 'URI'\n\t    },\n\t\n\t    /**\n\t     * x5c\n\t     *\n\t     * JSON Web Signature (JWS)\n\t     * https://tools.ietf.org/html/rfc7515#section-4.1.6\n\t     *\n\t     * 4.1.6.  \"x5c\" (X.509 Certificate Chain) Header Parameter\n\t     *\n\t     *   The \"x5c\" (X.509 certificate chain) Header Parameter contains the\n\t     *   X.509 public key certificate or certificate chain [RFC5280]\n\t     *   corresponding to the key used to digitally sign the JWS.  The\n\t     *   certificate or certificate chain is represented as a JSON array of\n\t     *   certificate value strings.  Each string in the array is a\n\t     *   base64-encoded (Section 4 of [RFC4648] -- not base64url-encoded) DER\n\t     *   [ITU.X690.2008] PKIX certificate value.  The certificate containing\n\t     *   the public key corresponding to the key used to digitally sign the\n\t     *   JWS MUST be the first certificate.  This MAY be followed by\n\t     *   additional certificates, with each subsequent certificate being the\n\t     *   one used to certify the previous one.  The recipient MUST validate\n\t     *   the certificate chain according to RFC 5280 [RFC5280] and consider\n\t     *   the certificate or certificate chain to be invalid if any validation\n\t     *   failure occurs.  Use of this Header Parameter is OPTIONAL.\n\t     *\n\t     * JSON Web Encryption (JWE)\n\t     * https://tools.ietf.org/html/rfc7516#section-4.1.8\n\t     *\n\t     * 4.1.8.  \"x5c\" (X.509 Certificate Chain) Header Parameter\n\t     *\n\t     *   This parameter has the same meaning, syntax, and processing rules as\n\t     *   the \"x5c\" Header Parameter defined in Section 4.1.6 of [JWS], except\n\t     *   that the X.509 public key certificate or certificate chain [RFC5280]\n\t     *   contains the public key to which the JWE was encrypted; this can be\n\t     *   used to determine the private key needed to decrypt the JWE.\n\t     */\n\t    x5c: {\n\t      type: 'array',\n\t      items: {\n\t        type: 'string',\n\t        format: 'base64'\n\t      }\n\t    },\n\t\n\t    /**\n\t     * x5t\n\t     *\n\t     * JSON Web Signature (JWS)\n\t     * https://tools.ietf.org/html/rfc7515#section-4.1.7\n\t     *\n\t     * 4.1.7.  \"x5t\" (X.509 Certificate SHA-1 Thumbprint) Header Parameter\n\t     *\n\t     *   The \"x5t\" (X.509 certificate SHA-1 thumbprint) Header Parameter is a\n\t     *   base64url-encoded SHA-1 thumbprint (a.k.a. digest) of the DER\n\t     *   encoding of the X.509 certificate [RFC5280] corresponding to the key\n\t     *   used to digitally sign the JWS.  Note that certificate thumbprints\n\t     *   are also sometimes known as certificate fingerprints.  Use of this\n\t     *   Header Parameter is OPTIONAL.\n\t     *\n\t     * JSON Web Encryption (JWE)\n\t     * https://tools.ietf.org/html/rfc7516#section-4.1.9\n\t     *\n\t     * 4.1.9.  \"x5t\" (X.509 Certificate SHA-1 Thumbprint) Header Parameter\n\t     *\n\t     *   This parameter has the same meaning, syntax, and processing rules as\n\t     *   the \"x5t\" Header Parameter defined in Section 4.1.7 of [JWS], except\n\t     *   that the certificate referenced by the thumbprint contains the public\n\t     *   key to which the JWE was encrypted; this can be used to determine the\n\t     *   private key needed to decrypt the JWE.  Note that certificate\n\t     *   thumbprints are also sometimes known as certificate fingerprints.\n\t     */\n\t    x5t: {\n\t      type: 'string',\n\t      format: 'base64url'\n\t    },\n\t\n\t    /**\n\t     * x5t#S256\n\t     *\n\t     * JSON Web Signature (JWS)\n\t     * https://tools.ietf.org/html/rfc7515#section-4.1.8\n\t     *\n\t     * 4.1.8.  \"x5t#S256\" (X.509 Certificate SHA-256 Thumbprint) Header\n\t     *         Parameter\n\t     *\n\t     *   The \"x5t#S256\" (X.509 certificate SHA-256 thumbprint) Header\n\t     *   Parameter is a base64url-encoded SHA-256 thumbprint (a.k.a. digest)\n\t     *   of the DER encoding of the X.509 certificate [RFC5280] corresponding\n\t     *   to the key used to digitally sign the JWS.  Note that certificate\n\t     *   thumbprints are also sometimes known as certificate fingerprints.\n\t     *   Use of this Header Parameter is OPTIONAL.\n\t     *\n\t     *\n\t     * JSON Web Encryption (JWE)\n\t     * https://tools.ietf.org/html/rfc7516#section-4.1.10\n\t     *\n\t     * 4.1.10.  \"x5t#S256\" (X.509 Certificate SHA-256 Thumbprint) Header\n\t     *          Parameter\n\t     *\n\t     *   This parameter has the same meaning, syntax, and processing rules as\n\t     *   the \"x5t#S256\" Header Parameter defined in Section 4.1.8 of [JWS],\n\t     *   except that the certificate referenced by the thumbprint contains the\n\t     *   public key to which the JWE was encrypted; this can be used to\n\t     *   determine the private key needed to decrypt the JWE.  Note that\n\t     *   certificate thumbprints are also sometimes known as certificate\n\t     *   fingerprints.\n\t     */\n\t    //'x5t#S256': {\n\t    //  type: 'string',\n\t    //  format: 'base64url'\n\t    //},\n\t\n\t    /**\n\t     * crit\n\t     *\n\t     * JSON Web Signature (JWS)\n\t     * https://tools.ietf.org/html/rfc7515#section-4.1.11\n\t     *\n\t     * 4.1.11.  \"crit\" (Critical) Header Parameter\n\t     *\n\t     *   The \"crit\" (critical) Header Parameter indicates that extensions to\n\t     *   this specification and/or [JWA] are being used that MUST be\n\t     *   understood and processed.  Its value is an array listing the Header\n\t     *   Parameter names present in the JOSE Header that use those extensions.\n\t     *   If any of the listed extension Header Parameters are not understood\n\t     *   and supported by the recipient, then the JWS is invalid.  Producers\n\t     *   MUST NOT include Header Parameter names defined by this specification\n\t     *   or [JWA] for use with JWS, duplicate names, or names that do not\n\t     *   occur as Header Parameter names within the JOSE Header in the \"crit\"\n\t     *   list.  Producers MUST NOT use the empty list \"[]\" as the \"crit\"\n\t     *   value.  Recipients MAY consider the JWS to be invalid if the critical\n\t     *   list contains any Header Parameter names defined by this\n\t     *   specification or [JWA] for use with JWS or if any other constraints\n\t     *   on its use are violated.  When used, this Header Parameter MUST be\n\t     *   integrity protected; therefore, it MUST occur only within the JWS\n\t     *   Protected Header.  Use of this Header Parameter is OPTIONAL.  This\n\t     *   Header Parameter MUST be understood and processed by implementations.\n\t     *\n\t     *   An example use, along with a hypothetical \"exp\" (expiration time)\n\t     *   field is:\n\t     *\n\t     *     {\"alg\":\"ES256\",\n\t     *     \"crit\":[\"exp\"],\n\t     *     \"exp\":1363284000\n\t     *     }\n\t     *\n\t     * JSON Web Encryption (JWE)\n\t     * https://tools.ietf.org/html/rfc7516#section-4.1.13\n\t     *\n\t     *   4.1.13.  \"crit\" (Critical) Header Parameter\n\t     *\n\t     *   This parameter has the same meaning, syntax, and processing rules as\n\t     *   the \"crit\" Header Parameter defined in Section 4.1.11 of [JWS],\n\t     *   except that Header Parameters for a JWE are being referred to, rather\n\t     *   than Header Parameters for a JWS.\n\t     */\n\t    crit: {\n\t      type: 'array',\n\t      items: {\n\t        type: 'string'\n\t      },\n\t      minItems: 1\n\t    },\n\t\n\t    /**\n\t     * enc\n\t     *\n\t     * JSON Web Encryption (JWE)\n\t     * https://tools.ietf.org/html/rfc7516#section-4.1.2\n\t     *\n\t     * 4.1.2.  \"enc\" (Encryption Algorithm) Header Parameter\n\t     *\n\t     *   The \"enc\" (encryption algorithm) Header Parameter identifies the\n\t     *   content encryption algorithm used to perform authenticated encryption\n\t     *   on the plaintext to produce the ciphertext and the Authentication\n\t     *   Tag.  This algorithm MUST be an AEAD algorithm with a specified key\n\t     *   length.  The encrypted content is not usable if the \"enc\" value does\n\t     *   not represent a supported algorithm.  \"enc\" values should either be\n\t     *   registered in the IANA \"JSON Web Signature and Encryption Algorithms\"\n\t     *   registry established by [JWA] or be a value that contains a\n\t     *   Collision-Resistant Name.  The \"enc\" value is a case-sensitive ASCII\n\t     *   string containing a StringOrURI value.  This Header Parameter MUST be\n\t     *   present and MUST be understood and processed by implementations.\n\t     *\n\t     *   A list of defined \"enc\" values for this use can be found in the IANA\n\t     *   \"JSON Web Signature and Encryption Algorithms\" registry established\n\t     *   by [JWA]; the initial contents of this registry are the values\n\t     *   defined in Section 5.1 of [JWA].\n\t     */\n\t    enc: {\n\t      type: 'string',\n\t      format: 'StringOrURI'\n\t    },\n\t\n\t    /**\n\t     * zip\n\t     *\n\t     * JSON Web Encryption (JWE)\n\t     * https://tools.ietf.org/html/rfc7516#section-4.1.3\n\t     *\n\t     * 4.1.3.  \"zip\" (Compression Algorithm) Header Parameter\n\t     *\n\t     *   The \"zip\" (compression algorithm) applied to the plaintext before\n\t     *   encryption, if any.  The \"zip\" value defined by this specification\n\t     *   is:\n\t     *\n\t     *   o  \"DEF\" - Compression with the DEFLATE [RFC1951] algorithm\n\t     *\n\t     *   Other values MAY be used.  Compression algorithm values can be\n\t     *   registered in the IANA \"JSON Web Encryption Compression Algorithms\"\n\t     *   registry established by [JWA].  The \"zip\" value is a case-sensitive\n\t     *   string.  If no \"zip\" parameter is present, no compression is applied\n\t     *   to the plaintext before encryption.  When used, this Header Parameter\n\t     *   MUST be integrity protected; therefore, it MUST occur only within the\n\t     *   JWE Protected Header.  Use of this Header Parameter is OPTIONAL.\n\t     *   This Header Parameter MUST be understood and processed by\n\t     *   implementations.\n\t     */\n\t    zip: {\n\t      type: 'string'\n\t    }\n\t  }\n\t});\n\t\n\t/**\n\t * Export\n\t */\n\tmodule.exports = JOSEHeaderSchema;\n\n/***/ },\n/* 126 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * Dependencies\n\t */\n\tvar base64url = __webpack_require__(105);\n\tvar JWA = __webpack_require__(104);\n\t\n\tvar _require = __webpack_require__(114),\n\t    DataError = _require.DataError;\n\t\n\t/**\n\t * JWS\n\t */\n\t\n\t\n\tvar JWS = function () {\n\t  function JWS() {\n\t    _classCallCheck(this, JWS);\n\t  }\n\t\n\t  _createClass(JWS, null, [{\n\t    key: 'sign',\n\t\n\t\n\t    /**\n\t     * sign\n\t     *\n\t     * @description\n\t     * Encode a JWT instance\n\t     *\n\t     * @param {Object} token\n\t     * @returns {Promise}\n\t     */\n\t    value: function sign(token) {\n\t      var payload = base64url(JSON.stringify(token.payload));\n\t\n\t      // compact serialization\n\t      if (token.serialization === 'compact') {\n\t        var _ret = function () {\n\t          var key = token.key,\n\t              alg = token.header.alg;\n\t\n\t          var header = base64url(JSON.stringify(token.header));\n\t          var data = header + '.' + payload;\n\t\n\t          return {\n\t            v: JWA.sign(alg, key, data).then(function (signature) {\n\t              return data + '.' + signature;\n\t            })\n\t          };\n\t        }();\n\t\n\t        if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n\t      }\n\t\n\t      // JSON serialization\n\t      if (token.serialization === 'json') {}\n\t\n\t      // Flattened serialization\n\t      if (token.serialization === 'flattened') {}\n\t\n\t      return Promise.reject(new DataError('Unsupported serialization'));\n\t    }\n\t\n\t    /**\n\t     * verify\n\t     */\n\t\n\t  }, {\n\t    key: 'verify',\n\t    value: function verify(jwt) {\n\t      // multiple signatures\n\t      if (jwt.signatures) {}\n\t      // ...\n\t\n\t\n\t      // one signature\n\t      if (jwt.signature) {\n\t        var _jwt$segments = _slicedToArray(jwt.segments, 2),\n\t            header = _jwt$segments[0],\n\t            payload = _jwt$segments[1];\n\t\n\t        var data = header + '.' + payload;\n\t        var key = jwt.key,\n\t            signature = jwt.signature,\n\t            alg = jwt.header.alg;\n\t\n\t\n\t        return JWA.verify(alg, key, signature, data).then(function (verified) {\n\t          jwt.verified = verified;\n\t          return verified;\n\t        });\n\t      }\n\t\n\t      // no signatures to verify\n\t      return Promise.reject(new DataError('Missing signature(s)'));\n\t    }\n\t  }]);\n\t\n\t  return JWS;\n\t}();\n\t\n\t/**\n\t * Export\n\t */\n\t\n\t\n\tmodule.exports = JWS;\n\n/***/ },\n/* 127 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer) {'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * Dependencies\n\t */\n\tvar assert = __webpack_require__(92);\n\tvar base64url = __webpack_require__(128);\n\tvar crypto = __webpack_require__(108);\n\tvar FormUrlEncoded = __webpack_require__(131);\n\tvar URL = __webpack_require__(132);\n\t\n\t/**\n\t * Authentication Request\n\t */\n\t\n\tvar AuthenticationRequest = function () {\n\t  function AuthenticationRequest() {\n\t    _classCallCheck(this, AuthenticationRequest);\n\t  }\n\t\n\t  _createClass(AuthenticationRequest, null, [{\n\t    key: 'create',\n\t\n\t\n\t    /**\n\t     * create\n\t     *\n\t     * @description\n\t     * Create a new authentication request with generated state and nonce,\n\t     * validate presence of required parameters, serialize the request data and\n\t     * persist it to the session, and return a promise for an authentication\n\t     * request URI.\n\t     *\n\t     * @param {RelyingParty} rp – instance of RelyingParty\n\t     * @param {Object} options - optional request parameters\n\t     * @param {Object} session – reference to localStorage or other session object\n\t     *\n\t     * @returns {Promise}\n\t     */\n\t    value: function create(rp, options, session) {\n\t      return new Promise(function (resolve, reject) {\n\t        var provider = rp.provider,\n\t            defaults = rp.defaults,\n\t            registration = rp.registration;\n\t\n\t        // validate presence of OP configuration, RP client registration,\n\t        // and default parameters\n\t\n\t        assert(provider.configuration, 'RelyingParty provider OpenID Configuration is missing');\n\t\n\t        assert(defaults.authenticate, 'RelyingParty default authentication parameters are missing');\n\t\n\t        assert(registration, 'RelyingParty client registration is missing');\n\t\n\t        // define basic elements of the request\n\t        var issuer = provider.configuration.issuer;\n\t        var endpoint = provider.configuration.authorization_endpoint;\n\t        var client = { client_id: registration.client_id };\n\t        var params = Object.assign(defaults.authenticate, client, options);\n\t\n\t        // validate presence of required configuration and parameters\n\t        assert(issuer, 'Missing issuer in provider OpenID Configuration');\n\t\n\t        assert(endpoint, 'Missing authorization_endpoint in provider OpenID Configuration');\n\t\n\t        assert(params.scope, 'Missing scope parameter in authentication request');\n\t\n\t        assert(params.response_type, 'Missing response_type parameter in authentication request');\n\t\n\t        assert(params.client_id, 'Missing client_id parameter in authentication request');\n\t\n\t        assert(params.redirect_uri, 'Missing redirect_uri parameter in authentication request');\n\t\n\t        // generate state and nonce random octets\n\t        params.state = Array.from(crypto.getRandomValues(new Uint8Array(16)));\n\t        params.nonce = Array.from(crypto.getRandomValues(new Uint8Array(16)));\n\t\n\t        // hash the state and nonce parameter values\n\t        return Promise.all([crypto.subtle.digest({ name: 'SHA-256' }, new Uint8Array(params.state)), crypto.subtle.digest({ name: 'SHA-256' }, new Uint8Array(params.nonce))])\n\t\n\t        // serialize the request with original values, store in session by\n\t        // encoded state param, and replace state/nonce octets with encoded\n\t        // digests\n\t        .then(function (digests) {\n\t          var state = base64url(Buffer.from(digests[0]));\n\t          var nonce = base64url(Buffer.from(digests[1]));\n\t          var key = issuer + '/requestHistory/' + state;\n\t\n\t          // store the request params for response validation\n\t          // with serialized octet values for state and nonce\n\t          session[key] = JSON.stringify(params);\n\t\n\t          // replace state and nonce octets with base64url encoded digests\n\t          params.state = state;\n\t          params.nonce = nonce;\n\t        })\n\t\n\t        // optionally encode a JWT with the request parameters\n\t        .then(function () {\n\t          // TODO\n\t          // optionally encode the request parameters as a JWT\n\t          // and replace params with `{ request: <jwt> }`\n\t        })\n\t\n\t        // render the request URI and terminate the algorithm\n\t        .then(function () {\n\t          var url = new URL(endpoint);\n\t          url.search = FormUrlEncoded.encode(params);\n\t          resolve(url.href);\n\t        });\n\t      });\n\t    }\n\t  }]);\n\t\n\t  return AuthenticationRequest;\n\t}();\n\t\n\t/**\n\t * Export\n\t */\n\t\n\t\n\tmodule.exports = AuthenticationRequest;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(47).Buffer))\n\n/***/ },\n/* 128 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(129).default;\n\tmodule.exports.default = module.exports;\n\n\n/***/ },\n/* 129 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer) {\"use strict\";\n\tvar pad_string_1 = __webpack_require__(130);\n\tfunction encode(input, encoding) {\n\t    if (encoding === void 0) { encoding = \"utf8\"; }\n\t    if (Buffer.isBuffer(input)) {\n\t        return fromBase64(input.toString(\"base64\"));\n\t    }\n\t    return fromBase64(new Buffer(input, encoding).toString(\"base64\"));\n\t}\n\t;\n\tfunction decode(base64url, encoding) {\n\t    if (encoding === void 0) { encoding = \"utf8\"; }\n\t    return new Buffer(toBase64(base64url), \"base64\").toString(encoding);\n\t}\n\tfunction toBase64(base64url) {\n\t    base64url = base64url.toString();\n\t    return pad_string_1.default(base64url)\n\t        .replace(/\\-/g, \"+\")\n\t        .replace(/_/g, \"/\");\n\t}\n\tfunction fromBase64(base64) {\n\t    return base64\n\t        .replace(/=/g, \"\")\n\t        .replace(/\\+/g, \"-\")\n\t        .replace(/\\//g, \"_\");\n\t}\n\tfunction toBuffer(base64url) {\n\t    return new Buffer(toBase64(base64url), \"base64\");\n\t}\n\tvar base64url = encode;\n\tbase64url.encode = encode;\n\tbase64url.decode = decode;\n\tbase64url.toBase64 = toBase64;\n\tbase64url.fromBase64 = fromBase64;\n\tbase64url.toBuffer = toBuffer;\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = base64url;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(47).Buffer))\n\n/***/ },\n/* 130 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer) {\"use strict\";\n\tfunction padString(input) {\n\t    var segmentLength = 4;\n\t    var stringLength = input.length;\n\t    var diff = stringLength % segmentLength;\n\t    if (!diff) {\n\t        return input;\n\t    }\n\t    var position = stringLength;\n\t    var padLength = segmentLength - diff;\n\t    var paddedStringLength = stringLength + padLength;\n\t    var buffer = new Buffer(paddedStringLength);\n\t    buffer.write(input);\n\t    while (padLength--) {\n\t        buffer.write(\"=\", position++);\n\t    }\n\t    return buffer.toString();\n\t}\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = padString;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(47).Buffer))\n\n/***/ },\n/* 131 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * Dependencies\n\t */\n\t\n\t/**\n\t * FormUrlEncoded\n\t */\n\tvar FormUrlEncoded = function () {\n\t  function FormUrlEncoded() {\n\t    _classCallCheck(this, FormUrlEncoded);\n\t  }\n\t\n\t  _createClass(FormUrlEncoded, null, [{\n\t    key: 'encode',\n\t\n\t\n\t    /**\n\t     * Encode\n\t     *\n\t     * @description\n\t     * Represent an object as x-www-form-urlencoded string.\n\t     *\n\t     * @param {Object} data\n\t     * @returns {string}\n\t     */\n\t    value: function encode(data) {\n\t      var pairs = [];\n\t\n\t      Object.keys(data).forEach(function (key) {\n\t        pairs.push(encodeURIComponent(key) + '=' + encodeURIComponent(data[key]));\n\t      });\n\t\n\t      return pairs.join('&');\n\t    }\n\t\n\t    /**\n\t     * Decode\n\t     *\n\t     * @description\n\t     * Parse a x-www-form-urlencoded into an object.\n\t     *\n\t     * @param {string} data\n\t     * @returns {Object}\n\t     */\n\t\n\t  }, {\n\t    key: 'decode',\n\t    value: function decode(data) {\n\t      var obj = {};\n\t\n\t      data.split('&').forEach(function (property) {\n\t        var pair = property.split('=');\n\t        var key = decodeURIComponent(pair[0]);\n\t        var val = decodeURIComponent(pair[1]);\n\t\n\t        obj[key] = val;\n\t      });\n\t\n\t      return obj;\n\t    }\n\t  }]);\n\t\n\t  return FormUrlEncoded;\n\t}();\n\t\n\t/**\n\t * Export\n\t */\n\t\n\t\n\tmodule.exports = FormUrlEncoded;\n\n/***/ },\n/* 132 */\n/***/ function(module, exports) {\n\n\tmodule.exports = URL;\n\n/***/ },\n/* 133 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global, Buffer) {'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * Dependencies\n\t */\n\tvar URL = __webpack_require__(132);\n\tvar assert = __webpack_require__(92);\n\tvar crypto = __webpack_require__(108);\n\tvar base64url = __webpack_require__(128);\n\tvar fetch = __webpack_require__(93);\n\tvar Headers = fetch.Headers ? fetch.Headers : global.Headers;\n\tvar FormUrlEncoded = __webpack_require__(131);\n\tvar IDToken = __webpack_require__(134);\n\t//const AccessToken = require('./AccessToken')\n\t\n\t/**\n\t * AuthenticationResponse\n\t */\n\t\n\tvar AuthenticationResponse = function () {\n\t  function AuthenticationResponse() {\n\t    _classCallCheck(this, AuthenticationResponse);\n\t  }\n\t\n\t  _createClass(AuthenticationResponse, null, [{\n\t    key: 'validateResponse',\n\t\n\t\n\t    /**\n\t     * validateResponse\n\t     *\n\t     * @description\n\t     * Authentication response validation.\n\t     *\n\t     * @param {string|Object} response\n\t     * @returns {Promise}\n\t     */\n\t    value: function validateResponse(response) {\n\t      return Promise.resolve(response).then(this.parseResponse).then(this.matchRequest).then(this.validateStateParam).then(this.errorResponse).then(this.validateResponseMode).then(this.validateResponseParams).then(this.exchangeAuthorizationCode).then(this.validateIDToken).then(function () {\n\t        // what kind of response object?\n\t        // instance of AuthenticationRequest?\n\t        return response;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * parseResponse\n\t     *\n\t     * @param {Object} response\n\t     * @returns {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'parseResponse',\n\t    value: function parseResponse(response) {\n\t      var redirect = response.redirect,\n\t          body = response.body;\n\t\n\t      // response must be either a redirect uri or request body, but not both\n\t\n\t      if (redirect && body || !redirect && !body) {\n\t        throw new Error('Invalid response mode');\n\t      }\n\t\n\t      // parse redirect uri\n\t      if (redirect) {\n\t        var url = new URL(redirect);\n\t        var search = url.search,\n\t            hash = url.hash;\n\t\n\t\n\t        if (search && hash) {\n\t          throw new Error('Invalid response mode');\n\t        }\n\t\n\t        if (search) {\n\t          response.params = FormUrlEncoded.decode(search.substring(1));\n\t          response.mode = 'query';\n\t        }\n\t\n\t        if (hash) {\n\t          response.params = FormUrlEncoded.decode(hash.substring(1));\n\t          response.mode = 'fragment';\n\t        }\n\t      }\n\t\n\t      // parse request form body\n\t      if (body) {\n\t        response.params = FormUrlEncoded.decode(body);\n\t        response.mode = 'form_post';\n\t      }\n\t\n\t      return response;\n\t    }\n\t\n\t    /**\n\t     * matchRequest\n\t     *\n\t     * @param {Object} response\n\t     * @returns {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'matchRequest',\n\t    value: function matchRequest(response) {\n\t      var rp = response.rp,\n\t          params = response.params,\n\t          session = response.session;\n\t\n\t      var state = params.state;\n\t      var issuer = rp.provider.configuration.issuer;\n\t\n\t      if (!state) {\n\t        throw new Error('Missing state parameter in authentication response');\n\t      }\n\t\n\t      var key = issuer + '/requestHistory/' + state;\n\t      var request = session[key];\n\t\n\t      if (!request) {\n\t        throw new Error('Mismatching state parameter in authentication response');\n\t      }\n\t\n\t      response.request = JSON.parse(request);\n\t      return response;\n\t    }\n\t\n\t    /**\n\t     * validateStateParam\n\t     *\n\t     * @param {Object} response\n\t     * @returns {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'validateStateParam',\n\t    value: function validateStateParam(response) {\n\t      var octets = new Uint8Array(response.request.state);\n\t      var encoded = response.params.state;\n\t\n\t      return crypto.subtle.digest({ name: 'SHA-256' }, octets).then(function (digest) {\n\t        if (encoded !== base64url(Buffer.from(digest))) {\n\t          throw new Error('Mismatching state parameter in authentication response');\n\t        }\n\t\n\t        return response;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * errorResponse\n\t     *\n\t     * @param {Object} response\n\t     * @returns {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'errorResponse',\n\t    value: function errorResponse(response) {\n\t      var error = response.params.error;\n\t\n\t      if (error) {\n\t        return Promise.reject(error);\n\t      }\n\t\n\t      return Promise.resolve(response);\n\t    }\n\t\n\t    /**\n\t     * validateResponseMode\n\t     *\n\t     * @param {Object} response\n\t     * @returns {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'validateResponseMode',\n\t    value: function validateResponseMode(response) {\n\t      if (response.request.response_type !== 'code' && response.mode === 'query') {\n\t        throw new Error('Invalid response mode');\n\t      }\n\t\n\t      return response;\n\t    }\n\t\n\t    /**\n\t     * validateResponseParams\n\t     *\n\t     * @param {Object} response\n\t     * @returns {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'validateResponseParams',\n\t    value: function validateResponseParams(response) {\n\t      var request = response.request,\n\t          params = response.params;\n\t\n\t      var expectedParams = request.response_type.split(' ');\n\t\n\t      if (expectedParams.includes('code')) {\n\t        assert(params.code, 'Missing authorization code in authentication response');\n\t        // TODO assert novelty of code\n\t      }\n\t\n\t      if (expectedParams.includes('id_token')) {\n\t        assert(params.id_token, 'Missing id_token in authentication response');\n\t      }\n\t\n\t      if (expectedParams.includes('token')) {\n\t        assert(params.access_token, 'Missing access_token in authentication response');\n\t\n\t        assert(params.token_type, 'Missing token_type in authentication response');\n\t      }\n\t\n\t      return response;\n\t    }\n\t\n\t    /**\n\t     * exchangeAuthorizationCode\n\t     *\n\t     * @param {Object} response\n\t     * @returns {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'exchangeAuthorizationCode',\n\t    value: function exchangeAuthorizationCode(response) {\n\t      var rp = response.rp,\n\t          params = response.params,\n\t          request = response.request;\n\t\n\t      var code = params.code;\n\t\n\t      // only exchange the authorization code when the response type is \"code\"\n\t      if (!code || request['response_type'] !== 'code') {\n\t        return Promise.resolve(response);\n\t      }\n\t\n\t      var provider = rp.provider,\n\t          registration = rp.registration;\n\t\n\t      var id = registration['client_id'];\n\t      var secret = registration['client_secret'];\n\t\n\t      // verify the client is not public\n\t      if (!secret) {\n\t        throw new AuthenticationError('Client cannot exchange authorization code because ' + 'it is not a confidential client');\n\t      }\n\t\n\t      // initialize token request arguments\n\t      var endpoint = provider.configuration.token_endpoint;\n\t      var method = 'POST';\n\t\n\t      // initialize headers\n\t      var headers = new Headers({\n\t        'Content-Type': 'application/x-www-form-urlencoded'\n\t      });\n\t\n\t      // initialize the token request parameters\n\t      var body = FormUrlEncoded.encode({\n\t        'grant_type': 'authorization_code',\n\t        'code': code,\n\t        'redirect_uri': request['redirect_uri']\n\t      });\n\t\n\t      // determine client authentication method\n\t      var authMethod = registration['token_endpoint_auth_method'] || 'client_secret_basic';\n\t\n\t      // client secret basic authentication\n\t      if (authMethod === 'client_secret_basic') {\n\t        var credentials = new Buffer(id + ':' + secret).toString('base64');\n\t        headers.set('Authorization', 'Basic ' + credentials);\n\t      }\n\t\n\t      // client secret post authentication\n\t      if (authMethod === 'client_secret_post') {\n\t        body['client_id'] = id;\n\t        body['client_secret'] = secret;\n\t      }\n\t\n\t      // TODO\n\t      // client_secret_jwt authentication\n\t      // private_key_jwt\n\t\n\t      // make the token request\n\t      return fetch(endpoint, { method: method, headers: headers, body: body }).then(function (tokenResponse) {\n\t        return tokenResponse.json();\n\t      }).then(function (tokenResponse) {\n\t        assert(tokenResponse['access_token'], 'Missing access_token in token response');\n\t\n\t        assert(tokenResponse['token_type'], 'Missing token_type in token response');\n\t\n\t        assert(tokenResponse['id_token'], 'Missing id_token in token response');\n\t\n\t        // anything else?\n\t\n\t        // IS THIS THE RIGHT THING TO DO HERE?\n\t        response.params = Object.assign(response.params, tokenResponse);\n\t        return response;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * validateIDToken\n\t     *\n\t     * @param {Object} response\n\t     * @returns {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'validateIDToken',\n\t    value: function validateIDToken(response) {\n\t      var jwt = response.params.id_token;\n\t\n\t      // only validate the ID Token if present in the response\n\t      if (!jwt) {\n\t        return Promise.resolve(response);\n\t      }\n\t\n\t      var _response$rp = response.rp,\n\t          provider = _response$rp.provider,\n\t          registration = _response$rp.registration;\n\t      var configuration = provider.configuration,\n\t          jwks = provider.jwks;\n\t\n\t\n\t      return Promise.resolve(response).then(AuthenticationResponse.decryptIDToken).then(AuthenticationResponse.decodeIDToken).then(AuthenticationResponse.validateIssuer).then(AuthenticationResponse.validateAudience).then(AuthenticationResponse.resolveKeys).then(AuthenticationResponse.verifySignature).then(AuthenticationResponse.validateExpires).then(AuthenticationResponse.verifyNonce).then(AuthenticationResponse.validateACR).then(AuthenticationResponse.validateAuthTime).then(AuthenticationResponse.validateAccessTokenHash).then(AuthenticationResponse.validateCodeHash);\n\t    }\n\t\n\t    /**\n\t     * decryptIDToken\n\t     *\n\t     * @param {Object} response\n\t     * @returns {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'decryptIDToken',\n\t    value: function decryptIDToken(response) {\n\t      // TODO\n\t      return Promise.resolve(response);\n\t    }\n\t\n\t    /**\n\t     * decodeIDToken\n\t     *\n\t     * @param {Object} response\n\t     * @returns {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'decodeIDToken',\n\t    value: function decodeIDToken(response) {\n\t      var jwt = response.params.id_token;\n\t\n\t      if (jwt) {\n\t        response.decoded = IDToken.decode(jwt);\n\t      }\n\t\n\t      return response;\n\t    }\n\t\n\t    /**\n\t     * validateIssuer\n\t     *\n\t     * @param {Object} response\n\t     * @returns {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'validateIssuer',\n\t    value: function validateIssuer(response) {\n\t      var configuration = response.rp.provider.configuration;\n\t      var payload = response.decoded.payload;\n\t\n\t      // validate issuer of token matches this relying party's provider\n\t      if (payload.iss !== configuration.issuer) {\n\t        throw new Error('Mismatching issuer in ID Token');\n\t      }\n\t\n\t      return response;\n\t    }\n\t\n\t    /**\n\t     * validateAudience\n\t     *\n\t     * @param {Object} response\n\t     * @returns {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'validateAudience',\n\t    value: function validateAudience(response) {\n\t      var registration = response.rp.registration;\n\t      var _response$decoded$pay = response.decoded.payload,\n\t          aud = _response$decoded$pay.aud,\n\t          azp = _response$decoded$pay.azp;\n\t\n\t      // validate audience includes this relying party\n\t\n\t      if (typeof aud === 'string' && aud !== registration['client_id']) {\n\t        throw new Error('Mismatching audience in id_token');\n\t      }\n\t\n\t      // validate audience includes this relying party\n\t      if (Array.isArray(aud) && !aud.includes(registration['client_id'])) {\n\t        throw new Error('Mismatching audience in id_token');\n\t      }\n\t\n\t      // validate authorized party is present if required\n\t      if (Array.isArray(aud) && !azp) {\n\t        throw new Error('Missing azp claim in id_token');\n\t      }\n\t\n\t      // validate authorized party is this relying party\n\t      if (azp && azp !== registration['client_id']) {\n\t        throw new Error('Mismatching azp claim in id_token');\n\t      }\n\t\n\t      return response;\n\t    }\n\t\n\t    /**\n\t     * resolveKeys\n\t     *\n\t     * @param {Object} response\n\t     * @returns {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'resolveKeys',\n\t    value: function resolveKeys(response) {\n\t      var rp = response.rp;\n\t      var provider = rp.provider;\n\t      var jwks = provider.jwks;\n\t      var decoded = response.decoded;\n\t\n\t      //if (decoded.resolveKeys(jwks)) {\n\t      //  return Promise.resolve(response)\n\t      //}\n\t\n\t      return rp.jwks().then(function (jwks) {\n\t        if (decoded.resolveKeys(jwks)) {\n\t          return Promise.resolve(response);\n\t        } else {\n\t          throw new Error('Cannot resolve signing key for ID Token.');\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * verifySignature\n\t     *\n\t     * @param {Object} response\n\t     * @returns {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'verifySignature',\n\t    value: function verifySignature(response) {\n\t      var alg = response.decoded.header.alg;\n\t      var registration = response.rp.registration;\n\t      var expectedAlgorithm = registration['id_token_signed_response_alg'] || 'RS256';\n\t\n\t      // validate signing algorithm matches expectation\n\t      if (alg !== expectedAlgorithm) {\n\t        throw new Error('Expected ID Token to be signed with ' + expectedAlgorithm);\n\t      }\n\t\n\t      return response.decoded.verify().then(function (verified) {\n\t        if (!verified) {\n\t          throw new Error('Invalid ID Token signature');\n\t        }\n\t\n\t        return response;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * validateExpires\n\t     *\n\t     * @param {Object} response\n\t     * @returns {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'validateExpires',\n\t    value: function validateExpires(response) {\n\t      var exp = response.decoded.payload.exp;\n\t\n\t      // validate expiration of token\n\t      if (exp <= Math.floor(Date.now() / 1000)) {\n\t        throw new Error('Expired ID Token');\n\t      }\n\t\n\t      return response;\n\t    }\n\t\n\t    /**\n\t     * verifyNonce\n\t     *\n\t     * @param {Object} response\n\t     * @returns {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'verifyNonce',\n\t    value: function verifyNonce(response) {\n\t      var octets = new Uint8Array(response.request.nonce);\n\t      var nonce = response.decoded.payload.nonce;\n\t\n\t      if (!nonce) {\n\t        throw new Error('Missing nonce in ID Token');\n\t      }\n\t\n\t      return crypto.subtle.digest({ name: 'SHA-256' }, octets).then(function (digest) {\n\t        if (nonce !== base64url(Buffer.from(digest))) {\n\t          throw new Error('Mismatching nonce in ID Token');\n\t        }\n\t\n\t        return response;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * validateAcr\n\t     *\n\t     * @param {Object} response\n\t     * @returns {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'validateAcr',\n\t    value: function validateAcr(response) {\n\t      // TODO\n\t      return response;\n\t    }\n\t\n\t    /**\n\t     * validateAccessTokenHash\n\t     *\n\t     * @param {Object} response\n\t     * @returns {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'validateAccessTokenHash',\n\t    value: function validateAccessTokenHash(response) {\n\t      // TODO\n\t      return response;\n\t    }\n\t\n\t    /**\n\t     * validateAuthorizationCodeHash\n\t     *\n\t     * @param {Object} response\n\t     * @returns {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'validateAuthorizationCodeHash',\n\t    value: function validateAuthorizationCodeHash(response) {\n\t      // TODO\n\t      return response;\n\t    }\n\t  }]);\n\t\n\t  return AuthenticationResponse;\n\t}();\n\t\n\t/**\n\t * Export\n\t */\n\t\n\t\n\tmodule.exports = AuthenticationResponse;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(47).Buffer))\n\n/***/ },\n/* 134 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Local dependencies\n\t */\n\tvar _require = __webpack_require__(103),\n\t    JWT = _require.JWT;\n\t\n\tvar IDTokenSchema = __webpack_require__(135);\n\t\n\t/**\n\t * IDToken\n\t */\n\t\n\tvar IDToken = function (_JWT) {\n\t  _inherits(IDToken, _JWT);\n\t\n\t  function IDToken() {\n\t    _classCallCheck(this, IDToken);\n\t\n\t    return _possibleConstructorReturn(this, (IDToken.__proto__ || Object.getPrototypeOf(IDToken)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(IDToken, null, [{\n\t    key: 'schema',\n\t\n\t\n\t    /**\n\t     * Schema\n\t     */\n\t    get: function get() {\n\t      return IDTokenSchema;\n\t    }\n\t  }]);\n\t\n\t  return IDToken;\n\t}(JWT);\n\t\n\t/**\n\t * Export\n\t */\n\t\n\t\n\tmodule.exports = IDToken;\n\n/***/ },\n/* 135 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\n\t * Local dependencies\n\t */\n\tvar _require = __webpack_require__(103),\n\t    JWTSchema = _require.JWTSchema;\n\t\n\t/**\n\t * IDToken Schema\n\t */\n\t\n\t\n\tvar IDTokenSchema = JWTSchema.extend({\n\t  properties: {\n\t\n\t    /**\n\t     * header\n\t     * http://openid.net/specs/openid-connect-core-1_0.html#IDToken\n\t     * ID Tokens SHOULD NOT use the JWS or JWE x5u, x5c, jku, or jwk Header\n\t     * Parameter fields. Instead, references to keys used are communicated in\n\t     * advance using Discovery and Registration parameters, per Section 10.\n\t     */\n\t    header: {\n\t      //not: { required: ['x5u', 'x5c', 'jku', 'jwk'] }\n\t    },\n\t\n\t    /**\n\t     * payload\n\t     */\n\t    payload: {\n\t      properties: {\n\t\n\t        /**\n\t         * iss\n\t         *\n\t         * REQUIRED. Issuer Identifier for the Issuer of the response.\n\t         * The iss value is a case sensitive URL using the https scheme\n\t         * that contains scheme, host, and optionally, port number and\n\t         * path components and no query or fragment components.\n\t         */\n\t        iss: { type: 'string', format: 'url' },\n\t\n\t        /**\n\t         * sub\n\t         *\n\t         * REQUIRED. Subject Identifier. A locally unique and never\n\t         * reassigned identifier within the Issuer for the End-User, which\n\t         * is intended to be consumed by the Client, e.g., 24400320 or\n\t         * AItOawmwtWwcT0k51BayewNvutrJUqsvl6qs7A4. It MUST NOT exceed 255\n\t         * ASCII characters in length. The sub value is a case sensitive\n\t         * string.\n\t         */\n\t        sub: { type: 'string', maxLength: 255 },\n\t\n\t        /**\n\t         * aud\n\t         *\n\t         * REQUIRED. Audience(s) that this ID Token is intended for. It\n\t         * MUST contain the OAuth 2.0 client_id of the Relying Party as an\n\t         * audience value. It MAY also contain identifiers for other audiences.\n\t         * In the general case, the aud value is an array of case sensitive\n\t         * strings. In the common special case when there is one audience,\n\t         * the aud value MAY be a single case sensitive string.\n\t         */\n\t        // inherited from JWTClaimsSetSchema\n\t\n\t        /**\n\t         * exp\n\t         *\n\t         * REQUIRED. Expiration time on or after which the ID Token MUST NOT\n\t         * be accepted for processing. The processing of this parameter\n\t         * requires that the current date/time MUST be before the expiration\n\t         * date/time listed in the value. Implementers MAY provide for some\n\t         * small leeway, usually no more than a few minutes, to account for\n\t         * clock skew. Its value is a JSON number representing the number of\n\t         * seconds from 1970-01-01T0:0:0Z as measured in UTC until the\n\t         * date/time. See RFC 3339 [RFC3339] for details regarding date/times\n\t         * in general and UTC in particular.\n\t         */\n\t        // inherited from JWTClaimsSetSchema\n\t\n\t        /**\n\t         * iat\n\t         *\n\t         * REQUIRED. Time at which the JWT was issued. Its value is a\n\t         * JSON number representing the number of seconds from\n\t         * 1970-01-01T0:0:0Z as measured in UTC until the date/time.\n\t         */\n\t        // inherited from JWTClaimsSetSchema\n\t\n\t        /**\n\t         * auth_time\n\t         *\n\t         * Time when the End-User authentication occurred. Its value is a\n\t         * JSON number representing the number of seconds from\n\t         * 1970-01-01T0:0:0Z as measured in UTC until the date/time. When a\n\t         * max_age request is made or when auth_time is requested as an\n\t         * Essential Claim, then this Claim is REQUIRED; otherwise, its\n\t         * inclusion is OPTIONAL. (The auth_time Claim semantically\n\t         * corresponds to the OpenID 2.0 PAPE [OpenID.PAPE] auth_time\n\t         * response parameter.)\n\t         */\n\t        auth_time: { type: 'integer', format: 'NumericDate' },\n\t\n\t        /**\n\t         * nonce\n\t         *\n\t         * String value used to associate a Client session with an ID Token,\n\t         * and to mitigate replay attacks. The value is passed through\n\t         * unmodified from the Authentication Request to the ID Token. If\n\t         * present in the ID Token, Clients MUST verify that the nonce Claim\n\t         * Value is equal to the value of the nonce parameter sent in the\n\t         * Authentication Request. If present in the Authentication Request,\n\t         * Authorization Servers MUST include a nonce Claim in the ID Token\n\t         * with the Claim Value being the nonce value sent in the\n\t         * Authentication Request. Authorization Servers SHOULD perform no\n\t         * other processing on nonce values used. The nonce value is a case\n\t         * sensitive string.\n\t         */\n\t        nonce: { type: 'string' },\n\t\n\t        /**\n\t         * acr\n\t         *\n\t         * OPTIONAL. Authentication Context Class Reference. String\n\t         * specifying an Authentication Context Class Reference value that\n\t         * identifies the Authentication Context Class that the authentication\n\t         * performed satisfied. The value \"0\" indicates the End-User\n\t         * authentication did not meet the requirements of ISO/IEC 29115\n\t         * [ISO29115] level 1. Authentication using a long-lived browser\n\t         * cookie, for instance, is one example where the use of \"level 0\" is\n\t         * appropriate. Authentications with level 0 SHOULD NOT be used to\n\t         * authorize access to any resource of any monetary value. (This\n\t         * corresponds to the OpenID 2.0 PAPE [OpenID.PAPE] nist_auth_level\n\t         * 0.) An absolute URI or an RFC 6711 [RFC6711] registered name\n\t         * SHOULD be used as the acr value; registered names MUST NOT be used\n\t         * with a different meaning than that which is registered. Parties\n\t         * using this claim will need to agree upon the meanings of the\n\t         * values used, which may be context-specific. The acr value is a\n\t         * case sensitive string.\n\t         */\n\t        acr: { type: 'string' },\n\t\n\t        /**\n\t         * amr\n\t         * OPTIONAL. Authentication Methods References. JSON array of strings\n\t         * that are identifiers for authentication methods used in the\n\t         * authentication. For instance, values might indicate that both\n\t         * password and OTP authentication methods were used. The definition\n\t         * of particular values to be used in the amr Claim is beyond the\n\t         * scope of this specification. Parties using this claim will need to\n\t         * agree upon the meanings of the values used, which may be context-\n\t         * specific. The amr value is an array of case sensitive strings.\n\t         */\n\t        amr: { type: 'array', items: { type: 'string' } },\n\t\n\t        /**\n\t         * azp\n\t         * OPTIONAL. Authorized party - the party to which the ID Token was\n\t         * issued. If present, it MUST contain the OAuth 2.0 Client ID of this\n\t         * party. This Claim is only needed when the ID Token has a single\n\t         * audience value and that audience is different than the authorized\n\t         * party. It MAY be included even when the authorized party is the\n\t         * same as the sole audience. The azp value is a case sensitive string\n\t         * containing a StringOrURI value.\n\t         */\n\t        azp: { type: 'string', format: 'StringOrURI' }\n\t      },\n\t\n\t      /**\n\t       * Required Claims\n\t       */\n\t      required: ['iss', 'sub', 'aud', 'exp', 'iat']\n\t    }\n\t  }\n\t});\n\t\n\t/**\n\t * Export\n\t */\n\tmodule.exports = IDTokenSchema;\n\n/***/ },\n/* 136 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\n\t * Dependencies\n\t */\n\tvar _require = __webpack_require__(94),\n\t    JSONSchema = _require.JSONSchema;\n\t\n\t/**\n\t * RelyingParty Schema\n\t *\n\t * This schema initializes and verifies Relying Party client configuration.\n\t * RelyingParty objects can be persisted and rehydrated. By encapsulating this data in\n\t * it's own class, it's possible to have multiple RP configurations running\n\t * simultaneously.\n\t */\n\t\n\t\n\tvar RelyingPartySchema = new JSONSchema({\n\t  type: 'object',\n\t  properties: {\n\t\n\t    /**\n\t     * provider\n\t     *\n\t     * Information about the provider, including issuer URL, human readable name,\n\t     * and any configuration or provider metadata retrieved from the OP.\n\t     */\n\t    provider: {\n\t      type: 'object',\n\t      properties: {\n\t        name: { type: 'string' },\n\t        url: { type: 'string', format: 'uri' },\n\t        // NOTE:\n\t        // OpenID Configuration (discovery response) and JSON Web Keys Set for an\n\t        // issuer can be cached here. However the cache should not be persisted or\n\t        // relied upon.\n\t        //\n\t        configuration: {}, // .well-known/openid-configuration\n\t        jwks: {} // /jwks\n\t      },\n\t      required: ['url']\n\t    },\n\t\n\t    /**\n\t     * defaults\n\t     *\n\t     * Default request parameters for authentication and dynamic registration requests.\n\t     * These values can be extended or overridden via arguments to the respective\n\t     * request methods.\n\t     *\n\t     * These are part of the relying party client configuration and can be serialized\n\t     * and persisted.\n\t     */\n\t    defaults: {\n\t      type: 'object',\n\t      properties: {\n\t\n\t        /**\n\t         * Default authentication request parameters\n\t         */\n\t        authenticate: {\n\t          type: 'object',\n\t          properties: {\n\t            redirect_uri: {\n\t              type: 'string',\n\t              format: 'uri'\n\t            },\n\t            response_type: {\n\t              type: 'string',\n\t              default: 'id_token token', // browser detection\n\t              enum: ['code', 'token', 'id_token token', 'id_token token code']\n\t            },\n\t            display: {\n\t              type: 'string',\n\t              default: 'page',\n\t              enum: ['page', 'popup']\n\t            },\n\t            scope: {\n\t              type: ['string', 'array'],\n\t              default: ['openid']\n\t            }\n\t          }\n\t        },\n\t\n\t        /**\n\t         * Default client registration parameters\n\t         */\n\t        register: {}\n\t      }\n\t    },\n\t\n\t    /**\n\t     * registration\n\t     *\n\t     * This is the client registration response from dynamic registration. It should\n\t     * always reflect the client configuration on the openid provider. A client access\n\t     * token is stored here\n\t     */\n\t    registration: {}, // ClientMetadataSchema\n\t\n\t    /**\n\t     * store\n\t     */\n\t    store: {\n\t      type: 'object',\n\t      default: {}\n\t    }\n\t  }\n\t});\n\t\n\t/**\n\t * Export\n\t */\n\tmodule.exports = RelyingPartySchema;\n\n/***/ },\n/* 137 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t/**\n\t * Provides a Solid web client class for performing LDP CRUD operations.\n\t * @module web\n\t */\n\t\n\tvar DEFAULT_ACCEPT = 'text/turtle;q=0.8,*/*;q=0.5';\n\tvar DEFAULT_MIME_TYPE = 'text/turtle';\n\tvar defaultConfig = __webpack_require__(138);\n\t\n\tvar composePatchQuery = __webpack_require__(139).composePatchQuery;\n\tvar SolidResponse = __webpack_require__(140);\n\tvar SolidContainer = __webpack_require__(142);\n\tvar XMLHttpRequest = __webpack_require__(146);\n\tvar HttpError = __webpack_require__(147);\n\tvar vocab = __webpack_require__(143);\n\t\n\t/**\n\t * Provides a collection of Solid/LDP web operations (CRUD)\n\t * @class SolidWebClient\n\t * @constructor\n\t * @param rdf {RDF} RDF library (like rdflib.js or rdf-ext) for parsing\n\t * @param [config] {Object} Config hashmap\n\t * @param [config.auth] {ClientAuthOIDC} Solid OIDC auth client instance\n\t */\n\tfunction SolidWebClient(rdf) {\n\t  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t  this.rdf = rdf;\n\t  this.vocab = vocab(rdf);\n\t  this.config = Object.assign(defaultConfig, config);\n\t  this.auth = config.auth;\n\t}\n\t\n\t/**\n\t * Creates a Solid container with the specified name.\n\t * Uses PUT instead of POST to guarantee the container name (and uses\n\t * conditional HTTP headers to fail with a `409 Conflict` error if\n\t * a container with that name already exists).\n\t * @method createContainer\n\t * @param parentUrl {String} Parent directory/container in which to create\n\t * @param name {String} Container name (slug / URL fragment), no trailing\n\t *   slash needed.\n\t * @param [options] Options hashmap (optional, see `solidRequest()`)\n\t * @param [data] {String} Optional RDF data payload (additional triples\n\t *   that will be added to the container's metadata)\n\t * @throw {HttpError} Throws an error if a resource or container with the\n\t *   same name already exists\n\t * @return {Promise<SolidResponse>}\n\t */\n\tSolidWebClient.prototype.createContainer = function createContainer(parentUrl, name, options, data) {\n\t  return this.post(parentUrl, data, name, true);\n\t  // var newContainerUrl = parentUrl + name\n\t  // options = options || {}\n\t  // options.headers = options.headers || {}\n\t  // options.headers['If-None-Match'] = '*'\n\t  // var resourceType = vocab.ldp('BasicContainer')\n\t  // options.headers['Link'] = resourceType + '; rel=\"type\"'\n\t  // var mimeType = 'text/turtle'\n\t  // return this.put(newContainerUrl, data, mimeType, options)\n\t  //  .catch(function (error) {\n\t  //    if (error instanceof HttpError) {\n\t  //      if (error.code === HttpError.CONFLICT) {\n\t  //        error.message = 'A resource with the same name already exists'\n\t  //      } else if (error.code === HttpError.PRECONDITION_FAILED) {\n\t  //        error.message = 'A container with the same name already exists'\n\t  //      }\n\t  //      throw error\n\t  //    }\n\t  //  })\n\t};\n\t\n\t/**\n\t * Creates and returns the appropriate Solid wrapper for the XHR response.\n\t * @method createResponse\n\t * @param xhrResponse {XMLHttpRequest} XHR Response\n\t * @param method {String} HTTP verb\n\t * @return {SolidResponse|SolidContainer} Either a SolidResponse or a\n\t *   SolidContainer instance.\n\t */\n\tSolidWebClient.prototype.createResponse = function createResponse(xhrResponse, method) {\n\t  var response = new SolidResponse(this.rdf, xhrResponse, method);\n\t  if (response.method === 'get' && response.isContainer()) {\n\t    return new SolidContainer(this.rdf, response.url, response);\n\t  }\n\t  return response;\n\t};\n\t/**\n\t * Returns the current window's location (for use with `needsProxy()`)\n\t * if used in browser, or `null` if used from Node.\n\t * @method currentUrl\n\t * @return {String|Null}\n\t */\n\tSolidWebClient.prototype.currentUrl = function currentUrl() {\n\t  if (typeof window !== 'undefined') {\n\t    return window.location.href;\n\t  } else {\n\t    return null;\n\t  }\n\t};\n\t/**\n\t * Deletes an existing resource or container.\n\t * @method del\n\t * @param url {String} URL of the resource or container to be deleted\n\t * @return {Promise|Object} Result of the HTTP Delete operation (returns true\n\t *   on success, or an anonymous error object on failure)\n\t */\n\tSolidWebClient.prototype.del = function del(url) {\n\t  return this.solidRequest(url, 'DELETE');\n\t};\n\t/**\n\t * Retrieves a resource or container by making an HTTP GET call.\n\t * @method get\n\t * @param url {String} URL of the resource or container to fetch\n\t * @param [options={}] Options hashmap (see `solidRequest()` docs)\n\t * @return {Promise<SolidResponse|SolidContainer>|Object} Result of the HTTP\n\t *   GET operation, or an error object\n\t */\n\tSolidWebClient.prototype.get = function get(url) {\n\t  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t  options.headers = options.headers || {};\n\t  // If no explicit Accept: header specified, set one\n\t  if (!options.headers['Accept']) {\n\t    options.headers['Accept'] = DEFAULT_ACCEPT;\n\t  }\n\t  return this.solidRequest(url, 'GET', options);\n\t};\n\t/**\n\t * Checks to see if a Solid resource exists, and returns useful resource\n\t *   metadata info.\n\t * @method head\n\t * @param url {String} URL of a resource or container\n\t * @param [options] Options hashmap (see `solidRequest()` docs)\n\t * @return {Promise} Result of an HTTP HEAD operation (returns a meta object)\n\t */\n\tSolidWebClient.prototype.head = function head(url, options) {\n\t  return this.solidRequest(url, 'HEAD', options);\n\t};\n\t/**\n\t * Loads a list of given RDF graphs via an async `Promise.all()`,\n\t * which resolves to an array of uri/parsed-graph hashes.\n\t * @method loadParsedGraphs\n\t * @param locations {Array<String>} Array of graph URLs to load\n\t * @param [options] Options hashmap (see `solidRequest()` docs)\n\t * @return {Promise<Array<Object>>}\n\t */\n\tSolidWebClient.prototype.loadParsedGraphs = function loadParsedGraphs(locations, options) {\n\t  var web = this;\n\t  var loadPromises = locations.map(function (location) {\n\t    var responseUrl; // may differ from location if redirected\n\t    return web.get(location, options).then(function (response) {\n\t      responseUrl = response.url;\n\t      return response.parsedGraph();\n\t    }).catch(function () {\n\t      // Suppress the error, no need to reject, just return null graph\n\t      return null;\n\t    }).then(function (parsedGraph) {\n\t      return {\n\t        uri: responseUrl,\n\t        value: parsedGraph\n\t      };\n\t    });\n\t  });\n\t  return Promise.all(loadPromises);\n\t};\n\t/**\n\t * Determines whether the web client needs to fall back onto a Proxy url,\n\t * to avoid being blocked by CORS\n\t * @method needsProxy\n\t * @param url {String}\n\t * @return {Boolean}\n\t */\n\tSolidWebClient.prototype.needsProxy = function needsProxy(url) {\n\t  var currentUrl = this.currentUrl();\n\t  var currentIsHttps = currentUrl && currentUrl.slice(0, 6) === 'https:';\n\t  var targetIsHttp = url && url.slice(0, 5) === 'http:';\n\t  return currentIsHttps && targetIsHttp;\n\t};\n\t/**\n\t * Issues an HTTP OPTIONS request. Useful for discovering server capabilities\n\t * (`Accept-Patch:`, `Updates-Via:` for websockets, etc).\n\t * @method options\n\t * @param url {String} URL of a resource or container\n\t * @return {Promise<SolidResponse>} Result of an HTTP OPTIONS operation\n\t */\n\tSolidWebClient.prototype.options = function options(url) {\n\t  return this.solidRequest(url, 'OPTIONS');\n\t};\n\t/**\n\t * Partially edits an RDF-type resource by performing a PATCH operation.\n\t *   Accepts arrays of individual statements (in Turtle format) as params.\n\t *   For example:\n\t *   [ '<a> <b> <c> .', '<d> <e> <f> .']\n\t * @method patch\n\t * @param url {String} URL of the resource to be edited\n\t * @param toDel {Array<String>} Triples to remove from the resource\n\t * @param toIns {Array<String>} Triples to insert into the resource\n\t * @param [options] Options hashmap\n\t * @return {Promise<SolidResponse>} Result of PATCH operation\n\t */\n\tSolidWebClient.prototype.patch = function patch(url, toDel, toIns, options) {\n\t  var data = composePatchQuery(toDel, toIns);\n\t  var mimeType = 'application/sparql-update';\n\t  options = options || {};\n\t  options.headers = options.headers || {};\n\t  options.headers['Content-Type'] = mimeType;\n\t  return this.solidRequest(url, 'PATCH', options, data);\n\t};\n\t/**\n\t * Creates a new resource by performing\n\t *   a Solid/LDP POST operation to a specified container.\n\t * @param url {String} URL of the container to post to\n\t * @param data {Object} Data/payload of the resource to be created\n\t * @param slug {String} Suggested URL fragment for the new resource\n\t * @param isContainer {Boolean} Is the object being created a Container\n\t *            or Resource?\n\t * @param mimeType {String} Content Type of the data/payload\n\t * @method post\n\t * @return {Promise|Object} Result of XHR POST (returns parsed\n\t *     response meta object) or an anonymous error object with status code\n\t */\n\tSolidWebClient.prototype.post = function post(url, data, slug, isContainer, mimeType) {\n\t  var resourceType;\n\t  if (isContainer) {\n\t    resourceType = this.vocab.ldp('BasicContainer');\n\t    // Force the right mime type for containers only\n\t    mimeType = 'text/turtle';\n\t  } else {\n\t    resourceType = this.vocab.ldp('Resource');\n\t    mimeType = mimeType || DEFAULT_MIME_TYPE;\n\t  }\n\t  var options = {};\n\t  options.headers = {};\n\t  options.headers['Link'] = resourceType + '; rel=\"type\"';\n\t  options.headers['Content-Type'] = mimeType;\n\t  if (slug && slug.length > 0) {\n\t    options.headers['Slug'] = slug;\n\t  }\n\t  return this.solidRequest(url, 'POST', options, data);\n\t};\n\t/**\n\t * Turns a given URL into a proxied version, using a proxy template\n\t * @method proxyUrl\n\t * @param url {String} Intended URL\n\t * @param proxyUrlTemplate {String}\n\t * @return {String}\n\t */\n\tSolidWebClient.prototype.proxyUrl = function proxyUrl(url, proxyUrlTemplate) {\n\t  proxyUrlTemplate = proxyUrlTemplate || this.config.proxyUrl;\n\t  return proxyUrlTemplate.replace('{uri}', encodeURIComponent(url));\n\t};\n\t/**\n\t * Updates an existing resource or creates a new resource by performing\n\t *   a Solid/LDP PUT operation to a specified container\n\t * @method put\n\t * @param url {String} URL of the resource to be updated/created\n\t * @param data {Object} Data/payload of the resource to be created or updated\n\t * @param [mimeType] {String} MIME Type of the resource to be created\n\t * @param [options] Options hashmap, see docs for `solidResponse()`\n\t * @return {Promise|Object} Result of PUT operation (returns parsed response\n\t *     meta object if successful, rejects with an anonymous error status\n\t *     object if not successful)\n\t */\n\tSolidWebClient.prototype.put = function put(url, data, mimeType, options) {\n\t  options = options || {};\n\t  options.headers = options.headers || {};\n\t  mimeType = mimeType || DEFAULT_MIME_TYPE;\n\t  options.headers['Content-Type'] = mimeType;\n\t  return this.solidRequest(url, 'PUT', options, data);\n\t};\n\t/**\n\t * Sends a generic XHR request with the appropriate Solid headers,\n\t * and returns a promise that resolves to a parsed response.\n\t * @method solidRequest\n\t * @param url {String} URL of the request\n\t * @param method {String} HTTP Verb ('GET', 'PUT', etc)\n\t * @param [options] Options hashmap\n\t * @param [options.noCredentials=false] {Boolean} Don't use `withCredentials`\n\t * @param [options.forceProxy=false] {Boolean} Enforce using proxy URL if true\n\t * @param [options.headers={}] {Object} HTTP headers to send along\n\t *          with request\n\t * @param [options.proxyUrl=config.proxyUrl] {String} Proxy URL to use for\n\t *          CORS Requests.\n\t * @param [options.timeout=config.timeout] {Number} Request timeout in\n\t *          milliseconds.\n\t * @param [data] {Object} Optional data / payload\n\t * @throws {HttpError} Rejects with `httpError.HttpError` of the appropriate\n\t *   type\n\t * @return {Promise<SolidResponse>}\n\t */\n\tSolidWebClient.prototype.solidRequest = function solidRequest(url, method, options, data) {\n\t  options = options || {};\n\t  options.headers = options.headers || {};\n\t  if (this.auth && this.auth.accessToken) {\n\t    options.headers['Authorization'] = 'Bearer ' + this.auth.accessToken;\n\t  }\n\t  options.proxyUrl = options.proxyUrl || this.config.proxyUrl;\n\t  options.timeout = options.timeout || this.config.timeout;\n\t  if (this.needsProxy(url) || options.forceProxy) {\n\t    url = this.proxyUrl(url);\n\t  }\n\t  var webClient = this;\n\t  return new Promise(function (resolve, reject) {\n\t    var http = new XMLHttpRequest();\n\t    http.open(method, url);\n\t    if (!options.noCredentials) {\n\t      http.withCredentials = true;\n\t    }\n\t    for (var header in options.headers) {\n\t      // Add in optional headers\n\t      http.setRequestHeader(header, options.headers[header]);\n\t    }\n\t    if (options.timeout) {\n\t      http.timeout = options.timeout;\n\t    }\n\t    http.onload = function () {\n\t      if (this.status >= 200 && this.status < 300) {\n\t        resolve(webClient.createResponse(this, method));\n\t      } else {\n\t        reject(new HttpError(this.status, this.statusText, { xhr: this }));\n\t      }\n\t    };\n\t    http.onerror = function () {\n\t      reject(new HttpError(this.status, this.statusText, { xhr: this }));\n\t    };\n\t    if (typeof data === 'undefined' || !data) {\n\t      http.send();\n\t    } else {\n\t      http.send(data);\n\t    }\n\t  });\n\t};\n\t\n\t/**\n\t * Returns a web client instance (convenience constructor method).\n\t * Usage:\n\t *\n\t *   ```\n\t *   var rdf = require('rdflib')  // or other compatible library\n\t *   var webClient = require('solid-web-client')(rdf)\n\t *   ```\n\t * @param rdf\n\t * @param config\n\t * @returns {SolidWebClient}\n\t */\n\tfunction getClient(rdf, config) {\n\t  return new SolidWebClient(rdf, config);\n\t}\n\t\n\tmodule.exports = getClient;\n\tmodule.exports.SolidWebClient = SolidWebClient;\n\n/***/ },\n/* 138 */\n/***/ function(module, exports) {\n\n\t'use strict'\n\t/**\n\t * Provides a simple configuration object for Solid web client\n\t * @module config-default\n\t */\n\tmodule.exports = {\n\t  /**\n\t   * Default proxy URL for servicing CORS requests\n\t   */\n\t  proxyUrl: 'https://databox.me/,proxy?uri={uri}',\n\t  /**\n\t   * Timeout for web/ajax operations, in milliseconds\n\t   */\n\t  timeout: 50000\n\t}\n\n\n/***/ },\n/* 139 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t/**\n\t * Provides misc utility functions for the web client\n\t * @module web-util\n\t */\n\t\n\tmodule.exports.absoluteUrl = absoluteUrl;\n\tmodule.exports.composePatchQuery = composePatchQuery;\n\tmodule.exports.hostname = hostname;\n\tmodule.exports.parseAllowedMethods = parseAllowedMethods;\n\tmodule.exports.parseLinkHeader = parseLinkHeader;\n\tmodule.exports.statementToNT = statementToNT;\n\t\n\t/**\n\t * Return an absolute URL\n\t * @method absoluteUrl\n\t * @param baseUrl {String} URL to be used as base\n\t * @param pathUrl {String} Absolute or relative URL\n\t * @return {String}\n\t */\n\tfunction absoluteUrl(baseUrl, pathUrl) {\n\t  if (pathUrl && pathUrl.slice(0, 4) !== 'http') {\n\t    return [baseUrl, pathUrl].map(function (path) {\n\t      if (path[0] === '/') {\n\t        path = path.slice(1);\n\t      }\n\t      if (path[path.length - 1] === '/') {\n\t        path = path.slice(0, path.length - 1);\n\t      }\n\t      return path;\n\t    }).join('/');\n\t  }\n\t  return pathUrl;\n\t}\n\t\n\t/**\n\t * Composes and returns a PATCH SPARQL query (for use with `web.patch()`)\n\t * @method composePatchQuery\n\t * @param toDel {Array<String|Statement>} List of triples to delete\n\t * @param toIns {Array<String|Statement>} List of triples to insert\n\t * @return {String} SPARQL query for use with PATCH\n\t */\n\tfunction composePatchQuery(toDel, toIns) {\n\t  var query = '';\n\t  var excludeDot = true;\n\t  if (toDel && toDel.length > 0) {\n\t    toDel = toDel.map(function (st) {\n\t      return statementToNT(st, excludeDot);\n\t    });\n\t    query += 'DELETE DATA { ' + toDel.join(' . ') + ' };\\n';\n\t  }\n\t  if (toIns && toIns.length > 0) {\n\t    toIns = toIns.map(function (st) {\n\t      return statementToNT(st, excludeDot);\n\t    });\n\t    query += 'INSERT DATA { ' + toIns.join(' . ') + ' };\\n';\n\t  }\n\t  return query;\n\t}\n\t\n\tfunction hostname(url) {\n\t  var protocol, hostname, result, pathSegments;\n\t  var fragments = url.split('//');\n\t  if (fragments.length === 2) {\n\t    protocol = fragments[0];\n\t    hostname = fragments[1];\n\t  } else {\n\t    hostname = url;\n\t  }\n\t  pathSegments = hostname.split('/');\n\t  if (protocol) {\n\t    result = protocol + '//' + pathSegments[0];\n\t  } else {\n\t    result = pathSegments[0];\n\t  }\n\t  if (url.startsWith('//')) {\n\t    result = '//' + result;\n\t  }\n\t  return result;\n\t}\n\t\n\t/**\n\t * Extracts the allowed HTTP methods from the 'Allow' and 'Accept-Patch'\n\t * headers, and returns a hashmap of verbs allowed by the server\n\t * @method parseAllowedMethods\n\t * @param allowMethodsHeader {String} `Access-Control-Allow-Methods` response\n\t *   header\n\t * @param acceptPatchHeader {String} `Accept-Patch` response header\n\t * @return {Object} Hashmap of verbs (in lowercase) allowed by the server for\n\t *   the current user. Example:\n\t *   ```\n\t *   {\n\t *     'get': true,\n\t *     'put': true\n\t *   }\n\t *   ```\n\t */\n\tfunction parseAllowedMethods(allowMethodsHeader, acceptPatchHeader) {\n\t  var allowedMethods = {};\n\t  if (allowMethodsHeader) {\n\t    var verbs = allowMethodsHeader.split(',');\n\t    verbs.forEach(function (methodName) {\n\t      if (methodName && allowMethodsHeader.indexOf(methodName) >= 0) {\n\t        allowedMethods[methodName.trim().toLowerCase()] = true;\n\t      }\n\t    });\n\t  }\n\t  if (acceptPatchHeader && acceptPatchHeader.indexOf('application/sparql-update') >= 0) {\n\t    allowedMethods.patch = true;\n\t  }\n\t  return allowedMethods;\n\t}\n\t\n\t/**\n\t* Parses a Link header from an XHR HTTP Request.\n\t* @method parseLinkHeader\n\t* @param link {String} Contents of the Link response header\n\t* @return {Object}\n\t*/\n\tfunction parseLinkHeader(link) {\n\t  if (!link) {\n\t    return {};\n\t  }\n\t  var linkexp = /<[^>]*>\\s*(\\s*;\\s*[^\\(\\)<>@,;:\"\\/\\[\\]\\?={} \\t]+=(([^\\(\\)<>@,;:\"\\/\\[\\]\\?={} \\t]+)|(\"[^\"]*\")))*(,|$)/g;\n\t  var paramexp = /[^\\(\\)<>@,;:\"\\/\\[\\]\\?={} \\t]+=(([^\\(\\)<>@,;:\"\\/\\[\\]\\?={} \\t]+)|(\"[^\"]*\"))/g;\n\t  var matches = link.match(linkexp);\n\t  var rels = {};\n\t  for (var i = 0; i < matches.length; i++) {\n\t    var split = matches[i].split('>');\n\t    var href = split[0].substring(1);\n\t    var ps = split[1];\n\t    var s = ps.match(paramexp);\n\t\n\t    for (var j = 0; j < s.length; j++) {\n\t      var p = s[j];\n\t      var paramsplit = p.split('=');\n\t      // var name = paramsplit[0]\n\t      var rel = paramsplit[1].replace(/[\"']/g, '');\n\t      if (!rels[rel]) {\n\t        rels[rel] = [];\n\t      }\n\t      rels[rel].push(href);\n\t      if (rels[rel].length > 1) {\n\t        rels[rel].sort();\n\t      }\n\t    }\n\t  }\n\t  return rels;\n\t}\n\t\n\t/**\n\t * Converts a statement to string (if it isn't already), optionally slices off\n\t * the period at the end, and returns the statement.\n\t * @method statementToNT\n\t * @param statement {String|Triple} RDF Statement to be converted.\n\t * @param [excludeDot=false] {Boolean} Optionally slice off ending period.\n\t * @return {String}\n\t */\n\tfunction statementToNT(statement, excludeDot) {\n\t  if (typeof statement !== 'string') {\n\t    // This is an RDF Statement. Convert to string\n\t    statement = statement.toCanonical();\n\t  }\n\t  if (excludeDot && statement.endsWith('.')) {\n\t    statement = statement.slice(0, -1);\n\t  }\n\t  return statement;\n\t}\n\n/***/ },\n/* 140 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t/**\n\t * @module response\n\t */\n\t\n\tmodule.exports = SolidResponse;\n\t\n\tvar webUtil = __webpack_require__(139);\n\tvar graphUtil = __webpack_require__(141); // Used by .parsedGraph()\n\t\n\t/**\n\t * Provides a wrapper around an XHR response object, and adds several\n\t * Solid-specific parsed fields (link headers, allowed verbs, etc)\n\t * @class SolidResponse\n\t * @constructor\n\t * @param rdf {RDF} RDF Library such as rdflib.js\n\t * @param xhrResponse {XMLHttpRequest} Result of XHR operation\n\t * @param method {String} HTTP verb for the original request. Passed in\n\t *   separately because it's not actually stored in the XHR object.\n\t */\n\tfunction SolidResponse(rdf, xhrResponse, method) {\n\t  if (!xhrResponse) {\n\t    this.xhr = null;\n\t    this.user = '';\n\t    this.method = null;\n\t    this.types = [];\n\t    this.graph = null;\n\t    return;\n\t  }\n\t  /**\n\t   * RDF Library such as rdflib.js. Used by parsedGraph()\n\t   * @property rdf\n\t   * @type RDF\n\t   */\n\t  this.rdf = rdf;\n\t  /**\n\t   * Hashmap of parsed `Link:` headers. Example:\n\t   *\n\t   *   ```\n\t   *   {\n\t   *     acl: [ 'resourceName.acl' ],\n\t   *     describedBy: [ 'resourceName.meta' ],\n\t   *     type: [\n\t   *       'http://www.w3.org/ns/ldp#RDFResource',\n\t   *       'http://www.w3.org/ns/ldp#Resource'\n\t   *     ]\n\t   *   }\n\t   *   ```\n\t   * @property linkHeaders\n\t   * @type Object\n\t   */\n\t  var linkHeader = xhrResponse.getResponseHeader('Link');\n\t  this.linkHeaders = webUtil.parseLinkHeader(linkHeader) || {};\n\t\n\t  if (method) {\n\t    method = method.toLowerCase();\n\t  } else {\n\t    method = '';\n\t  }\n\t  /**\n\t   * HTTP verb for the original request (GET, PUT, etc)\n\t   * @property method\n\t   * @type String\n\t   */\n\t  this.method = method;\n\t\n\t  /**\n\t   * Name of the corresponding `.acl` resource\n\t   * @property acl\n\t   * @type String\n\t   */\n\t  this.acl = this.linkHeaders['acl'];\n\t  if (this.acl) {\n\t    this.acl = this.acl[0]; // Extract the single .acl link\n\t  }\n\t  /**\n\t   * Hashmap of HTTP methods/verbs allowed by the server.\n\t   * (If a verb is not allowed, it's not included.)\n\t   * Example:\n\t   *   ```\n\t   *   {\n\t   *     'get': true,\n\t   *     'put': true\n\t   *   }\n\t   *   ```\n\t   * @property allowedMethods\n\t   * @type Object\n\t   */\n\t  this.allowedMethods = this.parseAllowedMethods(xhrResponse, method);\n\t\n\t  /**\n\t   * Cache of the parsed graph of xhr.response,\n\t   * lazy-initialized when you call `response.parsedGraph()`\n\t   * @property graph\n\t   * @type {IndexedFormula}\n\t   */\n\t  this.graph = null;\n\t\n\t  /**\n\t   * Name of the corresponding `.meta` resource\n\t   * @property meta\n\t   * @type String\n\t   */\n\t  this.meta = this.linkHeaders['meta'] || this.linkHeaders['describedBy'];\n\t  if (this.meta) {\n\t    this.meta = this.meta[0]; // Extract the single .meta link\n\t  }\n\t  /**\n\t   * LDP Types for the resource.\n\t   * Example: [\n\t   *   'http://www.w3.org/ns/ldp#Resource',\n\t   *   'http://www.w3.org/ns/ldp#RDFResource'\n\t   * ]\n\t   * @property types\n\t   * @type Array<String>\n\t   */\n\t  this.types = this.typeLinkHeaders();\n\t  /**\n\t   * URL of the resource created or retrieved\n\t   * @property url\n\t   * @type String\n\t   */\n\t  this.url = xhrResponse.getResponseHeader('Location') ? webUtil.absoluteUrl(webUtil.hostname(xhrResponse.responseURL), xhrResponse.getResponseHeader('Location')) : xhrResponse.responseURL;\n\t  /**\n\t   * WebID URL of the currently authenticated user (empty string if none)\n\t   * @property user\n\t   * @type String\n\t   */\n\t  this.user = xhrResponse.getResponseHeader('User') || '';\n\t  /**\n\t   * URL of the corresponding websocket instance, for this resource\n\t   * Example: `wss://example.org/blog/hello-world`\n\t   * @property websocket\n\t   * @type String\n\t   */\n\t  this.websocket = xhrResponse.getResponseHeader('Updates-Via') || '';\n\t  /**\n\t   * Raw XHR response object\n\t   * @property xhr\n\t   * @type XMLHttpRequest\n\t   */\n\t  this.xhr = xhrResponse;\n\t}\n\t\n\t/**\n\t * Returns the absolute URL of the ACL resource for this response.\n\t * @method aclAbsoluteUrl\n\t * @return {String}\n\t */\n\tSolidResponse.prototype.aclAbsoluteUrl = function aclAbsoluteUrl() {\n\t  if (!this.acl) {\n\t    return null;\n\t  }\n\t  return this.resolveMetaOrAclUrl('acl');\n\t};\n\t\n\t/**\n\t * Returns the Content-Type of the response (or null if no response\n\t * is present)\n\t * @method contentType\n\t * @return {String|Null}\n\t */\n\tSolidResponse.prototype.contentType = function contentType() {\n\t  if (this.xhr) {\n\t    return this.xhr.getResponseHeader('Content-Type').split(';')[0]; // remove parameter\n\t  } else {\n\t    return null;\n\t  }\n\t};\n\t\n\t/**\n\t * Returns true if the resource exists (not a 404)\n\t * @method exists\n\t * @return {Boolean}\n\t */\n\tSolidResponse.prototype.exists = function exists() {\n\t  return this.xhr && this.xhr.status >= 200 && this.xhr.status < 400;\n\t};\n\t\n\t/**\n\t * Is this a Container instance (vs a regular resource).\n\t * @return {Boolean}\n\t */\n\tSolidResponse.prototype.isContainer = function isContainer() {\n\t  return this.isType('http://www.w3.org/ns/ldp#Container') || this.isType('http://www.w3.org/ns/ldp#BasicContainer');\n\t};\n\t\n\t/**\n\t * Returns true if the user is logged in with the server\n\t * @method isLoggedIn\n\t * @return {Boolean}\n\t */\n\tSolidResponse.prototype.isLoggedIn = function isLoggedIn() {\n\t  return this.user; // && this.user.slice(0, 4) === 'http'\n\t};\n\t\n\t/**\n\t * Returns true if this a given type matches this resource's types\n\t * @method isType\n\t * @param rdfClass {String}\n\t * @return {Boolean}\n\t */\n\tSolidResponse.prototype.isType = function isType(rdfClass) {\n\t  return this.types.indexOf(rdfClass) !== -1;\n\t};\n\t\n\t/**\n\t * Returns the absolute URL of the .meta resource for this response.\n\t * @method metaAbsoluteUrl\n\t * @return {String}\n\t */\n\tSolidResponse.prototype.metaAbsoluteUrl = function metaAbsoluteUrl() {\n\t  if (!this.meta) {\n\t    return null;\n\t  }\n\t  return this.resolveMetaOrAclUrl('meta');\n\t};\n\t\n\t/**\n\t * In case that this was preflight-type request (OPTIONS or POST, for example),\n\t * parses and returns the allowed methods for the resource (for the current\n\t * user).\n\t * @method parseAllowedMethods\n\t * @param xhrResponse {XMLHttpRequest}\n\t * @param method {String} HTTP verb for the original request\n\t * @return {Object} Hashmap of the allowed methods\n\t */\n\tSolidResponse.prototype.parseAllowedMethods = function parseAllowedMethods(xhrResponse, method) {\n\t  if (method === 'get') {\n\t    // Not a preflight request\n\t    return {};\n\t  } else {\n\t    return webUtil.parseAllowedMethods(xhrResponse.getResponseHeader('Allow'), xhrResponse.getResponseHeader('Accept-Patch'));\n\t  }\n\t};\n\t\n\t/**\n\t * Returns the parsed graph of the response (lazy-initializes it if it's not\n\t * present)\n\t * @method parsedGraph\n\t * @return {IndexedFormula}\n\t */\n\tSolidResponse.prototype.parsedGraph = function parsedGraph() {\n\t  if (!this.graph) {\n\t    this.graph = graphUtil.parseGraph(this.rdf, this.url, this.raw(), this.contentType());\n\t  }\n\t  return this.graph;\n\t};\n\t\n\t/**\n\t * Returns the raw XHR response (or null if absent)\n\t * @method raw\n\t * @return {Object|Null}\n\t */\n\tSolidResponse.prototype.raw = function raw() {\n\t  if (this.xhr) {\n\t    return this.xhr.response;\n\t  } else {\n\t    return null;\n\t  }\n\t};\n\t\n\t/**\n\t * Returns the absolute url of a \"related\" resource (.acl or .meta)\n\t * @param propertyName {string} Either 'acl' or 'meta'\n\t * @return {string}\n\t */\n\tSolidResponse.prototype.resolveMetaOrAclUrl = function resolveMetaOrAclUrl(propertyName) {\n\t  if (!this.url) {\n\t    return null;\n\t  }\n\t  var metaOrAclUrl = this[propertyName];\n\t  // if url is https://example.com/resource, parent is https://example.com/\n\t  var parentUrl = this.url.slice(0, this.url.lastIndexOf('/') + 1);\n\t  return webUtil.absoluteUrl(parentUrl, metaOrAclUrl);\n\t};\n\t\n\t/**\n\t * Returns a unique (de-duplicated) list of `rel=\"type\"` Link headers.\n\t * @return {Array}\n\t */\n\tSolidResponse.prototype.typeLinkHeaders = function typeLinkHeaders() {\n\t  if (!Array.isArray(this.linkHeaders.type)) {\n\t    return [];\n\t  }\n\t  var types = new Set(this.linkHeaders.type || []);\n\t  return Array.from(types);\n\t};\n\n/***/ },\n/* 141 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t/**\n\t * Provides convenience methods for graph manipulation.\n\t * Currently depends on RDFLib\n\t * @module graph-util\n\t */\n\t\n\tmodule.exports.appendGraph = appendGraph;\n\tmodule.exports.parseGraph = parseGraph;\n\tmodule.exports.parseLinks = parseLinks;\n\tmodule.exports.serializeStatements = serializeStatements;\n\tmodule.exports.graphFromStatements = graphFromStatements;\n\t\n\tvar ALL_STATEMENTS = null;\n\t\n\t/**\n\t * Appends RDF statements from one graph object to another\n\t * @method appendGraph\n\t * @param toGraph {Graph} Graph object to append to\n\t * @param fromGraph {Graph} Graph object to append from\n\t * @param docURI {String} Document URI to use as source\n\t */\n\tfunction appendGraph(toGraph, fromGraph, docURI) {\n\t  fromGraph.statementsMatching(ALL_STATEMENTS).forEach(function (st) {\n\t    toGraph.add(st.subject, st.predicate, st.object, st.why);\n\t  });\n\t}\n\t\n\t/**\n\t * Converts a list of RDF statements into a Graph, and returns\n\t * it.\n\t * @method graphFromStatements\n\t * @param rdf {RDF} RDF library such as rdflib.js\n\t * @param statements {Array<Statement>}\n\t * @return {Graph}\n\t */\n\tfunction graphFromStatements(rdf, statements) {\n\t  var graph = rdf.graph();\n\t  statements.forEach(function (st) {\n\t    graph.addStatement(st);\n\t  });\n\t  return graph;\n\t}\n\t\n\t/**\n\t * Parses a given graph, from text rdfSource, as a given content type.\n\t * Returns parsed graph.\n\t * @method parseGraph\n\t * @param rdf {RDF} RDF library such as rdflib.js\n\t * @param baseUrl {String}\n\t * @param rdfSource {String} Text source code\n\t * @param contentType {String} Mime Type (determines which parser to use)\n\t * @return {rdf.Graph}\n\t */\n\tfunction parseGraph(rdf, baseUrl, rdfSource, contentType) {\n\t  var parsedGraph = rdf.graph();\n\t  rdf.parse(rdfSource, parsedGraph, baseUrl, contentType);\n\t  return parsedGraph;\n\t}\n\t\n\t/**\n\t * Extracts the URIs from a parsed graph that match parameters.\n\t * The URIs are a set (duplicates are removed)\n\t * @method parseLinks\n\t * @param graph {Graph}\n\t * @param subject {NamedNode}\n\t * @param predicate {NamedNode}\n\t * @param object {NamedNode}\n\t * @param source {NamedNode}\n\t * @return {Array<String>} Array of link URIs that match the parameters\n\t */\n\tfunction parseLinks(graph, subject, predicate, object, source) {\n\t  var links = {};\n\t  var matches = graph.statementsMatching(subject, predicate, object, source);\n\t  matches.forEach(function (match) {\n\t    links[match.object.uri] = true;\n\t  });\n\t  return Object.keys(links);\n\t}\n\t\n\t/**\n\t * Serializes an array of RDF statements into a simple N-Triples format\n\t * suitable for writing to a solid server.\n\t * @method serializeStatements\n\t * @param statements {Array<Statement>} List of RDF statements\n\t * @return {String}\n\t */\n\tfunction serializeStatements(statements) {\n\t  var source = statements.map(function (st) {\n\t    return st.toNT();\n\t  });\n\t  source = source.join('\\n');\n\t  return source;\n\t}\n\n/***/ },\n/* 142 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t/**\n\t * @module container\n\t */\n\t\n\tmodule.exports = SolidContainer;\n\tvar graphUtil = __webpack_require__(141);\n\tvar parseLinks = graphUtil.parseLinks;\n\tvar vocab = __webpack_require__(143);\n\tvar SolidResource = __webpack_require__(145);\n\t\n\t/**\n\t * @class SolidContainer\n\t * @extends SolidResource\n\t * @constructor\n\t * @param rdf {RDF} RDF Library (such as rdflib.js) to inject\n\t * @param uri {String}\n\t * @param response {SolidResponse}\n\t */\n\tfunction SolidContainer(rdf, uri, response) {\n\t  // Call parent constructor\n\t  SolidResource.call(this, uri, response);\n\t  /**\n\t   * Hashmap of Containers within this container, keyed by absolute uri\n\t   * @property containers\n\t   * @type Object\n\t   */\n\t  this.containers = {};\n\t  /**\n\t   * List of URIs of all contents (containers and resources)\n\t   * @property contentsUris\n\t   * @type Array<String>\n\t   */\n\t  this.contentsUris = [];\n\t  /**\n\t   * RDF Library (such as rdflib.js) to inject (used for parsing contents)\n\t   * @type RDF\n\t   */\n\t  this.rdf = rdf;\n\t  /**\n\t   * Hashmap of Contents that are just resources (not containers),\n\t   * keyed by absolute uri\n\t   * @property resources\n\t   * @type Object\n\t   */\n\t  this.resources = {};\n\t\n\t  /**\n\t   * Hashmap of common RDF ontology namespaces\n\t   * @type Object\n\t   */\n\t  this.vocab = vocab(rdf);\n\t\n\t  if (response) {\n\t    this.initFromResponse(this.uri, response);\n\t  }\n\t}\n\t// SolidContainer.prototype object inherits from SolidResource.prototype\n\tSolidContainer.prototype = Object.create(SolidResource.prototype);\n\tSolidContainer.prototype.constructor = SolidContainer;\n\t\n\t/**\n\t * Extracts the contents (resources and sub-containers)\n\t * of the given graph and adds them to this container\n\t * @method appendFromGraph\n\t * @param parsedGraph {Graph}\n\t * @param graphUri {String}\n\t */\n\tSolidContainer.prototype.appendFromGraph = function appendFromGraph(parsedGraph, graphUri) {\n\t  // Set this container's types\n\t  var uriNode = this.rdf.namedNode(this.uri);\n\t  this.types = Object.keys(parsedGraph.findTypeURIs(uriNode));\n\t\n\t  // Extract all the contents links (resources and containers)\n\t  var contentsUris = parseLinks(parsedGraph, null, this.vocab.ldp('contains'));\n\t  this.contentsUris = this.contentsUris.concat(contentsUris.sort());\n\t\n\t  // Extract links that are just containers\n\t  var containersLinks = parsedGraph.each(null, null, this.vocab.ldp('Container'));\n\t  var self = this;\n\t  var container;\n\t  containersLinks.forEach(function (containerLink) {\n\t    // Filter out . (the link to this directory)\n\t    if (containerLink.uri !== self.uri) {\n\t      container = new SolidContainer(self.rdf, containerLink.uri);\n\t      container.types = Object.keys(parsedGraph.findTypeURIs(containerLink));\n\t      self.containers[container.uri] = container;\n\t    }\n\t  });\n\t  // Now that containers are defined, all the rest are non-container resources\n\t  var isResource, isContainer;\n\t  var resource, linkNode;\n\t  contentsUris.forEach(function (link) {\n\t    isContainer = link in self.containers;\n\t    isResource = link !== self.uri && !isContainer;\n\t    if (isResource) {\n\t      resource = new SolidResource(link);\n\t      linkNode = self.rdf.namedNode(link);\n\t      resource.types = Object.keys(parsedGraph.findTypeURIs(linkNode));\n\t      self.resources[link] = resource;\n\t    }\n\t  });\n\t};\n\t\n\t/**\n\t * Returns a list of SolidResource or SolidContainer instances that match\n\t * a given type.\n\t * @method findByType\n\t * @param rdfClass {String}\n\t * @return {Array<SolidResource|SolidContainer>}\n\t */\n\tSolidContainer.prototype.findByType = function findByType(rdfClass) {\n\t  var matches = [];\n\t  var key;\n\t  var container;\n\t  for (key in this.containers) {\n\t    container = this.containers[key];\n\t    if (container.isType(rdfClass)) {\n\t      matches.push(container);\n\t    }\n\t  }\n\t  var resource;\n\t  for (key in this.resources) {\n\t    resource = this.resources[key];\n\t    if (resource.isType(rdfClass)) {\n\t      matches.push(resource);\n\t    }\n\t  }\n\t  return matches;\n\t};\n\t\n\t/**\n\t * @method initFromResponse\n\t * @param uri {String}\n\t * @param response {SolidResponse}\n\t */\n\tSolidContainer.prototype.initFromResponse = function initFromResponse(uri, response) {\n\t  var contentType = response.contentType();\n\t  if (!contentType) {\n\t    throw new Error('Cannot parse container without a Content-Type: header');\n\t  }\n\t  var parsedGraph = graphUtil.parseGraph(this.rdf, uri, response.raw(), contentType);\n\t  this.parsedGraph = parsedGraph;\n\t  this.appendFromGraph(parsedGraph, uri);\n\t};\n\t\n\t/**\n\t * Is this a Container instance (vs a regular resource).\n\t * @return {Boolean}\n\t */\n\tSolidResource.prototype.isContainer = function isContainer() {\n\t  return true;\n\t};\n\t\n\t/**\n\t * Returns true if there are no resources or containers inside this container.\n\t * @method isEmpty\n\t * @return {Boolean}\n\t */\n\tSolidContainer.prototype.isEmpty = function isEmpty() {\n\t  return this.contentsUris.length === 0;\n\t};\n\n/***/ },\n/* 143 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict'\n\t/**\n\t * Provides a hashmap of relevant vocabs / namespaces.\n\t * Usage:\n\t *\n\t *   ```\n\t *   var rdf = require('rdflib')  // optional\n\t *   var vocab = require('solid-vocab')(rdf)  // or require('solid-vocab')()\n\t *   console.log(vocab.foaf('name'))  // -> <http://xmlns.com/foaf/0.1/name>\n\t *   ```\n\t * @module vocab\n\t */\n\t\n\t/**\n\t * @param [rdf] {RDF} Optional RDF Library (such as rdflib.js or rdf-ext) to\n\t *   inject\n\t */\n\tfunction vocab (rdf) {\n\t  var ns = __webpack_require__(144)(rdf)\n\t  var vocabMap = {\n\t    'acl': ns.base('http://www.w3.org/ns/auth/acl#'),\n\t    'app': ns.base('http://www.w3.org/ns/solid/app#'),\n\t    'dct': ns.base('http://purl.org/dc/terms/'),\n\t    'foaf': ns.base('http://xmlns.com/foaf/0.1/'),\n\t    'ldp': ns.base('http://www.w3.org/ns/ldp#'),\n\t    'owl': ns.base('http://www.w3.org/2002/07/owl#'),\n\t    'pim': ns.base('http://www.w3.org/ns/pim/space#'),\n\t    'rdf': ns.base('http://www.w3.org/1999/02/22-rdf-syntax-ns#'),\n\t    'rdfs': ns.base('http://www.w3.org/2000/01/rdf-schema#'),\n\t    'schema': ns.base('http://schema.org/'),\n\t    'sioc': ns.base('http://rdfs.org/sioc/ns#'),\n\t    'solid': ns.base('http://www.w3.org/ns/solid/terms#'),\n\t    'vcard': ns.base('http://www.w3.org/2006/vcard/ns#'),\n\t    'xsd': ns.base('http://www.w3.org/2001/XMLSchema#')\n\t  }\n\t  return vocabMap\n\t}\n\t\n\tmodule.exports = vocab\n\n\n/***/ },\n/* 144 */\n/***/ function(module, exports) {\n\n\t'use strict'\n\t\n\tmodule.exports = rdfNamespace\n\t\n\t/**\n\t * Usage:\n\t *\n\t *   ```\n\t *   var rdf = require('rdflib')\n\t *   var ns = require('rdf-ns')(rdf)\n\t *\n\t *   var rdfs = ns.base('http://www.w3.org/2000/01/rdf-schema#')\n\t *   var seeAlso = rdfs('seeAlso')\n\t *   console.log(seeAlso)\n\t *   // -> NamedNode(<http://www.w3.org/2000/01/rdf-schema#seeAlso>)\n\t *   ```\n\t *\n\t * @class Namespace\n\t * @constructor\n\t * @param rdf {RDF} RDF library such as rdflib.js or rdf-ext (for dep injection)\n\t */\n\tfunction Namespace (rdf) {\n\t  this.rdf = rdf\n\t}\n\t\n\t/**\n\t * @param namespaceIri {String} Namespace IRI\n\t * @return {Function}\n\t */\n\tNamespace.prototype.base = function base (namespaceIri) {\n\t  var self = this\n\t  /**\n\t   * @param term {String} IRI fragment\n\t   * @return {String|NamedNode}\n\t   */\n\t  return function fullIri (term) {\n\t    if (self.rdf) {\n\t      return self.rdf.namedNode(namespaceIri + term)\n\t    } else {\n\t      return namespaceIri + term\n\t    }\n\t  }\n\t}\n\t\n\tfunction rdfNamespace (rdf) {\n\t  return new Namespace(rdf)\n\t}\n\n\n/***/ },\n/* 145 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t/**\n\t * @module resource\n\t */\n\t\n\t/**\n\t * Represents a Solid / LDP Resource (currently used when listing\n\t * SolidContainer resources)\n\t * @class SolidResource\n\t * @constructor\n\t */\n\t\n\tmodule.exports = SolidResource;\n\t\n\tfunction SolidResource(uri, response) {\n\t  /**\n\t   * Short name (page/filename part of the resource path),\n\t   * derived from the URI\n\t   * @property name\n\t   * @type String\n\t   */\n\t  this.name = null;\n\t  /**\n\t   * Parsed graph of the contents of the resource\n\t   * @property parsedGraph\n\t   * @type Graph\n\t   */\n\t  this.parsedGraph = null;\n\t  /**\n\t   * Optional SolidResponse object from which this resource was initialized\n\t   * @property response\n\t   * @type SolidResponse\n\t   */\n\t  this.response = response;\n\t  /**\n\t   * List of RDF Types (classes) to which this resource belongs\n\t   * @property types\n\t   * @type Array<String>\n\t   */\n\t  this.types = [];\n\t  /**\n\t   * Absolute url of the resource\n\t   * @property url\n\t   * @type String\n\t   */\n\t  this.uri = uri;\n\t\n\t  if (response) {\n\t    if (response.url !== uri) {\n\t      // Override the given url (which may be relative) with that of the\n\t      // response object (which will be absolute)\n\t      this.uri = response.url;\n\t    }\n\t  }\n\t  this.initName();\n\t}\n\t\n\t/**\n\t * Initializes the short name from the url\n\t * @method initName\n\t */\n\tSolidResource.prototype.initName = function initName() {\n\t  if (!this.uri) {\n\t    return;\n\t  }\n\t  // Split on '/', use the last fragment\n\t  var fragments = this.uri.split('/');\n\t  this.name = fragments.pop();\n\t  if (!this.name && fragments.length > 0) {\n\t    // URI ended in a '/'. Try again.\n\t    this.name = fragments.pop();\n\t  }\n\t};\n\t\n\t/**\n\t * Is this a Container instance (vs a regular resource).\n\t * (Is overridden in the subclass, `SolidContainer`)\n\t * @return {Boolean}\n\t */\n\tSolidResource.prototype.isContainer = function isContainer() {\n\t  return false;\n\t};\n\t\n\t/**\n\t * Returns true if this a given type matches this resource's types\n\t * @method isType\n\t * @param rdfClass {String}\n\t * @return {Boolean}\n\t */\n\tSolidResource.prototype.isType = function isType(rdfClass) {\n\t  return this.types.indexOf(rdfClass) !== -1;\n\t};\n\n/***/ },\n/* 146 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t/* global Components */\n\t/**\n\t * Provides a generic wrapper around the XMLHttpRequest object, to make it\n\t * usable both in the browser and firefox extension and in Node.js\n\t * @module xhr\n\t */\n\t\n\tvar XMLHttpRequest;\n\tif (typeof tabulator !== 'undefined' && tabulator.isExtension) {\n\t  // Running inside the Tabulator Firefox extension\n\t  // Cannot use XMLHttpRequest natively, must request it through SDK\n\t  XMLHttpRequest = Components.classes['@mozilla.org/xmlextras/xmlhttprequest;1'].createInstance().QueryInterface(Components.interfaces.nsIXMLHttpRequest);\n\t} else if (typeof window !== 'undefined' && 'XMLHttpRequest' in window) {\n\t  // Running inside the browser\n\t  XMLHttpRequest = window.XMLHttpRequest;\n\t} else {\n\t  // in Node.js\n\t  XMLHttpRequest = __webpack_require__(19);\n\t}\n\tmodule.exports = XMLHttpRequest;\n\n/***/ },\n/* 147 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = HttpError\n\tvar StandardError = __webpack_require__(148)\n\tvar STATUS_CODE_TO_NAME = __webpack_require__(149)\n\tvar STATUS_NAME_TO_CODE = exports\n\t\n\tfunction HttpError(code, msg, props) {\n\t  if (typeof code == \"string\") code = STATUS_NAME_TO_CODE[code]\n\t  if (typeof code != \"number\") throw new TypeError(\"Non-numeric HTTP code\")\n\t  if (typeof msg == \"object\" && msg != null) props = msg, msg = null\n\t  StandardError.call(this, msg || STATUS_CODE_TO_NAME[code], props)\n\t  this.code = code\n\t}\n\t\n\tHttpError.prototype = Object.create(StandardError.prototype, {\n\t  constructor: {value: HttpError, configurable: true, writable: true}\n\t})\n\t\n\t// Set name explicitly for when the code gets minified.\n\tHttpError.prototype.name = \"HttpError\"\n\t\n\tObject.defineProperties(HttpError.prototype, {\n\t  statusCode: alias(\"code\"),\n\t  statusMessage: alias(\"message\"),\n\t\n\t  status: {\n\t    configurable: true,\n\t    get: function() { return this.code },\n\t    set: function(value) {\n\t      Object.defineProperty(this, \"status\", {\n\t        value: value, configurable: true, enumerable: true, writable: true\n\t      })\n\t    }\n\t  }\n\t})\n\t\n\tHttpError.prototype.toString = function() {\n\t  return this.name + \": \" + this.code + \" \" + this.message\n\t}\n\t\n\tfor (var code in STATUS_CODE_TO_NAME) {\n\t  var name = STATUS_CODE_TO_NAME[code]\n\t  exports[name.replace(\"'\", \"\").replace(/[- ]/g, \"_\").toUpperCase()] = +code\n\t}\n\t\n\tfunction alias(name) {\n\t  return {\n\t    configurable: true,\n\t    get: function() { return this[name] },\n\t    set: function(value) { return this[name] = value },\n\t  }\n\t}\n\n\n/***/ },\n/* 148 */\n/***/ function(module, exports) {\n\n\tvar has = Object.hasOwnProperty\n\tvar proto = Object.getPrototypeOf\n\tvar trace = Error.captureStackTrace\n\tmodule.exports = StandardError\n\t\n\tfunction StandardError(msg, props) {\n\t  // Let all properties be enumerable for easier serialization.\n\t  if (msg && typeof msg == \"object\") props = msg, msg = undefined\n\t  else this.message = msg\n\t\n\t  // Name has to be an own property (or on the prototype a single step up) for\n\t  // the stack to be printed with the correct name.\n\t  if (props) for (var key in props) this[key] = props[key]\n\t  if (!has.call(this, \"name\"))\n\t    this.name = has.call(proto(this), \"name\")? this.name : this.constructor.name\n\t\n\t  if (trace && !(\"stack\" in this)) trace(this, this.constructor)\n\t}\n\t\n\tStandardError.prototype = Object.create(Error.prototype, {\n\t  constructor: {value: StandardError, configurable: true, writable: true}\n\t})\n\t\n\t// Set name explicitly for when the code gets minified.\n\tStandardError.prototype.name = \"StandardError\"\n\n\n/***/ },\n/* 149 */\n/***/ function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"100\": \"Continue\",\n\t\t\"101\": \"Switching Protocols\",\n\t\t\"102\": \"Processing\",\n\t\t\"200\": \"OK\",\n\t\t\"201\": \"Created\",\n\t\t\"202\": \"Accepted\",\n\t\t\"203\": \"Non-Authoritative Information\",\n\t\t\"204\": \"No Content\",\n\t\t\"205\": \"Reset Content\",\n\t\t\"206\": \"Partial Content\",\n\t\t\"207\": \"Multi-Status\",\n\t\t\"208\": \"Already Reported\",\n\t\t\"226\": \"IM Used\",\n\t\t\"300\": \"Multiple Choices\",\n\t\t\"301\": \"Moved Permanently\",\n\t\t\"302\": \"Found\",\n\t\t\"303\": \"See Other\",\n\t\t\"304\": \"Not Modified\",\n\t\t\"305\": \"Use Proxy\",\n\t\t\"307\": \"Temporary Redirect\",\n\t\t\"308\": \"Permanent Redirect\",\n\t\t\"400\": \"Bad Request\",\n\t\t\"401\": \"Unauthorized\",\n\t\t\"402\": \"Payment Required\",\n\t\t\"403\": \"Forbidden\",\n\t\t\"404\": \"Not Found\",\n\t\t\"405\": \"Method Not Allowed\",\n\t\t\"406\": \"Not Acceptable\",\n\t\t\"407\": \"Proxy Authentication Required\",\n\t\t\"408\": \"Request Timeout\",\n\t\t\"409\": \"Conflict\",\n\t\t\"410\": \"Gone\",\n\t\t\"411\": \"Length Required\",\n\t\t\"412\": \"Precondition Failed\",\n\t\t\"413\": \"Payload Too Large\",\n\t\t\"414\": \"URI Too Long\",\n\t\t\"415\": \"Unsupported Media Type\",\n\t\t\"416\": \"Range Not Satisfiable\",\n\t\t\"417\": \"Expectation Failed\",\n\t\t\"418\": \"I'm a teapot\",\n\t\t\"421\": \"Misdirected Request\",\n\t\t\"422\": \"Unprocessable Entity\",\n\t\t\"423\": \"Locked\",\n\t\t\"424\": \"Failed Dependency\",\n\t\t\"425\": \"Unordered Collection\",\n\t\t\"426\": \"Upgrade Required\",\n\t\t\"428\": \"Precondition Required\",\n\t\t\"429\": \"Too Many Requests\",\n\t\t\"431\": \"Request Header Fields Too Large\",\n\t\t\"500\": \"Internal Server Error\",\n\t\t\"501\": \"Not Implemented\",\n\t\t\"502\": \"Bad Gateway\",\n\t\t\"503\": \"Service Unavailable\",\n\t\t\"504\": \"Gateway Timeout\",\n\t\t\"505\": \"HTTP Version Not Supported\",\n\t\t\"506\": \"Variant Also Negotiates\",\n\t\t\"507\": \"Insufficient Storage\",\n\t\t\"508\": \"Loop Detected\",\n\t\t\"509\": \"Bandwidth Limit Exceeded\",\n\t\t\"510\": \"Not Extended\",\n\t\t\"511\": \"Network Authentication Required\"\n\t};\n\n/***/ },\n/* 150 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\n\t The MIT License (MIT)\n\t\n\t Copyright (c) 2015-2016 Solid\n\t\n\t Permission is hereby granted, free of charge, to any person obtaining a copy\n\t of this software and associated documentation files (the \"Software\"), to deal\n\t in the Software without restriction, including without limitation the rights\n\t to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t copies of the Software, and to permit persons to whom the Software is\n\t furnished to do so, subject to the following conditions:\n\t\n\t The above copyright notice and this permission notice shall be included in all\n\t copies or substantial portions of the Software.\n\t\n\t THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\t SOFTWARE.\n\t\n\t solid-client is a Javascript library for Solid applications. This library\n\t currently depends on rdflib.js. Please make sure to load the rdflib.js script\n\t before loading solid-client\n\t\n\t If you would like to know more about the solid Solid project, please see\n\t https://github.com/solid/\n\t */\n\t'use strict'\n\t/**\n\t * Provides Solid methods for WebID authentication and signup\n\t * @module auth\n\t */\n\tmodule.exports = ClientAuthTLS\n\t\n\tvar defaultConfig = __webpack_require__(151)\n\t\n\tfunction ClientAuthTLS (webClient, config) {\n\t  this.webClient = webClient\n\t  this.config = config || defaultConfig\n\t}\n\t\n\t/**\n\t * Returns the WebID of the current user (by doing a login()/HEAD request to\n\t * the current page). Convenience method, useful for standalone apps that aren't\n\t * wrapping any resource.\n\t * @method currentUser\n\t * @return {String} WebID of the current user or `null` if none detected\n\t */\n\tClientAuthTLS.prototype.currentUser = function currentUser () {\n\t  if (typeof window === 'undefined') {\n\t    return null  // only works in the browser\n\t  }\n\t  var currentPageUrl = window.location.href\n\t  return this.login(currentPageUrl)\n\t    .catch(function (reason) {\n\t      console.log('Detecting current user failed: %o', reason)\n\t      return null\n\t    })\n\t}\n\t\n\t/**\n\t * Sets up an event listener to monitor login messages from child window/iframe\n\t * @method listen\n\t * @return {Promise<String>} Event listener promise, resolves to user's WebID\n\t */\n\tClientAuthTLS.prototype.listen = function listen () {\n\t  var promise = new Promise(function (resolve, reject) {\n\t    var eventMethod = window.addEventListener\n\t      ? 'addEventListener'\n\t      : 'attachEvent'\n\t    var eventListener = window[eventMethod]\n\t    var messageEvent = eventMethod === 'attachEvent'\n\t      ? 'onmessage'\n\t      : 'message'\n\t    eventListener(messageEvent, function (e) {\n\t      var u = e.data\n\t      if (u.slice(0, 5) === 'User:') {\n\t        var user = u.slice(5, u.length)\n\t        if (user && user.length > 0 && user.slice(0, 4) === 'http') {\n\t          return resolve(user)\n\t        } else {\n\t          return reject(user)\n\t        }\n\t      }\n\t    }, true)\n\t  })\n\t  return promise\n\t}\n\t\n\t/**\n\t * Performs a Solid login() via an XHR HEAD operation.\n\t * (Attempts to find the current user's WebID from the User header, if\n\t *   already authenticated.)\n\t * @method login\n\t * @static\n\t * @param [url] {String} Location of a Solid server or container at which the\n\t *   user might be authenticated.\n\t *   Defaults to: current page location\n\t * @param [alternateAuthUrl] {String} URL of an alternate/default auth endpoint.\n\t *   Defaults to `config.authEndpoint`\n\t * @return {Promise<String>} XHR HEAD operation promise, resolves to user's WebID\n\t */\n\tClientAuthTLS.prototype.login = function login (url, alternateAuthUrl) {\n\t  var defaultAuthEndpoint = this.config.authEndpoint\n\t  url = url || window.location.origin + window.location.pathname\n\t  alternateAuthUrl = alternateAuthUrl || defaultAuthEndpoint\n\t  var webClient = this.webClient\n\t  // First, see if user is already logged in (do a quick HEAD request)\n\t  return webClient.head(url)\n\t    .then(function (solidResponse) {\n\t      if (solidResponse.isLoggedIn()) {\n\t        return solidResponse.user\n\t      } else {\n\t        // If not logged in, try logging in at an alternate endpoint\n\t        return webClient.head(alternateAuthUrl)\n\t          .then(function (solidResponse) {\n\t            // Will return an empty string is this login also fails\n\t            return solidResponse.user\n\t          })\n\t      }\n\t    })\n\t}\n\t\n\t/**\n\t * Opens a signup popup window, sets up `listen()`.\n\t * @method signup\n\t * @static\n\t * @param signupUrl {String} Location of a Solid server for user signup.\n\t * @return {Promise<String>} Returns a listener promise, resolves with signed\n\t *   up user's WebID.\n\t */\n\tClientAuthTLS.prototype.signup = function signup (signupUrl) {\n\t  signupUrl = signupUrl || this.config.signupEndpoint\n\t  var width = this.config.signupWindowWidth\n\t  var height = this.config.signupWindowHeight\n\t  // set borders\n\t  var leftPosition = (window.screen.width / 2) - ((width / 2) + 10)\n\t  // set title and status bars\n\t  var topPosition = (window.screen.height / 2) - ((height / 2) + 50)\n\t  var windowTitle = 'Solid signup'\n\t  var windowUrl = signupUrl + '?origin=' +\n\t    encodeURIComponent(window.location.origin)\n\t  var windowSpecs = 'resizable,scrollbars,status,width=' + width + ',height=' +\n\t    height + ',left=' + leftPosition + ',top=' + topPosition\n\t  window.open(windowUrl, windowTitle, windowSpecs)\n\t  var self = this\n\t  return new Promise(function (resolve) {\n\t    self.listen()\n\t      .then(function (webid) {\n\t        return resolve(webid)\n\t      })\n\t  })\n\t}\n\n\n/***/ },\n/* 151 */\n/***/ function(module, exports) {\n\n\t'use strict'\n\t/**\n\t * Provides a simple configuration object for Solid web client and other\n\t * modules.\n\t * @module config\n\t */\n\tmodule.exports = {\n\t  /**\n\t   * Default authentication endpoint\n\t   */\n\t  authEndpoint: 'https://databox.me/',\n\t\n\t  /**\n\t   * Default signup endpoints (list of identity providers)\n\t   */\n\t  signupEndpoint: 'https://solid.github.io/solid-idps/',\n\t\n\t  /**\n\t   * Default height of the Signup popup window, in pixels\n\t   */\n\t  signupWindowHeight: 600,\n\t\n\t  /**\n\t   * Default width of the Signup popup window, in pixels\n\t   */\n\t  signupWindowWidth: 1024\n\t}\n\n\n/***/ },\n/* 152 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t/**\n\t * Provides Solid helper functions involved with parsing a user's WebId profile.\n\t * @module identity\n\t */\n\t\n\tmodule.exports.discoverWebID = discoverWebID;\n\tmodule.exports.getProfile = getProfile;\n\tmodule.exports.loadExtendedProfile = loadExtendedProfile;\n\t\n\tvar SolidProfile = __webpack_require__(153);\n\t\n\t/**\n\t * Discovers a user's WebId (URL) starting from the account/domain URL.\n\t * Usage:\n\t *\n\t *   ```\n\t *   solid.discoverWebID(url)\n\t *     .then(function (webId) {\n\t *       console.log('Web ID is: ' + webId)\n\t *     })\n\t *     .catch(function (err) {\n\t *       console.log('Could not discover web id: ' + err)\n\t *     })\n\t *   ```\n\t * @method discoverWebID\n\t * @param url {String} Location of a user's account or domain.\n\t * @throw {Error} Reason why the WebID could not be discovered\n\t * @return {Promise<String>}\n\t */\n\tfunction discoverWebID(url, webClient, ns) {\n\t  return webClient.options(url).then(function (response) {\n\t    var metaUrl = response.metaAbsoluteUrl();\n\t    if (!metaUrl) {\n\t      throw new Error('Could not find a meta URL in the Link header');\n\t    }\n\t    return webClient.get(metaUrl);\n\t  }).then(function (response) {\n\t    var graph = response.parsedGraph();\n\t    var webId = graph.any(undefined, ns.solid('account'));\n\t    if (!webId || !webId.uri) {\n\t      throw new Error('Could not find a WebID matching the domain ' + url);\n\t    }\n\t    return webId;\n\t  });\n\t}\n\t\n\t/**\n\t * Fetches a user's WebId profile, optionally follows `sameAs` etc links,\n\t *   and return a promise with a parsed SolidProfile instance.\n\t * @method getProfile\n\t * @param webId {String} WebId\n\t * @param [options={}] Options hashmap (see solid.web.solidRequest()\n\t *   function docs)\n\t * @param [options.ignoreExtended=false] Do not load extended profile if true.\n\t * @param webClient {SolidWebClient}\n\t * @param rdf {RDF} RDF Library\n\t * @return {Promise<SolidProfile>}\n\t */\n\tfunction getProfile(webId, options, webClient, rdf) {\n\t  options = options || {};\n\t  // Politely ask for Turtle formatted profiles\n\t  options.headers = options.headers || {\n\t    'Accept': 'text/turtle'\n\t  };\n\t  options.noCredentials = true; // profiles are always public\n\t  // Load main profile\n\t  return webClient.get(webId, options).then(function (response) {\n\t    var parsedProfile = response.parsedGraph();\n\t    var profile = new SolidProfile(response.url, parsedProfile, rdf, webClient, response);\n\t    profile.isLoaded = true;\n\t    if (options.ignoreExtended) {\n\t      return profile;\n\t    } else {\n\t      return loadExtendedProfile(profile, options, webClient);\n\t    }\n\t  });\n\t}\n\t\n\t/**\n\t * Loads the related external profile resources (all the `sameAs` and `seeAlso`\n\t * links, as well as Preferences), and appends them to the profile's\n\t * `parsedGraph`. Returns the profile instance.\n\t * @method loadExtendedProfile\n\t * @private\n\t * @param profile {SolidProfile}\n\t * @param [options] Options hashmap (see solid.web.solidRequest() function docs)\n\t * @return {Promise<SolidProfile>}\n\t */\n\tfunction loadExtendedProfile(profile, options, webClient) {\n\t  var links = profile.relatedProfilesLinks();\n\t  return webClient.loadParsedGraphs(links, options).then(function (loadedGraphs) {\n\t    loadedGraphs.forEach(function (graph) {\n\t      if (graph && graph.value) {\n\t        profile.appendFromGraph(graph.value, graph.uri);\n\t      }\n\t    });\n\t    return profile;\n\t  });\n\t}\n\n/***/ },\n/* 153 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t/**\n\t * @module profile\n\t */\n\t\n\tmodule.exports = SolidProfile;\n\t\n\tvar appRegistry = __webpack_require__(154);\n\tvar vocab = __webpack_require__(158);\n\tvar registry = __webpack_require__(159);\n\tvar typeRegistry = __webpack_require__(162);\n\tvar graphUtil = __webpack_require__(160);\n\tvar parseLinks = graphUtil.parseLinks;\n\t\n\tvar PREFERENCES_DEFAULT_URI = '/settings/prefs.ttl';\n\tvar PROFILE_CONTAINER_DEFAULT_URI = '/profile/';\n\t\n\t/**\n\t * Provides convenience methods for a WebID Profile.\n\t * Used by `identity.getProfile()`\n\t * @class SolidProfile\n\t * @constructor\n\t */\n\tfunction SolidProfile(profileUrl, parsedProfile, rdf, webClient, response) {\n\t  /**\n\t   * Listed (public) App Registry (link and parsed graph)\n\t   * @property appRegistryListed\n\t   * @type Object\n\t   */\n\t  this.appRegistryListed = {\n\t    uri: null,\n\t    graph: null\n\t  };\n\t  /**\n\t   * Unlisted (private) App Registry (link and parsed graph)\n\t   * @property appRegistryUnlisted\n\t   * @type Object\n\t   */\n\t  this.appRegistryUnlisted = {\n\t    uri: null,\n\t    graph: null\n\t  };\n\t  /**\n\t   * Main Inbox resource for this profile (link and parsed graph)\n\t   * @property inbox\n\t   * @type Object\n\t   */\n\t  this.inbox = {\n\t    uri: null,\n\t    graph: null\n\t  };\n\t  /**\n\t   * Has this profile been loaded? (Set in `identity.getProfile()`)\n\t   * @property isLoaded\n\t   * @type Boolean\n\t   */\n\t  this.isLoaded = false;\n\t  /**\n\t   * Profile owner's avatar / icon url. (Initialized in .appendFromGraph())\n\t   * @type String\n\t   */\n\t  this.picture = null;\n\t  /**\n\t   * Profile owner's name. (Initialized in .appendFromGraph())\n\t   * @property name\n\t   * @type String\n\t   */\n\t  this.name = null;\n\t  /**\n\t   * RDF Library used by find(), parsedGraph(), etc.\n\t   * @property rdf\n\t   * @type RDF\n\t   */\n\t  this.rdf = rdf;\n\t  /**\n\t   * Links to root storage containers (read/write dataspaces for this profile)\n\t   * @property storage\n\t   * @type Array<String>\n\t   */\n\t  this.storage = [];\n\t  /**\n\t   * Listed (public) Type registry index (link and parsed graph)\n\t   * @property typeIndexListed\n\t   * @type Object\n\t   */\n\t  this.typeIndexListed = {\n\t    uri: null,\n\t    graph: null\n\t  };\n\t  /**\n\t   * Unlisted (private) Type registry index (link and parsed graph)\n\t   * @property typeIndexUnlisted\n\t   * @type Object\n\t   */\n\t  this.typeIndexUnlisted = {\n\t    uri: null,\n\t    graph: null\n\t  };\n\t  /**\n\t   * Parsed graph of the extended WebID Profile document.\n\t   * Included the WebID profile, preferences, and related profile graphs\n\t   * @property parsedGraph\n\t   * @type Graph\n\t   */\n\t  this.parsedGraph = null;\n\t  /**\n\t   * Profile preferences object (link and parsed graph).\n\t   * Currently used as a 'Private Profile', and is part of the Extended Profile.\n\t   * @property preferences\n\t   * @type Object\n\t   */\n\t  this.preferences = {\n\t    uri: null,\n\t    graph: null\n\t  };\n\t  /**\n\t   * SolidResponse instance from which this profile object was created.\n\t   * Contains the raw profile source, the XHR object, etc.\n\t   * @property response\n\t   * @type SolidResponse\n\t   */\n\t  this.response = response;\n\t  /**\n\t   * Links to \"see also\" profile documents. Typically loaded immediately\n\t   * after retrieving the initial WebID Profile document.\n\t   * @property relatedProfiles\n\t   * @type Object\n\t   */\n\t  this.relatedProfiles = {\n\t    sameAs: [],\n\t    seeAlso: []\n\t  };\n\t  /**\n\t   * WebId URL (the `foaf:primaryTopic` of the profile document)\n\t   * @property webId\n\t   * @type String\n\t   */\n\t  this.webId = null;\n\t  /**\n\t   * Web client (for use with loadProfile() etc)\n\t   * @type SolidWebClient\n\t   */\n\t  this.webClient = webClient;\n\t\n\t  if (!profileUrl) {\n\t    return;\n\t  }\n\t  /**\n\t   * Location of the base WebID Profile document (minus the hash fragment).\n\t   * @property baseProfileUrl\n\t   * @type String\n\t   */\n\t  this.baseProfileUrl = profileUrl.indexOf('#') >= 0 ? profileUrl.slice(0, profileUrl.indexOf('#')) : profileUrl;\n\t\n\t  if (parsedProfile) {\n\t    this.initWebId(parsedProfile);\n\t    this.appendFromGraph(parsedProfile, this.baseProfileUrl);\n\t  }\n\t}\n\t\n\t/**\n\t * Update the profile based on a parsed graph, which can be either the\n\t * initial WebID profile, or the various extended profile graphs\n\t * (such as the seeAlso, sameAs and preferences links)\n\t * @method appendFromGraph\n\t * @private\n\t * @param parsedProfile {Graph} RDFLib-parsed user profile\n\t * @param profileUrl {String} URL of this particular parsed graph\n\t */\n\tSolidProfile.prototype.appendFromGraph = function appendFromGraph(parsedProfile, profileUrl) {\n\t  if (!parsedProfile) {\n\t    return;\n\t  }\n\t  var rdf = this.rdf;\n\t  var ns = vocab(rdf);\n\t  this.parsedGraph = this.parsedGraph || rdf.graph(); // initialize if null\n\t  // Add the graph of this parsedProfile to the existing graph\n\t  graphUtil.appendGraph(this.parsedGraph, parsedProfile, profileUrl);\n\t\n\t  var webId = rdf.namedNode(this.webId);\n\t  var links;\n\t\n\t  // Load the profile owner's name and avatar/icon url\n\t  if (!this.name) {\n\t    this.name = this.find(ns.foaf('name'));\n\t  }\n\t  if (!this.picture) {\n\t    this.picture = this.find(ns.foaf('img'));\n\t  }\n\t  // Add sameAs and seeAlso\n\t  links = parseLinks(parsedProfile, null, ns.owl('sameAs'));\n\t  this.relatedProfiles.sameAs = this.relatedProfiles.sameAs.concat(links);\n\t\n\t  links = parseLinks(parsedProfile, null, ns.rdfs('seeAlso'));\n\t  this.relatedProfiles.seeAlso = this.relatedProfiles.seeAlso.concat(links);\n\t\n\t  // Add preferencesFile link (singular). Note that preferencesFile has\n\t  // Write-Once semantics -- it's initialized from public profile, but\n\t  // cannot be overwritten by related profiles\n\t  if (!this.preferences.uri) {\n\t    this.preferences.uri = parseLink(parsedProfile, webId, ns.pim('preferencesFile'));\n\t  }\n\t  // Init inbox (singular). Note that inbox has\n\t  // Write-Once semantics -- it's initialized from public profile, but\n\t  // cannot be overwritten by related profiles\n\t  if (!this.inbox.uri) {\n\t    this.inbox.uri = parseLink(parsedProfile, webId, ns.solid('inbox'));\n\t  }\n\t\n\t  // Add storage\n\t  links = parseLinks(parsedProfile, webId, ns.pim('storage'));\n\t  this.storage = this.storage.concat(links);\n\t\n\t  // Add links to Listed and Unlisted Type Indexes.\n\t  // Note: these are just the links.\n\t  // The actual index files will be loaded and parsed\n\t  //   in `profile.loadTypeRegistry()`)\n\t  if (!this.typeIndexListed.uri) {\n\t    this.typeIndexListed.uri = parseLink(parsedProfile, webId, ns.solid('publicTypeIndex'));\n\t  }\n\t  if (!this.typeIndexUnlisted.uri) {\n\t    this.typeIndexUnlisted.uri = parseLink(parsedProfile, webId, ns.solid('privateTypeIndex'));\n\t  }\n\t\n\t  // Add links to Listed and Unlisted App Registry resources.\n\t  // Note: these are just the links.\n\t  // The actual index files will be loaded and parsed\n\t  //   in `profile.loadAppRegistry()`)\n\t  if (!this.appRegistryListed.uri) {\n\t    this.appRegistryListed.uri = parseLink(parsedProfile, webId, ns.solid('publicAppRegistry'));\n\t  }\n\t  if (!this.appRegistryUnlisted.uri) {\n\t    this.appRegistryUnlisted.uri = parseLink(parsedProfile, webId, ns.solid('privateAppRegistry'));\n\t  }\n\t};\n\t\n\t/**\n\t * Returns the default location of the container in which the App Registry\n\t * resources will reside. (Uses the same container as the profile\n\t * document.)\n\t * @method appRegistryDefaultContainer\n\t * @return {String}\n\t */\n\tSolidProfile.prototype.appRegistryDefaultContainer = function appRegistryDefaultContainer() {\n\t  var profileUri = this.webId || this.baseProfileUrl;\n\t  var baseContainer;\n\t  if (profileUri) {\n\t    baseContainer = profileUri.replace(/\\\\/g, '/').replace(/\\/[^\\/]*\\/?$/, '') + '/';\n\t  } else {\n\t    baseContainer = PROFILE_CONTAINER_DEFAULT_URI;\n\t  }\n\t  return baseContainer;\n\t};\n\t\n\t/**\n\t * Returns a list of registry entries for a given RDF Class.\n\t * @method appsForType\n\t * @param type {NamedNode} RDF Class\n\t * @return {Array<AppRegistration>}\n\t */\n\tSolidProfile.prototype.appsForType = function appsForType(type) {\n\t  return appRegistry.appsForType(this, type, this.rdf);\n\t};\n\t\n\t/**\n\t * Returns the value of a given \"field\" (predicate) from the profile's parsed\n\t * graph. If there are more than one matches for this predicate, .find()\n\t * returns the first one. If there are no matches, `null` is returned.\n\t * Usage:\n\t *\n\t *   ```\n\t *   var inboxUrl = profile.find(ns.solid('inbox'))\n\t *   if (inboxUrl) {\n\t *     console.log('Inbox is located at:', inboxUrl)\n\t *   }\n\t *   ```\n\t * @method find\n\t * @param predicate {NamedNode} RDF named node of the predicate\n\t * @return {String|Null} String value (or uri)\n\t */\n\tSolidProfile.prototype.find = function find(predicate) {\n\t  if (!this.parsedGraph) {\n\t    throw new Error('Profile graph not yet loaded.');\n\t  }\n\t  var subject = this.rdf.namedNode(this.webId);\n\t  var result = this.parsedGraph.any(subject, predicate);\n\t  if (!result) {\n\t    return result;\n\t  }\n\t  return result.value || result.uri;\n\t};\n\t\n\t/**\n\t * Returns all values of a given \"field\" (predicate) from the profile's parsed\n\t * graph.\n\t * Usage:\n\t *\n\t *   ```\n\t *   var related = profile.findAll(vocab.owl('sameAs'))\n\t *   ```\n\t * @method findAll\n\t * @param predicate {NamedNode} RDF named node of the predicate\n\t * @return {Array<String>} Array of string values/uris\n\t */\n\tSolidProfile.prototype.findAll = function findAll(predicate) {\n\t  if (!this.parsedGraph) {\n\t    throw new Error('Profile graph not yet loaded.');\n\t  }\n\t  var subject = this.rdf.namedNode(this.webId);\n\t  var matches = this.parsedGraph.statementsMatching(subject, predicate);\n\t  matches = matches.map(function (ea) {\n\t    return ea.object.value || ea.object.uri;\n\t  });\n\t  return matches.sort();\n\t};\n\t\n\t/**\n\t * Extracts the WebID from a parsed profile graph and initializes it.\n\t * Should only be done once (when creating a new SolidProfile instance)\n\t * @method initWebId\n\t * @param parsedProfile {Graph} RDFLib-parsed user profile\n\t */\n\tSolidProfile.prototype.initWebId = function initWebId(parsedProfile) {\n\t  if (!parsedProfile) {\n\t    return;\n\t  }\n\t  try {\n\t    this.webId = extractWebId(this.baseProfileUrl, parsedProfile, this.rdf).uri;\n\t  } catch (e) {\n\t    throw new Error('Unable to parse WebID from profile: ' + e);\n\t  }\n\t};\n\t\n\t/**\n\t * Returns an array of related external profile links (sameAs and seeAlso and\n\t * Preferences files)\n\t * @method relatedProfilesLinks\n\t * @return {Array<String>}\n\t */\n\tSolidProfile.prototype.relatedProfilesLinks = function relatedProfilesLinks() {\n\t  var links = [];\n\t  links = links.concat(this.relatedProfiles.sameAs).concat(this.relatedProfiles.seeAlso);\n\t  if (this.preferences.uri) {\n\t    links = links.concat(this.preferences.uri);\n\t  }\n\t  return links;\n\t};\n\t\n\t/**\n\t * Returns whether or not the profile has a private (unlisted) App Registry\n\t * associated with it (linked to from the profile document).\n\t * @method hasAppRegistryPrivate\n\t * @throws {Error} If the profile has not been loaded (via getProfile()).\n\t * @return {Boolean} Returns truthy value if the private (unlisted) app registry\n\t *   exists (that is, has a link in the profile).\n\t */\n\tSolidProfile.prototype.hasAppRegistryPrivate = function hasAppRegistryPrivate() {\n\t  if (!this.isLoaded) {\n\t    throw new Error('Must load profile before checking if registry exists.');\n\t  }\n\t  return this.appRegistryUnlisted.uri;\n\t};\n\t\n\t/**\n\t * Returns whether or not the profile has a public (listed) App Registry\n\t * associated with it (linked to from the profile document).\n\t * @method hasAppRegistryPublic\n\t * @throws {Error} If the profile has not been loaded (via getProfile()).\n\t * @return {Boolean} Returns truthy value if the public (listed) app registry\n\t *   exists (that is, has a link in the profile).\n\t */\n\tSolidProfile.prototype.hasAppRegistryPublic = function hasAppRegistryPublic() {\n\t  if (!this.isLoaded) {\n\t    throw new Error('Must load profile before checking if registry exists.');\n\t  }\n\t  return this.appRegistryListed.uri;\n\t};\n\t\n\t/**\n\t * Returns true if the profile has any links to root storage\n\t * @method hasStorage\n\t * @return {Boolean}\n\t */\n\tSolidProfile.prototype.hasStorage = function hasStorage() {\n\t  return this.storage && this.storage.length > 0;\n\t};\n\t\n\t/**\n\t * Returns whether or not the profile has a private (unlisted) Type Index\n\t * Registry associated with it (linked to from the profile document).\n\t * @method hasTypeRegistryPrivate\n\t * @throws {Error} If the profile has not been loaded (via getProfile()).\n\t * @return {Boolean} Returns truthy value if the private (unlisted) type index\n\t *   registry exists (that is, has a link in the profile).\n\t */\n\tSolidProfile.prototype.hasTypeRegistryPrivate = function hasTypeRegistryPrivate() {\n\t  if (!this.isLoaded) {\n\t    throw new Error('Must load profile before checking if registry exists.');\n\t  }\n\t  return this.typeIndexUnlisted.uri;\n\t};\n\t\n\t/**\n\t * Returns whether or not the profile has a public (listed) Type Index Registry\n\t * associated with it (linked to from the profile document).\n\t * @method hasTypeRegistryPublic\n\t * @throws {Error} If the profile has not been loaded (via getProfile()).\n\t * @return {Boolean} Returns truthy value if the public (listed) type index\n\t *   registry exists (that is, has a link in the profile).\n\t */\n\tSolidProfile.prototype.hasTypeRegistryPublic = function hasTypeRegistryPublic() {\n\t  if (!this.isLoaded) {\n\t    throw new Error('Must load profile before checking if registry exists.');\n\t  }\n\t  return this.typeIndexListed.uri;\n\t};\n\t\n\t/**\n\t * Convenience method to load the app registry. Usage:\n\t *\n\t *   ```\n\t *   Solid.getProfile(url, options)\n\t *     .then(function (profile) {\n\t *       return profile.loadAppRegistry(webClient, options)\n\t *     })\n\t *   ```\n\t * @method loadAppRegistry\n\t * @param [options] Options hashmap (see Solid.web.solidRequest() function docs)\n\t * @return {Promise<SolidProfile>}\n\t */\n\tSolidProfile.prototype.loadAppRegistry = function loadAppRegistry(webClient, options) {\n\t  webClient = webClient || this.webClient;\n\t  return appRegistry.loadAppRegistry(this, webClient, options);\n\t};\n\t\n\t/**\n\t * Convenience method to load the type index registry. Usage:\n\t *\n\t *   ```\n\t *   Solid.getProfile(url, options)\n\t *     .then(function (profile) {\n\t *       return profile.loadTypeRegistry(options)\n\t *     })\n\t *   ```\n\t * @method loadTypeRegistry\n\t * @param webClient {SolidWebClient}\n\t * @param [options] Options hashmap (see Solid.web.solidRequest() function docs)\n\t * @return {Promise<SolidProfile>}\n\t */\n\tSolidProfile.prototype.loadTypeRegistry = function loadTypeRegistry(webClient, options) {\n\t  webClient = webClient || this.webClient;\n\t  return typeRegistry.loadTypeRegistry(this, webClient, options);\n\t};\n\t\n\t/**\n\t * Adds a parsed app registry graph to the appropriate registry (public\n\t *   or private). (Used when parsing the extended profile).\n\t * @method addAppRegistry\n\t * @private\n\t * @param graph {Graph} Parsed graph (loaded from an app registry resource)\n\t * @param uri {String} Location of the app registry document\n\t */\n\tSolidProfile.prototype.addAppRegistry = function addAppRegistry(graph, uri) {\n\t  // Is this a public app registry?\n\t  if (registry.isListed(graph, this.rdf)) {\n\t    if (!this.appRegistryListed.graph) {\n\t      // only initialize once\n\t      this.appRegistryListed.uri = uri;\n\t      this.appRegistryListed.graph = graph;\n\t    }\n\t  } else if (registry.isUnlisted(graph, this.rdf)) {\n\t    if (!this.appRegistryUnlisted.graph) {\n\t      this.appRegistryUnlisted.uri = uri;\n\t      this.appRegistryUnlisted.graph = graph;\n\t    }\n\t  } else {\n\t    console.log(graph);\n\t    throw new Error('Attempting to add an invalid app registry resource');\n\t  }\n\t};\n\t\n\t/**\n\t * Adds a parsed type index graph to the appropriate type registry (public\n\t *   or private). (Used when parsing the extended profile).\n\t * @method addTypeRegistry\n\t * @private\n\t * @param graph {Graph} Parsed graph (loaded from a type index\n\t *   resource)\n\t * @param uri {String} Location of the type registry index document\n\t */\n\tSolidProfile.prototype.addTypeRegistry = function addTypeRegistry(graph, uri) {\n\t  // Is this a public type registry?\n\t  if (registry.isListed(graph, this.rdf)) {\n\t    if (!this.typeIndexListed.graph) {\n\t      // only initialize once\n\t      this.typeIndexListed.uri = uri;\n\t      this.typeIndexListed.graph = graph;\n\t    }\n\t  } else if (registry.isUnlisted(graph, this.rdf)) {\n\t    if (!this.typeIndexUnlisted.graph) {\n\t      this.typeIndexUnlisted.uri = uri;\n\t      this.typeIndexUnlisted.graph = graph;\n\t    }\n\t  } else {\n\t    throw new Error('Attempting to add an invalid type registry index');\n\t  }\n\t};\n\t\n\t/**\n\t * Reloads the contents of the profile's App Registry resources.\n\t * @method reloadAppRegistry\n\t * @return {Promise<SolidProfile>}\n\t */\n\tSolidProfile.prototype.reloadAppRegistry = function reloadAppRegistry(webClient) {\n\t  this.resetAppRegistry();\n\t  return this.loadAppRegistry(webClient);\n\t};\n\t\n\t/**\n\t * Reloads the contents of the profile's Type Index registries.\n\t * @method reloadTypeRegistry\n\t * @return {Promise<SolidProfile>}\n\t */\n\tSolidProfile.prototype.reloadTypeRegistry = function reloadTypeRegistry(webClient) {\n\t  this.resetTypeRegistry();\n\t  return this.loadTypeRegistry(webClient);\n\t};\n\t\n\t/**\n\t * Resets the contents (graphs) of the profile's App Registry resources to null.\n\t * Used internally by `reloadAppRegistry()`.\n\t * @method resetAppRegistry\n\t * @private\n\t */\n\tSolidProfile.prototype.resetAppRegistry = function resetAppRegistry() {\n\t  this.appRegistryListed.graph = null;\n\t  this.appRegistryUnlisted.graph = null;\n\t};\n\t\n\t/**\n\t * Resets the contents (graphs) of the profile's Type Index registries to null.\n\t * Used internally by `reloadTypeRegistry()`.\n\t * @method resetTypeRegistry\n\t * @private\n\t */\n\tSolidProfile.prototype.resetTypeRegistry = function resetTypeRegistry() {\n\t  this.typeIndexListed.graph = null;\n\t  this.typeIndexUnlisted.graph = null;\n\t};\n\t\n\t/**\n\t * Returns lists of registry entries for a given RDF Class.\n\t * @method typeRegistryForClass\n\t * @param rdfClass {rdf.NamedNode} RDF Class symbol\n\t * @return {Array<IndexRegistration>}\n\t */\n\tSolidProfile.prototype.typeRegistryForClass = function typeRegistryForClass(rdfClass) {\n\t  return typeRegistry.typeRegistryForClass(this, rdfClass, this.rdf);\n\t};\n\t\n\t/**\n\t * Returns the default location of the container in which the Type Registry\n\t * Index resources will reside. (Uses the same container as the profile\n\t * document.)\n\t * @method typeRegistryDefaultContainer\n\t * @return {String}\n\t */\n\tSolidProfile.prototype.typeRegistryDefaultContainer = function typeRegistryDefaultContainer() {\n\t  var profileUri = this.webId || this.baseProfileUrl;\n\t  var baseContainer;\n\t  if (profileUri) {\n\t    baseContainer = profileUri.replace(/\\\\/g, '/').replace(/\\/[^\\/]*\\/?$/, '') + '/';\n\t  } else {\n\t    baseContainer = PROFILE_CONTAINER_DEFAULT_URI;\n\t  }\n\t  return baseContainer;\n\t};\n\t\n\t/**\n\t * Returns the relative URL of the private profile (preferences) resource.\n\t * @method privateProfileUri\n\t * @return {String}\n\t */\n\tSolidProfile.prototype.privateProfileUri = function privateProfileUri() {\n\t  if (this.preferences && this.preferences.uri) {\n\t    return this.preferences.uri;\n\t  } else {\n\t    return PREFERENCES_DEFAULT_URI;\n\t  }\n\t};\n\t\n\t/**\n\t * Registers a given entry in the app registry.\n\t * @method registerApp\n\t * @param app {AppRegistration}\n\t * @return {Promise<SolidProfile>} Returns updated profile.\n\t */\n\tSolidProfile.prototype.registerApp = function registerApp(app, webClient) {\n\t  webClient = webClient || this.webClient;\n\t  return appRegistry.registerApp(this, app, webClient);\n\t};\n\t\n\t/**\n\t * Registers a given RDF class in the user's type index registries, so that\n\t * other applications can discover it.\n\t * @method registerType\n\t * @param rdfClass {rdf.NamedNode} Type to register in the index.\n\t * @param location {String} Absolute URI to the location you want the class\n\t *   registered to. (Example: Registering Address books in\n\t *   `https://example.com/contacts/`)\n\t * @param [locationType='container'] {String} Either 'instance' or 'container',\n\t *   defaults to 'container'\n\t * @param [isListed=false] {Boolean} Whether to register in a listed or unlisted\n\t *   index). Defaults to `false` (unlisted).\n\t * @return {Promise<SolidProfile>}\n\t */\n\tSolidProfile.prototype.registerType = function registerType(rdfClass, location, locationType, isListed) {\n\t  return typeRegistry.registerType(this, rdfClass, location, locationType, isListed, this.webClient);\n\t};\n\t\n\t/**\n\t * Removes a given RDF class from the user's type index registry\n\t * @method unregisterType\n\t * @param rdfClass {NamedNode} Type to register in the index.\n\t * @param [isListed=false] {Boolean} Whether to register in a listed or unlisted\n\t *   index). Defaults to `false` (unlisted).\n\t * @param [location] {String} If present, only unregister the class from this\n\t *   location (absolute URI).\n\t * @return {Promise<SolidProfile>}\n\t */\n\tSolidProfile.prototype.unregisterType = function unregisterType(rdfClass, isListed, location) {\n\t  return typeRegistry.unregisterType(this, rdfClass, isListed, location, this.webClient);\n\t};\n\t\n\t/**\n\t * Extracts the WebID symbol from a parsed profile graph.\n\t * @method extractWebId\n\t * @param baseProfileUrl {String} Profile URL, with no hash fragment\n\t * @param parsedProfile {Graph} RDFLib-parsed user profile\n\t * @return {NamedNode} WebID symbol\n\t */\n\tfunction extractWebId(baseProfileUrl, parsedProfile, rdf) {\n\t  var ns = vocab(rdf);\n\t  var subj = rdf.namedNode(baseProfileUrl);\n\t  var pred = ns.foaf('primaryTopic');\n\t  var match = parsedProfile.any(subj, pred);\n\t  return match;\n\t}\n\t\n\t/**\n\t * Extracts the first URI from a parsed graph that matches parameters\n\t * @method parseLinks\n\t * @param graph {Graph}\n\t * @param subject {NamedNode}\n\t * @param predicate {NamedNode}\n\t * @param object {NamedNode}\n\t * @param source {NamedNode}\n\t * @return {String} URI that matches the parameters\n\t */\n\tfunction parseLink(graph, subject, predicate, object, source) {\n\t  var first = graph.any(subject, predicate, object, source);\n\t  if (first) {\n\t    return first.uri;\n\t  } else {\n\t    return null;\n\t  }\n\t}\n\n/***/ },\n/* 154 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t/**\n\t * Provides Solid helper functions involved with initializing, reading and\n\t * writing the App Registry resources.\n\t * @module app-registry\n\t */\n\t\n\tmodule.exports.addToAppRegistry = addToAppRegistry;\n\tmodule.exports.blankPrivateAppRegistry = blankPrivateAppRegistry;\n\tmodule.exports.blankPublicAppRegistry = blankPublicAppRegistry;\n\tmodule.exports.initAppRegistryPrivate = initAppRegistryPrivate;\n\tmodule.exports.initAppRegistryPublic = initAppRegistryPublic;\n\tmodule.exports.loadAppRegistry = loadAppRegistry;\n\tmodule.exports.appsForType = appsForType;\n\tmodule.exports.registerApp = registerApp;\n\tmodule.exports.registrationsFromGraph = registrationsFromGraph;\n\t\n\tvar AppRegistration = __webpack_require__(155);\n\tvar graphUtil = __webpack_require__(160);\n\tvar util = __webpack_require__(161);\n\tvar vocab = __webpack_require__(158);\n\tvar webUtil = __webpack_require__(161);\n\t\n\t/**\n\t * Adds an RDF class to a user's app registry, and returns the\n\t * profile (with the appropriate registry graph updated).\n\t * Called by `registerApp()`, which does all the argument validation.\n\t * @method addToAppRegistry\n\t * @param profile {SolidProfile}\n\t * @param app {AppRegistration}\n\t * @param webClient {SolidWebClient}\n\t * @return {Promise<SolidProfile>} Returns updated profile\n\t */\n\tfunction addToAppRegistry(profile, app, webClient) {\n\t  // TODO: Check to see if a registry entry for this type already exists.\n\t  var registryUri;\n\t  var registryGraph;\n\t  if (app.isListed) {\n\t    registryUri = profile.appRegistryListed.uri;\n\t    registryGraph = profile.appRegistryListed.graph;\n\t  } else {\n\t    registryUri = profile.appRegistryUnlisted.uri;\n\t    registryGraph = profile.appRegistryUnlisted.graph;\n\t  }\n\t  if (!registryUri) {\n\t    throw new Error('Cannot register app, registry URL missing');\n\t  }\n\t  var rdf = profile.rdf;\n\t  // triples to delete (none for the moment)\n\t  var toDel = [];\n\t  // Create the list of triples to add in the PATCH operation\n\t  var toAdd = app.rdfStatements(rdf);\n\t  return webClient.patch(registryUri, toDel, toAdd).then(function (response) {\n\t    // Update the profile object with the new registry without reloading\n\t    var newRegistration = graphUtil.graphFromStatements(toAdd, rdf);\n\t    if (registryGraph) {\n\t      graphUtil.appendGraph(registryGraph, newRegistration);\n\t    } else {\n\t      profile[app.isListed ? 'appRegistryListed' : 'appRegistryUnlisted'].graph = newRegistration;\n\t    }\n\t    return profile;\n\t  });\n\t}\n\t\n\t/**\n\t * Returns a list of registry entries for a profile and a given RDF Class.\n\t * @method appsForType\n\t * @param profile {SolidProfile}\n\t * @param type {NamedNode} RDF Class\n\t * @param rdf {RDF} RDF Library\n\t * @return {Array<AppRegistration>}\n\t */\n\tfunction appsForType(profile, type, rdf) {\n\t  var registrations = [];\n\t  return registrations.concat(\n\t  // Public/listed registrations\n\t  registrationsFromGraph(profile.appRegistryListed.graph, type, rdf)).concat(\n\t  // Private/unlisted registrations\n\t  registrationsFromGraph(profile.appRegistryUnlisted.graph, type, rdf));\n\t}\n\t\n\t/**\n\t * Returns a blank private app registry option.\n\t * For use with `initAppRegistry()`.\n\t * @method blankPrivateAppRegistry\n\t * @private\n\t * @return {Object} Blank app registry object\n\t */\n\tfunction blankPrivateAppRegistry(rdf) {\n\t  var ns = vocab(rdf);\n\t  var thisDoc = rdf.namedNode('');\n\t  var registryStatements = [rdf.triple(thisDoc, ns.rdf('type'), ns.solid('AppRegistry')), rdf.triple(thisDoc, ns.rdf('type'), ns.solid('UnlistedDocument'))];\n\t  var registry = {\n\t    data: graphUtil.serializeStatements(registryStatements),\n\t    graph: graphUtil.graphFromStatements(registryStatements, rdf),\n\t    slug: 'privateAppRegistry.ttl',\n\t    uri: null // actual url not yet known\n\t  };\n\t  return registry;\n\t}\n\t\n\t/**\n\t * Returns a blank public app registry option.\n\t * For use with `initAppRegistry()`.\n\t * @method blankPublicAppRegistry\n\t * @private\n\t * @return {Object} Blank app registry object\n\t */\n\tfunction blankPublicAppRegistry(rdf) {\n\t  var ns = vocab(rdf);\n\t  var thisDoc = rdf.namedNode('');\n\t  var registryStatements = [rdf.triple(thisDoc, ns.rdf('type'), ns.solid('AppRegistry')), rdf.triple(thisDoc, ns.rdf('type'), ns.solid('ListedDocument'))];\n\t  var registry = {\n\t    data: graphUtil.serializeStatements(registryStatements),\n\t    graph: graphUtil.graphFromStatements(registryStatements, rdf),\n\t    slug: 'publicAppRegistry.ttl',\n\t    uri: null // actual url not yet known\n\t  };\n\t  return registry;\n\t}\n\t\n\t/**\n\t * Initializes the private App Registry resource, updates\n\t * the profile with the initialized registry, and returns the updated profile.\n\t * @method initAppRegistryPrivate\n\t * @param profile {SolidProfile} User's WebID profile\n\t * @param [options={}] Options hashmap (see solid.web.solidRequest()\n\t *   function docs)\n\t * @return {Promise<SolidProfile>} Resolves with the updated profile instance.\n\t */\n\tfunction initAppRegistryPrivate(profile, webClient, options) {\n\t  options = options || {};\n\t  var rdf = profile.rdf;\n\t  var ns = vocab(rdf);\n\t  var registryContainerUri = profile.appRegistryDefaultContainer();\n\t  var webId = rdf.namedNode(profile.webId);\n\t  var registry = blankPrivateAppRegistry(rdf);\n\t  // First, create the private App Registry resource\n\t  return webClient.post(registryContainerUri, registry.data, registry.slug).catch(function (err) {\n\t    throw new Error('Could not create private registry document:', err);\n\t  }).then(function (response) {\n\t    // Private registry resource created.\n\t    // Update the private profile (preferences) to link to it.\n\t    registry.uri = util.absoluteUrl(webUtil.hostname(registryContainerUri), response.url);\n\t    var toAdd = [rdf.triple(webId, ns.solid('privateAppRegistry'), rdf.namedNode(registry.uri))];\n\t    var toDel = [];\n\t    // Note: this PATCH will actually create a private profile if it doesn't\n\t    // already exist.\n\t    return webClient.patch(profile.privateProfileUri(), toDel, toAdd, options);\n\t  }).catch(function (err) {\n\t    throw new Error('Could not update profile with private registry:' + err);\n\t  }).then(function (response) {\n\t    // Profile successfully patched with a link to the created private registry\n\t    // It's safe to update this instance of profile\n\t    profile.appRegistryUnlisted = registry;\n\t    // Finally, return the updated profile with registry loaded\n\t    return profile;\n\t  });\n\t}\n\t\n\t/**\n\t * Initializes the public App Registry resource, updates\n\t * the profile with the initialized registry, and returns the updated profile.\n\t * @method initAppRegistryPublic\n\t * @param profile {SolidProfile} User's WebID profile\n\t * @param [options] Options hashmap (see solid.web.solidRequest() function docs)\n\t * @return {Promise<SolidProfile>} Resolves with the updated profile instance.\n\t */\n\tfunction initAppRegistryPublic(profile, webClient, options) {\n\t  options = options || {};\n\t  var rdf = profile.rdf;\n\t  var ns = vocab(rdf);\n\t  var registryContainerUri = profile.appRegistryDefaultContainer();\n\t  var webId = rdf.namedNode(profile.webId);\n\t  var registry = blankPublicAppRegistry(rdf);\n\t  // First, create the public registry Registry resource\n\t  return webClient.post(registryContainerUri, registry.data, registry.slug).catch(function (err) {\n\t    throw new Error('Could not create public registry document:', err);\n\t  }).then(function (response) {\n\t    // Public registry resource created. Update the profile to link to it.\n\t    registry.uri = util.absoluteUrl(webUtil.hostname(registryContainerUri), response.url);\n\t    var toAdd = [rdf.triple(webId, ns.solid('publicAppRegistry'), rdf.namedNode(registry.uri))];\n\t    var toDel = [];\n\t    return webClient.patch(profile.webId, toDel, toAdd, options);\n\t  }).catch(function (err) {\n\t    throw new Error('Could not update profile with public registry:', err);\n\t  }).then(function (response) {\n\t    // Profile successfully patched with a link to the created public registry\n\t    // It's safe to update this instance of profile\n\t    profile.appRegistryListed = registry;\n\t    // Finally, return the updated profile with registry loaded\n\t    return profile;\n\t  });\n\t}\n\t\n\t/**\n\t * Loads the public and private app registry resources, adds them\n\t * to the profile, and returns the profile.\n\t * Called by the profile.loadAppRegistry() alias method.\n\t * Usage:\n\t *\n\t *   ```\n\t * var profile = solid.getProfile(url, options)\n\t *   .then(function (profile) {\n\t *     return profile.loadAppRegistry(options)\n\t *   })\n\t *   ```\n\t * @method loadAppRegistry\n\t * @param profile {SolidProfile}\n\t * @param webClient {SolidWebClient}\n\t * @param [options={}] Options hashmap (see solid.web.solidRequest()\n\t *   function docs)\n\t * @return {Promise<SolidProfile>}\n\t */\n\tfunction loadAppRegistry(profile, webClient, options) {\n\t  options = options || {};\n\t  options.headers = options.headers || {};\n\t  // Politely ask for Turtle format\n\t  if (!options.headers['Accept']) {\n\t    options.headers['Accept'] = 'text/turtle';\n\t  }\n\t  // load public and private registry resources\n\t  var links = [];\n\t  if (profile.appRegistryListed.uri) {\n\t    links.push(profile.appRegistryListed.uri);\n\t  }\n\t  if (profile.appRegistryUnlisted.uri) {\n\t    links.push(profile.appRegistryUnlisted.uri);\n\t  }\n\t  return webClient.loadParsedGraphs(links, options).then(function (loadedGraphs) {\n\t    loadedGraphs.forEach(function (graph) {\n\t      // For each registry resource loaded, add it to `profile.appRegistryListed`\n\t      //  or `profile.appRegistryUnlisted` as appropriate\n\t      if (graph && graph.value) {\n\t        profile.addAppRegistry(graph.value, graph.uri);\n\t      }\n\t    });\n\t    return profile;\n\t  });\n\t}\n\t\n\t/**\n\t * Registers a given entry in the app registry.\n\t * @method registerApp\n\t * @param profile {SolidProfile}\n\t * @param app {AppRegistration}\n\t * @param webClient {SolidWebClient}\n\t * @return {Promise<SolidProfile>} Returns updated profile.\n\t */\n\tfunction registerApp(profile, app, webClient) {\n\t  if (!profile) {\n\t    throw new Error('No profile provided');\n\t  }\n\t  if (!profile.isLoaded) {\n\t    throw new Error('Profile is not loaded');\n\t  }\n\t  if (!app || !app.isValid()) {\n\t    throw new Error('Invalid app registration');\n\t  }\n\t  // make sure app registry is loaded\n\t  return loadAppRegistry(profile, webClient).then(function (profile) {\n\t    if (app.isListed && !profile.hasAppRegistryPublic()) {\n\t      // Public App registry is needed, but doesn't exist. Create it.\n\t      return initAppRegistryPublic(profile, webClient);\n\t    }\n\t    if (!app.isListed && !profile.hasAppRegistryPrivate()) {\n\t      // Private App registry is needed, but doesn't exist. Create it.\n\t      return initAppRegistryPrivate(profile, webClient);\n\t    }\n\t    // Relevant App registry exists, proceed\n\t    return profile;\n\t  }).then(function (profile) {\n\t    // Made sure the relevant app registry exists, and can now add to it\n\t    return addToAppRegistry(profile, app, webClient);\n\t  });\n\t}\n\t\n\t/**\n\t * Returns a list of registry entries from a given parsed type index graph.\n\t * @method registrationsFromGraph\n\t * @param graph {Graph} Parsed type index graph\n\t * @param type {NamedNode} RDF Class\n\t * @param rdf {RDF} RDF Library\n\t * @return {Array<AppRegistration>}\n\t */\n\tfunction registrationsFromGraph(graph, type, rdf) {\n\t  var entrySubject;\n\t  var ns = vocab(rdf);\n\t  var registrations = [];\n\t  if (!graph) {\n\t    return registrations;\n\t  }\n\t  graph.statementsMatching(null, ns.app('commonType'), type).forEach(function (entry) {\n\t    entrySubject = entry.subject;\n\t    var app = new AppRegistration();\n\t    app.initFromGraph(entrySubject, graph, rdf);\n\t    registrations.push(app);\n\t  });\n\t  return registrations;\n\t}\n\n/***/ },\n/* 155 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t/**\n\t * @module app-registration\n\t */\n\t\n\tmodule.exports = AppRegistration;\n\t\n\tvar hash = __webpack_require__(156);\n\tvar vocab = __webpack_require__(158);\n\tvar registry = __webpack_require__(159);\n\t\n\t/**\n\t * Represents a Solid App Registry registration (an entry in the App Registry).\n\t * Returned in a list by `profile.appForType()`\n\t * @class AppRegistration\n\t * @constructor\n\t * @param [options={}] {Object} Hashmap of app registration options.\n\t * @param [options.name] {String} App name (required for valid registration)\n\t * @param [options.shortdesc] {String}\n\t * @param [options.redirectTemplateUri] {String}\n\t * @param types {Array<String>|Array<NamedNode>} List of types / RDF classes for\n\t *   which this app is registered. This app will be used to open those types\n\t *   by Solid servers that support this functionality.\n\t * @param [isListed=false] {Boolean} Register in a listed or unlisted registry.\n\t */\n\tfunction AppRegistration(options, types, isListed) {\n\t  options = options || {};\n\t  /**\n\t   * Is this registered in a listed or unlisted registry\n\t   * @property isListed\n\t   * @type Boolean\n\t   */\n\t  this.isListed = isListed;\n\t  /**\n\t   * App name\n\t   * @property name\n\t   * @type String\n\t   */\n\t  this.name = options.name;\n\t  /**\n\t   * URI template that will be redirected to if the server gets a request\n\t   * for one of the registered types. For example:\n\t   * 'https://solid.github.io/contacts/?uri={uri}'\n\t   * @property redirectTemplateUri\n\t   * @type String\n\t   */\n\t  this.redirectTemplateUri = options.redirectTemplateUri;\n\t  /**\n\t   * Absolute URI (with fragment identifier) of the registration.\n\t   * This is only set when this instance is created as a result of querying\n\t   * the app registry.\n\t   * @property registrationUri\n\t   * @type String\n\t   */\n\t  this.registrationUri = null;\n\t  /**\n\t   * Short description of the app\n\t   * @property shortdesc\n\t   * @type String\n\t   */\n\t  this.shortdesc = options.shortdesc;\n\t  /**\n\t   * List of types / RDF classes for which this app is registered.\n\t   * This app will be used to open those types by Solid servers that support\n\t   * this functionality.\n\t   * @property types\n\t   * @type {Array<String>|Array<NamedNode>}\n\t   */\n\t  this.types = types || [];\n\t}\n\t\n\t/**\n\t * Returns a unique hash fragment identifier for this registration (a hash of\n\t * the `redirectTemplateUri` property).\n\t * @method hashFragment\n\t * @return {String}\n\t */\n\tAppRegistration.prototype.hashFragment = function hashFragment() {\n\t  var fragmentId = hash.unique(this.redirectTemplateUri);\n\t  return fragmentId;\n\t};\n\t\n\t/**\n\t * Initializes the registration details from a parsed registry graph.\n\t * @method initFromGraph\n\t * @param subject {NamedNode} Hash fragment uri of the registration\n\t * @param graph {Graph} Parsed registry graph\n\t * @param rdf {RDF} RDF Library\n\t */\n\tAppRegistration.prototype.initFromGraph = function initFromGraph(subject, graph, rdf) {\n\t  this.registrationUri = subject.uri;\n\t  this.isListed = !!registry.isListed(graph, rdf);\n\t  this.types = [];\n\t  var self = this;\n\t  var ns = vocab(rdf);\n\t  // Load the types\n\t  graph.statementsMatching(subject, ns.app('commonType')).forEach(function (typeStatement) {\n\t    self.types.push(typeStatement.object.uri);\n\t  });\n\t  var match;\n\t  match = graph.any(subject, ns.app('name'));\n\t  if (match) {\n\t    this.name = match.value;\n\t  }\n\t  match = graph.any(subject, ns.app('shortdesc'));\n\t  if (match) {\n\t    this.shortdesc = match.value;\n\t  }\n\t  match = graph.any(subject, ns.app('redirectTemplateUri'));\n\t  if (match) {\n\t    this.redirectTemplateUri = match.value;\n\t  }\n\t};\n\t\n\t/**\n\t * Is this a valid app registration entry that can be added to the registry?\n\t * (A registration is considered valid if it has a name, at least one type,\n\t * and a redirectUri)\n\t * @method isValid\n\t * @return {Boolean}\n\t */\n\tAppRegistration.prototype.isValid = function isValid() {\n\t  return this.name && this.redirectTemplateUri && this.types.length > 0;\n\t};\n\t\n\t/**\n\t * Returns an array of RDF statements representing this app registration.\n\t * @method rdfStatements\n\t * @return {Array<Statement>} List of RDF statements representing registration,\n\t *   or an empty array if this registration is invalid.\n\t */\n\tAppRegistration.prototype.rdfStatements = function rdfStatements(rdf) {\n\t  var hashFragment = rdf.namedNode('#' + this.hashFragment());\n\t  var statements = [];\n\t  var ns = vocab(rdf);\n\t  // example: '<#ab09fd> a solid:AppRegistration;'\n\t  statements.push(rdf.triple(hashFragment, ns.rdf('type'), ns.solid('AppRegistration')), rdf.triple(hashFragment, ns.app('name'), this.name), rdf.triple(hashFragment, ns.app('shortdesc'), this.shortdesc), rdf.triple(hashFragment, ns.app('redirectTemplateUri'), this.redirectTemplateUri));\n\t  this.types.forEach(function (type) {\n\t    statements.push(rdf.triple(hashFragment, ns.app('commonType'), type));\n\t  });\n\t\n\t  return statements;\n\t};\n\n/***/ },\n/* 156 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(157);\n\n/***/ },\n/* 157 */\n/***/ function(module, exports) {\n\n\t\n\t/*\n\t\tshorthash\n\t\t(c) 2013 Bibig\n\t\t\n\t\thttps://github.com/bibig/node-shorthash\n\t\tshorthash may be freely distributed under the MIT license.\n\t*/\n\t\n\texports.bitwise = bitwise;\n\texports.binaryTransfer = binaryTransfer;\n\texports.unique = unique;\n\texports.random = random;\n\t\n\t// refer to: http://werxltd.com/wp/2010/05/13/javascript-implementation-of-javas-string-hashcode-method/\n\tfunction bitwise(str){\n\t\tvar hash = 0;\n\t\tif (str.length == 0) return hash;\n\t\tfor (var i = 0; i < str.length; i++) {\n\t\t\tvar ch = str.charCodeAt(i);\n\t\t\thash = ((hash<<5)-hash) + ch;\n\t\t\thash = hash & hash; // Convert to 32bit integer\n\t\t}\n\t\treturn hash;\n\t}\n\t\n\t// 10进制转化成62进制以内的进制\n\t// convert 10 binary to customized binary, max is 62\n\tfunction binaryTransfer(integer, binary) {\n\t\tbinary = binary || 62;\n\t\tvar stack = [];\n\t\tvar num;\n\t\tvar result = '';\n\t\tvar sign = integer < 0 ? '-' : '';\n\t\t\n\t\tfunction table (num) {\n\t\t\tvar t = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\t\t\treturn t[num];\n\t\t}\n\t\t\n\t\tinteger = Math.abs(integer);\n\t\t\n\t\twhile (integer >= binary) {\n\t\t\tnum = integer % binary;\n\t\t\tinteger = Math.floor(integer / binary);\n\t\t\tstack.push(table(num));\n\t\t}\n\t\t\n\t\tif (integer > 0) {\n\t\t\tstack.push(table(integer));\n\t\t}\n\t\t\n\t\tfor (var i = stack.length - 1; i >= 0; i--) {\n\t\t\tresult += stack[i];\n\t\t} \n\t\t\n\t\treturn sign + result;\n\t}\n\t\n\t\n\t/**\n\t * why choose 61 binary, because we need the last element char to replace the minus sign\n\t * eg: -aGtzd will be ZaGtzd\n\t */\n\tfunction unique (text) {\n\t\tvar id = binaryTransfer(bitwise(text), 61);\n\t\treturn id.replace('-', 'Z');\n\t}\n\t\n\tfunction random (_len) {\n\t\t/*\n\t\tvar len = _len || 8 ;\n\t\treturn require('crypto').randomBytes(len).toString('hex');\n\t\t*/\n\t\t\n\t\tvar chars = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz\";\n\t\tvar rs = '';\n\t\tvar len = _len || 8 ;\n\t\tfor (var i=0; i< len; i++) {\n\t\t\tvar pos = Math.floor( Math.random() * chars.length);\n\t\t\trs += chars.substring(pos, pos + 1);\n\t\t}\n\t\treturn rs;\n\t}\n\n/***/ },\n/* 158 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict'\n\t/**\n\t * Provides a hashmap of relevant vocabs / namespaces.\n\t * Usage:\n\t *\n\t *   ```\n\t *   var rdf = require('rdflib')  // optional\n\t *   var vocab = require('solid-vocab')(rdf)  // or require('solid-vocab')()\n\t *   console.log(vocab.foaf('name'))  // -> <http://xmlns.com/foaf/0.1/name>\n\t *   ```\n\t * @module vocab\n\t */\n\t\n\t/**\n\t * @param [rdf] {RDF} Optional RDF Library (such as rdflib.js or rdf-ext) to\n\t *   inject\n\t */\n\tfunction vocab (rdf) {\n\t  var ns = __webpack_require__(144)(rdf)\n\t  var vocabMap = {\n\t    'acl': ns.base('http://www.w3.org/ns/auth/acl#'),\n\t    'app': ns.base('http://www.w3.org/ns/solid/app#'),\n\t    'cert': ns.base('http://www.w3.org/ns/auth/cert#'),\n\t    'dct': ns.base('http://purl.org/dc/terms/'),\n\t    'foaf': ns.base('http://xmlns.com/foaf/0.1/'),\n\t    'ldp': ns.base('http://www.w3.org/ns/ldp#'),\n\t    'owl': ns.base('http://www.w3.org/2002/07/owl#'),\n\t    'pim': ns.base('http://www.w3.org/ns/pim/space#'),\n\t    'rdf': ns.base('http://www.w3.org/1999/02/22-rdf-syntax-ns#'),\n\t    'rdfs': ns.base('http://www.w3.org/2000/01/rdf-schema#'),\n\t    'schema': ns.base('http://schema.org/'),\n\t    'sioc': ns.base('http://rdfs.org/sioc/ns#'),\n\t    'solid': ns.base('http://www.w3.org/ns/solid/terms#'),\n\t    'stat': ns.base('http://www.w3.org/ns/posix/stat#'),\n\t    'vcard': ns.base('http://www.w3.org/2006/vcard/ns#'),\n\t    'xsd': ns.base('http://www.w3.org/2001/XMLSchema#')\n\t  }\n\t  return vocabMap\n\t}\n\t\n\tmodule.exports = vocab\n\n\n/***/ },\n/* 159 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t/**\n\t * @module registry\n\t */\n\t\n\tmodule.exports.isListed = isListed;\n\tmodule.exports.isUnlisted = isUnlisted;\n\t\n\tvar vocab = __webpack_require__(158);\n\t\n\t/**\n\t * Returns true if the parsed graph is a `solid:UnlistedDocument` document.\n\t * @method isUnlisted\n\t * @param graph {Graph} Parsed graph (loaded from a registry-like resource)\n\t * @return {Boolean}\n\t */\n\tfunction isUnlisted(graph, rdf) {\n\t  var ns = vocab(rdf);\n\t  return graph.any(null, null, ns.solid('UnlistedDocument'), graph.uri);\n\t}\n\t\n\t/**\n\t * Returns true if the parsed graph is a `solid:ListedDocument` document.\n\t * @method isListed\n\t * @param graph {Graph} Parsed graph (loaded from a registry-like resource)\n\t * @return {Boolean}\n\t */\n\tfunction isListed(graph, rdf) {\n\t  var ns = vocab(rdf);\n\t  return graph.any(null, null, ns.solid('ListedDocument'), graph.uri);\n\t}\n\n/***/ },\n/* 160 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t/**\n\t * Provides convenience methods for graph manipulation.\n\t * Currently depends on RDFLib\n\t * @module graph-util\n\t */\n\t\n\tmodule.exports.appendGraph = appendGraph;\n\tmodule.exports.parseGraph = parseGraph;\n\tmodule.exports.parseLinks = parseLinks;\n\tmodule.exports.serializeStatements = serializeStatements;\n\tmodule.exports.graphFromStatements = graphFromStatements;\n\tmodule.exports.statementToNT = statementToNT;\n\t\n\tvar ALL_STATEMENTS = null;\n\t\n\t/**\n\t * Appends RDF statements from one graph object to another\n\t * @method appendGraph\n\t * @param toGraph {Graph} Graph object to append to\n\t * @param fromGraph {Graph} Graph object to append from\n\t */\n\tfunction appendGraph(toGraph, fromGraph) {\n\t  // var source = (docURI) ? rdf.sym(docURI) : undefined\n\t  fromGraph.statementsMatching(ALL_STATEMENTS).forEach(function (st) {\n\t    toGraph.add(st.subject, st.predicate, st.object, st.why);\n\t  });\n\t}\n\t\n\t/**\n\t * Converts a statement to string (if it isn't already), optionally slices off\n\t * the period at the end, and returns the statement.\n\t * @method statementToNT\n\t * @param statement {String|Statement} RDF Statement to be converted.\n\t * @param [excludeDot=false] {Boolean} Optionally slice off ending period.\n\t * @return {String}\n\t */\n\tfunction statementToNT(statement, excludeDot) {\n\t  if (typeof statement !== 'string') {\n\t    // This is an RDF Statement. Convert to string\n\t    statement = statement.toNT();\n\t  }\n\t  if (excludeDot && statement.endsWith('.')) {\n\t    statement = statement.slice(0, -1);\n\t  }\n\t  return statement;\n\t}\n\t\n\t/**\n\t * Converts a list of RDF statements into an rdflib Graph (Formula), and returns\n\t * it.\n\t * @method graphFromStatements\n\t * @param statements {Array<Statement>}\n\t * @return {Graph}\n\t */\n\tfunction graphFromStatements(statements, rdf) {\n\t  var graph = rdf.graph();\n\t  statements.forEach(function (st) {\n\t    graph.add(st);\n\t  });\n\t  return graph;\n\t}\n\t\n\t/**\n\t * Parses a given graph, from text rdfSource, as a given content type.\n\t * Returns parsed graph.\n\t * @method parseGraph\n\t * @param baseUrl {String}\n\t * @param rdfSource {String} Text source code\n\t * @param contentType {String} Mime Type (determines which parser to use)\n\t * @return {Graph}\n\t */\n\tfunction parseGraph(baseUrl, rdfSource, contentType, rdf) {\n\t  var parsedGraph = rdf.graph();\n\t  rdf.parse(rdfSource, parsedGraph, baseUrl, contentType);\n\t  return parsedGraph;\n\t}\n\t\n\t/**\n\t * Extracts the URIs from a parsed graph that match parameters.\n\t * The URIs are a set (duplicates are removed)\n\t * @method parseLinks+\n\t * @param graph {Graph}\n\t * @param subject {Symbol}\n\t * @param predicate {Symbol}\n\t * @param object {Symbol}\n\t * @param source {Symbol}\n\t * @return {Array<String>} Array of link URIs that match the parameters\n\t */\n\tfunction parseLinks(graph, subject, predicate, object, source) {\n\t  var links = {};\n\t  var matches = graph.statementsMatching(subject, predicate, object, source);\n\t  matches.forEach(function (match) {\n\t    links[match.object.uri] = true;\n\t  });\n\t  return Object.keys(links);\n\t}\n\t\n\t/**\n\t * Serializes an array of RDF statements into a simple N-Triples format\n\t * suitable for writing to a solid server.\n\t * @method serializeStatements\n\t * @param statements {Array<Statement>} List of RDF statements\n\t * @return {String}\n\t */\n\tfunction serializeStatements(statements) {\n\t  var source = statements.map(function (st) {\n\t    return st.toNT();\n\t  });\n\t  source = source.join('\\n');\n\t  return source;\n\t}\n\n/***/ },\n/* 161 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t/**\n\t * Provides misc utility functions for the web client\n\t * @module web-util\n\t */\n\t\n\tmodule.exports.composePatchQuery = composePatchQuery;\n\tmodule.exports.parseAllowedMethods = parseAllowedMethods;\n\tmodule.exports.parseLinkHeader = parseLinkHeader;\n\tmodule.exports.absoluteUrl = absoluteUrl;\n\tmodule.exports.hostname = hostname;\n\t\n\tvar graphUtil = __webpack_require__(160);\n\t\n\t/**\n\t * Extracts the allowed HTTP methods from the 'Allow' and 'Accept-Patch'\n\t * headers, and returns a hashmap of verbs allowed by the server\n\t * @method parseAllowedMethods\n\t * @param allowMethodsHeader {String} `Access-Control-Allow-Methods` response\n\t *   header\n\t * @param acceptPatchHeader {String} `Accept-Patch` response header\n\t * @return {Object} Hashmap of verbs (in lowercase) allowed by the server for\n\t *   the current user. Example:\n\t *   ```\n\t *   {\n\t *     'get': true,\n\t *     'put': true\n\t *   }\n\t *   ```\n\t */\n\tfunction parseAllowedMethods(allowMethodsHeader, acceptPatchHeader) {\n\t  var allowedMethods = {};\n\t  if (allowMethodsHeader) {\n\t    var verbs = allowMethodsHeader.split(',');\n\t    verbs.forEach(function (methodName) {\n\t      if (methodName && allowMethodsHeader.indexOf(methodName) >= 0) {\n\t        allowedMethods[methodName.trim().toLowerCase()] = true;\n\t      }\n\t    });\n\t  }\n\t  if (acceptPatchHeader && acceptPatchHeader.indexOf('application/sparql-update') >= 0) {\n\t    allowedMethods.patch = true;\n\t  }\n\t  return allowedMethods;\n\t}\n\t\n\t/**\n\t* Parses a Link header from an XHR HTTP Request.\n\t* @method parseLinkHeader\n\t* @param link {String} Contents of the Link response header\n\t* @return {Object}\n\t*/\n\tfunction parseLinkHeader(link) {\n\t  if (!link) {\n\t    return {};\n\t  }\n\t  var linkexp = /<[^>]*>\\s*(\\s*;\\s*[^\\(\\)<>@,;:\"\\/\\[\\]\\?={} \\t]+=(([^\\(\\)<>@,;:\"\\/\\[\\]\\?={} \\t]+)|(\"[^\"]*\")))*(,|$)/g;\n\t  var paramexp = /[^\\(\\)<>@,;:\"\\/\\[\\]\\?={} \\t]+=(([^\\(\\)<>@,;:\"\\/\\[\\]\\?={} \\t]+)|(\"[^\"]*\"))/g;\n\t  var matches = link.match(linkexp);\n\t  var rels = {};\n\t  for (var i = 0; i < matches.length; i++) {\n\t    var split = matches[i].split('>');\n\t    var href = split[0].substring(1);\n\t    var ps = split[1];\n\t    var s = ps.match(paramexp);\n\t\n\t    for (var j = 0; j < s.length; j++) {\n\t      var p = s[j];\n\t      var paramsplit = p.split('=');\n\t      // var name = paramsplit[0]\n\t      var rel = paramsplit[1].replace(/[\"']/g, '');\n\t      if (!rels[rel]) {\n\t        rels[rel] = [];\n\t      }\n\t      rels[rel].push(href);\n\t      if (rels[rel].length > 1) {\n\t        rels[rel].sort();\n\t      }\n\t    }\n\t  }\n\t  return rels;\n\t}\n\t\n\tfunction hostname(url) {\n\t  var protocol, hostname, result, pathSegments;\n\t  var fragments = url.split('//');\n\t  if (fragments.length === 2) {\n\t    protocol = fragments[0];\n\t    hostname = fragments[1];\n\t  } else {\n\t    hostname = url;\n\t  }\n\t  pathSegments = hostname.split('/');\n\t  if (protocol) {\n\t    result = protocol + '//' + pathSegments[0];\n\t  } else {\n\t    result = pathSegments[0];\n\t  }\n\t  if (url.startsWith('//')) {\n\t    result = '//' + result;\n\t  }\n\t  return result;\n\t}\n\t\n\t/**\n\t* Return an absolute URL\n\t* @method absoluteUrl\n\t* @param baseUrl {String} URL to be used as base\n\t* @param pathUrl {String} Absolute or relative URL\n\t* @return {String}\n\t*/\n\tfunction absoluteUrl(baseUrl, pathUrl) {\n\t  if (pathUrl && pathUrl.slice(0, 4) !== 'http') {\n\t    return [baseUrl, pathUrl].map(function (path) {\n\t      if (path[0] === '/') {\n\t        path = path.slice(1);\n\t      }\n\t      if (path[path.length - 1] === '/') {\n\t        path = path.slice(0, path.length - 1);\n\t      }\n\t      return path;\n\t    }).join('/');\n\t  }\n\t  return pathUrl;\n\t}\n\t\n\t/**\n\t * Composes and returns a PATCH SPARQL query (for use with `web.patch()`)\n\t * @method composePatchQuery\n\t * @param toDel {Array<String|Statement>} List of triples to delete\n\t * @param toIns {Array<String|Statement>} List of triples to insert\n\t * @return {String} SPARQL query for use with PATCH\n\t */\n\tfunction composePatchQuery(toDel, toIns) {\n\t  var query = '';\n\t  var excludeDot = true;\n\t  if (toDel && toDel.length > 0) {\n\t    toDel = toDel.map(function (st) {\n\t      return graphUtil.statementToNT(st, excludeDot);\n\t    });\n\t    query += 'DELETE DATA { ' + toDel.join(' . ') + ' };\\n';\n\t  }\n\t  if (toIns && toIns.length > 0) {\n\t    toIns = toIns.map(function (st) {\n\t      return graphUtil.statementToNT(st, excludeDot);\n\t    });\n\t    query += 'INSERT DATA { ' + toIns.join(' . ') + ' };\\n';\n\t  }\n\t  return query;\n\t}\n\n/***/ },\n/* 162 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t/**\n\t * Provides Solid helper functions involved with loading the Type Index\n\t * Registry files, and with registering resources with them.\n\t * @module type-registry\n\t */\n\t\n\tmodule.exports.addToTypeIndex = addToTypeIndex;\n\tmodule.exports.blankPrivateTypeIndex = blankPrivateTypeIndex;\n\tmodule.exports.blankPublicTypeIndex = blankPublicTypeIndex;\n\tmodule.exports.initTypeRegistryPrivate = initTypeRegistryPrivate;\n\tmodule.exports.initTypeRegistryPublic = initTypeRegistryPublic;\n\tmodule.exports.loadTypeRegistry = loadTypeRegistry;\n\tmodule.exports.registerType = registerType;\n\tmodule.exports.typeRegistryForClass = typeRegistryForClass;\n\tmodule.exports.unregisterType = unregisterType;\n\t\n\tvar IndexRegistration = __webpack_require__(163);\n\tvar util = __webpack_require__(161);\n\tvar graphUtil = __webpack_require__(160);\n\tvar webUtil = __webpack_require__(161);\n\tvar vocab = __webpack_require__(158);\n\t\n\t/**\n\t * Returns a blank private type index registry option.\n\t * For use with `initTypeRegistry()`.\n\t * @method blankPrivateTypeIndex\n\t * @private\n\t * @return {Object} Blank type index registry object\n\t */\n\tfunction blankPrivateTypeIndex(rdf) {\n\t  var thisDoc = rdf.namedNode('');\n\t  var ns = vocab(rdf);\n\t  var indexStatements = [rdf.triple(thisDoc, ns.rdf('type'), ns.solid('TypeIndex')), rdf.triple(thisDoc, ns.rdf('type'), ns.solid('UnlistedDocument'))];\n\t  var privateIndex = {\n\t    data: graphUtil.serializeStatements(indexStatements),\n\t    graph: graphUtil.graphFromStatements(indexStatements, rdf),\n\t    slug: 'privateTypeIndex.ttl',\n\t    uri: null // actual url not yet known\n\t  };\n\t  return privateIndex;\n\t}\n\t\n\t/**\n\t * Returns a blank public type index registry option.\n\t * For use with `initTypeRegistry()`.\n\t * @method blankPublicTypeIndex\n\t * @private\n\t * @return {Object} Blank type index registry object\n\t */\n\tfunction blankPublicTypeIndex(rdf) {\n\t  var thisDoc = rdf.namedNode('');\n\t  var ns = vocab(rdf);\n\t  var indexStatements = [rdf.triple(thisDoc, ns.rdf('type'), ns.solid('TypeIndex')), rdf.triple(thisDoc, ns.rdf('type'), ns.solid('ListedDocument'))];\n\t  var publicIndex = {\n\t    data: graphUtil.serializeStatements(indexStatements),\n\t    graph: graphUtil.graphFromStatements(indexStatements, rdf),\n\t    slug: 'publicTypeIndex.ttl',\n\t    uri: null // actual url not yet known\n\t  };\n\t  return publicIndex;\n\t}\n\t\n\t/**\n\t * Initializes the private Type Index Registry resource, updates\n\t * the profile with the initialized index, and returns the updated profile.\n\t * @method initTypeRegistryPrivate\n\t * @param profile {SolidProfile} User's WebID profile\n\t * @param [options] Options hashmap (see solid.web.solidRequest() function docs)\n\t * @return {Promise<SolidProfile>} Resolves with the updated profile instance.\n\t */\n\tfunction initTypeRegistryPrivate(profile, webClient, options) {\n\t  options = options || {};\n\t  var rdf = webClient.rdf;\n\t  var ns = vocab(rdf);\n\t  var registryContainerUri = profile.typeRegistryDefaultContainer();\n\t  var webId = rdf.namedNode(profile.webId);\n\t  var privateIndex = blankPrivateTypeIndex(rdf);\n\t  // First, create the private Type Index Registry resource\n\t  return webClient.post(registryContainerUri, privateIndex.data, privateIndex.slug).catch(function (err) {\n\t    throw new Error('Could not create privateIndex document:', err);\n\t  }).then(function (response) {\n\t    // Private type index resource created.\n\t    // Update the private profile (preferences) to link to it.\n\t    privateIndex.uri = util.absoluteUrl(webUtil.hostname(registryContainerUri), response.url);\n\t    var toAdd = [rdf.triple(webId, ns.solid('privateTypeIndex'), rdf.namedNode(privateIndex.uri))];\n\t    var toDel = [];\n\t    // Note: this PATCH will actually create a private profile if it doesn't\n\t    // already exist.\n\t    return webClient.patch(profile.privateProfileUri(), toDel, toAdd, options);\n\t  }).catch(function (err) {\n\t    throw new Error('Could not update profile with private index:' + err);\n\t  }).then(function (response) {\n\t    // Profile successfully patched with a link to the created private index\n\t    // It's safe to update this instance of profile\n\t    profile.typeIndexUnlisted = privateIndex;\n\t    // Finally, return the updated profile with type index loaded\n\t    return profile;\n\t  });\n\t}\n\t\n\t/**\n\t * Initializes the public Type Index Registry resource, updates\n\t * the profile with the initialized index, and returns the updated profile.\n\t * @method initTypeRegistryPublic\n\t * @param profile {SolidProfile} User's WebID profile\n\t * @param webClient {SolidWebClient}\n\t * @param [options] Options hashmap (see solid.web.solidRequest() function docs)\n\t * @return {Promise<SolidProfile>} Resolves with the updated profile instance.\n\t */\n\tfunction initTypeRegistryPublic(profile, webClient, options) {\n\t  options = options || {};\n\t  var rdf = webClient.rdf;\n\t  var ns = vocab(rdf);\n\t  var registryContainerUri = profile.typeRegistryDefaultContainer();\n\t  var webId = rdf.namedNode(profile.webId);\n\t  var publicIndex = blankPublicTypeIndex(rdf);\n\t  // First, create the public Type Index Registry resource\n\t  return webClient.post(registryContainerUri, publicIndex.data, publicIndex.slug).catch(function (err) {\n\t    throw new Error('Could not create publicIndex document:', err);\n\t  }).then(function (response) {\n\t    // Public type index resource created. Update the profile to link to it.\n\t    publicIndex.uri = util.absoluteUrl(webUtil.hostname(registryContainerUri), response.url);\n\t    var toAdd = [rdf.triple(webId, ns.solid('publicTypeIndex'), rdf.namedNode(publicIndex.uri))];\n\t    var toDel = [];\n\t    return webClient.patch(profile.webId, toDel, toAdd, options);\n\t  }).catch(function (err) {\n\t    console.log(err);\n\t    throw new Error('Could not update profile with public index:', err);\n\t  }).then(function (response) {\n\t    // Profile successfully patched with a link to the created public index\n\t    // It's safe to update this instance of profile\n\t    profile.typeIndexListed = publicIndex;\n\t    // Finally, return the updated profile with type index loaded\n\t    return profile;\n\t  });\n\t}\n\t\n\t/**\n\t * Adds an RDF class to a user's type index registry, and returns the\n\t * profile (with the appropriate type registry index updated).\n\t * Called by `registerTypeIndex()`, which does all the argument validation.\n\t * @method addToTypeIndex\n\t * @param profile {SolidProfile} User's WebID profile\n\t * @param rdfClass {NamedNode} RDF type to register in the index.\n\t * @param location {String} Absolute URI to the location you want the class\n\t *   registered to.\n\t * @param locationType {String} Either 'instance' or 'container'\n\t * @param isListed {Boolean} Whether to register in a listed or unlisted index).\n\t * @return {Promise<SolidProfile>}\n\t */\n\tfunction addToTypeIndex(profile, rdfClass, location, webClient, locationType, isListed) {\n\t  // TODO: Check to see if a registry entry for this type already exists.\n\t  // Generate a fragment identifier for the new registration\n\t  var hash = __webpack_require__(156);\n\t  var rdf = webClient.rdf;\n\t  var ns = vocab(rdf);\n\t  var fragmentId = hash.unique(rdfClass.uri);\n\t  var registryUri;\n\t  var registryGraph;\n\t  if (isListed) {\n\t    registryUri = profile.typeIndexListed.uri;\n\t    registryGraph = profile.typeIndexListed.graph;\n\t  } else {\n\t    registryUri = profile.typeIndexUnlisted.uri;\n\t    registryGraph = profile.typeIndexUnlisted.graph;\n\t  }\n\t  if (!registryUri) {\n\t    throw new Error('Cannot register type, registry URL missing');\n\t  }\n\t  var registrationUri = rdf.namedNode(registryUri + '#' + fragmentId);\n\t  // Set the class for the location type\n\t  var locationTypeClass;\n\t  if (locationType === 'instance') {\n\t    locationTypeClass = ns.solid('instance');\n\t  } else {\n\t    locationTypeClass = ns.solid('instanceContainer');\n\t    // Add trailing slash if it's missing and is a container\n\t    if (location.lastIndexOf('/') !== location.length - 1) {\n\t      location += '/';\n\t    }\n\t  }\n\t  // triples to delete (none for the moment)\n\t  var toDel = [];\n\t  // Create the list of triples to add in the PATCH operation\n\t  var toAdd = [\n\t  // example: '<#ab09fd> a solid:TypeRegistration;'\n\t  rdf.triple(registrationUri, ns.rdf('type'), ns.solid('TypeRegistration')),\n\t  // example: 'solid:forClass sioc:Post;'\n\t  rdf.triple(registrationUri, ns.solid('forClass'), rdfClass),\n\t  // example: 'solid:instanceContainer </posts/>.'\n\t  rdf.triple(registrationUri, locationTypeClass, rdf.namedNode(location))];\n\t  return webClient.patch(registryUri, toDel, toAdd).then(function (response) {\n\t    // Update the profile object with the new registry without reloading\n\t    var newRegistration = graphUtil.graphFromStatements(toAdd, rdf);\n\t    if (registryGraph) {\n\t      graphUtil.appendGraph(registryGraph, newRegistration);\n\t    } else {\n\t      profile[isListed ? 'typeIndexListed' : 'typeIndexUnlisted'].graph = newRegistration;\n\t    }\n\t    return profile;\n\t  });\n\t}\n\t\n\t/**\n\t * Loads the public and private type registry index resources, adds them\n\t * to the profile, and returns the profile.\n\t * Called by the profile.loadTypeRegistry() alias method.\n\t * Usage:\n\t *\n\t *   ```\n\t * var profile = solid.getProfile(url, options)\n\t *   .then(function (profile) {\n\t *     return profile.loadTypeRegistry(options)\n\t *   })\n\t *   ```\n\t * @method loadTypeRegistry\n\t * @param profile {SolidProfile}\n\t * @param webClient {SolidWebClient}\n\t * @param [options] Options hashmap (see solid.web.solidRequest() function docs)\n\t * @return {Promise<SolidProfile>}\n\t */\n\tfunction loadTypeRegistry(profile, webClient, options) {\n\t  options = options || {};\n\t  options.headers = options.headers || {};\n\t  // Politely ask for Turtle format\n\t  if (!options.headers['Accept']) {\n\t    options.headers['Accept'] = 'text/turtle';\n\t  }\n\t  // load public and private index resources\n\t  var links = [];\n\t  if (profile.typeIndexListed.uri) {\n\t    links.push(profile.typeIndexListed.uri);\n\t  }\n\t  if (profile.typeIndexUnlisted.uri) {\n\t    links.push(profile.typeIndexUnlisted.uri);\n\t  }\n\t  return webClient.loadParsedGraphs(links, options).then(function (loadedGraphs) {\n\t    var allFailed = loadedGraphs.length && loadedGraphs.reduce(function (acc, cur) {\n\t      return acc && !cur.value;\n\t    }, true);\n\t    if (allFailed) {\n\t      throw new Error('Could not load any type index');\n\t    }\n\t    loadedGraphs.forEach(function (graph) {\n\t      // For each index resource loaded, add it to `profile.typeIndexListed`\n\t      //  or `profile.typeIndexUnlisted` as appropriate\n\t      if (graph && graph.value) {\n\t        profile.addTypeRegistry(graph.value, graph.uri);\n\t      }\n\t    });\n\t    return profile;\n\t  });\n\t}\n\t\n\t/**\n\t * Registers a given RDF class in the user's type index registries, so that\n\t * other applications can discover it.\n\t * Note: If the relevant type index registry does not exist, it will be created.\n\t * @method registerType\n\t * @param profile {SolidProfile} Loaded WebID profile\n\t * @param rdfClass {rdf.NamedNode} Type to register in the index.\n\t * @param location {String} Absolute URI to the location you want the class\n\t *   registered to. (Example: Registering Address books in\n\t *   `https://example.com/contacts/`)\n\t * @param [locationType='container'] {String} Either 'instance' or 'container',\n\t *   defaults to 'container'\n\t * @param [isListed=false] {Boolean} Whether to register in a listed or unlisted\n\t *   index). Defaults to `false` (unlisted).\n\t * @param webClient {SolidWebClient}\n\t * @return {Promise<SolidProfile>} Resolves with the updated profile.\n\t */\n\tfunction registerType(profile, rdfClass, location, locationType, isListed, webClient) {\n\t  if (!profile) {\n\t    throw new Error('No profile provided');\n\t  }\n\t  if (!profile.isLoaded) {\n\t    throw new Error('Profile is not loaded');\n\t  }\n\t  if (!rdfClass || !location) {\n\t    throw new Error('Type registration requires type class and location');\n\t  }\n\t  locationType = locationType || 'container';\n\t  if (locationType !== 'container' && locationType !== 'instance') {\n\t    throw new Error('Invalid location type');\n\t  }\n\t  // make sure type registry is loaded\n\t  return loadTypeRegistry(profile, webClient).then(function (profile) {\n\t    if (isListed && !profile.hasTypeRegistryPublic()) {\n\t      // Public type registry is needed, but doesn't exist. Create it.\n\t      return initTypeRegistryPublic(profile, webClient);\n\t    }\n\t    if (!isListed && !profile.hasTypeRegistryPrivate()) {\n\t      // Private type registry is needed, but doesn't exist. Create it.\n\t      return initTypeRegistryPrivate(profile, webClient);\n\t    }\n\t    // Relevant type registry exists, proceed\n\t    return profile;\n\t  }).then(function (profile) {\n\t    // Made sure the relevant type registry exists, and can now add to it\n\t    return addToTypeIndex(profile, rdfClass, location, webClient, locationType, isListed);\n\t  });\n\t}\n\t\n\t/**\n\t * Returns lists of registry entries for a profile and a given RDF Class.\n\t * @method typeRegistryForClass\n\t * @param profile {SolidProfile}\n\t * @param rdfClass {rdf.NamedNode} RDF Class\n\t * @return {Array<IndexRegistration>}\n\t */\n\tfunction typeRegistryForClass(profile, rdfClass, rdf) {\n\t  var registrations = [];\n\t  var isListed = true;\n\t\n\t  return registrations.concat(\n\t  // Public/listed registrations\n\t  registrationsFromGraph(profile.typeIndexListed.graph, rdfClass, isListed, rdf)).concat(\n\t  // Private/unlisted registrations\n\t  registrationsFromGraph(profile.typeIndexUnlisted.graph, rdfClass, !isListed, rdf));\n\t}\n\t\n\t/**\n\t * Returns a list of registry entries from a given parsed type index graph.\n\t * @method registrationsFromGraph\n\t * @param graph {Graph} Parsed type index graph\n\t * @param rdfClass {NamedNode} RDF Class\n\t * @param isListed {Boolean} Whether to register in a listed or unlisted index\n\t * @return {Array<IndexRegistration>}\n\t */\n\tfunction registrationsFromGraph(graph, rdfClass, isListed, rdf) {\n\t  var entrySubject, instanceMatches, containerMatches;\n\t  var ns = vocab(rdf);\n\t  var registrations = [];\n\t  if (!graph) {\n\t    return registrations;\n\t  }\n\t  var matches = graph.statementsMatching(null, null, rdfClass);\n\t  matches.forEach(function (match) {\n\t    entrySubject = match.subject;\n\t    // Have the hash fragment of the registration, now need to determine\n\t    // location type, and the actual location.\n\t    instanceMatches = graph.statementsMatching(entrySubject, ns.solid('instance'));\n\t    instanceMatches.forEach(function (location) {\n\t      registrations.push(new IndexRegistration(entrySubject.uri, rdfClass, 'instance', location.object.uri, isListed));\n\t    });\n\t    // Now try to find solid:instanceContainer matches\n\t    containerMatches = graph.statementsMatching(entrySubject, ns.solid('instanceContainer'));\n\t    containerMatches.forEach(function (location) {\n\t      registrations.push(new IndexRegistration(entrySubject.uri, rdfClass, 'container', location.object.uri, isListed));\n\t    });\n\t  });\n\t  return registrations;\n\t}\n\t\n\t/**\n\t * Removes an RDF class from a user's type index registry.\n\t * Called by `unregisterTypeIndex()`, which does all the argument validation.\n\t * @param profile {SolidProfile} User's WebID profile\n\t * @param rdfClass {NamedNode} Type to remove from the registry\n\t * @param webClient {SolidWebClient}\n\t * @param [isListed=false] {Boolean} Whether to remove from a listed or\n\t *   unlisted index\n\t * @param [location] {String} If present, only unregister the class from this\n\t *   location (absolute URI).\n\t * @return {Promise<SolidProfile>}\n\t */\n\tfunction removeFromTypeIndex(profile, rdfClass, webClient, isListed, location) {\n\t  var rdf = webClient.rdf;\n\t  var registryUri;\n\t  var registryGraph;\n\t  if (isListed) {\n\t    registryUri = profile.typeIndexListed.uri;\n\t    registryGraph = profile.typeIndexListed.graph;\n\t  } else {\n\t    registryUri = profile.typeIndexUnlisted.uri;\n\t    registryGraph = profile.typeIndexUnlisted.graph;\n\t  }\n\t  if (!registryUri) {\n\t    throw new Error('Cannot unregister type, registry URL missing');\n\t  }\n\t  // Get the existing registrations\n\t  var registrations = registrationsFromGraph(registryGraph, rdfClass, isListed, rdf);\n\t  if (registrations.length === 0) {\n\t    // No existing registrations, no need to do anything, just return profile\n\t    return Promise.resolve(profile);\n\t  }\n\t  if (location) {\n\t    // If location is present, filter the to-remove list only to registrations\n\t    // that are in that location.\n\t    registrations = registrations.filter(function (registration) {\n\t      return registration.locationUri === location;\n\t    });\n\t  }\n\t  // Generate triples to delete\n\t  var toDel = [];\n\t  registrations.forEach(function (registration) {\n\t    registryGraph.statementsMatching(rdf.namedNode(registration.registrationUri)).forEach(function (statement) {\n\t      toDel.push(statement);\n\t    });\n\t  });\n\t  // Nothing to add\n\t  var toAdd = [];\n\t  return webClient.patch(registryUri, toDel, toAdd).then(function (result) {\n\t    // Update the registry, to reflect new state\n\t    return profile.reloadTypeRegistry(webClient);\n\t  });\n\t}\n\t\n\t/**\n\t * Removes a given RDF class from a user's type index registry, so that\n\t * other applications can discover it.\n\t * @method unregisterType\n\t * @param profile {SolidProfile} Loaded WebID profile\n\t * @param rdfClass {NamedNode} Type to register in the index.\n\t * @param [isListed=false] {Boolean} Whether to remove from a listed or unlisted\n\t *   index). Defaults to `false` (unlisted).\n\t * @param [location] {String} If present, only unregister the class from this\n\t *   location (absolute URI).\n\t * @param webClient {SolidWebClient}\n\t * @throws {Error}\n\t * @return {Promise<SolidProfile>}\n\t */\n\tfunction unregisterType(profile, rdfClass, isListed, location, webClient) {\n\t  if (!profile) {\n\t    throw new Error('No profile provided');\n\t  }\n\t  if (!profile.isLoaded) {\n\t    throw new Error('Profile is not loaded');\n\t  }\n\t  if (!rdfClass) {\n\t    throw new Error('Unregistering a type requires type class');\n\t  }\n\t  // make sure type registry is loaded\n\t  return loadTypeRegistry(profile, webClient).then(function (profile) {\n\t    if (isListed && !profile.typeIndexListed.graph) {\n\t      throw new Error('Profile has no Listed type index');\n\t    }\n\t    if (!isListed && !profile.typeIndexUnlisted.graph) {\n\t      throw new Error('Profile has no Unlisted type index');\n\t    }\n\t    return removeFromTypeIndex(profile, rdfClass, webClient, isListed, location);\n\t  });\n\t}\n\n/***/ },\n/* 163 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t/**\n\t * @module index-registration\n\t */\n\t\n\tmodule.exports = IndexRegistration;\n\t\n\t/**\n\t * Represents a Solid Index registration (an entry in the Type Index Registry).\n\t * Returned in a list by `profile.typeRegistryForClass()`\n\t * @class IndexRegistration\n\t * @constructor\n\t * @param registrationUri {String} Absolute URI (with fragment identifier) of\n\t *   the registration (its location in the type index)\n\t * @param rdfClass {rdf.NamedNode} RDF Class for this registration\n\t * @param locationType {String} One of 'instance' or 'container'\n\t * @param locationUri {String} URI of the location containing resources of this\n\t *   type\n\t * @param isListed {Boolean} Is this registration in a listed or unlisted index\n\t */\n\tfunction IndexRegistration(registrationUri, rdfClass, locationType, locationUri, isListed) {\n\t  /**\n\t   * Is this a listed or unlisted registration\n\t   * @property isListed\n\t   * @type Boolean\n\t   */\n\t  this.isListed = isListed;\n\t  /**\n\t   * Location type, one of 'instance' or 'container'\n\t   * @property locationType\n\t   * @type String\n\t   */\n\t  this.locationType = locationType;\n\t  /**\n\t   * URI of the solid instance or container that holds resources of this type\n\t   * @property locationUri\n\t   * @type String\n\t   */\n\t  this.locationUri = locationUri;\n\t  /**\n\t   * RDF Class for this registration\n\t   * @property rdfClass\n\t   * @type rdf.NamedNode\n\t   */\n\t  this.rdfClass = rdfClass;\n\t  /**\n\t   * Absolute URI (with fragment identifier) of the registration\n\t   * @property registrationUri\n\t   * @type String\n\t   */\n\t  this.registrationUri = registrationUri;\n\t}\n\t\n\t/**\n\t * Convenience method, returns true if this registration is of type\n\t * `solid:instanceContainer`\n\t * @method isContainer\n\t * @return {Boolean}\n\t */\n\tIndexRegistration.prototype.isContainer = function isInstance() {\n\t  return this.locationType === 'container';\n\t};\n\t\n\t/**\n\t * Convenience method, returns true if this registration is of type\n\t * `solid:instance`\n\t * @method isInstance\n\t * @return {Boolean}\n\t */\n\tIndexRegistration.prototype.isInstance = function isInstance() {\n\t  return this.locationType === 'instance';\n\t};\n\n/***/ },\n/* 164 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t/**\n\t * @module permissions\n\t */\n\t\n\tvar PermissionSet = __webpack_require__(165);\n\tvar Authorization = __webpack_require__(166);\n\tvar aclModes = __webpack_require__(167);\n\t\n\t/**\n\t * Clears (deletes) an ACL resource for a given resource url.\n\t * Usage:\n\t *\n\t *   ```\n\t *   solid.clearPermissions('https://alice.example.com/docs/file1')\n\t *     .then(function (result) {\n\t *       // Now the ACL resource at file1.acl is deleted\n\t *     })\n\t *   ```\n\t * @method clearPermissions\n\t * @param resourceUrl {String} URL of a resource (not its ACL)\n\t * @return {Promise<PermissionSet>}\n\t */\n\tfunction clearPermissions(resourceUrl, webClient) {\n\t  var aclResourceUrl;\n\t  return webClient.head(resourceUrl).then(function (response) {\n\t    aclResourceUrl = response.aclAbsoluteUrl();\n\t    if (!aclResourceUrl) {\n\t      throw new Error('ACL URL not found for resource.');\n\t    }\n\t    return webClient.del(aclResourceUrl);\n\t  });\n\t}\n\t\n\t/**\n\t * Fetches and returns a PermissionSet initialized from an ACL resource.\n\t * Usage:\n\t *\n\t *   ```\n\t *   solid.getPermissions('https://alice.example.com/docs/file1')\n\t *     .then(function (permissionSet) {\n\t *       // loads the PermissionSet instance, parsed from file1.acl for example\n\t *       // now you can edit it and save it\n\t *       return permissionSet\n\t *         .addPermission(aliceWebId, [solid.acl.READ, solid.acl.WRITE])\n\t *         .addPermission(aliceWebId, solid.acl.CONTROL)\n\t *         .addPermission(solid.acl.EVERYONE, solid.acl.READ)\n\t *         .save()\n\t *     })\n\t *   ```\n\t * @method getPermissions\n\t * @param resourceUrl {String} URL of a resource (not its ACL)\n\t * @return {Promise<PermissionSet>}\n\t */\n\tfunction getPermissions(resourceUrl, webClient, rdf) {\n\t  var aclResourceUrl;\n\t  var permissions;\n\t  return webClient.head(resourceUrl).then(function (response) {\n\t    aclResourceUrl = response.aclAbsoluteUrl();\n\t    if (!aclResourceUrl) {\n\t      throw new Error('ACL URL not found for resource.');\n\t    }\n\t    permissions = new PermissionSet(resourceUrl, aclResourceUrl, response.isContainer(), { rdf: rdf, webClient: webClient });\n\t    return webClient.get(aclResourceUrl).then(function (response) {\n\t      return response.parsedGraph();\n\t    });\n\t  }).then(function (aclGraph) {\n\t    permissions.initFromGraph(aclGraph);\n\t    return permissions;\n\t  });\n\t}\n\t\n\tmodule.exports.clearPermissions = clearPermissions;\n\tmodule.exports.getPermissions = getPermissions;\n\tmodule.exports.PermissionSet = PermissionSet;\n\tmodule.exports.Authorization = Authorization;\n\t\n\t// Export all the acl-related constants and modes at the top (index) level\n\tObject.assign(module.exports, aclModes.acl);\n\n/***/ },\n/* 165 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t/**\n\t * @module permission-set\n\t * Models the set of Authorizations in a given .acl resource.\n\t * @see https://github.com/solid/web-access-control-spec for details.\n\t * The working assumptions here are:\n\t *   - Model the various permissions in an ACL resource as a set of unique\n\t *     authorizations, with one agent (or one group), and only\n\t *     one resource (acl:accessTo or acl:default) per authorization.\n\t *   - If the source RDF of the ACL resource has multiple agents or multiple\n\t *     resources in one authorization, separate them into multiple separate\n\t *     Authorization objects (with one agent/group and one resourceUrl each)\n\t *   - A single Authorization object can grant access to multiple modes (read,\n\t *     write, control, etc)\n\t *   - By default, all the authorizations in a container's ACL will be marked\n\t *     as 'to be inherited', that is will have `acl:default` set.\n\t */\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Authorization = __webpack_require__(166);\n\t\n\tvar _require = __webpack_require__(167);\n\t\n\tvar acl = _require.acl;\n\t\n\tvar ns = __webpack_require__(158);\n\t\n\tvar DEFAULT_ACL_SUFFIX = '.acl';\n\tvar DEFAULT_CONTENT_TYPE = 'text/turtle';\n\t/**\n\t * Resource types, used by PermissionSet objects\n\t */\n\tvar RESOURCE = 'resource';\n\tvar CONTAINER = 'container';\n\t\n\t/**\n\t * Agent type index names (used by findAuthByAgent() etc)\n\t */\n\tvar AGENT_INDEX = 'agents';\n\tvar GROUP_INDEX = 'groups';\n\t\n\t/**\n\t * @class PermissionSet\n\t * @param resourceUrl {String} URL of the resource to which this PS applies\n\t * @param aclUrl {String} URL of the ACL corresponding to the resource\n\t * @param isContainer {Boolean} Is the resource a container? (Affects usage of\n\t *   inherit semantics / acl:default)\n\t * @param [options={}] {Object} Options hashmap\n\t * @param [options.graph] {Graph} Parsed RDF graph of the ACL resource\n\t * @param [options.rdf] {RDF} RDF Library\n\t * @param [options.strictOrigin] {Boolean} Enforce strict origin?\n\t * @param [options.host] {String} Actual request uri\n\t * @param [options.origin] {String} Origin URI to enforce, relevant\n\t *   if strictOrigin is set to true\n\t * @param [options.webClient] {SolidWebClient} Used for save() and clear()\n\t * @param [options.isAcl] {Function}\n\t * @param [options.aclUrlFor] {Function}\n\t * @constructor\n\t */\n\t\n\tvar PermissionSet = function () {\n\t  function PermissionSet(resourceUrl, aclUrl, isContainer) {\n\t    var options = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n\t\n\t    _classCallCheck(this, PermissionSet);\n\t\n\t    /**\n\t     * Hashmap of all Authorizations in this permission set, keyed by a hashed\n\t     * combination of an agent's/group's webId and the resourceUrl.\n\t     * @property authorizations\n\t     * @type {Object}\n\t     */\n\t    this.authorizations = {};\n\t    /**\n\t     * The URL of the corresponding ACL resource, at which these permissions will\n\t     * be saved.\n\t     * @property aclUrl\n\t     * @type {String}\n\t     */\n\t    this.aclUrl = aclUrl;\n\t    /**\n\t     * Optional request host (used by checkOrigin())\n\t     * @property host\n\t     * @type {String}\n\t     */\n\t    this.host = options.host;\n\t    /**\n\t     * Initialize the agents / groups / resources indexes.\n\t     * @property index\n\t     * @type {Object}\n\t     */\n\t    this.index = {\n\t      'agents': {},\n\t      'groups': {} // Also includes Public permissions\n\t    };\n\t    /**\n\t     * RDF Library (optionally injected)\n\t     * @property rdf\n\t     * @type {RDF}\n\t     */\n\t    this.rdf = options.rdf;\n\t    /**\n\t     * Whether this permission set is for a 'container' or a 'resource'.\n\t     * Determines whether or not the inherit/'acl:default' attribute is set on\n\t     * all its Authorizations.\n\t     * @property resourceType\n\t     * @type {String}\n\t     */\n\t    this.resourceType = isContainer ? CONTAINER : RESOURCE;\n\t    /**\n\t     * The URL of the resource for which these permissions apply.\n\t     * @property resourceUrl\n\t     * @type {String}\n\t     */\n\t    this.resourceUrl = resourceUrl;\n\t    /**\n\t     * Should this permission set enforce \"strict origin\" policy?\n\t     * (If true, uses `options.origin` parameter)\n\t     * @property strictOrigin\n\t     * @type {Boolean}\n\t     */\n\t    this.strictOrigin = options.strictOrigin;\n\t    /**\n\t     * Contents of the request's `Origin:` header.\n\t     * (used only if `strictOrigin` parameter is set to true)\n\t     * @property origin\n\t     * @type {String}\n\t     */\n\t    this.origin = options.origin;\n\t    /**\n\t     * Solid REST client (optionally injected), used by save() and clear().\n\t     * @type {SolidWebClient}\n\t     */\n\t    this.webClient = options.webClient;\n\t\n\t    // Init the functions for deriving an ACL url for a given resource\n\t    this.aclUrlFor = options.aclUrlFor ? options.aclUrlFor : defaultAclUrlFor;\n\t    this.aclUrlFor.bind(this);\n\t    this.isAcl = options.isAcl ? options.isAcl : defaultIsAcl;\n\t    this.isAcl.bind(this);\n\t\n\t    // Optionally initialize from a given parsed graph\n\t    if (options.graph) {\n\t      this.initFromGraph(options.graph);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Adds a given Authorization instance to the permission set.\n\t   * Low-level function, clients should use `addPermission()` instead, in most\n\t   * cases.\n\t   * @method addAuthorization\n\t   * @private\n\t   * @param auth {Authorization}\n\t   * @return {PermissionSet} Returns self (chainable)\n\t   */\n\t\n\t\n\t  _createClass(PermissionSet, [{\n\t    key: 'addAuthorization',\n\t    value: function addAuthorization(auth) {\n\t      var hashFragment = auth.hashFragment();\n\t      if (hashFragment in this.authorizations) {\n\t        // An authorization for this agent and resource combination already exists\n\t        // Merge the incoming access modes with its existing ones\n\t        this.authorizations[hashFragment].mergeWith(auth);\n\t      } else {\n\t        this.authorizations[hashFragment] = auth;\n\t      }\n\t      if (!auth.virtual && auth.allowsControl()) {\n\t        // If acl:Control is involved, ensure implicit rules for the .acl resource\n\t        this.addControlPermissionsFor(auth);\n\t      }\n\t      // Create the appropriate indexes\n\t      this.addToAgentIndex(auth.webId(), auth.accessType, auth.resourceUrl, auth);\n\t      if (auth.isPublic()) {\n\t        this.addToPublicIndex(auth.resourceUrl, auth.accessType, auth);\n\t      }\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Creates an Authorization with the given parameters, and passes it on to\n\t     * `addAuthorization()` to be added to this PermissionSet.\n\t     * Essentially a convenience factory method.\n\t     * @method addAuthorizationFor\n\t     * @private\n\t     * @param resourceUrl {String}\n\t     * @param inherit {Boolean}\n\t     * @param agent {String|Quad} Agent URL (or `acl:agent` RDF triple).\n\t     * @param accessModes {String} 'READ'/'WRITE' etc.\n\t     * @param [origins=[]] {Array<String>} List of origins that are allowed access\n\t     * @param [mailTos=[]] {Array<String>}\n\t     * @return {Authorization}\n\t     */\n\t\n\t  }, {\n\t    key: 'addAuthorizationFor',\n\t    value: function addAuthorizationFor(resourceUrl, inherit, agent, accessModes) {\n\t      var origins = arguments.length <= 4 || arguments[4] === undefined ? [] : arguments[4];\n\t      var mailTos = arguments.length <= 5 || arguments[5] === undefined ? [] : arguments[5];\n\t\n\t      var auth = new Authorization(resourceUrl, inherit);\n\t      auth.setAgent(agent);\n\t      auth.addMode(accessModes);\n\t      auth.addOrigin(origins);\n\t      mailTos.forEach(function (mailTo) {\n\t        auth.addMailTo(mailTo);\n\t      });\n\t      this.addAuthorization(auth);\n\t      return auth;\n\t    }\n\t\n\t    /**\n\t     * Adds a virtual (will not be serialized to RDF) authorization giving\n\t     * Read/Write/Control access to the corresponding ACL resource if acl:Control\n\t     * is encountered in the actual source ACL.\n\t     * @method addControlPermissionsFor\n\t     * @private\n\t     * @param auth {Authorization} Authorization containing an acl:Control access\n\t     *   mode.\n\t     */\n\t\n\t  }, {\n\t    key: 'addControlPermissionsFor',\n\t    value: function addControlPermissionsFor(auth) {\n\t      var impliedAuth = auth.clone();\n\t      impliedAuth.resourceUrl = this.aclUrlFor(auth.resourceUrl);\n\t      impliedAuth.virtual = true;\n\t      impliedAuth.addMode(acl.ALL_MODES);\n\t      this.addAuthorization(impliedAuth);\n\t    }\n\t\n\t    /**\n\t     * Adds a group permission for the given access mode and group web id.\n\t     * @method addGroupPermission\n\t     * @param webId {String}\n\t     * @param accessMode {String|Array<String>}\n\t     * @return {PermissionSet} Returns self (chainable)\n\t     */\n\t\n\t  }, {\n\t    key: 'addGroupPermission',\n\t    value: function addGroupPermission(webId, accessMode) {\n\t      var auth = new Authorization(this.resourceUrl, this.isAuthInherited());\n\t      auth.setGroup(webId);\n\t      auth.addMode(accessMode);\n\t      this.addAuthorization(auth);\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Adds a permission for the given access mode and agent id.\n\t     * @method addPermission\n\t     * @param webId {String} URL of an agent for which this permission applies\n\t     * @param accessMode {String|Array<String>} One or more access modes\n\t     * @param [origin] {String|Array<String>} One or more allowed origins (optional)\n\t     * @return {PermissionSet} Returns self (chainable)\n\t     */\n\t\n\t  }, {\n\t    key: 'addPermission',\n\t    value: function addPermission(webId, accessMode, origin) {\n\t      if (!webId) {\n\t        throw new Error('addPermission() requires a valid webId');\n\t      }\n\t      if (!accessMode) {\n\t        throw new Error('addPermission() requires a valid accessMode');\n\t      }\n\t      var auth = new Authorization(this.resourceUrl, this.isAuthInherited());\n\t      auth.setAgent(webId);\n\t      auth.addMode(accessMode);\n\t      if (origin) {\n\t        auth.addOrigin(origin);\n\t      }\n\t      this.addAuthorization(auth);\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Adds a given authorization to the \"lookup by agent id\" index.\n\t     * Enables lookups via `findAuthByAgent()`.\n\t     * @method addToAgentIndex\n\t     * @private\n\t     * @param webId {String} Agent's Web ID\n\t     * @param accessType {String} Either `accessTo` or `default`\n\t     * @param resourceUrl {String}\n\t     * @param authorization {Authorization}\n\t     */\n\t\n\t  }, {\n\t    key: 'addToAgentIndex',\n\t    value: function addToAgentIndex(webId, accessType, resourceUrl, authorization) {\n\t      var agents = this.index.agents;\n\t      if (!agents[webId]) {\n\t        agents[webId] = {};\n\t      }\n\t      if (!agents[webId][accessType]) {\n\t        agents[webId][accessType] = {};\n\t      }\n\t      if (!agents[webId][accessType][resourceUrl]) {\n\t        agents[webId][accessType][resourceUrl] = authorization;\n\t      } else {\n\t        agents[webId][accessType][resourceUrl].mergeWith(authorization);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Adds a given authorization to the \"lookup by group id\" index.\n\t     * Enables lookups via `findAuthByAgent()`.\n\t     * @method addToGroupIndex\n\t     * @private\n\t     * @param webId {String} Group's Web ID\n\t     * @param accessType {String} Either `accessTo` or `default`\n\t     * @param resourceUrl {String}\n\t     * @param authorization {Authorization}\n\t     */\n\t\n\t  }, {\n\t    key: 'addToGroupIndex',\n\t    value: function addToGroupIndex(webId, accessType, resourceUrl, authorization) {\n\t      var groups = this.index.groups;\n\t      if (!groups[webId]) {\n\t        groups[webId] = {};\n\t      }\n\t      if (!groups[webId][accessType]) {\n\t        groups[webId][accessType] = {};\n\t      }\n\t      if (!groups[webId][accessType][resourceUrl]) {\n\t        groups[webId][accessType][resourceUrl] = authorization;\n\t      } else {\n\t        groups[webId][accessType][resourceUrl].mergeWith(authorization);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Adds a given authorization to the \"lookup by group id\" index.\n\t     * Alias for `addToGroupIndex()`.\n\t     * Enables lookups via `findAuthByAgent()`.\n\t     * @method addToPublicIndex\n\t     * @private\n\t     * @param resourceUrl {String}\n\t     * @param accessType {String} Either `accessTo` or `default`\n\t     * @param authorization {Authorization}\n\t     */\n\t\n\t  }, {\n\t    key: 'addToPublicIndex',\n\t    value: function addToPublicIndex(resourceUrl, accessType, auth) {\n\t      this.addToGroupIndex(acl.EVERYONE, accessType, resourceUrl, auth);\n\t    }\n\t\n\t    /**\n\t     * Returns a list of all the Authorizations that belong to this permission set.\n\t     * Mostly for internal use.\n\t     * @method allAuthorizations\n\t     * @return {Array<Authorization>}\n\t     */\n\t\n\t  }, {\n\t    key: 'allAuthorizations',\n\t    value: function allAuthorizations() {\n\t      var _this = this;\n\t\n\t      var authList = [];\n\t      var auth;\n\t      Object.keys(this.authorizations).forEach(function (authKey) {\n\t        auth = _this.authorizations[authKey];\n\t        authList.push(auth);\n\t      });\n\t      return authList;\n\t    }\n\t\n\t    /**\n\t     * Tests whether this PermissionSet gives Public (acl:agentClass foaf:Agent)\n\t     * access to a given uri.\n\t     * @method allowsPublic\n\t     * @param mode {String|NamedNode} Access mode (read/write/control etc)\n\t     * @param resourceUrl {String}\n\t     * @return {Boolean}\n\t     */\n\t\n\t  }, {\n\t    key: 'allowsPublic',\n\t    value: function allowsPublic(mode, resourceUrl) {\n\t      resourceUrl = resourceUrl || this.resourceUrl;\n\t      var publicAuth = this.findPublicAuth(resourceUrl);\n\t      if (!publicAuth) {\n\t        return false;\n\t      }\n\t      return this.checkOrigin(publicAuth) && publicAuth.allowsMode(mode);\n\t    }\n\t\n\t    /**\n\t     * Returns an RDF graph representation of this permission set and all its\n\t     * Authorizations. Used by `save()`.\n\t     * @method buildGraph\n\t     * @private\n\t     * @param rdf {RDF} RDF Library\n\t     * @return {Graph}\n\t     */\n\t\n\t  }, {\n\t    key: 'buildGraph',\n\t    value: function buildGraph(rdf) {\n\t      var graph = rdf.graph();\n\t      this.allAuthorizations().forEach(function (auth) {\n\t        graph.add(auth.rdfStatements(rdf));\n\t      });\n\t      return graph;\n\t    }\n\t\n\t    /**\n\t     * Tests whether the given agent has the specified access to a resource.\n\t     * This is one of the main use cases for this solid-permissions library.\n\t     * Optionally performs strict origin checking (if `strictOrigin` is enabled\n\t     * in the constructor's options).\n\t     * Returns a promise; async since checking permissions may involve requesting\n\t     * multiple ACL resources (group listings, etc).\n\t     * @method checkAccess\n\t     * @param resourceUrl {String}\n\t     * @param agentId {String}\n\t     * @param accessMode {String} Access mode (read/write/control)\n\t     * @return {Promise<Boolean>}\n\t     */\n\t\n\t  }, {\n\t    key: 'checkAccess',\n\t    value: function checkAccess(resourceUrl, agentId, accessMode) {\n\t      var result = void 0;\n\t      if (this.allowsPublic(accessMode, resourceUrl)) {\n\t        result = true;\n\t      } else {\n\t        var auth = this.findAuthByAgent(agentId, resourceUrl);\n\t        result = auth && this.checkOrigin(auth) && auth.allowsMode(accessMode);\n\t      }\n\t      return Promise.resolve(result);\n\t    }\n\t\n\t    /**\n\t     * Tests whether a given authorization allows operations from the current\n\t     * request's `Origin` header. (The current request's origin and host are\n\t     * passed in as options to the PermissionSet's constructor.)\n\t     * @param authorization {Authorization}\n\t     * @return {Boolean}\n\t     */\n\t\n\t  }, {\n\t    key: 'checkOrigin',\n\t    value: function checkOrigin(authorization) {\n\t      if (!this.strictOrigin || // Enforcement turned off in server config\n\t      !this.origin || // No origin - not a script, do not enforce origin\n\t      this.origin === this.host) {\n\t        // same origin is trusted\n\t        return true;\n\t      }\n\t      // If not same origin, check that the origin is in the explicit ACL list\n\t      return authorization.allowsOrigin(this.origin);\n\t    }\n\t\n\t    /**\n\t     * Sends a delete request to a particular ACL resource. Intended to be used for\n\t     * an existing loaded PermissionSet, but you can also specify a particular\n\t     * URL to delete.\n\t     * Usage:\n\t     *\n\t     *   ```\n\t     *   // If you have an existing PermissionSet as a result of `getPermissions()`:\n\t     *   solid.getPermissions('https://www.example.com/file1')\n\t     *     .then(function (permissionSet) {\n\t     *       // do stuff\n\t     *       return permissionSet.clear()  // deletes that permissionSet\n\t     *     })\n\t     *   // Otherwise, use the helper function\n\t     *   //   solid.clearPermissions(resourceUrl) instead\n\t     *   solid.clearPermissions('https://www.example.com/file1')\n\t     *     .then(function (response) {\n\t     *       // file1.acl is now deleted\n\t     *     })\n\t     *   ```\n\t     * @method clear\n\t     * @param [webClient] {SolidWebClient}\n\t     * @throws {Error} Rejects with an error if it doesn't know where to delete, or\n\t     *   with any XHR errors that crop up.\n\t     * @return {Promise<Request>}\n\t     */\n\t\n\t  }, {\n\t    key: 'clear',\n\t    value: function clear(webClient) {\n\t      webClient = webClient || this.webClient;\n\t      if (!webClient) {\n\t        return Promise.reject(new Error('Cannot clear - no web client'));\n\t      }\n\t      var aclUrl = this.aclUrl;\n\t      if (!aclUrl) {\n\t        return Promise.reject(new Error('Cannot clear - unknown target url'));\n\t      }\n\t      return webClient.del(aclUrl);\n\t    }\n\t\n\t    /**\n\t     * Returns the number of Authorizations in this permission set.\n\t     * @method count\n\t     * @return {Number}\n\t     */\n\t\n\t  }, {\n\t    key: 'equals',\n\t\n\t\n\t    /**\n\t     * Returns whether or not this permission set is equal to another one.\n\t     * A PermissionSet is considered equal to another one iff:\n\t     * - It has the same number of authorizations, and each of those authorizations\n\t     *   has a corresponding one in the other set\n\t     * - They are both intended for the same resource (have the same resourceUrl)\n\t     * - They are both intended to be saved at the same aclUrl\n\t     * @method equals\n\t     * @param ps {PermissionSet} The other permission set to compare to\n\t     * @return {Boolean}\n\t     */\n\t    value: function equals(ps) {\n\t      var _this2 = this;\n\t\n\t      var sameUrl = this.resourceUrl === ps.resourceUrl;\n\t      var sameAclUrl = this.aclUrl === ps.aclUrl;\n\t      var sameResourceType = this.resourceType === ps.resourceType;\n\t      var myAuthKeys = Object.keys(this.authorizations);\n\t      var otherAuthKeys = Object.keys(ps.authorizations);\n\t      if (myAuthKeys.length !== otherAuthKeys.length) {\n\t        return false;\n\t      }\n\t      var sameAuths = true;\n\t      var myAuth, otherAuth;\n\t      myAuthKeys.forEach(function (authKey) {\n\t        myAuth = _this2.authorizations[authKey];\n\t        otherAuth = ps.authorizations[authKey];\n\t        if (!otherAuth) {\n\t          sameAuths = false;\n\t        }\n\t        if (!myAuth.equals(otherAuth)) {\n\t          sameAuths = false;\n\t        }\n\t      });\n\t      return sameUrl && sameAclUrl && sameResourceType && sameAuths;\n\t    }\n\t\n\t    /**\n\t     * Finds and returns an authorization (stored in the 'find by agent' index)\n\t     * for a given agent (web id) and resource.\n\t     * @method findAuthByAgent\n\t     * @private\n\t     * @param webId {String}\n\t     * @param resourceUrl {String}\n\t     * @param indexType {String} Either 'default' or 'accessTo'\n\t     * @return {Authorization}\n\t     */\n\t\n\t  }, {\n\t    key: 'findAuthByAgent',\n\t    value: function findAuthByAgent(webId, resourceUrl) {\n\t      var indexType = arguments.length <= 2 || arguments[2] === undefined ? AGENT_INDEX : arguments[2];\n\t\n\t      var index = this.index[indexType];\n\t      if (!index[webId]) {\n\t        // There are no permissions at all for this agent\n\t        return false;\n\t      }\n\t      // first check the accessTo type\n\t      var accessToAuths = index[webId][acl.ACCESS_TO];\n\t      var accessToMatch = void 0;\n\t      if (accessToAuths) {\n\t        accessToMatch = accessToAuths[resourceUrl];\n\t      }\n\t      if (accessToMatch) {\n\t        return accessToMatch;\n\t      }\n\t      // then check the default/inherited type permissions\n\t      var defaultAuths = index[webId][acl.DEFAULT];\n\t      var defaultMatch = void 0;\n\t      if (defaultAuths) {\n\t        // First try an exact match (resource matches the acl:default object)\n\t        defaultMatch = defaultAuths[resourceUrl];\n\t        if (!defaultMatch) {\n\t          // Next check to see if resource is in any of the relevant containers\n\t          var containers = Object.keys(defaultAuths).sort().reverse();\n\t          // Loop through the container URLs, sorted in reverse alpha\n\t          var _iteratorNormalCompletion = true;\n\t          var _didIteratorError = false;\n\t          var _iteratorError = undefined;\n\t\n\t          try {\n\t            for (var _iterator = containers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t              var containerUrl = _step.value;\n\t\n\t              if (resourceUrl.startsWith(containerUrl)) {\n\t                defaultMatch = defaultAuths[containerUrl];\n\t                break;\n\t              }\n\t            }\n\t          } catch (err) {\n\t            _didIteratorError = true;\n\t            _iteratorError = err;\n\t          } finally {\n\t            try {\n\t              if (!_iteratorNormalCompletion && _iterator.return) {\n\t                _iterator.return();\n\t              }\n\t            } finally {\n\t              if (_didIteratorError) {\n\t                throw _iteratorError;\n\t              }\n\t            }\n\t          }\n\t        }\n\t      }\n\t      return defaultMatch;\n\t    }\n\t\n\t    /**\n\t     * Finds and returns an authorization (stored in the 'find by group' index)\n\t     * for the \"Everyone\" group (acl:agentClass foaf:Agent), for a given resource.\n\t     * @method findAuthByAgent\n\t     * @private\n\t     * @param resourceUrl {String}\n\t     * @return {Authorization}\n\t     */\n\t\n\t  }, {\n\t    key: 'findPublicAuth',\n\t    value: function findPublicAuth(resourceUrl) {\n\t      return this.findAuthByAgent(acl.EVERYONE, resourceUrl, GROUP_INDEX);\n\t    }\n\t\n\t    /**\n\t     * Iterates over all the authorizations in this permission set.\n\t     * Convenience method.\n\t     * Usage:\n\t     *\n\t     *   ```\n\t     *   solid.getPermissions(resourceUrl)\n\t     *     .then(function (permissionSet) {\n\t     *       permissionSet.forEach(function (auth) {\n\t     *         // do stuff with auth\n\t     *       })\n\t     *     })\n\t     *   ```\n\t     * @method forEach\n\t     * @param callback {Function} Function to apply to each authorization\n\t     */\n\t\n\t  }, {\n\t    key: 'forEach',\n\t    value: function forEach(callback) {\n\t      var _this3 = this;\n\t\n\t      this.allAuthorizations().forEach(function (auth) {\n\t        callback.call(_this3, auth);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates and loads all the authorizations from a given RDF graph.\n\t     * Used by `getPermissions()` and by the constructor (optionally).\n\t     * Usage:\n\t     *\n\t     *   ```\n\t     *   var acls = new PermissionSet(resourceUri, aclUri, isContainer, {rdf: rdf})\n\t     *   acls.initFromGraph(graph)\n\t     *   ```\n\t     * @method initFromGraph\n\t     * @param graph {Dataset} RDF Graph (parsed from the source ACL)\n\t     */\n\t\n\t  }, {\n\t    key: 'initFromGraph',\n\t    value: function initFromGraph(graph) {\n\t      var _this4 = this;\n\t\n\t      var vocab = ns(this.rdf);\n\t      var authSections = graph.match(null, null, vocab.acl('Authorization'));\n\t      if (authSections.length) {\n\t        authSections = authSections.map(function (match) {\n\t          return match.subject;\n\t        });\n\t      } else {\n\t        (function () {\n\t          // Attempt to deal with an ACL with no acl:Authorization types present.\n\t          var subjects = {};\n\t          authSections = graph.match(null, vocab.acl('mode'));\n\t          authSections.forEach(function (match) {\n\t            subjects[match.subject.value] = match.subject;\n\t          });\n\t          authSections = Object.keys(subjects).map(function (section) {\n\t            return subjects[section];\n\t          });\n\t        })();\n\t      }\n\t      // Iterate through each grouping of authorizations in the .acl graph\n\t      authSections.forEach(function (fragment) {\n\t        // Extract the access modes\n\t        var accessModes = graph.match(fragment, vocab.acl('mode'));\n\t        // Extract allowed origins\n\t        var origins = graph.match(fragment, vocab.acl('origin'));\n\t\n\t        // Extract all the authorized agents\n\t        var agentMatches = graph.match(fragment, vocab.acl('agent'));\n\t        // Mailtos only apply to agents (not groups)\n\t        var mailTos = agentMatches.filter(isMailTo);\n\t        // Now filter out mailtos\n\t        agentMatches = agentMatches.filter(function (ea) {\n\t          return !isMailTo(ea);\n\t        });\n\t        // Extract all 'Public' matches (agentClass foaf:Agent)\n\t        var publicMatches = graph.match(fragment, vocab.acl('agentClass'), vocab.foaf('Agent'));\n\t        // Extract all acl:agentGroup matches\n\t        var groupMatches = graph.match(fragment, vocab.acl('agentGroup'));\n\t        // Create an Authorization object for each group (accessTo and default)\n\t        var allAgents = agentMatches.concat(publicMatches).concat(groupMatches);\n\t        // Create an Authorization object for each agent or group\n\t        //   (both individual (acl:accessTo) and inherited (acl:default))\n\t        allAgents.forEach(function (agentMatch) {\n\t          // Extract the acl:accessTo statements.\n\t          var accessToMatches = graph.match(fragment, vocab.acl('accessTo'));\n\t          accessToMatches.forEach(function (resourceMatch) {\n\t            var resourceUrl = resourceMatch.object.value;\n\t            _this4.addAuthorizationFor(resourceUrl, acl.NOT_INHERIT, agentMatch, accessModes, origins, mailTos);\n\t          });\n\t          // Extract inherited / acl:default statements\n\t          var inheritedMatches = graph.match(fragment, vocab.acl('default')).concat(graph.match(fragment, vocab.acl('defaultForNew')));\n\t          inheritedMatches.forEach(function (containerMatch) {\n\t            var containerUrl = containerMatch.object.value;\n\t            _this4.addAuthorizationFor(containerUrl, acl.INHERIT, agentMatch, accessModes, origins, mailTos);\n\t          });\n\t        });\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Returns whether or not authorizations added to this permission set be\n\t     * inherited, by default? (That is, should they have acl:default set on them).\n\t     * @method isAuthInherited\n\t     * @return {Boolean}\n\t     */\n\t\n\t  }, {\n\t    key: 'isAuthInherited',\n\t    value: function isAuthInherited() {\n\t      return this.resourceType === CONTAINER;\n\t    }\n\t\n\t    /**\n\t     * Returns whether or not this permission set has any Authorizations added to it\n\t     * @method isEmpty\n\t     * @return {Boolean}\n\t     */\n\t\n\t  }, {\n\t    key: 'isEmpty',\n\t    value: function isEmpty() {\n\t      return this.count === 0;\n\t    }\n\t\n\t    /**\n\t     * Returns the corresponding Authorization for a given agent/group webId (and\n\t     * for a given resourceUrl, although it assumes by default that it's the same\n\t     * resourceUrl as the PermissionSet).\n\t     * @method permissionFor\n\t     * @param webId {String} URL of the agent or group\n\t     * @param [resourceUrl] {String}\n\t     * @return {Authorization} Returns the corresponding Authorization, or `null`\n\t     *   if no webId is given, or if no such authorization exists.\n\t     */\n\t\n\t  }, {\n\t    key: 'permissionFor',\n\t    value: function permissionFor(webId, resourceUrl) {\n\t      if (!webId) {\n\t        return null;\n\t      }\n\t      resourceUrl = resourceUrl || this.resourceUrl;\n\t      var hashFragment = Authorization.hashFragmentFor(webId, resourceUrl);\n\t      return this.authorizations[hashFragment];\n\t    }\n\t\n\t    /**\n\t     * Deletes a given Authorization instance from the permission set.\n\t     * Low-level function, clients should use `removePermission()` instead, in most\n\t     * cases.\n\t     * @method removeAuthorization\n\t     * @param auth {Authorization}\n\t     * @return {PermissionSet} Returns self (chainable)\n\t     */\n\t\n\t  }, {\n\t    key: 'removeAuthorization',\n\t    value: function removeAuthorization(auth) {\n\t      var hashFragment = auth.hashFragment();\n\t      delete this.authorizations[hashFragment];\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Removes one or more access modes from an authorization in this permission set\n\t     * (defined by a unique combination of agent/group id (webId) and a resourceUrl).\n\t     * If no more access modes remain for that authorization, it's deleted from the\n\t     * permission set.\n\t     * @method removePermission\n\t     * @param webId\n\t     * @param accessMode {String|Array<String>}\n\t     * @return {PermissionSet} Returns self (via a chainable function)\n\t     */\n\t\n\t  }, {\n\t    key: 'removePermission',\n\t    value: function removePermission(webId, accessMode) {\n\t      var auth = this.permissionFor(webId, this.resourceUrl);\n\t      if (!auth) {\n\t        // No authorization for this webId + resourceUrl exists. Bail.\n\t        return this;\n\t      }\n\t      // Authorization exists, remove the accessMode from it\n\t      auth.removeMode(accessMode);\n\t      if (auth.isEmpty()) {\n\t        // If no more access modes remain, after removing, delete it from this\n\t        // permission set\n\t        this.removeAuthorization(auth);\n\t      }\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * @method save\n\t     * @param [options={}] {Object} Options hashmap\n\t     * @param [options.aclUrl] {String} Optional URL to save the .ACL resource to.\n\t     *   Defaults to its pre-set `aclUrl`, if not explicitly passed in.\n\t     * @param [options.contentType] {string} Optional content type to serialize as\n\t     * @throws {Error} Rejects with an error if it doesn't know where to save, or\n\t     *   with any XHR errors that crop up.\n\t     * @return {Promise<SolidResponse>}\n\t     */\n\t\n\t  }, {\n\t    key: 'save',\n\t    value: function save() {\n\t      var _this5 = this;\n\t\n\t      var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t      var aclUrl = options.aclUrl || this.aclUrl;\n\t      var contentType = options.contentType || DEFAULT_CONTENT_TYPE;\n\t      if (!aclUrl) {\n\t        return Promise.reject(new Error('Cannot save - unknown target url'));\n\t      }\n\t      if (!this.webClient) {\n\t        return Promise.reject(new Error('Cannot save - no web client'));\n\t      }\n\t      return this.serialize({ contentType: contentType }).then(function (graph) {\n\t        return _this5.webClient.put(aclUrl, graph, contentType);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Serializes this permission set (and all its Authorizations) to a string RDF\n\t     * representation (Turtle by default).\n\t     * Note: invalid authorizations (ones that don't have at least one agent/group,\n\t     * at least one resourceUrl and at least one access mode) do not get serialized,\n\t     * and are instead skipped.\n\t     * @method serialize\n\t     * @param [options={}] {Object} Options hashmap\n\t     * @param [options.contentType='text/turtle'] {string}\n\t     * @param [options.rdf] {RDF} RDF Library to serialize with\n\t     * @throws {Error} Rejects with an error if one is encountered during RDF\n\t     *   serialization.\n\t     * @return {Promise<String>} Graph serialized to contentType RDF syntax\n\t     */\n\t\n\t  }, {\n\t    key: 'serialize',\n\t    value: function serialize() {\n\t      var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t      var contentType = options.contentType || DEFAULT_CONTENT_TYPE;\n\t      var rdf = options.rdf || this.rdf;\n\t      if (!rdf) {\n\t        return Promise.reject(new Error('Cannot save - no rdf library'));\n\t      }\n\t      var graph = this.buildGraph(rdf);\n\t      var target = null;\n\t      var base = null;\n\t      return new Promise(function (resolve, reject) {\n\t        rdf.serialize(target, graph, base, contentType, function (err, result) {\n\t          if (err) {\n\t            return reject(err);\n\t          }\n\t          if (!result) {\n\t            return reject(new Error('Error serializing the graph to ' + contentType));\n\t          }\n\t          resolve(result);\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'count',\n\t    get: function get() {\n\t      return Object.keys(this.authorizations).length;\n\t    }\n\t  }]);\n\t\n\t  return PermissionSet;\n\t}();\n\t\n\t/**\n\t * Returns the corresponding ACL uri, for a given resource.\n\t * This is the default template for the `aclUrlFor()` method that's used by\n\t * PermissionSet instances, unless it's overridden in options.\n\t * @param resourceUri {String}\n\t * @return {String} ACL uri\n\t */\n\t\n\t\n\tfunction defaultAclUrlFor(resourceUri) {\n\t  if (defaultIsAcl(resourceUri)) {\n\t    return resourceUri; // .acl resources are their own ACLs\n\t  } else {\n\t    return resourceUri + DEFAULT_ACL_SUFFIX;\n\t  }\n\t}\n\t\n\t/**\n\t * Tests whether a given uri is for an ACL resource.\n\t * This is the default template for the `isAcl()` method that's used by\n\t * PermissionSet instances, unless it's overridden in options.\n\t * @method defaultIsAcl\n\t * @param uri {String}\n\t * @return {Boolean}\n\t */\n\tfunction defaultIsAcl(uri) {\n\t  return uri.endsWith(DEFAULT_ACL_SUFFIX);\n\t}\n\t\n\t/**\n\t * Returns whether or not a given agent webId is actually a `mailto:` link.\n\t * Standalone helper function.\n\t * @param agent {String|Statement} URL string (or RDF `acl:agent` triple)\n\t * @return {Boolean}\n\t */\n\tfunction isMailTo(agent) {\n\t  if (typeof agent === 'string') {\n\t    return agent.startsWith('mailto:');\n\t  } else {\n\t    return agent.object.value.startsWith('mailto:');\n\t  }\n\t}\n\t\n\tPermissionSet.RESOURCE = RESOURCE;\n\tPermissionSet.CONTAINER = CONTAINER;\n\tmodule.exports = PermissionSet;\n\n/***/ },\n/* 166 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t/**\n\t * Models a single Authorization, as part of a PermissionSet.\n\t * @see https://github.com/solid/web-access-control-spec for details.\n\t * @module authorization\n\t */\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar vocab = __webpack_require__(158);\n\t\n\tvar _require = __webpack_require__(167);\n\t\n\tvar acl = _require.acl;\n\t\n\t/**\n\t * Returns a set of convenience constants, for use with `addPermission()` etc.\n\t * Exported as `Authorization.acl`.\n\t */\n\t\n\t/**\n\t * Models an individual authorization object, for a single resource and for\n\t * a single webId (either agent or agentClass). See the comments at the top\n\t * of the PermissionSet module for design assumptions.\n\t * Low-level, not really meant to be instantiated directly. Use\n\t * `permissionSet.addPermission()` instead.\n\t * @class Authorization\n\t */\n\t\n\tvar Authorization = function () {\n\t  /**\n\t   * @param resourceUrl {String} URL of the resource (`acl:accessTo`) for which\n\t   *   this authorization is intended.\n\t   * @param [inherited] {Boolean} Should this authorization be inherited (contain\n\t   *   `acl:default`). Used for container ACLs. Defaults to null/false.\n\t   * @constructor\n\t   */\n\t  function Authorization(resourceUrl, inherited) {\n\t    _classCallCheck(this, Authorization);\n\t\n\t    /**\n\t     * Hashmap of all of the access modes (`acl:Write` etc) granted to an agent\n\t     * or group in this authorization. Modified via `addMode()` and `removeMode()`\n\t     * @property accessModes\n\t     * @type {Object}\n\t     */\n\t    this.accessModes = {};\n\t    /**\n\t     * Type of authorization, either for a specific resource ('accessTo'),\n\t     * or to be inherited by all downstream resources ('default')\n\t     * @property accessType\n\t     * @type {String} Either 'accessTo' or 'default'\n\t     */\n\t    this.accessType = inherited ? acl.DEFAULT : acl.ACCESS_TO;\n\t    /**\n\t     * URL of an agent's WebID (`acl:agent`). Inside an authorization, mutually\n\t     * exclusive with the `group` property. Set via `setAgent()`.\n\t     * @property agent\n\t     * @type {String}\n\t     */\n\t    this.agent = null;\n\t    /**\n\t     * URL of a group resource (`acl:agentClass`). Inside an authorization,\n\t     * mutually exclusive with the `agent` property. Set via `setGroup()`.\n\t     * @property group\n\t     * @type {String}\n\t     */\n\t    this.group = null;\n\t    /**\n\t     * Does this authorization apply to the contents of a container?\n\t     * (`acl:default`). Not used with non-container resources.\n\t     * @property inherited\n\t     * @type {Boolean}\n\t     */\n\t    this.inherited = inherited;\n\t    /**\n\t     * Stores the `mailto:` aliases for a given agent. Semi-unofficial\n\t     * functionality, used to store a user's email in the root storage .acl,\n\t     * to use for account recovery etc.\n\t     * @property mailTo\n\t     * @type {Array<String>}\n\t     */\n\t    this.mailTo = [];\n\t    /**\n\t     * Hashmap of which origins (http Origin: header) are allowed access to this\n\t     * resource.\n\t     * @property originsAllowed\n\t     * @type {Object}\n\t     */\n\t    this.originsAllowed = {};\n\t    /**\n\t     * URL of the resource for which this authorization applies. (`acl:accessTo`)\n\t     * @property resourceUrl\n\t     * @type {String}\n\t     */\n\t    this.resourceUrl = resourceUrl;\n\t    /**\n\t     * Should this authorization be serialized? (When writing back to an ACL\n\t     * resource, for example.) Used for implied (rather than explicit)\n\t     * authorization, such as ones that are derived from acl:Control statements.\n\t     * @property virtual\n\t     * @type {Boolean}\n\t     */\n\t    this.virtual = false;\n\t  }\n\t\n\t  /**\n\t   * Adds a given `mailto:` alias to this authorization.\n\t   * @method addMailTo\n\t   * @param agent {String|Statement} Agent URL (or RDF `acl:agent` statement).\n\t   */\n\t\n\t\n\t  _createClass(Authorization, [{\n\t    key: 'addMailTo',\n\t    value: function addMailTo(agent) {\n\t      if (typeof agent !== 'string') {\n\t        agent = agent.object.value;\n\t      }\n\t      if (agent.startsWith('mailto:')) {\n\t        agent = agent.split(':')[1];\n\t      }\n\t      this.mailTo.push(agent);\n\t      this.mailTo.sort();\n\t    }\n\t\n\t    /**\n\t     * Adds one or more access modes (`acl:mode` statements) to this authorization.\n\t     * @method addMode\n\t     * @param accessMode {String|Statement|Array<String>|Array<Statement>} One or\n\t     *   more access modes, each as either a uri, or an RDF statement.\n\t     * @return {Authorization} Returns self, chainable.\n\t     */\n\t\n\t  }, {\n\t    key: 'addMode',\n\t    value: function addMode(accessMode) {\n\t      var _this = this;\n\t\n\t      if (Array.isArray(accessMode)) {\n\t        accessMode.forEach(function (ea) {\n\t          _this.addModeSingle(ea);\n\t        });\n\t      } else {\n\t        this.addModeSingle(accessMode);\n\t      }\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Adds a single access mode. Internal function, used by `addMode()`.\n\t     * @method addModeSingle\n\t     * @private\n\t     * @param accessMode {String|Statement} Access mode as either a uri, or an RDF\n\t     *   statement.\n\t     */\n\t\n\t  }, {\n\t    key: 'addModeSingle',\n\t    value: function addModeSingle(accessMode) {\n\t      if (typeof accessMode !== 'string') {\n\t        accessMode = accessMode.object.value;\n\t      }\n\t      this.accessModes[accessMode] = true;\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Adds one or more allowed origins (`acl:origin` statements) to this\n\t     * authorization.\n\t     * @method addOrigin\n\t     * @param origin {String|Statement|Array<String>|Array<Statement>} One or\n\t     *   more origins, each as either a uri, or an RDF statement.\n\t     * @return {Authorization} Returns self, chainable.\n\t     */\n\t\n\t  }, {\n\t    key: 'addOrigin',\n\t    value: function addOrigin(origin) {\n\t      var _this2 = this;\n\t\n\t      if (Array.isArray(origin)) {\n\t        origin.forEach(function (ea) {\n\t          _this2.addOriginSingle(ea);\n\t        });\n\t      } else {\n\t        this.addOriginSingle(origin);\n\t      }\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Adds a single allowed origin. Internal function, used by `addOrigin()`.\n\t     * @method addOriginSingle\n\t     * @private\n\t     * @param origin {String|Statement} Allowed origin as either a uri, or an RDF\n\t     *   statement.\n\t     */\n\t\n\t  }, {\n\t    key: 'addOriginSingle',\n\t    value: function addOriginSingle(origin) {\n\t      if (typeof origin !== 'string') {\n\t        origin = origin.object.value;\n\t      }\n\t      this.originsAllowed[origin] = true;\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Returns a list of all access modes for this authorization.\n\t     * @method allModes\n\t     * @return {Array<String>}\n\t     */\n\t\n\t  }, {\n\t    key: 'allModes',\n\t    value: function allModes() {\n\t      return Object.keys(this.accessModes);\n\t    }\n\t\n\t    /**\n\t     * Returns a list of all allowed origins for this authorization.\n\t     * @method allOrigins\n\t     * @return {Array<String>}\n\t     */\n\t\n\t  }, {\n\t    key: 'allOrigins',\n\t    value: function allOrigins() {\n\t      return Object.keys(this.originsAllowed);\n\t    }\n\t\n\t    /**\n\t     * Tests whether this authorization grant the specified access mode\n\t     * @param accessMode {String|NamedNode} Either a named node for the access\n\t     *   mode or a string key ('write', 'read' etc) that maps to that mode.\n\t     * @return {Boolean}\n\t     */\n\t\n\t  }, {\n\t    key: 'allowsMode',\n\t    value: function allowsMode(accessMode) {\n\t      // Normalize the access mode\n\t      accessMode = acl[accessMode.toUpperCase()] || accessMode;\n\t      if (accessMode === acl.APPEND) {\n\t        return this.allowsAppend(); // Handle the Append special case\n\t      }\n\t      return this.accessModes[accessMode];\n\t    }\n\t    /**\n\t     * Does this authorization grant access to requests coming from given origin?\n\t     * @method allowsOrigin\n\t     * @param origin {String}\n\t     * @return {Boolean}\n\t     */\n\t\n\t  }, {\n\t    key: 'allowsOrigin',\n\t    value: function allowsOrigin(origin) {\n\t      return origin in this.originsAllowed;\n\t    }\n\t\n\t    /**\n\t     * Does this authorization grant `acl:Read` access mode?\n\t     * @method allowsRead\n\t     * @return {Boolean}\n\t     */\n\t\n\t  }, {\n\t    key: 'allowsRead',\n\t    value: function allowsRead() {\n\t      return this.accessModes[acl.READ];\n\t    }\n\t\n\t    /**\n\t     * Does this authorization grant `acl:Write` access mode?\n\t     * @method allowsWrite\n\t     * @return {Boolean}\n\t     */\n\t\n\t  }, {\n\t    key: 'allowsWrite',\n\t    value: function allowsWrite() {\n\t      return this.accessModes[acl.WRITE];\n\t    }\n\t\n\t    /**\n\t     * Does this authorization grant `acl:Append` access mode?\n\t     * @method allowsAppend\n\t     * @return {Boolean}\n\t     */\n\t\n\t  }, {\n\t    key: 'allowsAppend',\n\t    value: function allowsAppend() {\n\t      return this.accessModes[acl.APPEND] || this.accessModes[acl.WRITE];\n\t    }\n\t\n\t    /**\n\t     * Does this authorization grant `acl:Control` access mode?\n\t     * @method allowsControl\n\t     * @return {Boolean}\n\t     */\n\t\n\t  }, {\n\t    key: 'allowsControl',\n\t    value: function allowsControl() {\n\t      return this.accessModes[acl.CONTROL];\n\t    }\n\t\n\t    /**\n\t     * Returns a deep copy of this authorization.\n\t     * @return {Authorization}\n\t     */\n\t\n\t  }, {\n\t    key: 'clone',\n\t    value: function clone() {\n\t      var auth = new Authorization();\n\t      Object.assign(auth, JSON.parse(JSON.stringify(this)));\n\t      return auth;\n\t    }\n\t\n\t    /**\n\t     * Compares this authorization with another one.\n\t     * Authorizations are equal iff they:\n\t     *   - Are for the same agent or group\n\t     *   - Are intended for the same resourceUrl\n\t     *   - Grant the same access modes\n\t     *   - Have the same `inherit`/`acl:default` flag\n\t     *   - Contain the same `mailto:` agent aliases.\n\t     *   - Has the same allowed origins\n\t     * @method equals\n\t     * @param auth {Authorization}\n\t     * @return {Boolean}\n\t     */\n\t\n\t  }, {\n\t    key: 'equals',\n\t    value: function equals(auth) {\n\t      var sameAgent = this.agent === auth.agent;\n\t      var sameGroup = this.group === auth.group;\n\t      var sameUrl = this.resourceUrl === auth.resourceUrl;\n\t      var myModeKeys = Object.keys(this.accessModes);\n\t      var authModeKeys = Object.keys(auth.accessModes);\n\t      var sameNumberModes = myModeKeys.length === authModeKeys.length;\n\t      var sameInherit = JSON.stringify(this.inherited) === JSON.stringify(auth.inherited);\n\t      var sameModes = true;\n\t      myModeKeys.forEach(function (key) {\n\t        if (!auth.accessModes[key]) {\n\t          sameModes = false;\n\t        }\n\t      });\n\t      var sameMailTos = JSON.stringify(this.mailTo) === JSON.stringify(auth.mailTo);\n\t      var sameOrigins = JSON.stringify(this.originsAllowed) === JSON.stringify(auth.originsAllowed);\n\t      return sameAgent && sameGroup && sameUrl && sameNumberModes && sameModes && sameInherit && sameMailTos && sameOrigins;\n\t    }\n\t\n\t    /**\n\t     * Returns a hashed combination of agent/group webId and resourceUrl. Used\n\t     * internally as a key to store this authorization in a PermissionSet.\n\t     * @method hashFragment\n\t     * @private\n\t     * @throws {Error} Errors if either the webId or the resourceUrl are not set.\n\t     * @return {String} hash({webId}-{resourceUrl})\n\t     */\n\t\n\t  }, {\n\t    key: 'hashFragment',\n\t    value: function hashFragment() {\n\t      if (!this.webId || !this.resourceUrl) {\n\t        throw new Error('Cannot call hashFragment() on an incomplete authorization');\n\t      }\n\t      var hashFragment = hashFragmentFor(this.webId(), this.resourceUrl, this.accessType);\n\t      return hashFragment;\n\t    }\n\t\n\t    /**\n\t     * Returns whether or not this authorization is for an agent (vs a group).\n\t     * @method isAgent\n\t     * @return {Boolean} Truthy value if agent is set\n\t     */\n\t\n\t  }, {\n\t    key: 'isAgent',\n\t    value: function isAgent() {\n\t      return this.agent;\n\t    }\n\t\n\t    /**\n\t     * Returns whether or not this authorization is empty (that is, whether it has\n\t     * any access modes like Read, Write, etc, set on it)\n\t     * @method isEmpty\n\t     * @return {Boolean}\n\t     */\n\t\n\t  }, {\n\t    key: 'isEmpty',\n\t    value: function isEmpty() {\n\t      return Object.keys(this.accessModes).length === 0;\n\t    }\n\t\n\t    /**\n\t     * Is this authorization intended for the foaf:Agent group (that is, everyone)?\n\t     * @method isPublic\n\t     * @return {Boolean}\n\t     */\n\t\n\t  }, {\n\t    key: 'isPublic',\n\t    value: function isPublic() {\n\t      return this.group === acl.EVERYONE;\n\t    }\n\t\n\t    /**\n\t     * Returns whether or not this authorization is for a group (vs an agent).\n\t     * @method isGroup\n\t     * @return {Boolean} Truthy value if group is set\n\t     */\n\t\n\t  }, {\n\t    key: 'isGroup',\n\t    value: function isGroup() {\n\t      return this.group;\n\t    }\n\t\n\t    /**\n\t     * Returns whether this authorization is for a container and should be inherited\n\t     * (that is, contain `acl:default`).\n\t     * This is a helper function (instead of the raw attribute) to match the rest\n\t     * of the api.\n\t     * @method isInherited\n\t     * @return {Boolean}\n\t     */\n\t\n\t  }, {\n\t    key: 'isInherited',\n\t    value: function isInherited() {\n\t      return this.inherited;\n\t    }\n\t\n\t    /**\n\t     * Returns whether this authorization is valid (ready to be serialized into\n\t     * an RDF graph ACL resource). This requires all three of the following:\n\t     *   1. Either an agent or an agentClass/group (returned by `webId()`)\n\t     *   2. A resource URL (`acl:accessTo`)\n\t     *   3. At least one access mode (read, write, etc) (returned by `isEmpty()`)\n\t     * @method isValid\n\t     * @return {Boolean}\n\t     */\n\t\n\t  }, {\n\t    key: 'isValid',\n\t    value: function isValid() {\n\t      return this.webId() && this.resourceUrl && !this.isEmpty();\n\t    }\n\t\n\t    /**\n\t     * Merges the access modes of a given authorization with the access modes of\n\t     * this one (Set union).\n\t     * @method mergeWith\n\t     * @param auth\n\t     * @throws {Error} Error if the other authorization is for a different webId\n\t     *   or resourceUrl (`acl:accessTo`)\n\t     */\n\t\n\t  }, {\n\t    key: 'mergeWith',\n\t    value: function mergeWith(auth) {\n\t      if (this.hashFragment() !== auth.hashFragment()) {\n\t        throw new Error('Cannot merge authorizations with different agent id or resource url (accessTo)');\n\t      }\n\t      for (var accessMode in auth.accessModes) {\n\t        this.addMode(accessMode);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Returns an array of RDF statements representing this authorization.\n\t     * Used by `PermissionSet.serialize()`.\n\t     * @method rdfStatements\n\t     * @return {Array<Statement>} List of RDF statements representing this Auth,\n\t     *   or an empty array if this authorization is invalid.\n\t     */\n\t\n\t  }, {\n\t    key: 'rdfStatements',\n\t    value: function rdfStatements(rdf) {\n\t      // Make sure the authorization has at least one agent/group and `accessTo`\n\t      if (!this.webId() || !this.resourceUrl) {\n\t        return []; // This Authorization is invalid, return empty array\n\t      }\n\t      // Virtual / implied authorizations are not serialized\n\t      if (this.virtual) {\n\t        return [];\n\t      }\n\t      var statement;\n\t      var fragment = rdf.namedNode('#' + this.hashFragment());\n\t      var ns = vocab(rdf);\n\t      var statements = [rdf.triple(fragment, ns.rdf('type'), ns.acl('Authorization'))];\n\t      if (this.agent) {\n\t        statement = rdf.triple(fragment, ns.acl('agent'), rdf.namedNode(this.agent));\n\t        statements.push(statement);\n\t      }\n\t      if (this.mailTo.length > 0) {\n\t        this.mailTo.forEach(function (agentMailto) {\n\t          statement = rdf.triple(fragment, ns.acl('agent'), rdf.namedNode('mailto:' + agentMailto));\n\t          statements.push(statement);\n\t        });\n\t      }\n\t      if (this.group) {\n\t        statement = rdf.triple(fragment, ns.acl('agentClass'), rdf.namedNode(this.group));\n\t        statements.push(statement);\n\t      }\n\t      statement = rdf.triple(fragment, ns.acl('accessTo'), rdf.namedNode(this.resourceUrl));\n\t      statements.push(statement);\n\t      var modes = Object.keys(this.accessModes);\n\t      modes.forEach(function (accessMode) {\n\t        statement = rdf.triple(fragment, ns.acl('mode'), rdf.namedNode(accessMode));\n\t        statements.push(statement);\n\t      });\n\t      if (this.inherited) {\n\t        statement = rdf.triple(fragment, ns.acl('defaultForNew'), rdf.namedNode(this.resourceUrl));\n\t        statements.push(statement);\n\t      }\n\t      this.allOrigins().forEach(function (origin) {\n\t        statement = rdf.triple(fragment, ns.acl('origin'), rdf.namedNode(origin));\n\t        statements.push(statement);\n\t      });\n\t      return statements;\n\t    }\n\t\n\t    /**\n\t     * Removes one or more access modes from this authorization.\n\t     * @method removeMode\n\t     * @param accessMode {String|Statement|Array<String>|Array<Statement>} URL\n\t     *   representation of the access mode, or an RDF `acl:mode` triple.\n\t     * @returns {removeMode}\n\t     */\n\t\n\t  }, {\n\t    key: 'removeMode',\n\t    value: function removeMode(accessMode) {\n\t      var _this3 = this;\n\t\n\t      if (Array.isArray(accessMode)) {\n\t        accessMode.forEach(function (ea) {\n\t          _this3.removeModeSingle(ea);\n\t        });\n\t      } else {\n\t        this.removeModeSingle(accessMode);\n\t      }\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Removes a single access mode from this authorization. Internal use only\n\t     * (used by `removeMode()`).\n\t     * @method removeModeSingle\n\t     * @private\n\t     * @param accessMode {String|Statement} URI or RDF statement\n\t     */\n\t\n\t  }, {\n\t    key: 'removeModeSingle',\n\t    value: function removeModeSingle(accessMode) {\n\t      if (typeof accessMode !== 'string') {\n\t        accessMode = accessMode.object.value;\n\t      }\n\t      delete this.accessModes[accessMode];\n\t    }\n\t\n\t    /**\n\t     * Removes one or more allowed origins from this authorization.\n\t     * @method removeOrigin\n\t     * @param origin {String|Statement|Array<String>|Array<Statement>} URL\n\t     *   representation of the access mode, or an RDF `acl:mode` triple.\n\t     * @returns {removeMode}\n\t     */\n\t\n\t  }, {\n\t    key: 'removeOrigin',\n\t    value: function removeOrigin(accessMode) {\n\t      var _this4 = this;\n\t\n\t      if (Array.isArray(accessMode)) {\n\t        accessMode.forEach(function (ea) {\n\t          _this4.removeOriginSingle(ea);\n\t        });\n\t      } else {\n\t        this.removeOriginSingle(accessMode);\n\t      }\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Removes a single allowed origin from this authorization. Internal use only\n\t     * (used by `removeOrigin()`).\n\t     * @method removeOriginSingle\n\t     * @private\n\t     * @param origin {String|Statement} URI or RDF statement\n\t     */\n\t\n\t  }, {\n\t    key: 'removeOriginSingle',\n\t    value: function removeOriginSingle(origin) {\n\t      if (typeof origin !== 'string') {\n\t        origin = origin.object.value;\n\t      }\n\t      delete this.originsAllowed[origin];\n\t    }\n\t\n\t    /**\n\t     * Sets the agent WebID for this authorization. Implemented as `setAgent()`\n\t     * setter method to enforce mutual exclusivity with `group` property, until\n\t     * ES6 setter methods become available.\n\t     * @method setAgent\n\t     * @param agent {String|Quad} Agent URL (or `acl:agent` RDF triple).\n\t     */\n\t\n\t  }, {\n\t    key: 'setAgent',\n\t    value: function setAgent(agent) {\n\t      if (typeof agent !== 'string') {\n\t        // This is an RDF statement\n\t        agent = agent.object.value;\n\t      }\n\t      if (agent === acl.EVERYONE) {\n\t        this.setPublic();\n\t      } else if (this.group) {\n\t        throw new Error('Cannot set agent, authorization already has a group set');\n\t      }\n\t      if (agent.startsWith('mailto:')) {\n\t        this.addMailTo(agent);\n\t      } else {\n\t        this.agent = agent;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Sets the group WebID for this authorization. Implemented as `setGroup()`\n\t     * setter method to enforce mutual exclusivity with `agent` property, until\n\t     * ES6 setter methods become available.\n\t     * @method setGroup\n\t     * @param agentClass {String|Statement} Group URL (or `acl:agentClass` RDF\n\t     *   triple).\n\t     */\n\t\n\t  }, {\n\t    key: 'setGroup',\n\t    value: function setGroup(agentClass) {\n\t      if (typeof agentClass !== 'string') {\n\t        // This is an RDF statement\n\t        agentClass = agentClass.object.value;\n\t      }\n\t      if (this.agent) {\n\t        throw new Error('Cannot set group, authorization already has an agent set');\n\t      }\n\t      this.group = agentClass;\n\t    }\n\t\n\t    /**\n\t     * Sets the authorization's group to `foaf:Agent`. Convenience method.\n\t     * @method setPublic\n\t     */\n\t\n\t  }, {\n\t    key: 'setPublic',\n\t    value: function setPublic() {\n\t      this.setGroup(acl.EVERYONE);\n\t    }\n\t\n\t    /**\n\t     * Returns the agent or group's WebID for this authorization.\n\t     * @method webId\n\t     * @return {String}\n\t     */\n\t\n\t  }, {\n\t    key: 'webId',\n\t    value: function webId() {\n\t      return this.agent || this.group;\n\t    }\n\t  }]);\n\t\n\t  return Authorization;\n\t}();\n\t// --- Standalone (non-instance) functions --\n\t/**\n\t * Utility method that creates a hash fragment key for this authorization.\n\t * Used with graph serialization to RDF, and as a key to store authorizations\n\t * in a PermissionSet. Exported (mainly for use in PermissionSet).\n\t * @method hashFragmentFor\n\t * @param webId {String} Agent or group web id\n\t * @param resourceUrl {String} Resource or container URL for this authorization\n\t * @param [authType='accessTo'] {String} Either 'accessTo' or 'default'\n\t * @return {String}\n\t */\n\t\n\t\n\tfunction hashFragmentFor(webId, resourceUrl) {\n\t  var authType = arguments.length <= 2 || arguments[2] === undefined ? acl.ACCESS_TO : arguments[2];\n\t\n\t  var hashKey = webId + '-' + resourceUrl + '-' + authType;\n\t  return hashKey;\n\t}\n\t\n\tAuthorization.hashFragmentFor = hashFragmentFor;\n\t\n\tmodule.exports = Authorization;\n\n/***/ },\n/* 167 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t/**\n\t * Exports acl-related constants\n\t * @module modes\n\t */\n\t\n\tvar vocab = __webpack_require__(158);\n\tvar ns = vocab();\n\t\n\t// ACL access modes\n\tvar READ = ns.acl('Read');\n\tvar WRITE = ns.acl('Write');\n\tvar APPEND = ns.acl('Append');\n\tvar CONTROL = ns.acl('Control');\n\tvar EVERYONE = ns.foaf('Agent');\n\tvar ALL_MODES = [READ, WRITE, CONTROL];\n\t\n\t// ACL-related convenience constants\n\tvar INHERIT = true;\n\tvar NOT_INHERIT = !INHERIT;\n\tvar ACCESS_TO = 'accessTo';\n\tvar DEFAULT = 'default';\n\t\n\tmodule.exports.acl = {\n\t  ALL_MODES: ALL_MODES,\n\t  READ: READ,\n\t  WRITE: WRITE,\n\t  APPEND: APPEND,\n\t  CONTROL: CONTROL,\n\t  EVERYONE: EVERYONE,\n\t  INHERIT: INHERIT,\n\t  NOT_INHERIT: NOT_INHERIT,\n\t  ACCESS_TO: ACCESS_TO,\n\t  DEFAULT: DEFAULT\n\t};\n\n/***/ },\n/* 168 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t/**\n\t * Provides a simple configuration object for Solid web client and other\n\t * modules.\n\t * @module config\n\t */\n\t\n\tmodule.exports = {\n\t  /**\n\t   * Default authentication endpoint\n\t   */\n\t  authEndpoint: 'https://yodata.me',\n\t\n\t  /**\n\t   * Default signup endpoints (list of identity providers)\n\t   */\n\t  signupEndpoint: 'https://yodata.me/signup',\n\t\n\t  /**\n\t   * Default height of the Signup popup window, in pixels\n\t   */\n\t  signupWindowHeight: 600,\n\t\n\t  /**\n\t   * Default width of the Signup popup window, in pixels\n\t   */\n\t  signupWindowWidth: 1024\n\t};\n\n/***/ },\n/* 169 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t/**\n\t * Provides miscelaneous meta functions (such as library version)\n\t * @module meta\n\t */\n\t\n\tvar lib = __webpack_require__(170);\n\t\n\t/**\n\t * Returns solid-client library version (read from `package.json`)\n\t * @return {String} Lib version\n\t */\n\tmodule.exports.version = function version() {\n\t  return lib.version;\n\t};\n\n/***/ },\n/* 170 */\n/***/ function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"name\": \"solid-client\",\n\t\t\"version\": \"0.23.6\",\n\t\t\"description\": \"Common library for writing Solid read-write-web applications\",\n\t\t\"main\": \"./lib/index.js\",\n\t\t\"files\": [\n\t\t\t\"config.js\",\n\t\t\t\"lib\",\n\t\t\t\"dist\"\n\t\t],\n\t\t\"scripts\": {\n\t\t\t\"build-lib\": \"babel src -d lib\",\n\t\t\t\"build-full\": \"webpack --progress --config webpack.config.js --output-filename solid-client-full.js\",\n\t\t\t\"build-with-rdflib\": \"webpack --progress --colors --optimize-minimize --optimize-occurrence-order --optimize-dedupe --config webpack.config.js\",\n\t\t\t\"build-without-rdflib\": \"webpack --progress --colors --optimize-minimize --optimize-occurrence-order --optimize-dedupe --config webpack-no-rdflib.config.js\",\n\t\t\t\"build-qunit-resources\": \"npm run clean && mkdir -p dist/resources && npm run build-full && browserify -r ./test/resources/profile-minimal.js:test-minimal-profile -o dist/resources/test-minimal-profile.js && browserify -r ./test/resources/profile-private.js:test-minimal-prefs -o dist/resources/test-minimal-prefs.js\",\n\t\t\t\"build\": \"npm run clean && mkdir dist && npm run build-lib && npm run build-with-rdflib && npm run build-without-rdflib\",\n\t\t\t\"clean\": \"rm -rf dist/\",\n\t\t\t\"standard\": \"standard src/*\",\n\t\t\t\"tape\": \"tape test/unit/*.js\",\n\t\t\t\"test\": \"npm run standard && npm run tape\",\n\t\t\t\"qunit\": \"npm run build-qunit-resources && open test/integration/index.html\",\n\t\t\t\"preversion\": \"npm test\",\n\t\t\t\"postversion\": \"git push --follow-tags\",\n\t\t\t\"prepublish\": \"npm run test && npm run build\"\n\t\t},\n\t\t\"babel\": {\n\t\t\t\"presets\": [\n\t\t\t\t\"es2015\"\n\t\t\t]\n\t\t},\n\t\t\"repository\": {\n\t\t\t\"type\": \"git\",\n\t\t\t\"url\": \"https://github.com/solid/solid-client\"\n\t\t},\n\t\t\"keywords\": [\n\t\t\t\"solid\",\n\t\t\t\"decentralized\",\n\t\t\t\"web\",\n\t\t\t\"rdf\",\n\t\t\t\"ldp\",\n\t\t\t\"linked\",\n\t\t\t\"data\"\n\t\t],\n\t\t\"author\": \"Andrei Sambra <andrei@fcns.eu>\",\n\t\t\"maintainers\": [\n\t\t\t{\n\t\t\t\t\"name\": \"Dmitri Zagidulin\",\n\t\t\t\t\"url\": \"https://github.com/dmitrizagidulin/\"\n\t\t\t}\n\t\t],\n\t\t\"license\": \"MIT\",\n\t\t\"bugs\": {\n\t\t\t\"url\": \"https://github.com/solid/solid-client/issues\"\n\t\t},\n\t\t\"homepage\": \"https://github.com/solid/solid-client\",\n\t\t\"dependencies\": {\n\t\t\t\"rdflib\": \"^0.13.0\",\n\t\t\t\"shorthash\": \"0.0.2\",\n\t\t\t\"solid-auth-oidc\": \"0.0.2\",\n\t\t\t\"solid-auth-tls\": \"0.0.4\",\n\t\t\t\"solid-namespace\": \"^0.1.0\",\n\t\t\t\"solid-permissions\": \"^0.5.1\",\n\t\t\t\"solid-web-client\": \"git://github.com/solid/solid-web-client.git#dz_oidc\"\n\t\t},\n\t\t\"devDependencies\": {\n\t\t\t\"babel-cli\": \"^6.18.0\",\n\t\t\t\"babel-loader\": \"^6.2.10\",\n\t\t\t\"babel-preset-es2015\": \"^6.18.0\",\n\t\t\t\"json-loader\": \"^0.5.4\",\n\t\t\t\"nock\": \"^9.0.2\",\n\t\t\t\"qunit\": \"^0.9.0\",\n\t\t\t\"sinon\": \"^1.17.6\",\n\t\t\t\"standard\": \"^5.4.1\",\n\t\t\t\"tape\": \"^4.4.0\",\n\t\t\t\"webpack\": \"^1.13.1\"\n\t\t},\n\t\t\"standard\": {\n\t\t\t\"globals\": [\n\t\t\t\t\"$rdf\",\n\t\t\t\t\"SolidClient\",\n\t\t\t\t\"tabulator\",\n\t\t\t\t\"QUnit\"\n\t\t\t]\n\t\t}\n\t};\n\n/***/ },\n/* 171 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t/**\n\t * Provides Web API helpers dealing with a user's online / offline status.\n\t * @module status\n\t */\n\t\n\tmodule.exports.isOnline = isOnline;\n\tmodule.exports.onOffline = onOffline;\n\tmodule.exports.onOnline = onOnline;\n\t\n\t/**\n\t * Returns a user's online status (true if user is on line)\n\t * @method isOnline\n\t * @static\n\t * @return {Boolean}\n\t */\n\tfunction isOnline() {\n\t  return window.navigator.onLine;\n\t}\n\t\n\t/**\n\t * Adds an even listener to trigger when the user goes offline.\n\t * @method onOffline\n\t * @static\n\t * @param callback {Function} Callback to invoke when user goes offline.\n\t */\n\tfunction onOffline(callback) {\n\t  window.addEventListener('offline', callback, false);\n\t}\n\t\n\t/**\n\t * Adds an even listener to trigger when the user comes online.\n\t * @method onOnline\n\t * @static\n\t * @param callback {Function} Callback to invoke when user comes online\n\t */\n\tfunction onOnline(callback) {\n\t  window.addEventListener('online', callback, false);\n\t}\n\n/***/ }\n/******/ ])));\n\n\n// WEBPACK FOOTER //\n// solid-client.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 4f26ae514ced41a64232","/*\nThe MIT License (MIT)\n\nCopyright (c) 2015-2016 Solid\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\nsolid-client is a Javascript library for Solid applications.\n\nIf you would like to know more about the solid Solid project, please see\nhttps://github.com/solid/solid\n*/\n'use strict';\n/**\n * Provides a Solid client helper object (which exposes various static modules).\n * @module solid-client\n * @main solid-client\n */\n\nvar rdf = require('./util/rdf-parser');\nvar ClientAuthOIDC = require('solid-auth-oidc');\nvar auth = new ClientAuthOIDC();\nvar webClient = require('solid-web-client')(rdf, { auth: auth });\nvar ClientAuthTLS = require('solid-auth-tls');\nvar tls = new ClientAuthTLS(webClient);\nvar identity = require('./identity');\nvar ns = require('solid-namespace')(rdf);\nvar acl = require('solid-permissions');\n\n/**\n * @class Solid\n * @static\n */\nvar Solid = {\n  acl: acl,\n  AppRegistration: require('./solid/app-registration'),\n  appRegistry: require('./app-registry'),\n  auth: auth,\n  tls: tls,\n  config: require('../config'),\n  currentUser: auth.currentUser.bind(auth),\n  identity: require('./identity'),\n  login: auth.login.bind(auth),\n  logout: auth.logout.bind(auth),\n  meta: require('./meta'),\n  rdflib: rdf,\n  signup: tls.signup.bind(tls),\n  status: require('./status'),\n  typeRegistry: require('./type-registry'),\n  vocab: ns,\n  web: webClient\n};\n\nSolid.clearPermissions = function clearPermissions(uri) {\n  return acl.clearPermissions(uri, webClient);\n};\nSolid.discoverWebID = function discoverWebID(url) {\n  return identity.discoverWebID(url, webClient, ns);\n};\nSolid.getPermissions = function getPermissions(uri) {\n  return acl.getPermissions(uri, webClient, rdf);\n};\nSolid.getProfile = function getProfile(profileUrl, options) {\n  return identity.getProfile(profileUrl, options, webClient, rdf);\n};\n\nmodule.exports = Solid;\n\n\n// WEBPACK FOOTER //\n// ./lib/index.js","'use strict';\n/**\n * Provides a generic wrapper around an RDF Parser library\n * (currently only RDFLib)\n *  @@ RDFLib is NOT JUST a parser library. It is a quadstore and a serializer library!\n * @module rdf-parser\n */\n\nvar rdf;\nif (typeof $rdf !== 'undefined') {\n  rdf = $rdf; // FF extension\n} else if (typeof tabulator !== 'undefined') {\n  rdf = tabulator.rdf;\n} else if (typeof require === 'function') {\n  // Running with a CommonJS module system\n  rdf = require('rdflib');\n}\nmodule.exports = rdf;\n\n\n// WEBPACK FOOTER //\n// ./lib/util/rdf-parser.js","'use strict';\n\nvar _indexedFormula = require('./indexed-formula');\n\nvar _indexedFormula2 = _interopRequireDefault(_indexedFormula);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar $rdf = {\n  BlankNode: require('./blank-node'),\n  Collection: require('./collection'),\n  convert: require('./convert'),\n  DataFactory: require('./data-factory'),\n  Empty: require('./empty'),\n  Fetcher: require('./fetcher'),\n  Formula: require('./formula'),\n  IndexedFormula: _indexedFormula2.default,\n  jsonParser: require('./jsonparser'),\n  Literal: require('./literal'),\n  log: require('./log'),\n  N3Parser: require('./n3parser'),\n  NamedNode: require('./named-node'),\n  Namespace: require('./namespace'),\n  Node: require('./node'),\n  parse: require('./parse'),\n  Query: require('./query').Query,\n  queryToSPARQL: require('./query-to-sparql'),\n  RDFaProcessor: require('./rdfaparser'),\n  RDFParser: require('./rdfxmlparser'),\n  serialize: require('./serialize'),\n  Serializer: require('./serializer'),\n  SPARQLToQuery: require('./sparql-to-query'),\n  sparqlUpdateParser: require('./patch-parser'),\n  Statement: require('./statement'),\n  term: require('./node').fromValue,\n  UpdateManager: require('./update-manager'),\n  UpdatesSocket: require('./updates-via').UpdatesSocket,\n  UpdatesVia: require('./updates-via').UpdatesVia,\n  uri: require('./uri'),\n  Util: require('./util'),\n  Variable: require('./variable')\n};\n\n$rdf.NextId = $rdf.BlankNode.nextId;\n\n$rdf.fromNT = $rdf.Formula.prototype.fromNT;\n$rdf.fetcher = $rdf.DataFactory.fetcher;\n$rdf.graph = $rdf.DataFactory.graph;\n$rdf.lit = $rdf.DataFactory.lit;\n$rdf.st = $rdf.DataFactory.st;\n$rdf.sym = $rdf.DataFactory.namedNode;\n$rdf.variable = $rdf.DataFactory.variable;\n\n// RDFJS DataFactory interface\n$rdf.blankNode = $rdf.DataFactory.blankNode;\n$rdf.defaultGraph = $rdf.DataFactory.defaultGraph;\n$rdf.literal = $rdf.DataFactory.literal;\n$rdf.namedNode = $rdf.DataFactory.namedNode;\n$rdf.quad = $rdf.DataFactory.quad;\n$rdf.triple = $rdf.DataFactory.triple;\n\nmodule.exports = $rdf;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rdflib/lib/index.js\n// module id = 3\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n//  Identity management and indexing for RDF\n//\n// This file provides  IndexedFormula a formula (set of triples) which\n// indexed by predicate, subject and object.\n//\n// It \"smushes\"  (merges into a single node) things which are identical\n// according to owl:sameAs or an owl:InverseFunctionalProperty\n// or an owl:FunctionalProperty\n//\n//\n//  2005-10 Written Tim Berners-Lee\n//  2007    Changed so as not to munge statements from documents when smushing\n//\n//\n/* jsl:option explicit */\nvar ArrayIndexOf = require('./util').ArrayIndexOf;\nvar Formula = require('./formula');\n// const log = require('./log')\nvar RDFArrayRemove = require('./util').RDFArrayRemove;\nvar Statement = require('./statement');\nvar Node = require('./node');\nvar Variable = require('./variable');\n\nvar owl_ns = 'http://www.w3.org/2002/07/owl#';\n// var link_ns = 'http://www.w3.org/2007/ont/link#'\n\n// Handle Functional Property\nfunction handle_FP(formula, subj, pred, obj) {\n  var o1 = formula.any(subj, pred, undefined);\n  if (!o1) {\n    return false; // First time with this value\n  }\n  // log.warn(\"Equating \"+o1.uri+\" and \"+obj.uri + \" because FP \"+pred.uri);  //@@\n  formula.equate(o1, obj);\n  return true;\n} // handle_FP\n\n// Handle Inverse Functional Property\nfunction handle_IFP(formula, subj, pred, obj) {\n  var s1 = formula.any(undefined, pred, obj);\n  if (!s1) {\n    return false; // First time with this value\n  }\n  // log.warn(\"Equating \"+s1.uri+\" and \"+subj.uri + \" because IFP \"+pred.uri);  //@@\n  formula.equate(s1, subj);\n  return true;\n} // handle_IFP\n\nfunction handleRDFType(formula, subj, pred, obj, why) {\n  if (formula.typeCallback) {\n    formula.typeCallback(formula, obj, why);\n  }\n\n  var x = formula.classActions[obj.hashString()];\n  var done = false;\n  if (x) {\n    for (var i = 0; i < x.length; i++) {\n      done = done || x[i](formula, subj, pred, obj, why);\n    }\n  }\n  return done; // statement given is not needed if true\n}\n\nvar IndexedFormula = function (_Formula) {\n  _inherits(IndexedFormula, _Formula);\n\n  // IN future - allow pass array of statements to constructor\n  function IndexedFormula(features) {\n    _classCallCheck(this, IndexedFormula);\n\n    // this.statements = [] // As in Formula NO don't overwrite inherited\n    // this.optional = []\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(IndexedFormula).call(this));\n\n    _this.propertyActions = []; // Array of functions to call when getting statement with {s X o}\n    // maps <uri> to [f(F,s,p,o),...]\n    _this.classActions = []; // Array of functions to call when adding { s type X }\n    _this.redirections = []; // redirect to lexically smaller equivalent symbol\n    _this.aliases = []; // reverse mapping to redirection: aliases for this\n    _this.HTTPRedirects = []; // redirections we got from HTTP\n    _this.subjectIndex = []; // Array of statements with this X as subject\n    _this.predicateIndex = []; // Array of statements with this X as subject\n    _this.objectIndex = []; // Array of statements with this X as object\n    _this.whyIndex = []; // Array of statements with X as provenance\n    _this.index = [_this.subjectIndex, _this.predicateIndex, _this.objectIndex, _this.whyIndex];\n    _this.namespaces = {}; // Dictionary of namespace prefixes\n    _this.features = features || ['sameAs', 'InverseFunctionalProperty', 'FunctionalProperty'];\n    _this.initPropertyActions(_this.features);\n    return _this;\n  }\n\n  _createClass(IndexedFormula, [{\n    key: 'substitute',\n    value: function substitute(bindings) {\n      var statementsCopy = this.statements.map(function (ea) {\n        return ea.substitute(bindings);\n      });\n      // console.log('IndexedFormula subs statemnts:' + statementsCopy)\n      var y = new IndexedFormula();\n      y.add(statementsCopy);\n      // console.log('indexed-form subs formula:' + y)\n      return y;\n    }\n  }, {\n    key: 'applyPatch',\n    value: function applyPatch(patch, target, patchCallback) {\n      // patchCallback(err)\n      var Query = require('./query').Query;\n      var targetKB = this;\n      var ds;\n      var binding = null;\n\n      // /////////// Debug strings\n      /*\n      var bindingDebug = function (b) {\n        var str = ''\n        var v\n        for (v in b) {\n          if (b.hasOwnProperty(v)) {\n            str += '    ' + v + ' -> ' + b[v]\n          }\n        }\n        return str\n      }\n      */\n      var doPatch = function doPatch(onDonePatch) {\n        if (patch['delete']) {\n          ds = patch['delete'];\n          // console.log(bindingDebug(binding))\n          // console.log('ds before substitute: ' + ds)\n          if (binding) ds = ds.substitute(binding);\n          // console.log('applyPatch: delete: ' + ds)\n          ds = ds.statements;\n          var bad = [];\n          var ds2 = ds.map(function (st) {\n            // Find the actual statemnts in the store\n            var sts = targetKB.statementsMatching(st.subject, st.predicate, st.object, target);\n            if (sts.length === 0) {\n              // log.info(\"NOT FOUND deletable \" + st)\n              bad.push(st);\n              return null;\n            } else {\n              // log.info(\"Found deletable \" + st)\n              return sts[0];\n            }\n          });\n          if (bad.length) {\n            // console.log('Could not find to delete ' + bad.length + 'statements')\n            // console.log('despite ' + targetKB.statementsMatching(bad[0].subject, bad[0].predicate)[0])\n            return patchCallback('Could not find to delete: ' + bad.join('\\n or '));\n          }\n          ds2.map(function (st) {\n            targetKB.remove(st);\n          });\n        }\n        if (patch['insert']) {\n          // log.info(\"doPatch insert \"+patch['insert'])\n          ds = patch['insert'];\n          if (binding) ds = ds.substitute(binding);\n          ds = ds.statements;\n          ds.map(function (st) {\n            st.why = target;\n            targetKB.add(st.subject, st.predicate, st.object, st.why);\n          });\n        }\n        onDonePatch();\n      };\n      if (patch.where) {\n        // log.info(\"Processing WHERE: \" + patch.where + '\\n')\n        var query = new Query('patch');\n        query.pat = patch.where;\n        query.pat.statements.map(function (st) {\n          st.why = target;\n        });\n\n        var bindingsFound = [];\n\n        targetKB.query(query, function onBinding(binding) {\n          bindingsFound.push(binding);\n          // console.log('   got a binding: ' + bindingDebug(binding))\n        }, targetKB.fetcher, function onDone() {\n          if (bindingsFound.length === 0) {\n            return patchCallback('No match found to be patched:' + patch.where);\n          }\n          if (bindingsFound.length > 1) {\n            return patchCallback('Patch ambiguous. No patch done.');\n          }\n          binding = bindingsFound[0];\n          doPatch(patchCallback);\n        });\n      } else {\n        doPatch(patchCallback);\n      }\n    }\n  }, {\n    key: 'declareExistential',\n    value: function declareExistential(x) {\n      if (!this._existentialVariables) this._existentialVariables = [];\n      this._existentialVariables.push(x);\n      return x;\n    }\n  }, {\n    key: 'initPropertyActions',\n    value: function initPropertyActions(features) {\n      // If the predicate is #type, use handleRDFType to create a typeCallback on the object\n      this.propertyActions['<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>'] = [handleRDFType];\n\n      // Assumption: these terms are not redirected @@fixme\n      if (ArrayIndexOf(features, 'sameAs') >= 0) {\n        this.propertyActions['<http://www.w3.org/2002/07/owl#sameAs>'] = [function (formula, subj, pred, obj, why) {\n          // log.warn(\"Equating \"+subj.uri+\" sameAs \"+obj.uri);  //@@\n          formula.equate(subj, obj);\n          return true; // true if statement given is NOT needed in the store\n        }]; // sameAs -> equate & don't add to index\n      }\n      if (ArrayIndexOf(features, 'InverseFunctionalProperty') >= 0) {\n        this.classActions['<' + owl_ns + 'InverseFunctionalProperty>'] = [function (formula, subj, pred, obj, addFn) {\n          // yes subj not pred!\n          return formula.newPropertyAction(subj, handle_IFP);\n        }]; // IFP -> handle_IFP, do add to index\n      }\n      if (ArrayIndexOf(features, 'FunctionalProperty') >= 0) {\n        this.classActions['<' + owl_ns + 'FunctionalProperty>'] = [function (formula, subj, proj, obj, addFn) {\n          return formula.newPropertyAction(subj, handle_FP);\n        }]; // FP => handleFP, do add to index\n      }\n    }\n\n    /**\n     * Adds a triple to the store.\n     * Returns the statement added\n     * (would it be better to return the original formula for chaining?)\n     */\n\n  }, {\n    key: 'add',\n    value: function add(subj, pred, obj, why) {\n      var i;\n      if (arguments.length === 1) {\n        if (subj instanceof Array) {\n          for (i = 0; i < subj.length; i++) {\n            this.add(subj[i]);\n          }\n        } else if (subj instanceof Statement) {\n          this.add(subj.subject, subj.predicate, subj.object, subj.why);\n        } else if (subj instanceof IndexedFormula) {\n          this.add(subj.statements);\n        }\n        return this;\n      }\n      var actions;\n      var st;\n      if (!why) {\n        // system generated\n        why = this.fetcher ? this.fetcher.appNode : this.sym('chrome:theSession');\n      }\n      subj = Node.fromValue(subj);\n      pred = Node.fromValue(pred);\n      obj = Node.fromValue(obj);\n      why = Node.fromValue(why);\n      if (this.predicateCallback) {\n        this.predicateCallback(this, pred, why);\n      }\n      // Action return true if the statement does not need to be added\n      var predHash = this.canon(pred).hashString();\n      actions = this.propertyActions[predHash]; // Predicate hash\n      var done = false;\n      if (actions) {\n        // alert('type: '+typeof actions +' @@ actions='+actions)\n        for (i = 0; i < actions.length; i++) {\n          done = done || actions[i](this, subj, pred, obj, why);\n        }\n      }\n      if (this.holds(subj, pred, obj, why)) {\n        // Takes time but saves duplicates\n        // console.log('rdflib: Ignoring dup! {' + subj + ' ' + pred + ' ' + obj + ' ' + why + '}')\n        return null; // @@better to return self in all cases?\n      }\n      // If we are tracking provenance, every thing should be loaded into the store\n      // if (done) return new Statement(subj, pred, obj, why)\n      // Don't put it in the store\n      // still return this statement for owl:sameAs input\n      var hash = [this.canon(subj).hashString(), predHash, this.canon(obj).hashString(), this.canon(why).hashString()];\n      st = new Statement(subj, pred, obj, why);\n      for (i = 0; i < 4; i++) {\n        var ix = this.index[i];\n        var h = hash[i];\n        if (!ix[h]) {\n          ix[h] = [];\n        }\n        ix[h].push(st); // Set of things with this as subject, etc\n      }\n\n      // log.debug(\"ADDING    {\"+subj+\" \"+pred+\" \"+obj+\"} \"+why)\n      this.statements.push(st);\n      return st;\n    }\n  }, {\n    key: 'addAll',\n    value: function addAll(statements) {\n      var _this2 = this;\n\n      statements.forEach(function (quad) {\n        _this2.add(quad.subject, quad.predicate, quad.object, quad.graph);\n      });\n    }\n  }, {\n    key: 'any',\n    value: function any(s, p, o, g) {\n      var st = this.anyStatementMatching(s, p, o, g);\n      if (st == null) {\n        return void 0;\n      } else if (s == null) {\n        return st.subject;\n      } else if (p == null) {\n        return st.predicate;\n      } else if (o == null) {\n        return st.object;\n      }\n      return void 0;\n    }\n  }, {\n    key: 'anyValue',\n    value: function anyValue(s, p, o, g) {\n      var y = this.any(s, p, o, g);\n      return y ? y.value : void 0;\n    }\n  }, {\n    key: 'anyStatementMatching',\n    value: function anyStatementMatching(subj, pred, obj, why) {\n      var x = this.statementsMatching(subj, pred, obj, why, true);\n      if (!x || x.length === 0) {\n        return undefined;\n      }\n      return x[0];\n    }\n\n    /**\n     * Returns the symbol with canonical URI as smushed\n     */\n\n  }, {\n    key: 'canon',\n    value: function canon(term) {\n      if (!term) {\n        return term;\n      }\n      var y = this.redirections[term.hashString()];\n      if (!y) {\n        return term;\n      }\n      return y;\n    }\n  }, {\n    key: 'check',\n    value: function check() {\n      this.checkStatementList(this.statements);\n      for (var p = 0; p < 4; p++) {\n        var ix = this.index[p];\n        for (var key in ix) {\n          if (ix.hasOwnProperty(key)) {\n            this.checkStatementList(ix[key], p);\n          }\n        }\n      }\n    }\n\n    /**\n     * Self-consistency checking for diagnostis only\n     * Is each statement properly indexed?\n     */\n\n  }, {\n    key: 'checkStatementList',\n    value: function checkStatementList(sts, from) {\n      var names = ['subject', 'predicate', 'object', 'why'];\n      var origin = ' found in ' + names[from] + ' index.';\n      var st;\n      for (var j = 0; j < sts.length; j++) {\n        st = sts[j];\n        var term = [st.subject, st.predicate, st.object, st.why];\n        var arrayContains = function arrayContains(a, x) {\n          for (var i = 0; i < a.length; i++) {\n            if (a[i].subject.sameTerm(x.subject) && a[i].predicate.sameTerm(x.predicate) && a[i].object.sameTerm(x.object) && a[i].why.sameTerm(x.why)) {\n              return true;\n            }\n          }\n        };\n        for (var p = 0; p < 4; p++) {\n          var c = this.canon(term[p]);\n          var h = c.hashString();\n          if (!this.index[p][h]) {\n            // throw new Error('No ' + name[p] + ' index for statement ' + st + '@' + st.why + origin)\n          } else {\n            if (!arrayContains(this.index[p][h], st)) {\n              // throw new Error('Index for ' + name[p] + ' does not have statement ' + st + '@' + st.why + origin)\n            }\n          }\n        }\n        if (!arrayContains(this.statements, st)) {\n          throw new Error('Statement list does not statement ' + st + '@' + st.why + origin);\n        }\n      }\n    }\n  }, {\n    key: 'close',\n    value: function close() {\n      return this;\n    }\n\n    /**\n     * replaces @template with @target and add appropriate triples (no triple\n     * removed)\n     * one-direction replication\n     * @method copyTo\n     */\n\n  }, {\n    key: 'copyTo',\n    value: function copyTo(template, target, flags) {\n      if (!flags) flags = [];\n      var statList = this.statementsMatching(template);\n      if (ArrayIndexOf(flags, 'two-direction') !== -1) {\n        statList.concat(this.statementsMatching(undefined, undefined, template));\n      }\n      for (var i = 0; i < statList.length; i++) {\n        var st = statList[i];\n        switch (st.object.termType) {\n          case 'NamedNode':\n            this.add(target, st.predicate, st.object);\n            break;\n          case 'Literal':\n          case 'BlankNode':\n          case 'collection':\n            this.add(target, st.predicate, st.object.copy(this));\n        }\n        if (ArrayIndexOf(flags, 'delete') !== -1) {\n          this.remove(st);\n        }\n      }\n    }\n\n    /**\n     * simplify graph in store when we realize two identifiers are equivalent\n     * We replace the bigger with the smaller.\n     */\n\n  }, {\n    key: 'equate',\n    value: function equate(u1, u2) {\n      // log.warn(\"Equating \"+u1+\" and \"+u2); // @@\n      // @@JAMBO Must canonicalize the uris to prevent errors from a=b=c\n      // 03-21-2010\n      u1 = this.canon(u1);\n      u2 = this.canon(u2);\n      var d = u1.compareTerm(u2);\n      if (!d) {\n        return true; // No information in {a = a}\n      }\n      // var big\n      // var small\n      if (d < 0) {\n        // u1 less than u2\n        return this.replaceWith(u2, u1);\n      } else {\n        return this.replaceWith(u1, u2);\n      }\n    }\n  }, {\n    key: 'formula',\n    value: function formula(features) {\n      return new IndexedFormula(features);\n    }\n\n    /**\n     * Returns the number of statements contained in this IndexedFormula.\n     * (Getter proxy to this.statements).\n     * Usage:\n     *    ```\n     *    var kb = rdf.graph()\n     *    kb.length  // -> 0\n     *    ```\n     * @return {Number}\n     */\n\n  }, {\n    key: 'match',\n\n\n    /**\n     * Returns any quads matching the given arguments.\n     * Standard RDFJS Taskforce method for Source objects, implemented as an\n     * alias to `statementsMatching()`\n     * @method match\n     * @param subject {Node|String|Object}\n     * @param predicate {Node|String|Object}\n     * @param object {Node|String|Object}\n     * @param graph {NamedNode|String}\n     */\n    value: function match(subject, predicate, object, graph) {\n      return this.statementsMatching(Node.fromValue(subject), Node.fromValue(predicate), Node.fromValue(object), Node.fromValue(graph));\n    }\n\n    /**\n     * Find out whether a given URI is used as symbol in the formula\n     */\n\n  }, {\n    key: 'mentionsURI',\n    value: function mentionsURI(uri) {\n      var hash = '<' + uri + '>';\n      return !!this.subjectIndex[hash] || !!this.objectIndex[hash] || !!this.predicateIndex[hash];\n    }\n\n    // Existentials are BNodes - something exists without naming\n\n  }, {\n    key: 'newExistential',\n    value: function newExistential(uri) {\n      if (!uri) return this.bnode();\n      var x = this.sym(uri);\n      return this.declareExistential(x);\n    }\n  }, {\n    key: 'newPropertyAction',\n    value: function newPropertyAction(pred, action) {\n      // log.debug(\"newPropertyAction:  \"+pred)\n      var hash = pred.hashString();\n      if (!this.propertyActions[hash]) {\n        this.propertyActions[hash] = [];\n      }\n      this.propertyActions[hash].push(action);\n      // Now apply the function to to statements already in the store\n      var toBeFixed = this.statementsMatching(undefined, pred, undefined);\n      var done = false;\n      for (var i = 0; i < toBeFixed.length; i++) {\n        // NOT optimized - sort toBeFixed etc\n        done = done || action(this, toBeFixed[i].subject, pred, toBeFixed[i].object);\n      }\n      return done;\n    }\n\n    // Universals are Variables\n\n  }, {\n    key: 'newUniversal',\n    value: function newUniversal(uri) {\n      var x = this.sym(uri);\n      if (!this._universalVariables) this._universalVariables = [];\n      this._universalVariables.push(x);\n      return x;\n    }\n\n    // convenience function used by N3 parser\n\n  }, {\n    key: 'variable',\n    value: function variable(name) {\n      return new Variable(name);\n    }\n\n    /**\n     * Find an unused id for a file being edited: return a symbol\n     * (Note: Slow iff a lot of them -- could be O(log(k)) )\n     */\n\n  }, {\n    key: 'nextSymbol',\n    value: function nextSymbol(doc) {\n      for (var i = 0;; i++) {\n        var uri = doc.uri + '#n' + i;\n        if (!this.mentionsURI(uri)) return this.sym(uri);\n      }\n    }\n  }, {\n    key: 'query',\n    value: function query(myQuery, callback, fetcher, onDone) {\n      var indexedFormulaQuery = require('./query').indexedFormulaQuery;\n      return indexedFormulaQuery.call(this, myQuery, callback, fetcher, onDone);\n    }\n\n    /**\n     * Finds a statement object and removes it\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(st) {\n      if (st instanceof Array) {\n        for (var i = 0; i < st.length; i++) {\n          this.remove(st[i]);\n        }\n        return this;\n      }\n      if (st instanceof IndexedFormula) {\n        return this.remove(st.statements);\n      }\n      var sts = this.statementsMatching(st.subject, st.predicate, st.object, st.why);\n      if (!sts.length) {\n        throw new Error('Statement to be removed is not on store: ' + st);\n      }\n      this.removeStatement(sts[0]);\n      return this;\n    }\n\n    /**\n     * Removes all statemnts in a doc\n     */\n\n  }, {\n    key: 'removeDocument',\n    value: function removeDocument(doc) {\n      var sts = this.statementsMatching(undefined, undefined, undefined, doc).slice(); // Take a copy as this is the actual index\n      for (var i = 0; i < sts.length; i++) {\n        this.removeStatement(sts[i]);\n      }\n      return this;\n    }\n\n    /**\n     * remove all statements matching args (within limit) *\n     */\n\n  }, {\n    key: 'removeMany',\n    value: function removeMany(subj, pred, obj, why, limit) {\n      // log.debug(\"entering removeMany w/ subj,pred,obj,why,limit = \" + subj +\", \"+ pred+\", \" + obj+\", \" + why+\", \" + limit)\n      var sts = this.statementsMatching(subj, pred, obj, why, false);\n      // This is a subtle bug that occcured in updateCenter.js too.\n      // The fact is, this.statementsMatching returns this.whyIndex instead of a copy of it\n      // but for perfromance consideration, it's better to just do that\n      // so make a copy here.\n      var statements = [];\n      for (var i = 0; i < sts.length; i++) {\n        statements.push(sts[i]);\n      }if (limit) statements = statements.slice(0, limit);\n      for (i = 0; i < statements.length; i++) {\n        this.remove(statements[i]);\n      }\n    }\n  }, {\n    key: 'removeMatches',\n    value: function removeMatches(subject, predicate, object, why) {\n      this.removeStatements(this.statementsMatching(subject, predicate, object, why));\n      return this;\n    }\n\n    /**\n     * Remove a particular statement object from the store\n     *\n     * st    a statement which is already in the store and indexed.\n     *      Make sure you only use this for these.\n     *    Otherwise, you should use remove() above.\n     */\n\n  }, {\n    key: 'removeStatement',\n    value: function removeStatement(st) {\n      // log.debug(\"entering remove w/ st=\" + st)\n      var term = [st.subject, st.predicate, st.object, st.why];\n      for (var p = 0; p < 4; p++) {\n        var c = this.canon(term[p]);\n        var h = c.hashString();\n        if (!this.index[p][h]) {\n          // log.warn (\"Statement removal: no index '+p+': \"+st)\n        } else {\n          RDFArrayRemove(this.index[p][h], st);\n        }\n      }\n      RDFArrayRemove(this.statements, st);\n      return this;\n    }\n  }, {\n    key: 'removeStatements',\n    value: function removeStatements(sts) {\n      for (var i = 0; i < sts.length; i++) {\n        this.remove(sts[i]);\n      }\n      return this;\n    }\n\n    /**\n     * Replace big with small, obsoleted with obsoleting.\n     */\n\n  }, {\n    key: 'replaceWith',\n    value: function replaceWith(big, small) {\n      // log.debug(\"Replacing \"+big+\" with \"+small) // @@\n      var oldhash = big.hashString();\n      var newhash = small.hashString();\n      var moveIndex = function moveIndex(ix) {\n        var oldlist = ix[oldhash];\n        if (!oldlist) {\n          return; // none to move\n        }\n        var newlist = ix[newhash];\n        if (!newlist) {\n          ix[newhash] = oldlist;\n        } else {\n          ix[newhash] = oldlist.concat(newlist);\n        }\n        delete ix[oldhash];\n      };\n      // the canonical one carries all the indexes\n      for (var i = 0; i < 4; i++) {\n        moveIndex(this.index[i]);\n      }\n      this.redirections[oldhash] = small;\n      if (big.uri) {\n        // @@JAMBO: must update redirections,aliases from sub-items, too.\n        if (!this.aliases[newhash]) {\n          this.aliases[newhash] = [];\n        }\n        this.aliases[newhash].push(big); // Back link\n        if (this.aliases[oldhash]) {\n          for (i = 0; i < this.aliases[oldhash].length; i++) {\n            this.redirections[this.aliases[oldhash][i].hashString()] = small;\n            this.aliases[newhash].push(this.aliases[oldhash][i]);\n          }\n        }\n        this.add(small, this.sym('http://www.w3.org/2007/ont/link#uri'), big.uri);\n        // If two things are equal, and one is requested, we should request the other.\n        if (this.fetcher) {\n          this.fetcher.nowKnownAs(big, small);\n        }\n      }\n      moveIndex(this.classActions);\n      moveIndex(this.propertyActions);\n      // log.debug(\"Equate done. \"+big+\" to be known as \"+small)\n      return true; // true means the statement does not need to be put in\n    }\n\n    /**\n     * Return all equivalent URIs by which this is known\n     */\n\n  }, {\n    key: 'allAliases',\n    value: function allAliases(x) {\n      var a = this.aliases[this.canon(x).hashString()] || [];\n      a.push(this.canon(x));\n      return a;\n    }\n\n    /**\n     * Compare by canonical URI as smushed\n     */\n\n  }, {\n    key: 'sameThings',\n    value: function sameThings(x, y) {\n      if (x.sameTerm(y)) {\n        return true;\n      }\n      var x1 = this.canon(x);\n      //    alert('x1='+x1)\n      if (!x1) return false;\n      var y1 = this.canon(y);\n      //    alert('y1='+y1); //@@\n      if (!y1) return false;\n      return x1.uri === y1.uri;\n    }\n  }, {\n    key: 'setPrefixForURI',\n    value: function setPrefixForURI(prefix, nsuri) {\n      // TODO: This is a hack for our own issues, which ought to be fixed\n      // post-release\n      // See http://dig.csail.mit.edu/cgi-bin/roundup.cgi/$rdf/issue227\n      if (prefix === 'tab' && this.namespaces['tab']) {\n        return;\n      } // There are files around with long badly generated prefixes like this\n      if (prefix.slice(0, 2) === 'ns' || prefix.slice(0, 7) === 'default') {\n        return;\n      }\n      this.namespaces[prefix] = nsuri;\n    }\n\n    /**\n     * Return statements matching a pattern\n     * ALL CONVENIENCE LOOKUP FUNCTIONS RELY ON THIS!\n     */\n\n  }, {\n    key: 'statementsMatching',\n    value: function statementsMatching(subj, pred, obj, why, justOne) {\n      // log.debug(\"Matching {\"+subj+\" \"+pred+\" \"+obj+\"}\")\n      var pat = [subj, pred, obj, why];\n      var pattern = [];\n      var hash = [];\n      var wild = []; // wildcards\n      var given = []; // Not wild\n      var p;\n      var list;\n      for (p = 0; p < 4; p++) {\n        pattern[p] = this.canon(Node.fromValue(pat[p]));\n        if (!pattern[p]) {\n          wild.push(p);\n        } else {\n          given.push(p);\n          hash[p] = pattern[p].hashString();\n        }\n      }\n      if (given.length === 0) {\n        return this.statements;\n      }\n      if (given.length === 1) {\n        // Easy too, we have an index for that\n        p = given[0];\n        list = this.index[p][hash[p]];\n        if (list && justOne) {\n          if (list.length > 1) {\n            list = list.slice(0, 1);\n          }\n        }\n        list = list || [];\n        return list;\n      }\n      // Now given.length is 2, 3 or 4.\n      // We hope that the scale-free nature of the data will mean we tend to get\n      // a short index in there somewhere!\n      var best = 1e10; // really bad\n      var best_i;\n      var i;\n      for (i = 0; i < given.length; i++) {\n        p = given[i]; // Which part we are dealing with\n        list = this.index[p][hash[p]];\n        if (!list) {\n          return []; // No occurrences\n        }\n        if (list.length < best) {\n          best = list.length;\n          best_i = i; // (not p!)\n        }\n      }\n      // Ok, we have picked the shortest index but now we have to filter it\n      var best_p = given[best_i];\n      var possibles = this.index[best_p][hash[best_p]];\n      var check = given.slice(0, best_i).concat(given.slice(best_i + 1)); // remove best_i\n      var results = [];\n      var parts = ['subject', 'predicate', 'object', 'why'];\n      for (var j = 0; j < possibles.length; j++) {\n        var st = possibles[j];\n\n        for (i = 0; i < check.length; i++) {\n          // for each position to be checked\n          p = check[i];\n          if (!this.canon(st[parts[p]]).sameTerm(pattern[p])) {\n            st = null;\n            break;\n          }\n        }\n        if (st != null) {\n          results.push(st);\n          if (justOne) break;\n        }\n      }\n      return results;\n    }\n\n    /**\n     *  A list of all the URIs by which this thing is known\n     */\n\n  }, {\n    key: 'uris',\n    value: function uris(term) {\n      var cterm = this.canon(term);\n      var terms = this.aliases[cterm.hashString()];\n      if (!cterm.uri) return [];\n      var res = [cterm.uri];\n      if (terms) {\n        for (var i = 0; i < terms.length; i++) {\n          res.push(terms[i].uri);\n        }\n      }\n      return res;\n    }\n  }, {\n    key: 'length',\n    get: function get() {\n      return this.statements.length;\n    }\n  }]);\n\n  return IndexedFormula;\n}(Formula);\n\nexports.default = IndexedFormula;\n\n\nIndexedFormula.handleRDFType = handleRDFType;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rdflib/lib/indexed-formula.js\n// module id = 4\n// module chunks = 0","'use strict';\n\n/**\n * Utility functions for $rdf\n * @module util\n */\nvar docpart = require('./uri').docpart;\nvar log = require('./log');\nvar NamedNode = require('./named-node');\n\nmodule.exports.AJAR_handleNewTerm = ajarHandleNewTerm;\nmodule.exports.ArrayIndexOf = arrayIndexOf;\nmodule.exports.callbackify = callbackify;\nmodule.exports.dtstamp = dtstamp;\nmodule.exports.DOMParserFactory = domParser;\nmodule.exports.domToString = domToString;\nmodule.exports.dumpNode = dumpNode;\nmodule.exports.getHTTPHeaders = getHTTPHeaders;\nmodule.exports.heavyCompare = heavyCompare;\nmodule.exports.heavyCompareSPO = heavyCompareSPO;\nmodule.exports.output = output;\nmodule.exports.parseXML = parseXML;\nmodule.exports.RDFArrayRemove = rdfArrayRemove;\nmodule.exports.stackString = stackString;\nmodule.exports.string_startswith = stringStartsWith;\nmodule.exports.string = {};\nmodule.exports.string.template = stringTemplate;\nmodule.exports.uri = require('./uri'); // TODO: Remove this mixed usage\n// module.exports.variablesIn = variablesIn\nmodule.exports.XMLHTTPFactory = xhr;\nmodule.exports.log = log;\n\nmodule.exports.mediaTypeClass = function (mediaType) {\n  return new NamedNode('http://www.w3.org/ns/iana/media-types/' + mediaType + '#Resource');\n};\n\n/**\n * Loads ontologies of the data we load (this is the callback from the kb to\n * the fetcher). Exports as `AJAR_handleNewTerm`\n */\nfunction ajarHandleNewTerm(kb, p, requestedBy) {\n  var sf = null;\n  if (typeof kb.fetcher !== 'undefined') {\n    sf = kb.fetcher;\n  } else {\n    return;\n  }\n  if (p.termType !== 'NamedNode') return;\n  var docuri = docpart(p.uri);\n  var fixuri;\n  if (p.uri.indexOf('#') < 0) {\n    // No hash\n    // @@ major hack for dbpedia Categories, which spread indefinitely\n    if (stringStartsWith(p.uri, 'http://dbpedia.org/resource/Category:')) return;\n\n    /*\n      if (string_startswith(p.uri, 'http://xmlns.com/foaf/0.1/')) {\n      fixuri = \"http://dig.csail.mit.edu/2005/ajar/ajaw/test/foaf\"\n      // should give HTTP 303 to ontology -- now is :-)\n      } else\n    */\n    if (stringStartsWith(p.uri, 'http://purl.org/dc/elements/1.1/') || stringStartsWith(p.uri, 'http://purl.org/dc/terms/')) {\n      fixuri = 'http://dublincore.org/2005/06/13/dcq';\n      // dc fetched multiple times\n    } else if (stringStartsWith(p.uri, 'http://xmlns.com/wot/0.1/')) {\n      fixuri = 'http://xmlns.com/wot/0.1/index.rdf';\n    } else if (stringStartsWith(p.uri, 'http://web.resource.org/cc/')) {\n      //            log.warn(\"creative commons links to html instead of rdf. doesn't seem to content-negotiate.\")\n      fixuri = 'http://web.resource.org/cc/schema.rdf';\n    }\n  }\n  if (fixuri) {\n    docuri = fixuri;\n  }\n  if (sf && sf.getState(docuri) !== 'unrequested') return;\n\n  if (fixuri) {\n    // only give warning once: else happens too often\n    log.warn('Assuming server still broken, faking redirect of <' + p.uri + '> to <' + docuri + '>');\n  }\n  sf.requestURI(docuri, requestedBy);\n}\n\n/**\n * Exports as `ArrayIndexOf`.\n */\nfunction arrayIndexOf(arr, item, i) {\n  i || (i = 0);\n  var length = arr.length;\n  if (i < 0) i = length + i;\n  for (; i < length; i++) {\n    if (arr[i] === item) {\n      return i;\n    }\n  }\n  return -1;\n}\n\n/**\n * Adds callback functionality to an object.\n * Callback functions are indexed by a 'hook' string.\n * They return true if they want to be called again.\n * @method callbackify\n * @param obj {Object}\n * @param callbacks {Array<Function>}\n */\nfunction callbackify(obj, callbacks) {\n  obj.callbacks = {};\n  for (var x = callbacks.length - 1; x >= 0; x--) {\n    obj.callbacks[callbacks[x]] = [];\n  }\n\n  obj.addHook = function (hook) {\n    if (!obj.callbacks[hook]) {\n      obj.callbacks[hook] = [];\n    }\n  };\n\n  obj.addCallback = function (hook, func) {\n    obj.callbacks[hook].push(func);\n  };\n\n  obj.removeCallback = function (hook, funcName) {\n    for (var i = 0; i < obj.callbacks[hook].length; i++) {\n      if (obj.callbacks[hook][i].name === funcName) {\n        obj.callbacks[hook].splice(i, 1);\n        return true;\n      }\n    }\n    return false;\n  };\n\n  obj.insertCallback = function (hook, func) {\n    obj.callbacks[hook].unshift(func);\n  };\n\n  obj.fireCallbacks = function (hook, args) {\n    var newCallbacks = [];\n    var replaceCallbacks = [];\n    var len = obj.callbacks[hook].length;\n    var x;\n    // log.info('!@$ Firing '+hook+' call back with length'+len)\n    for (x = len - 1; x >= 0; x--) {\n      // log.info('@@ Firing '+hook+' callback '+ obj.callbacks[hook][x])\n      if (obj.callbacks[hook][x].apply(obj, args)) {\n        newCallbacks.push(obj.callbacks[hook][x]);\n      }\n    }\n\n    for (x = newCallbacks.length - 1; x >= 0; x--) {\n      replaceCallbacks.push(newCallbacks[x]);\n    }\n\n    for (x = len; x < obj.callbacks[hook].length; x++) {\n      replaceCallbacks.push(obj.callbacks[hook][x]);\n    }\n\n    obj.callbacks[hook] = replaceCallbacks;\n  };\n}\n\n/**\n * Returns a DOM parser based on current runtime environment.\n * Exports as `DOMParserFactory`\n */\nfunction domParser() {\n  if (tabulator && tabulator.isExtension) {\n    return Components.classes['@mozilla.org/xmlextras/domparser;1'].getService(Components.interfaces.nsIDOMParser);\n  } else if (window.DOMParser) {\n    return new DOMParser();\n  } else if (window.ActiveXObject) {\n    return new ActiveXObject('Microsoft.XMLDOM');\n  } else {\n    return false;\n  }\n}\n\n// From https://github.com/linkeddata/dokieli\nfunction domToString(node, options) {\n  options = options || {};\n  var selfClosing = [];\n  if ('selfClosing' in options) {\n    options.selfClosing.split(' ').forEach(function (n) {\n      selfClosing[n] = true;\n    });\n  }\n  var skipAttributes = [];\n  if ('skipAttributes' in options) {\n    options.skipAttributes.split(' ').forEach(function (n) {\n      skipAttributes[n] = true;\n    });\n  }\n  return dumpNode(node, options, selfClosing, skipAttributes);\n}\n\nfunction dumpNode(node, options, selfClosing, skipAttributes) {\n  var i;\n  var out = '';\n  var noEsc = [false];\n  if (typeof node.nodeType === 'undefined') return out;\n  if (node.nodeType === 1) {\n    if (node.hasAttribute('class') && 'classWithChildText' in options && node.matches(options.classWithChildText.class)) {\n      out += node.querySelector(options.classWithChildText.element).textContent;\n    } else if (!('skipNodeWithClass' in options && node.matches('.' + options.skipNodeWithClass))) {\n      var ename = node.nodeName.toLowerCase();\n      out += '<' + ename;\n\n      var attrList = [];\n      for (i = node.attributes.length - 1; i >= 0; i--) {\n        var atn = node.attributes[i];\n        if (skipAttributes.length > 0 && skipAttributes[atn.name]) continue;\n        if (/^\\d+$/.test(atn.name)) continue;\n        if (atn.name === 'class' && 'replaceClassItemWith' in options && atn.value.split(' ').indexOf(options.replaceClassItemWith.source) > -1) {\n          var re = new RegExp(options.replaceClassItemWith.source, 'g');\n          atn.value = atn.value.replace(re, options.replaceClassItemWith.target).trim();\n        }\n        if (!(atn.name === 'class' && 'skipClassWithValue' in options && options.skipClassWithValue === atn.value)) {\n          attrList.push(atn.name + '=\\'' + atn.value.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/'/g, '&quot;') + '\\'');\n        }\n      }\n      if (attrList.length > 0) {\n        if ('sortAttributes' in options && options.sortAttributes) {\n          attrList.sort(function (a, b) {\n            return a.toLowerCase().localeCompare(b.toLowerCase());\n          });\n        }\n        out += ' ' + attrList.join(' ');\n      }\n      if (selfClosing[ename]) {\n        out += ' />';\n      } else {\n        out += '>';\n        out += ename === 'html' ? '\\n  ' : '';\n        noEsc.push(ename === 'style' || ename === 'script');\n        for (i = 0; i < node.childNodes.length; i++) {\n          out += dumpNode(node.childNodes[i]);\n        }noEsc.pop();\n        out += ename === 'body' ? '</' + ename + '>' + '\\n' : '</' + ename + '>';\n      }\n    }\n  } else if (node.nodeType === 8) {\n    // FIXME: If comments are not tabbed in source, a new line is not prepended\n    out += '<!--' + node.nodeValue + '-->';\n  } else if (node.nodeType === 3 || node.nodeType === 4) {\n    // XXX: Remove new lines which were added after DOM ready\n    var nl = node.nodeValue.replace(/\\n+$/, '');\n    out += noEsc[noEsc.length - 1] ? nl : nl.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n  } else {\n    console.log('Warning; Cannot handle serialising nodes of type: ' + node.nodeType);\n    console.log(node);\n  }\n  return out;\n}\n\nfunction dtstamp() {\n  var now = new Date();\n  var year = now.getYear() + 1900;\n  var month = now.getMonth() + 1;\n  var day = now.getDate();\n  var hour = now.getUTCHours();\n  var minute = now.getUTCMinutes();\n  var second = now.getSeconds();\n  if (month < 10) month = '0' + month;\n  if (day < 10) day = '0' + day;\n  if (hour < 10) hour = '0' + hour;\n  if (minute < 10) minute = '0' + minute;\n  if (second < 10) second = '0' + second;\n  return year + '-' + month + '-' + day + 'T' + hour + ':' + minute + ':' + second + 'Z';\n}\n\n/**\n * Returns a hashmap of HTTP headers and their values.\n * @@ Bug: Assumes that each header only occurs once.\n * Also note that a , in a header value is just the same as having two headers.\n */\nfunction getHTTPHeaders(xhr) {\n  var lines = xhr.getAllResponseHeaders().split('\\n');\n  var headers = {};\n  var last;\n  for (var x = 0; x < lines.length; x++) {\n    if (lines[x].length > 0) {\n      var pair = lines[x].split(': ');\n      if (typeof pair[1] === 'undefined') {\n        // continuation\n        headers[last] += '\\n' + pair[0];\n      } else {\n        last = pair[0].toLowerCase();\n        headers[last] = pair[1];\n      }\n    }\n  }\n  return headers;\n}\n\n/**\n * Compares statements (heavy comparison for repeatable canonical ordering)\n */\nfunction heavyCompare(x, y, g) {\n  var nonBlank = function nonBlank(x) {\n    return x.termType === 'BlankNode' ? null : x;\n  };\n  var signature = function signature(b) {\n    var lis = g.statementsMatching(x).map(function (st) {\n      return '' + nonBlank(st.subject) + ' ' + nonBlank(st.predicate) + ' ' + nonBlank(st.object);\n    }).concat(g.statementsMatching(undefined, undefined, x).map(function (st) {\n      return '' + nonBlank(st.subject) + ' ' + nonBlank(st.predicate) + ' ' + nonBlank(st.object);\n    }));\n    lis.sort();\n    return lis.join('\\n');\n  };\n  if (x.termType === 'BlankNode' || y.termType === 'BlankNode') {\n    if (x.compareTerm(y) === 0) return 0; // Same\n    if (signature(x) > signature(y)) return +1;\n    if (signature(x) < signature(y)) return -1;\n    return x.compareTerm(y); // Too bad -- this order not canonical.\n    // throw \"different bnodes indistinquishable for sorting\"\n  } else {\n    return x.compareTerm(y);\n  }\n}\n\nfunction heavyCompareSPO(x, y, g) {\n  var d = heavyCompare(x.subject, y.subject, g);\n  if (d) return d;\n  d = heavyCompare(x.predicate, y.predicate, g);\n  if (d) return d;\n  return heavyCompare(x.object, y.object, g);\n}\n\n/**\n * Defines a simple debugging function\n * @method output\n * @param o {String}\n */\nfunction output(o) {\n  var k = document.createElement('div');\n  k.textContent = o;\n  document.body.appendChild(k);\n}\n\n/**\n * Returns a DOM from parsex XML.\n */\nfunction parseXML(str, options) {\n  var dparser;\n  options = options || {};\n  if (typeof tabulator !== 'undefined' && tabulator.isExtension) {\n    dparser = Components.classes['@mozilla.org/xmlextras/domparser;1'].getService(Components.interfaces.nsIDOMParser);\n  } else if (typeof module !== 'undefined' && module && module.exports) {\n    // Node.js\n    // var libxmljs = require('libxmljs'); // Was jsdom before 2012-01 then libxmljs but that nonstandard\n    // return libxmljs.parseXmlString(str)\n\n    // var jsdom = require('jsdom');   2012-01 though 2015-08 no worky with new Node\n    // var dom = jsdom.jsdom(str, undefined, {} );// html, level, options\n\n    var DOMParser = require('xmldom').DOMParser; // 2015-08 on https://github.com/jindw/xmldom\n    var dom = new DOMParser().parseFromString(str, options.contentType || 'application/xhtml+xml');\n    return dom;\n  } else {\n    if (typeof window !== 'undefined' && window.DOMParser) {\n      dparser = new window.DOMParser(); // seems to actually work\n    } else {\n      dparser = new DOMParser(); // Doc says this works\n    }\n  }\n  return dparser.parseFromString(str, 'application/xml');\n}\n\n/**\n * Removes all statements equal to x from a\n * Exports as `RDFArrayRemove`\n */\nfunction rdfArrayRemove(a, x) {\n  for (var i = 0; i < a.length; i++) {\n    // TODO: This used to be the following, which didnt always work..why\n    // if(a[i] === x)\n    if (a[i].subject.sameTerm(x.subject) && a[i].predicate.sameTerm(x.predicate) && a[i].object.sameTerm(x.object) && a[i].why.sameTerm(x.why)) {\n      a.splice(i, 1);\n      return;\n    }\n  }\n  throw new Error('RDFArrayRemove: Array did not contain ' + x + ' ' + x.why);\n}\n\nfunction stringStartsWith(str, pref) {\n  // missing library routines\n  return str.slice(0, pref.length) === pref;\n}\n\n/**\n * C++, python style %s -> subs\n */\nfunction stringTemplate(base, subs) {\n  var baseA = base.split('%s');\n  var result = '';\n  for (var i = 0; i < subs.length; i++) {\n    subs[i] += '';\n    result += baseA[i] + subs[i];\n  }\n  return result + baseA.slice(subs.length).join();\n}\n\n// Stack dump on errors - to pass errors back\n\nfunction stackString(e) {\n  var str = '' + e + '\\n';\n  if (!e.stack) {\n    return str + 'No stack available.\\n';\n  }\n  var lines = e.stack.toString().split('\\n');\n  var toprint = [];\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n    if (line.indexOf('ecmaunit.js') > -1) {\n      // remove useless bit of traceback\n      break;\n    }\n    if (line.charAt(0) == '(') {\n      line = 'function' + line;\n    }\n    var chunks = line.split('@');\n    toprint.push(chunks);\n  }\n  // toprint.reverse();  No - I prefer the latest at the top by the error message -tbl\n\n  for (var i = 0; i < toprint.length; i++) {\n    str += '  ' + toprint[i][1] + '\\n    ' + toprint[i][0];\n  }\n  return str;\n}\n\n/**\n * Finds the variables in a graph (shallow).\n * Note: UNUSED.\n */\n// function variablesIn (g) {\n//   for (var i = 0; i < g.statements.length; i++) {\n//     var st = g.statatements[i]\n//     var vars = {}\n//     if (st.subject instanceof $rdf.Variable) {\n//       vars[st.subject.toNT()] = true\n//     }\n//     if (st.predicate instanceof $rdf.Variable) {\n//       vars[st.predicate.toNT()] = true\n//     }\n//     if (st.object instanceof $rdf.Variable) {\n//       vars[st.object.toNT()] = true\n//     }\n//   }\n//   return vars\n// }\n\n/**\n * Returns an XMLHttpRequest object for the appropriate current runtime\n * environment. Exports as `XMLHTTPFactory`\n */\nfunction xhr() {\n  var XMLHttpRequest;\n  // Running inside the Tabulator Firefox extension\n  if (typeof tabulator !== 'undefined' && tabulator.isExtension) {\n    // Cannot use XMLHttpRequest natively, must request it through SDK\n    return Components.classes['@mozilla.org/xmlextras/xmlhttprequest;1'].createInstance().QueryInterface(Components.interfaces.nsIXMLHttpRequest);\n  } else if (typeof window !== 'undefined' && 'XMLHttpRequest' in window) {\n    // Running inside the browser\n    XMLHttpRequest = window.XMLHttpRequest;\n    return new XMLHttpRequest();\n  } else if (typeof module !== 'undefined' && module && module.exports) {\n    // Running in Node.js\n    XMLHttpRequest = require('xmlhttprequest').XMLHttpRequest;\n    return new XMLHttpRequest();\n  } else if (window.ActiveXObject) {\n    try {\n      return new ActiveXObject('Msxml2.XMLHTTP');\n    } catch (e) {\n      return new ActiveXObject('Microsoft.XMLHTTP');\n    }\n  } else {\n    return false;\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rdflib/lib/util.js\n// module id = 5\n// module chunks = 0","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 6\n// module chunks = 0","'use strict';\n\n/*\n * Implements URI-specific functions\n *\n * See RFC 2386\n *\n * See also:\n *   http://www.w3.org/2005/10/ajaw/uri.js\n *   http://www.w3.org/2000/10/swap/uripath.py\n *\n */\nvar alert = alert || console.log;\n\nmodule.exports.docpart = docpart;\nmodule.exports.document = document;\nmodule.exports.hostpart = hostpart;\nmodule.exports.join = join;\nmodule.exports.protocol = protocol;\nmodule.exports.refTo = refTo;\n\nvar NamedNode = require('./named-node');\n\nfunction docpart(uri) {\n  var i;\n  i = uri.indexOf('#');\n  if (i < 0) {\n    return uri;\n  } else {\n    return uri.slice(0, i);\n  }\n}\n\nfunction document(x) {\n  return new NamedNode(docpart(x.uri));\n}\n\nfunction hostpart(u) {\n  var m = /[^\\/]*\\/\\/([^\\/]*)\\//.exec(u);\n  if (m) {\n    return m[1];\n  } else {\n    return '';\n  }\n}\n\nfunction join(given, base) {\n  var baseColon, baseScheme, baseSingle;\n  var colon, lastSlash, path;\n  var baseHash = base.indexOf('#');\n  if (baseHash > 0) {\n    base = base.slice(0, baseHash);\n  }\n  if (given.length === 0) {\n    return base;\n  }\n  if (given.indexOf('#') === 0) {\n    return base + given;\n  }\n  colon = given.indexOf(':');\n  if (colon >= 0) {\n    return given;\n  }\n  baseColon = base.indexOf(':');\n  if (base.length === 0) {\n    return given;\n  }\n  if (baseColon < 0) {\n    alert('Invalid base: ' + base + ' in join with given: ' + given);\n    return given;\n  }\n  baseScheme = base.slice(0, +baseColon + 1 || 9e9);\n  if (given.indexOf('//') === 0) {\n    return baseScheme + given;\n  }\n  if (base.indexOf('//', baseColon) === baseColon + 1) {\n    baseSingle = base.indexOf('/', baseColon + 3);\n    if (baseSingle < 0) {\n      if (base.length - baseColon - 3 > 0) {\n        return base + '/' + given;\n      } else {\n        return baseScheme + given;\n      }\n    }\n  } else {\n    baseSingle = base.indexOf('/', baseColon + 1);\n    if (baseSingle < 0) {\n      if (base.length - baseColon - 1 > 0) {\n        return base + '/' + given;\n      } else {\n        return baseScheme + given;\n      }\n    }\n  }\n  if (given.indexOf('/') === 0) {\n    return base.slice(0, baseSingle) + given;\n  }\n  path = base.slice(baseSingle);\n  lastSlash = path.lastIndexOf('/');\n  if (lastSlash < 0) {\n    return baseScheme + given;\n  }\n  if (lastSlash >= 0 && lastSlash < path.length - 1) {\n    path = path.slice(0, +lastSlash + 1 || 9e9);\n  }\n  path += given;\n  while (path.match(/[^\\/]*\\/\\.\\.\\//)) {\n    path = path.replace(/[^\\/]*\\/\\.\\.\\//, '');\n  }\n  path = path.replace(/\\.\\//g, '');\n  path = path.replace(/\\/\\.$/, '/');\n  return base.slice(0, baseSingle) + path;\n}\n\nfunction protocol(uri) {\n  var i;\n  i = uri.indexOf(':');\n  if (i < 0) {\n    return null;\n  } else {\n    return uri.slice(0, i);\n  }\n}\n\nfunction refTo(base, uri) {\n  var c, i, k, l, len, len1, n, o, p, q, ref, ref1, s;\n  var commonHost = new RegExp('^[-_a-zA-Z0-9.]+:(//[^/]*)?/[^/]*$');\n  if (!base) {\n    return uri;\n  }\n  if (base === uri) {\n    return '';\n  }\n  for (i = o = 0, len = uri.length; o < len; i = ++o) {\n    c = uri[i];\n    if (c !== base[i]) {\n      break;\n    }\n  }\n  if (base.slice(0, i).match(commonHost)) {\n    k = uri.indexOf('//');\n    if (k < 0) {\n      k = -2;\n    }\n    l = uri.indexOf('/', k + 2);\n    if (uri[l + 1] !== '/' && base[l + 1] !== '/' && uri.slice(0, l) === base.slice(0, l)) {\n      return uri.slice(l);\n    }\n  }\n  if (uri[i] === '#' && base.length === i) {\n    return uri.slice(i);\n  }\n  while (i > 0 && uri[i - 1] !== '/') {\n    i--;\n  }\n  if (i < 3) {\n    return uri;\n  }\n  if (base.indexOf('//', i - 2) > 0 || uri.indexOf('//', i - 2) > 0) {\n    return uri;\n  }\n  if (base.indexOf(':', i) > 0) {\n    return uri;\n  }\n  n = 0;\n  ref = base.slice(i);\n  for (p = 0, len1 = ref.length; p < len1; p++) {\n    c = ref[p];\n    if (c === '/') {\n      n++;\n    }\n  }\n  if (n === 0 && i < uri.length && uri[i] === '#') {\n    return './' + uri.slice(i);\n  }\n  if (n === 0 && i === uri.length) {\n    return './';\n  }\n  s = '';\n  if (n > 0) {\n    for (q = 1, ref1 = n; ref1 >= 1 ? q <= ref1 : q >= ref1; ref1 >= 1 ? ++q : --q) {\n      s += '../';\n    }\n  }\n  return s + uri.slice(i);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rdflib/lib/uri.js\n// module id = 7\n// module chunks = 0","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ClassOrder = require('./class-order');\nvar Node = require('./node');\n\n/**\n * @class NamedNode\n * @extends Node\n */\n\nvar NamedNode = function (_Node) {\n  _inherits(NamedNode, _Node);\n\n  /**\n   * @constructor\n   * @param iri {String}\n   */\n  function NamedNode(iri) {\n    _classCallCheck(this, NamedNode);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(NamedNode).call(this));\n\n    _this.termType = NamedNode.termType;\n    if (iri.indexOf(':') < 0) {\n      console.log('Warning: NamedNode IRI \"' + iri + '\" must be absolute. Relative URIs will fail in future versions');\n    }\n    _this.value = iri;\n    return _this;\n  }\n  /**\n   * Returns an $rdf node for the containing directory, ending in slash.\n   */\n\n\n  _createClass(NamedNode, [{\n    key: 'dir',\n    value: function dir() {\n      var str = this.uri.split('#')[0];\n      var p = str.slice(0, -1).lastIndexOf('/');\n      var q = str.indexOf('//');\n      if (q >= 0 && p < q + 2 || p < 0) return null;\n      return new NamedNode(str.slice(0, p + 1));\n    }\n    /**\n     * Returns an NN for the whole web site, ending in slash.\n     * Contrast with the \"origin\" which does NOT have a trailing slash\n     */\n\n  }, {\n    key: 'site',\n    value: function site() {\n      var str = this.uri.split('#')[0];\n      var p = str.indexOf('//');\n      if (p < 0) throw new Error('This URI does not have a web site part (origin)');\n      var q = str.indexOf('/', p + 2);\n      if (q < 0) throw new Error('This URI does not have a web site part. (origin)');\n      return new NamedNode(str.slice(0, q + 1));\n    }\n  }, {\n    key: 'doc',\n    value: function doc() {\n      if (this.uri.indexOf('#') < 0) {\n        return this;\n      } else {\n        return new NamedNode(this.uri.split('#')[0]);\n      }\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return '<' + this.uri + '>';\n    }\n\n    /**\n     * Legacy getter and setter alias, node.uri\n     */\n\n  }, {\n    key: 'uri',\n    get: function get() {\n      return this.value;\n    },\n    set: function set(uri) {\n      this.value = uri;\n    }\n  }], [{\n    key: 'fromValue',\n    value: function fromValue(value) {\n      if (typeof value === 'undefined' || value === null) {\n        return value;\n      }\n      var isNode = value && value.termType;\n      if (isNode) {\n        return value;\n      }\n      return new NamedNode(value);\n    }\n  }]);\n\n  return NamedNode;\n}(Node);\n\nNamedNode.termType = 'NamedNode';\nNamedNode.prototype.classOrder = ClassOrder['NamedNode'];\nNamedNode.prototype.isVar = 0;\n\nmodule.exports = NamedNode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rdflib/lib/named-node.js\n// module id = 8\n// module chunks = 0","'use strict';\n\nvar ClassOrder = {\n  'Literal': 1,\n  'Collection': 3,\n  'Formula': 4,\n  'NamedNode': 5,\n  'BlankNode': 6,\n  'Variable': 7\n};\n\nmodule.exports = ClassOrder;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rdflib/lib/class-order.js\n// module id = 9\n// module chunks = 0","'use strict';\n/**\n * The superclass of all RDF Statement objects, that is\n * NamedNode, Literal, BlankNode, etc.\n * @class Node\n */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Node = function () {\n  function Node() {\n    _classCallCheck(this, Node);\n  }\n\n  _createClass(Node, [{\n    key: 'substitute',\n    value: function substitute(bindings) {\n      console.log('@@@ node substitute' + this);\n      return this;\n    }\n  }, {\n    key: 'compareTerm',\n    value: function compareTerm(other) {\n      if (this.classOrder < other.classOrder) {\n        return -1;\n      }\n      if (this.classOrder > other.classOrder) {\n        return +1;\n      }\n      if (this.value < other.value) {\n        return -1;\n      }\n      if (this.value > other.value) {\n        return +1;\n      }\n      return 0;\n    }\n  }, {\n    key: 'equals',\n    value: function equals(other) {\n      if (!other) {\n        return false;\n      }\n      return this.termType === other.termType && this.value === other.value;\n    }\n  }, {\n    key: 'hashString',\n    value: function hashString() {\n      return this.toCanonical();\n    }\n  }, {\n    key: 'sameTerm',\n    value: function sameTerm(other) {\n      return this.equals(other);\n    }\n  }, {\n    key: 'toCanonical',\n    value: function toCanonical() {\n      return this.toNT();\n    }\n  }, {\n    key: 'toNT',\n    value: function toNT() {\n      return this.toString();\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      throw new Error('Node.toString() is abstract - see the subclasses instead');\n    }\n  }]);\n\n  return Node;\n}();\n\nmodule.exports = Node;\n\n/**\n * Creates an RDF Node from a native javascript value.\n * RDF Nodes are returned unchanged, undefined returned as itself.\n * @method fromValue\n * @static\n * @param value {Node|Date|String|Number|Boolean|Undefined}\n * @return {Node|Collection}\n */\nNode.fromValue = function fromValue(value) {\n  var Collection = require('./collection');\n  var Literal = require('./literal');\n  var NamedNode = require('./named-node');\n  if (typeof value === 'undefined' || value === null) {\n    return value;\n  }\n  var isNode = value && value.termType;\n  if (isNode) {\n    // a Node subclass or a Collection\n    return value;\n  }\n  if (Array.isArray(value)) {\n    return new Collection(value);\n  }\n  return Literal.fromValue(value);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rdflib/lib/node.js\n// module id = 10\n// module chunks = 0","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar BlankNode = require('./blank-node');\nvar ClassOrder = require('./class-order');\nvar Node = require('./node');\n\nvar Collection = function (_Node) {\n  _inherits(Collection, _Node);\n\n  function Collection(initial) {\n    _classCallCheck(this, Collection);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Collection).call(this));\n\n    _this.termType = Collection.termType;\n    _this.id = BlankNode.nextId++;\n    _this.elements = [];\n    _this.closed = false;\n    if (initial && initial.length > 0) {\n      initial.forEach(function (element) {\n        _this.elements.push(Node.fromValue(element));\n      });\n    }\n    return _this;\n  }\n\n  _createClass(Collection, [{\n    key: 'append',\n    value: function append(element) {\n      return this.elements.push(element);\n    }\n  }, {\n    key: 'close',\n    value: function close() {\n      this.closed = true;\n      return this.closed;\n    }\n  }, {\n    key: 'shift',\n    value: function shift() {\n      return this.elements.shift();\n    }\n  }, {\n    key: 'substitute',\n    value: function substitute(bindings) {\n      var elementsCopy = this.elements.map(function (ea) {\n        ea.substitute(bindings);\n      });\n      return new Collection(elementsCopy);\n    }\n  }, {\n    key: 'toNT',\n    value: function toNT() {\n      return BlankNode.NTAnonymousNodePrefix + this.id;\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return '(' + this.elements.join(' ') + ')';\n    }\n  }, {\n    key: 'unshift',\n    value: function unshift(element) {\n      return this.elements.unshift(element);\n    }\n  }]);\n\n  return Collection;\n}(Node);\n\nCollection.termType = 'collection';\nCollection.prototype.classOrder = ClassOrder['Collection'];\nCollection.prototype.compareTerm = BlankNode.prototype.compareTerm;\nCollection.prototype.isVar = 0;\n\nmodule.exports = Collection;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rdflib/lib/collection.js\n// module id = 11\n// module chunks = 0","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ClassOrder = require('./class-order');\nvar Node = require('./node');\n\nvar BlankNode = function (_Node) {\n  _inherits(BlankNode, _Node);\n\n  function BlankNode(id) {\n    _classCallCheck(this, BlankNode);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(BlankNode).call(this));\n\n    _this.termType = BlankNode.termType;\n    _this.id = BlankNode.nextId++;\n    _this.value = id || _this.id.toString();\n    return _this;\n  }\n\n  _createClass(BlankNode, [{\n    key: 'compareTerm',\n    value: function compareTerm(other) {\n      if (this.classOrder < other.classOrder) {\n        return -1;\n      }\n      if (this.classOrder > other.classOrder) {\n        return +1;\n      }\n      if (this.id < other.id) {\n        return -1;\n      }\n      if (this.id > other.id) {\n        return +1;\n      }\n      return 0;\n    }\n  }, {\n    key: 'copy',\n    value: function copy(formula) {\n      // depends on the formula\n      var bnodeNew = new BlankNode();\n      formula.copyTo(this, bnodeNew);\n      return bnodeNew;\n    }\n  }, {\n    key: 'toCanonical',\n    value: function toCanonical() {\n      return '_:' + this.value;\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return BlankNode.NTAnonymousNodePrefix + this.id;\n    }\n  }]);\n\n  return BlankNode;\n}(Node);\n\nBlankNode.nextId = 0;\nBlankNode.termType = 'BlankNode';\nBlankNode.NTAnonymousNodePrefix = '_:n';\nBlankNode.prototype.classOrder = ClassOrder['BlankNode'];\nBlankNode.prototype.isBlank = 1;\nBlankNode.prototype.isVar = 1;\n\nmodule.exports = BlankNode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rdflib/lib/blank-node.js\n// module id = 12\n// module chunks = 0","'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ClassOrder = require('./class-order');\nvar NamedNode = require('./named-node');\nvar Node = require('./node');\nvar XSD = require('./xsd');\n\nvar Literal = function (_Node) {\n  _inherits(Literal, _Node);\n\n  function Literal(value, language, datatype) {\n    _classCallCheck(this, Literal);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Literal).call(this));\n\n    _this.termType = Literal.termType;\n    _this.value = value;\n    if (language) {\n      _this.lang = language;\n      datatype = XSD.langString;\n    }\n    // If not specified, a literal has the implied XSD.string default datatype\n    if (datatype) {\n      _this.datatype = NamedNode.fromValue(datatype);\n    }\n    return _this;\n  }\n\n  _createClass(Literal, [{\n    key: 'copy',\n    value: function copy() {\n      return new Literal(this.value, this.lang, this.datatype);\n    }\n  }, {\n    key: 'equals',\n    value: function equals(other) {\n      if (!other) {\n        return false;\n      }\n      return this.termType === other.termType && this.value === other.value && this.language === other.language && (!this.datatype && !other.datatype || this.datatype && this.datatype.equals(other.datatype));\n    }\n  }, {\n    key: 'toNT',\n    value: function toNT() {\n      if (typeof this.value === 'number') {\n        return this.toString();\n      } else if (typeof this.value !== 'string') {\n        throw new Error('Value of RDF literal is not string or number: ' + this.value);\n      }\n      var str = this.value;\n      str = str.replace(/\\\\/g, '\\\\\\\\');\n      str = str.replace(/\\\"/g, '\\\\\"');\n      str = str.replace(/\\n/g, '\\\\n');\n      str = '\"' + str + '\"';\n\n      if (this.language) {\n        str += '@' + this.language;\n      } else if (!this.datatype.equals(XSD.string)) {\n        // Only add datatype if it's not a string\n        str += '^^' + this.datatype.toCanonical();\n      }\n      return str;\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return '' + this.value;\n    }\n    /**\n     * @method fromBoolean\n     * @static\n     * @param value {Boolean}\n     * @return {Literal}\n     */\n\n  }, {\n    key: 'language',\n    get: function get() {\n      return this.lang;\n    },\n    set: function set(language) {\n      this.lang = language || '';\n    }\n  }], [{\n    key: 'fromBoolean',\n    value: function fromBoolean(value) {\n      var strValue = value ? '1' : '0';\n      return new Literal(strValue, null, XSD.boolean);\n    }\n    /**\n     * @method fromDate\n     * @static\n     * @param value {Date}\n     * @return {Literal}\n     */\n\n  }, {\n    key: 'fromDate',\n    value: function fromDate(value) {\n      if (!(value instanceof Date)) {\n        throw new TypeError('Invalid argument to Literal.fromDate()');\n      }\n      var d2 = function d2(x) {\n        return ('' + (100 + x)).slice(1, 3);\n      };\n      var date = '' + value.getUTCFullYear() + '-' + d2(value.getUTCMonth() + 1) + '-' + d2(value.getUTCDate()) + 'T' + d2(value.getUTCHours()) + ':' + d2(value.getUTCMinutes()) + ':' + d2(value.getUTCSeconds()) + 'Z';\n      return new Literal(date, null, XSD.dateTime);\n    }\n    /**\n     * @method fromNumber\n     * @static\n     * @param value {Number}\n     * @return {Literal}\n     */\n\n  }, {\n    key: 'fromNumber',\n    value: function fromNumber(value) {\n      if (typeof value !== 'number') {\n        throw new TypeError('Invalid argument to Literal.fromNumber()');\n      }\n      var datatype = void 0;\n      var strValue = value.toString();\n      if (strValue.indexOf('e') < 0 && Math.abs(value) <= Number.MAX_SAFE_INTEGER) {\n        datatype = Number.isInteger(value) ? XSD.integer : XSD.decimal;\n      } else {\n        datatype = XSD.double;\n      }\n      return new Literal(strValue, null, datatype);\n    }\n    /**\n     * @method fromValue\n     * @param value\n     * @return {Literal}\n     */\n\n  }, {\n    key: 'fromValue',\n    value: function fromValue(value) {\n      if (typeof value === 'undefined' || value === null) {\n        return value;\n      }\n      if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && value.termType) {\n        // this is a Node instance\n        return value;\n      }\n      switch (typeof value === 'undefined' ? 'undefined' : _typeof(value)) {\n        case 'object':\n          if (value instanceof Date) {\n            return Literal.fromDate(value);\n          }\n        case 'boolean':\n          return Literal.fromBoolean(value);\n        case 'number':\n          return Literal.fromNumber(value);\n        case 'string':\n          return new Literal(value);\n      }\n      throw new Error(\"Can't make literal from \" + value + ' of type ' + (typeof value === 'undefined' ? 'undefined' : _typeof(value)));\n    }\n  }]);\n\n  return Literal;\n}(Node);\n\nLiteral.termType = 'Literal';\nLiteral.prototype.classOrder = ClassOrder['Literal'];\nLiteral.prototype.datatype = XSD.string;\nLiteral.prototype.lang = '';\nLiteral.prototype.isVar = 0;\n\nmodule.exports = Literal;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rdflib/lib/literal.js\n// module id = 13\n// module chunks = 0","'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar NamedNode = require('./named-node');\n\nvar XSD = function XSD() {\n  _classCallCheck(this, XSD);\n};\n\nXSD.boolean = new NamedNode('http://www.w3.org/2001/XMLSchema#boolean');\nXSD.dateTime = new NamedNode('http://www.w3.org/2001/XMLSchema#dateTime');\nXSD.decimal = new NamedNode('http://www.w3.org/2001/XMLSchema#decimal');\nXSD.double = new NamedNode('http://www.w3.org/2001/XMLSchema#double');\nXSD.integer = new NamedNode('http://www.w3.org/2001/XMLSchema#integer');\nXSD.langString = new NamedNode('http://www.w3.org/1999/02/22-rdf-syntax-ns#langString');\nXSD.string = new NamedNode('http://www.w3.org/2001/XMLSchema#string');\n\nmodule.exports = XSD;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rdflib/lib/xsd.js\n// module id = 14\n// module chunks = 0","\"use strict\";\n\n/**\n * A Dummy log\n * @module log\n */\nmodule.exports = {\n  debug: function debug(x) {\n    return;\n  },\n  warn: function warn(x) {\n    return;\n  },\n  info: function info(x) {\n    return;\n  },\n  error: function error(x) {\n    return;\n  },\n  success: function success(x) {\n    return;\n  },\n  msg: function msg(x) {\n    return;\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rdflib/lib/log.js\n// module id = 15\n// module chunks = 0","function DOMParser(options){\r\n\tthis.options = options ||{locator:{}};\r\n\t\r\n}\r\nDOMParser.prototype.parseFromString = function(source,mimeType){\r\n\tvar options = this.options;\r\n\tvar sax =  new XMLReader();\r\n\tvar domBuilder = options.domBuilder || new DOMHandler();//contentHandler and LexicalHandler\r\n\tvar errorHandler = options.errorHandler;\r\n\tvar locator = options.locator;\r\n\tvar defaultNSMap = options.xmlns||{};\r\n\tvar entityMap = {'lt':'<','gt':'>','amp':'&','quot':'\"','apos':\"'\"}\r\n\tif(locator){\r\n\t\tdomBuilder.setDocumentLocator(locator)\r\n\t}\r\n\t\r\n\tsax.errorHandler = buildErrorHandler(errorHandler,domBuilder,locator);\r\n\tsax.domBuilder = options.domBuilder || domBuilder;\r\n\tif(/\\/x?html?$/.test(mimeType)){\r\n\t\tentityMap.nbsp = '\\xa0';\r\n\t\tentityMap.copy = '\\xa9';\r\n\t\tdefaultNSMap['']= 'http://www.w3.org/1999/xhtml';\r\n\t}\r\n\tdefaultNSMap.xml = defaultNSMap.xml || 'http://www.w3.org/XML/1998/namespace';\r\n\tif(source){\r\n\t\tsax.parse(source,defaultNSMap,entityMap);\r\n\t}else{\r\n\t\tsax.errorHandler.error(\"invalid doc source\");\r\n\t}\r\n\treturn domBuilder.doc;\r\n}\r\nfunction buildErrorHandler(errorImpl,domBuilder,locator){\r\n\tif(!errorImpl){\r\n\t\tif(domBuilder instanceof DOMHandler){\r\n\t\t\treturn domBuilder;\r\n\t\t}\r\n\t\terrorImpl = domBuilder ;\r\n\t}\r\n\tvar errorHandler = {}\r\n\tvar isCallback = errorImpl instanceof Function;\r\n\tlocator = locator||{}\r\n\tfunction build(key){\r\n\t\tvar fn = errorImpl[key];\r\n\t\tif(!fn && isCallback){\r\n\t\t\tfn = errorImpl.length == 2?function(msg){errorImpl(key,msg)}:errorImpl;\r\n\t\t}\r\n\t\terrorHandler[key] = fn && function(msg){\r\n\t\t\tfn('[xmldom '+key+']\\t'+msg+_locator(locator));\r\n\t\t}||function(){};\r\n\t}\r\n\tbuild('warning');\r\n\tbuild('error');\r\n\tbuild('fatalError');\r\n\treturn errorHandler;\r\n}\r\n\r\n//console.log('#\\n\\n\\n\\n\\n\\n\\n####')\r\n/**\r\n * +ContentHandler+ErrorHandler\r\n * +LexicalHandler+EntityResolver2\r\n * -DeclHandler-DTDHandler \r\n * \r\n * DefaultHandler:EntityResolver, DTDHandler, ContentHandler, ErrorHandler\r\n * DefaultHandler2:DefaultHandler,LexicalHandler, DeclHandler, EntityResolver2\r\n * @link http://www.saxproject.org/apidoc/org/xml/sax/helpers/DefaultHandler.html\r\n */\r\nfunction DOMHandler() {\r\n    this.cdata = false;\r\n}\r\nfunction position(locator,node){\r\n\tnode.lineNumber = locator.lineNumber;\r\n\tnode.columnNumber = locator.columnNumber;\r\n}\r\n/**\r\n * @see org.xml.sax.ContentHandler#startDocument\r\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html\r\n */ \r\nDOMHandler.prototype = {\r\n\tstartDocument : function() {\r\n    \tthis.doc = new DOMImplementation().createDocument(null, null, null);\r\n    \tif (this.locator) {\r\n        \tthis.doc.documentURI = this.locator.systemId;\r\n    \t}\r\n\t},\r\n\tstartElement:function(namespaceURI, localName, qName, attrs) {\r\n\t\tvar doc = this.doc;\r\n\t    var el = doc.createElementNS(namespaceURI, qName||localName);\r\n\t    var len = attrs.length;\r\n\t    appendElement(this, el);\r\n\t    this.currentElement = el;\r\n\t    \r\n\t\tthis.locator && position(this.locator,el)\r\n\t    for (var i = 0 ; i < len; i++) {\r\n\t        var namespaceURI = attrs.getURI(i);\r\n\t        var value = attrs.getValue(i);\r\n\t        var qName = attrs.getQName(i);\r\n\t\t\tvar attr = doc.createAttributeNS(namespaceURI, qName);\r\n\t\t\tthis.locator &&position(attrs.getLocator(i),attr);\r\n\t\t\tattr.value = attr.nodeValue = value;\r\n\t\t\tel.setAttributeNode(attr)\r\n\t    }\r\n\t},\r\n\tendElement:function(namespaceURI, localName, qName) {\r\n\t\tvar current = this.currentElement\r\n\t\tvar tagName = current.tagName;\r\n\t\tthis.currentElement = current.parentNode;\r\n\t},\r\n\tstartPrefixMapping:function(prefix, uri) {\r\n\t},\r\n\tendPrefixMapping:function(prefix) {\r\n\t},\r\n\tprocessingInstruction:function(target, data) {\r\n\t    var ins = this.doc.createProcessingInstruction(target, data);\r\n\t    this.locator && position(this.locator,ins)\r\n\t    appendElement(this, ins);\r\n\t},\r\n\tignorableWhitespace:function(ch, start, length) {\r\n\t},\r\n\tcharacters:function(chars, start, length) {\r\n\t\tchars = _toString.apply(this,arguments)\r\n\t\t//console.log(chars)\r\n\t\tif(chars){\r\n\t\t\tif (this.cdata) {\r\n\t\t\t\tvar charNode = this.doc.createCDATASection(chars);\r\n\t\t\t} else {\r\n\t\t\t\tvar charNode = this.doc.createTextNode(chars);\r\n\t\t\t}\r\n\t\t\tif(this.currentElement){\r\n\t\t\t\tthis.currentElement.appendChild(charNode);\r\n\t\t\t}else if(/^\\s*$/.test(chars)){\r\n\t\t\t\tthis.doc.appendChild(charNode);\r\n\t\t\t\t//process xml\r\n\t\t\t}\r\n\t\t\tthis.locator && position(this.locator,charNode)\r\n\t\t}\r\n\t},\r\n\tskippedEntity:function(name) {\r\n\t},\r\n\tendDocument:function() {\r\n\t\tthis.doc.normalize();\r\n\t},\r\n\tsetDocumentLocator:function (locator) {\r\n\t    if(this.locator = locator){// && !('lineNumber' in locator)){\r\n\t    \tlocator.lineNumber = 0;\r\n\t    }\r\n\t},\r\n\t//LexicalHandler\r\n\tcomment:function(chars, start, length) {\r\n\t\tchars = _toString.apply(this,arguments)\r\n\t    var comm = this.doc.createComment(chars);\r\n\t    this.locator && position(this.locator,comm)\r\n\t    appendElement(this, comm);\r\n\t},\r\n\t\r\n\tstartCDATA:function() {\r\n\t    //used in characters() methods\r\n\t    this.cdata = true;\r\n\t},\r\n\tendCDATA:function() {\r\n\t    this.cdata = false;\r\n\t},\r\n\t\r\n\tstartDTD:function(name, publicId, systemId) {\r\n\t\tvar impl = this.doc.implementation;\r\n\t    if (impl && impl.createDocumentType) {\r\n\t        var dt = impl.createDocumentType(name, publicId, systemId);\r\n\t        this.locator && position(this.locator,dt)\r\n\t        appendElement(this, dt);\r\n\t    }\r\n\t},\r\n\t/**\r\n\t * @see org.xml.sax.ErrorHandler\r\n\t * @link http://www.saxproject.org/apidoc/org/xml/sax/ErrorHandler.html\r\n\t */\r\n\twarning:function(error) {\r\n\t\tconsole.warn('[xmldom warning]\\t'+error,_locator(this.locator));\r\n\t},\r\n\terror:function(error) {\r\n\t\tconsole.error('[xmldom error]\\t'+error,_locator(this.locator));\r\n\t},\r\n\tfatalError:function(error) {\r\n\t\tconsole.error('[xmldom fatalError]\\t'+error,_locator(this.locator));\r\n\t    throw error;\r\n\t}\r\n}\r\nfunction _locator(l){\r\n\tif(l){\r\n\t\treturn '\\n@'+(l.systemId ||'')+'#[line:'+l.lineNumber+',col:'+l.columnNumber+']'\r\n\t}\r\n}\r\nfunction _toString(chars,start,length){\r\n\tif(typeof chars == 'string'){\r\n\t\treturn chars.substr(start,length)\r\n\t}else{//java sax connect width xmldom on rhino(what about: \"? && !(chars instanceof String)\")\r\n\t\tif(chars.length >= start+length || start){\r\n\t\t\treturn new java.lang.String(chars,start,length)+'';\r\n\t\t}\r\n\t\treturn chars;\r\n\t}\r\n}\r\n\r\n/*\r\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/LexicalHandler.html\r\n * used method of org.xml.sax.ext.LexicalHandler:\r\n *  #comment(chars, start, length)\r\n *  #startCDATA()\r\n *  #endCDATA()\r\n *  #startDTD(name, publicId, systemId)\r\n *\r\n *\r\n * IGNORED method of org.xml.sax.ext.LexicalHandler:\r\n *  #endDTD()\r\n *  #startEntity(name)\r\n *  #endEntity(name)\r\n *\r\n *\r\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/DeclHandler.html\r\n * IGNORED method of org.xml.sax.ext.DeclHandler\r\n * \t#attributeDecl(eName, aName, type, mode, value)\r\n *  #elementDecl(name, model)\r\n *  #externalEntityDecl(name, publicId, systemId)\r\n *  #internalEntityDecl(name, value)\r\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/EntityResolver2.html\r\n * IGNORED method of org.xml.sax.EntityResolver2\r\n *  #resolveEntity(String name,String publicId,String baseURI,String systemId)\r\n *  #resolveEntity(publicId, systemId)\r\n *  #getExternalSubset(name, baseURI)\r\n * @link http://www.saxproject.org/apidoc/org/xml/sax/DTDHandler.html\r\n * IGNORED method of org.xml.sax.DTDHandler\r\n *  #notationDecl(name, publicId, systemId) {};\r\n *  #unparsedEntityDecl(name, publicId, systemId, notationName) {};\r\n */\r\n\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){\r\n\tDOMHandler.prototype[key] = function(){return null}\r\n})\r\n\r\n/* Private static helpers treated below as private instance methods, so don't need to add these to the public API; we might use a Relator to also get rid of non-standard public properties */\r\nfunction appendElement (hander,node) {\r\n    if (!hander.currentElement) {\r\n        hander.doc.appendChild(node);\r\n    } else {\r\n        hander.currentElement.appendChild(node);\r\n    }\r\n}//appendChild and setAttributeNS are preformance key\r\n\r\n//if(typeof require == 'function'){\r\n\tvar XMLReader = require('./sax').XMLReader;\r\n\tvar DOMImplementation = exports.DOMImplementation = require('./dom').DOMImplementation;\r\n\texports.XMLSerializer = require('./dom').XMLSerializer ;\r\n\texports.DOMParser = DOMParser;\r\n//}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/xmldom/dom-parser.js\n// module id = 16\n// module chunks = 0","//[4]   \tNameStartChar\t   ::=   \t\":\" | [A-Z] | \"_\" | [a-z] | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x2FF] | [#x370-#x37D] | [#x37F-#x1FFF] | [#x200C-#x200D] | [#x2070-#x218F] | [#x2C00-#x2FEF] | [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]\r\n//[4a]   \tNameChar\t   ::=   \tNameStartChar | \"-\" | \".\" | [0-9] | #xB7 | [#x0300-#x036F] | [#x203F-#x2040]\r\n//[5]   \tName\t   ::=   \tNameStartChar (NameChar)*\r\nvar nameStartChar = /[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]///\\u10000-\\uEFFFF\r\nvar nameChar = new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");\r\nvar tagNamePattern = new RegExp('^'+nameStartChar.source+nameChar.source+'*(?:\\:'+nameStartChar.source+nameChar.source+'*)?$');\r\n//var tagNamePattern = /^[a-zA-Z_][\\w\\-\\.]*(?:\\:[a-zA-Z_][\\w\\-\\.]*)?$/\r\n//var handlers = 'resolveEntity,getExternalSubset,characters,endDocument,endElement,endPrefixMapping,ignorableWhitespace,processingInstruction,setDocumentLocator,skippedEntity,startDocument,startElement,startPrefixMapping,notationDecl,unparsedEntityDecl,error,fatalError,warning,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,comment,endCDATA,endDTD,endEntity,startCDATA,startDTD,startEntity'.split(',')\r\n\r\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\r\n//S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\r\nvar S_TAG = 0;//tag name offerring\r\nvar S_ATTR = 1;//attr name offerring \r\nvar S_ATTR_SPACE=2;//attr name end and space offer\r\nvar S_EQ = 3;//=space?\r\nvar S_ATTR_NOQUOT_VALUE = 4;//attr value(no quot value only)\r\nvar S_ATTR_END = 5;//attr value end and no space(quot end)\r\nvar S_TAG_SPACE = 6;//(attr value end || tag end ) && (space offer)\r\nvar S_TAG_CLOSE = 7;//closed el<el />\r\n\r\nfunction XMLReader(){\r\n\t\r\n}\r\n\r\nXMLReader.prototype = {\r\n\tparse:function(source,defaultNSMap,entityMap){\r\n\t\tvar domBuilder = this.domBuilder;\r\n\t\tdomBuilder.startDocument();\r\n\t\t_copy(defaultNSMap ,defaultNSMap = {})\r\n\t\tparse(source,defaultNSMap,entityMap,\r\n\t\t\t\tdomBuilder,this.errorHandler);\r\n\t\tdomBuilder.endDocument();\r\n\t}\r\n}\r\nfunction parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){\r\n\tfunction fixedFromCharCode(code) {\r\n\t\t// String.prototype.fromCharCode does not supports\r\n\t\t// > 2 bytes unicode chars directly\r\n\t\tif (code > 0xffff) {\r\n\t\t\tcode -= 0x10000;\r\n\t\t\tvar surrogate1 = 0xd800 + (code >> 10)\r\n\t\t\t\t, surrogate2 = 0xdc00 + (code & 0x3ff);\r\n\r\n\t\t\treturn String.fromCharCode(surrogate1, surrogate2);\r\n\t\t} else {\r\n\t\t\treturn String.fromCharCode(code);\r\n\t\t}\r\n\t}\r\n\tfunction entityReplacer(a){\r\n\t\tvar k = a.slice(1,-1);\r\n\t\tif(k in entityMap){\r\n\t\t\treturn entityMap[k]; \r\n\t\t}else if(k.charAt(0) === '#'){\r\n\t\t\treturn fixedFromCharCode(parseInt(k.substr(1).replace('x','0x')))\r\n\t\t}else{\r\n\t\t\terrorHandler.error('entity not found:'+a);\r\n\t\t\treturn a;\r\n\t\t}\r\n\t}\r\n\tfunction appendText(end){//has some bugs\r\n\t\tif(end>start){\r\n\t\t\tvar xt = source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);\r\n\t\t\tlocator&&position(start);\r\n\t\t\tdomBuilder.characters(xt,0,end-start);\r\n\t\t\tstart = end\r\n\t\t}\r\n\t}\r\n\tfunction position(p,m){\r\n\t\twhile(p>=lineEnd && (m = linePattern.exec(source))){\r\n\t\t\tlineStart = m.index;\r\n\t\t\tlineEnd = lineStart + m[0].length;\r\n\t\t\tlocator.lineNumber++;\r\n\t\t\t//console.log('line++:',locator,startPos,endPos)\r\n\t\t}\r\n\t\tlocator.columnNumber = p-lineStart+1;\r\n\t}\r\n\tvar lineStart = 0;\r\n\tvar lineEnd = 0;\r\n\tvar linePattern = /.*(?:\\r\\n?|\\n)|.*$/g\r\n\tvar locator = domBuilder.locator;\r\n\t\r\n\tvar parseStack = [{currentNSMap:defaultNSMapCopy}]\r\n\tvar closeMap = {};\r\n\tvar start = 0;\r\n\twhile(true){\r\n\t\ttry{\r\n\t\t\tvar tagStart = source.indexOf('<',start);\r\n\t\t\tif(tagStart<0){\r\n\t\t\t\tif(!source.substr(start).match(/^\\s*$/)){\r\n\t\t\t\t\tvar doc = domBuilder.doc;\r\n\t    \t\t\tvar text = doc.createTextNode(source.substr(start));\r\n\t    \t\t\tdoc.appendChild(text);\r\n\t    \t\t\tdomBuilder.currentElement = text;\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif(tagStart>start){\r\n\t\t\t\tappendText(tagStart);\r\n\t\t\t}\r\n\t\t\tswitch(source.charAt(tagStart+1)){\r\n\t\t\tcase '/':\r\n\t\t\t\tvar end = source.indexOf('>',tagStart+3);\r\n\t\t\t\tvar tagName = source.substring(tagStart+2,end);\r\n\t\t\t\tvar config = parseStack.pop();\r\n\t\t\t\tif(end<0){\r\n\t\t\t\t\t\r\n\t        \t\ttagName = source.substring(tagStart+2).replace(/[\\s<].*/,'');\r\n\t        \t\t//console.error('#@@@@@@'+tagName)\r\n\t        \t\terrorHandler.error(\"end tag name: \"+tagName+' is not complete:'+config.tagName);\r\n\t        \t\tend = tagStart+1+tagName.length;\r\n\t        \t}else if(tagName.match(/\\s</)){\r\n\t        \t\ttagName = tagName.replace(/[\\s<].*/,'');\r\n\t        \t\terrorHandler.error(\"end tag name: \"+tagName+' maybe not complete');\r\n\t        \t\tend = tagStart+1+tagName.length;\r\n\t\t\t\t}\r\n\t\t\t\t//console.error(parseStack.length,parseStack)\r\n\t\t\t\t//console.error(config);\r\n\t\t\t\tvar localNSMap = config.localNSMap;\r\n\t\t\t\tvar endMatch = config.tagName == tagName;\r\n\t\t\t\tvar endIgnoreCaseMach = endMatch || config.tagName&&config.tagName.toLowerCase() == tagName.toLowerCase()\r\n\t\t        if(endIgnoreCaseMach){\r\n\t\t        \tdomBuilder.endElement(config.uri,config.localName,tagName);\r\n\t\t\t\t\tif(localNSMap){\r\n\t\t\t\t\t\tfor(var prefix in localNSMap){\r\n\t\t\t\t\t\t\tdomBuilder.endPrefixMapping(prefix) ;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(!endMatch){\r\n\t\t            \terrorHandler.fatalError(\"end tag name: \"+tagName+' is not match the current start tagName:'+config.tagName );\r\n\t\t\t\t\t}\r\n\t\t        }else{\r\n\t\t        \tparseStack.push(config)\r\n\t\t        }\r\n\t\t\t\t\r\n\t\t\t\tend++;\r\n\t\t\t\tbreak;\r\n\t\t\t\t// end elment\r\n\t\t\tcase '?':// <?...?>\r\n\t\t\t\tlocator&&position(tagStart);\r\n\t\t\t\tend = parseInstruction(source,tagStart,domBuilder);\r\n\t\t\t\tbreak;\r\n\t\t\tcase '!':// <!doctype,<![CDATA,<!--\r\n\t\t\t\tlocator&&position(tagStart);\r\n\t\t\t\tend = parseDCC(source,tagStart,domBuilder,errorHandler);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tlocator&&position(tagStart);\r\n\t\t\t\tvar el = new ElementAttributes();\r\n\t\t\t\tvar currentNSMap = parseStack[parseStack.length-1].currentNSMap;\r\n\t\t\t\t//elStartEnd\r\n\t\t\t\tvar end = parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);\r\n\t\t\t\tvar len = el.length;\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tif(!el.closed && fixSelfClosed(source,end,el.tagName,closeMap)){\r\n\t\t\t\t\tel.closed = true;\r\n\t\t\t\t\tif(!entityMap.nbsp){\r\n\t\t\t\t\t\terrorHandler.warning('unclosed xml attribute');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(locator && len){\r\n\t\t\t\t\tvar locator2 = copyLocator(locator,{});\r\n\t\t\t\t\t//try{//attribute position fixed\r\n\t\t\t\t\tfor(var i = 0;i<len;i++){\r\n\t\t\t\t\t\tvar a = el[i];\r\n\t\t\t\t\t\tposition(a.offset);\r\n\t\t\t\t\t\ta.locator = copyLocator(locator,{});\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//}catch(e){console.error('@@@@@'+e)}\r\n\t\t\t\t\tdomBuilder.locator = locator2\r\n\t\t\t\t\tif(appendElement(el,domBuilder,currentNSMap)){\r\n\t\t\t\t\t\tparseStack.push(el)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdomBuilder.locator = locator;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(appendElement(el,domBuilder,currentNSMap)){\r\n\t\t\t\t\t\tparseStack.push(el)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tif(el.uri === 'http://www.w3.org/1999/xhtml' && !el.closed){\r\n\t\t\t\t\tend = parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)\r\n\t\t\t\t}else{\r\n\t\t\t\t\tend++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}catch(e){\r\n\t\t\terrorHandler.error('element parse error: '+e)\r\n\t\t\t//errorHandler.error('element parse error: '+e);\r\n\t\t\tend = -1;\r\n\t\t\t//throw e;\r\n\t\t}\r\n\t\tif(end>start){\r\n\t\t\tstart = end;\r\n\t\t}else{\r\n\t\t\t//TODO: 这里有可能sax回退，有位置错误风险\r\n\t\t\tappendText(Math.max(tagStart,start)+1);\r\n\t\t}\r\n\t}\r\n}\r\nfunction copyLocator(f,t){\r\n\tt.lineNumber = f.lineNumber;\r\n\tt.columnNumber = f.columnNumber;\r\n\treturn t;\r\n}\r\n\r\n/**\r\n * @see #appendElement(source,elStartEnd,el,selfClosed,entityReplacer,domBuilder,parseStack);\r\n * @return end of the elementStartPart(end of elementEndPart for selfClosed el)\r\n */\r\nfunction parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){\r\n\tvar attrName;\r\n\tvar value;\r\n\tvar p = ++start;\r\n\tvar s = S_TAG;//status\r\n\twhile(true){\r\n\t\tvar c = source.charAt(p);\r\n\t\tswitch(c){\r\n\t\tcase '=':\r\n\t\t\tif(s === S_ATTR){//attrName\r\n\t\t\t\tattrName = source.slice(start,p);\r\n\t\t\t\ts = S_EQ;\r\n\t\t\t}else if(s === S_ATTR_SPACE){\r\n\t\t\t\ts = S_EQ;\r\n\t\t\t}else{\r\n\t\t\t\t//fatalError: equal must after attrName or space after attrName\r\n\t\t\t\tthrow new Error('attribute equal must after attrName');\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase '\\'':\r\n\t\tcase '\"':\r\n\t\t\tif(s === S_EQ || s === S_ATTR //|| s == S_ATTR_SPACE\r\n\t\t\t\t){//equal\r\n\t\t\t\tif(s === S_ATTR){\r\n\t\t\t\t\terrorHandler.warning('attribute value must after \"=\"')\r\n\t\t\t\t\tattrName = source.slice(start,p)\r\n\t\t\t\t}\r\n\t\t\t\tstart = p+1;\r\n\t\t\t\tp = source.indexOf(c,start)\r\n\t\t\t\tif(p>0){\r\n\t\t\t\t\tvalue = source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);\r\n\t\t\t\t\tel.add(attrName,value,start-1);\r\n\t\t\t\t\ts = S_ATTR_END;\r\n\t\t\t\t}else{\r\n\t\t\t\t\t//fatalError: no end quot match\r\n\t\t\t\t\tthrow new Error('attribute value no end \\''+c+'\\' match');\r\n\t\t\t\t}\r\n\t\t\t}else if(s == S_ATTR_NOQUOT_VALUE){\r\n\t\t\t\tvalue = source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);\r\n\t\t\t\t//console.log(attrName,value,start,p)\r\n\t\t\t\tel.add(attrName,value,start);\r\n\t\t\t\t//console.dir(el)\r\n\t\t\t\terrorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+')!!');\r\n\t\t\t\tstart = p+1;\r\n\t\t\t\ts = S_ATTR_END\r\n\t\t\t}else{\r\n\t\t\t\t//fatalError: no equal before\r\n\t\t\t\tthrow new Error('attribute value must after \"=\"');\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase '/':\r\n\t\t\tswitch(s){\r\n\t\t\tcase S_TAG:\r\n\t\t\t\tel.setTagName(source.slice(start,p));\r\n\t\t\tcase S_ATTR_END:\r\n\t\t\tcase S_TAG_SPACE:\r\n\t\t\tcase S_TAG_CLOSE:\r\n\t\t\t\ts =S_TAG_CLOSE;\r\n\t\t\t\tel.closed = true;\r\n\t\t\tcase S_ATTR_NOQUOT_VALUE:\r\n\t\t\tcase S_ATTR:\r\n\t\t\tcase S_ATTR_SPACE:\r\n\t\t\t\tbreak;\r\n\t\t\t//case S_EQ:\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(\"attribute invalid close char('/')\")\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase ''://end document\r\n\t\t\t//throw new Error('unexpected end of input')\r\n\t\t\terrorHandler.error('unexpected end of input');\r\n\t\t\tif(s == S_TAG){\r\n\t\t\t\tel.setTagName(source.slice(start,p));\r\n\t\t\t}\r\n\t\t\treturn p;\r\n\t\tcase '>':\r\n\t\t\tswitch(s){\r\n\t\t\tcase S_TAG:\r\n\t\t\t\tel.setTagName(source.slice(start,p));\r\n\t\t\tcase S_ATTR_END:\r\n\t\t\tcase S_TAG_SPACE:\r\n\t\t\tcase S_TAG_CLOSE:\r\n\t\t\t\tbreak;//normal\r\n\t\t\tcase S_ATTR_NOQUOT_VALUE://Compatible state\r\n\t\t\tcase S_ATTR:\r\n\t\t\t\tvalue = source.slice(start,p);\r\n\t\t\t\tif(value.slice(-1) === '/'){\r\n\t\t\t\t\tel.closed  = true;\r\n\t\t\t\t\tvalue = value.slice(0,-1)\r\n\t\t\t\t}\r\n\t\t\tcase S_ATTR_SPACE:\r\n\t\t\t\tif(s === S_ATTR_SPACE){\r\n\t\t\t\t\tvalue = attrName;\r\n\t\t\t\t}\r\n\t\t\t\tif(s == S_ATTR_NOQUOT_VALUE){\r\n\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');\r\n\t\t\t\t\tel.add(attrName,value.replace(/&#?\\w+;/g,entityReplacer),start)\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(currentNSMap[''] !== 'http://www.w3.org/1999/xhtml' || !value.match(/^(?:disabled|checked|selected)$/i)){\r\n\t\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')\r\n\t\t\t\t\t}\r\n\t\t\t\t\tel.add(value,value,start)\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase S_EQ:\r\n\t\t\t\tthrow new Error('attribute value missed!!');\r\n\t\t\t}\r\n//\t\t\tconsole.log(tagName,tagNamePattern,tagNamePattern.test(tagName))\r\n\t\t\treturn p;\r\n\t\t/*xml space '\\x20' | #x9 | #xD | #xA; */\r\n\t\tcase '\\u0080':\r\n\t\t\tc = ' ';\r\n\t\tdefault:\r\n\t\t\tif(c<= ' '){//space\r\n\t\t\t\tswitch(s){\r\n\t\t\t\tcase S_TAG:\r\n\t\t\t\t\tel.setTagName(source.slice(start,p));//tagName\r\n\t\t\t\t\ts = S_TAG_SPACE;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase S_ATTR:\r\n\t\t\t\t\tattrName = source.slice(start,p)\r\n\t\t\t\t\ts = S_ATTR_SPACE;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase S_ATTR_NOQUOT_VALUE:\r\n\t\t\t\t\tvar value = source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);\r\n\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');\r\n\t\t\t\t\tel.add(attrName,value,start)\r\n\t\t\t\tcase S_ATTR_END:\r\n\t\t\t\t\ts = S_TAG_SPACE;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//case S_TAG_SPACE:\r\n\t\t\t\t//case S_EQ:\r\n\t\t\t\t//case S_ATTR_SPACE:\r\n\t\t\t\t//\tvoid();break;\r\n\t\t\t\t//case S_TAG_CLOSE:\r\n\t\t\t\t\t//ignore warning\r\n\t\t\t\t}\r\n\t\t\t}else{//not space\r\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\r\n//S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\r\n\t\t\t\tswitch(s){\r\n\t\t\t\t//case S_TAG:void();break;\r\n\t\t\t\t//case S_ATTR:void();break;\r\n\t\t\t\t//case S_ATTR_NOQUOT_VALUE:void();break;\r\n\t\t\t\tcase S_ATTR_SPACE:\r\n\t\t\t\t\tvar tagName =  el.tagName;\r\n\t\t\t\t\tif(currentNSMap[''] !== 'http://www.w3.org/1999/xhtml' || !attrName.match(/^(?:disabled|checked|selected)$/i)){\r\n\t\t\t\t\t\terrorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')\r\n\t\t\t\t\t}\r\n\t\t\t\t\tel.add(attrName,attrName,start);\r\n\t\t\t\t\tstart = p;\r\n\t\t\t\t\ts = S_ATTR;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase S_ATTR_END:\r\n\t\t\t\t\terrorHandler.warning('attribute space is required\"'+attrName+'\"!!')\r\n\t\t\t\tcase S_TAG_SPACE:\r\n\t\t\t\t\ts = S_ATTR;\r\n\t\t\t\t\tstart = p;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase S_EQ:\r\n\t\t\t\t\ts = S_ATTR_NOQUOT_VALUE;\r\n\t\t\t\t\tstart = p;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase S_TAG_CLOSE:\r\n\t\t\t\t\tthrow new Error(\"elements closed character '/' and '>' must be connected to\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}//end outer switch\r\n\t\t//console.log('p++',p)\r\n\t\tp++;\r\n\t}\r\n}\r\n/**\r\n * @return true if has new namespace define\r\n */\r\nfunction appendElement(el,domBuilder,currentNSMap){\r\n\tvar tagName = el.tagName;\r\n\tvar localNSMap = null;\r\n\t//var currentNSMap = parseStack[parseStack.length-1].currentNSMap;\r\n\tvar i = el.length;\r\n\twhile(i--){\r\n\t\tvar a = el[i];\r\n\t\tvar qName = a.qName;\r\n\t\tvar value = a.value;\r\n\t\tvar nsp = qName.indexOf(':');\r\n\t\tif(nsp>0){\r\n\t\t\tvar prefix = a.prefix = qName.slice(0,nsp);\r\n\t\t\tvar localName = qName.slice(nsp+1);\r\n\t\t\tvar nsPrefix = prefix === 'xmlns' && localName\r\n\t\t}else{\r\n\t\t\tlocalName = qName;\r\n\t\t\tprefix = null\r\n\t\t\tnsPrefix = qName === 'xmlns' && ''\r\n\t\t}\r\n\t\t//can not set prefix,because prefix !== ''\r\n\t\ta.localName = localName ;\r\n\t\t//prefix == null for no ns prefix attribute \r\n\t\tif(nsPrefix !== false){//hack!!\r\n\t\t\tif(localNSMap == null){\r\n\t\t\t\tlocalNSMap = {}\r\n\t\t\t\t//console.log(currentNSMap,0)\r\n\t\t\t\t_copy(currentNSMap,currentNSMap={})\r\n\t\t\t\t//console.log(currentNSMap,1)\r\n\t\t\t}\r\n\t\t\tcurrentNSMap[nsPrefix] = localNSMap[nsPrefix] = value;\r\n\t\t\ta.uri = 'http://www.w3.org/2000/xmlns/'\r\n\t\t\tdomBuilder.startPrefixMapping(nsPrefix, value) \r\n\t\t}\r\n\t}\r\n\tvar i = el.length;\r\n\twhile(i--){\r\n\t\ta = el[i];\r\n\t\tvar prefix = a.prefix;\r\n\t\tif(prefix){//no prefix attribute has no namespace\r\n\t\t\tif(prefix === 'xml'){\r\n\t\t\t\ta.uri = 'http://www.w3.org/XML/1998/namespace';\r\n\t\t\t}if(prefix !== 'xmlns'){\r\n\t\t\t\ta.uri = currentNSMap[prefix || '']\r\n\t\t\t\t\r\n\t\t\t\t//{console.log('###'+a.qName,domBuilder.locator.systemId+'',currentNSMap,a.uri)}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tvar nsp = tagName.indexOf(':');\r\n\tif(nsp>0){\r\n\t\tprefix = el.prefix = tagName.slice(0,nsp);\r\n\t\tlocalName = el.localName = tagName.slice(nsp+1);\r\n\t}else{\r\n\t\tprefix = null;//important!!\r\n\t\tlocalName = el.localName = tagName;\r\n\t}\r\n\t//no prefix element has default namespace\r\n\tvar ns = el.uri = currentNSMap[prefix || ''];\r\n\tdomBuilder.startElement(ns,localName,tagName,el);\r\n\t//endPrefixMapping and startPrefixMapping have not any help for dom builder\r\n\t//localNSMap = null\r\n\tif(el.closed){\r\n\t\tdomBuilder.endElement(ns,localName,tagName);\r\n\t\tif(localNSMap){\r\n\t\t\tfor(prefix in localNSMap){\r\n\t\t\t\tdomBuilder.endPrefixMapping(prefix) \r\n\t\t\t}\r\n\t\t}\r\n\t}else{\r\n\t\tel.currentNSMap = currentNSMap;\r\n\t\tel.localNSMap = localNSMap;\r\n\t\t//parseStack.push(el);\r\n\t\treturn true;\r\n\t}\r\n}\r\nfunction parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){\r\n\tif(/^(?:script|textarea)$/i.test(tagName)){\r\n\t\tvar elEndStart =  source.indexOf('</'+tagName+'>',elStartEnd);\r\n\t\tvar text = source.substring(elStartEnd+1,elEndStart);\r\n\t\tif(/[&<]/.test(text)){\r\n\t\t\tif(/^script$/i.test(tagName)){\r\n\t\t\t\t//if(!/\\]\\]>/.test(text)){\r\n\t\t\t\t\t//lexHandler.startCDATA();\r\n\t\t\t\t\tdomBuilder.characters(text,0,text.length);\r\n\t\t\t\t\t//lexHandler.endCDATA();\r\n\t\t\t\t\treturn elEndStart;\r\n\t\t\t\t//}\r\n\t\t\t}//}else{//text area\r\n\t\t\t\ttext = text.replace(/&#?\\w+;/g,entityReplacer);\r\n\t\t\t\tdomBuilder.characters(text,0,text.length);\r\n\t\t\t\treturn elEndStart;\r\n\t\t\t//}\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\treturn elStartEnd+1;\r\n}\r\nfunction fixSelfClosed(source,elStartEnd,tagName,closeMap){\r\n\t//if(tagName in closeMap){\r\n\tvar pos = closeMap[tagName];\r\n\tif(pos == null){\r\n\t\t//console.log(tagName)\r\n\t\tpos =  source.lastIndexOf('</'+tagName+'>')\r\n\t\tif(pos<elStartEnd){//忘记闭合\r\n\t\t\tpos = source.lastIndexOf('</'+tagName)\r\n\t\t}\r\n\t\tcloseMap[tagName] =pos\r\n\t}\r\n\treturn pos<elStartEnd;\r\n\t//} \r\n}\r\nfunction _copy(source,target){\r\n\tfor(var n in source){target[n] = source[n]}\r\n}\r\nfunction parseDCC(source,start,domBuilder,errorHandler){//sure start with '<!'\r\n\tvar next= source.charAt(start+2)\r\n\tswitch(next){\r\n\tcase '-':\r\n\t\tif(source.charAt(start + 3) === '-'){\r\n\t\t\tvar end = source.indexOf('-->',start+4);\r\n\t\t\t//append comment source.substring(4,end)//<!--\r\n\t\t\tif(end>start){\r\n\t\t\t\tdomBuilder.comment(source,start+4,end-start-4);\r\n\t\t\t\treturn end+3;\r\n\t\t\t}else{\r\n\t\t\t\terrorHandler.error(\"Unclosed comment\");\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\t//error\r\n\t\t\treturn -1;\r\n\t\t}\r\n\tdefault:\r\n\t\tif(source.substr(start+3,6) == 'CDATA['){\r\n\t\t\tvar end = source.indexOf(']]>',start+9);\r\n\t\t\tdomBuilder.startCDATA();\r\n\t\t\tdomBuilder.characters(source,start+9,end-start-9);\r\n\t\t\tdomBuilder.endCDATA() \r\n\t\t\treturn end+3;\r\n\t\t}\r\n\t\t//<!DOCTYPE\r\n\t\t//startDTD(java.lang.String name, java.lang.String publicId, java.lang.String systemId) \r\n\t\tvar matchs = split(source,start);\r\n\t\tvar len = matchs.length;\r\n\t\tif(len>1 && /!doctype/i.test(matchs[0][0])){\r\n\t\t\tvar name = matchs[1][0];\r\n\t\t\tvar pubid = len>3 && /^public$/i.test(matchs[2][0]) && matchs[3][0]\r\n\t\t\tvar sysid = len>4 && matchs[4][0];\r\n\t\t\tvar lastMatch = matchs[len-1]\r\n\t\t\tdomBuilder.startDTD(name,pubid && pubid.replace(/^(['\"])(.*?)\\1$/,'$2'),\r\n\t\t\t\t\tsysid && sysid.replace(/^(['\"])(.*?)\\1$/,'$2'));\r\n\t\t\tdomBuilder.endDTD();\r\n\t\t\t\r\n\t\t\treturn lastMatch.index+lastMatch[0].length\r\n\t\t}\r\n\t}\r\n\treturn -1;\r\n}\r\n\r\n\r\n\r\nfunction parseInstruction(source,start,domBuilder){\r\n\tvar end = source.indexOf('?>',start);\r\n\tif(end){\r\n\t\tvar match = source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);\r\n\t\tif(match){\r\n\t\t\tvar len = match[0].length;\r\n\t\t\tdomBuilder.processingInstruction(match[1], match[2]) ;\r\n\t\t\treturn end+2;\r\n\t\t}else{//error\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t}\r\n\treturn -1;\r\n}\r\n\r\n/**\r\n * @param source\r\n */\r\nfunction ElementAttributes(source){\r\n\t\r\n}\r\nElementAttributes.prototype = {\r\n\tsetTagName:function(tagName){\r\n\t\tif(!tagNamePattern.test(tagName)){\r\n\t\t\tthrow new Error('invalid tagName:'+tagName)\r\n\t\t}\r\n\t\tthis.tagName = tagName\r\n\t},\r\n\tadd:function(qName,value,offset){\r\n\t\tif(!tagNamePattern.test(qName)){\r\n\t\t\tthrow new Error('invalid attribute:'+qName)\r\n\t\t}\r\n\t\tthis[this.length++] = {qName:qName,value:value,offset:offset}\r\n\t},\r\n\tlength:0,\r\n\tgetLocalName:function(i){return this[i].localName},\r\n\tgetLocator:function(i){return this[i].locator},\r\n\tgetQName:function(i){return this[i].qName},\r\n\tgetURI:function(i){return this[i].uri},\r\n\tgetValue:function(i){return this[i].value}\r\n//\t,getIndex:function(uri, localName)){\r\n//\t\tif(localName){\r\n//\t\t\t\r\n//\t\t}else{\r\n//\t\t\tvar qName = uri\r\n//\t\t}\r\n//\t},\r\n//\tgetValue:function(){return this.getValue(this.getIndex.apply(this,arguments))},\r\n//\tgetType:function(uri,localName){}\r\n//\tgetType:function(i){},\r\n}\r\n\r\n\r\n\r\n\r\nfunction _set_proto_(thiz,parent){\r\n\tthiz.__proto__ = parent;\r\n\treturn thiz;\r\n}\r\nif(!(_set_proto_({},_set_proto_.prototype) instanceof _set_proto_)){\r\n\t_set_proto_ = function(thiz,parent){\r\n\t\tfunction p(){};\r\n\t\tp.prototype = parent;\r\n\t\tp = new p();\r\n\t\tfor(parent in thiz){\r\n\t\t\tp[parent] = thiz[parent];\r\n\t\t}\r\n\t\treturn p;\r\n\t}\r\n}\r\n\r\nfunction split(source,start){\r\n\tvar match;\r\n\tvar buf = [];\r\n\tvar reg = /'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;\r\n\treg.lastIndex = start;\r\n\treg.exec(source);//skip <\r\n\twhile(match = reg.exec(source)){\r\n\t\tbuf.push(match);\r\n\t\tif(match[1])return buf;\r\n\t}\r\n}\r\n\r\nexports.XMLReader = XMLReader;\r\n\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/xmldom/sax.js\n// module id = 17\n// module chunks = 0","/*\n * DOM Level 2\n * Object DOMException\n * @see http://www.w3.org/TR/REC-DOM-Level-1/ecma-script-language-binding.html\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html\n */\n\nfunction copy(src,dest){\n\tfor(var p in src){\n\t\tdest[p] = src[p];\n\t}\n}\n/**\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*((?:.*\\{\\s*?[\\r\\n][\\s\\S]*?^})|\\S.*?(?=[;\\r\\n]));?\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*(\\S.*?(?=[;\\r\\n]));?\n */\nfunction _extends(Class,Super){\n\tvar pt = Class.prototype;\n\tif(Object.create){\n\t\tvar ppt = Object.create(Super.prototype)\n\t\tpt.__proto__ = ppt;\n\t}\n\tif(!(pt instanceof Super)){\n\t\tfunction t(){};\n\t\tt.prototype = Super.prototype;\n\t\tt = new t();\n\t\tcopy(pt,t);\n\t\tClass.prototype = pt = t;\n\t}\n\tif(pt.constructor != Class){\n\t\tif(typeof Class != 'function'){\n\t\t\tconsole.error(\"unknow Class:\"+Class)\n\t\t}\n\t\tpt.constructor = Class\n\t}\n}\nvar htmlns = 'http://www.w3.org/1999/xhtml' ;\n// Node Types\nvar NodeType = {}\nvar ELEMENT_NODE                = NodeType.ELEMENT_NODE                = 1;\nvar ATTRIBUTE_NODE              = NodeType.ATTRIBUTE_NODE              = 2;\nvar TEXT_NODE                   = NodeType.TEXT_NODE                   = 3;\nvar CDATA_SECTION_NODE          = NodeType.CDATA_SECTION_NODE          = 4;\nvar ENTITY_REFERENCE_NODE       = NodeType.ENTITY_REFERENCE_NODE       = 5;\nvar ENTITY_NODE                 = NodeType.ENTITY_NODE                 = 6;\nvar PROCESSING_INSTRUCTION_NODE = NodeType.PROCESSING_INSTRUCTION_NODE = 7;\nvar COMMENT_NODE                = NodeType.COMMENT_NODE                = 8;\nvar DOCUMENT_NODE               = NodeType.DOCUMENT_NODE               = 9;\nvar DOCUMENT_TYPE_NODE          = NodeType.DOCUMENT_TYPE_NODE          = 10;\nvar DOCUMENT_FRAGMENT_NODE      = NodeType.DOCUMENT_FRAGMENT_NODE      = 11;\nvar NOTATION_NODE               = NodeType.NOTATION_NODE               = 12;\n\n// ExceptionCode\nvar ExceptionCode = {}\nvar ExceptionMessage = {};\nvar INDEX_SIZE_ERR              = ExceptionCode.INDEX_SIZE_ERR              = ((ExceptionMessage[1]=\"Index size error\"),1);\nvar DOMSTRING_SIZE_ERR          = ExceptionCode.DOMSTRING_SIZE_ERR          = ((ExceptionMessage[2]=\"DOMString size error\"),2);\nvar HIERARCHY_REQUEST_ERR       = ExceptionCode.HIERARCHY_REQUEST_ERR       = ((ExceptionMessage[3]=\"Hierarchy request error\"),3);\nvar WRONG_DOCUMENT_ERR          = ExceptionCode.WRONG_DOCUMENT_ERR          = ((ExceptionMessage[4]=\"Wrong document\"),4);\nvar INVALID_CHARACTER_ERR       = ExceptionCode.INVALID_CHARACTER_ERR       = ((ExceptionMessage[5]=\"Invalid character\"),5);\nvar NO_DATA_ALLOWED_ERR         = ExceptionCode.NO_DATA_ALLOWED_ERR         = ((ExceptionMessage[6]=\"No data allowed\"),6);\nvar NO_MODIFICATION_ALLOWED_ERR = ExceptionCode.NO_MODIFICATION_ALLOWED_ERR = ((ExceptionMessage[7]=\"No modification allowed\"),7);\nvar NOT_FOUND_ERR               = ExceptionCode.NOT_FOUND_ERR               = ((ExceptionMessage[8]=\"Not found\"),8);\nvar NOT_SUPPORTED_ERR           = ExceptionCode.NOT_SUPPORTED_ERR           = ((ExceptionMessage[9]=\"Not supported\"),9);\nvar INUSE_ATTRIBUTE_ERR         = ExceptionCode.INUSE_ATTRIBUTE_ERR         = ((ExceptionMessage[10]=\"Attribute in use\"),10);\n//level2\nvar INVALID_STATE_ERR        \t= ExceptionCode.INVALID_STATE_ERR        \t= ((ExceptionMessage[11]=\"Invalid state\"),11);\nvar SYNTAX_ERR               \t= ExceptionCode.SYNTAX_ERR               \t= ((ExceptionMessage[12]=\"Syntax error\"),12);\nvar INVALID_MODIFICATION_ERR \t= ExceptionCode.INVALID_MODIFICATION_ERR \t= ((ExceptionMessage[13]=\"Invalid modification\"),13);\nvar NAMESPACE_ERR            \t= ExceptionCode.NAMESPACE_ERR           \t= ((ExceptionMessage[14]=\"Invalid namespace\"),14);\nvar INVALID_ACCESS_ERR       \t= ExceptionCode.INVALID_ACCESS_ERR      \t= ((ExceptionMessage[15]=\"Invalid access\"),15);\n\n\nfunction DOMException(code, message) {\n\tif(message instanceof Error){\n\t\tvar error = message;\n\t}else{\n\t\terror = this;\n\t\tError.call(this, ExceptionMessage[code]);\n\t\tthis.message = ExceptionMessage[code];\n\t\tif(Error.captureStackTrace) Error.captureStackTrace(this, DOMException);\n\t}\n\terror.code = code;\n\tif(message) this.message = this.message + \": \" + message;\n\treturn error;\n};\nDOMException.prototype = Error.prototype;\ncopy(ExceptionCode,DOMException)\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-536297177\n * The NodeList interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented. NodeList objects in the DOM are live.\n * The items in the NodeList are accessible via an integral index, starting from 0.\n */\nfunction NodeList() {\n};\nNodeList.prototype = {\n\t/**\n\t * The number of nodes in the list. The range of valid child node indices is 0 to length-1 inclusive.\n\t * @standard level1\n\t */\n\tlength:0, \n\t/**\n\t * Returns the indexth item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null.\n\t * @standard level1\n\t * @param index  unsigned long \n\t *   Index into the collection.\n\t * @return Node\n\t * \tThe node at the indexth position in the NodeList, or null if that is not a valid index. \n\t */\n\titem: function(index) {\n\t\treturn this[index] || null;\n\t},\n\ttoString:function(isHTML,nodeFilter){\n\t\tfor(var buf = [], i = 0;i<this.length;i++){\n\t\t\tserializeToString(this[i],buf,isHTML,nodeFilter);\n\t\t}\n\t\treturn buf.join('');\n\t}\n};\nfunction LiveNodeList(node,refresh){\n\tthis._node = node;\n\tthis._refresh = refresh\n\t_updateLiveList(this);\n}\nfunction _updateLiveList(list){\n\tvar inc = list._node._inc || list._node.ownerDocument._inc;\n\tif(list._inc != inc){\n\t\tvar ls = list._refresh(list._node);\n\t\t//console.log(ls.length)\n\t\t__set__(list,'length',ls.length);\n\t\tcopy(ls,list);\n\t\tlist._inc = inc;\n\t}\n}\nLiveNodeList.prototype.item = function(i){\n\t_updateLiveList(this);\n\treturn this[i];\n}\n\n_extends(LiveNodeList,NodeList);\n/**\n * \n * Objects implementing the NamedNodeMap interface are used to represent collections of nodes that can be accessed by name. Note that NamedNodeMap does not inherit from NodeList; NamedNodeMaps are not maintained in any particular order. Objects contained in an object implementing NamedNodeMap may also be accessed by an ordinal index, but this is simply to allow convenient enumeration of the contents of a NamedNodeMap, and does not imply that the DOM specifies an order to these Nodes.\n * NamedNodeMap objects in the DOM are live.\n * used for attributes or DocumentType entities \n */\nfunction NamedNodeMap() {\n};\n\nfunction _findNodeIndex(list,node){\n\tvar i = list.length;\n\twhile(i--){\n\t\tif(list[i] === node){return i}\n\t}\n}\n\nfunction _addNamedNode(el,list,newAttr,oldAttr){\n\tif(oldAttr){\n\t\tlist[_findNodeIndex(list,oldAttr)] = newAttr;\n\t}else{\n\t\tlist[list.length++] = newAttr;\n\t}\n\tif(el){\n\t\tnewAttr.ownerElement = el;\n\t\tvar doc = el.ownerDocument;\n\t\tif(doc){\n\t\t\toldAttr && _onRemoveAttribute(doc,el,oldAttr);\n\t\t\t_onAddAttribute(doc,el,newAttr);\n\t\t}\n\t}\n}\nfunction _removeNamedNode(el,list,attr){\n\t//console.log('remove attr:'+attr)\n\tvar i = _findNodeIndex(list,attr);\n\tif(i>=0){\n\t\tvar lastIndex = list.length-1\n\t\twhile(i<lastIndex){\n\t\t\tlist[i] = list[++i]\n\t\t}\n\t\tlist.length = lastIndex;\n\t\tif(el){\n\t\t\tvar doc = el.ownerDocument;\n\t\t\tif(doc){\n\t\t\t\t_onRemoveAttribute(doc,el,attr);\n\t\t\t\tattr.ownerElement = null;\n\t\t\t}\n\t\t}\n\t}else{\n\t\tthrow DOMException(NOT_FOUND_ERR,new Error(el.tagName+'@'+attr))\n\t}\n}\nNamedNodeMap.prototype = {\n\tlength:0,\n\titem:NodeList.prototype.item,\n\tgetNamedItem: function(key) {\n//\t\tif(key.indexOf(':')>0 || key == 'xmlns'){\n//\t\t\treturn null;\n//\t\t}\n\t\t//console.log()\n\t\tvar i = this.length;\n\t\twhile(i--){\n\t\t\tvar attr = this[i];\n\t\t\t//console.log(attr.nodeName,key)\n\t\t\tif(attr.nodeName == key){\n\t\t\t\treturn attr;\n\t\t\t}\n\t\t}\n\t},\n\tsetNamedItem: function(attr) {\n\t\tvar el = attr.ownerElement;\n\t\tif(el && el!=this._ownerElement){\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\n\t\t}\n\t\tvar oldAttr = this.getNamedItem(attr.nodeName);\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\n\t\treturn oldAttr;\n\t},\n\t/* returns Node */\n\tsetNamedItemNS: function(attr) {// raises: WRONG_DOCUMENT_ERR,NO_MODIFICATION_ALLOWED_ERR,INUSE_ATTRIBUTE_ERR\n\t\tvar el = attr.ownerElement, oldAttr;\n\t\tif(el && el!=this._ownerElement){\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\n\t\t}\n\t\toldAttr = this.getNamedItemNS(attr.namespaceURI,attr.localName);\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\n\t\treturn oldAttr;\n\t},\n\n\t/* returns Node */\n\tremoveNamedItem: function(key) {\n\t\tvar attr = this.getNamedItem(key);\n\t\t_removeNamedNode(this._ownerElement,this,attr);\n\t\treturn attr;\n\t\t\n\t\t\n\t},// raises: NOT_FOUND_ERR,NO_MODIFICATION_ALLOWED_ERR\n\t\n\t//for level2\n\tremoveNamedItemNS:function(namespaceURI,localName){\n\t\tvar attr = this.getNamedItemNS(namespaceURI,localName);\n\t\t_removeNamedNode(this._ownerElement,this,attr);\n\t\treturn attr;\n\t},\n\tgetNamedItemNS: function(namespaceURI, localName) {\n\t\tvar i = this.length;\n\t\twhile(i--){\n\t\t\tvar node = this[i];\n\t\t\tif(node.localName == localName && node.namespaceURI == namespaceURI){\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n};\n/**\n * @see http://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-102161490\n */\nfunction DOMImplementation(/* Object */ features) {\n\tthis._features = {};\n\tif (features) {\n\t\tfor (var feature in features) {\n\t\t\t this._features = features[feature];\n\t\t}\n\t}\n};\n\nDOMImplementation.prototype = {\n\thasFeature: function(/* string */ feature, /* string */ version) {\n\t\tvar versions = this._features[feature.toLowerCase()];\n\t\tif (versions && (!version || version in versions)) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateDocument:function(namespaceURI,  qualifiedName, doctype){// raises:INVALID_CHARACTER_ERR,NAMESPACE_ERR,WRONG_DOCUMENT_ERR\n\t\tvar doc = new Document();\n\t\tdoc.implementation = this;\n\t\tdoc.childNodes = new NodeList();\n\t\tdoc.doctype = doctype;\n\t\tif(doctype){\n\t\t\tdoc.appendChild(doctype);\n\t\t}\n\t\tif(qualifiedName){\n\t\t\tvar root = doc.createElementNS(namespaceURI,qualifiedName);\n\t\t\tdoc.appendChild(root);\n\t\t}\n\t\treturn doc;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateDocumentType:function(qualifiedName, publicId, systemId){// raises:INVALID_CHARACTER_ERR,NAMESPACE_ERR\n\t\tvar node = new DocumentType();\n\t\tnode.name = qualifiedName;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.publicId = publicId;\n\t\tnode.systemId = systemId;\n\t\t// Introduced in DOM Level 2:\n\t\t//readonly attribute DOMString        internalSubset;\n\t\t\n\t\t//TODO:..\n\t\t//  readonly attribute NamedNodeMap     entities;\n\t\t//  readonly attribute NamedNodeMap     notations;\n\t\treturn node;\n\t}\n};\n\n\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1950641247\n */\n\nfunction Node() {\n};\n\nNode.prototype = {\n\tfirstChild : null,\n\tlastChild : null,\n\tpreviousSibling : null,\n\tnextSibling : null,\n\tattributes : null,\n\tparentNode : null,\n\tchildNodes : null,\n\townerDocument : null,\n\tnodeValue : null,\n\tnamespaceURI : null,\n\tprefix : null,\n\tlocalName : null,\n\t// Modified in DOM Level 2:\n\tinsertBefore:function(newChild, refChild){//raises \n\t\treturn _insertBefore(this,newChild,refChild);\n\t},\n\treplaceChild:function(newChild, oldChild){//raises \n\t\tthis.insertBefore(newChild,oldChild);\n\t\tif(oldChild){\n\t\t\tthis.removeChild(oldChild);\n\t\t}\n\t},\n\tremoveChild:function(oldChild){\n\t\treturn _removeChild(this,oldChild);\n\t},\n\tappendChild:function(newChild){\n\t\treturn this.insertBefore(newChild,null);\n\t},\n\thasChildNodes:function(){\n\t\treturn this.firstChild != null;\n\t},\n\tcloneNode:function(deep){\n\t\treturn cloneNode(this.ownerDocument||this,this,deep);\n\t},\n\t// Modified in DOM Level 2:\n\tnormalize:function(){\n\t\tvar child = this.firstChild;\n\t\twhile(child){\n\t\t\tvar next = child.nextSibling;\n\t\t\tif(next && next.nodeType == TEXT_NODE && child.nodeType == TEXT_NODE){\n\t\t\t\tthis.removeChild(next);\n\t\t\t\tchild.appendData(next.data);\n\t\t\t}else{\n\t\t\t\tchild.normalize();\n\t\t\t\tchild = next;\n\t\t\t}\n\t\t}\n\t},\n  \t// Introduced in DOM Level 2:\n\tisSupported:function(feature, version){\n\t\treturn this.ownerDocument.implementation.hasFeature(feature,version);\n\t},\n    // Introduced in DOM Level 2:\n    hasAttributes:function(){\n    \treturn this.attributes.length>0;\n    },\n    lookupPrefix:function(namespaceURI){\n    \tvar el = this;\n    \twhile(el){\n    \t\tvar map = el._nsMap;\n    \t\t//console.dir(map)\n    \t\tif(map){\n    \t\t\tfor(var n in map){\n    \t\t\t\tif(map[n] == namespaceURI){\n    \t\t\t\t\treturn n;\n    \t\t\t\t}\n    \t\t\t}\n    \t\t}\n    \t\tel = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;\n    \t}\n    \treturn null;\n    },\n    // Introduced in DOM Level 3:\n    lookupNamespaceURI:function(prefix){\n    \tvar el = this;\n    \twhile(el){\n    \t\tvar map = el._nsMap;\n    \t\t//console.dir(map)\n    \t\tif(map){\n    \t\t\tif(prefix in map){\n    \t\t\t\treturn map[prefix] ;\n    \t\t\t}\n    \t\t}\n    \t\tel = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;\n    \t}\n    \treturn null;\n    },\n    // Introduced in DOM Level 3:\n    isDefaultNamespace:function(namespaceURI){\n    \tvar prefix = this.lookupPrefix(namespaceURI);\n    \treturn prefix == null;\n    }\n};\n\n\nfunction _xmlEncoder(c){\n\treturn c == '<' && '&lt;' ||\n         c == '>' && '&gt;' ||\n         c == '&' && '&amp;' ||\n         c == '\"' && '&quot;' ||\n         '&#'+c.charCodeAt()+';'\n}\n\n\ncopy(NodeType,Node);\ncopy(NodeType,Node.prototype);\n\n/**\n * @param callback return true for continue,false for break\n * @return boolean true: break visit;\n */\nfunction _visitNode(node,callback){\n\tif(callback(node)){\n\t\treturn true;\n\t}\n\tif(node = node.firstChild){\n\t\tdo{\n\t\t\tif(_visitNode(node,callback)){return true}\n        }while(node=node.nextSibling)\n    }\n}\n\n\n\nfunction Document(){\n}\nfunction _onAddAttribute(doc,el,newAttr){\n\tdoc && doc._inc++;\n\tvar ns = newAttr.namespaceURI ;\n\tif(ns == 'http://www.w3.org/2000/xmlns/'){\n\t\t//update namespace\n\t\tel._nsMap[newAttr.prefix?newAttr.localName:''] = newAttr.value\n\t}\n}\nfunction _onRemoveAttribute(doc,el,newAttr,remove){\n\tdoc && doc._inc++;\n\tvar ns = newAttr.namespaceURI ;\n\tif(ns == 'http://www.w3.org/2000/xmlns/'){\n\t\t//update namespace\n\t\tdelete el._nsMap[newAttr.prefix?newAttr.localName:'']\n\t}\n}\nfunction _onUpdateChild(doc,el,newChild){\n\tif(doc && doc._inc){\n\t\tdoc._inc++;\n\t\t//update childNodes\n\t\tvar cs = el.childNodes;\n\t\tif(newChild){\n\t\t\tcs[cs.length++] = newChild;\n\t\t}else{\n\t\t\t//console.log(1)\n\t\t\tvar child = el.firstChild;\n\t\t\tvar i = 0;\n\t\t\twhile(child){\n\t\t\t\tcs[i++] = child;\n\t\t\t\tchild =child.nextSibling;\n\t\t\t}\n\t\t\tcs.length = i;\n\t\t}\n\t}\n}\n\n/**\n * attributes;\n * children;\n * \n * writeable properties:\n * nodeValue,Attr:value,CharacterData:data\n * prefix\n */\nfunction _removeChild(parentNode,child){\n\tvar previous = child.previousSibling;\n\tvar next = child.nextSibling;\n\tif(previous){\n\t\tprevious.nextSibling = next;\n\t}else{\n\t\tparentNode.firstChild = next\n\t}\n\tif(next){\n\t\tnext.previousSibling = previous;\n\t}else{\n\t\tparentNode.lastChild = previous;\n\t}\n\t_onUpdateChild(parentNode.ownerDocument,parentNode);\n\treturn child;\n}\n/**\n * preformance key(refChild == null)\n */\nfunction _insertBefore(parentNode,newChild,nextChild){\n\tvar cp = newChild.parentNode;\n\tif(cp){\n\t\tcp.removeChild(newChild);//remove and update\n\t}\n\tif(newChild.nodeType === DOCUMENT_FRAGMENT_NODE){\n\t\tvar newFirst = newChild.firstChild;\n\t\tif (newFirst == null) {\n\t\t\treturn newChild;\n\t\t}\n\t\tvar newLast = newChild.lastChild;\n\t}else{\n\t\tnewFirst = newLast = newChild;\n\t}\n\tvar pre = nextChild ? nextChild.previousSibling : parentNode.lastChild;\n\n\tnewFirst.previousSibling = pre;\n\tnewLast.nextSibling = nextChild;\n\t\n\t\n\tif(pre){\n\t\tpre.nextSibling = newFirst;\n\t}else{\n\t\tparentNode.firstChild = newFirst;\n\t}\n\tif(nextChild == null){\n\t\tparentNode.lastChild = newLast;\n\t}else{\n\t\tnextChild.previousSibling = newLast;\n\t}\n\tdo{\n\t\tnewFirst.parentNode = parentNode;\n\t}while(newFirst !== newLast && (newFirst= newFirst.nextSibling))\n\t_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);\n\t//console.log(parentNode.lastChild.nextSibling == null)\n\tif (newChild.nodeType == DOCUMENT_FRAGMENT_NODE) {\n\t\tnewChild.firstChild = newChild.lastChild = null;\n\t}\n\treturn newChild;\n}\nfunction _appendSingleChild(parentNode,newChild){\n\tvar cp = newChild.parentNode;\n\tif(cp){\n\t\tvar pre = parentNode.lastChild;\n\t\tcp.removeChild(newChild);//remove and update\n\t\tvar pre = parentNode.lastChild;\n\t}\n\tvar pre = parentNode.lastChild;\n\tnewChild.parentNode = parentNode;\n\tnewChild.previousSibling = pre;\n\tnewChild.nextSibling = null;\n\tif(pre){\n\t\tpre.nextSibling = newChild;\n\t}else{\n\t\tparentNode.firstChild = newChild;\n\t}\n\tparentNode.lastChild = newChild;\n\t_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);\n\treturn newChild;\n\t//console.log(\"__aa\",parentNode.lastChild.nextSibling == null)\n}\nDocument.prototype = {\n\t//implementation : null,\n\tnodeName :  '#document',\n\tnodeType :  DOCUMENT_NODE,\n\tdoctype :  null,\n\tdocumentElement :  null,\n\t_inc : 1,\n\t\n\tinsertBefore :  function(newChild, refChild){//raises \n\t\tif(newChild.nodeType == DOCUMENT_FRAGMENT_NODE){\n\t\t\tvar child = newChild.firstChild;\n\t\t\twhile(child){\n\t\t\t\tvar next = child.nextSibling;\n\t\t\t\tthis.insertBefore(child,refChild);\n\t\t\t\tchild = next;\n\t\t\t}\n\t\t\treturn newChild;\n\t\t}\n\t\tif(this.documentElement == null && newChild.nodeType == ELEMENT_NODE){\n\t\t\tthis.documentElement = newChild;\n\t\t}\n\t\t\n\t\treturn _insertBefore(this,newChild,refChild),(newChild.ownerDocument = this),newChild;\n\t},\n\tremoveChild :  function(oldChild){\n\t\tif(this.documentElement == oldChild){\n\t\t\tthis.documentElement = null;\n\t\t}\n\t\treturn _removeChild(this,oldChild);\n\t},\n\t// Introduced in DOM Level 2:\n\timportNode : function(importedNode,deep){\n\t\treturn importNode(this,importedNode,deep);\n\t},\n\t// Introduced in DOM Level 2:\n\tgetElementById :\tfunction(id){\n\t\tvar rtv = null;\n\t\t_visitNode(this.documentElement,function(node){\n\t\t\tif(node.nodeType == ELEMENT_NODE){\n\t\t\t\tif(node.getAttribute('id') == id){\n\t\t\t\t\trtv = node;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\treturn rtv;\n\t},\n\t\n\t//document factory method:\n\tcreateElement :\tfunction(tagName){\n\t\tvar node = new Element();\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = tagName;\n\t\tnode.tagName = tagName;\n\t\tnode.childNodes = new NodeList();\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\n\t\tattrs._ownerElement = node;\n\t\treturn node;\n\t},\n\tcreateDocumentFragment :\tfunction(){\n\t\tvar node = new DocumentFragment();\n\t\tnode.ownerDocument = this;\n\t\tnode.childNodes = new NodeList();\n\t\treturn node;\n\t},\n\tcreateTextNode :\tfunction(data){\n\t\tvar node = new Text();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateComment :\tfunction(data){\n\t\tvar node = new Comment();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateCDATASection :\tfunction(data){\n\t\tvar node = new CDATASection();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateProcessingInstruction :\tfunction(target,data){\n\t\tvar node = new ProcessingInstruction();\n\t\tnode.ownerDocument = this;\n\t\tnode.tagName = node.target = target;\n\t\tnode.nodeValue= node.data = data;\n\t\treturn node;\n\t},\n\tcreateAttribute :\tfunction(name){\n\t\tvar node = new Attr();\n\t\tnode.ownerDocument\t= this;\n\t\tnode.name = name;\n\t\tnode.nodeName\t= name;\n\t\tnode.localName = name;\n\t\tnode.specified = true;\n\t\treturn node;\n\t},\n\tcreateEntityReference :\tfunction(name){\n\t\tvar node = new EntityReference();\n\t\tnode.ownerDocument\t= this;\n\t\tnode.nodeName\t= name;\n\t\treturn node;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateElementNS :\tfunction(namespaceURI,qualifiedName){\n\t\tvar node = new Element();\n\t\tvar pl = qualifiedName.split(':');\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\n\t\tnode.childNodes = new NodeList();\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.tagName = qualifiedName;\n\t\tnode.namespaceURI = namespaceURI;\n\t\tif(pl.length == 2){\n\t\t\tnode.prefix = pl[0];\n\t\t\tnode.localName = pl[1];\n\t\t}else{\n\t\t\t//el.prefix = null;\n\t\t\tnode.localName = qualifiedName;\n\t\t}\n\t\tattrs._ownerElement = node;\n\t\treturn node;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateAttributeNS :\tfunction(namespaceURI,qualifiedName){\n\t\tvar node = new Attr();\n\t\tvar pl = qualifiedName.split(':');\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.name = qualifiedName;\n\t\tnode.namespaceURI = namespaceURI;\n\t\tnode.specified = true;\n\t\tif(pl.length == 2){\n\t\t\tnode.prefix = pl[0];\n\t\t\tnode.localName = pl[1];\n\t\t}else{\n\t\t\t//el.prefix = null;\n\t\t\tnode.localName = qualifiedName;\n\t\t}\n\t\treturn node;\n\t}\n};\n_extends(Document,Node);\n\n\nfunction Element() {\n\tthis._nsMap = {};\n};\nElement.prototype = {\n\tnodeType : ELEMENT_NODE,\n\thasAttribute : function(name){\n\t\treturn this.getAttributeNode(name)!=null;\n\t},\n\tgetAttribute : function(name){\n\t\tvar attr = this.getAttributeNode(name);\n\t\treturn attr && attr.value || '';\n\t},\n\tgetAttributeNode : function(name){\n\t\treturn this.attributes.getNamedItem(name);\n\t},\n\tsetAttribute : function(name, value){\n\t\tvar attr = this.ownerDocument.createAttribute(name);\n\t\tattr.value = attr.nodeValue = \"\" + value;\n\t\tthis.setAttributeNode(attr)\n\t},\n\tremoveAttribute : function(name){\n\t\tvar attr = this.getAttributeNode(name)\n\t\tattr && this.removeAttributeNode(attr);\n\t},\n\t\n\t//four real opeartion method\n\tappendChild:function(newChild){\n\t\tif(newChild.nodeType === DOCUMENT_FRAGMENT_NODE){\n\t\t\treturn this.insertBefore(newChild,null);\n\t\t}else{\n\t\t\treturn _appendSingleChild(this,newChild);\n\t\t}\n\t},\n\tsetAttributeNode : function(newAttr){\n\t\treturn this.attributes.setNamedItem(newAttr);\n\t},\n\tsetAttributeNodeNS : function(newAttr){\n\t\treturn this.attributes.setNamedItemNS(newAttr);\n\t},\n\tremoveAttributeNode : function(oldAttr){\n\t\t//console.log(this == oldAttr.ownerElement)\n\t\treturn this.attributes.removeNamedItem(oldAttr.nodeName);\n\t},\n\t//get real attribute name,and remove it by removeAttributeNode\n\tremoveAttributeNS : function(namespaceURI, localName){\n\t\tvar old = this.getAttributeNodeNS(namespaceURI, localName);\n\t\told && this.removeAttributeNode(old);\n\t},\n\t\n\thasAttributeNS : function(namespaceURI, localName){\n\t\treturn this.getAttributeNodeNS(namespaceURI, localName)!=null;\n\t},\n\tgetAttributeNS : function(namespaceURI, localName){\n\t\tvar attr = this.getAttributeNodeNS(namespaceURI, localName);\n\t\treturn attr && attr.value || '';\n\t},\n\tsetAttributeNS : function(namespaceURI, qualifiedName, value){\n\t\tvar attr = this.ownerDocument.createAttributeNS(namespaceURI, qualifiedName);\n\t\tattr.value = attr.nodeValue = \"\" + value;\n\t\tthis.setAttributeNode(attr)\n\t},\n\tgetAttributeNodeNS : function(namespaceURI, localName){\n\t\treturn this.attributes.getNamedItemNS(namespaceURI, localName);\n\t},\n\t\n\tgetElementsByTagName : function(tagName){\n\t\treturn new LiveNodeList(this,function(base){\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base,function(node){\n\t\t\t\tif(node !== base && node.nodeType == ELEMENT_NODE && (tagName === '*' || node.tagName == tagName)){\n\t\t\t\t\tls.push(node);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\t\t});\n\t},\n\tgetElementsByTagNameNS : function(namespaceURI, localName){\n\t\treturn new LiveNodeList(this,function(base){\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base,function(node){\n\t\t\t\tif(node !== base && node.nodeType === ELEMENT_NODE && (namespaceURI === '*' || node.namespaceURI === namespaceURI) && (localName === '*' || node.localName == localName)){\n\t\t\t\t\tls.push(node);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\t\t\t\n\t\t});\n\t}\n};\nDocument.prototype.getElementsByTagName = Element.prototype.getElementsByTagName;\nDocument.prototype.getElementsByTagNameNS = Element.prototype.getElementsByTagNameNS;\n\n\n_extends(Element,Node);\nfunction Attr() {\n};\nAttr.prototype.nodeType = ATTRIBUTE_NODE;\n_extends(Attr,Node);\n\n\nfunction CharacterData() {\n};\nCharacterData.prototype = {\n\tdata : '',\n\tsubstringData : function(offset, count) {\n\t\treturn this.data.substring(offset, offset+count);\n\t},\n\tappendData: function(text) {\n\t\ttext = this.data+text;\n\t\tthis.nodeValue = this.data = text;\n\t\tthis.length = text.length;\n\t},\n\tinsertData: function(offset,text) {\n\t\tthis.replaceData(offset,0,text);\n\t\n\t},\n\tappendChild:function(newChild){\n\t\tthrow new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])\n\t},\n\tdeleteData: function(offset, count) {\n\t\tthis.replaceData(offset,count,\"\");\n\t},\n\treplaceData: function(offset, count, text) {\n\t\tvar start = this.data.substring(0,offset);\n\t\tvar end = this.data.substring(offset+count);\n\t\ttext = start + text + end;\n\t\tthis.nodeValue = this.data = text;\n\t\tthis.length = text.length;\n\t}\n}\n_extends(CharacterData,Node);\nfunction Text() {\n};\nText.prototype = {\n\tnodeName : \"#text\",\n\tnodeType : TEXT_NODE,\n\tsplitText : function(offset) {\n\t\tvar text = this.data;\n\t\tvar newText = text.substring(offset);\n\t\ttext = text.substring(0, offset);\n\t\tthis.data = this.nodeValue = text;\n\t\tthis.length = text.length;\n\t\tvar newNode = this.ownerDocument.createTextNode(newText);\n\t\tif(this.parentNode){\n\t\t\tthis.parentNode.insertBefore(newNode, this.nextSibling);\n\t\t}\n\t\treturn newNode;\n\t}\n}\n_extends(Text,CharacterData);\nfunction Comment() {\n};\nComment.prototype = {\n\tnodeName : \"#comment\",\n\tnodeType : COMMENT_NODE\n}\n_extends(Comment,CharacterData);\n\nfunction CDATASection() {\n};\nCDATASection.prototype = {\n\tnodeName : \"#cdata-section\",\n\tnodeType : CDATA_SECTION_NODE\n}\n_extends(CDATASection,CharacterData);\n\n\nfunction DocumentType() {\n};\nDocumentType.prototype.nodeType = DOCUMENT_TYPE_NODE;\n_extends(DocumentType,Node);\n\nfunction Notation() {\n};\nNotation.prototype.nodeType = NOTATION_NODE;\n_extends(Notation,Node);\n\nfunction Entity() {\n};\nEntity.prototype.nodeType = ENTITY_NODE;\n_extends(Entity,Node);\n\nfunction EntityReference() {\n};\nEntityReference.prototype.nodeType = ENTITY_REFERENCE_NODE;\n_extends(EntityReference,Node);\n\nfunction DocumentFragment() {\n};\nDocumentFragment.prototype.nodeName =\t\"#document-fragment\";\nDocumentFragment.prototype.nodeType =\tDOCUMENT_FRAGMENT_NODE;\n_extends(DocumentFragment,Node);\n\n\nfunction ProcessingInstruction() {\n}\nProcessingInstruction.prototype.nodeType = PROCESSING_INSTRUCTION_NODE;\n_extends(ProcessingInstruction,Node);\nfunction XMLSerializer(){}\nXMLSerializer.prototype.serializeToString = function(node,isHtml,nodeFilter){\n\treturn nodeSerializeToString.call(node,isHtml,nodeFilter);\n}\nNode.prototype.toString = nodeSerializeToString;\nfunction nodeSerializeToString(isHtml,nodeFilter){\n\tvar buf = [];\n\tvar refNode = this.nodeType == 9?this.documentElement:this;\n\tvar prefix = refNode.prefix;\n\tvar uri = refNode.namespaceURI;\n\t\n\tif(uri && prefix == null){\n\t\t//console.log(prefix)\n\t\tvar prefix = refNode.lookupPrefix(uri);\n\t\tif(prefix == null){\n\t\t\t//isHTML = true;\n\t\t\tvar visibleNamespaces=[\n\t\t\t{namespace:uri,prefix:null}\n\t\t\t//{namespace:uri,prefix:''}\n\t\t\t]\n\t\t}\n\t}\n\tserializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);\n\t//console.log('###',this.nodeType,uri,prefix,buf.join(''))\n\treturn buf.join('');\n}\nfunction needNamespaceDefine(node,isHTML, visibleNamespaces) {\n\tvar prefix = node.prefix||'';\n\tvar uri = node.namespaceURI;\n\tif (!prefix && !uri){\n\t\treturn false;\n\t}\n\tif (prefix === \"xml\" && uri === \"http://www.w3.org/XML/1998/namespace\" \n\t\t|| uri == 'http://www.w3.org/2000/xmlns/'){\n\t\treturn false;\n\t}\n\t\n\tvar i = visibleNamespaces.length \n\t//console.log('@@@@',node.tagName,prefix,uri,visibleNamespaces)\n\twhile (i--) {\n\t\tvar ns = visibleNamespaces[i];\n\t\t// get namespace prefix\n\t\t//console.log(node.nodeType,node.tagName,ns.prefix,prefix)\n\t\tif (ns.prefix == prefix){\n\t\t\treturn ns.namespace != uri;\n\t\t}\n\t}\n\t//console.log(isHTML,uri,prefix=='')\n\t//if(isHTML && prefix ==null && uri == 'http://www.w3.org/1999/xhtml'){\n\t//\treturn false;\n\t//}\n\t//node.flag = '11111'\n\t//console.error(3,true,node.flag,node.prefix,node.namespaceURI)\n\treturn true;\n}\nfunction serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){\n\tif(nodeFilter){\n\t\tnode = nodeFilter(node);\n\t\tif(node){\n\t\t\tif(typeof node == 'string'){\n\t\t\t\tbuf.push(node);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}else{\n\t\t\treturn;\n\t\t}\n\t\t//buf.sort.apply(attrs, attributeSorter);\n\t}\n\tswitch(node.nodeType){\n\tcase ELEMENT_NODE:\n\t\tif (!visibleNamespaces) visibleNamespaces = [];\n\t\tvar startVisibleNamespaces = visibleNamespaces.length;\n\t\tvar attrs = node.attributes;\n\t\tvar len = attrs.length;\n\t\tvar child = node.firstChild;\n\t\tvar nodeName = node.tagName;\n\t\t\n\t\tisHTML =  (htmlns === node.namespaceURI) ||isHTML \n\t\tbuf.push('<',nodeName);\n\t\t\n\t\t\n\t\t\n\t\tfor(var i=0;i<len;i++){\n\t\t\t// add namespaces for attributes\n\t\t\tvar attr = attrs.item(i);\n\t\t\tif (attr.prefix == 'xmlns') {\n\t\t\t\tvisibleNamespaces.push({ prefix: attr.localName, namespace: attr.value });\n\t\t\t}else if(attr.nodeName == 'xmlns'){\n\t\t\t\tvisibleNamespaces.push({ prefix: '', namespace: attr.value });\n\t\t\t}\n\t\t}\n\t\tfor(var i=0;i<len;i++){\n\t\t\tvar attr = attrs.item(i);\n\t\t\tif (needNamespaceDefine(attr,isHTML, visibleNamespaces)) {\n\t\t\t\tvar prefix = attr.prefix||'';\n\t\t\t\tvar uri = attr.namespaceURI;\n\t\t\t\tvar ns = prefix ? ' xmlns:' + prefix : \" xmlns\";\n\t\t\t\tbuf.push(ns, '=\"' , uri , '\"');\n\t\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace:uri });\n\t\t\t}\n\t\t\tserializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces);\n\t\t}\n\t\t// add namespace for current node\t\t\n\t\tif (needNamespaceDefine(node,isHTML, visibleNamespaces)) {\n\t\t\tvar prefix = node.prefix||'';\n\t\t\tvar uri = node.namespaceURI;\n\t\t\tvar ns = prefix ? ' xmlns:' + prefix : \" xmlns\";\n\t\t\tbuf.push(ns, '=\"' , uri , '\"');\n\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace:uri });\n\t\t}\n\t\t\n\t\tif(child || isHTML && !/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){\n\t\t\tbuf.push('>');\n\t\t\t//if is cdata child node\n\t\t\tif(isHTML && /^script$/i.test(nodeName)){\n\t\t\t\twhile(child){\n\t\t\t\t\tif(child.data){\n\t\t\t\t\t\tbuf.push(child.data);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tserializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);\n\t\t\t\t\t}\n\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t}\n\t\t\t}else\n\t\t\t{\n\t\t\t\twhile(child){\n\t\t\t\t\tserializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);\n\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbuf.push('</',nodeName,'>');\n\t\t}else{\n\t\t\tbuf.push('/>');\n\t\t}\n\t\t// remove added visible namespaces\n\t\t//visibleNamespaces.length = startVisibleNamespaces;\n\t\treturn;\n\tcase DOCUMENT_NODE:\n\tcase DOCUMENT_FRAGMENT_NODE:\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tserializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t\treturn;\n\tcase ATTRIBUTE_NODE:\n\t\treturn buf.push(' ',node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),'\"');\n\tcase TEXT_NODE:\n\t\treturn buf.push(node.data.replace(/[<&]/g,_xmlEncoder));\n\tcase CDATA_SECTION_NODE:\n\t\treturn buf.push( '<![CDATA[',node.data,']]>');\n\tcase COMMENT_NODE:\n\t\treturn buf.push( \"<!--\",node.data,\"-->\");\n\tcase DOCUMENT_TYPE_NODE:\n\t\tvar pubid = node.publicId;\n\t\tvar sysid = node.systemId;\n\t\tbuf.push('<!DOCTYPE ',node.name);\n\t\tif(pubid){\n\t\t\tbuf.push(' PUBLIC \"',pubid);\n\t\t\tif (sysid && sysid!='.') {\n\t\t\t\tbuf.push( '\" \"',sysid);\n\t\t\t}\n\t\t\tbuf.push('\">');\n\t\t}else if(sysid && sysid!='.'){\n\t\t\tbuf.push(' SYSTEM \"',sysid,'\">');\n\t\t}else{\n\t\t\tvar sub = node.internalSubset;\n\t\t\tif(sub){\n\t\t\t\tbuf.push(\" [\",sub,\"]\");\n\t\t\t}\n\t\t\tbuf.push(\">\");\n\t\t}\n\t\treturn;\n\tcase PROCESSING_INSTRUCTION_NODE:\n\t\treturn buf.push( \"<?\",node.target,\" \",node.data,\"?>\");\n\tcase ENTITY_REFERENCE_NODE:\n\t\treturn buf.push( '&',node.nodeName,';');\n\t//case ENTITY_NODE:\n\t//case NOTATION_NODE:\n\tdefault:\n\t\tbuf.push('??',node.nodeName);\n\t}\n}\nfunction importNode(doc,node,deep){\n\tvar node2;\n\tswitch (node.nodeType) {\n\tcase ELEMENT_NODE:\n\t\tnode2 = node.cloneNode(false);\n\t\tnode2.ownerDocument = doc;\n\t\t//var attrs = node2.attributes;\n\t\t//var len = attrs.length;\n\t\t//for(var i=0;i<len;i++){\n\t\t\t//node2.setAttributeNodeNS(importNode(doc,attrs.item(i),deep));\n\t\t//}\n\tcase DOCUMENT_FRAGMENT_NODE:\n\t\tbreak;\n\tcase ATTRIBUTE_NODE:\n\t\tdeep = true;\n\t\tbreak;\n\t//case ENTITY_REFERENCE_NODE:\n\t//case PROCESSING_INSTRUCTION_NODE:\n\t////case TEXT_NODE:\n\t//case CDATA_SECTION_NODE:\n\t//case COMMENT_NODE:\n\t//\tdeep = false;\n\t//\tbreak;\n\t//case DOCUMENT_NODE:\n\t//case DOCUMENT_TYPE_NODE:\n\t//cannot be imported.\n\t//case ENTITY_NODE:\n\t//case NOTATION_NODE：\n\t//can not hit in level3\n\t//default:throw e;\n\t}\n\tif(!node2){\n\t\tnode2 = node.cloneNode(false);//false\n\t}\n\tnode2.ownerDocument = doc;\n\tnode2.parentNode = null;\n\tif(deep){\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tnode2.appendChild(importNode(doc,child,deep));\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t}\n\treturn node2;\n}\n//\n//var _relationMap = {firstChild:1,lastChild:1,previousSibling:1,nextSibling:1,\n//\t\t\t\t\tattributes:1,childNodes:1,parentNode:1,documentElement:1,doctype,};\nfunction cloneNode(doc,node,deep){\n\tvar node2 = new node.constructor();\n\tfor(var n in node){\n\t\tvar v = node[n];\n\t\tif(typeof v != 'object' ){\n\t\t\tif(v != node2[n]){\n\t\t\t\tnode2[n] = v;\n\t\t\t}\n\t\t}\n\t}\n\tif(node.childNodes){\n\t\tnode2.childNodes = new NodeList();\n\t}\n\tnode2.ownerDocument = doc;\n\tswitch (node2.nodeType) {\n\tcase ELEMENT_NODE:\n\t\tvar attrs\t= node.attributes;\n\t\tvar attrs2\t= node2.attributes = new NamedNodeMap();\n\t\tvar len = attrs.length\n\t\tattrs2._ownerElement = node2;\n\t\tfor(var i=0;i<len;i++){\n\t\t\tnode2.setAttributeNode(cloneNode(doc,attrs.item(i),true));\n\t\t}\n\t\tbreak;;\n\tcase ATTRIBUTE_NODE:\n\t\tdeep = true;\n\t}\n\tif(deep){\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tnode2.appendChild(cloneNode(doc,child,deep));\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t}\n\treturn node2;\n}\n\nfunction __set__(object,key,value){\n\tobject[key] = value\n}\n//do dynamic\ntry{\n\tif(Object.defineProperty){\n\t\tObject.defineProperty(LiveNodeList.prototype,'length',{\n\t\t\tget:function(){\n\t\t\t\t_updateLiveList(this);\n\t\t\t\treturn this.$$length;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(Node.prototype,'textContent',{\n\t\t\tget:function(){\n\t\t\t\treturn getTextContent(this);\n\t\t\t},\n\t\t\tset:function(data){\n\t\t\t\tswitch(this.nodeType){\n\t\t\t\tcase ELEMENT_NODE:\n\t\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\t\t\twhile(this.firstChild){\n\t\t\t\t\t\tthis.removeChild(this.firstChild);\n\t\t\t\t\t}\n\t\t\t\t\tif(data || String(data)){\n\t\t\t\t\t\tthis.appendChild(this.ownerDocument.createTextNode(data));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t//TODO:\n\t\t\t\t\tthis.data = data;\n\t\t\t\t\tthis.value = data;\n\t\t\t\t\tthis.nodeValue = data;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\t\n\t\tfunction getTextContent(node){\n\t\t\tswitch(node.nodeType){\n\t\t\tcase ELEMENT_NODE:\n\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\t\tvar buf = [];\n\t\t\t\tnode = node.firstChild;\n\t\t\t\twhile(node){\n\t\t\t\t\tif(node.nodeType!==7 && node.nodeType !==8){\n\t\t\t\t\t\tbuf.push(getTextContent(node));\n\t\t\t\t\t}\n\t\t\t\t\tnode = node.nextSibling;\n\t\t\t\t}\n\t\t\t\treturn buf.join('');\n\t\t\tdefault:\n\t\t\t\treturn node.nodeValue;\n\t\t\t}\n\t\t}\n\t\t__set__ = function(object,key,value){\n\t\t\t//console.log(value)\n\t\t\tobject['$$'+key] = value\n\t\t}\n\t}\n}catch(e){//ie8\n}\n\n//if(typeof require == 'function'){\n\texports.DOMImplementation = DOMImplementation;\n\texports.XMLSerializer = XMLSerializer;\n//}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/xmldom/dom.js\n// module id = 18\n// module chunks = 0","module.exports = XMLHttpRequest;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"XMLHttpRequest\"\n// module id = 19\n// module chunks = 0","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar BlankNode = require('./blank-node');\nvar ClassOrder = require('./class-order');\nvar Collection = require('./collection');\nvar Literal = require('./literal');\nvar log = require('./log');\nvar NamedNode = require('./named-node');\nvar Node = require('./node');\nvar Serializer = require('./serialize');\nvar Statement = require('./statement');\nvar Variable = require('./variable');\n\nvar Formula = function (_Node) {\n  _inherits(Formula, _Node);\n\n  function Formula(statements, constraints, initBindings, optional) {\n    _classCallCheck(this, Formula);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Formula).call(this));\n\n    _this.termType = Formula.termType;\n    _this.statements = statements || [];\n    _this.constraints = constraints || [];\n    _this.initBindings = initBindings || [];\n    _this.optional = optional || [];\n    return _this;\n  }\n\n  _createClass(Formula, [{\n    key: 'add',\n    value: function add(s, p, o, g) {\n      return this.statements.push(new Statement(s, p, o, g));\n    }\n  }, {\n    key: 'addStatement',\n    value: function addStatement(st) {\n      return this.statements.push(st);\n    }\n  }, {\n    key: 'bnode',\n    value: function bnode(id) {\n      return new BlankNode(id);\n    }\n    /**\n     * Finds the types in the list which have no *stored* subtypes\n     * These are a set of classes which provide by themselves complete\n     * information -- the other classes are redundant for those who\n     * know the class DAG.\n     */\n\n  }, {\n    key: 'bottomTypeURIs',\n    value: function bottomTypeURIs(types) {\n      var bots;\n      var bottom;\n      var elt;\n      var i;\n      var k;\n      var len;\n      var ref;\n      var subs;\n      var v;\n      bots = [];\n      for (k in types) {\n        if (!types.hasOwnProperty(k)) continue;\n        v = types[k];\n        subs = this.each(void 0, this.sym('http://www.w3.org/2000/01/rdf-schema#subClassOf'), this.sym(k));\n        bottom = true;\n        i = 0;\n        for (len = subs.length; i < len; i++) {\n          elt = subs[i];\n          ref = elt.uri;\n          if (ref in types) {\n            // the subclass is one we know\n            bottom = false;\n            break;\n          }\n        }\n        if (bottom) {\n          bots[k] = v;\n        }\n      }\n      return bots;\n    }\n  }, {\n    key: 'collection',\n    value: function collection() {\n      return new Collection();\n    }\n  }, {\n    key: 'each',\n    value: function each(s, p, o, g) {\n      var elt, i, l, m, q;\n      var len, len1, len2, len3;\n      var results = [];\n      var sts = this.statementsMatching(s, p, o, g, false);\n      if (s == null) {\n        for (i = 0, len = sts.length; i < len; i++) {\n          elt = sts[i];\n          results.push(elt.subject);\n        }\n      } else if (p == null) {\n        for (l = 0, len1 = sts.length; l < len1; l++) {\n          elt = sts[l];\n          results.push(elt.predicate);\n        }\n      } else if (o == null) {\n        for (m = 0, len2 = sts.length; m < len2; m++) {\n          elt = sts[m];\n          results.push(elt.object);\n        }\n      } else if (g == null) {\n        for (q = 0, len3 = sts.length; q < len3; q++) {\n          elt = sts[q];\n          results.push(elt.why);\n        }\n      }\n      return results;\n    }\n  }, {\n    key: 'equals',\n    value: function equals(other) {\n      if (!other) {\n        return false;\n      }\n      return this.hashString() === other.hashString();\n    }\n    /*\n    For thisClass or any subclass, anything which has it is its type\n    or is the object of something which has the type as its range, or subject\n    of something which has the type as its domain\n    We don't bother doing subproperty (yet?)as it doesn't seeem to be used much.\n    Get all the Classes of which we can RDFS-infer the subject is a member\n    @returns a hash of URIs\n    */\n\n    /**\n     * For thisClass or any subclass, anything which has it is its type\n     * or is the object of something which has the type as its range, or subject\n     * of something which has the type as its domain\n     * We don't bother doing subproperty (yet?)as it doesn't seeem to be used\n     * much.\n     * Get all the Classes of which we can RDFS-infer the subject is a member\n     * @return a hash of URIs\n     */\n\n  }, {\n    key: 'findMembersNT',\n    value: function findMembersNT(thisClass) {\n      var i;\n      var l;\n      var len;\n      var len1;\n      var len2;\n      var len3;\n      var len4;\n      var m;\n      var members;\n      var pred;\n      var q;\n      var ref;\n      var ref1;\n      var ref2;\n      var ref3;\n      var ref4;\n      var ref5;\n      var seeds;\n      var st;\n      var t;\n      var u;\n      seeds = {};\n      seeds[thisClass.toNT()] = true;\n      members = {};\n      ref = this.transitiveClosure(seeds, this.sym('http://www.w3.org/2000/01/rdf-schema#subClassOf'), true);\n      for (t in ref) {\n        if (!ref.hasOwnProperty(t)) continue;\n        ref1 = this.statementsMatching(void 0, this.sym('http://www.w3.org/1999/02/22-rdf-syntax-ns#type'), this.fromNT(t));\n        for (i = 0, len = ref1.length; i < len; i++) {\n          st = ref1[i];\n          members[st.subject.toNT()] = st;\n        }\n        ref2 = this.each(void 0, this.sym('http://www.w3.org/2000/01/rdf-schema#domain'), this.fromNT(t));\n        for (l = 0, len1 = ref2.length; l < len1; l++) {\n          pred = ref2[l];\n          ref3 = this.statementsMatching(void 0, pred);\n          for (m = 0, len2 = ref3.length; m < len2; m++) {\n            st = ref3[m];\n            members[st.subject.toNT()] = st;\n          }\n        }\n        ref4 = this.each(void 0, this.sym('http://www.w3.org/2000/01/rdf-schema#range'), this.fromNT(t));\n        for (q = 0, len3 = ref4.length; q < len3; q++) {\n          pred = ref4[q];\n          ref5 = this.statementsMatching(void 0, pred);\n          for (u = 0, len4 = ref5.length; u < len4; u++) {\n            st = ref5[u];\n            members[st.object.toNT()] = st;\n          }\n        }\n      }\n      return members;\n    }\n  }, {\n    key: 'findMemberURIs',\n    value: function findMemberURIs(subject) {\n      return this.NTtoURI(this.findMembersNT(subject));\n    }\n    /**\n     * Get all the Classes of which we can RDFS-infer the subject is a superclass\n     * Returns a hash table where key is NT of type and value is statement why we\n     * think so.\n     * Does NOT return terms, returns URI strings.\n     * We use NT representations in this version because they handle blank nodes.\n     */\n\n  }, {\n    key: 'findSubClassesNT',\n    value: function findSubClassesNT(subject) {\n      var types = {};\n      types[subject.toNT()] = true;\n      return this.transitiveClosure(types, this.sym('http://www.w3.org/2000/01/rdf-schema#subClassOf'), true);\n    }\n    /**\n     * Get all the Classes of which we can RDFS-infer the subject is a subclass\n     * Returns a hash table where key is NT of type and value is statement why we\n     * think so.\n     * Does NOT return terms, returns URI strings.\n     * We use NT representations in this version because they handle blank nodes.\n     */\n\n  }, {\n    key: 'findSuperClassesNT',\n    value: function findSuperClassesNT(subject) {\n      var types = {};\n      types[subject.toNT()] = true;\n      return this.transitiveClosure(types, this.sym('http://www.w3.org/2000/01/rdf-schema#subClassOf'), false);\n    }\n    /**\n     * Get all the Classes of which we can RDFS-infer the subject is a member\n     * todo: This will loop is there is a class subclass loop (Sublass loops are\n     * not illegal)\n     * Returns a hash table where key is NT of type and value is statement why we\n     * think so.\n     * Does NOT return terms, returns URI strings.\n     * We use NT representations in this version because they handle blank nodes.\n     */\n\n  }, {\n    key: 'findTypesNT',\n    value: function findTypesNT(subject) {\n      var domain;\n      var i;\n      var l;\n      var len;\n      var len1;\n      var len2;\n      var len3;\n      var m;\n      var q;\n      var range;\n      var rdftype;\n      var ref;\n      var ref1;\n      var ref2;\n      var ref3;\n      var st;\n      var types;\n      rdftype = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type';\n      types = [];\n      ref = this.statementsMatching(subject, void 0, void 0);\n      for (i = 0, len = ref.length; i < len; i++) {\n        st = ref[i];\n        if (st.predicate.uri === rdftype) {\n          types[st.object.toNT()] = st;\n        } else {\n          ref1 = this.each(st.predicate, this.sym('http://www.w3.org/2000/01/rdf-schema#domain'));\n          for (l = 0, len1 = ref1.length; l < len1; l++) {\n            range = ref1[l];\n            types[range.toNT()] = st;\n          }\n        }\n      }\n      ref2 = this.statementsMatching(void 0, void 0, subject);\n      for (m = 0, len2 = ref2.length; m < len2; m++) {\n        st = ref2[m];\n        ref3 = this.each(st.predicate, this.sym('http://www.w3.org/2000/01/rdf-schema#range'));\n        for (q = 0, len3 = ref3.length; q < len3; q++) {\n          domain = ref3[q];\n          types[domain.toNT()] = st;\n        }\n      }\n      return this.transitiveClosure(types, this.sym('http://www.w3.org/2000/01/rdf-schema#subClassOf'), false);\n    }\n  }, {\n    key: 'findTypeURIs',\n    value: function findTypeURIs(subject) {\n      return this.NTtoURI(this.findTypesNT(subject));\n    }\n    // Trace the statements which connect directly, or through bnodes\n    // Returns an array of statements\n    // doc param may be null to search all documents in store\n\n  }, {\n    key: 'connectedStatements',\n    value: function connectedStatements(subject, doc, excludePredicateURIs) {\n      excludePredicateURIs = excludePredicateURIs || [];\n      var todo = [subject];\n      var done = [];\n      var doneArcs = [];\n      var result = [];\n      var self = this;\n      var follow = function follow(x) {\n        var queue = function queue(x) {\n          if (x.termType === 'BlankNode' && !done[x.value]) {\n            done[x.value] = true;\n            todo.push(x);\n          }\n        };\n        var sts = self.statementsMatching(null, null, x, doc).concat(self.statementsMatching(x, null, null, doc));\n        sts = sts.filter(function (st) {\n          if (excludePredicateURIs[st.predicate.uri]) return false;\n          var hash = st.toNT();\n          if (doneArcs[hash]) return false;\n          doneArcs[hash] = true;\n          return true;\n        });\n        sts.forEach(function (st, i) {\n          queue(st.subject);\n          queue(st.object);\n        });\n        result = result.concat(sts);\n      };\n      while (todo.length) {\n        follow(todo.shift());\n      }\n      // console.log('' + result.length + ' statements about ' + subject)\n      return result;\n    }\n  }, {\n    key: 'formula',\n    value: function formula() {\n      return new Formula();\n    }\n    /**\n     * Transforms an NTriples string format into a Node.\n     * The bnode bit should not be used on program-external values; designed\n     * for internal work such as storing a bnode id in an HTML attribute.\n     * This will only parse the strings generated by the vaious toNT() methods.\n     */\n\n  }, {\n    key: 'fromNT',\n    value: function fromNT(str) {\n      var dt, k, lang, x;\n      switch (str[0]) {\n        case '<':\n          return this.sym(str.slice(1, -1));\n        case '\"':\n          lang = void 0;\n          dt = void 0;\n          k = str.lastIndexOf('\"');\n          if (k < str.length - 1) {\n            if (str[k + 1] === '@') {\n              lang = str.slice(k + 2);\n            } else if (str.slice(k + 1, k + 3) === '^^') {\n              dt = this.fromNT(str.slice(k + 3));\n            } else {\n              throw new Error(\"Can't convert string from NT: \" + str);\n            }\n          }\n          str = str.slice(1, k);\n          str = str.replace(/\\\\\"/g, '\"');\n          str = str.replace(/\\\\n/g, '\\n');\n          str = str.replace(/\\\\\\\\/g, '\\\\');\n          return this.literal(str, lang, dt);\n        case '_':\n          x = new BlankNode();\n          x.id = parseInt(str.slice(3), 10);\n          BlankNode.nextId--;\n          return x;\n        case '?':\n          return new Variable(str.slice(1));\n      }\n      throw new Error(\"Can't convert from NT: \" + str);\n    }\n  }, {\n    key: 'holds',\n    value: function holds(s, p, o, g) {\n      var i;\n      if (arguments.length === 1) {\n        if (!s) {\n          return true;\n        }\n        if (s instanceof Array) {\n          for (i = 0; i < s.length; i++) {\n            if (!this.holds(s[i])) {\n              return false;\n            }\n          }\n          return true;\n        } else if (s instanceof Statement) {\n          return this.holds(s.subject, s.predicate, s.object, s.why);\n        } else if (s.statements) {\n          return this.holds(s.statements);\n        }\n      }\n\n      var st = this.anyStatementMatching(s, p, o, g);\n      return st != null;\n    }\n  }, {\n    key: 'holdsStatement',\n    value: function holdsStatement(st) {\n      return this.holds(st.subject, st.predicate, st.object, st.why);\n    }\n  }, {\n    key: 'list',\n    value: function list(values) {\n      var collection = new Collection();\n      values.forEach(function (val) {\n        collection.append(val);\n      });\n      return collection;\n    }\n  }, {\n    key: 'literal',\n    value: function literal(val, lang, dt) {\n      return new Literal('' + val, lang, dt);\n    }\n    /**\n     * transform a collection of NTriple URIs into their URI strings\n     * @param t some iterable colletion of NTriple URI strings\n     * @return a collection of the URIs as strings\n     * todo: explain why it is important to go through NT\n     */\n\n  }, {\n    key: 'NTtoURI',\n    value: function NTtoURI(t) {\n      var k, v;\n      var uris = {};\n      for (k in t) {\n        if (!t.hasOwnProperty(k)) continue;\n        v = t[k];\n        if (k[0] === '<') {\n          uris[k.slice(1, -1)] = v;\n        }\n      }\n      return uris;\n    }\n  }, {\n    key: 'serialize',\n    value: function serialize(base, contentType, provenance) {\n      var documentString;\n      var sts;\n      var sz;\n      sz = Serializer(this);\n      sz.suggestNamespaces(this.namespaces);\n      sz.setBase(base);\n      if (provenance) {\n        sts = this.statementsMatching(void 0, void 0, void 0, provenance);\n      } else {\n        sts = this.statements;\n      }\n      switch (contentType != null ? contentType : 'text/n3') {\n        case 'application/rdf+xml':\n          documentString = sz.statementsToXML(sts);\n          break;\n        case 'text/n3':\n        case 'text/turtle':\n          documentString = sz.statementsToN3(sts);\n          break;\n        default:\n          throw new Error('serialize: Content-type ' + contentType + ' not supported.');\n      }\n      return documentString;\n    }\n  }, {\n    key: 'substitute',\n    value: function substitute(bindings) {\n      var statementsCopy = this.statements.map(function (ea) {\n        return ea.substitute(bindings);\n      });\n      console.log('formula subs statmnts:' + statementsCopy);\n      var y = new Formula();\n      y.add(statementsCopy);\n      console.log('indexed-form subs formula:' + y);\n      return y;\n    }\n  }, {\n    key: 'sym',\n    value: function sym(uri, name) {\n      if (name) {\n        throw new Error('This feature (kb.sym with 2 args) is removed. Do not assume prefix mappings.');\n      }\n      return new NamedNode(uri);\n    }\n  }, {\n    key: 'the',\n    value: function the(s, p, o, g) {\n      var x = this.any(s, p, o, g);\n      if (x == null) {\n        log.error('No value found for the() {' + s + ' ' + p + ' ' + o + '}.');\n      }\n      return x;\n    }\n    /**\n     * RDFS Inference\n     * These are hand-written implementations of a backward-chaining reasoner\n     * over the RDFS axioms.\n     * @param seeds {Object} a hash of NTs of classes to start with\n     * @param predicate The property to trace though\n     * @param inverse trace inverse direction\n     */\n\n  }, {\n    key: 'transitiveClosure',\n    value: function transitiveClosure(seeds, predicate, inverse) {\n      var elt, i, len, s, sups, t;\n      var agenda = {};\n      Object.assign(agenda, seeds); // make a copy\n      var done = {}; // classes we have looked up\n      while (true) {\n        t = function () {\n          for (var p in agenda) {\n            if (!agenda.hasOwnProperty(p)) continue;\n            return p;\n          }\n        }();\n        if (t == null) {\n          return done;\n        }\n        sups = inverse ? this.each(void 0, predicate, this.fromNT(t)) : this.each(this.fromNT(t), predicate);\n        for (i = 0, len = sups.length; i < len; i++) {\n          elt = sups[i];\n          s = elt.toNT();\n          if (s in done) {\n            continue;\n          }\n          if (s in agenda) {\n            continue;\n          }\n          agenda[s] = agenda[t];\n        }\n        done[t] = agenda[t];\n        delete agenda[t];\n      }\n    }\n    /**\n     * Finds the types in the list which have no *stored* supertypes\n     * We exclude the universal class, owl:Things and rdf:Resource, as it is\n     * information-free.\n     */\n\n  }, {\n    key: 'topTypeURIs',\n    value: function topTypeURIs(types) {\n      var i;\n      var j;\n      var k;\n      var len;\n      var n;\n      var ref;\n      var tops;\n      var v;\n      tops = [];\n      for (k in types) {\n        if (!types.hasOwnProperty(k)) continue;\n        v = types[k];\n        n = 0;\n        ref = this.each(this.sym(k), this.sym('http://www.w3.org/2000/01/rdf-schema#subClassOf'));\n        for (i = 0, len = ref.length; i < len; i++) {\n          j = ref[i];\n          if (j.uri !== 'http://www.w3.org/2000/01/rdf-schema#Resource') {\n            n++;\n            break;\n          }\n        }\n        if (!n) {\n          tops[k] = v;\n        }\n      }\n      if (tops['http://www.w3.org/2000/01/rdf-schema#Resource']) {\n        delete tops['http://www.w3.org/2000/01/rdf-schema#Resource'];\n      }\n      if (tops['http://www.w3.org/2002/07/owl#Thing']) {\n        delete tops['http://www.w3.org/2002/07/owl#Thing'];\n      }\n      return tops;\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return '{' + this.statements.join('\\n') + '}';\n    }\n  }, {\n    key: 'whether',\n    value: function whether(s, p, o, g) {\n      return this.statementsMatching(s, p, o, g, false).length;\n    }\n  }]);\n\n  return Formula;\n}(Node);\n\nFormula.termType = 'formula';\n\nFormula.prototype.classOrder = ClassOrder['Formula'];\nFormula.prototype.isVar = 0;\n\nFormula.prototype.ns = require('./namespace');\nFormula.prototype.variable = function (name) {\n  return new Variable(name);\n};\n\nmodule.exports = Formula;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rdflib/lib/formula.js\n// module id = 20\n// module chunks = 0","'use strict';\n\nmodule.exports = serialize;\n\nvar convert = require('./convert');\nvar Serializer = require('./serializer');\n\n/**\n * Serialize to the appropriate format\n * @@ Currently NQuads and JSON/LD are deal with extrelemently inefficiently\n * through mutiple conversions.\n */\nfunction serialize(target, kb, base, contentType, callback) {\n  base = base || target.uri;\n  contentType = contentType || 'text/turtle'; // text/n3 if complex?\n  var documentString = null;\n  try {\n    var sz = Serializer(kb);\n    var newSts = kb.statementsMatching(undefined, undefined, undefined, target);\n    var n3String;\n    sz.suggestNamespaces(kb.namespaces);\n    sz.setBase(base);\n    switch (contentType) {\n      case 'application/rdf+xml':\n        documentString = sz.statementsToXML(newSts);\n        return executeCallback(null, documentString);\n      case 'text/n3':\n      case 'application/n3':\n        // Legacy\n        documentString = sz.statementsToN3(newSts);\n        return executeCallback(null, documentString);\n      case 'text/turtle':\n      case 'application/x-turtle':\n        // Legacy\n        sz.setFlags('si'); // Suppress = for sameAs and => for implies\n        documentString = sz.statementsToN3(newSts);\n        return executeCallback(null, documentString);\n      case 'application/n-triples':\n        sz.setFlags('deinprstux'); // Suppress nice parts of N3 to make ntriples\n        documentString = sz.statementsToNTriples(newSts);\n        return executeCallback(null, documentString);\n      case 'application/ld+json':\n        sz.setFlags('deinprstux'); // Use adapters to connect to incmpatible parser\n        n3String = sz.statementsToNTriples(newSts);\n        // n3String = sz.statementsToN3(newSts)\n        convert.convertToJson(n3String, callback);\n        break;\n      case 'application/n-quads':\n      case 'application/nquads':\n        // @@@ just outpout the quads? Does not work for collections\n        sz.setFlags('deinprstux q'); // Suppress nice parts of N3 to make ntriples\n        documentString = sz.statementsToNTriples(newSts); // q in flag means actually quads\n        return executeCallback(null, documentString);\n        // n3String = sz.statementsToN3(newSts)\n        // documentString = convert.convertToNQuads(n3String, callback)\n        break;\n      default:\n        throw new Error('Serialize: Content-type ' + contentType + ' not supported for data write.');\n    }\n  } catch (err) {\n    if (callback) {\n      return callback(err);\n    }\n    throw err; // Don't hide problems from caller in sync mode\n  }\n\n  function executeCallback(err, result) {\n    if (callback) {\n      callback(err, result);\n      return;\n    } else {\n      return result;\n    }\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rdflib/lib/serialize.js\n// module id = 21\n// module chunks = 0","'use strict';\n\nmodule.exports.convertToJson = convertToJson;\nmodule.exports.convertToNQuads = convertToNQuads;\n\nvar asyncLib = require('async'); // @@ Goal: remove this dependency\nvar jsonld = require('jsonld');\nvar N3 = require('n3'); // @@ Goal: remove this dependency\n\nfunction convertToJson(n3String, jsonCallback) {\n  var jsonString;\n  var n3Parser = N3.Parser();\n  var n3Writer = N3.Writer({\n    format: 'N-Quads'\n  });\n  asyncLib.waterfall([function (callback) {\n    n3Parser.parse(n3String, callback);\n  }, function (triple, prefix, callback) {\n    if (triple !== null) {\n      n3Writer.addTriple(triple);\n    }\n    if (typeof callback === 'function') {\n      n3Writer.end(callback);\n    }\n  }, function (result, callback) {\n    try {\n      jsonld.fromRDF(result, {\n        format: 'application/nquads'\n      }, callback);\n    } catch (err) {\n      callback(err);\n    }\n  }, function (json, callback) {\n    jsonString = JSON.stringify(json);\n    jsonCallback(null, jsonString);\n  }], function (err, result) {\n    jsonCallback(err, jsonString);\n  });\n}\n\nfunction convertToNQuads(n3String, nquadCallback) {\n  var nquadString;\n  var n3Parser = N3.Parser();\n  var n3Writer = N3.Writer({\n    format: 'N-Quads'\n  });\n  asyncLib.waterfall([function (callback) {\n    n3Parser.parse(n3String, callback);\n  }, function (triple, prefix, callback) {\n    if (triple !== null) {\n      n3Writer.addTriple(triple);\n    }\n    if (typeof callback === 'function') {\n      n3Writer.end(callback);\n    }\n  }, function (result, callback) {\n    nquadString = result;\n    nquadCallback(null, nquadString);\n  }], function (err, result) {\n    nquadCallback(err, nquadString);\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rdflib/lib/convert.js\n// module id = 22\n// module chunks = 0","/*!\n * async\n * https://github.com/caolan/async\n *\n * Copyright 2010-2014 Caolan McMahon\n * Released under the MIT license\n */\n/*jshint onevar: false, indent:4 */\n/*global setImmediate: false, setTimeout: false, console: false */\n(function () {\n\n    var async = {};\n\n    // global on the server, window in the browser\n    var root, previous_async;\n\n    root = this;\n    if (root != null) {\n      previous_async = root.async;\n    }\n\n    async.noConflict = function () {\n        root.async = previous_async;\n        return async;\n    };\n\n    function only_once(fn) {\n        var called = false;\n        return function() {\n            if (called) throw new Error(\"Callback was already called.\");\n            called = true;\n            fn.apply(root, arguments);\n        }\n    }\n\n    //// cross-browser compatiblity functions ////\n\n    var _toString = Object.prototype.toString;\n\n    var _isArray = Array.isArray || function (obj) {\n        return _toString.call(obj) === '[object Array]';\n    };\n\n    var _each = function (arr, iterator) {\n        for (var i = 0; i < arr.length; i += 1) {\n            iterator(arr[i], i, arr);\n        }\n    };\n\n    var _map = function (arr, iterator) {\n        if (arr.map) {\n            return arr.map(iterator);\n        }\n        var results = [];\n        _each(arr, function (x, i, a) {\n            results.push(iterator(x, i, a));\n        });\n        return results;\n    };\n\n    var _reduce = function (arr, iterator, memo) {\n        if (arr.reduce) {\n            return arr.reduce(iterator, memo);\n        }\n        _each(arr, function (x, i, a) {\n            memo = iterator(memo, x, i, a);\n        });\n        return memo;\n    };\n\n    var _keys = function (obj) {\n        if (Object.keys) {\n            return Object.keys(obj);\n        }\n        var keys = [];\n        for (var k in obj) {\n            if (obj.hasOwnProperty(k)) {\n                keys.push(k);\n            }\n        }\n        return keys;\n    };\n\n    //// exported async module functions ////\n\n    //// nextTick implementation with browser-compatible fallback ////\n    if (typeof process === 'undefined' || !(process.nextTick)) {\n        if (typeof setImmediate === 'function') {\n            async.nextTick = function (fn) {\n                // not a direct alias for IE10 compatibility\n                setImmediate(fn);\n            };\n            async.setImmediate = async.nextTick;\n        }\n        else {\n            async.nextTick = function (fn) {\n                setTimeout(fn, 0);\n            };\n            async.setImmediate = async.nextTick;\n        }\n    }\n    else {\n        async.nextTick = process.nextTick;\n        if (typeof setImmediate !== 'undefined') {\n            async.setImmediate = function (fn) {\n              // not a direct alias for IE10 compatibility\n              setImmediate(fn);\n            };\n        }\n        else {\n            async.setImmediate = async.nextTick;\n        }\n    }\n\n    async.each = function (arr, iterator, callback) {\n        callback = callback || function () {};\n        if (!arr.length) {\n            return callback();\n        }\n        var completed = 0;\n        _each(arr, function (x) {\n            iterator(x, only_once(done) );\n        });\n        function done(err) {\n          if (err) {\n              callback(err);\n              callback = function () {};\n          }\n          else {\n              completed += 1;\n              if (completed >= arr.length) {\n                  callback();\n              }\n          }\n        }\n    };\n    async.forEach = async.each;\n\n    async.eachSeries = function (arr, iterator, callback) {\n        callback = callback || function () {};\n        if (!arr.length) {\n            return callback();\n        }\n        var completed = 0;\n        var iterate = function () {\n            iterator(arr[completed], function (err) {\n                if (err) {\n                    callback(err);\n                    callback = function () {};\n                }\n                else {\n                    completed += 1;\n                    if (completed >= arr.length) {\n                        callback();\n                    }\n                    else {\n                        iterate();\n                    }\n                }\n            });\n        };\n        iterate();\n    };\n    async.forEachSeries = async.eachSeries;\n\n    async.eachLimit = function (arr, limit, iterator, callback) {\n        var fn = _eachLimit(limit);\n        fn.apply(null, [arr, iterator, callback]);\n    };\n    async.forEachLimit = async.eachLimit;\n\n    var _eachLimit = function (limit) {\n\n        return function (arr, iterator, callback) {\n            callback = callback || function () {};\n            if (!arr.length || limit <= 0) {\n                return callback();\n            }\n            var completed = 0;\n            var started = 0;\n            var running = 0;\n\n            (function replenish () {\n                if (completed >= arr.length) {\n                    return callback();\n                }\n\n                while (running < limit && started < arr.length) {\n                    started += 1;\n                    running += 1;\n                    iterator(arr[started - 1], function (err) {\n                        if (err) {\n                            callback(err);\n                            callback = function () {};\n                        }\n                        else {\n                            completed += 1;\n                            running -= 1;\n                            if (completed >= arr.length) {\n                                callback();\n                            }\n                            else {\n                                replenish();\n                            }\n                        }\n                    });\n                }\n            })();\n        };\n    };\n\n\n    var doParallel = function (fn) {\n        return function () {\n            var args = Array.prototype.slice.call(arguments);\n            return fn.apply(null, [async.each].concat(args));\n        };\n    };\n    var doParallelLimit = function(limit, fn) {\n        return function () {\n            var args = Array.prototype.slice.call(arguments);\n            return fn.apply(null, [_eachLimit(limit)].concat(args));\n        };\n    };\n    var doSeries = function (fn) {\n        return function () {\n            var args = Array.prototype.slice.call(arguments);\n            return fn.apply(null, [async.eachSeries].concat(args));\n        };\n    };\n\n\n    var _asyncMap = function (eachfn, arr, iterator, callback) {\n        arr = _map(arr, function (x, i) {\n            return {index: i, value: x};\n        });\n        if (!callback) {\n            eachfn(arr, function (x, callback) {\n                iterator(x.value, function (err) {\n                    callback(err);\n                });\n            });\n        } else {\n            var results = [];\n            eachfn(arr, function (x, callback) {\n                iterator(x.value, function (err, v) {\n                    results[x.index] = v;\n                    callback(err);\n                });\n            }, function (err) {\n                callback(err, results);\n            });\n        }\n    };\n    async.map = doParallel(_asyncMap);\n    async.mapSeries = doSeries(_asyncMap);\n    async.mapLimit = function (arr, limit, iterator, callback) {\n        return _mapLimit(limit)(arr, iterator, callback);\n    };\n\n    var _mapLimit = function(limit) {\n        return doParallelLimit(limit, _asyncMap);\n    };\n\n    // reduce only has a series version, as doing reduce in parallel won't\n    // work in many situations.\n    async.reduce = function (arr, memo, iterator, callback) {\n        async.eachSeries(arr, function (x, callback) {\n            iterator(memo, x, function (err, v) {\n                memo = v;\n                callback(err);\n            });\n        }, function (err) {\n            callback(err, memo);\n        });\n    };\n    // inject alias\n    async.inject = async.reduce;\n    // foldl alias\n    async.foldl = async.reduce;\n\n    async.reduceRight = function (arr, memo, iterator, callback) {\n        var reversed = _map(arr, function (x) {\n            return x;\n        }).reverse();\n        async.reduce(reversed, memo, iterator, callback);\n    };\n    // foldr alias\n    async.foldr = async.reduceRight;\n\n    var _filter = function (eachfn, arr, iterator, callback) {\n        var results = [];\n        arr = _map(arr, function (x, i) {\n            return {index: i, value: x};\n        });\n        eachfn(arr, function (x, callback) {\n            iterator(x.value, function (v) {\n                if (v) {\n                    results.push(x);\n                }\n                callback();\n            });\n        }, function (err) {\n            callback(_map(results.sort(function (a, b) {\n                return a.index - b.index;\n            }), function (x) {\n                return x.value;\n            }));\n        });\n    };\n    async.filter = doParallel(_filter);\n    async.filterSeries = doSeries(_filter);\n    // select alias\n    async.select = async.filter;\n    async.selectSeries = async.filterSeries;\n\n    var _reject = function (eachfn, arr, iterator, callback) {\n        var results = [];\n        arr = _map(arr, function (x, i) {\n            return {index: i, value: x};\n        });\n        eachfn(arr, function (x, callback) {\n            iterator(x.value, function (v) {\n                if (!v) {\n                    results.push(x);\n                }\n                callback();\n            });\n        }, function (err) {\n            callback(_map(results.sort(function (a, b) {\n                return a.index - b.index;\n            }), function (x) {\n                return x.value;\n            }));\n        });\n    };\n    async.reject = doParallel(_reject);\n    async.rejectSeries = doSeries(_reject);\n\n    var _detect = function (eachfn, arr, iterator, main_callback) {\n        eachfn(arr, function (x, callback) {\n            iterator(x, function (result) {\n                if (result) {\n                    main_callback(x);\n                    main_callback = function () {};\n                }\n                else {\n                    callback();\n                }\n            });\n        }, function (err) {\n            main_callback();\n        });\n    };\n    async.detect = doParallel(_detect);\n    async.detectSeries = doSeries(_detect);\n\n    async.some = function (arr, iterator, main_callback) {\n        async.each(arr, function (x, callback) {\n            iterator(x, function (v) {\n                if (v) {\n                    main_callback(true);\n                    main_callback = function () {};\n                }\n                callback();\n            });\n        }, function (err) {\n            main_callback(false);\n        });\n    };\n    // any alias\n    async.any = async.some;\n\n    async.every = function (arr, iterator, main_callback) {\n        async.each(arr, function (x, callback) {\n            iterator(x, function (v) {\n                if (!v) {\n                    main_callback(false);\n                    main_callback = function () {};\n                }\n                callback();\n            });\n        }, function (err) {\n            main_callback(true);\n        });\n    };\n    // all alias\n    async.all = async.every;\n\n    async.sortBy = function (arr, iterator, callback) {\n        async.map(arr, function (x, callback) {\n            iterator(x, function (err, criteria) {\n                if (err) {\n                    callback(err);\n                }\n                else {\n                    callback(null, {value: x, criteria: criteria});\n                }\n            });\n        }, function (err, results) {\n            if (err) {\n                return callback(err);\n            }\n            else {\n                var fn = function (left, right) {\n                    var a = left.criteria, b = right.criteria;\n                    return a < b ? -1 : a > b ? 1 : 0;\n                };\n                callback(null, _map(results.sort(fn), function (x) {\n                    return x.value;\n                }));\n            }\n        });\n    };\n\n    async.auto = function (tasks, callback) {\n        callback = callback || function () {};\n        var keys = _keys(tasks);\n        var remainingTasks = keys.length\n        if (!remainingTasks) {\n            return callback();\n        }\n\n        var results = {};\n\n        var listeners = [];\n        var addListener = function (fn) {\n            listeners.unshift(fn);\n        };\n        var removeListener = function (fn) {\n            for (var i = 0; i < listeners.length; i += 1) {\n                if (listeners[i] === fn) {\n                    listeners.splice(i, 1);\n                    return;\n                }\n            }\n        };\n        var taskComplete = function () {\n            remainingTasks--\n            _each(listeners.slice(0), function (fn) {\n                fn();\n            });\n        };\n\n        addListener(function () {\n            if (!remainingTasks) {\n                var theCallback = callback;\n                // prevent final callback from calling itself if it errors\n                callback = function () {};\n\n                theCallback(null, results);\n            }\n        });\n\n        _each(keys, function (k) {\n            var task = _isArray(tasks[k]) ? tasks[k]: [tasks[k]];\n            var taskCallback = function (err) {\n                var args = Array.prototype.slice.call(arguments, 1);\n                if (args.length <= 1) {\n                    args = args[0];\n                }\n                if (err) {\n                    var safeResults = {};\n                    _each(_keys(results), function(rkey) {\n                        safeResults[rkey] = results[rkey];\n                    });\n                    safeResults[k] = args;\n                    callback(err, safeResults);\n                    // stop subsequent errors hitting callback multiple times\n                    callback = function () {};\n                }\n                else {\n                    results[k] = args;\n                    async.setImmediate(taskComplete);\n                }\n            };\n            var requires = task.slice(0, Math.abs(task.length - 1)) || [];\n            var ready = function () {\n                return _reduce(requires, function (a, x) {\n                    return (a && results.hasOwnProperty(x));\n                }, true) && !results.hasOwnProperty(k);\n            };\n            if (ready()) {\n                task[task.length - 1](taskCallback, results);\n            }\n            else {\n                var listener = function () {\n                    if (ready()) {\n                        removeListener(listener);\n                        task[task.length - 1](taskCallback, results);\n                    }\n                };\n                addListener(listener);\n            }\n        });\n    };\n\n    async.retry = function(times, task, callback) {\n        var DEFAULT_TIMES = 5;\n        var attempts = [];\n        // Use defaults if times not passed\n        if (typeof times === 'function') {\n            callback = task;\n            task = times;\n            times = DEFAULT_TIMES;\n        }\n        // Make sure times is a number\n        times = parseInt(times, 10) || DEFAULT_TIMES;\n        var wrappedTask = function(wrappedCallback, wrappedResults) {\n            var retryAttempt = function(task, finalAttempt) {\n                return function(seriesCallback) {\n                    task(function(err, result){\n                        seriesCallback(!err || finalAttempt, {err: err, result: result});\n                    }, wrappedResults);\n                };\n            };\n            while (times) {\n                attempts.push(retryAttempt(task, !(times-=1)));\n            }\n            async.series(attempts, function(done, data){\n                data = data[data.length - 1];\n                (wrappedCallback || callback)(data.err, data.result);\n            });\n        }\n        // If a callback is passed, run this as a controll flow\n        return callback ? wrappedTask() : wrappedTask\n    };\n\n    async.waterfall = function (tasks, callback) {\n        callback = callback || function () {};\n        if (!_isArray(tasks)) {\n          var err = new Error('First argument to waterfall must be an array of functions');\n          return callback(err);\n        }\n        if (!tasks.length) {\n            return callback();\n        }\n        var wrapIterator = function (iterator) {\n            return function (err) {\n                if (err) {\n                    callback.apply(null, arguments);\n                    callback = function () {};\n                }\n                else {\n                    var args = Array.prototype.slice.call(arguments, 1);\n                    var next = iterator.next();\n                    if (next) {\n                        args.push(wrapIterator(next));\n                    }\n                    else {\n                        args.push(callback);\n                    }\n                    async.setImmediate(function () {\n                        iterator.apply(null, args);\n                    });\n                }\n            };\n        };\n        wrapIterator(async.iterator(tasks))();\n    };\n\n    var _parallel = function(eachfn, tasks, callback) {\n        callback = callback || function () {};\n        if (_isArray(tasks)) {\n            eachfn.map(tasks, function (fn, callback) {\n                if (fn) {\n                    fn(function (err) {\n                        var args = Array.prototype.slice.call(arguments, 1);\n                        if (args.length <= 1) {\n                            args = args[0];\n                        }\n                        callback.call(null, err, args);\n                    });\n                }\n            }, callback);\n        }\n        else {\n            var results = {};\n            eachfn.each(_keys(tasks), function (k, callback) {\n                tasks[k](function (err) {\n                    var args = Array.prototype.slice.call(arguments, 1);\n                    if (args.length <= 1) {\n                        args = args[0];\n                    }\n                    results[k] = args;\n                    callback(err);\n                });\n            }, function (err) {\n                callback(err, results);\n            });\n        }\n    };\n\n    async.parallel = function (tasks, callback) {\n        _parallel({ map: async.map, each: async.each }, tasks, callback);\n    };\n\n    async.parallelLimit = function(tasks, limit, callback) {\n        _parallel({ map: _mapLimit(limit), each: _eachLimit(limit) }, tasks, callback);\n    };\n\n    async.series = function (tasks, callback) {\n        callback = callback || function () {};\n        if (_isArray(tasks)) {\n            async.mapSeries(tasks, function (fn, callback) {\n                if (fn) {\n                    fn(function (err) {\n                        var args = Array.prototype.slice.call(arguments, 1);\n                        if (args.length <= 1) {\n                            args = args[0];\n                        }\n                        callback.call(null, err, args);\n                    });\n                }\n            }, callback);\n        }\n        else {\n            var results = {};\n            async.eachSeries(_keys(tasks), function (k, callback) {\n                tasks[k](function (err) {\n                    var args = Array.prototype.slice.call(arguments, 1);\n                    if (args.length <= 1) {\n                        args = args[0];\n                    }\n                    results[k] = args;\n                    callback(err);\n                });\n            }, function (err) {\n                callback(err, results);\n            });\n        }\n    };\n\n    async.iterator = function (tasks) {\n        var makeCallback = function (index) {\n            var fn = function () {\n                if (tasks.length) {\n                    tasks[index].apply(null, arguments);\n                }\n                return fn.next();\n            };\n            fn.next = function () {\n                return (index < tasks.length - 1) ? makeCallback(index + 1): null;\n            };\n            return fn;\n        };\n        return makeCallback(0);\n    };\n\n    async.apply = function (fn) {\n        var args = Array.prototype.slice.call(arguments, 1);\n        return function () {\n            return fn.apply(\n                null, args.concat(Array.prototype.slice.call(arguments))\n            );\n        };\n    };\n\n    var _concat = function (eachfn, arr, fn, callback) {\n        var r = [];\n        eachfn(arr, function (x, cb) {\n            fn(x, function (err, y) {\n                r = r.concat(y || []);\n                cb(err);\n            });\n        }, function (err) {\n            callback(err, r);\n        });\n    };\n    async.concat = doParallel(_concat);\n    async.concatSeries = doSeries(_concat);\n\n    async.whilst = function (test, iterator, callback) {\n        if (test()) {\n            iterator(function (err) {\n                if (err) {\n                    return callback(err);\n                }\n                async.whilst(test, iterator, callback);\n            });\n        }\n        else {\n            callback();\n        }\n    };\n\n    async.doWhilst = function (iterator, test, callback) {\n        iterator(function (err) {\n            if (err) {\n                return callback(err);\n            }\n            var args = Array.prototype.slice.call(arguments, 1);\n            if (test.apply(null, args)) {\n                async.doWhilst(iterator, test, callback);\n            }\n            else {\n                callback();\n            }\n        });\n    };\n\n    async.until = function (test, iterator, callback) {\n        if (!test()) {\n            iterator(function (err) {\n                if (err) {\n                    return callback(err);\n                }\n                async.until(test, iterator, callback);\n            });\n        }\n        else {\n            callback();\n        }\n    };\n\n    async.doUntil = function (iterator, test, callback) {\n        iterator(function (err) {\n            if (err) {\n                return callback(err);\n            }\n            var args = Array.prototype.slice.call(arguments, 1);\n            if (!test.apply(null, args)) {\n                async.doUntil(iterator, test, callback);\n            }\n            else {\n                callback();\n            }\n        });\n    };\n\n    async.queue = function (worker, concurrency) {\n        if (concurrency === undefined) {\n            concurrency = 1;\n        }\n        function _insert(q, data, pos, callback) {\n          if (!q.started){\n            q.started = true;\n          }\n          if (!_isArray(data)) {\n              data = [data];\n          }\n          if(data.length == 0) {\n             // call drain immediately if there are no tasks\n             return async.setImmediate(function() {\n                 if (q.drain) {\n                     q.drain();\n                 }\n             });\n          }\n          _each(data, function(task) {\n              var item = {\n                  data: task,\n                  callback: typeof callback === 'function' ? callback : null\n              };\n\n              if (pos) {\n                q.tasks.unshift(item);\n              } else {\n                q.tasks.push(item);\n              }\n\n              if (q.saturated && q.tasks.length === q.concurrency) {\n                  q.saturated();\n              }\n              async.setImmediate(q.process);\n          });\n        }\n\n        var workers = 0;\n        var q = {\n            tasks: [],\n            concurrency: concurrency,\n            saturated: null,\n            empty: null,\n            drain: null,\n            started: false,\n            paused: false,\n            push: function (data, callback) {\n              _insert(q, data, false, callback);\n            },\n            kill: function () {\n              q.drain = null;\n              q.tasks = [];\n            },\n            unshift: function (data, callback) {\n              _insert(q, data, true, callback);\n            },\n            process: function () {\n                if (!q.paused && workers < q.concurrency && q.tasks.length) {\n                    var task = q.tasks.shift();\n                    if (q.empty && q.tasks.length === 0) {\n                        q.empty();\n                    }\n                    workers += 1;\n                    var next = function () {\n                        workers -= 1;\n                        if (task.callback) {\n                            task.callback.apply(task, arguments);\n                        }\n                        if (q.drain && q.tasks.length + workers === 0) {\n                            q.drain();\n                        }\n                        q.process();\n                    };\n                    var cb = only_once(next);\n                    worker(task.data, cb);\n                }\n            },\n            length: function () {\n                return q.tasks.length;\n            },\n            running: function () {\n                return workers;\n            },\n            idle: function() {\n                return q.tasks.length + workers === 0;\n            },\n            pause: function () {\n                if (q.paused === true) { return; }\n                q.paused = true;\n            },\n            resume: function () {\n                if (q.paused === false) { return; }\n                q.paused = false;\n                // Need to call q.process once per concurrent\n                // worker to preserve full concurrency after pause\n                for (var w = 1; w <= q.concurrency; w++) {\n                    async.setImmediate(q.process);\n                }\n            }\n        };\n        return q;\n    };\n\n    async.priorityQueue = function (worker, concurrency) {\n\n        function _compareTasks(a, b){\n          return a.priority - b.priority;\n        };\n\n        function _binarySearch(sequence, item, compare) {\n          var beg = -1,\n              end = sequence.length - 1;\n          while (beg < end) {\n            var mid = beg + ((end - beg + 1) >>> 1);\n            if (compare(item, sequence[mid]) >= 0) {\n              beg = mid;\n            } else {\n              end = mid - 1;\n            }\n          }\n          return beg;\n        }\n\n        function _insert(q, data, priority, callback) {\n          if (!q.started){\n            q.started = true;\n          }\n          if (!_isArray(data)) {\n              data = [data];\n          }\n          if(data.length == 0) {\n             // call drain immediately if there are no tasks\n             return async.setImmediate(function() {\n                 if (q.drain) {\n                     q.drain();\n                 }\n             });\n          }\n          _each(data, function(task) {\n              var item = {\n                  data: task,\n                  priority: priority,\n                  callback: typeof callback === 'function' ? callback : null\n              };\n\n              q.tasks.splice(_binarySearch(q.tasks, item, _compareTasks) + 1, 0, item);\n\n              if (q.saturated && q.tasks.length === q.concurrency) {\n                  q.saturated();\n              }\n              async.setImmediate(q.process);\n          });\n        }\n\n        // Start with a normal queue\n        var q = async.queue(worker, concurrency);\n\n        // Override push to accept second parameter representing priority\n        q.push = function (data, priority, callback) {\n          _insert(q, data, priority, callback);\n        };\n\n        // Remove unshift function\n        delete q.unshift;\n\n        return q;\n    };\n\n    async.cargo = function (worker, payload) {\n        var working     = false,\n            tasks       = [];\n\n        var cargo = {\n            tasks: tasks,\n            payload: payload,\n            saturated: null,\n            empty: null,\n            drain: null,\n            drained: true,\n            push: function (data, callback) {\n                if (!_isArray(data)) {\n                    data = [data];\n                }\n                _each(data, function(task) {\n                    tasks.push({\n                        data: task,\n                        callback: typeof callback === 'function' ? callback : null\n                    });\n                    cargo.drained = false;\n                    if (cargo.saturated && tasks.length === payload) {\n                        cargo.saturated();\n                    }\n                });\n                async.setImmediate(cargo.process);\n            },\n            process: function process() {\n                if (working) return;\n                if (tasks.length === 0) {\n                    if(cargo.drain && !cargo.drained) cargo.drain();\n                    cargo.drained = true;\n                    return;\n                }\n\n                var ts = typeof payload === 'number'\n                            ? tasks.splice(0, payload)\n                            : tasks.splice(0, tasks.length);\n\n                var ds = _map(ts, function (task) {\n                    return task.data;\n                });\n\n                if(cargo.empty) cargo.empty();\n                working = true;\n                worker(ds, function () {\n                    working = false;\n\n                    var args = arguments;\n                    _each(ts, function (data) {\n                        if (data.callback) {\n                            data.callback.apply(null, args);\n                        }\n                    });\n\n                    process();\n                });\n            },\n            length: function () {\n                return tasks.length;\n            },\n            running: function () {\n                return working;\n            }\n        };\n        return cargo;\n    };\n\n    var _console_fn = function (name) {\n        return function (fn) {\n            var args = Array.prototype.slice.call(arguments, 1);\n            fn.apply(null, args.concat([function (err) {\n                var args = Array.prototype.slice.call(arguments, 1);\n                if (typeof console !== 'undefined') {\n                    if (err) {\n                        if (console.error) {\n                            console.error(err);\n                        }\n                    }\n                    else if (console[name]) {\n                        _each(args, function (x) {\n                            console[name](x);\n                        });\n                    }\n                }\n            }]));\n        };\n    };\n    async.log = _console_fn('log');\n    async.dir = _console_fn('dir');\n    /*async.info = _console_fn('info');\n    async.warn = _console_fn('warn');\n    async.error = _console_fn('error');*/\n\n    async.memoize = function (fn, hasher) {\n        var memo = {};\n        var queues = {};\n        hasher = hasher || function (x) {\n            return x;\n        };\n        var memoized = function () {\n            var args = Array.prototype.slice.call(arguments);\n            var callback = args.pop();\n            var key = hasher.apply(null, args);\n            if (key in memo) {\n                async.nextTick(function () {\n                    callback.apply(null, memo[key]);\n                });\n            }\n            else if (key in queues) {\n                queues[key].push(callback);\n            }\n            else {\n                queues[key] = [callback];\n                fn.apply(null, args.concat([function () {\n                    memo[key] = arguments;\n                    var q = queues[key];\n                    delete queues[key];\n                    for (var i = 0, l = q.length; i < l; i++) {\n                      q[i].apply(null, arguments);\n                    }\n                }]));\n            }\n        };\n        memoized.memo = memo;\n        memoized.unmemoized = fn;\n        return memoized;\n    };\n\n    async.unmemoize = function (fn) {\n      return function () {\n        return (fn.unmemoized || fn).apply(null, arguments);\n      };\n    };\n\n    async.times = function (count, iterator, callback) {\n        var counter = [];\n        for (var i = 0; i < count; i++) {\n            counter.push(i);\n        }\n        return async.map(counter, iterator, callback);\n    };\n\n    async.timesSeries = function (count, iterator, callback) {\n        var counter = [];\n        for (var i = 0; i < count; i++) {\n            counter.push(i);\n        }\n        return async.mapSeries(counter, iterator, callback);\n    };\n\n    async.seq = function (/* functions... */) {\n        var fns = arguments;\n        return function () {\n            var that = this;\n            var args = Array.prototype.slice.call(arguments);\n            var callback = args.pop();\n            async.reduce(fns, args, function (newargs, fn, cb) {\n                fn.apply(that, newargs.concat([function () {\n                    var err = arguments[0];\n                    var nextargs = Array.prototype.slice.call(arguments, 1);\n                    cb(err, nextargs);\n                }]))\n            },\n            function (err, results) {\n                callback.apply(that, [err].concat(results));\n            });\n        };\n    };\n\n    async.compose = function (/* functions... */) {\n      return async.seq.apply(null, Array.prototype.reverse.call(arguments));\n    };\n\n    var _applyEach = function (eachfn, fns /*args...*/) {\n        var go = function () {\n            var that = this;\n            var args = Array.prototype.slice.call(arguments);\n            var callback = args.pop();\n            return eachfn(fns, function (fn, cb) {\n                fn.apply(that, args.concat([cb]));\n            },\n            callback);\n        };\n        if (arguments.length > 2) {\n            var args = Array.prototype.slice.call(arguments, 2);\n            return go.apply(this, args);\n        }\n        else {\n            return go;\n        }\n    };\n    async.applyEach = doParallel(_applyEach);\n    async.applyEachSeries = doSeries(_applyEach);\n\n    async.forever = function (fn, callback) {\n        function next(err) {\n            if (err) {\n                if (callback) {\n                    return callback(err);\n                }\n                throw err;\n            }\n            fn(next);\n        }\n        next();\n    };\n\n    // Node.js\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports = async;\n    }\n    // AMD / RequireJS\n    else if (typeof define !== 'undefined' && define.amd) {\n        define([], function () {\n            return async;\n        });\n    }\n    // included directly via <script> tag\n    else {\n        root.async = async;\n    }\n\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/async/lib/async.js\n// module id = 23\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 24\n// module chunks = 0","var apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\nexports.setImmediate = setImmediate;\nexports.clearImmediate = clearImmediate;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/timers-browserify/main.js\n// module id = 25\n// module chunks = 0","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/setimmediate/setImmediate.js\n// module id = 26\n// module chunks = 0","/**\n * A JavaScript implementation of the JSON-LD API.\n *\n * @author Dave Longley\n *\n * @license BSD 3-Clause License\n * Copyright (c) 2011-2015 Digital Bazaar, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * Redistributions in binary form must reproduce the above copyright\n * notice, this list of conditions and the following disclaimer in the\n * documentation and/or other materials provided with the distribution.\n *\n * Neither the name of the Digital Bazaar, Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n * IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED\n * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A\n * PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n(function() {\n\n// determine if in-browser or using node.js\nvar _nodejs = (\n  typeof process !== 'undefined' && process.versions && process.versions.node);\nvar _browser = !_nodejs &&\n  (typeof window !== 'undefined' || typeof self !== 'undefined');\nif(_browser) {\n  if(typeof global === 'undefined') {\n    if(typeof window !== 'undefined') {\n      global = window;\n    } else if(typeof self !== 'undefined') {\n      global = self;\n    } else if(typeof $ !== 'undefined') {\n      global = $;\n    }\n  }\n}\n\n// attaches jsonld API to the given object\nvar wrapper = function(jsonld) {\n\n/* Core API */\n\n/**\n * Performs JSON-LD compaction.\n *\n * @param input the JSON-LD input to compact.\n * @param ctx the context to compact with.\n * @param [options] options to use:\n *          [base] the base IRI to use.\n *          [compactArrays] true to compact arrays to single values when\n *            appropriate, false not to (default: true).\n *          [graph] true to always output a top-level graph (default: false).\n *          [expandContext] a context to expand with.\n *          [skipExpansion] true to assume the input is expanded and skip\n *            expansion, false not to, defaults to false.\n *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n * @param callback(err, compacted, ctx) called once the operation completes.\n */\njsonld.compact = function(input, ctx, options, callback) {\n  if(arguments.length < 2) {\n    return jsonld.nextTick(function() {\n      callback(new TypeError('Could not compact, too few arguments.'));\n    });\n  }\n\n  // get arguments\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n\n  if(ctx === null) {\n    return jsonld.nextTick(function() {\n      callback(new JsonLdError(\n        'The compaction context must not be null.',\n        'jsonld.CompactError', {code: 'invalid local context'}));\n    });\n  }\n\n  // nothing to compact\n  if(input === null) {\n    return jsonld.nextTick(function() {\n      callback(null, null);\n    });\n  }\n\n  // set default options\n  if(!('base' in options)) {\n    options.base = (typeof input === 'string') ? input : '';\n  }\n  if(!('compactArrays' in options)) {\n    options.compactArrays = true;\n  }\n  if(!('graph' in options)) {\n    options.graph = false;\n  }\n  if(!('skipExpansion' in options)) {\n    options.skipExpansion = false;\n  }\n  if(!('documentLoader' in options)) {\n    options.documentLoader = jsonld.loadDocument;\n  }\n  if(!('link' in options)) {\n    options.link = false;\n  }\n  if(options.link) {\n    // force skip expansion when linking, \"link\" is not part of the public\n    // API, it should only be called from framing\n    options.skipExpansion = true;\n  }\n\n  var expand = function(input, options, callback) {\n    if(options.skipExpansion) {\n      return jsonld.nextTick(function() {\n        callback(null, input);\n      });\n    }\n    jsonld.expand(input, options, callback);\n  };\n\n  // expand input then do compaction\n  expand(input, options, function(err, expanded) {\n    if(err) {\n      return callback(new JsonLdError(\n        'Could not expand input before compaction.',\n        'jsonld.CompactError', {cause: err}));\n    }\n\n    // process context\n    var activeCtx = _getInitialContext(options);\n    jsonld.processContext(activeCtx, ctx, options, function(err, activeCtx) {\n      if(err) {\n        return callback(new JsonLdError(\n          'Could not process context before compaction.',\n          'jsonld.CompactError', {cause: err}));\n      }\n\n      var compacted;\n      try {\n        // do compaction\n        compacted = new Processor().compact(activeCtx, null, expanded, options);\n      } catch(ex) {\n        return callback(ex);\n      }\n\n      cleanup(null, compacted, activeCtx, options);\n    });\n  });\n\n  // performs clean up after compaction\n  function cleanup(err, compacted, activeCtx, options) {\n    if(err) {\n      return callback(err);\n    }\n\n    if(options.compactArrays && !options.graph && _isArray(compacted)) {\n      if(compacted.length === 1) {\n        // simplify to a single item\n        compacted = compacted[0];\n      } else if(compacted.length === 0) {\n        // simplify to an empty object\n        compacted = {};\n      }\n    } else if(options.graph && _isObject(compacted)) {\n      // always use array if graph option is on\n      compacted = [compacted];\n    }\n\n    // follow @context key\n    if(_isObject(ctx) && '@context' in ctx) {\n      ctx = ctx['@context'];\n    }\n\n    // build output context\n    ctx = _clone(ctx);\n    if(!_isArray(ctx)) {\n      ctx = [ctx];\n    }\n    // remove empty contexts\n    var tmp = ctx;\n    ctx = [];\n    for(var i = 0; i < tmp.length; ++i) {\n      if(!_isObject(tmp[i]) || Object.keys(tmp[i]).length > 0) {\n        ctx.push(tmp[i]);\n      }\n    }\n\n    // remove array if only one context\n    var hasContext = (ctx.length > 0);\n    if(ctx.length === 1) {\n      ctx = ctx[0];\n    }\n\n    // add context and/or @graph\n    if(_isArray(compacted)) {\n      // use '@graph' keyword\n      var kwgraph = _compactIri(activeCtx, '@graph');\n      var graph = compacted;\n      compacted = {};\n      if(hasContext) {\n        compacted['@context'] = ctx;\n      }\n      compacted[kwgraph] = graph;\n    } else if(_isObject(compacted) && hasContext) {\n      // reorder keys so @context is first\n      var graph = compacted;\n      compacted = {'@context': ctx};\n      for(var key in graph) {\n        compacted[key] = graph[key];\n      }\n    }\n\n    callback(null, compacted, activeCtx);\n  }\n};\n\n/**\n * Performs JSON-LD expansion.\n *\n * @param input the JSON-LD input to expand.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [keepFreeFloatingNodes] true to keep free-floating nodes,\n *            false not to, defaults to false.\n *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n * @param callback(err, expanded) called once the operation completes.\n */\njsonld.expand = function(input, options, callback) {\n  if(arguments.length < 1) {\n    return jsonld.nextTick(function() {\n      callback(new TypeError('Could not expand, too few arguments.'));\n    });\n  }\n\n  // get arguments\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n\n  // set default options\n  if(!('documentLoader' in options)) {\n    options.documentLoader = jsonld.loadDocument;\n  }\n  if(!('keepFreeFloatingNodes' in options)) {\n    options.keepFreeFloatingNodes = false;\n  }\n\n  jsonld.nextTick(function() {\n    // if input is a string, attempt to dereference remote document\n    if(typeof input === 'string') {\n      var done = function(err, remoteDoc) {\n        if(err) {\n          return callback(err);\n        }\n        try {\n          if(!remoteDoc.document) {\n            throw new JsonLdError(\n              'No remote document found at the given URL.',\n              'jsonld.NullRemoteDocument');\n          }\n          if(typeof remoteDoc.document === 'string') {\n            remoteDoc.document = JSON.parse(remoteDoc.document);\n          }\n        } catch(ex) {\n          return callback(new JsonLdError(\n            'Could not retrieve a JSON-LD document from the URL. URL ' +\n            'dereferencing not implemented.', 'jsonld.LoadDocumentError', {\n              code: 'loading document failed',\n              cause: ex,\n              remoteDoc: remoteDoc\n          }));\n        }\n        expand(remoteDoc);\n      };\n      var promise = options.documentLoader(input, done);\n      if(promise && 'then' in promise) {\n        promise.then(done.bind(null, null), done);\n      }\n      return;\n    }\n    // nothing to load\n    expand({contextUrl: null, documentUrl: null, document: input});\n  });\n\n  function expand(remoteDoc) {\n    // set default base\n    if(!('base' in options)) {\n      options.base = remoteDoc.documentUrl || '';\n    }\n    // build meta-object and retrieve all @context URLs\n    var input = {\n      document: _clone(remoteDoc.document),\n      remoteContext: {'@context': remoteDoc.contextUrl}\n    };\n    if('expandContext' in options) {\n      var expandContext = _clone(options.expandContext);\n      if(typeof expandContext === 'object' && '@context' in expandContext) {\n        input.expandContext = expandContext;\n      } else {\n        input.expandContext = {'@context': expandContext};\n      }\n    }\n    _retrieveContextUrls(input, options, function(err, input) {\n      if(err) {\n        return callback(err);\n      }\n\n      var expanded;\n      try {\n        var processor = new Processor();\n        var activeCtx = _getInitialContext(options);\n        var document = input.document;\n        var remoteContext = input.remoteContext['@context'];\n\n        // process optional expandContext\n        if(input.expandContext) {\n          activeCtx = processor.processContext(\n            activeCtx, input.expandContext['@context'], options);\n        }\n\n        // process remote context from HTTP Link Header\n        if(remoteContext) {\n          activeCtx = processor.processContext(\n            activeCtx, remoteContext, options);\n        }\n\n        // expand document\n        expanded = processor.expand(\n          activeCtx, null, document, options, false);\n\n        // optimize away @graph with no other properties\n        if(_isObject(expanded) && ('@graph' in expanded) &&\n          Object.keys(expanded).length === 1) {\n          expanded = expanded['@graph'];\n        } else if(expanded === null) {\n          expanded = [];\n        }\n\n        // normalize to an array\n        if(!_isArray(expanded)) {\n          expanded = [expanded];\n        }\n      } catch(ex) {\n        return callback(ex);\n      }\n      callback(null, expanded);\n    });\n  }\n};\n\n/**\n * Performs JSON-LD flattening.\n *\n * @param input the JSON-LD to flatten.\n * @param ctx the context to use to compact the flattened output, or null.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n * @param callback(err, flattened) called once the operation completes.\n */\njsonld.flatten = function(input, ctx, options, callback) {\n  if(arguments.length < 1) {\n    return jsonld.nextTick(function() {\n      callback(new TypeError('Could not flatten, too few arguments.'));\n    });\n  }\n\n  // get arguments\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  } else if(typeof ctx === 'function') {\n    callback = ctx;\n    ctx = null;\n    options = {};\n  }\n  options = options || {};\n\n  // set default options\n  if(!('base' in options)) {\n    options.base = (typeof input === 'string') ? input : '';\n  }\n  if(!('documentLoader' in options)) {\n    options.documentLoader = jsonld.loadDocument;\n  }\n\n  // expand input\n  jsonld.expand(input, options, function(err, _input) {\n    if(err) {\n      return callback(new JsonLdError(\n        'Could not expand input before flattening.',\n        'jsonld.FlattenError', {cause: err}));\n    }\n\n    var flattened;\n    try {\n      // do flattening\n      flattened = new Processor().flatten(_input);\n    } catch(ex) {\n      return callback(ex);\n    }\n\n    if(ctx === null) {\n      return callback(null, flattened);\n    }\n\n    // compact result (force @graph option to true, skip expansion)\n    options.graph = true;\n    options.skipExpansion = true;\n    jsonld.compact(flattened, ctx, options, function(err, compacted) {\n      if(err) {\n        return callback(new JsonLdError(\n          'Could not compact flattened output.',\n          'jsonld.FlattenError', {cause: err}));\n      }\n      callback(null, compacted);\n    });\n  });\n};\n\n/**\n * Performs JSON-LD framing.\n *\n * @param input the JSON-LD input to frame.\n * @param frame the JSON-LD frame to use.\n * @param [options] the framing options.\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [embed] default @embed flag: '@last', '@always', '@never', '@link'\n *            (default: '@last').\n *          [explicit] default @explicit flag (default: false).\n *          [requireAll] default @requireAll flag (default: true).\n *          [omitDefault] default @omitDefault flag (default: false).\n *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n * @param callback(err, framed) called once the operation completes.\n */\njsonld.frame = function(input, frame, options, callback) {\n  if(arguments.length < 2) {\n    return jsonld.nextTick(function() {\n      callback(new TypeError('Could not frame, too few arguments.'));\n    });\n  }\n\n  // get arguments\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n\n  // set default options\n  if(!('base' in options)) {\n    options.base = (typeof input === 'string') ? input : '';\n  }\n  if(!('documentLoader' in options)) {\n    options.documentLoader = jsonld.loadDocument;\n  }\n  if(!('embed' in options)) {\n    options.embed = '@last';\n  }\n  options.explicit = options.explicit || false;\n  if(!('requireAll' in options)) {\n    options.requireAll = true;\n  }\n  options.omitDefault = options.omitDefault || false;\n\n  jsonld.nextTick(function() {\n    // if frame is a string, attempt to dereference remote document\n    if(typeof frame === 'string') {\n      var done = function(err, remoteDoc) {\n        if(err) {\n          return callback(err);\n        }\n        try {\n          if(!remoteDoc.document) {\n            throw new JsonLdError(\n              'No remote document found at the given URL.',\n              'jsonld.NullRemoteDocument');\n          }\n          if(typeof remoteDoc.document === 'string') {\n            remoteDoc.document = JSON.parse(remoteDoc.document);\n          }\n        } catch(ex) {\n          return callback(new JsonLdError(\n            'Could not retrieve a JSON-LD document from the URL. URL ' +\n            'dereferencing not implemented.', 'jsonld.LoadDocumentError', {\n              code: 'loading document failed',\n              cause: ex,\n              remoteDoc: remoteDoc\n          }));\n        }\n        doFrame(remoteDoc);\n      };\n      var promise = options.documentLoader(frame, done);\n      if(promise && 'then' in promise) {\n        promise.then(done.bind(null, null), done);\n      }\n      return;\n    }\n    // nothing to load\n    doFrame({contextUrl: null, documentUrl: null, document: frame});\n  });\n\n  function doFrame(remoteFrame) {\n    // preserve frame context and add any Link header context\n    var frame = remoteFrame.document;\n    var ctx;\n    if(frame) {\n      ctx = frame['@context'];\n      if(remoteFrame.contextUrl) {\n        if(!ctx) {\n          ctx = remoteFrame.contextUrl;\n        } else if(_isArray(ctx)) {\n          ctx.push(remoteFrame.contextUrl);\n        } else {\n          ctx = [ctx, remoteFrame.contextUrl];\n        }\n        frame['@context'] = ctx;\n      } else {\n        ctx = ctx || {};\n      }\n    } else {\n      ctx = {};\n    }\n\n    // expand input\n    jsonld.expand(input, options, function(err, expanded) {\n      if(err) {\n        return callback(new JsonLdError(\n          'Could not expand input before framing.',\n          'jsonld.FrameError', {cause: err}));\n      }\n\n      // expand frame\n      var opts = _clone(options);\n      opts.isFrame = true;\n      opts.keepFreeFloatingNodes = true;\n      jsonld.expand(frame, opts, function(err, expandedFrame) {\n        if(err) {\n          return callback(new JsonLdError(\n            'Could not expand frame before framing.',\n            'jsonld.FrameError', {cause: err}));\n        }\n\n        var framed;\n        try {\n          // do framing\n          framed = new Processor().frame(expanded, expandedFrame, opts);\n        } catch(ex) {\n          return callback(ex);\n        }\n\n        // compact result (force @graph option to true, skip expansion,\n        // check for linked embeds)\n        opts.graph = true;\n        opts.skipExpansion = true;\n        opts.link = {};\n        jsonld.compact(framed, ctx, opts, function(err, compacted, ctx) {\n          if(err) {\n            return callback(new JsonLdError(\n              'Could not compact framed output.',\n              'jsonld.FrameError', {cause: err}));\n          }\n          // get graph alias\n          var graph = _compactIri(ctx, '@graph');\n          // remove @preserve from results\n          opts.link = {};\n          compacted[graph] = _removePreserve(ctx, compacted[graph], opts);\n          callback(null, compacted);\n        });\n      });\n    });\n  }\n};\n\n/**\n * **Experimental**\n *\n * Links a JSON-LD document's nodes in memory.\n *\n * @param input the JSON-LD document to link.\n * @param ctx the JSON-LD context to apply.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n * @param callback(err, linked) called once the operation completes.\n */\njsonld.link = function(input, ctx, options, callback) {\n  // API matches running frame with a wildcard frame and embed: '@link'\n  // get arguments\n  var frame = {};\n  if(ctx) {\n    frame['@context'] = ctx;\n  }\n  frame['@embed'] = '@link';\n  jsonld.frame(input, frame, options, callback);\n};\n\n/**\n * **Deprecated**\n *\n * Performs JSON-LD objectification.\n *\n * @param input the JSON-LD document to objectify.\n * @param ctx the JSON-LD context to apply.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n * @param callback(err, linked) called once the operation completes.\n */\njsonld.objectify = function(input, ctx, options, callback) {\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n\n  // set default options\n  if(!('base' in options)) {\n    options.base = (typeof input === 'string') ? input : '';\n  }\n  if(!('documentLoader' in options)) {\n    options.documentLoader = jsonld.loadDocument;\n  }\n\n  // expand input\n  jsonld.expand(input, options, function(err, _input) {\n    if(err) {\n      return callback(new JsonLdError(\n        'Could not expand input before linking.',\n        'jsonld.LinkError', {cause: err}));\n    }\n\n    var flattened;\n    try {\n      // flatten the graph\n      flattened = new Processor().flatten(_input);\n    } catch(ex) {\n      return callback(ex);\n    }\n\n    // compact result (force @graph option to true, skip expansion)\n    options.graph = true;\n    options.skipExpansion = true;\n    jsonld.compact(flattened, ctx, options, function(err, compacted, ctx) {\n      if(err) {\n        return callback(new JsonLdError(\n          'Could not compact flattened output before linking.',\n          'jsonld.LinkError', {cause: err}));\n      }\n      // get graph alias\n      var graph = _compactIri(ctx, '@graph');\n      var top = compacted[graph][0];\n\n      var recurse = function(subject) {\n        // can't replace just a string\n        if(!_isObject(subject) && !_isArray(subject)) {\n          return;\n        }\n\n        // bottom out recursion on re-visit\n        if(_isObject(subject)) {\n          if(recurse.visited[subject['@id']]) {\n            return;\n          }\n          recurse.visited[subject['@id']] = true;\n        }\n\n        // each array element *or* object key\n        for(var k in subject) {\n          var obj = subject[k];\n          var isid = (jsonld.getContextValue(ctx, k, '@type') === '@id');\n\n          // can't replace a non-object or non-array unless it's an @id\n          if(!_isArray(obj) && !_isObject(obj) && !isid) {\n            continue;\n          }\n\n          if(_isString(obj) && isid) {\n            subject[k] = obj = top[obj];\n            recurse(obj);\n          } else if(_isArray(obj)) {\n            for(var i = 0; i < obj.length; ++i) {\n              if(_isString(obj[i]) && isid) {\n                obj[i] = top[obj[i]];\n              } else if(_isObject(obj[i]) && '@id' in obj[i]) {\n                obj[i] = top[obj[i]['@id']];\n              }\n              recurse(obj[i]);\n            }\n          } else if(_isObject(obj)) {\n            var sid = obj['@id'];\n            subject[k] = obj = top[sid];\n            recurse(obj);\n          }\n        }\n      };\n      recurse.visited = {};\n      recurse(top);\n\n      compacted.of_type = {};\n      for(var s in top) {\n        if(!('@type' in top[s])) {\n          continue;\n        }\n        var types = top[s]['@type'];\n        if(!_isArray(types)) {\n          types = [types];\n        }\n        for(var t = 0; t < types.length; ++t) {\n          if(!(types[t] in compacted.of_type)) {\n            compacted.of_type[types[t]] = [];\n          }\n          compacted.of_type[types[t]].push(top[s]);\n        }\n      }\n      callback(null, compacted);\n    });\n  });\n};\n\n/**\n * Performs RDF dataset normalization on the given input. The input is JSON-LD\n * unless the 'inputFormat' option is used. The output is an RDF dataset\n * unless the 'format' option is used.\n *\n * @param input the input to normalize as JSON-LD or as a format specified by\n *          the 'inputFormat' option.\n * @param [options] the options to use:\n *          [algorithm] the normalization algorithm to use, `URDNA2015` or\n *            `URGNA2012` (default: `URGNA2012`).\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [inputFormat] the format if input is not JSON-LD:\n *            'application/nquads' for N-Quads.\n *          [format] the format if output is a string:\n *            'application/nquads' for N-Quads.\n *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n * @param callback(err, normalized) called once the operation completes.\n */\njsonld.normalize = function(input, options, callback) {\n  if(arguments.length < 1) {\n    return jsonld.nextTick(function() {\n      callback(new TypeError('Could not normalize, too few arguments.'));\n    });\n  }\n\n  // get arguments\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n\n  // set default options\n  if(!('algorithm' in options)) {\n    options.algorithm = 'URGNA2012';\n  }\n  if(!('base' in options)) {\n    options.base = (typeof input === 'string') ? input : '';\n  }\n  if(!('documentLoader' in options)) {\n    options.documentLoader = jsonld.loadDocument;\n  }\n\n  if('inputFormat' in options) {\n    if(options.inputFormat !== 'application/nquads') {\n      return callback(new JsonLdError(\n        'Unknown normalization input format.',\n        'jsonld.NormalizeError'));\n    }\n    var parsedInput = _parseNQuads(input);\n    // do normalization\n    new Processor().normalize(parsedInput, options, callback);\n  } else {\n    // convert to RDF dataset then do normalization\n    var opts = _clone(options);\n    delete opts.format;\n    opts.produceGeneralizedRdf = false;\n    jsonld.toRDF(input, opts, function(err, dataset) {\n      if(err) {\n        return callback(new JsonLdError(\n          'Could not convert input to RDF dataset before normalization.',\n          'jsonld.NormalizeError', {cause: err}));\n      }\n      // do normalization\n      new Processor().normalize(dataset, options, callback);\n    });\n  }\n};\n\n/**\n * Converts an RDF dataset to JSON-LD.\n *\n * @param dataset a serialized string of RDF in a format specified by the\n *          format option or an RDF dataset to convert.\n * @param [options] the options to use:\n *          [format] the format if dataset param must first be parsed:\n *            'application/nquads' for N-Quads (default).\n *          [rdfParser] a custom RDF-parser to use to parse the dataset.\n *          [useRdfType] true to use rdf:type, false to use @type\n *            (default: false).\n *          [useNativeTypes] true to convert XSD types into native types\n *            (boolean, integer, double), false not to (default: false).\n * @param callback(err, output) called once the operation completes.\n */\njsonld.fromRDF = function(dataset, options, callback) {\n  if(arguments.length < 1) {\n    return jsonld.nextTick(function() {\n      callback(new TypeError('Could not convert from RDF, too few arguments.'));\n    });\n  }\n\n  // get arguments\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n\n  // set default options\n  if(!('useRdfType' in options)) {\n    options.useRdfType = false;\n  }\n  if(!('useNativeTypes' in options)) {\n    options.useNativeTypes = false;\n  }\n\n  if(!('format' in options) && _isString(dataset)) {\n    // set default format to nquads\n    if(!('format' in options)) {\n      options.format = 'application/nquads';\n    }\n  }\n\n  jsonld.nextTick(function() {\n    // handle special format\n    var rdfParser;\n    if(options.format) {\n      // check supported formats\n      rdfParser = options.rdfParser || _rdfParsers[options.format];\n      if(!rdfParser) {\n        return callback(new JsonLdError(\n          'Unknown input format.',\n          'jsonld.UnknownFormat', {format: options.format}));\n      }\n    } else {\n      // no-op parser, assume dataset already parsed\n      rdfParser = function() {\n        return dataset;\n      };\n    }\n\n    var callbackCalled = false;\n    try {\n      // rdf parser may be async or sync, always pass callback\n      dataset = rdfParser(dataset, function(err, dataset) {\n        callbackCalled = true;\n        if(err) {\n          return callback(err);\n        }\n        fromRDF(dataset, options, callback);\n      });\n    } catch(e) {\n      if(!callbackCalled) {\n        return callback(e);\n      }\n      throw e;\n    }\n    // handle synchronous or promise-based parser\n    if(dataset) {\n      // if dataset is actually a promise\n      if('then' in dataset) {\n        return dataset.then(function(dataset) {\n          fromRDF(dataset, options, callback);\n        }, callback);\n      }\n      // parser is synchronous\n      fromRDF(dataset, options, callback);\n    }\n\n    function fromRDF(dataset, options, callback) {\n      // convert from RDF\n      new Processor().fromRDF(dataset, options, callback);\n    }\n  });\n};\n\n/**\n * Outputs the RDF dataset found in the given JSON-LD object.\n *\n * @param input the JSON-LD input.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [format] the format to use to output a string:\n *            'application/nquads' for N-Quads.\n *          [produceGeneralizedRdf] true to output generalized RDF, false\n *            to produce only standard RDF (default: false).\n *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n * @param callback(err, dataset) called once the operation completes.\n */\njsonld.toRDF = function(input, options, callback) {\n  if(arguments.length < 1) {\n    return jsonld.nextTick(function() {\n      callback(new TypeError('Could not convert to RDF, too few arguments.'));\n    });\n  }\n\n  // get arguments\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n\n  // set default options\n  if(!('base' in options)) {\n    options.base = (typeof input === 'string') ? input : '';\n  }\n  if(!('documentLoader' in options)) {\n    options.documentLoader = jsonld.loadDocument;\n  }\n\n  // expand input\n  jsonld.expand(input, options, function(err, expanded) {\n    if(err) {\n      return callback(new JsonLdError(\n        'Could not expand input before serialization to RDF.',\n        'jsonld.RdfError', {cause: err}));\n    }\n\n    var dataset;\n    try {\n      // output RDF dataset\n      dataset = Processor.prototype.toRDF(expanded, options);\n      if(options.format) {\n        if(options.format === 'application/nquads') {\n          return callback(null, _toNQuads(dataset));\n        }\n        throw new JsonLdError(\n          'Unknown output format.',\n          'jsonld.UnknownFormat', {format: options.format});\n      }\n    } catch(ex) {\n      return callback(ex);\n    }\n    callback(null, dataset);\n  });\n};\n\n/**\n * **Experimental**\n *\n * Recursively flattens the nodes in the given JSON-LD input into a map of\n * node ID => node.\n *\n * @param input the JSON-LD input.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [issuer] a jsonld.IdentifierIssuer to use to label blank nodes.\n *          [namer] (deprecated)\n *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n * @param callback(err, nodeMap) called once the operation completes.\n */\njsonld.createNodeMap = function(input, options, callback) {\n  if(arguments.length < 1) {\n    return jsonld.nextTick(function() {\n      callback(new TypeError('Could not create node map, too few arguments.'));\n    });\n  }\n\n  // get arguments\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n\n  // set default options\n  if(!('base' in options)) {\n    options.base = (typeof input === 'string') ? input : '';\n  }\n  if(!('documentLoader' in options)) {\n    options.documentLoader = jsonld.loadDocument;\n  }\n\n  // expand input\n  jsonld.expand(input, options, function(err, _input) {\n    if(err) {\n      return callback(new JsonLdError(\n        'Could not expand input before creating node map.',\n        'jsonld.CreateNodeMapError', {cause: err}));\n    }\n\n    var nodeMap;\n    try {\n      nodeMap = new Processor().createNodeMap(_input, options);\n    } catch(ex) {\n      return callback(ex);\n    }\n\n    callback(null, nodeMap);\n  });\n};\n\n/**\n * **Experimental**\n *\n * Merges two or more JSON-LD documents into a single flattened document.\n *\n * @param docs the JSON-LD documents to merge together.\n * @param ctx the context to use to compact the merged result, or null.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [issuer] a jsonld.IdentifierIssuer to use to label blank nodes.\n *          [namer] (deprecated).\n *          [mergeNodes] true to merge properties for nodes with the same ID,\n *            false to ignore new properties for nodes with the same ID once\n *            the ID has been defined; note that this may not prevent merging\n *            new properties where a node is in the `object` position\n *            (default: true).\n *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n * @param callback(err, merged) called once the operation completes.\n */\njsonld.merge = function(docs, ctx, options, callback) {\n  if(arguments.length < 1) {\n    return jsonld.nextTick(function() {\n      callback(new TypeError('Could not merge, too few arguments.'));\n    });\n  }\n  if(!_isArray(docs)) {\n    return jsonld.nextTick(function() {\n      callback(new TypeError('Could not merge, \"docs\" must be an array.'));\n    });\n  }\n\n  // get arguments\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  } else if(typeof ctx === 'function') {\n    callback = ctx;\n    ctx = null;\n    options = {};\n  }\n  options = options || {};\n\n  // expand all documents\n  var expanded = [];\n  var error = null;\n  var count = docs.length;\n  for(var i = 0; i < docs.length; ++i) {\n    var opts = {};\n    for(var key in options) {\n      opts[key] = options[key];\n    }\n    jsonld.expand(docs[i], opts, expandComplete);\n  }\n\n  function expandComplete(err, _input) {\n    if(error) {\n      return;\n    }\n    if(err) {\n      error = err;\n      return callback(new JsonLdError(\n        'Could not expand input before flattening.',\n        'jsonld.FlattenError', {cause: err}));\n    }\n    expanded.push(_input);\n    if(--count === 0) {\n      merge(expanded);\n    }\n  }\n\n  function merge(expanded) {\n    var mergeNodes = true;\n    if('mergeNodes' in options) {\n      mergeNodes = options.mergeNodes;\n    }\n\n    var issuer = options.namer || options.issuer || new IdentifierIssuer('_:b');\n    var graphs = {'@default': {}};\n\n    var defaultGraph;\n    try {\n      for(var i = 0; i < expanded.length; ++i) {\n        // uniquely relabel blank nodes\n        var doc = expanded[i];\n        doc = jsonld.relabelBlankNodes(doc, {\n          issuer: new IdentifierIssuer('_:b' + i + '-')\n        });\n\n        // add nodes to the shared node map graphs if merging nodes, to a\n        // separate graph set if not\n        var _graphs = (mergeNodes || i === 0) ? graphs : {'@default': {}};\n        _createNodeMap(doc, _graphs, '@default', issuer);\n\n        if(_graphs !== graphs) {\n          // merge document graphs but don't merge existing nodes\n          for(var graphName in _graphs) {\n            var _nodeMap = _graphs[graphName];\n            if(!(graphName in graphs)) {\n              graphs[graphName] = _nodeMap;\n              continue;\n            }\n            var nodeMap = graphs[graphName];\n            for(var key in _nodeMap) {\n              if(!(key in nodeMap)) {\n                nodeMap[key] = _nodeMap[key];\n              }\n            }\n          }\n        }\n      }\n\n      // add all non-default graphs to default graph\n      defaultGraph = _mergeNodeMaps(graphs);\n    } catch(ex) {\n      return callback(ex);\n    }\n\n    // produce flattened output\n    var flattened = [];\n    var keys = Object.keys(defaultGraph).sort();\n    for(var ki = 0; ki < keys.length; ++ki) {\n      var node = defaultGraph[keys[ki]];\n      // only add full subjects to top-level\n      if(!_isSubjectReference(node)) {\n        flattened.push(node);\n      }\n    }\n\n    if(ctx === null) {\n      return callback(null, flattened);\n    }\n\n    // compact result (force @graph option to true, skip expansion)\n    options.graph = true;\n    options.skipExpansion = true;\n    jsonld.compact(flattened, ctx, options, function(err, compacted) {\n      if(err) {\n        return callback(new JsonLdError(\n          'Could not compact merged output.',\n          'jsonld.MergeError', {cause: err}));\n      }\n      callback(null, compacted);\n    });\n  }\n};\n\n/**\n * Relabels all blank nodes in the given JSON-LD input.\n *\n * @param input the JSON-LD input.\n * @param [options] the options to use:\n *          [issuer] a jsonld.IdentifierIssuer to use to label blank nodes.\n *          [namer] (deprecated).\n */\njsonld.relabelBlankNodes = function(input, options) {\n  options = options || {};\n  var issuer = options.namer || options.issuer || new IdentifierIssuer('_:b');\n  return _labelBlankNodes(issuer, input);\n};\n\n/**\n * Prepends a base IRI to the given relative IRI.\n *\n * @param base the base IRI.\n * @param iri the relative IRI.\n *\n * @return the absolute IRI.\n */\njsonld.prependBase = function(base, iri) {\n  return _prependBase(base, iri);\n};\n\n/**\n * The default document loader for external documents. If the environment\n * is node.js, a callback-continuation-style document loader is used; otherwise,\n * a promises-style document loader is used.\n *\n * @param url the URL to load.\n * @param callback(err, remoteDoc) called once the operation completes,\n *          if using a non-promises API.\n *\n * @return a promise, if using a promises API.\n */\njsonld.documentLoader = function(url, callback) {\n  var err = new JsonLdError(\n    'Could not retrieve a JSON-LD document from the URL. URL ' +\n    'dereferencing not implemented.', 'jsonld.LoadDocumentError',\n    {code: 'loading document failed'});\n  if(_nodejs) {\n    return callback(err, {contextUrl: null, documentUrl: url, document: null});\n  }\n  return jsonld.promisify(function(callback) {\n    callback(err);\n  });\n};\n\n/**\n * Deprecated default document loader. Use or override jsonld.documentLoader\n * instead.\n */\njsonld.loadDocument = function(url, callback) {\n  var promise = jsonld.documentLoader(url, callback);\n  if(promise && 'then' in promise) {\n    promise.then(callback.bind(null, null), callback);\n  }\n};\n\n/* Promises API */\n\n/**\n * Creates a new promises API object.\n *\n * @param [options] the options to use:\n *          [api] an object to attach the API to.\n *          [version] 'json-ld-1.0' to output a standard JSON-LD 1.0 promises\n *            API, 'jsonld.js' to output the same with augmented proprietary\n *            methods (default: 'jsonld.js')\n *\n * @return the promises API object.\n */\njsonld.promises = function(options) {\n  options = options || {};\n  var slice = Array.prototype.slice;\n  var promisify = jsonld.promisify;\n\n  // handle 'api' option as version, set defaults\n  var api = options.api || {};\n  var version = options.version || 'jsonld.js';\n  if(typeof options.api === 'string') {\n    if(!options.version) {\n      version = options.api;\n    }\n    api = {};\n  }\n\n  api.expand = function(input) {\n    if(arguments.length < 1) {\n      throw new TypeError('Could not expand, too few arguments.');\n    }\n    return promisify.apply(null, [jsonld.expand].concat(slice.call(arguments)));\n  };\n  api.compact = function(input, ctx) {\n    if(arguments.length < 2) {\n      throw new TypeError('Could not compact, too few arguments.');\n    }\n    var compact = function(input, ctx, options, callback) {\n      // ensure only one value is returned in callback\n      jsonld.compact(input, ctx, options, function(err, compacted) {\n        callback(err, compacted);\n      });\n    };\n    return promisify.apply(null, [compact].concat(slice.call(arguments)));\n  };\n  api.flatten = function(input) {\n    if(arguments.length < 1) {\n      throw new TypeError('Could not flatten, too few arguments.');\n    }\n    return promisify.apply(\n      null, [jsonld.flatten].concat(slice.call(arguments)));\n  };\n  api.frame = function(input, frame) {\n    if(arguments.length < 2) {\n      throw new TypeError('Could not frame, too few arguments.');\n    }\n    return promisify.apply(null, [jsonld.frame].concat(slice.call(arguments)));\n  };\n  api.fromRDF = function(dataset) {\n    if(arguments.length < 1) {\n      throw new TypeError('Could not convert from RDF, too few arguments.');\n    }\n    return promisify.apply(\n      null, [jsonld.fromRDF].concat(slice.call(arguments)));\n  };\n  api.toRDF = function(input) {\n    if(arguments.length < 1) {\n      throw new TypeError('Could not convert to RDF, too few arguments.');\n    }\n    return promisify.apply(null, [jsonld.toRDF].concat(slice.call(arguments)));\n  };\n  api.normalize = function(input) {\n    if(arguments.length < 1) {\n      throw new TypeError('Could not normalize, too few arguments.');\n    }\n    return promisify.apply(\n      null, [jsonld.normalize].concat(slice.call(arguments)));\n  };\n\n  if(version === 'jsonld.js') {\n    api.link = function(input, ctx) {\n      if(arguments.length < 2) {\n        throw new TypeError('Could not link, too few arguments.');\n      }\n      return promisify.apply(\n        null, [jsonld.link].concat(slice.call(arguments)));\n    };\n    api.objectify = function(input) {\n      return promisify.apply(\n        null, [jsonld.objectify].concat(slice.call(arguments)));\n    };\n    api.createNodeMap = function(input) {\n      return promisify.apply(\n        null, [jsonld.createNodeMap].concat(slice.call(arguments)));\n    };\n    api.merge = function(input) {\n      return promisify.apply(\n        null, [jsonld.merge].concat(slice.call(arguments)));\n    };\n  }\n\n  try {\n    jsonld.Promise = global.Promise || require('es6-promise').Promise;\n  } catch(e) {\n    var f = function() {\n      throw new Error('Unable to find a Promise implementation.');\n    };\n    for(var method in api) {\n      api[method] = f;\n    }\n  }\n\n  return api;\n};\n\n/**\n * Converts a node.js async op into a promise w/boxed resolved value(s).\n *\n * @param op the operation to convert.\n *\n * @return the promise.\n */\njsonld.promisify = function(op) {\n  if(!jsonld.Promise) {\n    try {\n      jsonld.Promise = global.Promise || require('es6-promise').Promise;\n    } catch(e) {\n      throw new Error('Unable to find a Promise implementation.');\n    }\n  }\n  var args = Array.prototype.slice.call(arguments, 1);\n  return new jsonld.Promise(function(resolve, reject) {\n    op.apply(null, args.concat(function(err, value) {\n      if(!err) {\n        resolve(value);\n      } else {\n        reject(err);\n      }\n    }));\n  });\n};\n\n// extend jsonld.promises w/jsonld.js methods\njsonld.promises({api: jsonld.promises});\n\n/* WebIDL API */\n\nfunction JsonLdProcessor() {}\nJsonLdProcessor.prototype = jsonld.promises({version: 'json-ld-1.0'});\nJsonLdProcessor.prototype.toString = function() {\n  if(this instanceof JsonLdProcessor) {\n    return '[object JsonLdProcessor]';\n  }\n  return '[object JsonLdProcessorPrototype]';\n};\njsonld.JsonLdProcessor = JsonLdProcessor;\n\n// IE8 has Object.defineProperty but it only\n// works on DOM nodes -- so feature detection\n// requires try/catch :-(\nvar canDefineProperty = !!Object.defineProperty;\nif(canDefineProperty) {\n  try {\n    Object.defineProperty({}, 'x', {});\n  } catch(e) {\n    canDefineProperty = false;\n  }\n}\n\nif(canDefineProperty) {\n  Object.defineProperty(JsonLdProcessor, 'prototype', {\n    writable: false,\n    enumerable: false\n  });\n  Object.defineProperty(JsonLdProcessor.prototype, 'constructor', {\n    writable: true,\n    enumerable: false,\n    configurable: true,\n    value: JsonLdProcessor\n  });\n}\n\n// setup browser global JsonLdProcessor\nif(_browser && typeof global.JsonLdProcessor === 'undefined') {\n  if(canDefineProperty) {\n    Object.defineProperty(global, 'JsonLdProcessor', {\n      writable: true,\n      enumerable: false,\n      configurable: true,\n      value: JsonLdProcessor\n    });\n  } else {\n    global.JsonLdProcessor = JsonLdProcessor;\n  }\n}\n\n/* Utility API */\n\n// define setImmediate and nextTick\n//// nextTick implementation with browser-compatible fallback ////\n// from https://github.com/caolan/async/blob/master/lib/async.js\n\n// capture the global reference to guard against fakeTimer mocks\nvar _setImmediate = typeof setImmediate === 'function' && setImmediate;\n\nvar _delay = _setImmediate ? function(fn) {\n  // not a direct alias (for IE10 compatibility)\n  _setImmediate(fn);\n} : function(fn) {\n  setTimeout(fn, 0);\n};\n\nif(typeof process === 'object' && typeof process.nextTick === 'function') {\n  jsonld.nextTick = process.nextTick;\n} else {\n  jsonld.nextTick = _delay;\n}\njsonld.setImmediate = _setImmediate ? _delay : jsonld.nextTick;\n\n/**\n * Parses a link header. The results will be key'd by the value of \"rel\".\n *\n * Link: <http://json-ld.org/contexts/person.jsonld>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"\n *\n * Parses as: {\n *   'http://www.w3.org/ns/json-ld#context': {\n *     target: http://json-ld.org/contexts/person.jsonld,\n *     type: 'application/ld+json'\n *   }\n * }\n *\n * If there is more than one \"rel\" with the same IRI, then entries in the\n * resulting map for that \"rel\" will be arrays.\n *\n * @param header the link header to parse.\n */\njsonld.parseLinkHeader = function(header) {\n  var rval = {};\n  // split on unbracketed/unquoted commas\n  var entries = header.match(/(?:<[^>]*?>|\"[^\"]*?\"|[^,])+/g);\n  var rLinkHeader = /\\s*<([^>]*?)>\\s*(?:;\\s*(.*))?/;\n  for(var i = 0; i < entries.length; ++i) {\n    var match = entries[i].match(rLinkHeader);\n    if(!match) {\n      continue;\n    }\n    var result = {target: match[1]};\n    var params = match[2];\n    var rParams = /(.*?)=(?:(?:\"([^\"]*?)\")|([^\"]*?))\\s*(?:(?:;\\s*)|$)/g;\n    while(match = rParams.exec(params)) {\n      result[match[1]] = (match[2] === undefined) ? match[3] : match[2];\n    }\n    var rel = result['rel'] || '';\n    if(_isArray(rval[rel])) {\n      rval[rel].push(result);\n    } else if(rel in rval) {\n      rval[rel] = [rval[rel], result];\n    } else {\n      rval[rel] = result;\n    }\n  }\n  return rval;\n};\n\n/**\n * Creates a simple queue for requesting documents.\n */\njsonld.RequestQueue = function() {\n  this._requests = {};\n};\njsonld.RequestQueue.prototype.wrapLoader = function(loader) {\n  this._loader = loader;\n  this._usePromise = (loader.length === 1);\n  return this.add.bind(this);\n};\njsonld.RequestQueue.prototype.add = function(url, callback) {\n  var self = this;\n\n  // callback must be given if not using promises\n  if(!callback && !self._usePromise) {\n    throw new Error('callback must be specified.');\n  }\n\n  // Promise-based API\n  if(self._usePromise) {\n    return new jsonld.Promise(function(resolve, reject) {\n      var load = self._requests[url];\n      if(!load) {\n        // load URL then remove from queue\n        load = self._requests[url] = self._loader(url)\n          .then(function(remoteDoc) {\n            delete self._requests[url];\n            return remoteDoc;\n          }).catch(function(err) {\n            delete self._requests[url];\n            throw err;\n          });\n      }\n      // resolve/reject promise once URL has been loaded\n      load.then(function(remoteDoc) {\n        resolve(remoteDoc);\n      }).catch(function(err) {\n        reject(err);\n      });\n    });\n  }\n\n  // callback-based API\n  if(url in self._requests) {\n    self._requests[url].push(callback);\n  } else {\n    self._requests[url] = [callback];\n    self._loader(url, function(err, remoteDoc) {\n      var callbacks = self._requests[url];\n      delete self._requests[url];\n      for(var i = 0; i < callbacks.length; ++i) {\n        callbacks[i](err, remoteDoc);\n      }\n    });\n  }\n};\n\n/**\n * Creates a simple document cache that retains documents for a short\n * period of time.\n *\n * FIXME: Implement simple HTTP caching instead.\n *\n * @param size the maximum size of the cache.\n */\njsonld.DocumentCache = function(size) {\n  this.order = [];\n  this.cache = {};\n  this.size = size || 50;\n  this.expires = 30 * 1000;\n};\njsonld.DocumentCache.prototype.get = function(url) {\n  if(url in this.cache) {\n    var entry = this.cache[url];\n    if(entry.expires >= +new Date()) {\n      return entry.ctx;\n    }\n    delete this.cache[url];\n    this.order.splice(this.order.indexOf(url), 1);\n  }\n  return null;\n};\njsonld.DocumentCache.prototype.set = function(url, ctx) {\n  if(this.order.length === this.size) {\n    delete this.cache[this.order.shift()];\n  }\n  this.order.push(url);\n  this.cache[url] = {ctx: ctx, expires: (+new Date() + this.expires)};\n};\n\n/**\n * Creates an active context cache.\n *\n * @param size the maximum size of the cache.\n */\njsonld.ActiveContextCache = function(size) {\n  this.order = [];\n  this.cache = {};\n  this.size = size || 100;\n};\njsonld.ActiveContextCache.prototype.get = function(activeCtx, localCtx) {\n  var key1 = JSON.stringify(activeCtx);\n  var key2 = JSON.stringify(localCtx);\n  var level1 = this.cache[key1];\n  if(level1 && key2 in level1) {\n    return level1[key2];\n  }\n  return null;\n};\njsonld.ActiveContextCache.prototype.set = function(\n  activeCtx, localCtx, result) {\n  if(this.order.length === this.size) {\n    var entry = this.order.shift();\n    delete this.cache[entry.activeCtx][entry.localCtx];\n  }\n  var key1 = JSON.stringify(activeCtx);\n  var key2 = JSON.stringify(localCtx);\n  this.order.push({activeCtx: key1, localCtx: key2});\n  if(!(key1 in this.cache)) {\n    this.cache[key1] = {};\n  }\n  this.cache[key1][key2] = _clone(result);\n};\n\n/**\n * Default JSON-LD cache.\n */\njsonld.cache = {\n  activeCtx: new jsonld.ActiveContextCache()\n};\n\n/**\n * Document loaders.\n */\njsonld.documentLoaders = {};\n\n/**\n * Creates a built-in jquery document loader.\n *\n * @param $ the jquery instance to use.\n * @param options the options to use:\n *          secure: require all URLs to use HTTPS.\n *          usePromise: true to use a promises API, false for a\n *            callback-continuation-style API; defaults to true if Promise\n *            is globally defined, false if not.\n *\n * @return the jquery document loader.\n */\njsonld.documentLoaders.jquery = function($, options) {\n  options = options || {};\n  var queue = new jsonld.RequestQueue();\n\n  // use option or, by default, use Promise when its defined\n  var usePromise = ('usePromise' in options ?\n    options.usePromise : (typeof Promise !== 'undefined'));\n  if(usePromise) {\n    return queue.wrapLoader(function(url) {\n      return jsonld.promisify(loader, url);\n    });\n  }\n  return queue.wrapLoader(loader);\n\n  function loader(url, callback) {\n    if(url.indexOf('http:') !== 0 && url.indexOf('https:') !== 0) {\n      return callback(new JsonLdError(\n        'URL could not be dereferenced; only \"http\" and \"https\" URLs are ' +\n        'supported.',\n        'jsonld.InvalidUrl', {code: 'loading document failed', url: url}),\n        {contextUrl: null, documentUrl: url, document: null});\n    }\n    if(options.secure && url.indexOf('https') !== 0) {\n      return callback(new JsonLdError(\n        'URL could not be dereferenced; secure mode is enabled and ' +\n        'the URL\\'s scheme is not \"https\".',\n        'jsonld.InvalidUrl', {code: 'loading document failed', url: url}),\n        {contextUrl: null, documentUrl: url, document: null});\n    }\n    $.ajax({\n      url: url,\n      accepts: {\n        json: 'application/ld+json, application/json'\n      },\n      // ensure Accept header is very specific for JSON-LD/JSON\n      headers: {\n        'Accept': 'application/ld+json, application/json'\n      },\n      dataType: 'json',\n      crossDomain: true,\n      success: function(data, textStatus, jqXHR) {\n        var doc = {contextUrl: null, documentUrl: url, document: data};\n\n        // handle Link Header\n        var contentType = jqXHR.getResponseHeader('Content-Type');\n        var linkHeader = jqXHR.getResponseHeader('Link');\n        if(linkHeader && contentType !== 'application/ld+json') {\n          // only 1 related link header permitted\n          linkHeader = jsonld.parseLinkHeader(linkHeader)[LINK_HEADER_REL];\n          if(_isArray(linkHeader)) {\n            return callback(new JsonLdError(\n              'URL could not be dereferenced, it has more than one ' +\n              'associated HTTP Link Header.',\n              'jsonld.InvalidUrl',\n              {code: 'multiple context link headers', url: url}), doc);\n          }\n          if(linkHeader) {\n            doc.contextUrl = linkHeader.target;\n          }\n        }\n\n        callback(null, doc);\n      },\n      error: function(jqXHR, textStatus, err) {\n        callback(new JsonLdError(\n          'URL could not be dereferenced, an error occurred.',\n          'jsonld.LoadDocumentError',\n          {code: 'loading document failed', url: url, cause: err}),\n          {contextUrl: null, documentUrl: url, document: null});\n      }\n    });\n  }\n};\n\n/**\n * Creates a built-in node document loader.\n *\n * @param options the options to use:\n *          secure: require all URLs to use HTTPS.\n *          strictSSL: true to require SSL certificates to be valid,\n *            false not to (default: true).\n *          maxRedirects: the maximum number of redirects to permit, none by\n *            default.\n *          request: the object which will make the request, default is\n *            provided by `https://www.npmjs.com/package/request`.\n *          headers: an array of headers which will be passed as request\n *            headers for the requested document. Accept is not allowed.\n *          usePromise: true to use a promises API, false for a\n *            callback-continuation-style API; false by default.\n *\n * @return the node document loader.\n */\njsonld.documentLoaders.node = function(options) {\n  options = options || {};\n  var strictSSL = ('strictSSL' in options) ? options.strictSSL : true;\n  var maxRedirects = ('maxRedirects' in options) ? options.maxRedirects : -1;\n  var request = ('request' in options) ? options.request : require('request');\n  var acceptHeader = 'application/ld+json, application/json';\n  var http = require('http');\n  // TODO: disable cache until HTTP caching implemented\n  //var cache = new jsonld.DocumentCache();\n\n  var queue = new jsonld.RequestQueue();\n  if(options.usePromise) {\n    return queue.wrapLoader(function(url) {\n      return jsonld.promisify(loadDocument, url, []);\n    });\n  }\n  var headers = options.headers || {};\n  if('Accept' in headers || 'accept' in headers) {\n    throw new RangeError(\n      'Accept header may not be specified as an option; only \"' +\n      acceptHeader + '\" is supported.');\n  }\n  return queue.wrapLoader(function(url, callback) {\n    loadDocument(url, [], callback);\n  });\n\n  function loadDocument(url, redirects, callback) {\n    if(url.indexOf('http:') !== 0 && url.indexOf('https:') !== 0) {\n      return callback(new JsonLdError(\n        'URL could not be dereferenced; only \"http\" and \"https\" URLs are ' +\n        'supported.',\n        'jsonld.InvalidUrl', {code: 'loading document failed', url: url}),\n        {contextUrl: null, documentUrl: url, document: null});\n    }\n    if(options.secure && url.indexOf('https') !== 0) {\n      return callback(new JsonLdError(\n        'URL could not be dereferenced; secure mode is enabled and ' +\n        'the URL\\'s scheme is not \"https\".',\n        'jsonld.InvalidUrl', {code: 'loading document failed', url: url}),\n        {contextUrl: null, documentUrl: url, document: null});\n    }\n    // TODO: disable cache until HTTP caching implemented\n    var doc = null;//cache.get(url);\n    if(doc !== null) {\n      return callback(null, doc);\n    }\n    var headers = {'Accept': acceptHeader};\n    for(var k in options.headers) { headers[k] = options.headers[k]; }\n    request({\n      url: url,\n      headers: headers,\n      strictSSL: strictSSL,\n      followRedirect: false\n    }, handleResponse);\n\n    function handleResponse(err, res, body) {\n      doc = {contextUrl: null, documentUrl: url, document: body || null};\n\n      // handle error\n      if(err) {\n        return callback(new JsonLdError(\n          'URL could not be dereferenced, an error occurred.',\n          'jsonld.LoadDocumentError',\n          {code: 'loading document failed', url: url, cause: err}), doc);\n      }\n      var statusText = http.STATUS_CODES[res.statusCode];\n      if(res.statusCode >= 400) {\n        return callback(new JsonLdError(\n          'URL could not be dereferenced: ' + statusText,\n          'jsonld.InvalidUrl', {\n            code: 'loading document failed',\n            url: url,\n            httpStatusCode: res.statusCode\n          }), doc);\n      }\n\n      // handle Link Header\n      if(res.headers.link &&\n        res.headers['content-type'] !== 'application/ld+json') {\n        // only 1 related link header permitted\n        var linkHeader = jsonld.parseLinkHeader(\n          res.headers.link)[LINK_HEADER_REL];\n        if(_isArray(linkHeader)) {\n          return callback(new JsonLdError(\n            'URL could not be dereferenced, it has more than one associated ' +\n            'HTTP Link Header.',\n            'jsonld.InvalidUrl',\n            {code: 'multiple context link headers', url: url}), doc);\n        }\n        if(linkHeader) {\n          doc.contextUrl = linkHeader.target;\n        }\n      }\n\n      // handle redirect\n      if(res.statusCode >= 300 && res.statusCode < 400 &&\n        res.headers.location) {\n        if(redirects.length === maxRedirects) {\n          return callback(new JsonLdError(\n            'URL could not be dereferenced; there were too many redirects.',\n            'jsonld.TooManyRedirects', {\n              code: 'loading document failed',\n              url: url,\n              httpStatusCode: res.statusCode,\n              redirects: redirects\n            }), doc);\n        }\n        if(redirects.indexOf(url) !== -1) {\n          return callback(new JsonLdError(\n            'URL could not be dereferenced; infinite redirection was detected.',\n            'jsonld.InfiniteRedirectDetected', {\n              code: 'recursive context inclusion',\n              url: url,\n              httpStatusCode: res.statusCode,\n              redirects: redirects\n            }), doc);\n        }\n        redirects.push(url);\n        return loadDocument(res.headers.location, redirects, callback);\n      }\n      // cache for each redirected URL\n      redirects.push(url);\n      // TODO: disable cache until HTTP caching implemented\n      /*for(var i = 0; i < redirects.length; ++i) {\n        cache.set(\n          redirects[i],\n          {contextUrl: null, documentUrl: redirects[i], document: body});\n      }*/\n      callback(err, doc);\n    }\n  }\n};\n\n/**\n * Creates a built-in XMLHttpRequest document loader.\n *\n * @param options the options to use:\n *          secure: require all URLs to use HTTPS.\n *          usePromise: true to use a promises API, false for a\n *            callback-continuation-style API; defaults to true if Promise\n *            is globally defined, false if not.\n *          [xhr]: the XMLHttpRequest API to use.\n *\n * @return the XMLHttpRequest document loader.\n */\njsonld.documentLoaders.xhr = function(options) {\n  options = options || {};\n  var rlink = /(^|(\\r\\n))link:/i;\n  var queue = new jsonld.RequestQueue();\n\n  // use option or, by default, use Promise when its defined\n  var usePromise = ('usePromise' in options ?\n    options.usePromise : (typeof Promise !== 'undefined'));\n  if(usePromise) {\n    return queue.wrapLoader(function(url) {\n      return jsonld.promisify(loader, url);\n    });\n  }\n  return queue.wrapLoader(loader);\n\n  function loader(url, callback) {\n    if(url.indexOf('http:') !== 0 && url.indexOf('https:') !== 0) {\n      return callback(new JsonLdError(\n        'URL could not be dereferenced; only \"http\" and \"https\" URLs are ' +\n        'supported.',\n        'jsonld.InvalidUrl', {code: 'loading document failed', url: url}),\n        {contextUrl: null, documentUrl: url, document: null});\n    }\n    if(options.secure && url.indexOf('https') !== 0) {\n      return callback(new JsonLdError(\n        'URL could not be dereferenced; secure mode is enabled and ' +\n        'the URL\\'s scheme is not \"https\".',\n        'jsonld.InvalidUrl', {code: 'loading document failed', url: url}),\n        {contextUrl: null, documentUrl: url, document: null});\n    }\n    var xhr = options.xhr || XMLHttpRequest;\n    var req = new xhr();\n    req.onload = function() {\n      if(req.status >= 400) {\n        return callback(new JsonLdError(\n          'URL could not be dereferenced: ' + req.statusText,\n          'jsonld.LoadDocumentError', {\n            code: 'loading document failed',\n            url: url,\n            httpStatusCode: req.status\n          }), {contextUrl: null, documentUrl: url, document: null});\n      }\n\n      var doc = {contextUrl: null, documentUrl: url, document: req.response};\n\n      // handle Link Header (avoid unsafe header warning by existence testing)\n      var contentType = req.getResponseHeader('Content-Type');\n      var linkHeader;\n      if(rlink.test(req.getAllResponseHeaders())) {\n        linkHeader = req.getResponseHeader('Link');\n      }\n      if(linkHeader && contentType !== 'application/ld+json') {\n        // only 1 related link header permitted\n        linkHeader = jsonld.parseLinkHeader(linkHeader)[LINK_HEADER_REL];\n        if(_isArray(linkHeader)) {\n          return callback(new JsonLdError(\n            'URL could not be dereferenced, it has more than one ' +\n            'associated HTTP Link Header.',\n            'jsonld.InvalidUrl',\n            {code: 'multiple context link headers', url: url}), doc);\n        }\n        if(linkHeader) {\n          doc.contextUrl = linkHeader.target;\n        }\n      }\n\n      callback(null, doc);\n    };\n    req.onerror = function() {\n      callback(new JsonLdError(\n        'URL could not be dereferenced, an error occurred.',\n        'jsonld.LoadDocumentError',\n        {code: 'loading document failed', url: url}),\n        {contextUrl: null, documentUrl: url, document: null});\n    };\n    req.open('GET', url, true);\n    req.setRequestHeader('Accept', 'application/ld+json, application/json');\n    req.send();\n  }\n};\n\n/**\n * Assigns the default document loader for external document URLs to a built-in\n * default. Supported types currently include: 'jquery' and 'node'.\n *\n * To use the jquery document loader, the first parameter must be a reference\n * to the main jquery object.\n *\n * @param type the type to set.\n * @param [params] the parameters required to use the document loader.\n */\njsonld.useDocumentLoader = function(type) {\n  if(!(type in jsonld.documentLoaders)) {\n    throw new JsonLdError(\n      'Unknown document loader type: \"' + type + '\"',\n      'jsonld.UnknownDocumentLoader',\n      {type: type});\n  }\n\n  // set document loader\n  jsonld.documentLoader = jsonld.documentLoaders[type].apply(\n    jsonld, Array.prototype.slice.call(arguments, 1));\n};\n\n/**\n * Processes a local context, resolving any URLs as necessary, and returns a\n * new active context in its callback.\n *\n * @param activeCtx the current active context.\n * @param localCtx the local context to process.\n * @param [options] the options to use:\n *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n * @param callback(err, ctx) called once the operation completes.\n */\njsonld.processContext = function(activeCtx, localCtx) {\n  // get arguments\n  var options = {};\n  var callbackArg = 2;\n  if(arguments.length > 3) {\n    options = arguments[2] || {};\n    callbackArg += 1;\n  }\n  var callback = arguments[callbackArg];\n\n  // set default options\n  if(!('base' in options)) {\n    options.base = '';\n  }\n  if(!('documentLoader' in options)) {\n    options.documentLoader = jsonld.loadDocument;\n  }\n\n  // return initial context early for null context\n  if(localCtx === null) {\n    return callback(null, _getInitialContext(options));\n  }\n\n  // retrieve URLs in localCtx\n  localCtx = _clone(localCtx);\n  if(!(_isObject(localCtx) && '@context' in localCtx)) {\n    localCtx = {'@context': localCtx};\n  }\n  _retrieveContextUrls(localCtx, options, function(err, ctx) {\n    if(err) {\n      return callback(err);\n    }\n    try {\n      // process context\n      ctx = new Processor().processContext(activeCtx, ctx, options);\n    } catch(ex) {\n      return callback(ex);\n    }\n    callback(null, ctx);\n  });\n};\n\n/**\n * Returns true if the given subject has the given property.\n *\n * @param subject the subject to check.\n * @param property the property to look for.\n *\n * @return true if the subject has the given property, false if not.\n */\njsonld.hasProperty = function(subject, property) {\n  var rval = false;\n  if(property in subject) {\n    var value = subject[property];\n    rval = (!_isArray(value) || value.length > 0);\n  }\n  return rval;\n};\n\n/**\n * Determines if the given value is a property of the given subject.\n *\n * @param subject the subject to check.\n * @param property the property to check.\n * @param value the value to check.\n *\n * @return true if the value exists, false if not.\n */\njsonld.hasValue = function(subject, property, value) {\n  var rval = false;\n  if(jsonld.hasProperty(subject, property)) {\n    var val = subject[property];\n    var isList = _isList(val);\n    if(_isArray(val) || isList) {\n      if(isList) {\n        val = val['@list'];\n      }\n      for(var i = 0; i < val.length; ++i) {\n        if(jsonld.compareValues(value, val[i])) {\n          rval = true;\n          break;\n        }\n      }\n    } else if(!_isArray(value)) {\n      // avoid matching the set of values with an array value parameter\n      rval = jsonld.compareValues(value, val);\n    }\n  }\n  return rval;\n};\n\n/**\n * Adds a value to a subject. If the value is an array, all values in the\n * array will be added.\n *\n * @param subject the subject to add the value to.\n * @param property the property that relates the value to the subject.\n * @param value the value to add.\n * @param [options] the options to use:\n *        [propertyIsArray] true if the property is always an array, false\n *          if not (default: false).\n *        [allowDuplicate] true to allow duplicates, false not to (uses a\n *          simple shallow comparison of subject ID or value) (default: true).\n */\njsonld.addValue = function(subject, property, value, options) {\n  options = options || {};\n  if(!('propertyIsArray' in options)) {\n    options.propertyIsArray = false;\n  }\n  if(!('allowDuplicate' in options)) {\n    options.allowDuplicate = true;\n  }\n\n  if(_isArray(value)) {\n    if(value.length === 0 && options.propertyIsArray &&\n      !(property in subject)) {\n      subject[property] = [];\n    }\n    for(var i = 0; i < value.length; ++i) {\n      jsonld.addValue(subject, property, value[i], options);\n    }\n  } else if(property in subject) {\n    // check if subject already has value if duplicates not allowed\n    var hasValue = (!options.allowDuplicate &&\n      jsonld.hasValue(subject, property, value));\n\n    // make property an array if value not present or always an array\n    if(!_isArray(subject[property]) &&\n      (!hasValue || options.propertyIsArray)) {\n      subject[property] = [subject[property]];\n    }\n\n    // add new value\n    if(!hasValue) {\n      subject[property].push(value);\n    }\n  } else {\n    // add new value as set or single value\n    subject[property] = options.propertyIsArray ? [value] : value;\n  }\n};\n\n/**\n * Gets all of the values for a subject's property as an array.\n *\n * @param subject the subject.\n * @param property the property.\n *\n * @return all of the values for a subject's property as an array.\n */\njsonld.getValues = function(subject, property) {\n  var rval = subject[property] || [];\n  if(!_isArray(rval)) {\n    rval = [rval];\n  }\n  return rval;\n};\n\n/**\n * Removes a property from a subject.\n *\n * @param subject the subject.\n * @param property the property.\n */\njsonld.removeProperty = function(subject, property) {\n  delete subject[property];\n};\n\n/**\n * Removes a value from a subject.\n *\n * @param subject the subject.\n * @param property the property that relates the value to the subject.\n * @param value the value to remove.\n * @param [options] the options to use:\n *          [propertyIsArray] true if the property is always an array, false\n *            if not (default: false).\n */\njsonld.removeValue = function(subject, property, value, options) {\n  options = options || {};\n  if(!('propertyIsArray' in options)) {\n    options.propertyIsArray = false;\n  }\n\n  // filter out value\n  var values = jsonld.getValues(subject, property).filter(function(e) {\n    return !jsonld.compareValues(e, value);\n  });\n\n  if(values.length === 0) {\n    jsonld.removeProperty(subject, property);\n  } else if(values.length === 1 && !options.propertyIsArray) {\n    subject[property] = values[0];\n  } else {\n    subject[property] = values;\n  }\n};\n\n/**\n * Compares two JSON-LD values for equality. Two JSON-LD values will be\n * considered equal if:\n *\n * 1. They are both primitives of the same type and value.\n * 2. They are both @values with the same @value, @type, @language,\n *   and @index, OR\n * 3. They both have @ids they are the same.\n *\n * @param v1 the first value.\n * @param v2 the second value.\n *\n * @return true if v1 and v2 are considered equal, false if not.\n */\njsonld.compareValues = function(v1, v2) {\n  // 1. equal primitives\n  if(v1 === v2) {\n    return true;\n  }\n\n  // 2. equal @values\n  if(_isValue(v1) && _isValue(v2) &&\n    v1['@value'] === v2['@value'] &&\n    v1['@type'] === v2['@type'] &&\n    v1['@language'] === v2['@language'] &&\n    v1['@index'] === v2['@index']) {\n    return true;\n  }\n\n  // 3. equal @ids\n  if(_isObject(v1) && ('@id' in v1) && _isObject(v2) && ('@id' in v2)) {\n    return v1['@id'] === v2['@id'];\n  }\n\n  return false;\n};\n\n/**\n * Gets the value for the given active context key and type, null if none is\n * set.\n *\n * @param ctx the active context.\n * @param key the context key.\n * @param [type] the type of value to get (eg: '@id', '@type'), if not\n *          specified gets the entire entry for a key, null if not found.\n *\n * @return the value.\n */\njsonld.getContextValue = function(ctx, key, type) {\n  var rval = null;\n\n  // return null for invalid key\n  if(key === null) {\n    return rval;\n  }\n\n  // get default language\n  if(type === '@language' && (type in ctx)) {\n    rval = ctx[type];\n  }\n\n  // get specific entry information\n  if(ctx.mappings[key]) {\n    var entry = ctx.mappings[key];\n\n    if(_isUndefined(type)) {\n      // return whole entry\n      rval = entry;\n    } else if(type in entry) {\n      // return entry value for type\n      rval = entry[type];\n    }\n  }\n\n  return rval;\n};\n\n/** Registered RDF dataset parsers hashed by content-type. */\nvar _rdfParsers = {};\n\n/**\n * Registers an RDF dataset parser by content-type, for use with\n * jsonld.fromRDF. An RDF dataset parser will always be given two parameters,\n * a string of input and a callback. An RDF dataset parser can be synchronous\n * or asynchronous.\n *\n * If the parser function returns undefined or null then it will be assumed to\n * be asynchronous w/a continuation-passing style and the callback parameter\n * given to the parser MUST be invoked.\n *\n * If it returns a Promise, then it will be assumed to be asynchronous, but the\n * callback parameter MUST NOT be invoked. It should instead be ignored.\n *\n * If it returns an RDF dataset, it will be assumed to be synchronous and the\n * callback parameter MUST NOT be invoked. It should instead be ignored.\n *\n * @param contentType the content-type for the parser.\n * @param parser(input, callback(err, dataset)) the parser function (takes a\n *          string as a parameter and either returns null/undefined and uses\n *          the given callback, returns a Promise, or returns an RDF dataset).\n */\njsonld.registerRDFParser = function(contentType, parser) {\n  _rdfParsers[contentType] = parser;\n};\n\n/**\n * Unregisters an RDF dataset parser by content-type.\n *\n * @param contentType the content-type for the parser.\n */\njsonld.unregisterRDFParser = function(contentType) {\n  delete _rdfParsers[contentType];\n};\n\nif(_nodejs) {\n  // needed for serialization of XML literals\n  if(typeof XMLSerializer === 'undefined') {\n    var XMLSerializer = null;\n  }\n  if(typeof Node === 'undefined') {\n    var Node = {\n      ELEMENT_NODE: 1,\n      ATTRIBUTE_NODE: 2,\n      TEXT_NODE: 3,\n      CDATA_SECTION_NODE: 4,\n      ENTITY_REFERENCE_NODE: 5,\n      ENTITY_NODE: 6,\n      PROCESSING_INSTRUCTION_NODE: 7,\n      COMMENT_NODE: 8,\n      DOCUMENT_NODE: 9,\n      DOCUMENT_TYPE_NODE: 10,\n      DOCUMENT_FRAGMENT_NODE: 11,\n      NOTATION_NODE:12\n    };\n  }\n}\n\n// constants\nvar XSD_BOOLEAN = 'http://www.w3.org/2001/XMLSchema#boolean';\nvar XSD_DOUBLE = 'http://www.w3.org/2001/XMLSchema#double';\nvar XSD_INTEGER = 'http://www.w3.org/2001/XMLSchema#integer';\nvar XSD_STRING = 'http://www.w3.org/2001/XMLSchema#string';\n\nvar RDF = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#';\nvar RDF_LIST = RDF + 'List';\nvar RDF_FIRST = RDF + 'first';\nvar RDF_REST = RDF + 'rest';\nvar RDF_NIL = RDF + 'nil';\nvar RDF_TYPE = RDF + 'type';\nvar RDF_PLAIN_LITERAL = RDF + 'PlainLiteral';\nvar RDF_XML_LITERAL = RDF + 'XMLLiteral';\nvar RDF_OBJECT = RDF + 'object';\nvar RDF_LANGSTRING = RDF + 'langString';\n\nvar LINK_HEADER_REL = 'http://www.w3.org/ns/json-ld#context';\nvar MAX_CONTEXT_URLS = 10;\n\n/**\n * A JSON-LD Error.\n *\n * @param msg the error message.\n * @param type the error type.\n * @param details the error details.\n */\nvar JsonLdError = function(msg, type, details) {\n  if(_nodejs) {\n    Error.call(this);\n    Error.captureStackTrace(this, this.constructor);\n  } else if(typeof Error !== 'undefined') {\n    this.stack = (new Error()).stack;\n  }\n  this.name = type || 'jsonld.Error';\n  this.message = msg || 'An unspecified JSON-LD error occurred.';\n  this.details = details || {};\n};\nif(_nodejs) {\n  require('util').inherits(JsonLdError, Error);\n} else if(typeof Error !== 'undefined') {\n  JsonLdError.prototype = new Error();\n}\n\n/**\n * Constructs a new JSON-LD Processor.\n */\nvar Processor = function() {};\n\n/**\n * Recursively compacts an element using the given active context. All values\n * must be in expanded form before this method is called.\n *\n * @param activeCtx the active context to use.\n * @param activeProperty the compacted property associated with the element\n *          to compact, null for none.\n * @param element the element to compact.\n * @param options the compaction options.\n *\n * @return the compacted value.\n */\nProcessor.prototype.compact = function(\n  activeCtx, activeProperty, element, options) {\n  // recursively compact array\n  if(_isArray(element)) {\n    var rval = [];\n    for(var i = 0; i < element.length; ++i) {\n      // compact, dropping any null values\n      var compacted = this.compact(\n        activeCtx, activeProperty, element[i], options);\n      if(compacted !== null) {\n        rval.push(compacted);\n      }\n    }\n    if(options.compactArrays && rval.length === 1) {\n      // use single element if no container is specified\n      var container = jsonld.getContextValue(\n        activeCtx, activeProperty, '@container');\n      if(container === null) {\n        rval = rval[0];\n      }\n    }\n    return rval;\n  }\n\n  // recursively compact object\n  if(_isObject(element)) {\n    if(options.link && '@id' in element && element['@id'] in options.link) {\n      // check for a linked element to reuse\n      var linked = options.link[element['@id']];\n      for(var i = 0; i < linked.length; ++i) {\n        if(linked[i].expanded === element) {\n          return linked[i].compacted;\n        }\n      }\n    }\n\n    // do value compaction on @values and subject references\n    if(_isValue(element) || _isSubjectReference(element)) {\n      var rval = _compactValue(activeCtx, activeProperty, element);\n      if(options.link && _isSubjectReference(element)) {\n        // store linked element\n        if(!(element['@id'] in options.link)) {\n          options.link[element['@id']] = [];\n        }\n        options.link[element['@id']].push({expanded: element, compacted: rval});\n      }\n      return rval;\n    }\n\n    // FIXME: avoid misuse of active property as an expanded property?\n    var insideReverse = (activeProperty === '@reverse');\n\n    var rval = {};\n\n    if(options.link && '@id' in element) {\n      // store linked element\n      if(!(element['@id'] in options.link)) {\n        options.link[element['@id']] = [];\n      }\n      options.link[element['@id']].push({expanded: element, compacted: rval});\n    }\n\n    // process element keys in order\n    var keys = Object.keys(element).sort();\n    for(var ki = 0; ki < keys.length; ++ki) {\n      var expandedProperty = keys[ki];\n      var expandedValue = element[expandedProperty];\n\n      // compact @id and @type(s)\n      if(expandedProperty === '@id' || expandedProperty === '@type') {\n        var compactedValue;\n\n        // compact single @id\n        if(_isString(expandedValue)) {\n          compactedValue = _compactIri(\n            activeCtx, expandedValue, null,\n            {vocab: (expandedProperty === '@type')});\n        } else {\n          // expanded value must be a @type array\n          compactedValue = [];\n          for(var vi = 0; vi < expandedValue.length; ++vi) {\n            compactedValue.push(_compactIri(\n              activeCtx, expandedValue[vi], null, {vocab: true}));\n          }\n        }\n\n        // use keyword alias and add value\n        var alias = _compactIri(activeCtx, expandedProperty);\n        var isArray = (_isArray(compactedValue) && expandedValue.length === 0);\n        jsonld.addValue(\n          rval, alias, compactedValue, {propertyIsArray: isArray});\n        continue;\n      }\n\n      // handle @reverse\n      if(expandedProperty === '@reverse') {\n        // recursively compact expanded value\n        var compactedValue = this.compact(\n          activeCtx, '@reverse', expandedValue, options);\n\n        // handle double-reversed properties\n        for(var compactedProperty in compactedValue) {\n          if(activeCtx.mappings[compactedProperty] &&\n            activeCtx.mappings[compactedProperty].reverse) {\n            var value = compactedValue[compactedProperty];\n            var container = jsonld.getContextValue(\n              activeCtx, compactedProperty, '@container');\n            var useArray = (container === '@set' || !options.compactArrays);\n            jsonld.addValue(\n              rval, compactedProperty, value, {propertyIsArray: useArray});\n            delete compactedValue[compactedProperty];\n          }\n        }\n\n        if(Object.keys(compactedValue).length > 0) {\n          // use keyword alias and add value\n          var alias = _compactIri(activeCtx, expandedProperty);\n          jsonld.addValue(rval, alias, compactedValue);\n        }\n\n        continue;\n      }\n\n      // handle @index property\n      if(expandedProperty === '@index') {\n        // drop @index if inside an @index container\n        var container = jsonld.getContextValue(\n          activeCtx, activeProperty, '@container');\n        if(container === '@index') {\n          continue;\n        }\n\n        // use keyword alias and add value\n        var alias = _compactIri(activeCtx, expandedProperty);\n        jsonld.addValue(rval, alias, expandedValue);\n        continue;\n      }\n\n      // skip array processing for keywords that aren't @graph or @list\n      if(expandedProperty !== '@graph' && expandedProperty !== '@list' &&\n        _isKeyword(expandedProperty)) {\n        // use keyword alias and add value as is\n        var alias = _compactIri(activeCtx, expandedProperty);\n        jsonld.addValue(rval, alias, expandedValue);\n        continue;\n      }\n\n      // Note: expanded value must be an array due to expansion algorithm.\n\n      // preserve empty arrays\n      if(expandedValue.length === 0) {\n        var itemActiveProperty = _compactIri(\n          activeCtx, expandedProperty, expandedValue, {vocab: true},\n          insideReverse);\n        jsonld.addValue(\n          rval, itemActiveProperty, expandedValue, {propertyIsArray: true});\n      }\n\n      // recusively process array values\n      for(var vi = 0; vi < expandedValue.length; ++vi) {\n        var expandedItem = expandedValue[vi];\n\n        // compact property and get container type\n        var itemActiveProperty = _compactIri(\n          activeCtx, expandedProperty, expandedItem, {vocab: true},\n          insideReverse);\n        var container = jsonld.getContextValue(\n          activeCtx, itemActiveProperty, '@container');\n\n        // get @list value if appropriate\n        var isList = _isList(expandedItem);\n        var list = null;\n        if(isList) {\n          list = expandedItem['@list'];\n        }\n\n        // recursively compact expanded item\n        var compactedItem = this.compact(\n          activeCtx, itemActiveProperty, isList ? list : expandedItem, options);\n\n        // handle @list\n        if(isList) {\n          // ensure @list value is an array\n          if(!_isArray(compactedItem)) {\n            compactedItem = [compactedItem];\n          }\n\n          if(container !== '@list') {\n            // wrap using @list alias\n            var wrapper = {};\n            wrapper[_compactIri(activeCtx, '@list')] = compactedItem;\n            compactedItem = wrapper;\n\n            // include @index from expanded @list, if any\n            if('@index' in expandedItem) {\n              compactedItem[_compactIri(activeCtx, '@index')] =\n                expandedItem['@index'];\n            }\n          } else if(itemActiveProperty in rval) {\n            // can't use @list container for more than 1 list\n            throw new JsonLdError(\n              'JSON-LD compact error; property has a \"@list\" @container ' +\n              'rule but there is more than a single @list that matches ' +\n              'the compacted term in the document. Compaction might mix ' +\n              'unwanted items into the list.',\n              'jsonld.SyntaxError', {code: 'compaction to list of lists'});\n          }\n        }\n\n        // handle language and index maps\n        if(container === '@language' || container === '@index') {\n          // get or create the map object\n          var mapObject;\n          if(itemActiveProperty in rval) {\n            mapObject = rval[itemActiveProperty];\n          } else {\n            rval[itemActiveProperty] = mapObject = {};\n          }\n\n          // if container is a language map, simplify compacted value to\n          // a simple string\n          if(container === '@language' && _isValue(compactedItem)) {\n            compactedItem = compactedItem['@value'];\n          }\n\n          // add compact value to map object using key from expanded value\n          // based on the container type\n          jsonld.addValue(mapObject, expandedItem[container], compactedItem);\n        } else {\n          // use an array if: compactArrays flag is false,\n          // @container is @set or @list , value is an empty\n          // array, or key is @graph\n          var isArray = (!options.compactArrays || container === '@set' ||\n            container === '@list' ||\n            (_isArray(compactedItem) && compactedItem.length === 0) ||\n            expandedProperty === '@list' || expandedProperty === '@graph');\n\n          // add compact value\n          jsonld.addValue(\n            rval, itemActiveProperty, compactedItem,\n            {propertyIsArray: isArray});\n        }\n      }\n    }\n\n    return rval;\n  }\n\n  // only primitives remain which are already compact\n  return element;\n};\n\n/**\n * Recursively expands an element using the given context. Any context in\n * the element will be removed. All context URLs must have been retrieved\n * before calling this method.\n *\n * @param activeCtx the context to use.\n * @param activeProperty the property for the element, null for none.\n * @param element the element to expand.\n * @param options the expansion options.\n * @param insideList true if the element is a list, false if not.\n *\n * @return the expanded value.\n */\nProcessor.prototype.expand = function(\n  activeCtx, activeProperty, element, options, insideList) {\n  var self = this;\n\n  // nothing to expand\n  if(element === null || element === undefined) {\n    return null;\n  }\n\n  if(!_isArray(element) && !_isObject(element)) {\n    // drop free-floating scalars that are not in lists\n    if(!insideList && (activeProperty === null ||\n      _expandIri(activeCtx, activeProperty, {vocab: true}) === '@graph')) {\n      return null;\n    }\n\n    // expand element according to value expansion rules\n    return _expandValue(activeCtx, activeProperty, element);\n  }\n\n  // recursively expand array\n  if(_isArray(element)) {\n    var rval = [];\n    var container = jsonld.getContextValue(\n      activeCtx, activeProperty, '@container');\n    insideList = insideList || container === '@list';\n    for(var i = 0; i < element.length; ++i) {\n      // expand element\n      var e = self.expand(activeCtx, activeProperty, element[i], options);\n      if(insideList && (_isArray(e) || _isList(e))) {\n        // lists of lists are illegal\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; lists of lists are not permitted.',\n          'jsonld.SyntaxError', {code: 'list of lists'});\n      }\n      // drop null values\n      if(e !== null) {\n        if(_isArray(e)) {\n          rval = rval.concat(e);\n        } else {\n          rval.push(e);\n        }\n      }\n    }\n    return rval;\n  }\n\n  // recursively expand object:\n\n  // if element has a context, process it\n  if('@context' in element) {\n    activeCtx = self.processContext(activeCtx, element['@context'], options);\n  }\n\n  // expand the active property\n  var expandedActiveProperty = _expandIri(\n    activeCtx, activeProperty, {vocab: true});\n\n  var rval = {};\n  var keys = Object.keys(element).sort();\n  for(var ki = 0; ki < keys.length; ++ki) {\n    var key = keys[ki];\n    var value = element[key];\n    var expandedValue;\n\n    // skip @context\n    if(key === '@context') {\n      continue;\n    }\n\n    // expand property\n    var expandedProperty = _expandIri(activeCtx, key, {vocab: true});\n\n    // drop non-absolute IRI keys that aren't keywords\n    if(expandedProperty === null ||\n      !(_isAbsoluteIri(expandedProperty) || _isKeyword(expandedProperty))) {\n      continue;\n    }\n\n    if(_isKeyword(expandedProperty)) {\n      if(expandedActiveProperty === '@reverse') {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; a keyword cannot be used as a @reverse ' +\n          'property.', 'jsonld.SyntaxError',\n          {code: 'invalid reverse property map', value: value});\n      }\n      if(expandedProperty in rval) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; colliding keywords detected.',\n          'jsonld.SyntaxError',\n          {code: 'colliding keywords', keyword: expandedProperty});\n      }\n    }\n\n    // syntax error if @id is not a string\n    if(expandedProperty === '@id' && !_isString(value)) {\n      if(!options.isFrame) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; \"@id\" value must a string.',\n          'jsonld.SyntaxError', {code: 'invalid @id value', value: value});\n      }\n      if(!_isObject(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; \"@id\" value must be a string or an ' +\n          'object.', 'jsonld.SyntaxError',\n          {code: 'invalid @id value', value: value});\n      }\n    }\n\n    if(expandedProperty === '@type') {\n      _validateTypeValue(value);\n    }\n\n    // @graph must be an array or an object\n    if(expandedProperty === '@graph' &&\n      !(_isObject(value) || _isArray(value))) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; \"@graph\" value must not be an ' +\n        'object or an array.',\n        'jsonld.SyntaxError', {code: 'invalid @graph value', value: value});\n    }\n\n    // @value must not be an object or an array\n    if(expandedProperty === '@value' &&\n      (_isObject(value) || _isArray(value))) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; \"@value\" value must not be an ' +\n        'object or an array.',\n        'jsonld.SyntaxError',\n        {code: 'invalid value object value', value: value});\n    }\n\n    // @language must be a string\n    if(expandedProperty === '@language') {\n      if(value === null) {\n        // drop null @language values, they expand as if they didn't exist\n        continue;\n      }\n      if(!_isString(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; \"@language\" value must be a string.',\n          'jsonld.SyntaxError',\n          {code: 'invalid language-tagged string', value: value});\n      }\n      // ensure language value is lowercase\n      value = value.toLowerCase();\n    }\n\n    // @index must be a string\n    if(expandedProperty === '@index') {\n      if(!_isString(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; \"@index\" value must be a string.',\n          'jsonld.SyntaxError',\n          {code: 'invalid @index value', value: value});\n      }\n    }\n\n    // @reverse must be an object\n    if(expandedProperty === '@reverse') {\n      if(!_isObject(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; \"@reverse\" value must be an object.',\n          'jsonld.SyntaxError', {code: 'invalid @reverse value', value: value});\n      }\n\n      expandedValue = self.expand(activeCtx, '@reverse', value, options);\n\n      // properties double-reversed\n      if('@reverse' in expandedValue) {\n        for(var property in expandedValue['@reverse']) {\n          jsonld.addValue(\n            rval, property, expandedValue['@reverse'][property],\n            {propertyIsArray: true});\n        }\n      }\n\n      // FIXME: can this be merged with code below to simplify?\n      // merge in all reversed properties\n      var reverseMap = rval['@reverse'] || null;\n      for(var property in expandedValue) {\n        if(property === '@reverse') {\n          continue;\n        }\n        if(reverseMap === null) {\n          reverseMap = rval['@reverse'] = {};\n        }\n        jsonld.addValue(reverseMap, property, [], {propertyIsArray: true});\n        var items = expandedValue[property];\n        for(var ii = 0; ii < items.length; ++ii) {\n          var item = items[ii];\n          if(_isValue(item) || _isList(item)) {\n            throw new JsonLdError(\n              'Invalid JSON-LD syntax; \"@reverse\" value must not be a ' +\n              '@value or an @list.', 'jsonld.SyntaxError',\n              {code: 'invalid reverse property value', value: expandedValue});\n          }\n          jsonld.addValue(\n            reverseMap, property, item, {propertyIsArray: true});\n        }\n      }\n\n      continue;\n    }\n\n    var container = jsonld.getContextValue(activeCtx, key, '@container');\n\n    if(container === '@language' && _isObject(value)) {\n      // handle language map container (skip if value is not an object)\n      expandedValue = _expandLanguageMap(value);\n    } else if(container === '@index' && _isObject(value)) {\n      // handle index container (skip if value is not an object)\n      expandedValue = (function _expandIndexMap(activeProperty) {\n        var rval = [];\n        var keys = Object.keys(value).sort();\n        for(var ki = 0; ki < keys.length; ++ki) {\n          var key = keys[ki];\n          var val = value[key];\n          if(!_isArray(val)) {\n            val = [val];\n          }\n          val = self.expand(activeCtx, activeProperty, val, options, false);\n          for(var vi = 0; vi < val.length; ++vi) {\n            var item = val[vi];\n            if(!('@index' in item)) {\n              item['@index'] = key;\n            }\n            rval.push(item);\n          }\n        }\n        return rval;\n      })(key);\n    } else {\n      // recurse into @list or @set\n      var isList = (expandedProperty === '@list');\n      if(isList || expandedProperty === '@set') {\n        var nextActiveProperty = activeProperty;\n        if(isList && expandedActiveProperty === '@graph') {\n          nextActiveProperty = null;\n        }\n        expandedValue = self.expand(\n          activeCtx, nextActiveProperty, value, options, isList);\n        if(isList && _isList(expandedValue)) {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; lists of lists are not permitted.',\n            'jsonld.SyntaxError', {code: 'list of lists'});\n        }\n      } else {\n        // recursively expand value with key as new active property\n        expandedValue = self.expand(activeCtx, key, value, options, false);\n      }\n    }\n\n    // drop null values if property is not @value\n    if(expandedValue === null && expandedProperty !== '@value') {\n      continue;\n    }\n\n    // convert expanded value to @list if container specifies it\n    if(expandedProperty !== '@list' && !_isList(expandedValue) &&\n      container === '@list') {\n      // ensure expanded value is an array\n      expandedValue = (_isArray(expandedValue) ?\n        expandedValue : [expandedValue]);\n      expandedValue = {'@list': expandedValue};\n    }\n\n    // FIXME: can this be merged with code above to simplify?\n    // merge in reverse properties\n    if(activeCtx.mappings[key] && activeCtx.mappings[key].reverse) {\n      var reverseMap = rval['@reverse'] = rval['@reverse'] || {};\n      if(!_isArray(expandedValue)) {\n        expandedValue = [expandedValue];\n      }\n      for(var ii = 0; ii < expandedValue.length; ++ii) {\n        var item = expandedValue[ii];\n        if(_isValue(item) || _isList(item)) {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; \"@reverse\" value must not be a ' +\n            '@value or an @list.', 'jsonld.SyntaxError',\n            {code: 'invalid reverse property value', value: expandedValue});\n        }\n        jsonld.addValue(\n          reverseMap, expandedProperty, item, {propertyIsArray: true});\n      }\n      continue;\n    }\n\n    // add value for property\n    // use an array except for certain keywords\n    var useArray =\n      ['@index', '@id', '@type', '@value', '@language'].indexOf(\n        expandedProperty) === -1;\n    jsonld.addValue(\n      rval, expandedProperty, expandedValue, {propertyIsArray: useArray});\n  }\n\n  // get property count on expanded output\n  keys = Object.keys(rval);\n  var count = keys.length;\n\n  if('@value' in rval) {\n    // @value must only have @language or @type\n    if('@type' in rval && '@language' in rval) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; an element containing \"@value\" may not ' +\n        'contain both \"@type\" and \"@language\".',\n        'jsonld.SyntaxError', {code: 'invalid value object', element: rval});\n    }\n    var validCount = count - 1;\n    if('@type' in rval) {\n      validCount -= 1;\n    }\n    if('@index' in rval) {\n      validCount -= 1;\n    }\n    if('@language' in rval) {\n      validCount -= 1;\n    }\n    if(validCount !== 0) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; an element containing \"@value\" may only ' +\n        'have an \"@index\" property and at most one other property ' +\n        'which can be \"@type\" or \"@language\".',\n        'jsonld.SyntaxError', {code: 'invalid value object', element: rval});\n    }\n    // drop null @values\n    if(rval['@value'] === null) {\n      rval = null;\n    } else if('@language' in rval && !_isString(rval['@value'])) {\n      // if @language is present, @value must be a string\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; only strings may be language-tagged.',\n        'jsonld.SyntaxError',\n        {code: 'invalid language-tagged value', element: rval});\n    } else if('@type' in rval && (!_isAbsoluteIri(rval['@type']) ||\n      rval['@type'].indexOf('_:') === 0)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; an element containing \"@value\" and \"@type\" ' +\n        'must have an absolute IRI for the value of \"@type\".',\n        'jsonld.SyntaxError', {code: 'invalid typed value', element: rval});\n    }\n  } else if('@type' in rval && !_isArray(rval['@type'])) {\n    // convert @type to an array\n    rval['@type'] = [rval['@type']];\n  } else if('@set' in rval || '@list' in rval) {\n    // handle @set and @list\n    if(count > 1 && !(count === 2 && '@index' in rval)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; if an element has the property \"@set\" ' +\n        'or \"@list\", then it can have at most one other property that is ' +\n        '\"@index\".', 'jsonld.SyntaxError',\n        {code: 'invalid set or list object', element: rval});\n    }\n    // optimize away @set\n    if('@set' in rval) {\n      rval = rval['@set'];\n      keys = Object.keys(rval);\n      count = keys.length;\n    }\n  } else if(count === 1 && '@language' in rval) {\n    // drop objects with only @language\n    rval = null;\n  }\n\n  // drop certain top-level objects that do not occur in lists\n  if(_isObject(rval) &&\n    !options.keepFreeFloatingNodes && !insideList &&\n    (activeProperty === null || expandedActiveProperty === '@graph')) {\n    // drop empty object, top-level @value/@list, or object with only @id\n    if(count === 0 || '@value' in rval || '@list' in rval ||\n      (count === 1 && '@id' in rval)) {\n      rval = null;\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Creates a JSON-LD node map (node ID => node).\n *\n * @param input the expanded JSON-LD to create a node map of.\n * @param [options] the options to use:\n *          [issuer] a jsonld.IdentifierIssuer to use to label blank nodes.\n *          [namer] (deprecated).\n *\n * @return the node map.\n */\nProcessor.prototype.createNodeMap = function(input, options) {\n  options = options || {};\n\n  // produce a map of all subjects and name each bnode\n  var issuer = options.namer || options.issuer || new IdentifierIssuer('_:b');\n  var graphs = {'@default': {}};\n  _createNodeMap(input, graphs, '@default', issuer);\n\n  // add all non-default graphs to default graph\n  return _mergeNodeMaps(graphs);\n};\n\n/**\n * Performs JSON-LD flattening.\n *\n * @param input the expanded JSON-LD to flatten.\n *\n * @return the flattened output.\n */\nProcessor.prototype.flatten = function(input) {\n  var defaultGraph = this.createNodeMap(input);\n\n  // produce flattened output\n  var flattened = [];\n  var keys = Object.keys(defaultGraph).sort();\n  for(var ki = 0; ki < keys.length; ++ki) {\n    var node = defaultGraph[keys[ki]];\n    // only add full subjects to top-level\n    if(!_isSubjectReference(node)) {\n      flattened.push(node);\n    }\n  }\n  return flattened;\n};\n\n/**\n * Performs JSON-LD framing.\n *\n * @param input the expanded JSON-LD to frame.\n * @param frame the expanded JSON-LD frame to use.\n * @param options the framing options.\n *\n * @return the framed output.\n */\nProcessor.prototype.frame = function(input, frame, options) {\n  // create framing state\n  var state = {\n    options: options,\n    graphs: {'@default': {}, '@merged': {}},\n    subjectStack: [],\n    link: {}\n  };\n\n  // produce a map of all graphs and name each bnode\n  // FIXME: currently uses subjects from @merged graph only\n  var issuer = new IdentifierIssuer('_:b');\n  _createNodeMap(input, state.graphs, '@merged', issuer);\n  state.subjects = state.graphs['@merged'];\n\n  // frame the subjects\n  var framed = [];\n  _frame(state, Object.keys(state.subjects).sort(), frame, framed, null);\n  return framed;\n};\n\n/**\n * Performs normalization on the given RDF dataset.\n *\n * @param dataset the RDF dataset to normalize.\n * @param options the normalization options.\n * @param callback(err, normalized) called once the operation completes.\n */\nProcessor.prototype.normalize = function(dataset, options, callback) {\n  if(options.algorithm === 'URDNA2015') {\n    return new URDNA2015(options).main(dataset, callback);\n  }\n  if(options.algorithm === 'URGNA2012') {\n    return new URGNA2012(options).main(dataset, callback);\n  }\n  callback(new Error(\n    'Invalid RDF Dataset Normalization algorithm: ' + options.algorithm));\n};\n\n/**\n * Converts an RDF dataset to JSON-LD.\n *\n * @param dataset the RDF dataset.\n * @param options the RDF serialization options.\n * @param callback(err, output) called once the operation completes.\n */\nProcessor.prototype.fromRDF = function(dataset, options, callback) {\n  var defaultGraph = {};\n  var graphMap = {'@default': defaultGraph};\n  var referencedOnce = {};\n\n  for(var name in dataset) {\n    var graph = dataset[name];\n    if(!(name in graphMap)) {\n      graphMap[name] = {};\n    }\n    if(name !== '@default' && !(name in defaultGraph)) {\n      defaultGraph[name] = {'@id': name};\n    }\n    var nodeMap = graphMap[name];\n    for(var ti = 0; ti < graph.length; ++ti) {\n      var triple = graph[ti];\n\n      // get subject, predicate, object\n      var s = triple.subject.value;\n      var p = triple.predicate.value;\n      var o = triple.object;\n\n      if(!(s in nodeMap)) {\n        nodeMap[s] = {'@id': s};\n      }\n      var node = nodeMap[s];\n\n      var objectIsId = (o.type === 'IRI' || o.type === 'blank node');\n      if(objectIsId && !(o.value in nodeMap)) {\n        nodeMap[o.value] = {'@id': o.value};\n      }\n\n      if(p === RDF_TYPE && !options.useRdfType && objectIsId) {\n        jsonld.addValue(node, '@type', o.value, {propertyIsArray: true});\n        continue;\n      }\n\n      var value = _RDFToObject(o, options.useNativeTypes);\n      jsonld.addValue(node, p, value, {propertyIsArray: true});\n\n      // object may be an RDF list/partial list node but we can't know easily\n      // until all triples are read\n      if(objectIsId) {\n        if(o.value === RDF_NIL) {\n          // track rdf:nil uniquely per graph\n          var object = nodeMap[o.value];\n          if(!('usages' in object)) {\n            object.usages = [];\n          }\n          object.usages.push({\n            node: node,\n            property: p,\n            value: value\n          });\n        } else if(o.value in referencedOnce) {\n          // object referenced more than once\n          referencedOnce[o.value] = false;\n        } else {\n          // keep track of single reference\n          referencedOnce[o.value] = {\n            node: node,\n            property: p,\n            value: value\n          };\n        }\n      }\n    }\n  }\n\n  // convert linked lists to @list arrays\n  for(var name in graphMap) {\n    var graphObject = graphMap[name];\n\n    // no @lists to be converted, continue\n    if(!(RDF_NIL in graphObject)) {\n      continue;\n    }\n\n    // iterate backwards through each RDF list\n    var nil = graphObject[RDF_NIL];\n    for(var i = 0; i < nil.usages.length; ++i) {\n      var usage = nil.usages[i];\n      var node = usage.node;\n      var property = usage.property;\n      var head = usage.value;\n      var list = [];\n      var listNodes = [];\n\n      // ensure node is a well-formed list node; it must:\n      // 1. Be referenced only once.\n      // 2. Have an array for rdf:first that has 1 item.\n      // 3. Have an array for rdf:rest that has 1 item.\n      // 4. Have no keys other than: @id, rdf:first, rdf:rest, and,\n      //   optionally, @type where the value is rdf:List.\n      var nodeKeyCount = Object.keys(node).length;\n      while(property === RDF_REST &&\n        _isObject(referencedOnce[node['@id']]) &&\n        _isArray(node[RDF_FIRST]) && node[RDF_FIRST].length === 1 &&\n        _isArray(node[RDF_REST]) && node[RDF_REST].length === 1 &&\n        (nodeKeyCount === 3 || (nodeKeyCount === 4 && _isArray(node['@type']) &&\n          node['@type'].length === 1 && node['@type'][0] === RDF_LIST))) {\n        list.push(node[RDF_FIRST][0]);\n        listNodes.push(node['@id']);\n\n        // get next node, moving backwards through list\n        usage = referencedOnce[node['@id']];\n        node = usage.node;\n        property = usage.property;\n        head = usage.value;\n        nodeKeyCount = Object.keys(node).length;\n\n        // if node is not a blank node, then list head found\n        if(node['@id'].indexOf('_:') !== 0) {\n          break;\n        }\n      }\n\n      // the list is nested in another list\n      if(property === RDF_FIRST) {\n        // empty list\n        if(node['@id'] === RDF_NIL) {\n          // can't convert rdf:nil to a @list object because it would\n          // result in a list of lists which isn't supported\n          continue;\n        }\n\n        // preserve list head\n        head = graphObject[head['@id']][RDF_REST][0];\n        list.pop();\n        listNodes.pop();\n      }\n\n      // transform list into @list object\n      delete head['@id'];\n      head['@list'] = list.reverse();\n      for(var j = 0; j < listNodes.length; ++j) {\n        delete graphObject[listNodes[j]];\n      }\n    }\n\n    delete nil.usages;\n  }\n\n  var result = [];\n  var subjects = Object.keys(defaultGraph).sort();\n  for(var i = 0; i < subjects.length; ++i) {\n    var subject = subjects[i];\n    var node = defaultGraph[subject];\n    if(subject in graphMap) {\n      var graph = node['@graph'] = [];\n      var graphObject = graphMap[subject];\n      var subjects_ = Object.keys(graphObject).sort();\n      for(var si = 0; si < subjects_.length; ++si) {\n        var node_ = graphObject[subjects_[si]];\n        // only add full subjects to top-level\n        if(!_isSubjectReference(node_)) {\n          graph.push(node_);\n        }\n      }\n    }\n    // only add full subjects to top-level\n    if(!_isSubjectReference(node)) {\n      result.push(node);\n    }\n  }\n\n  callback(null, result);\n};\n\n/**\n * Outputs an RDF dataset for the expanded JSON-LD input.\n *\n * @param input the expanded JSON-LD input.\n * @param options the RDF serialization options.\n *\n * @return the RDF dataset.\n */\nProcessor.prototype.toRDF = function(input, options) {\n  // create node map for default graph (and any named graphs)\n  var issuer = new IdentifierIssuer('_:b');\n  var nodeMap = {'@default': {}};\n  _createNodeMap(input, nodeMap, '@default', issuer);\n\n  var dataset = {};\n  var graphNames = Object.keys(nodeMap).sort();\n  for(var i = 0; i < graphNames.length; ++i) {\n    var graphName = graphNames[i];\n    // skip relative IRIs\n    if(graphName === '@default' || _isAbsoluteIri(graphName)) {\n      dataset[graphName] = _graphToRDF(nodeMap[graphName], issuer, options);\n    }\n  }\n  return dataset;\n};\n\n/**\n * Processes a local context and returns a new active context.\n *\n * @param activeCtx the current active context.\n * @param localCtx the local context to process.\n * @param options the context processing options.\n *\n * @return the new active context.\n */\nProcessor.prototype.processContext = function(activeCtx, localCtx, options) {\n  // normalize local context to an array of @context objects\n  if(_isObject(localCtx) && '@context' in localCtx &&\n    _isArray(localCtx['@context'])) {\n    localCtx = localCtx['@context'];\n  }\n  var ctxs = _isArray(localCtx) ? localCtx : [localCtx];\n\n  // no contexts in array, clone existing context\n  if(ctxs.length === 0) {\n    return activeCtx.clone();\n  }\n\n  // process each context in order, update active context\n  // on each iteration to ensure proper caching\n  var rval = activeCtx;\n  for(var i = 0; i < ctxs.length; ++i) {\n    var ctx = ctxs[i];\n\n    // reset to initial context\n    if(ctx === null) {\n      rval = activeCtx = _getInitialContext(options);\n      continue;\n    }\n\n    // dereference @context key if present\n    if(_isObject(ctx) && '@context' in ctx) {\n      ctx = ctx['@context'];\n    }\n\n    // context must be an object by now, all URLs retrieved before this call\n    if(!_isObject(ctx)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context must be an object.',\n        'jsonld.SyntaxError', {code: 'invalid local context', context: ctx});\n    }\n\n    // get context from cache if available\n    if(jsonld.cache.activeCtx) {\n      var cached = jsonld.cache.activeCtx.get(activeCtx, ctx);\n      if(cached) {\n        rval = activeCtx = cached;\n        continue;\n      }\n    }\n\n    // update active context and clone new one before updating\n    activeCtx = rval;\n    rval = rval.clone();\n\n    // define context mappings for keys in local context\n    var defined = {};\n\n    // handle @base\n    if('@base' in ctx) {\n      var base = ctx['@base'];\n\n      // clear base\n      if(base === null) {\n        base = null;\n      } else if(!_isString(base)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; the value of \"@base\" in a ' +\n          '@context must be a string or null.',\n          'jsonld.SyntaxError', {code: 'invalid base IRI', context: ctx});\n      } else if(base !== '' && !_isAbsoluteIri(base)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; the value of \"@base\" in a ' +\n          '@context must be an absolute IRI or the empty string.',\n          'jsonld.SyntaxError', {code: 'invalid base IRI', context: ctx});\n      }\n\n      if(base !== null) {\n        base = jsonld.url.parse(base || '');\n      }\n      rval['@base'] = base;\n      defined['@base'] = true;\n    }\n\n    // handle @vocab\n    if('@vocab' in ctx) {\n      var value = ctx['@vocab'];\n      if(value === null) {\n        delete rval['@vocab'];\n      } else if(!_isString(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; the value of \"@vocab\" in a ' +\n          '@context must be a string or null.',\n          'jsonld.SyntaxError', {code: 'invalid vocab mapping', context: ctx});\n      } else if(!_isAbsoluteIri(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; the value of \"@vocab\" in a ' +\n          '@context must be an absolute IRI.',\n          'jsonld.SyntaxError', {code: 'invalid vocab mapping', context: ctx});\n      } else {\n        rval['@vocab'] = value;\n      }\n      defined['@vocab'] = true;\n    }\n\n    // handle @language\n    if('@language' in ctx) {\n      var value = ctx['@language'];\n      if(value === null) {\n        delete rval['@language'];\n      } else if(!_isString(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; the value of \"@language\" in a ' +\n          '@context must be a string or null.',\n          'jsonld.SyntaxError',\n          {code: 'invalid default language', context: ctx});\n      } else {\n        rval['@language'] = value.toLowerCase();\n      }\n      defined['@language'] = true;\n    }\n\n    // process all other keys\n    for(var key in ctx) {\n      _createTermDefinition(rval, ctx, key, defined);\n    }\n\n    // cache result\n    if(jsonld.cache.activeCtx) {\n      jsonld.cache.activeCtx.set(activeCtx, ctx, rval);\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Expands a language map.\n *\n * @param languageMap the language map to expand.\n *\n * @return the expanded language map.\n */\nfunction _expandLanguageMap(languageMap) {\n  var rval = [];\n  var keys = Object.keys(languageMap).sort();\n  for(var ki = 0; ki < keys.length; ++ki) {\n    var key = keys[ki];\n    var val = languageMap[key];\n    if(!_isArray(val)) {\n      val = [val];\n    }\n    for(var vi = 0; vi < val.length; ++vi) {\n      var item = val[vi];\n      if(item === null) {\n          // null values are allowed (8.5) but ignored (3.1)\n          continue;\n      }\n      if(!_isString(item)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; language map values must be strings.',\n          'jsonld.SyntaxError',\n          {code: 'invalid language map value', languageMap: languageMap});\n      }\n      rval.push({\n        '@value': item,\n        '@language': key.toLowerCase()\n      });\n    }\n  }\n  return rval;\n}\n\n/**\n * Labels the blank nodes in the given value using the given IdentifierIssuer.\n *\n * @param issuer the IdentifierIssuer to use.\n * @param element the element with blank nodes to rename.\n *\n * @return the element.\n */\nfunction _labelBlankNodes(issuer, element) {\n  if(_isArray(element)) {\n    for(var i = 0; i < element.length; ++i) {\n      element[i] = _labelBlankNodes(issuer, element[i]);\n    }\n  } else if(_isList(element)) {\n    element['@list'] = _labelBlankNodes(issuer, element['@list']);\n  } else if(_isObject(element)) {\n    // relabel blank node\n    if(_isBlankNode(element)) {\n      element['@id'] = issuer.getId(element['@id']);\n    }\n\n    // recursively apply to all keys\n    var keys = Object.keys(element).sort();\n    for(var ki = 0; ki < keys.length; ++ki) {\n      var key = keys[ki];\n      if(key !== '@id') {\n        element[key] = _labelBlankNodes(issuer, element[key]);\n      }\n    }\n  }\n\n  return element;\n}\n\n/**\n * Expands the given value by using the coercion and keyword rules in the\n * given context.\n *\n * @param activeCtx the active context to use.\n * @param activeProperty the active property the value is associated with.\n * @param value the value to expand.\n *\n * @return the expanded value.\n */\nfunction _expandValue(activeCtx, activeProperty, value) {\n  // nothing to expand\n  if(value === null || value === undefined) {\n    return null;\n  }\n\n  // special-case expand @id and @type (skips '@id' expansion)\n  var expandedProperty = _expandIri(activeCtx, activeProperty, {vocab: true});\n  if(expandedProperty === '@id') {\n    return _expandIri(activeCtx, value, {base: true});\n  } else if(expandedProperty === '@type') {\n    return _expandIri(activeCtx, value, {vocab: true, base: true});\n  }\n\n  // get type definition from context\n  var type = jsonld.getContextValue(activeCtx, activeProperty, '@type');\n\n  // do @id expansion (automatic for @graph)\n  if(type === '@id' || (expandedProperty === '@graph' && _isString(value))) {\n    return {'@id': _expandIri(activeCtx, value, {base: true})};\n  }\n  // do @id expansion w/vocab\n  if(type === '@vocab') {\n    return {'@id': _expandIri(activeCtx, value, {vocab: true, base: true})};\n  }\n\n  // do not expand keyword values\n  if(_isKeyword(expandedProperty)) {\n    return value;\n  }\n\n  var rval = {};\n\n  if(type !== null) {\n    // other type\n    rval['@type'] = type;\n  } else if(_isString(value)) {\n    // check for language tagging for strings\n    var language = jsonld.getContextValue(\n      activeCtx, activeProperty, '@language');\n    if(language !== null) {\n      rval['@language'] = language;\n    }\n  }\n  // do conversion of values that aren't basic JSON types to strings\n  if(['boolean', 'number', 'string'].indexOf(typeof value) === -1) {\n    value = value.toString();\n  }\n  rval['@value'] = value;\n\n  return rval;\n}\n\n/**\n * Creates an array of RDF triples for the given graph.\n *\n * @param graph the graph to create RDF triples for.\n * @param issuer a IdentifierIssuer for assigning blank node names.\n * @param options the RDF serialization options.\n *\n * @return the array of RDF triples for the given graph.\n */\nfunction _graphToRDF(graph, issuer, options) {\n  var rval = [];\n\n  var ids = Object.keys(graph).sort();\n  for(var i = 0; i < ids.length; ++i) {\n    var id = ids[i];\n    var node = graph[id];\n    var properties = Object.keys(node).sort();\n    for(var pi = 0; pi < properties.length; ++pi) {\n      var property = properties[pi];\n      var items = node[property];\n      if(property === '@type') {\n        property = RDF_TYPE;\n      } else if(_isKeyword(property)) {\n        continue;\n      }\n\n      for(var ii = 0; ii < items.length; ++ii) {\n        var item = items[ii];\n\n        // RDF subject\n        var subject = {};\n        subject.type = (id.indexOf('_:') === 0) ? 'blank node' : 'IRI';\n        subject.value = id;\n\n        // skip relative IRI subjects\n        if(!_isAbsoluteIri(id)) {\n          continue;\n        }\n\n        // RDF predicate\n        var predicate = {};\n        predicate.type = (property.indexOf('_:') === 0) ? 'blank node' : 'IRI';\n        predicate.value = property;\n\n        // skip relative IRI predicates\n        if(!_isAbsoluteIri(property)) {\n          continue;\n        }\n\n        // skip blank node predicates unless producing generalized RDF\n        if(predicate.type === 'blank node' && !options.produceGeneralizedRdf) {\n          continue;\n        }\n\n        // convert @list to triples\n        if(_isList(item)) {\n          _listToRDF(item['@list'], issuer, subject, predicate, rval);\n        } else {\n          // convert value or node object to triple\n          var object = _objectToRDF(item);\n          // skip null objects (they are relative IRIs)\n          if(object) {\n            rval.push({subject: subject, predicate: predicate, object: object});\n          }\n        }\n      }\n    }\n  }\n\n  return rval;\n}\n\n/**\n * Converts a @list value into linked list of blank node RDF triples\n * (an RDF collection).\n *\n * @param list the @list value.\n * @param issuer a IdentifierIssuer for assigning blank node names.\n * @param subject the subject for the head of the list.\n * @param predicate the predicate for the head of the list.\n * @param triples the array of triples to append to.\n */\nfunction _listToRDF(list, issuer, subject, predicate, triples) {\n  var first = {type: 'IRI', value: RDF_FIRST};\n  var rest = {type: 'IRI', value: RDF_REST};\n  var nil = {type: 'IRI', value: RDF_NIL};\n\n  for(var i = 0; i < list.length; ++i) {\n    var item = list[i];\n\n    var blankNode = {type: 'blank node', value: issuer.getId()};\n    triples.push({subject: subject, predicate: predicate, object: blankNode});\n\n    subject = blankNode;\n    predicate = first;\n    var object = _objectToRDF(item);\n\n    // skip null objects (they are relative IRIs)\n    if(object) {\n      triples.push({subject: subject, predicate: predicate, object: object});\n    }\n\n    predicate = rest;\n  }\n\n  triples.push({subject: subject, predicate: predicate, object: nil});\n}\n\n/**\n * Converts a JSON-LD value object to an RDF literal or a JSON-LD string or\n * node object to an RDF resource.\n *\n * @param item the JSON-LD value or node object.\n *\n * @return the RDF literal or RDF resource.\n */\nfunction _objectToRDF(item) {\n  var object = {};\n\n  // convert value object to RDF\n  if(_isValue(item)) {\n    object.type = 'literal';\n    var value = item['@value'];\n    var datatype = item['@type'] || null;\n\n    // convert to XSD datatypes as appropriate\n    if(_isBoolean(value)) {\n      object.value = value.toString();\n      object.datatype = datatype || XSD_BOOLEAN;\n    } else if(_isDouble(value) || datatype === XSD_DOUBLE) {\n      if(!_isDouble(value)) {\n        value = parseFloat(value);\n      }\n      // canonical double representation\n      object.value = value.toExponential(15).replace(/(\\d)0*e\\+?/, '$1E');\n      object.datatype = datatype || XSD_DOUBLE;\n    } else if(_isNumber(value)) {\n      object.value = value.toFixed(0);\n      object.datatype = datatype || XSD_INTEGER;\n    } else if('@language' in item) {\n      object.value = value;\n      object.datatype = datatype || RDF_LANGSTRING;\n      object.language = item['@language'];\n    } else {\n      object.value = value;\n      object.datatype = datatype || XSD_STRING;\n    }\n  } else {\n    // convert string/node object to RDF\n    var id = _isObject(item) ? item['@id'] : item;\n    object.type = (id.indexOf('_:') === 0) ? 'blank node' : 'IRI';\n    object.value = id;\n  }\n\n  // skip relative IRIs\n  if(object.type === 'IRI' && !_isAbsoluteIri(object.value)) {\n    return null;\n  }\n\n  return object;\n}\n\n/**\n * Converts an RDF triple object to a JSON-LD object.\n *\n * @param o the RDF triple object to convert.\n * @param useNativeTypes true to output native types, false not to.\n *\n * @return the JSON-LD object.\n */\nfunction _RDFToObject(o, useNativeTypes) {\n  // convert IRI/blank node object to JSON-LD\n  if(o.type === 'IRI' || o.type === 'blank node') {\n    return {'@id': o.value};\n  }\n\n  // convert literal to JSON-LD\n  var rval = {'@value': o.value};\n\n  // add language\n  if(o.language) {\n    rval['@language'] = o.language;\n  } else {\n    var type = o.datatype;\n    if(!type) {\n      type = XSD_STRING;\n    }\n    // use native types for certain xsd types\n    if(useNativeTypes) {\n      if(type === XSD_BOOLEAN) {\n        if(rval['@value'] === 'true') {\n          rval['@value'] = true;\n        } else if(rval['@value'] === 'false') {\n          rval['@value'] = false;\n        }\n      } else if(_isNumeric(rval['@value'])) {\n        if(type === XSD_INTEGER) {\n          var i = parseInt(rval['@value'], 10);\n          if(i.toFixed(0) === rval['@value']) {\n            rval['@value'] = i;\n          }\n        } else if(type === XSD_DOUBLE) {\n          rval['@value'] = parseFloat(rval['@value']);\n        }\n      }\n      // do not add native type\n      if([XSD_BOOLEAN, XSD_INTEGER, XSD_DOUBLE, XSD_STRING]\n        .indexOf(type) === -1) {\n        rval['@type'] = type;\n      }\n    } else if(type !== XSD_STRING) {\n      rval['@type'] = type;\n    }\n  }\n\n  return rval;\n}\n\n/**\n * Compares two RDF triples for equality.\n *\n * @param t1 the first triple.\n * @param t2 the second triple.\n *\n * @return true if the triples are the same, false if not.\n */\nfunction _compareRDFTriples(t1, t2) {\n  var attrs = ['subject', 'predicate', 'object'];\n  for(var i = 0; i < attrs.length; ++i) {\n    var attr = attrs[i];\n    if(t1[attr].type !== t2[attr].type || t1[attr].value !== t2[attr].value) {\n      return false;\n    }\n  }\n  if(t1.object.language !== t2.object.language) {\n    return false;\n  }\n  if(t1.object.datatype !== t2.object.datatype) {\n    return false;\n  }\n  return true;\n}\n\n/////////////////////////////// DEFINE URDNA2015 //////////////////////////////\n\nvar URDNA2015 = (function() {\n\nvar POSITIONS = {'subject': 's', 'object': 'o', 'name': 'g'};\n\nvar Normalize = function(options) {\n  options = options || {};\n  this.name = 'URDNA2015';\n  this.options = options;\n  this.blankNodeInfo = {};\n  this.hashToBlankNodes = {};\n  this.canonicalIssuer = new IdentifierIssuer('_:c14n');\n  this.quads = [];\n  this.schedule = {};\n  if('maxCallStackDepth' in options) {\n    this.schedule.MAX_DEPTH = options.maxCallStackDepth;\n  } else {\n    this.schedule.MAX_DEPTH = 500;\n  }\n  if('maxTotalCallStackDepth' in options) {\n    this.schedule.MAX_TOTAL_DEPTH = options.maxCallStackDepth;\n  } else {\n    this.schedule.MAX_TOTAL_DEPTH = 0xFFFFFFFF;\n  }\n  this.schedule.depth = 0;\n  this.schedule.totalDepth = 0;\n  if('timeSlice' in options) {\n    this.schedule.timeSlice = options.timeSlice;\n  } else {\n    // milliseconds\n    this.schedule.timeSlice = 10;\n  }\n};\n\n// do some work in a time slice, but in serial\nNormalize.prototype.doWork = function(fn, callback) {\n  var schedule = this.schedule;\n\n  if(schedule.totalDepth >= schedule.MAX_TOTAL_DEPTH) {\n    return callback(new Error(\n      'Maximum total call stack depth exceeded; normalization aborting.'));\n  }\n\n  (function work() {\n    if(schedule.depth === schedule.MAX_DEPTH) {\n      // stack too deep, run on next tick\n      schedule.depth = 0;\n      schedule.running = false;\n      return jsonld.nextTick(work);\n    }\n\n    // if not yet running, force run\n    var now = new Date().getTime();\n    if(!schedule.running) {\n      schedule.start = new Date().getTime();\n      schedule.deadline = schedule.start + schedule.timeSlice;\n    }\n\n    // TODO: should also include an estimate of expectedWorkTime\n    if(now < schedule.deadline) {\n      schedule.running = true;\n      schedule.depth++;\n      schedule.totalDepth++;\n      return fn(function(err, result) {\n        schedule.depth--;\n        schedule.totalDepth--;\n        callback(err, result);\n      });\n    }\n\n    // not enough time left in this slice, run after letting browser\n    // do some other things\n    schedule.depth = 0;\n    schedule.running = false;\n    jsonld.setImmediate(work);\n  })();\n};\n\n// asynchronously loop\nNormalize.prototype.forEach = function(iterable, fn, callback) {\n  var self = this;\n  var iterator;\n  var idx = 0;\n  var length;\n  if(_isArray(iterable)) {\n    length = iterable.length;\n    iterator = function() {\n      if(idx === length) {\n        return false;\n      }\n      iterator.value = iterable[idx++];\n      iterator.key = idx;\n      return true;\n    };\n  } else {\n    var keys = Object.keys(iterable);\n    length = keys.length;\n    iterator = function() {\n      if(idx === length) {\n        return false;\n      }\n      iterator.key = keys[idx++];\n      iterator.value = iterable[iterator.key];\n      return true;\n    };\n  }\n\n  (function iterate(err, result) {\n    if(err) {\n      return callback(err);\n    }\n    if(iterator()) {\n      return self.doWork(function() {\n        fn(iterator.value, iterator.key, iterate);\n      });\n    }\n    callback();\n  })();\n};\n\n// asynchronous waterfall\nNormalize.prototype.waterfall = function(fns, callback) {\n  var self = this;\n  self.forEach(fns, function(fn, idx, callback) {\n    self.doWork(fn, callback);\n  }, callback);\n};\n\n// asynchronous while\nNormalize.prototype.whilst = function(condition, fn, callback) {\n  var self = this;\n  (function loop(err) {\n    if(err) {\n      return callback(err);\n    }\n    if(!condition()) {\n      return callback();\n    }\n    self.doWork(fn, loop);\n  })();\n};\n\n// 4.4) Normalization Algorithm\nNormalize.prototype.main = function(dataset, callback) {\n  var self = this;\n  self.schedule.start = new Date().getTime();\n  var result;\n\n  // handle invalid output format\n  if(self.options.format) {\n    if(self.options.format !== 'application/nquads') {\n      return callback(new JsonLdError(\n        'Unknown output format.',\n        'jsonld.UnknownFormat', {format: self.options.format}));\n    }\n  }\n\n  // 1) Create the normalization state.\n\n  // Note: Optimize by generating non-normalized blank node map concurrently.\n  var nonNormalized = {};\n\n  self.waterfall([\n    function(callback) {\n      // 2) For every quad in input dataset:\n      self.forEach(dataset, function(triples, graphName, callback) {\n        if(graphName === '@default') {\n          graphName = null;\n        }\n        self.forEach(triples, function(quad, idx, callback) {\n          if(graphName !== null) {\n            if(graphName.indexOf('_:') === 0) {\n              quad.name = {type: 'blank node', value: graphName};\n            } else {\n              quad.name = {type: 'IRI', value: graphName};\n            }\n          }\n          self.quads.push(quad);\n\n          // 2.1) For each blank node that occurs in the quad, add a reference\n          // to the quad using the blank node identifier in the blank node to\n          // quads map, creating a new entry if necessary.\n          self.forEachComponent(quad, function(component) {\n            if(component.type !== 'blank node') {\n              return;\n            }\n            var id = component.value;\n            if(id in self.blankNodeInfo) {\n              self.blankNodeInfo[id].quads.push(quad);\n            } else {\n              nonNormalized[id] = true;\n              self.blankNodeInfo[id] = {quads: [quad]};\n            }\n          });\n          callback();\n        }, callback);\n      }, callback);\n    },\n    function(callback) {\n      // 3) Create a list of non-normalized blank node identifiers\n      // non-normalized identifiers and populate it using the keys from the\n      // blank node to quads map.\n      // Note: We use a map here and it was generated during step 2.\n\n      // 4) Initialize simple, a boolean flag, to true.\n      var simple = true;\n\n      // 5) While simple is true, issue canonical identifiers for blank nodes:\n      self.whilst(function() { return simple; }, function(callback) {\n        // 5.1) Set simple to false.\n        simple = false;\n\n        // 5.2) Clear hash to blank nodes map.\n        self.hashToBlankNodes = {};\n\n        self.waterfall([\n          function(callback) {\n            // 5.3) For each blank node identifier identifier in non-normalized\n            // identifiers:\n            self.forEach(nonNormalized, function(value, id, callback) {\n              // 5.3.1) Create a hash, hash, according to the Hash First Degree\n              // Quads algorithm.\n              self.hashFirstDegreeQuads(id, function(err, hash) {\n                if(err) {\n                  return callback(err);\n                }\n                // 5.3.2) Add hash and identifier to hash to blank nodes map,\n                // creating a new entry if necessary.\n                if(hash in self.hashToBlankNodes) {\n                  self.hashToBlankNodes[hash].push(id);\n                } else {\n                  self.hashToBlankNodes[hash] = [id];\n                }\n                callback();\n              });\n            }, callback);\n          },\n          function(callback) {\n            // 5.4) For each hash to identifier list mapping in hash to blank\n            // nodes map, lexicographically-sorted by hash:\n            var hashes = Object.keys(self.hashToBlankNodes).sort();\n            self.forEach(hashes, function(hash, i, callback) {\n              // 5.4.1) If the length of identifier list is greater than 1,\n              // continue to the next mapping.\n              var idList = self.hashToBlankNodes[hash];\n              if(idList.length > 1) {\n                return callback();\n              }\n\n              // 5.4.2) Use the Issue Identifier algorithm, passing canonical\n              // issuer and the single blank node identifier in identifier\n              // list, identifier, to issue a canonical replacement identifier\n              // for identifier.\n              // TODO: consider changing `getId` to `issue`\n              var id = idList[0];\n              self.canonicalIssuer.getId(id);\n\n              // 5.4.3) Remove identifier from non-normalized identifiers.\n              delete nonNormalized[id];\n\n              // 5.4.4) Remove hash from the hash to blank nodes map.\n              delete self.hashToBlankNodes[hash];\n\n              // 5.4.5) Set simple to true.\n              simple = true;\n              callback();\n            }, callback);\n          }\n        ], callback);\n      }, callback);\n    },\n    function(callback) {\n      // 6) For each hash to identifier list mapping in hash to blank nodes map,\n      // lexicographically-sorted by hash:\n      var hashes = Object.keys(self.hashToBlankNodes).sort();\n      self.forEach(hashes, function(hash, idx, callback) {\n        // 6.1) Create hash path list where each item will be a result of\n        // running the Hash N-Degree Quads algorithm.\n        var hashPathList = [];\n\n        // 6.2) For each blank node identifier identifier in identifier list:\n        var idList = self.hashToBlankNodes[hash];\n        self.waterfall([\n          function(callback) {\n            self.forEach(idList, function(id, idx, callback) {\n              // 6.2.1) If a canonical identifier has already been issued for\n              // identifier, continue to the next identifier.\n              if(self.canonicalIssuer.hasId(id)) {\n                return callback();\n              }\n\n              // 6.2.2) Create temporary issuer, an identifier issuer\n              // initialized with the prefix _:b.\n              var issuer = new IdentifierIssuer('_:b');\n\n              // 6.2.3) Use the Issue Identifier algorithm, passing temporary\n              // issuer and identifier, to issue a new temporary blank node\n              // identifier for identifier.\n              issuer.getId(id);\n\n              // 6.2.4) Run the Hash N-Degree Quads algorithm, passing\n              // temporary issuer, and append the result to the hash path list.\n              self.hashNDegreeQuads(id, issuer, function(err, result) {\n                if(err) {\n                  return callback(err);\n                }\n                hashPathList.push(result);\n                callback();\n              });\n            }, callback);\n          },\n          function(callback) {\n            // 6.3) For each result in the hash path list,\n            // lexicographically-sorted by the hash in result:\n            hashPathList.sort(function(a, b) {\n              return (a.hash < b.hash) ? -1 : ((a.hash > b.hash) ? 1 : 0);\n            });\n            self.forEach(hashPathList, function(result, idx, callback) {\n              // 6.3.1) For each blank node identifier, existing identifier,\n              // that was issued a temporary identifier by identifier issuer\n              // in result, issue a canonical identifier, in the same order,\n              // using the Issue Identifier algorithm, passing canonical\n              // issuer and existing identifier.\n              for(var existing in result.issuer.existing) {\n                self.canonicalIssuer.getId(existing);\n              }\n              callback();\n            }, callback);\n          }\n        ], callback);\n      }, callback);\n    }, function(callback) {\n      /* Note: At this point all blank nodes in the set of RDF quads have been\n      assigned canonical identifiers, which have been stored in the canonical\n      issuer. Here each quad is updated by assigning each of its blank nodes\n      its new identifier. */\n\n      // 7) For each quad, quad, in input dataset:\n      var normalized = [];\n      self.waterfall([\n        function(callback) {\n          self.forEach(self.quads, function(quad, idx, callback) {\n            // 7.1) Create a copy, quad copy, of quad and replace any existing\n            // blank node identifiers using the canonical identifiers\n            // previously issued by canonical issuer.\n            // Note: We optimize away the copy here.\n            self.forEachComponent(quad, function(component) {\n              if(component.type === 'blank node' &&\n                component.value.indexOf(self.canonicalIssuer.prefix) !== 0) {\n                component.value = self.canonicalIssuer.getId(component.value);\n              }\n            });\n            // 7.2) Add quad copy to the normalized dataset.\n            normalized.push(_toNQuad(quad));\n            callback();\n          }, callback);\n        },\n        function(callback) {\n          // sort normalized output\n          normalized.sort();\n\n          // 8) Return the normalized dataset.\n          if(self.options.format === 'application/nquads') {\n            result = normalized.join('');\n            return callback();\n          }\n\n          result = _parseNQuads(normalized.join(''));\n          callback();\n        }\n      ], callback);\n    }\n  ], function(err) {\n    callback(err, result);\n  });\n};\n\n// 4.6) Hash First Degree Quads\nNormalize.prototype.hashFirstDegreeQuads = function(id, callback) {\n  var self = this;\n\n  // return cached hash\n  var info = self.blankNodeInfo[id];\n  if('hash' in info) {\n    return callback(null, info.hash);\n  }\n\n  // 1) Initialize nquads to an empty list. It will be used to store quads in\n  // N-Quads format.\n  var nquads = [];\n\n  // 2) Get the list of quads quads associated with the reference blank node\n  // identifier in the blank node to quads map.\n  var quads = info.quads;\n\n  // 3) For each quad quad in quads:\n  self.forEach(quads, function(quad, idx, callback) {\n    // 3.1) Serialize the quad in N-Quads format with the following special\n    // rule:\n\n    // 3.1.1) If any component in quad is an blank node, then serialize it\n    // using a special identifier as follows:\n    var copy = {predicate: quad.predicate};\n    self.forEachComponent(quad, function(component, key) {\n      // 3.1.2) If the blank node's existing blank node identifier matches the\n      // reference blank node identifier then use the blank node identifier _:a,\n      // otherwise, use the blank node identifier _:z.\n      copy[key] = self.modifyFirstDegreeComponent(id, component, key);\n    });\n    nquads.push(_toNQuad(copy));\n    callback();\n  }, function(err) {\n    if(err) {\n      return callback(err);\n    }\n    // 4) Sort nquads in lexicographical order.\n    nquads.sort();\n\n    // 5) Return the hash that results from passing the sorted, joined nquads\n    // through the hash algorithm.\n    info.hash = NormalizeHash.hashNQuads(self.name, nquads);\n    callback(null, info.hash);\n  });\n};\n\n// helper for modifying component during Hash First Degree Quads\nNormalize.prototype.modifyFirstDegreeComponent = function(id, component) {\n  if(component.type !== 'blank node') {\n    return component;\n  }\n  component = _clone(component);\n  component.value = (component.value === id ? '_:a' : '_:z');\n  return component;\n};\n\n// 4.7) Hash Related Blank Node\nNormalize.prototype.hashRelatedBlankNode = function(\n  related, quad, issuer, position, callback) {\n  var self = this;\n\n  // 1) Set the identifier to use for related, preferring first the canonical\n  // identifier for related if issued, second the identifier issued by issuer\n  // if issued, and last, if necessary, the result of the Hash First Degree\n  // Quads algorithm, passing related.\n  var id;\n  self.waterfall([\n    function(callback) {\n      if(self.canonicalIssuer.hasId(related)) {\n        id = self.canonicalIssuer.getId(related);\n        return callback();\n      }\n      if(issuer.hasId(related)) {\n        id = issuer.getId(related);\n        return callback();\n      }\n      self.hashFirstDegreeQuads(related, function(err, hash) {\n        if(err) {\n          return callback(err);\n        }\n        id = hash;\n        callback();\n      });\n    }\n  ], function(err) {\n    if(err) {\n      return callback(err);\n    }\n\n    // 2) Initialize a string input to the value of position.\n    // Note: We use a hash object instead.\n    var md = new NormalizeHash(self.name);\n    md.update(position);\n\n    // 3) If position is not g, append <, the value of the predicate in quad,\n    // and > to input.\n    if(position !== 'g') {\n      md.update(self.getRelatedPredicate(quad));\n    }\n\n    // 4) Append identifier to input.\n    md.update(id);\n\n    // 5) Return the hash that results from passing input through the hash\n    // algorithm.\n    return callback(null, md.digest());\n  });\n};\n\n// helper for getting a related predicate\nNormalize.prototype.getRelatedPredicate = function(quad) {\n  return '<' + quad.predicate.value + '>';\n};\n\n// 4.8) Hash N-Degree Quads\nNormalize.prototype.hashNDegreeQuads = function(id, issuer, callback) {\n  var self = this;\n\n  // 1) Create a hash to related blank nodes map for storing hashes that\n  // identify related blank nodes.\n  // Note: 2) and 3) handled within `createHashToRelated`\n  var hashToRelated;\n  var md = new NormalizeHash(self.name);\n  self.waterfall([\n    function(callback) {\n      self.createHashToRelated(id, issuer, function(err, result) {\n        if(err) {\n          return callback(err);\n        }\n        hashToRelated = result;\n        callback();\n      });\n    },\n    function(callback) {\n      // 4) Create an empty string, data to hash.\n      // Note: We created a hash object `md` above instead.\n\n      // 5) For each related hash to blank node list mapping in hash to related\n      // blank nodes map, sorted lexicographically by related hash:\n      var hashes = Object.keys(hashToRelated).sort();\n      self.forEach(hashes, function(hash, idx, callback) {\n        // 5.1) Append the related hash to the data to hash.\n        md.update(hash);\n\n        // 5.2) Create a string chosen path.\n        var chosenPath = '';\n\n        // 5.3) Create an unset chosen issuer variable.\n        var chosenIssuer;\n\n        // 5.4) For each permutation of blank node list:\n        var permutator = new Permutator(hashToRelated[hash]);\n        self.whilst(\n          function() { return permutator.hasNext(); },\n          function(nextPermutation) {\n          var permutation = permutator.next();\n\n          // 5.4.1) Create a copy of issuer, issuer copy.\n          var issuerCopy = issuer.clone();\n\n          // 5.4.2) Create a string path.\n          var path = '';\n\n          // 5.4.3) Create a recursion list, to store blank node identifiers\n          // that must be recursively processed by this algorithm.\n          var recursionList = [];\n\n          self.waterfall([\n            function(callback) {\n              // 5.4.4) For each related in permutation:\n              self.forEach(permutation, function(related, idx, callback) {\n                // 5.4.4.1) If a canonical identifier has been issued for\n                // related, append it to path.\n                if(self.canonicalIssuer.hasId(related)) {\n                  path += self.canonicalIssuer.getId(related);\n                } else {\n                  // 5.4.4.2) Otherwise:\n                  // 5.4.4.2.1) If issuer copy has not issued an identifier for\n                  // related, append related to recursion list.\n                  if(!issuerCopy.hasId(related)) {\n                    recursionList.push(related);\n                  }\n                  // 5.4.4.2.2) Use the Issue Identifier algorithm, passing\n                  // issuer copy and related and append the result to path.\n                  path += issuerCopy.getId(related);\n                }\n\n                // 5.4.4.3) If chosen path is not empty and the length of path\n                // is greater than or equal to the length of chosen path and\n                // path is lexicographically greater than chosen path, then\n                // skip to the next permutation.\n                if(chosenPath.length !== 0 &&\n                  path.length >= chosenPath.length && path > chosenPath) {\n                  // FIXME: may cause inaccurate total depth calculation\n                  return nextPermutation();\n                }\n                callback();\n              }, callback);\n            },\n            function(callback) {\n              // 5.4.5) For each related in recursion list:\n              self.forEach(recursionList, function(related, idx, callback) {\n                // 5.4.5.1) Set result to the result of recursively executing\n                // the Hash N-Degree Quads algorithm, passing related for\n                // identifier and issuer copy for path identifier issuer.\n                self.hashNDegreeQuads(\n                  related, issuerCopy, function(err, result) {\n                  if(err) {\n                    return callback(err);\n                  }\n\n                  // 5.4.5.2) Use the Issue Identifier algorithm, passing issuer\n                  // copy and related and append the result to path.\n                  path += issuerCopy.getId(related);\n\n                  // 5.4.5.3) Append <, the hash in result, and > to path.\n                  path += '<' + result.hash + '>';\n\n                  // 5.4.5.4) Set issuer copy to the identifier issuer in\n                  // result.\n                  issuerCopy = result.issuer;\n\n                  // 5.4.5.5) If chosen path is not empty and the length of path\n                  // is greater than or equal to the length of chosen path and\n                  // path is lexicographically greater than chosen path, then\n                  // skip to the next permutation.\n                  if(chosenPath.length !== 0 &&\n                    path.length >= chosenPath.length && path > chosenPath) {\n                    // FIXME: may cause inaccurate total depth calculation\n                    return nextPermutation();\n                  }\n                  callback();\n                });\n              }, callback);\n            },\n            function(callback) {\n              // 5.4.6) If chosen path is empty or path is lexicographically\n              // less than chosen path, set chosen path to path and chosen\n              // issuer to issuer copy.\n              if(chosenPath.length === 0 || path < chosenPath) {\n                chosenPath = path;\n                chosenIssuer = issuerCopy;\n              }\n              callback();\n            }\n          ], nextPermutation);\n        }, function(err) {\n          if(err) {\n            return callback(err);\n          }\n\n          // 5.5) Append chosen path to data to hash.\n          md.update(chosenPath);\n\n          // 5.6) Replace issuer, by reference, with chosen issuer.\n          issuer = chosenIssuer;\n          callback();\n        });\n      }, callback);\n    }\n  ], function(err) {\n    // 6) Return issuer and the hash that results from passing data to hash\n    // through the hash algorithm.\n    callback(err, {hash: md.digest(), issuer: issuer});\n  });\n};\n\n// helper for creating hash to related blank nodes map\nNormalize.prototype.createHashToRelated = function(id, issuer, callback) {\n  var self = this;\n\n  // 1) Create a hash to related blank nodes map for storing hashes that\n  // identify related blank nodes.\n  var hashToRelated = {};\n\n  // 2) Get a reference, quads, to the list of quads in the blank node to\n  // quads map for the key identifier.\n  var quads = self.blankNodeInfo[id].quads;\n\n  // 3) For each quad in quads:\n  self.forEach(quads, function(quad, idx, callback) {\n    // 3.1) For each component in quad, if component is the subject, object,\n    // and graph name and it is a blank node that is not identified by\n    // identifier:\n    self.forEach(quad, function(component, key, callback) {\n      if(key === 'predicate' ||\n        !(component.type === 'blank node' && component.value !== id)) {\n        return callback();\n      }\n      // 3.1.1) Set hash to the result of the Hash Related Blank Node\n      // algorithm, passing the blank node identifier for component as\n      // related, quad, path identifier issuer as issuer, and position as\n      // either s, o, or g based on whether component is a subject, object,\n      // graph name, respectively.\n      var related = component.value;\n      var position = POSITIONS[key];\n      self.hashRelatedBlankNode(\n        related, quad, issuer, position, function(err, hash) {\n        if(err) {\n          return callback(err);\n        }\n        // 3.1.2) Add a mapping of hash to the blank node identifier for\n        // component to hash to related blank nodes map, adding an entry as\n        // necessary.\n        if(hash in hashToRelated) {\n          hashToRelated[hash].push(related);\n        } else {\n          hashToRelated[hash] = [related];\n        }\n        callback();\n      });\n    }, callback);\n  }, function(err) {\n    callback(err, hashToRelated);\n  });\n};\n\n// helper that iterates over quad components (skips predicate)\nNormalize.prototype.forEachComponent = function(quad, op) {\n  for(var key in quad) {\n    // skip `predicate`\n    if(key === 'predicate') {\n      continue;\n    }\n    op(quad[key], key, quad);\n  }\n};\n\nreturn Normalize;\n\n})(); // end of define URDNA2015\n\n/////////////////////////////// DEFINE URGNA2012 //////////////////////////////\n\nvar URGNA2012 = (function() {\n\nvar Normalize = function(options) {\n  URDNA2015.call(this, options);\n  this.name = 'URGNA2012';\n};\nNormalize.prototype = new URDNA2015();\n\n// helper for modifying component during Hash First Degree Quads\nNormalize.prototype.modifyFirstDegreeComponent = function(id, component, key) {\n  if(component.type !== 'blank node') {\n    return component;\n  }\n  component = _clone(component);\n  if(key === 'name') {\n    component.value = '_:g';\n  } else {\n    component.value = (component.value === id ? '_:a' : '_:z');\n  }\n  return component;\n};\n\n// helper for getting a related predicate\nNormalize.prototype.getRelatedPredicate = function(quad) {\n  return quad.predicate.value;\n};\n\n// helper for creating hash to related blank nodes map\nNormalize.prototype.createHashToRelated = function(id, issuer, callback) {\n  var self = this;\n\n  // 1) Create a hash to related blank nodes map for storing hashes that\n  // identify related blank nodes.\n  var hashToRelated = {};\n\n  // 2) Get a reference, quads, to the list of quads in the blank node to\n  // quads map for the key identifier.\n  var quads = self.blankNodeInfo[id].quads;\n\n  // 3) For each quad in quads:\n  self.forEach(quads, function(quad, idx, callback) {\n    // 3.1) If the quad's subject is a blank node that does not match\n    // identifier, set hash to the result of the Hash Related Blank Node\n    // algorithm, passing the blank node identifier for subject as related,\n    // quad, path identifier issuer as issuer, and p as position.\n    var position;\n    var related;\n    if(quad.subject.type === 'blank node' && quad.subject.value !== id) {\n      related = quad.subject.value;\n      position = 'p';\n    } else if(quad.object.type === 'blank node' && quad.object.value !== id) {\n      // 3.2) Otherwise, if quad's object is a blank node that does not match\n      // identifier, to the result of the Hash Related Blank Node algorithm,\n      // passing the blank node identifier for object as related, quad, path\n      // identifier issuer as issuer, and r as position.\n      related = quad.object.value;\n      position = 'r';\n    } else {\n      // 3.3) Otherwise, continue to the next quad.\n      return callback();\n    }\n    // 3.4) Add a mapping of hash to the blank node identifier for the\n    // component that matched (subject or object) to hash to related blank\n    // nodes map, adding an entry as necessary.\n    self.hashRelatedBlankNode(\n      related, quad, issuer, position, function(err, hash) {\n      if(hash in hashToRelated) {\n        hashToRelated[hash].push(related);\n      } else {\n        hashToRelated[hash] = [related];\n      }\n      callback();\n    });\n  }, function(err) {\n    callback(err, hashToRelated);\n  });\n};\n\nreturn Normalize;\n\n})(); // end of define URGNA2012\n\n/**\n * Recursively flattens the subjects in the given JSON-LD expanded input\n * into a node map.\n *\n * @param input the JSON-LD expanded input.\n * @param graphs a map of graph name to subject map.\n * @param graph the name of the current graph.\n * @param issuer the blank node identifier issuer.\n * @param name the name assigned to the current input if it is a bnode.\n * @param list the list to append to, null for none.\n */\nfunction _createNodeMap(input, graphs, graph, issuer, name, list) {\n  // recurse through array\n  if(_isArray(input)) {\n    for(var i = 0; i < input.length; ++i) {\n      _createNodeMap(input[i], graphs, graph, issuer, undefined, list);\n    }\n    return;\n  }\n\n  // add non-object to list\n  if(!_isObject(input)) {\n    if(list) {\n      list.push(input);\n    }\n    return;\n  }\n\n  // add values to list\n  if(_isValue(input)) {\n    if('@type' in input) {\n      var type = input['@type'];\n      // rename @type blank node\n      if(type.indexOf('_:') === 0) {\n        input['@type'] = type = issuer.getId(type);\n      }\n    }\n    if(list) {\n      list.push(input);\n    }\n    return;\n  }\n\n  // Note: At this point, input must be a subject.\n\n  // spec requires @type to be named first, so assign names early\n  if('@type' in input) {\n    var types = input['@type'];\n    for(var i = 0; i < types.length; ++i) {\n      var type = types[i];\n      if(type.indexOf('_:') === 0) {\n        issuer.getId(type);\n      }\n    }\n  }\n\n  // get name for subject\n  if(_isUndefined(name)) {\n    name = _isBlankNode(input) ? issuer.getId(input['@id']) : input['@id'];\n  }\n\n  // add subject reference to list\n  if(list) {\n    list.push({'@id': name});\n  }\n\n  // create new subject or merge into existing one\n  var subjects = graphs[graph];\n  var subject = subjects[name] = subjects[name] || {};\n  subject['@id'] = name;\n  var properties = Object.keys(input).sort();\n  for(var pi = 0; pi < properties.length; ++pi) {\n    var property = properties[pi];\n\n    // skip @id\n    if(property === '@id') {\n      continue;\n    }\n\n    // handle reverse properties\n    if(property === '@reverse') {\n      var referencedNode = {'@id': name};\n      var reverseMap = input['@reverse'];\n      for(var reverseProperty in reverseMap) {\n        var items = reverseMap[reverseProperty];\n        for(var ii = 0; ii < items.length; ++ii) {\n          var item = items[ii];\n          var itemName = item['@id'];\n          if(_isBlankNode(item)) {\n            itemName = issuer.getId(itemName);\n          }\n          _createNodeMap(item, graphs, graph, issuer, itemName);\n          jsonld.addValue(\n            subjects[itemName], reverseProperty, referencedNode,\n            {propertyIsArray: true, allowDuplicate: false});\n        }\n      }\n      continue;\n    }\n\n    // recurse into graph\n    if(property === '@graph') {\n      // add graph subjects map entry\n      if(!(name in graphs)) {\n        graphs[name] = {};\n      }\n      var g = (graph === '@merged') ? graph : name;\n      _createNodeMap(input[property], graphs, g, issuer);\n      continue;\n    }\n\n    // copy non-@type keywords\n    if(property !== '@type' && _isKeyword(property)) {\n      if(property === '@index' && property in subject &&\n        (input[property] !== subject[property] ||\n        input[property]['@id'] !== subject[property]['@id'])) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; conflicting @index property detected.',\n          'jsonld.SyntaxError',\n          {code: 'conflicting indexes', subject: subject});\n      }\n      subject[property] = input[property];\n      continue;\n    }\n\n    // iterate over objects\n    var objects = input[property];\n\n    // if property is a bnode, assign it a new id\n    if(property.indexOf('_:') === 0) {\n      property = issuer.getId(property);\n    }\n\n    // ensure property is added for empty arrays\n    if(objects.length === 0) {\n      jsonld.addValue(subject, property, [], {propertyIsArray: true});\n      continue;\n    }\n    for(var oi = 0; oi < objects.length; ++oi) {\n      var o = objects[oi];\n\n      if(property === '@type') {\n        // rename @type blank nodes\n        o = (o.indexOf('_:') === 0) ? issuer.getId(o) : o;\n      }\n\n      // handle embedded subject or subject reference\n      if(_isSubject(o) || _isSubjectReference(o)) {\n        // relabel blank node @id\n        var id = _isBlankNode(o) ? issuer.getId(o['@id']) : o['@id'];\n\n        // add reference and recurse\n        jsonld.addValue(\n          subject, property, {'@id': id},\n          {propertyIsArray: true, allowDuplicate: false});\n        _createNodeMap(o, graphs, graph, issuer, id);\n      } else if(_isList(o)) {\n        // handle @list\n        var _list = [];\n        _createNodeMap(o['@list'], graphs, graph, issuer, name, _list);\n        o = {'@list': _list};\n        jsonld.addValue(\n          subject, property, o,\n          {propertyIsArray: true, allowDuplicate: false});\n      } else {\n        // handle @value\n        _createNodeMap(o, graphs, graph, issuer, name);\n        jsonld.addValue(\n          subject, property, o, {propertyIsArray: true, allowDuplicate: false});\n      }\n    }\n  }\n}\n\nfunction _mergeNodeMaps(graphs) {\n  // add all non-default graphs to default graph\n  var defaultGraph = graphs['@default'];\n  var graphNames = Object.keys(graphs).sort();\n  for(var i = 0; i < graphNames.length; ++i) {\n    var graphName = graphNames[i];\n    if(graphName === '@default') {\n      continue;\n    }\n    var nodeMap = graphs[graphName];\n    var subject = defaultGraph[graphName];\n    if(!subject) {\n      defaultGraph[graphName] = subject = {\n        '@id': graphName,\n        '@graph': []\n      };\n    } else if(!('@graph' in subject)) {\n      subject['@graph'] = [];\n    }\n    var graph = subject['@graph'];\n    var ids = Object.keys(nodeMap).sort();\n    for(var ii = 0; ii < ids.length; ++ii) {\n      var node = nodeMap[ids[ii]];\n      // only add full subjects\n      if(!_isSubjectReference(node)) {\n        graph.push(node);\n      }\n    }\n  }\n  return defaultGraph;\n}\n\n/**\n * Frames subjects according to the given frame.\n *\n * @param state the current framing state.\n * @param subjects the subjects to filter.\n * @param frame the frame.\n * @param parent the parent subject or top-level array.\n * @param property the parent property, initialized to null.\n */\nfunction _frame(state, subjects, frame, parent, property) {\n  // validate the frame\n  _validateFrame(frame);\n  frame = frame[0];\n\n  // get flags for current frame\n  var options = state.options;\n  var flags = {\n    embed: _getFrameFlag(frame, options, 'embed'),\n    explicit: _getFrameFlag(frame, options, 'explicit'),\n    requireAll: _getFrameFlag(frame, options, 'requireAll')\n  };\n\n  // filter out subjects that match the frame\n  var matches = _filterSubjects(state, subjects, frame, flags);\n\n  // add matches to output\n  var ids = Object.keys(matches).sort();\n  for(var idx = 0; idx < ids.length; ++idx) {\n    var id = ids[idx];\n    var subject = matches[id];\n\n    if(flags.embed === '@link' && id in state.link) {\n      // TODO: may want to also match an existing linked subject against\n      // the current frame ... so different frames could produce different\n      // subjects that are only shared in-memory when the frames are the same\n\n      // add existing linked subject\n      _addFrameOutput(parent, property, state.link[id]);\n      continue;\n    }\n\n    /* Note: In order to treat each top-level match as a compartmentalized\n    result, clear the unique embedded subjects map when the property is null,\n    which only occurs at the top-level. */\n    if(property === null) {\n      state.uniqueEmbeds = {};\n    }\n\n    // start output for subject\n    var output = {};\n    output['@id'] = id;\n    state.link[id] = output;\n\n    // if embed is @never or if a circular reference would be created by an\n    // embed, the subject cannot be embedded, just add the reference;\n    // note that a circular reference won't occur when the embed flag is\n    // `@link` as the above check will short-circuit before reaching this point\n    if(flags.embed === '@never' ||\n      _createsCircularReference(subject, state.subjectStack)) {\n      _addFrameOutput(parent, property, output);\n      continue;\n    }\n\n    // if only the last match should be embedded\n    if(flags.embed === '@last') {\n      // remove any existing embed\n      if(id in state.uniqueEmbeds) {\n        _removeEmbed(state, id);\n      }\n      state.uniqueEmbeds[id] = {parent: parent, property: property};\n    }\n\n    // push matching subject onto stack to enable circular embed checks\n    state.subjectStack.push(subject);\n\n    // iterate over subject properties\n    var props = Object.keys(subject).sort();\n    for(var i = 0; i < props.length; i++) {\n      var prop = props[i];\n\n      // copy keywords to output\n      if(_isKeyword(prop)) {\n        output[prop] = _clone(subject[prop]);\n        continue;\n      }\n\n      // explicit is on and property isn't in the frame, skip processing\n      if(flags.explicit && !(prop in frame)) {\n        continue;\n      }\n\n      // add objects\n      var objects = subject[prop];\n      for(var oi = 0; oi < objects.length; ++oi) {\n        var o = objects[oi];\n\n        // recurse into list\n        if(_isList(o)) {\n          // add empty list\n          var list = {'@list': []};\n          _addFrameOutput(output, prop, list);\n\n          // add list objects\n          var src = o['@list'];\n          for(var n in src) {\n            o = src[n];\n            if(_isSubjectReference(o)) {\n              var subframe = (prop in frame ?\n                frame[prop][0]['@list'] : _createImplicitFrame(flags));\n              // recurse into subject reference\n              _frame(state, [o['@id']], subframe, list, '@list');\n            } else {\n              // include other values automatically\n              _addFrameOutput(list, '@list', _clone(o));\n            }\n          }\n          continue;\n        }\n\n        if(_isSubjectReference(o)) {\n          // recurse into subject reference\n          var subframe = (prop in frame ?\n            frame[prop] : _createImplicitFrame(flags));\n          _frame(state, [o['@id']], subframe, output, prop);\n        } else {\n          // include other values automatically\n          _addFrameOutput(output, prop, _clone(o));\n        }\n      }\n    }\n\n    // handle defaults\n    var props = Object.keys(frame).sort();\n    for(var i = 0; i < props.length; ++i) {\n      var prop = props[i];\n\n      // skip keywords\n      if(_isKeyword(prop)) {\n        continue;\n      }\n\n      // if omit default is off, then include default values for properties\n      // that appear in the next frame but are not in the matching subject\n      var next = frame[prop][0];\n      var omitDefaultOn = _getFrameFlag(next, options, 'omitDefault');\n      if(!omitDefaultOn && !(prop in output)) {\n        var preserve = '@null';\n        if('@default' in next) {\n          preserve = _clone(next['@default']);\n        }\n        if(!_isArray(preserve)) {\n          preserve = [preserve];\n        }\n        output[prop] = [{'@preserve': preserve}];\n      }\n    }\n\n    // add output to parent\n    _addFrameOutput(parent, property, output);\n\n    // pop matching subject from circular ref-checking stack\n    state.subjectStack.pop();\n  }\n}\n\n/**\n * Creates an implicit frame when recursing through subject matches. If\n * a frame doesn't have an explicit frame for a particular property, then\n * a wildcard child frame will be created that uses the same flags that the\n * parent frame used.\n *\n * @param flags the current framing flags.\n *\n * @return the implicit frame.\n */\nfunction _createImplicitFrame(flags) {\n  var frame = {};\n  for(var key in flags) {\n    if(flags[key] !== undefined) {\n      frame['@' + key] = [flags[key]];\n    }\n  }\n  return [frame];\n}\n\n/**\n * Checks the current subject stack to see if embedding the given subject\n * would cause a circular reference.\n *\n * @param subjectToEmbed the subject to embed.\n * @param subjectStack the current stack of subjects.\n *\n * @return true if a circular reference would be created, false if not.\n */\nfunction _createsCircularReference(subjectToEmbed, subjectStack) {\n  for(var i = subjectStack.length - 1; i >= 0; --i) {\n    if(subjectStack[i]['@id'] === subjectToEmbed['@id']) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Gets the frame flag value for the given flag name.\n *\n * @param frame the frame.\n * @param options the framing options.\n * @param name the flag name.\n *\n * @return the flag value.\n */\nfunction _getFrameFlag(frame, options, name) {\n  var flag = '@' + name;\n  var rval = (flag in frame ? frame[flag][0] : options[name]);\n  if(name === 'embed') {\n    // default is \"@last\"\n    // backwards-compatibility support for \"embed\" maps:\n    // true => \"@last\"\n    // false => \"@never\"\n    if(rval === true) {\n      rval = '@last';\n    } else if(rval === false) {\n      rval = '@never';\n    } else if(rval !== '@always' && rval !== '@never' && rval !== '@link') {\n      rval = '@last';\n    }\n  }\n  return rval;\n}\n\n/**\n * Validates a JSON-LD frame, throwing an exception if the frame is invalid.\n *\n * @param frame the frame to validate.\n */\nfunction _validateFrame(frame) {\n  if(!_isArray(frame) || frame.length !== 1 || !_isObject(frame[0])) {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; a JSON-LD frame must be a single object.',\n      'jsonld.SyntaxError', {frame: frame});\n  }\n}\n\n/**\n * Returns a map of all of the subjects that match a parsed frame.\n *\n * @param state the current framing state.\n * @param subjects the set of subjects to filter.\n * @param frame the parsed frame.\n * @param flags the frame flags.\n *\n * @return all of the matched subjects.\n */\nfunction _filterSubjects(state, subjects, frame, flags) {\n  // filter subjects in @id order\n  var rval = {};\n  for(var i = 0; i < subjects.length; ++i) {\n    var id = subjects[i];\n    var subject = state.subjects[id];\n    if(_filterSubject(subject, frame, flags)) {\n      rval[id] = subject;\n    }\n  }\n  return rval;\n}\n\n/**\n * Returns true if the given subject matches the given frame.\n *\n * @param subject the subject to check.\n * @param frame the frame to check.\n * @param flags the frame flags.\n *\n * @return true if the subject matches, false if not.\n */\nfunction _filterSubject(subject, frame, flags) {\n  // check @type (object value means 'any' type, fall through to ducktyping)\n  if('@type' in frame &&\n    !(frame['@type'].length === 1 && _isObject(frame['@type'][0]))) {\n    var types = frame['@type'];\n    for(var i = 0; i < types.length; ++i) {\n      // any matching @type is a match\n      if(jsonld.hasValue(subject, '@type', types[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // check ducktype\n  var wildcard = true;\n  var matchesSome = false;\n  for(var key in frame) {\n    if(_isKeyword(key)) {\n      // skip non-@id and non-@type\n      if(key !== '@id' && key !== '@type') {\n        continue;\n      }\n      wildcard = false;\n\n      // check @id for a specific @id value\n      if(key === '@id' && _isString(frame[key])) {\n        if(subject[key] !== frame[key]) {\n          return false;\n        }\n        matchesSome = true;\n        continue;\n      }\n    }\n\n    wildcard = false;\n\n    if(key in subject) {\n      // frame[key] === [] means do not match if property is present\n      if(_isArray(frame[key]) && frame[key].length === 0 &&\n        subject[key] !== undefined) {\n        return false;\n      }\n      matchesSome = true;\n      continue;\n    }\n\n    // all properties must match to be a duck unless a @default is specified\n    var hasDefault = (_isArray(frame[key]) && _isObject(frame[key][0]) &&\n      '@default' in frame[key][0]);\n    if(flags.requireAll && !hasDefault) {\n      return false;\n    }\n  }\n\n  // return true if wildcard or subject matches some properties\n  return wildcard || matchesSome;\n}\n\n/**\n * Removes an existing embed.\n *\n * @param state the current framing state.\n * @param id the @id of the embed to remove.\n */\nfunction _removeEmbed(state, id) {\n  // get existing embed\n  var embeds = state.uniqueEmbeds;\n  var embed = embeds[id];\n  var parent = embed.parent;\n  var property = embed.property;\n\n  // create reference to replace embed\n  var subject = {'@id': id};\n\n  // remove existing embed\n  if(_isArray(parent)) {\n    // replace subject with reference\n    for(var i = 0; i < parent.length; ++i) {\n      if(jsonld.compareValues(parent[i], subject)) {\n        parent[i] = subject;\n        break;\n      }\n    }\n  } else {\n    // replace subject with reference\n    var useArray = _isArray(parent[property]);\n    jsonld.removeValue(parent, property, subject, {propertyIsArray: useArray});\n    jsonld.addValue(parent, property, subject, {propertyIsArray: useArray});\n  }\n\n  // recursively remove dependent dangling embeds\n  var removeDependents = function(id) {\n    // get embed keys as a separate array to enable deleting keys in map\n    var ids = Object.keys(embeds);\n    for(var i = 0; i < ids.length; ++i) {\n      var next = ids[i];\n      if(next in embeds && _isObject(embeds[next].parent) &&\n        embeds[next].parent['@id'] === id) {\n        delete embeds[next];\n        removeDependents(next);\n      }\n    }\n  };\n  removeDependents(id);\n}\n\n/**\n * Adds framing output to the given parent.\n *\n * @param parent the parent to add to.\n * @param property the parent property.\n * @param output the output to add.\n */\nfunction _addFrameOutput(parent, property, output) {\n  if(_isObject(parent)) {\n    jsonld.addValue(parent, property, output, {propertyIsArray: true});\n  } else {\n    parent.push(output);\n  }\n}\n\n/**\n * Removes the @preserve keywords as the last step of the framing algorithm.\n *\n * @param ctx the active context used to compact the input.\n * @param input the framed, compacted output.\n * @param options the compaction options used.\n *\n * @return the resulting output.\n */\nfunction _removePreserve(ctx, input, options) {\n  // recurse through arrays\n  if(_isArray(input)) {\n    var output = [];\n    for(var i = 0; i < input.length; ++i) {\n      var result = _removePreserve(ctx, input[i], options);\n      // drop nulls from arrays\n      if(result !== null) {\n        output.push(result);\n      }\n    }\n    input = output;\n  } else if(_isObject(input)) {\n    // remove @preserve\n    if('@preserve' in input) {\n      if(input['@preserve'] === '@null') {\n        return null;\n      }\n      return input['@preserve'];\n    }\n\n    // skip @values\n    if(_isValue(input)) {\n      return input;\n    }\n\n    // recurse through @lists\n    if(_isList(input)) {\n      input['@list'] = _removePreserve(ctx, input['@list'], options);\n      return input;\n    }\n\n    // handle in-memory linked nodes\n    var idAlias = _compactIri(ctx, '@id');\n    if(idAlias in input) {\n      var id = input[idAlias];\n      if(id in options.link) {\n        var idx = options.link[id].indexOf(input);\n        if(idx === -1) {\n          // prevent circular visitation\n          options.link[id].push(input);\n        } else {\n          // already visited\n          return options.link[id][idx];\n        }\n      } else {\n        // prevent circular visitation\n        options.link[id] = [input];\n      }\n    }\n\n    // recurse through properties\n    for(var prop in input) {\n      var result = _removePreserve(ctx, input[prop], options);\n      var container = jsonld.getContextValue(ctx, prop, '@container');\n      if(options.compactArrays && _isArray(result) && result.length === 1 &&\n        container === null) {\n        result = result[0];\n      }\n      input[prop] = result;\n    }\n  }\n  return input;\n}\n\n/**\n * Compares two strings first based on length and then lexicographically.\n *\n * @param a the first string.\n * @param b the second string.\n *\n * @return -1 if a < b, 1 if a > b, 0 if a == b.\n */\nfunction _compareShortestLeast(a, b) {\n  if(a.length < b.length) {\n    return -1;\n  }\n  if(b.length < a.length) {\n    return 1;\n  }\n  if(a === b) {\n    return 0;\n  }\n  return (a < b) ? -1 : 1;\n}\n\n/**\n * Picks the preferred compaction term from the given inverse context entry.\n *\n * @param activeCtx the active context.\n * @param iri the IRI to pick the term for.\n * @param value the value to pick the term for.\n * @param containers the preferred containers.\n * @param typeOrLanguage either '@type' or '@language'.\n * @param typeOrLanguageValue the preferred value for '@type' or '@language'.\n *\n * @return the preferred term.\n */\nfunction _selectTerm(\n  activeCtx, iri, value, containers, typeOrLanguage, typeOrLanguageValue) {\n  if(typeOrLanguageValue === null) {\n    typeOrLanguageValue = '@null';\n  }\n\n  // preferences for the value of @type or @language\n  var prefs = [];\n\n  // determine prefs for @id based on whether or not value compacts to a term\n  if((typeOrLanguageValue === '@id' || typeOrLanguageValue === '@reverse') &&\n    _isSubjectReference(value)) {\n    // prefer @reverse first\n    if(typeOrLanguageValue === '@reverse') {\n      prefs.push('@reverse');\n    }\n    // try to compact value to a term\n    var term = _compactIri(activeCtx, value['@id'], null, {vocab: true});\n    if(term in activeCtx.mappings &&\n      activeCtx.mappings[term] &&\n      activeCtx.mappings[term]['@id'] === value['@id']) {\n      // prefer @vocab\n      prefs.push.apply(prefs, ['@vocab', '@id']);\n    } else {\n      // prefer @id\n      prefs.push.apply(prefs, ['@id', '@vocab']);\n    }\n  } else {\n    prefs.push(typeOrLanguageValue);\n  }\n  prefs.push('@none');\n\n  var containerMap = activeCtx.inverse[iri];\n  for(var ci = 0; ci < containers.length; ++ci) {\n    // if container not available in the map, continue\n    var container = containers[ci];\n    if(!(container in containerMap)) {\n      continue;\n    }\n\n    var typeOrLanguageValueMap = containerMap[container][typeOrLanguage];\n    for(var pi = 0; pi < prefs.length; ++pi) {\n      // if type/language option not available in the map, continue\n      var pref = prefs[pi];\n      if(!(pref in typeOrLanguageValueMap)) {\n        continue;\n      }\n\n      // select term\n      return typeOrLanguageValueMap[pref];\n    }\n  }\n\n  return null;\n}\n\n/**\n * Compacts an IRI or keyword into a term or prefix if it can be. If the\n * IRI has an associated value it may be passed.\n *\n * @param activeCtx the active context to use.\n * @param iri the IRI to compact.\n * @param value the value to check or null.\n * @param relativeTo options for how to compact IRIs:\n *          vocab: true to split after @vocab, false not to.\n * @param reverse true if a reverse property is being compacted, false if not.\n *\n * @return the compacted term, prefix, keyword alias, or the original IRI.\n */\nfunction _compactIri(activeCtx, iri, value, relativeTo, reverse) {\n  // can't compact null\n  if(iri === null) {\n    return iri;\n  }\n\n  // default value and parent to null\n  if(_isUndefined(value)) {\n    value = null;\n  }\n  // default reverse to false\n  if(_isUndefined(reverse)) {\n    reverse = false;\n  }\n  relativeTo = relativeTo || {};\n\n  var inverseCtx = activeCtx.getInverse();\n\n  // if term is a keyword, it can only be compacted to a simple alias\n  if(_isKeyword(iri)) {\n    if(iri in inverseCtx) {\n      return inverseCtx[iri]['@none']['@type']['@none'];\n    }\n    return iri;\n  }\n\n  // use inverse context to pick a term if iri is relative to vocab\n  if(relativeTo.vocab && iri in inverseCtx) {\n    var defaultLanguage = activeCtx['@language'] || '@none';\n\n    // prefer @index if available in value\n    var containers = [];\n    if(_isObject(value) && '@index' in value) {\n      containers.push('@index');\n    }\n\n    // defaults for term selection based on type/language\n    var typeOrLanguage = '@language';\n    var typeOrLanguageValue = '@null';\n\n    if(reverse) {\n      typeOrLanguage = '@type';\n      typeOrLanguageValue = '@reverse';\n      containers.push('@set');\n    } else if(_isList(value)) {\n      // choose the most specific term that works for all elements in @list\n      // only select @list containers if @index is NOT in value\n      if(!('@index' in value)) {\n        containers.push('@list');\n      }\n      var list = value['@list'];\n      var commonLanguage = (list.length === 0) ? defaultLanguage : null;\n      var commonType = null;\n      for(var i = 0; i < list.length; ++i) {\n        var item = list[i];\n        var itemLanguage = '@none';\n        var itemType = '@none';\n        if(_isValue(item)) {\n          if('@language' in item) {\n            itemLanguage = item['@language'];\n          } else if('@type' in item) {\n            itemType = item['@type'];\n          } else {\n            // plain literal\n            itemLanguage = '@null';\n          }\n        } else {\n          itemType = '@id';\n        }\n        if(commonLanguage === null) {\n          commonLanguage = itemLanguage;\n        } else if(itemLanguage !== commonLanguage && _isValue(item)) {\n          commonLanguage = '@none';\n        }\n        if(commonType === null) {\n          commonType = itemType;\n        } else if(itemType !== commonType) {\n          commonType = '@none';\n        }\n        // there are different languages and types in the list, so choose\n        // the most generic term, no need to keep iterating the list\n        if(commonLanguage === '@none' && commonType === '@none') {\n          break;\n        }\n      }\n      commonLanguage = commonLanguage || '@none';\n      commonType = commonType || '@none';\n      if(commonType !== '@none') {\n        typeOrLanguage = '@type';\n        typeOrLanguageValue = commonType;\n      } else {\n        typeOrLanguageValue = commonLanguage;\n      }\n    } else {\n      if(_isValue(value)) {\n        if('@language' in value && !('@index' in value)) {\n          containers.push('@language');\n          typeOrLanguageValue = value['@language'];\n        } else if('@type' in value) {\n          typeOrLanguage = '@type';\n          typeOrLanguageValue = value['@type'];\n        }\n      } else {\n        typeOrLanguage = '@type';\n        typeOrLanguageValue = '@id';\n      }\n      containers.push('@set');\n    }\n\n    // do term selection\n    containers.push('@none');\n    var term = _selectTerm(\n      activeCtx, iri, value, containers, typeOrLanguage, typeOrLanguageValue);\n    if(term !== null) {\n      return term;\n    }\n  }\n\n  // no term match, use @vocab if available\n  if(relativeTo.vocab) {\n    if('@vocab' in activeCtx) {\n      // determine if vocab is a prefix of the iri\n      var vocab = activeCtx['@vocab'];\n      if(iri.indexOf(vocab) === 0 && iri !== vocab) {\n        // use suffix as relative iri if it is not a term in the active context\n        var suffix = iri.substr(vocab.length);\n        if(!(suffix in activeCtx.mappings)) {\n          return suffix;\n        }\n      }\n    }\n  }\n\n  // no term or @vocab match, check for possible CURIEs\n  var choice = null;\n  var idx = 0;\n  var partialMatches = [];\n  var iriMap = activeCtx.fastCurieMap;\n  // check for partial matches of against `iri`, which means look until\n  // iri.length - 1, not full length\n  var maxPartialLength = iri.length - 1;\n  for(; idx < maxPartialLength && iri[idx] in iriMap; ++idx) {\n    iriMap = iriMap[iri[idx]];\n    if('' in iriMap) {\n      partialMatches.push(iriMap[''][0]);\n    }\n  }\n  // check partial matches in reverse order to prefer longest ones first\n  for(var i = partialMatches.length - 1; i >= 0; --i) {\n    var entry = partialMatches[i];\n    var terms = entry.terms;\n    for(var ti = 0; ti < terms.length; ++ti) {\n      // a CURIE is usable if:\n      // 1. it has no mapping, OR\n      // 2. value is null, which means we're not compacting an @value, AND\n      //   the mapping matches the IRI\n      var curie = terms[ti] + ':' + iri.substr(entry.iri.length);\n      var isUsableCurie = (!(curie in activeCtx.mappings) ||\n        (value === null && activeCtx.mappings[curie]['@id'] === iri));\n\n      // select curie if it is shorter or the same length but lexicographically\n      // less than the current choice\n      if(isUsableCurie && (choice === null ||\n        _compareShortestLeast(curie, choice) < 0)) {\n        choice = curie;\n      }\n    }\n  }\n\n  // return chosen curie\n  if(choice !== null) {\n    return choice;\n  }\n\n  // compact IRI relative to base\n  if(!relativeTo.vocab) {\n    return _removeBase(activeCtx['@base'], iri);\n  }\n\n  // return IRI as is\n  return iri;\n}\n\n/**\n * Performs value compaction on an object with '@value' or '@id' as the only\n * property.\n *\n * @param activeCtx the active context.\n * @param activeProperty the active property that points to the value.\n * @param value the value to compact.\n *\n * @return the compaction result.\n */\nfunction _compactValue(activeCtx, activeProperty, value) {\n  // value is a @value\n  if(_isValue(value)) {\n    // get context rules\n    var type = jsonld.getContextValue(activeCtx, activeProperty, '@type');\n    var language = jsonld.getContextValue(\n      activeCtx, activeProperty, '@language');\n    var container = jsonld.getContextValue(\n      activeCtx, activeProperty, '@container');\n\n    // whether or not the value has an @index that must be preserved\n    var preserveIndex = (('@index' in value) &&\n      container !== '@index');\n\n    // if there's no @index to preserve ...\n    if(!preserveIndex) {\n      // matching @type or @language specified in context, compact value\n      if(value['@type'] === type || value['@language'] === language) {\n        return value['@value'];\n      }\n    }\n\n    // return just the value of @value if all are true:\n    // 1. @value is the only key or @index isn't being preserved\n    // 2. there is no default language or @value is not a string or\n    //   the key has a mapping with a null @language\n    var keyCount = Object.keys(value).length;\n    var isValueOnlyKey = (keyCount === 1 ||\n      (keyCount === 2 && ('@index' in value) && !preserveIndex));\n    var hasDefaultLanguage = ('@language' in activeCtx);\n    var isValueString = _isString(value['@value']);\n    var hasNullMapping = (activeCtx.mappings[activeProperty] &&\n      activeCtx.mappings[activeProperty]['@language'] === null);\n    if(isValueOnlyKey &&\n      (!hasDefaultLanguage || !isValueString || hasNullMapping)) {\n      return value['@value'];\n    }\n\n    var rval = {};\n\n    // preserve @index\n    if(preserveIndex) {\n      rval[_compactIri(activeCtx, '@index')] = value['@index'];\n    }\n\n    if('@type' in value) {\n      // compact @type IRI\n      rval[_compactIri(activeCtx, '@type')] = _compactIri(\n        activeCtx, value['@type'], null, {vocab: true});\n    } else if('@language' in value) {\n      // alias @language\n      rval[_compactIri(activeCtx, '@language')] = value['@language'];\n    }\n\n    // alias @value\n    rval[_compactIri(activeCtx, '@value')] = value['@value'];\n\n    return rval;\n  }\n\n  // value is a subject reference\n  var expandedProperty = _expandIri(activeCtx, activeProperty, {vocab: true});\n  var type = jsonld.getContextValue(activeCtx, activeProperty, '@type');\n  var compacted = _compactIri(\n    activeCtx, value['@id'], null, {vocab: type === '@vocab'});\n\n  // compact to scalar\n  if(type === '@id' || type === '@vocab' || expandedProperty === '@graph') {\n    return compacted;\n  }\n\n  var rval = {};\n  rval[_compactIri(activeCtx, '@id')] = compacted;\n  return rval;\n}\n\n/**\n * Creates a term definition during context processing.\n *\n * @param activeCtx the current active context.\n * @param localCtx the local context being processed.\n * @param term the term in the local context to define the mapping for.\n * @param defined a map of defining/defined keys to detect cycles and prevent\n *          double definitions.\n */\nfunction _createTermDefinition(activeCtx, localCtx, term, defined) {\n  if(term in defined) {\n    // term already defined\n    if(defined[term]) {\n      return;\n    }\n    // cycle detected\n    throw new JsonLdError(\n      'Cyclical context definition detected.',\n      'jsonld.CyclicalContext',\n      {code: 'cyclic IRI mapping', context: localCtx, term: term});\n  }\n\n  // now defining term\n  defined[term] = false;\n\n  if(_isKeyword(term)) {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; keywords cannot be overridden.',\n      'jsonld.SyntaxError',\n      {code: 'keyword redefinition', context: localCtx, term: term});\n  }\n\n  if(term === '') {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; a term cannot be an empty string.',\n      'jsonld.SyntaxError',\n      {code: 'invalid term definition', context: localCtx});\n  }\n\n  // remove old mapping\n  if(activeCtx.mappings[term]) {\n    delete activeCtx.mappings[term];\n  }\n\n  // get context term value\n  var value = localCtx[term];\n\n  // clear context entry\n  if(value === null || (_isObject(value) && value['@id'] === null)) {\n    activeCtx.mappings[term] = null;\n    defined[term] = true;\n    return;\n  }\n\n  // convert short-hand value to object w/@id\n  if(_isString(value)) {\n    value = {'@id': value};\n  }\n\n  if(!_isObject(value)) {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; @context property values must be ' +\n      'strings or objects.',\n      'jsonld.SyntaxError',\n      {code: 'invalid term definition', context: localCtx});\n  }\n\n  // create new mapping\n  var mapping = activeCtx.mappings[term] = {};\n  mapping.reverse = false;\n\n  if('@reverse' in value) {\n    if('@id' in value) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; a @reverse term definition must not ' +\n        'contain @id.', 'jsonld.SyntaxError',\n        {code: 'invalid reverse property', context: localCtx});\n    }\n    var reverse = value['@reverse'];\n    if(!_isString(reverse)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; a @context @reverse value must be a string.',\n        'jsonld.SyntaxError', {code: 'invalid IRI mapping', context: localCtx});\n    }\n\n    // expand and add @id mapping\n    var id = _expandIri(\n      activeCtx, reverse, {vocab: true, base: false}, localCtx, defined);\n    if(!_isAbsoluteIri(id)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; a @context @reverse value must be an ' +\n        'absolute IRI or a blank node identifier.',\n        'jsonld.SyntaxError', {code: 'invalid IRI mapping', context: localCtx});\n    }\n    mapping['@id'] = id;\n    mapping.reverse = true;\n  } else if('@id' in value) {\n    var id = value['@id'];\n    if(!_isString(id)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; a @context @id value must be an array ' +\n        'of strings or a string.',\n        'jsonld.SyntaxError', {code: 'invalid IRI mapping', context: localCtx});\n    }\n    if(id !== term) {\n      // expand and add @id mapping\n      id = _expandIri(\n        activeCtx, id, {vocab: true, base: false}, localCtx, defined);\n      if(!_isAbsoluteIri(id) && !_isKeyword(id)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; a @context @id value must be an ' +\n          'absolute IRI, a blank node identifier, or a keyword.',\n          'jsonld.SyntaxError',\n          {code: 'invalid IRI mapping', context: localCtx});\n      }\n      mapping['@id'] = id;\n    }\n  }\n\n  // always compute whether term has a colon as an optimization for\n  // _compactIri\n  var colon = term.indexOf(':');\n  mapping._termHasColon = (colon !== -1);\n\n  if(!('@id' in mapping)) {\n    // see if the term has a prefix\n    if(mapping._termHasColon) {\n      var prefix = term.substr(0, colon);\n      if(prefix in localCtx) {\n        // define parent prefix\n        _createTermDefinition(activeCtx, localCtx, prefix, defined);\n      }\n\n      if(activeCtx.mappings[prefix]) {\n        // set @id based on prefix parent\n        var suffix = term.substr(colon + 1);\n        mapping['@id'] = activeCtx.mappings[prefix]['@id'] + suffix;\n      } else {\n        // term is an absolute IRI\n        mapping['@id'] = term;\n      }\n    } else {\n      // non-IRIs *must* define @ids if @vocab is not available\n      if(!('@vocab' in activeCtx)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; @context terms must define an @id.',\n          'jsonld.SyntaxError',\n          {code: 'invalid IRI mapping', context: localCtx, term: term});\n      }\n      // prepend vocab to term\n      mapping['@id'] = activeCtx['@vocab'] + term;\n    }\n  }\n\n  // IRI mapping now defined\n  defined[term] = true;\n\n  if('@type' in value) {\n    var type = value['@type'];\n    if(!_isString(type)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; an @context @type values must be a string.',\n        'jsonld.SyntaxError',\n        {code: 'invalid type mapping', context: localCtx});\n    }\n\n    if(type !== '@id' && type !== '@vocab') {\n      // expand @type to full IRI\n      type = _expandIri(\n        activeCtx, type, {vocab: true, base: false}, localCtx, defined);\n      if(!_isAbsoluteIri(type)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; an @context @type value must be an ' +\n          'absolute IRI.',\n          'jsonld.SyntaxError',\n          {code: 'invalid type mapping', context: localCtx});\n      }\n      if(type.indexOf('_:') === 0) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; an @context @type values must be an IRI, ' +\n          'not a blank node identifier.',\n          'jsonld.SyntaxError',\n          {code: 'invalid type mapping', context: localCtx});\n      }\n    }\n\n    // add @type to mapping\n    mapping['@type'] = type;\n  }\n\n  if('@container' in value) {\n    var container = value['@container'];\n    if(container !== '@list' && container !== '@set' &&\n      container !== '@index' && container !== '@language') {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context @container value must be ' +\n        'one of the following: @list, @set, @index, or @language.',\n        'jsonld.SyntaxError',\n        {code: 'invalid container mapping', context: localCtx});\n    }\n    if(mapping.reverse && container !== '@index' && container !== '@set' &&\n      container !== null) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context @container value for a @reverse ' +\n        'type definition must be @index or @set.', 'jsonld.SyntaxError',\n        {code: 'invalid reverse property', context: localCtx});\n    }\n\n    // add @container to mapping\n    mapping['@container'] = container;\n  }\n\n  if('@language' in value && !('@type' in value)) {\n    var language = value['@language'];\n    if(language !== null && !_isString(language)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context @language value must be ' +\n        'a string or null.', 'jsonld.SyntaxError',\n        {code: 'invalid language mapping', context: localCtx});\n    }\n\n    // add @language to mapping\n    if(language !== null) {\n      language = language.toLowerCase();\n    }\n    mapping['@language'] = language;\n  }\n\n  // disallow aliasing @context and @preserve\n  var id = mapping['@id'];\n  if(id === '@context' || id === '@preserve') {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; @context and @preserve cannot be aliased.',\n      'jsonld.SyntaxError', {code: 'invalid keyword alias', context: localCtx});\n  }\n}\n\n/**\n * Expands a string to a full IRI. The string may be a term, a prefix, a\n * relative IRI, or an absolute IRI. The associated absolute IRI will be\n * returned.\n *\n * @param activeCtx the current active context.\n * @param value the string to expand.\n * @param relativeTo options for how to resolve relative IRIs:\n *          base: true to resolve against the base IRI, false not to.\n *          vocab: true to concatenate after @vocab, false not to.\n * @param localCtx the local context being processed (only given if called\n *          during context processing).\n * @param defined a map for tracking cycles in context definitions (only given\n *          if called during context processing).\n *\n * @return the expanded value.\n */\nfunction _expandIri(activeCtx, value, relativeTo, localCtx, defined) {\n  // already expanded\n  if(value === null || _isKeyword(value)) {\n    return value;\n  }\n\n  // ensure value is interpreted as a string\n  value = String(value);\n\n  // define term dependency if not defined\n  if(localCtx && value in localCtx && defined[value] !== true) {\n    _createTermDefinition(activeCtx, localCtx, value, defined);\n  }\n\n  relativeTo = relativeTo || {};\n  if(relativeTo.vocab) {\n    var mapping = activeCtx.mappings[value];\n\n    // value is explicitly ignored with a null mapping\n    if(mapping === null) {\n      return null;\n    }\n\n    if(mapping) {\n      // value is a term\n      return mapping['@id'];\n    }\n  }\n\n  // split value into prefix:suffix\n  var colon = value.indexOf(':');\n  if(colon !== -1) {\n    var prefix = value.substr(0, colon);\n    var suffix = value.substr(colon + 1);\n\n    // do not expand blank nodes (prefix of '_') or already-absolute\n    // IRIs (suffix of '//')\n    if(prefix === '_' || suffix.indexOf('//') === 0) {\n      return value;\n    }\n\n    // prefix dependency not defined, define it\n    if(localCtx && prefix in localCtx) {\n      _createTermDefinition(activeCtx, localCtx, prefix, defined);\n    }\n\n    // use mapping if prefix is defined\n    var mapping = activeCtx.mappings[prefix];\n    if(mapping) {\n      return mapping['@id'] + suffix;\n    }\n\n    // already absolute IRI\n    return value;\n  }\n\n  // prepend vocab\n  if(relativeTo.vocab && '@vocab' in activeCtx) {\n    return activeCtx['@vocab'] + value;\n  }\n\n  // prepend base\n  var rval = value;\n  if(relativeTo.base) {\n    rval = jsonld.prependBase(activeCtx['@base'], rval);\n  }\n\n  return rval;\n}\n\nfunction _prependBase(base, iri) {\n  // skip IRI processing\n  if(base === null) {\n    return iri;\n  }\n  // already an absolute IRI\n  if(iri.indexOf(':') !== -1) {\n    return iri;\n  }\n\n  // parse base if it is a string\n  if(_isString(base)) {\n    base = jsonld.url.parse(base || '');\n  }\n\n  // parse given IRI\n  var rel = jsonld.url.parse(iri);\n\n  // per RFC3986 5.2.2\n  var transform = {\n    protocol: base.protocol || ''\n  };\n\n  if(rel.authority !== null) {\n    transform.authority = rel.authority;\n    transform.path = rel.path;\n    transform.query = rel.query;\n  } else {\n    transform.authority = base.authority;\n\n    if(rel.path === '') {\n      transform.path = base.path;\n      if(rel.query !== null) {\n        transform.query = rel.query;\n      } else {\n        transform.query = base.query;\n      }\n    } else {\n      if(rel.path.indexOf('/') === 0) {\n        // IRI represents an absolute path\n        transform.path = rel.path;\n      } else {\n        // merge paths\n        var path = base.path;\n\n        // append relative path to the end of the last directory from base\n        if(rel.path !== '') {\n          path = path.substr(0, path.lastIndexOf('/') + 1);\n          if(path.length > 0 && path.substr(-1) !== '/') {\n            path += '/';\n          }\n          path += rel.path;\n        }\n\n        transform.path = path;\n      }\n      transform.query = rel.query;\n    }\n  }\n\n  // remove slashes and dots in path\n  transform.path = _removeDotSegments(transform.path, !!transform.authority);\n\n  // construct URL\n  var rval = transform.protocol;\n  if(transform.authority !== null) {\n    rval += '//' + transform.authority;\n  }\n  rval += transform.path;\n  if(transform.query !== null) {\n    rval += '?' + transform.query;\n  }\n  if(rel.fragment !== null) {\n    rval += '#' + rel.fragment;\n  }\n\n  // handle empty base\n  if(rval === '') {\n    rval = './';\n  }\n\n  return rval;\n}\n\n/**\n * Removes a base IRI from the given absolute IRI.\n *\n * @param base the base IRI.\n * @param iri the absolute IRI.\n *\n * @return the relative IRI if relative to base, otherwise the absolute IRI.\n */\nfunction _removeBase(base, iri) {\n  // skip IRI processing\n  if(base === null) {\n    return iri;\n  }\n\n  if(_isString(base)) {\n    base = jsonld.url.parse(base || '');\n  }\n\n  // establish base root\n  var root = '';\n  if(base.href !== '') {\n    root += (base.protocol || '') + '//' + (base.authority || '');\n  } else if(iri.indexOf('//')) {\n    // support network-path reference with empty base\n    root += '//';\n  }\n\n  // IRI not relative to base\n  if(iri.indexOf(root) !== 0) {\n    return iri;\n  }\n\n  // remove root from IRI and parse remainder\n  var rel = jsonld.url.parse(iri.substr(root.length));\n\n  // remove path segments that match (do not remove last segment unless there\n  // is a hash or query)\n  var baseSegments = base.normalizedPath.split('/');\n  var iriSegments = rel.normalizedPath.split('/');\n  var last = (rel.fragment || rel.query) ? 0 : 1;\n  while(baseSegments.length > 0 && iriSegments.length > last) {\n    if(baseSegments[0] !== iriSegments[0]) {\n      break;\n    }\n    baseSegments.shift();\n    iriSegments.shift();\n  }\n\n  // use '../' for each non-matching base segment\n  var rval = '';\n  if(baseSegments.length > 0) {\n    // don't count the last segment (if it ends with '/' last path doesn't\n    // count and if it doesn't end with '/' it isn't a path)\n    baseSegments.pop();\n    for(var i = 0; i < baseSegments.length; ++i) {\n      rval += '../';\n    }\n  }\n\n  // prepend remaining segments\n  rval += iriSegments.join('/');\n\n  // add query and hash\n  if(rel.query !== null) {\n    rval += '?' + rel.query;\n  }\n  if(rel.fragment !== null) {\n    rval += '#' + rel.fragment;\n  }\n\n  // handle empty base\n  if(rval === '') {\n    rval = './';\n  }\n\n  return rval;\n}\n\n/**\n * Gets the initial context.\n *\n * @param options the options to use:\n *          [base] the document base IRI.\n *\n * @return the initial context.\n */\nfunction _getInitialContext(options) {\n  var base = jsonld.url.parse(options.base || '');\n  return {\n    '@base': base,\n    mappings: {},\n    inverse: null,\n    getInverse: _createInverseContext,\n    clone: _cloneActiveContext\n  };\n\n  /**\n   * Generates an inverse context for use in the compaction algorithm, if\n   * not already generated for the given active context.\n   *\n   * @return the inverse context.\n   */\n  function _createInverseContext() {\n    var activeCtx = this;\n\n    // lazily create inverse\n    if(activeCtx.inverse) {\n      return activeCtx.inverse;\n    }\n    var inverse = activeCtx.inverse = {};\n\n    // variables for building fast CURIE map\n    var fastCurieMap = activeCtx.fastCurieMap = {};\n    var irisToTerms = {};\n\n    // handle default language\n    var defaultLanguage = activeCtx['@language'] || '@none';\n\n    // create term selections for each mapping in the context, ordered by\n    // shortest and then lexicographically least\n    var mappings = activeCtx.mappings;\n    var terms = Object.keys(mappings).sort(_compareShortestLeast);\n    for(var i = 0; i < terms.length; ++i) {\n      var term = terms[i];\n      var mapping = mappings[term];\n      if(mapping === null) {\n        continue;\n      }\n\n      var container = mapping['@container'] || '@none';\n\n      // iterate over every IRI in the mapping\n      var ids = mapping['@id'];\n      if(!_isArray(ids)) {\n        ids = [ids];\n      }\n      for(var ii = 0; ii < ids.length; ++ii) {\n        var iri = ids[ii];\n        var entry = inverse[iri];\n        var isKeyword = _isKeyword(iri);\n\n        if(!entry) {\n          // initialize entry\n          inverse[iri] = entry = {};\n\n          if(!isKeyword && !mapping._termHasColon) {\n            // init IRI to term map and fast CURIE prefixes\n            irisToTerms[iri] = [term];\n            var fastCurieEntry = {iri: iri, terms: irisToTerms[iri]};\n            if(iri[0] in fastCurieMap) {\n              fastCurieMap[iri[0]].push(fastCurieEntry);\n            } else {\n              fastCurieMap[iri[0]] = [fastCurieEntry];\n            }\n          }\n        } else if(!isKeyword && !mapping._termHasColon) {\n          // add IRI to term match\n          irisToTerms[iri].push(term);\n        }\n\n        // add new entry\n        if(!entry[container]) {\n          entry[container] = {\n            '@language': {},\n            '@type': {}\n          };\n        }\n        entry = entry[container];\n\n        if(mapping.reverse) {\n          // term is preferred for values using @reverse\n          _addPreferredTerm(mapping, term, entry['@type'], '@reverse');\n        } else if('@type' in mapping) {\n          // term is preferred for values using specific type\n          _addPreferredTerm(mapping, term, entry['@type'], mapping['@type']);\n        } else if('@language' in mapping) {\n          // term is preferred for values using specific language\n          var language = mapping['@language'] || '@null';\n          _addPreferredTerm(mapping, term, entry['@language'], language);\n        } else {\n          // term is preferred for values w/default language or no type and\n          // no language\n          // add an entry for the default language\n          _addPreferredTerm(mapping, term, entry['@language'], defaultLanguage);\n\n          // add entries for no type and no language\n          _addPreferredTerm(mapping, term, entry['@type'], '@none');\n          _addPreferredTerm(mapping, term, entry['@language'], '@none');\n        }\n      }\n    }\n\n    // build fast CURIE map\n    for(var key in fastCurieMap) {\n      _buildIriMap(fastCurieMap, key, 1);\n    }\n\n    return inverse;\n  }\n\n  /**\n   * Runs a recursive algorithm to build a lookup map for quickly finding\n   * potential CURIEs.\n   *\n   * @param iriMap the map to build.\n   * @param key the current key in the map to work on.\n   * @param idx the index into the IRI to compare.\n   */\n  function _buildIriMap(iriMap, key, idx) {\n    var entries = iriMap[key];\n    var next = iriMap[key] = {};\n\n    var iri;\n    var letter;\n    for(var i = 0; i < entries.length; ++i) {\n      iri = entries[i].iri;\n      if(idx >= iri.length) {\n        letter = '';\n      } else {\n        letter = iri[idx];\n      }\n      if(letter in next) {\n        next[letter].push(entries[i]);\n      } else {\n        next[letter] = [entries[i]];\n      }\n    }\n\n    for(var key in next) {\n      if(key === '') {\n        continue;\n      }\n      _buildIriMap(next, key, idx + 1);\n    }\n  }\n\n  /**\n   * Adds the term for the given entry if not already added.\n   *\n   * @param mapping the term mapping.\n   * @param term the term to add.\n   * @param entry the inverse context typeOrLanguage entry to add to.\n   * @param typeOrLanguageValue the key in the entry to add to.\n   */\n  function _addPreferredTerm(mapping, term, entry, typeOrLanguageValue) {\n    if(!(typeOrLanguageValue in entry)) {\n      entry[typeOrLanguageValue] = term;\n    }\n  }\n\n  /**\n   * Clones an active context, creating a child active context.\n   *\n   * @return a clone (child) of the active context.\n   */\n  function _cloneActiveContext() {\n    var child = {};\n    child['@base'] = this['@base'];\n    child.mappings = _clone(this.mappings);\n    child.clone = this.clone;\n    child.inverse = null;\n    child.getInverse = this.getInverse;\n    if('@language' in this) {\n      child['@language'] = this['@language'];\n    }\n    if('@vocab' in this) {\n      child['@vocab'] = this['@vocab'];\n    }\n    return child;\n  }\n}\n\n/**\n * Returns whether or not the given value is a keyword.\n *\n * @param v the value to check.\n *\n * @return true if the value is a keyword, false if not.\n */\nfunction _isKeyword(v) {\n  if(!_isString(v)) {\n    return false;\n  }\n  switch(v) {\n  case '@base':\n  case '@context':\n  case '@container':\n  case '@default':\n  case '@embed':\n  case '@explicit':\n  case '@graph':\n  case '@id':\n  case '@index':\n  case '@language':\n  case '@list':\n  case '@omitDefault':\n  case '@preserve':\n  case '@requireAll':\n  case '@reverse':\n  case '@set':\n  case '@type':\n  case '@value':\n  case '@vocab':\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if the given value is an Object.\n *\n * @param v the value to check.\n *\n * @return true if the value is an Object, false if not.\n */\nfunction _isObject(v) {\n  return (Object.prototype.toString.call(v) === '[object Object]');\n}\n\n/**\n * Returns true if the given value is an empty Object.\n *\n * @param v the value to check.\n *\n * @return true if the value is an empty Object, false if not.\n */\nfunction _isEmptyObject(v) {\n  return _isObject(v) && Object.keys(v).length === 0;\n}\n\n/**\n * Returns true if the given value is an Array.\n *\n * @param v the value to check.\n *\n * @return true if the value is an Array, false if not.\n */\nfunction _isArray(v) {\n  return Array.isArray(v);\n}\n\n/**\n * Throws an exception if the given value is not a valid @type value.\n *\n * @param v the value to check.\n */\nfunction _validateTypeValue(v) {\n  // can be a string or an empty object\n  if(_isString(v) || _isEmptyObject(v)) {\n    return;\n  }\n\n  // must be an array\n  var isValid = false;\n  if(_isArray(v)) {\n    // must contain only strings\n    isValid = true;\n    for(var i = 0; i < v.length; ++i) {\n      if(!(_isString(v[i]))) {\n        isValid = false;\n        break;\n      }\n    }\n  }\n\n  if(!isValid) {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; \"@type\" value must a string, an array of ' +\n      'strings, or an empty object.', 'jsonld.SyntaxError',\n      {code: 'invalid type value', value: v});\n  }\n}\n\n/**\n * Returns true if the given value is a String.\n *\n * @param v the value to check.\n *\n * @return true if the value is a String, false if not.\n */\nfunction _isString(v) {\n  return (typeof v === 'string' ||\n    Object.prototype.toString.call(v) === '[object String]');\n}\n\n/**\n * Returns true if the given value is a Number.\n *\n * @param v the value to check.\n *\n * @return true if the value is a Number, false if not.\n */\nfunction _isNumber(v) {\n  return (typeof v === 'number' ||\n    Object.prototype.toString.call(v) === '[object Number]');\n}\n\n/**\n * Returns true if the given value is a double.\n *\n * @param v the value to check.\n *\n * @return true if the value is a double, false if not.\n */\nfunction _isDouble(v) {\n  return _isNumber(v) && String(v).indexOf('.') !== -1;\n}\n\n/**\n * Returns true if the given value is numeric.\n *\n * @param v the value to check.\n *\n * @return true if the value is numeric, false if not.\n */\nfunction _isNumeric(v) {\n  return !isNaN(parseFloat(v)) && isFinite(v);\n}\n\n/**\n * Returns true if the given value is a Boolean.\n *\n * @param v the value to check.\n *\n * @return true if the value is a Boolean, false if not.\n */\nfunction _isBoolean(v) {\n  return (typeof v === 'boolean' ||\n    Object.prototype.toString.call(v) === '[object Boolean]');\n}\n\n/**\n * Returns true if the given value is undefined.\n *\n * @param v the value to check.\n *\n * @return true if the value is undefined, false if not.\n */\nfunction _isUndefined(v) {\n  return (typeof v === 'undefined');\n}\n\n/**\n * Returns true if the given value is a subject with properties.\n *\n * @param v the value to check.\n *\n * @return true if the value is a subject with properties, false if not.\n */\nfunction _isSubject(v) {\n  // Note: A value is a subject if all of these hold true:\n  // 1. It is an Object.\n  // 2. It is not a @value, @set, or @list.\n  // 3. It has more than 1 key OR any existing key is not @id.\n  var rval = false;\n  if(_isObject(v) &&\n    !(('@value' in v) || ('@set' in v) || ('@list' in v))) {\n    var keyCount = Object.keys(v).length;\n    rval = (keyCount > 1 || !('@id' in v));\n  }\n  return rval;\n}\n\n/**\n * Returns true if the given value is a subject reference.\n *\n * @param v the value to check.\n *\n * @return true if the value is a subject reference, false if not.\n */\nfunction _isSubjectReference(v) {\n  // Note: A value is a subject reference if all of these hold true:\n  // 1. It is an Object.\n  // 2. It has a single key: @id.\n  return (_isObject(v) && Object.keys(v).length === 1 && ('@id' in v));\n}\n\n/**\n * Returns true if the given value is a @value.\n *\n * @param v the value to check.\n *\n * @return true if the value is a @value, false if not.\n */\nfunction _isValue(v) {\n  // Note: A value is a @value if all of these hold true:\n  // 1. It is an Object.\n  // 2. It has the @value property.\n  return _isObject(v) && ('@value' in v);\n}\n\n/**\n * Returns true if the given value is a @list.\n *\n * @param v the value to check.\n *\n * @return true if the value is a @list, false if not.\n */\nfunction _isList(v) {\n  // Note: A value is a @list if all of these hold true:\n  // 1. It is an Object.\n  // 2. It has the @list property.\n  return _isObject(v) && ('@list' in v);\n}\n\n/**\n * Returns true if the given value is a blank node.\n *\n * @param v the value to check.\n *\n * @return true if the value is a blank node, false if not.\n */\nfunction _isBlankNode(v) {\n  // Note: A value is a blank node if all of these hold true:\n  // 1. It is an Object.\n  // 2. If it has an @id key its value begins with '_:'.\n  // 3. It has no keys OR is not a @value, @set, or @list.\n  var rval = false;\n  if(_isObject(v)) {\n    if('@id' in v) {\n      rval = (v['@id'].indexOf('_:') === 0);\n    } else {\n      rval = (Object.keys(v).length === 0 ||\n        !(('@value' in v) || ('@set' in v) || ('@list' in v)));\n    }\n  }\n  return rval;\n}\n\n/**\n * Returns true if the given value is an absolute IRI, false if not.\n *\n * @param v the value to check.\n *\n * @return true if the value is an absolute IRI, false if not.\n */\nfunction _isAbsoluteIri(v) {\n  return _isString(v) && v.indexOf(':') !== -1;\n}\n\n/**\n * Clones an object, array, or string/number. If a typed JavaScript object\n * is given, such as a Date, it will be converted to a string.\n *\n * @param value the value to clone.\n *\n * @return the cloned value.\n */\nfunction _clone(value) {\n  if(value && typeof value === 'object') {\n    var rval;\n    if(_isArray(value)) {\n      rval = [];\n      for(var i = 0; i < value.length; ++i) {\n        rval[i] = _clone(value[i]);\n      }\n    } else if(_isObject(value)) {\n      rval = {};\n      for(var key in value) {\n        rval[key] = _clone(value[key]);\n      }\n    } else {\n      rval = value.toString();\n    }\n    return rval;\n  }\n  return value;\n}\n\n/**\n * Finds all @context URLs in the given JSON-LD input.\n *\n * @param input the JSON-LD input.\n * @param urls a map of URLs (url => false/@contexts).\n * @param replace true to replace the URLs in the given input with the\n *           @contexts from the urls map, false not to.\n * @param base the base IRI to use to resolve relative IRIs.\n *\n * @return true if new URLs to retrieve were found, false if not.\n */\nfunction _findContextUrls(input, urls, replace, base) {\n  var count = Object.keys(urls).length;\n  if(_isArray(input)) {\n    for(var i = 0; i < input.length; ++i) {\n      _findContextUrls(input[i], urls, replace, base);\n    }\n    return (count < Object.keys(urls).length);\n  } else if(_isObject(input)) {\n    for(var key in input) {\n      if(key !== '@context') {\n        _findContextUrls(input[key], urls, replace, base);\n        continue;\n      }\n\n      // get @context\n      var ctx = input[key];\n\n      // array @context\n      if(_isArray(ctx)) {\n        var length = ctx.length;\n        for(var i = 0; i < length; ++i) {\n          var _ctx = ctx[i];\n          if(_isString(_ctx)) {\n            _ctx = jsonld.prependBase(base, _ctx);\n            // replace w/@context if requested\n            if(replace) {\n              _ctx = urls[_ctx];\n              if(_isArray(_ctx)) {\n                // add flattened context\n                Array.prototype.splice.apply(ctx, [i, 1].concat(_ctx));\n                i += _ctx.length - 1;\n                length = ctx.length;\n              } else {\n                ctx[i] = _ctx;\n              }\n            } else if(!(_ctx in urls)) {\n              // @context URL found\n              urls[_ctx] = false;\n            }\n          }\n        }\n      } else if(_isString(ctx)) {\n        // string @context\n        ctx = jsonld.prependBase(base, ctx);\n        // replace w/@context if requested\n        if(replace) {\n          input[key] = urls[ctx];\n        } else if(!(ctx in urls)) {\n          // @context URL found\n          urls[ctx] = false;\n        }\n      }\n    }\n    return (count < Object.keys(urls).length);\n  }\n  return false;\n}\n\n/**\n * Retrieves external @context URLs using the given document loader. Every\n * instance of @context in the input that refers to a URL will be replaced\n * with the JSON @context found at that URL.\n *\n * @param input the JSON-LD input with possible contexts.\n * @param options the options to use:\n *          documentLoader(url, callback(err, remoteDoc)) the document loader.\n * @param callback(err, input) called once the operation completes.\n */\nfunction _retrieveContextUrls(input, options, callback) {\n  // if any error occurs during URL resolution, quit\n  var error = null;\n\n  // recursive document loader\n  var documentLoader = options.documentLoader;\n  var retrieve = function(input, cycles, documentLoader, base, callback) {\n    if(Object.keys(cycles).length > MAX_CONTEXT_URLS) {\n      error = new JsonLdError(\n        'Maximum number of @context URLs exceeded.',\n        'jsonld.ContextUrlError',\n        {code: 'loading remote context failed', max: MAX_CONTEXT_URLS});\n      return callback(error);\n    }\n\n    // for tracking the URLs to retrieve\n    var urls = {};\n\n    // finished will be called once the URL queue is empty\n    var finished = function() {\n      // replace all URLs in the input\n      _findContextUrls(input, urls, true, base);\n      callback(null, input);\n    };\n\n    // find all URLs in the given input\n    if(!_findContextUrls(input, urls, false, base)) {\n      // no new URLs in input\n      finished();\n    }\n\n    // queue all unretrieved URLs\n    var queue = [];\n    for(var url in urls) {\n      if(urls[url] === false) {\n        queue.push(url);\n      }\n    }\n\n    // retrieve URLs in queue\n    var count = queue.length;\n    for(var i = 0; i < queue.length; ++i) {\n      (function(url) {\n        // check for context URL cycle\n        if(url in cycles) {\n          error = new JsonLdError(\n            'Cyclical @context URLs detected.',\n            'jsonld.ContextUrlError',\n            {code: 'recursive context inclusion', url: url});\n          return callback(error);\n        }\n        var _cycles = _clone(cycles);\n        _cycles[url] = true;\n        var done = function(err, remoteDoc) {\n          // short-circuit if there was an error with another URL\n          if(error) {\n            return;\n          }\n\n          var ctx = remoteDoc ? remoteDoc.document : null;\n\n          // parse string context as JSON\n          if(!err && _isString(ctx)) {\n            try {\n              ctx = JSON.parse(ctx);\n            } catch(ex) {\n              err = ex;\n            }\n          }\n\n          // ensure ctx is an object\n          if(err) {\n            err = new JsonLdError(\n              'Dereferencing a URL did not result in a valid JSON-LD object. ' +\n              'Possible causes are an inaccessible URL perhaps due to ' +\n              'a same-origin policy (ensure the server uses CORS if you are ' +\n              'using client-side JavaScript), too many redirects, a ' +\n              'non-JSON response, or more than one HTTP Link Header was ' +\n              'provided for a remote context.',\n              'jsonld.InvalidUrl',\n              {code: 'loading remote context failed', url: url, cause: err});\n          } else if(!_isObject(ctx)) {\n            err = new JsonLdError(\n              'Dereferencing a URL did not result in a JSON object. The ' +\n              'response was valid JSON, but it was not a JSON object.',\n              'jsonld.InvalidUrl',\n              {code: 'invalid remote context', url: url, cause: err});\n          }\n          if(err) {\n            error = err;\n            return callback(error);\n          }\n\n          // use empty context if no @context key is present\n          if(!('@context' in ctx)) {\n            ctx = {'@context': {}};\n          } else {\n            ctx = {'@context': ctx['@context']};\n          }\n\n          // append context URL to context if given\n          if(remoteDoc.contextUrl) {\n            if(!_isArray(ctx['@context'])) {\n              ctx['@context'] = [ctx['@context']];\n            }\n            ctx['@context'].push(remoteDoc.contextUrl);\n          }\n\n          // recurse\n          retrieve(ctx, _cycles, documentLoader, url, function(err, ctx) {\n            if(err) {\n              return callback(err);\n            }\n            urls[url] = ctx['@context'];\n            count -= 1;\n            if(count === 0) {\n              finished();\n            }\n          });\n        };\n        var promise = documentLoader(url, done);\n        if(promise && 'then' in promise) {\n          promise.then(done.bind(null, null), done);\n        }\n      }(queue[i]));\n    }\n  };\n  retrieve(input, {}, documentLoader, options.base, callback);\n}\n\n// define js 1.8.5 Object.keys method if not present\nif(!Object.keys) {\n  Object.keys = function(o) {\n    if(o !== Object(o)) {\n      throw new TypeError('Object.keys called on non-object');\n    }\n    var rval = [];\n    for(var p in o) {\n      if(Object.prototype.hasOwnProperty.call(o, p)) {\n        rval.push(p);\n      }\n    }\n    return rval;\n  };\n}\n\n/**\n * Parses RDF in the form of N-Quads.\n *\n * @param input the N-Quads input to parse.\n *\n * @return an RDF dataset.\n */\nfunction _parseNQuads(input) {\n  // define partial regexes\n  var iri = '(?:<([^:]+:[^>]*)>)';\n  var bnode = '(_:(?:[A-Za-z0-9]+))';\n  var plain = '\"([^\"\\\\\\\\]*(?:\\\\\\\\.[^\"\\\\\\\\]*)*)\"';\n  var datatype = '(?:\\\\^\\\\^' + iri + ')';\n  var language = '(?:@([a-z]+(?:-[a-z0-9]+)*))';\n  var literal = '(?:' + plain + '(?:' + datatype + '|' + language + ')?)';\n  var comment = '(?:#.*)?';\n  var ws = '[ \\\\t]+';\n  var wso = '[ \\\\t]*';\n  var eoln = /(?:\\r\\n)|(?:\\n)|(?:\\r)/g;\n  var empty = new RegExp('^' + wso + comment + '$');\n\n  // define quad part regexes\n  var subject = '(?:' + iri + '|' + bnode + ')' + ws;\n  var property = iri + ws;\n  var object = '(?:' + iri + '|' + bnode + '|' + literal + ')' + wso;\n  var graphName = '(?:\\\\.|(?:(?:' + iri + '|' + bnode + ')' + wso + '\\\\.))';\n\n  // full quad regex\n  var quad = new RegExp(\n    '^' + wso + subject + property + object + graphName + wso + comment + '$');\n\n  // build RDF dataset\n  var dataset = {};\n\n  // split N-Quad input into lines\n  var lines = input.split(eoln);\n  var lineNumber = 0;\n  for(var li = 0; li < lines.length; ++li) {\n    var line = lines[li];\n    lineNumber++;\n\n    // skip empty lines\n    if(empty.test(line)) {\n      continue;\n    }\n\n    // parse quad\n    var match = line.match(quad);\n    if(match === null) {\n      throw new JsonLdError(\n        'Error while parsing N-Quads; invalid quad.',\n        'jsonld.ParseError', {line: lineNumber});\n    }\n\n    // create RDF triple\n    var triple = {};\n\n    // get subject\n    if(!_isUndefined(match[1])) {\n      triple.subject = {type: 'IRI', value: match[1]};\n    } else {\n      triple.subject = {type: 'blank node', value: match[2]};\n    }\n\n    // get predicate\n    triple.predicate = {type: 'IRI', value: match[3]};\n\n    // get object\n    if(!_isUndefined(match[4])) {\n      triple.object = {type: 'IRI', value: match[4]};\n    } else if(!_isUndefined(match[5])) {\n      triple.object = {type: 'blank node', value: match[5]};\n    } else {\n      triple.object = {type: 'literal'};\n      if(!_isUndefined(match[7])) {\n        triple.object.datatype = match[7];\n      } else if(!_isUndefined(match[8])) {\n        triple.object.datatype = RDF_LANGSTRING;\n        triple.object.language = match[8];\n      } else {\n        triple.object.datatype = XSD_STRING;\n      }\n      var unescaped = match[6]\n        .replace(/\\\\\"/g, '\"')\n        .replace(/\\\\t/g, '\\t')\n        .replace(/\\\\n/g, '\\n')\n        .replace(/\\\\r/g, '\\r')\n        .replace(/\\\\\\\\/g, '\\\\');\n      triple.object.value = unescaped;\n    }\n\n    // get graph name ('@default' is used for the default graph)\n    var name = '@default';\n    if(!_isUndefined(match[9])) {\n      name = match[9];\n    } else if(!_isUndefined(match[10])) {\n      name = match[10];\n    }\n\n    // initialize graph in dataset\n    if(!(name in dataset)) {\n      dataset[name] = [triple];\n    } else {\n      // add triple if unique to its graph\n      var unique = true;\n      var triples = dataset[name];\n      for(var ti = 0; unique && ti < triples.length; ++ti) {\n        if(_compareRDFTriples(triples[ti], triple)) {\n          unique = false;\n        }\n      }\n      if(unique) {\n        triples.push(triple);\n      }\n    }\n  }\n\n  return dataset;\n}\n\n// register the N-Quads RDF parser\njsonld.registerRDFParser('application/nquads', _parseNQuads);\n\n/**\n * Converts an RDF dataset to N-Quads.\n *\n * @param dataset the RDF dataset to convert.\n *\n * @return the N-Quads string.\n */\nfunction _toNQuads(dataset) {\n  var quads = [];\n  for(var graphName in dataset) {\n    var triples = dataset[graphName];\n    for(var ti = 0; ti < triples.length; ++ti) {\n      var triple = triples[ti];\n      if(graphName === '@default') {\n        graphName = null;\n      }\n      quads.push(_toNQuad(triple, graphName));\n    }\n  }\n  return quads.sort().join('');\n}\n\n/**\n * Converts an RDF triple and graph name to an N-Quad string (a single quad).\n *\n * @param triple the RDF triple or quad to convert (a triple or quad may be\n *          passed, if a triple is passed then `graphName` should be given\n *          to specify the name of the graph the triple is in, `null` for\n *          the default graph).\n * @param graphName the name of the graph containing the triple, null for\n *          the default graph.\n *\n * @return the N-Quad string.\n */\nfunction _toNQuad(triple, graphName) {\n  var s = triple.subject;\n  var p = triple.predicate;\n  var o = triple.object;\n  var g = graphName || null;\n  if('name' in triple && triple.name) {\n    g = triple.name.value;\n  }\n\n  var quad = '';\n\n  // subject is an IRI\n  if(s.type === 'IRI') {\n    quad += '<' + s.value + '>';\n  } else {\n    quad += s.value;\n  }\n  quad += ' ';\n\n  // predicate is an IRI\n  if(p.type === 'IRI') {\n    quad += '<' + p.value + '>';\n  } else {\n    quad += p.value;\n  }\n  quad += ' ';\n\n  // object is IRI, bnode, or literal\n  if(o.type === 'IRI') {\n    quad += '<' + o.value + '>';\n  } else if(o.type === 'blank node') {\n    quad += o.value;\n  } else {\n    var escaped = o.value\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/\\\"/g, '\\\\\"');\n    quad += '\"' + escaped + '\"';\n    if(o.datatype === RDF_LANGSTRING) {\n      if(o.language) {\n        quad += '@' + o.language;\n      }\n    } else if(o.datatype !== XSD_STRING) {\n      quad += '^^<' + o.datatype + '>';\n    }\n  }\n\n  // graph\n  if(g !== null && g !== undefined) {\n    if(g.indexOf('_:') !== 0) {\n      quad += ' <' + g + '>';\n    } else {\n      quad += ' ' + g;\n    }\n  }\n\n  quad += ' .\\n';\n  return quad;\n}\n\n/**\n * Parses the RDF dataset found via the data object from the RDFa API.\n *\n * @param data the RDFa API data object.\n *\n * @return the RDF dataset.\n */\nfunction _parseRdfaApiData(data) {\n  var dataset = {};\n  dataset['@default'] = [];\n\n  var subjects = data.getSubjects();\n  for(var si = 0; si < subjects.length; ++si) {\n    var subject = subjects[si];\n    if(subject === null) {\n      continue;\n    }\n\n    // get all related triples\n    var triples = data.getSubjectTriples(subject);\n    if(triples === null) {\n      continue;\n    }\n    var predicates = triples.predicates;\n    for(var predicate in predicates) {\n      // iterate over objects\n      var objects = predicates[predicate].objects;\n      for(var oi = 0; oi < objects.length; ++oi) {\n        var object = objects[oi];\n\n        // create RDF triple\n        var triple = {};\n\n        // add subject\n        if(subject.indexOf('_:') === 0) {\n          triple.subject = {type: 'blank node', value: subject};\n        } else {\n          triple.subject = {type: 'IRI', value: subject};\n        }\n\n        // add predicate\n        if(predicate.indexOf('_:') === 0) {\n          triple.predicate = {type: 'blank node', value: predicate};\n        } else {\n          triple.predicate = {type: 'IRI', value: predicate};\n        }\n\n        // serialize XML literal\n        var value = object.value;\n        if(object.type === RDF_XML_LITERAL) {\n          // initialize XMLSerializer\n          if(!XMLSerializer) {\n            _defineXMLSerializer();\n          }\n          var serializer = new XMLSerializer();\n          value = '';\n          for(var x = 0; x < object.value.length; x++) {\n            if(object.value[x].nodeType === Node.ELEMENT_NODE) {\n              value += serializer.serializeToString(object.value[x]);\n            } else if(object.value[x].nodeType === Node.TEXT_NODE) {\n              value += object.value[x].nodeValue;\n            }\n          }\n        }\n\n        // add object\n        triple.object = {};\n\n        // object is an IRI\n        if(object.type === RDF_OBJECT) {\n          if(object.value.indexOf('_:') === 0) {\n            triple.object.type = 'blank node';\n          } else {\n            triple.object.type = 'IRI';\n          }\n        } else {\n          // object is a literal\n          triple.object.type = 'literal';\n          if(object.type === RDF_PLAIN_LITERAL) {\n            if(object.language) {\n              triple.object.datatype = RDF_LANGSTRING;\n              triple.object.language = object.language;\n            } else {\n              triple.object.datatype = XSD_STRING;\n            }\n          } else {\n            triple.object.datatype = object.type;\n          }\n        }\n        triple.object.value = value;\n\n        // add triple to dataset in default graph\n        dataset['@default'].push(triple);\n      }\n    }\n  }\n\n  return dataset;\n}\n\n// register the RDFa API RDF parser\njsonld.registerRDFParser('rdfa-api', _parseRdfaApiData);\n\n/**\n * Creates a new IdentifierIssuer. A IdentifierIssuer issues unique\n * identifiers, keeping track of any previously issued identifiers.\n *\n * @param prefix the prefix to use ('<prefix><counter>').\n */\nfunction IdentifierIssuer(prefix) {\n  this.prefix = prefix;\n  this.counter = 0;\n  this.existing = {};\n}\njsonld.IdentifierIssuer = IdentifierIssuer;\n// backwards-compability\njsonld.UniqueNamer = IdentifierIssuer;\n\n/**\n * Copies this IdentifierIssuer.\n *\n * @return a copy of this IdentifierIssuer.\n */\nIdentifierIssuer.prototype.clone = function() {\n  var copy = new IdentifierIssuer(this.prefix);\n  copy.counter = this.counter;\n  copy.existing = _clone(this.existing);\n  return copy;\n};\n\n/**\n * Gets the new identifier for the given old identifier, where if no old\n * identifier is given a new identifier will be generated.\n *\n * @param [old] the old identifier to get the new identifier for.\n *\n * @return the new identifier.\n */\nIdentifierIssuer.prototype.getId = function(old) {\n  // return existing old identifier\n  if(old && old in this.existing) {\n    return this.existing[old];\n  }\n\n  // get next identifier\n  var identifier = this.prefix + this.counter;\n  this.counter += 1;\n\n  // save mapping\n  if(old) {\n    this.existing[old] = identifier;\n  }\n\n  return identifier;\n};\n// alias\nIdentifierIssuer.prototype.getName = IdentifierIssuer.prototype.getName;\n\n/**\n * Returns true if the given old identifer has already been assigned a new\n * identifier.\n *\n * @param old the old identifier to check.\n *\n * @return true if the old identifier has been assigned a new identifier, false\n *   if not.\n */\nIdentifierIssuer.prototype.hasId = function(old) {\n  return (old in this.existing);\n};\n// alias\nIdentifierIssuer.prototype.isNamed = IdentifierIssuer.prototype.hasId;\n\n/**\n * A Permutator iterates over all possible permutations of the given array\n * of elements.\n *\n * @param list the array of elements to iterate over.\n */\nvar Permutator = function(list) {\n  // original array\n  this.list = list.sort();\n  // indicates whether there are more permutations\n  this.done = false;\n  // directional info for permutation algorithm\n  this.left = {};\n  for(var i = 0; i < list.length; ++i) {\n    this.left[list[i]] = true;\n  }\n};\n\n/**\n * Returns true if there is another permutation.\n *\n * @return true if there is another permutation, false if not.\n */\nPermutator.prototype.hasNext = function() {\n  return !this.done;\n};\n\n/**\n * Gets the next permutation. Call hasNext() to ensure there is another one\n * first.\n *\n * @return the next permutation.\n */\nPermutator.prototype.next = function() {\n  // copy current permutation\n  var rval = this.list.slice();\n\n  /* Calculate the next permutation using the Steinhaus-Johnson-Trotter\n   permutation algorithm. */\n\n  // get largest mobile element k\n  // (mobile: element is greater than the one it is looking at)\n  var k = null;\n  var pos = 0;\n  var length = this.list.length;\n  for(var i = 0; i < length; ++i) {\n    var element = this.list[i];\n    var left = this.left[element];\n    if((k === null || element > k) &&\n      ((left && i > 0 && element > this.list[i - 1]) ||\n      (!left && i < (length - 1) && element > this.list[i + 1]))) {\n      k = element;\n      pos = i;\n    }\n  }\n\n  // no more permutations\n  if(k === null) {\n    this.done = true;\n  } else {\n    // swap k and the element it is looking at\n    var swap = this.left[k] ? pos - 1 : pos + 1;\n    this.list[pos] = this.list[swap];\n    this.list[swap] = k;\n\n    // reverse the direction of all elements larger than k\n    for(var i = 0; i < length; ++i) {\n      if(this.list[i] > k) {\n        this.left[this.list[i]] = !this.left[this.list[i]];\n      }\n    }\n  }\n\n  return rval;\n};\n\n//////////////////////// DEFINE NORMALIZATION HASH API ////////////////////////\n\n/**\n * Creates a new NormalizeHash for use by the given normalization algorithm.\n *\n * @param algorithm the RDF Dataset Normalization algorithm to use:\n *          'URDNA2015' or 'URGNA2012'.\n */\nvar NormalizeHash = function(algorithm) {\n  if(!(this instanceof NormalizeHash)) {\n    return new NormalizeHash(algorithm);\n  }\n  if(['URDNA2015', 'URGNA2012'].indexOf(algorithm) === -1) {\n    throw new Error(\n      'Invalid RDF Dataset Normalization algorithm: ' + algorithm);\n  }\n  NormalizeHash._init.call(this, algorithm);\n};\nNormalizeHash.hashNQuads = function(algorithm, nquads) {\n  var md = new NormalizeHash(algorithm);\n  for(var i = 0; i < nquads.length; ++i) {\n    md.update(nquads[i]);\n  }\n  return md.digest();\n};\n\n// switch definition of NormalizeHash based on environment\n(function(_nodejs) {\n\nif(_nodejs) {\n  // define NormalizeHash using native crypto lib\n  var crypto = require('crypto');\n  NormalizeHash._init = function(algorithm) {\n    if(algorithm === 'URDNA2015') {\n      algorithm = 'sha256';\n    } else {\n      // assume URGNA2012\n      algorithm = 'sha1';\n    }\n    this.md = crypto.createHash(algorithm);\n  };\n  NormalizeHash.prototype.update = function(msg) {\n    return this.md.update(msg, 'utf8');\n  };\n  NormalizeHash.prototype.digest = function() {\n    return this.md.digest('hex');\n  };\n  return;\n}\n\n// define NormalizeHash using JavaScript\nNormalizeHash._init = function(algorithm) {\n  if(algorithm === 'URDNA2015') {\n    algorithm = new sha256.Algorithm();\n  } else {\n    // assume URGNA2012\n    algorithm = new sha1.Algorithm();\n  }\n  this.md = new MessageDigest(algorithm);\n};\nNormalizeHash.prototype.update = function(msg) {\n  return this.md.update(msg);\n};\nNormalizeHash.prototype.digest = function() {\n  return this.md.digest().toHex();\n};\n\n/////////////////////////// DEFINE MESSAGE DIGEST API /////////////////////////\n\n/**\n * Creates a new MessageDigest.\n *\n * @param algorithm the algorithm to use.\n */\nvar MessageDigest = function(algorithm) {\n  if(!(this instanceof MessageDigest)) {\n    return new MessageDigest(algorithm);\n  }\n\n  this._algorithm = algorithm;\n\n  // create shared padding as needed\n  if(!MessageDigest._padding ||\n    MessageDigest._padding.length < this._algorithm.blockSize) {\n    MessageDigest._padding = String.fromCharCode(128);\n    var c = String.fromCharCode(0x00);\n    var n = 64;\n    while(n > 0) {\n      if(n & 1) {\n        MessageDigest._padding += c;\n      }\n      n >>>= 1;\n      if(n > 0) {\n        c += c;\n      }\n    }\n  }\n\n  // start digest automatically for first time\n  this.start();\n};\n\n/**\n * Starts the digest.\n *\n * @return this digest object.\n */\nMessageDigest.prototype.start = function() {\n  // up to 56-bit message length for convenience\n  this.messageLength = 0;\n\n  // full message length\n  this.fullMessageLength = [];\n  var int32s = this._algorithm.messageLengthSize / 4;\n  for(var i = 0; i < int32s; ++i) {\n    this.fullMessageLength.push(0);\n  }\n\n  // input buffer\n  this._input = new MessageDigest.ByteBuffer();\n\n  // get starting state\n  this.state = this._algorithm.start();\n\n  return this;\n};\n\n/**\n * Updates the digest with the given message input. The input must be\n * a string of characters.\n *\n * @param msg the message input to update with (ByteBuffer or string).\n *\n * @return this digest object.\n */\nMessageDigest.prototype.update = function(msg) {\n  // encode message as a UTF-8 encoded binary string\n  msg = new MessageDigest.ByteBuffer(unescape(encodeURIComponent(msg)));\n\n  // update message length\n  this.messageLength += msg.length();\n  var len = msg.length();\n  len = [(len / 0x100000000) >>> 0, len >>> 0];\n  for(var i = this.fullMessageLength.length - 1; i >= 0; --i) {\n    this.fullMessageLength[i] += len[1];\n    len[1] = len[0] + ((this.fullMessageLength[i] / 0x100000000) >>> 0);\n    this.fullMessageLength[i] = this.fullMessageLength[i] >>> 0;\n    len[0] = ((len[1] / 0x100000000) >>> 0);\n  }\n\n  // add bytes to input buffer\n  this._input.putBytes(msg.bytes());\n\n  // digest blocks\n  while(this._input.length() >= this._algorithm.blockSize) {\n    this.state = this._algorithm.digest(this.state, this._input);\n  }\n\n  // compact input buffer every 2K or if empty\n  if(this._input.read > 2048 || this._input.length() === 0) {\n    this._input.compact();\n  }\n\n  return this;\n};\n\n/**\n * Produces the digest.\n *\n * @return a byte buffer containing the digest value.\n */\nMessageDigest.prototype.digest = function() {\n  /* Note: Here we copy the remaining bytes in the input buffer and add the\n  appropriate padding. Then we do the final update on a copy of the state so\n  that if the user wants to get intermediate digests they can do so. */\n\n  /* Determine the number of bytes that must be added to the message to\n  ensure its length is appropriately congruent. In other words, the data to\n  be digested must be a multiple of `blockSize`. This data includes the\n  message, some padding, and the length of the message. Since the length of\n  the message will be encoded as `messageLengthSize` bytes, that means that\n  the last segment of the data must have `blockSize` - `messageLengthSize`\n  bytes of message and padding. Therefore, the length of the message plus the\n  padding must be congruent to X mod `blockSize` because\n  `blockSize` - `messageLengthSize` = X.\n\n  For example, SHA-1 is congruent to 448 mod 512 and SHA-512 is congruent to\n  896 mod 1024. SHA-1 uses a `blockSize` of 64 bytes (512 bits) and a\n  `messageLengthSize` of 8 bytes (64 bits). SHA-512 uses a `blockSize` of\n  128 bytes (1024 bits) and a `messageLengthSize` of 16 bytes (128 bits).\n\n  In order to fill up the message length it must be filled with padding that\n  begins with 1 bit followed by all 0 bits. Padding must *always* be present,\n  so if the message length is already congruent, then `blockSize` padding bits\n  must be added. */\n\n  // create final block\n  var finalBlock = new MessageDigest.ByteBuffer();\n  finalBlock.putBytes(this._input.bytes());\n\n  // compute remaining size to be digested (include message length size)\n  var remaining = (\n    this.fullMessageLength[this.fullMessageLength.length - 1] +\n    this._algorithm.messageLengthSize);\n\n  // add padding for overflow blockSize - overflow\n  // _padding starts with 1 byte with first bit is set (byte value 128), then\n  // there may be up to (blockSize - 1) other pad bytes\n  var overflow = remaining & (this._algorithm.blockSize - 1);\n  finalBlock.putBytes(MessageDigest._padding.substr(\n    0, this._algorithm.blockSize - overflow));\n\n  // serialize message length in bits in big-endian order; since length\n  // is stored in bytes we multiply by 8 (left shift by 3 and merge in\n  // remainder from )\n  var messageLength = new MessageDigest.ByteBuffer();\n  for(var i = 0; i < this.fullMessageLength.length; ++i) {\n    messageLength.putInt32((this.fullMessageLength[i] << 3) |\n      (this.fullMessageLength[i + 1] >>> 28));\n  }\n\n  // write the length of the message (algorithm-specific)\n  this._algorithm.writeMessageLength(finalBlock, messageLength);\n\n  // digest final block\n  var state = this._algorithm.digest(this.state.copy(), finalBlock);\n\n  // write state to buffer\n  var rval = new MessageDigest.ByteBuffer();\n  state.write(rval);\n  return rval;\n};\n\n/**\n * Creates a simple byte buffer for message digest operations.\n *\n * @param data the data to put in the buffer.\n */\nMessageDigest.ByteBuffer = function(data) {\n  if(typeof data === 'string') {\n    this.data = data;\n  } else {\n    this.data = '';\n  }\n  this.read = 0;\n};\n\n/**\n * Puts a 32-bit integer into this buffer in big-endian order.\n *\n * @param i the 32-bit integer.\n */\nMessageDigest.ByteBuffer.prototype.putInt32 = function(i) {\n  this.data += (\n    String.fromCharCode(i >> 24 & 0xFF) +\n    String.fromCharCode(i >> 16 & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i & 0xFF));\n};\n\n/**\n * Gets a 32-bit integer from this buffer in big-endian order and\n * advances the read pointer by 4.\n *\n * @return the word.\n */\nMessageDigest.ByteBuffer.prototype.getInt32 = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) << 24 ^\n    this.data.charCodeAt(this.read + 1) << 16 ^\n    this.data.charCodeAt(this.read + 2) << 8 ^\n    this.data.charCodeAt(this.read + 3));\n  this.read += 4;\n  return rval;\n};\n\n/**\n * Puts the given bytes into this buffer.\n *\n * @param bytes the bytes as a binary-encoded string.\n */\nMessageDigest.ByteBuffer.prototype.putBytes = function(bytes) {\n  this.data += bytes;\n};\n\n/**\n * Gets the bytes in this buffer.\n *\n * @return a string full of UTF-8 encoded characters.\n */\nMessageDigest.ByteBuffer.prototype.bytes = function() {\n  return this.data.slice(this.read);\n};\n\n/**\n * Gets the number of bytes in this buffer.\n *\n * @return the number of bytes in this buffer.\n */\nMessageDigest.ByteBuffer.prototype.length = function() {\n  return this.data.length - this.read;\n};\n\n/**\n * Compacts this buffer.\n */\nMessageDigest.ByteBuffer.prototype.compact = function() {\n  this.data = this.data.slice(this.read);\n  this.read = 0;\n};\n\n/**\n * Converts this buffer to a hexadecimal string.\n *\n * @return a hexadecimal string.\n */\nMessageDigest.ByteBuffer.prototype.toHex = function() {\n  var rval = '';\n  for(var i = this.read; i < this.data.length; ++i) {\n    var b = this.data.charCodeAt(i);\n    if(b < 16) {\n      rval += '0';\n    }\n    rval += b.toString(16);\n  }\n  return rval;\n};\n\n///////////////////////////// DEFINE SHA-1 ALGORITHM //////////////////////////\n\nvar sha1 = {\n  // used for word storage\n  _w: null\n};\n\nsha1.Algorithm = function() {\n  this.name = 'sha1',\n  this.blockSize = 64;\n  this.digestLength = 20;\n  this.messageLengthSize = 8;\n};\n\nsha1.Algorithm.prototype.start = function() {\n  if(!sha1._w) {\n    sha1._w = new Array(80);\n  }\n  return sha1._createState();\n};\n\nsha1.Algorithm.prototype.writeMessageLength = function(\n  finalBlock, messageLength) {\n  // message length is in bits and in big-endian order; simply append\n  finalBlock.putBytes(messageLength.bytes());\n};\n\nsha1.Algorithm.prototype.digest = function(s, input) {\n  // consume 512 bit (64 byte) chunks\n  var t, a, b, c, d, e, f, i;\n  var len = input.length();\n  var _w = sha1._w;\n  while(len >= 64) {\n    // initialize hash value for this chunk\n    a = s.h0;\n    b = s.h1;\n    c = s.h2;\n    d = s.h3;\n    e = s.h4;\n\n    // the _w array will be populated with sixteen 32-bit big-endian words\n    // and then extended into 80 32-bit words according to SHA-1 algorithm\n    // and for 32-79 using Max Locktyukhin's optimization\n\n    // round 1\n    for(i = 0; i < 16; ++i) {\n      t = input.getInt32();\n      _w[i] = t;\n      f = d ^ (b & (c ^ d));\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x5A827999 + t;\n      e = d;\n      d = c;\n      c = (b << 30) | (b >>> 2);\n      b = a;\n      a = t;\n    }\n    for(; i < 20; ++i) {\n      t = (_w[i - 3] ^ _w[i - 8] ^ _w[i - 14] ^ _w[i - 16]);\n      t = (t << 1) | (t >>> 31);\n      _w[i] = t;\n      f = d ^ (b & (c ^ d));\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x5A827999 + t;\n      e = d;\n      d = c;\n      c = (b << 30) | (b >>> 2);\n      b = a;\n      a = t;\n    }\n    // round 2\n    for(; i < 32; ++i) {\n      t = (_w[i - 3] ^ _w[i - 8] ^ _w[i - 14] ^ _w[i - 16]);\n      t = (t << 1) | (t >>> 31);\n      _w[i] = t;\n      f = b ^ c ^ d;\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x6ED9EBA1 + t;\n      e = d;\n      d = c;\n      c = (b << 30) | (b >>> 2);\n      b = a;\n      a = t;\n    }\n    for(; i < 40; ++i) {\n      t = (_w[i - 6] ^ _w[i - 16] ^ _w[i - 28] ^ _w[i - 32]);\n      t = (t << 2) | (t >>> 30);\n      _w[i] = t;\n      f = b ^ c ^ d;\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x6ED9EBA1 + t;\n      e = d;\n      d = c;\n      c = (b << 30) | (b >>> 2);\n      b = a;\n      a = t;\n    }\n    // round 3\n    for(; i < 60; ++i) {\n      t = (_w[i - 6] ^ _w[i - 16] ^ _w[i - 28] ^ _w[i - 32]);\n      t = (t << 2) | (t >>> 30);\n      _w[i] = t;\n      f = (b & c) | (d & (b ^ c));\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x8F1BBCDC + t;\n      e = d;\n      d = c;\n      c = (b << 30) | (b >>> 2);\n      b = a;\n      a = t;\n    }\n    // round 4\n    for(; i < 80; ++i) {\n      t = (_w[i - 6] ^ _w[i - 16] ^ _w[i - 28] ^ _w[i - 32]);\n      t = (t << 2) | (t >>> 30);\n      _w[i] = t;\n      f = b ^ c ^ d;\n      t = ((a << 5) | (a >>> 27)) + f + e + 0xCA62C1D6 + t;\n      e = d;\n      d = c;\n      c = (b << 30) | (b >>> 2);\n      b = a;\n      a = t;\n    }\n\n    // update hash state\n    s.h0 = (s.h0 + a) | 0;\n    s.h1 = (s.h1 + b) | 0;\n    s.h2 = (s.h2 + c) | 0;\n    s.h3 = (s.h3 + d) | 0;\n    s.h4 = (s.h4 + e) | 0;\n\n    len -= 64;\n  }\n\n  return s;\n};\n\nsha1._createState = function() {\n  var state = {\n    h0: 0x67452301,\n    h1: 0xEFCDAB89,\n    h2: 0x98BADCFE,\n    h3: 0x10325476,\n    h4: 0xC3D2E1F0\n  };\n  state.copy = function() {\n    var rval = sha1._createState();\n    rval.h0 = state.h0;\n    rval.h1 = state.h1;\n    rval.h2 = state.h2;\n    rval.h3 = state.h3;\n    rval.h4 = state.h4;\n    return rval;\n  };\n  state.write = function(buffer) {\n    buffer.putInt32(state.h0);\n    buffer.putInt32(state.h1);\n    buffer.putInt32(state.h2);\n    buffer.putInt32(state.h3);\n    buffer.putInt32(state.h4);\n  };\n  return state;\n};\n\n//////////////////////////// DEFINE SHA-256 ALGORITHM /////////////////////////\n\nvar sha256 = {\n  // shared state\n  _k: null,\n  _w: null\n};\n\nsha256.Algorithm = function() {\n  this.name = 'sha256',\n  this.blockSize = 64;\n  this.digestLength = 32;\n  this.messageLengthSize = 8;\n};\n\nsha256.Algorithm.prototype.start = function() {\n  if(!sha256._k) {\n    sha256._init();\n  }\n  return sha256._createState();\n};\n\nsha256.Algorithm.prototype.writeMessageLength = function(\n  finalBlock, messageLength) {\n  // message length is in bits and in big-endian order; simply append\n  finalBlock.putBytes(messageLength.bytes());\n};\n\nsha256.Algorithm.prototype.digest = function(s, input) {\n  // consume 512 bit (64 byte) chunks\n  var t1, t2, s0, s1, ch, maj, i, a, b, c, d, e, f, g, h;\n  var len = input.length();\n  var _k = sha256._k;\n  var _w = sha256._w;\n  while(len >= 64) {\n    // the w array will be populated with sixteen 32-bit big-endian words\n    // and then extended into 64 32-bit words according to SHA-256\n    for(i = 0; i < 16; ++i) {\n      _w[i] = input.getInt32();\n    }\n    for(; i < 64; ++i) {\n      // XOR word 2 words ago rot right 17, rot right 19, shft right 10\n      t1 = _w[i - 2];\n      t1 =\n        ((t1 >>> 17) | (t1 << 15)) ^\n        ((t1 >>> 19) | (t1 << 13)) ^\n        (t1 >>> 10);\n      // XOR word 15 words ago rot right 7, rot right 18, shft right 3\n      t2 = _w[i - 15];\n      t2 =\n        ((t2 >>> 7) | (t2 << 25)) ^\n        ((t2 >>> 18) | (t2 << 14)) ^\n        (t2 >>> 3);\n      // sum(t1, word 7 ago, t2, word 16 ago) modulo 2^32\n      _w[i] = (t1 + _w[i - 7] + t2 + _w[i - 16]) | 0;\n    }\n\n    // initialize hash value for this chunk\n    a = s.h0;\n    b = s.h1;\n    c = s.h2;\n    d = s.h3;\n    e = s.h4;\n    f = s.h5;\n    g = s.h6;\n    h = s.h7;\n\n    // round function\n    for(i = 0; i < 64; ++i) {\n      // Sum1(e)\n      s1 =\n        ((e >>> 6) | (e << 26)) ^\n        ((e >>> 11) | (e << 21)) ^\n        ((e >>> 25) | (e << 7));\n      // Ch(e, f, g) (optimized the same way as SHA-1)\n      ch = g ^ (e & (f ^ g));\n      // Sum0(a)\n      s0 =\n        ((a >>> 2) | (a << 30)) ^\n        ((a >>> 13) | (a << 19)) ^\n        ((a >>> 22) | (a << 10));\n      // Maj(a, b, c) (optimized the same way as SHA-1)\n      maj = (a & b) | (c & (a ^ b));\n\n      // main algorithm\n      t1 = h + s1 + ch + _k[i] + _w[i];\n      t2 = s0 + maj;\n      h = g;\n      g = f;\n      f = e;\n      e = (d + t1) | 0;\n      d = c;\n      c = b;\n      b = a;\n      a = (t1 + t2) | 0;\n    }\n\n    // update hash state\n    s.h0 = (s.h0 + a) | 0;\n    s.h1 = (s.h1 + b) | 0;\n    s.h2 = (s.h2 + c) | 0;\n    s.h3 = (s.h3 + d) | 0;\n    s.h4 = (s.h4 + e) | 0;\n    s.h5 = (s.h5 + f) | 0;\n    s.h6 = (s.h6 + g) | 0;\n    s.h7 = (s.h7 + h) | 0;\n    len -= 64;\n  }\n\n  return s;\n};\n\nsha256._createState = function() {\n  var state = {\n    h0: 0x6A09E667,\n    h1: 0xBB67AE85,\n    h2: 0x3C6EF372,\n    h3: 0xA54FF53A,\n    h4: 0x510E527F,\n    h5: 0x9B05688C,\n    h6: 0x1F83D9AB,\n    h7: 0x5BE0CD19\n  };\n  state.copy = function() {\n    var rval = sha256._createState();\n    rval.h0 = state.h0;\n    rval.h1 = state.h1;\n    rval.h2 = state.h2;\n    rval.h3 = state.h3;\n    rval.h4 = state.h4;\n    rval.h5 = state.h5;\n    rval.h6 = state.h6;\n    rval.h7 = state.h7;\n    return rval;\n  };\n  state.write = function(buffer) {\n    buffer.putInt32(state.h0);\n    buffer.putInt32(state.h1);\n    buffer.putInt32(state.h2);\n    buffer.putInt32(state.h3);\n    buffer.putInt32(state.h4);\n    buffer.putInt32(state.h5);\n    buffer.putInt32(state.h6);\n    buffer.putInt32(state.h7);\n  };\n  return state;\n};\n\nsha256._init = function() {\n  // create K table for SHA-256\n  sha256._k = [\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n    0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n    0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n    0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n    0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n    0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n    0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n    0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n    0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n\n  // used for word storage\n  sha256._w = new Array(64);\n};\n\n})(_nodejs); // end definition of NormalizeHash\n\nif(!XMLSerializer) {\n\nvar _defineXMLSerializer = function() {\n  XMLSerializer = require('xmldom').XMLSerializer;\n};\n\n} // end _defineXMLSerializer\n\n// define URL parser\n// parseUri 1.2.2\n// (c) Steven Levithan <stevenlevithan.com>\n// MIT License\n// with local jsonld.js modifications\njsonld.url = {};\njsonld.url.parsers = {\n  simple: {\n    // RFC 3986 basic parts\n    keys: ['href','scheme','authority','path','query','fragment'],\n    regex: /^(?:([^:\\/?#]+):)?(?:\\/\\/([^\\/?#]*))?([^?#]*)(?:\\?([^#]*))?(?:#(.*))?/\n  },\n  full: {\n    keys: ['href','protocol','scheme','authority','auth','user','password','hostname','port','path','directory','file','query','fragment'],\n    regex: /^(([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?(?:(((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/\n  }\n};\njsonld.url.parse = function(str, parser) {\n  var parsed = {};\n  var o = jsonld.url.parsers[parser || 'full'];\n  var m = o.regex.exec(str);\n  var i = o.keys.length;\n  while(i--) {\n    parsed[o.keys[i]] = (m[i] === undefined) ? null : m[i];\n  }\n  parsed.normalizedPath = _removeDotSegments(parsed.path, !!parsed.authority);\n  return parsed;\n};\n\n/**\n * Removes dot segments from a URL path.\n *\n * @param path the path to remove dot segments from.\n * @param hasAuthority true if the URL has an authority, false if not.\n */\nfunction _removeDotSegments(path, hasAuthority) {\n  var rval = '';\n\n  if(path.indexOf('/') === 0) {\n    rval = '/';\n  }\n\n  // RFC 3986 5.2.4 (reworked)\n  var input = path.split('/');\n  var output = [];\n  while(input.length > 0) {\n    if(input[0] === '.' || (input[0] === '' && input.length > 1)) {\n      input.shift();\n      continue;\n    }\n    if(input[0] === '..') {\n      input.shift();\n      if(hasAuthority ||\n        (output.length > 0 && output[output.length - 1] !== '..')) {\n        output.pop();\n      } else {\n        // leading relative URL '..'\n        output.push('..');\n      }\n      continue;\n    }\n    output.push(input.shift());\n  }\n\n  return rval + output.join('/');\n}\n\nif(_nodejs) {\n  // use node document loader by default\n  jsonld.useDocumentLoader('node');\n} else if(typeof XMLHttpRequest !== 'undefined') {\n  // use xhr document loader by default\n  jsonld.useDocumentLoader('xhr');\n}\n\nif(_nodejs) {\n  jsonld.use = function(extension) {\n    switch(extension) {\n      // TODO: Deprecated as of 0.4.0. Remove at some point.\n      case 'request':\n        // use node JSON-LD request extension\n        jsonld.request = require('jsonld-request');\n        break;\n      default:\n        throw new JsonLdError(\n          'Unknown extension.',\n          'jsonld.UnknownExtension', {extension: extension});\n    }\n  };\n\n  // expose version\n  var _module = {exports: {}, filename: __dirname};\n  require('pkginfo')(_module, 'version');\n  jsonld.version = _module.exports.version;\n}\n\n// end of jsonld API factory\nreturn jsonld;\n};\n\n// external APIs:\n\n// used to generate a new jsonld API instance\nvar factory = function() {\n  return wrapper(function() {\n    return factory();\n  });\n};\n\nif(!_nodejs && (typeof define === 'function' && define.amd)) {\n  // export AMD API\n  define([], function() {\n    // now that module is defined, wrap main jsonld API instance\n    wrapper(factory);\n    return factory;\n  });\n} else {\n  // wrap the main jsonld API instance\n  wrapper(factory);\n\n  if(typeof require === 'function' &&\n    typeof module !== 'undefined' && module.exports) {\n    // export CommonJS/nodejs API\n    module.exports = factory;\n  }\n\n  if(_browser) {\n    // export simple browser API\n    if(typeof jsonld === 'undefined') {\n      jsonld = jsonldjs = factory;\n    } else {\n      jsonldjs = factory;\n    }\n  }\n}\n\nreturn factory;\n\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/jsonld/js/jsonld.js\n// module id = 27\n// module chunks = 0","/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/jakearchibald/es6-promise/master/LICENSE\n * @version   2.3.0\n */\n\n(function() {\n    \"use strict\";\n    function lib$es6$promise$utils$$objectOrFunction(x) {\n      return typeof x === 'function' || (typeof x === 'object' && x !== null);\n    }\n\n    function lib$es6$promise$utils$$isFunction(x) {\n      return typeof x === 'function';\n    }\n\n    function lib$es6$promise$utils$$isMaybeThenable(x) {\n      return typeof x === 'object' && x !== null;\n    }\n\n    var lib$es6$promise$utils$$_isArray;\n    if (!Array.isArray) {\n      lib$es6$promise$utils$$_isArray = function (x) {\n        return Object.prototype.toString.call(x) === '[object Array]';\n      };\n    } else {\n      lib$es6$promise$utils$$_isArray = Array.isArray;\n    }\n\n    var lib$es6$promise$utils$$isArray = lib$es6$promise$utils$$_isArray;\n    var lib$es6$promise$asap$$len = 0;\n    var lib$es6$promise$asap$$toString = {}.toString;\n    var lib$es6$promise$asap$$vertxNext;\n    var lib$es6$promise$asap$$customSchedulerFn;\n\n    var lib$es6$promise$asap$$asap = function asap(callback, arg) {\n      lib$es6$promise$asap$$queue[lib$es6$promise$asap$$len] = callback;\n      lib$es6$promise$asap$$queue[lib$es6$promise$asap$$len + 1] = arg;\n      lib$es6$promise$asap$$len += 2;\n      if (lib$es6$promise$asap$$len === 2) {\n        // If len is 2, that means that we need to schedule an async flush.\n        // If additional callbacks are queued before the queue is flushed, they\n        // will be processed by this flush that we are scheduling.\n        if (lib$es6$promise$asap$$customSchedulerFn) {\n          lib$es6$promise$asap$$customSchedulerFn(lib$es6$promise$asap$$flush);\n        } else {\n          lib$es6$promise$asap$$scheduleFlush();\n        }\n      }\n    }\n\n    function lib$es6$promise$asap$$setScheduler(scheduleFn) {\n      lib$es6$promise$asap$$customSchedulerFn = scheduleFn;\n    }\n\n    function lib$es6$promise$asap$$setAsap(asapFn) {\n      lib$es6$promise$asap$$asap = asapFn;\n    }\n\n    var lib$es6$promise$asap$$browserWindow = (typeof window !== 'undefined') ? window : undefined;\n    var lib$es6$promise$asap$$browserGlobal = lib$es6$promise$asap$$browserWindow || {};\n    var lib$es6$promise$asap$$BrowserMutationObserver = lib$es6$promise$asap$$browserGlobal.MutationObserver || lib$es6$promise$asap$$browserGlobal.WebKitMutationObserver;\n    var lib$es6$promise$asap$$isNode = typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n\n    // test for web worker but not in IE10\n    var lib$es6$promise$asap$$isWorker = typeof Uint8ClampedArray !== 'undefined' &&\n      typeof importScripts !== 'undefined' &&\n      typeof MessageChannel !== 'undefined';\n\n    // node\n    function lib$es6$promise$asap$$useNextTick() {\n      var nextTick = process.nextTick;\n      // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n      // setImmediate should be used instead instead\n      var version = process.versions.node.match(/^(?:(\\d+)\\.)?(?:(\\d+)\\.)?(\\*|\\d+)$/);\n      if (Array.isArray(version) && version[1] === '0' && version[2] === '10') {\n        nextTick = setImmediate;\n      }\n      return function() {\n        nextTick(lib$es6$promise$asap$$flush);\n      };\n    }\n\n    // vertx\n    function lib$es6$promise$asap$$useVertxTimer() {\n      return function() {\n        lib$es6$promise$asap$$vertxNext(lib$es6$promise$asap$$flush);\n      };\n    }\n\n    function lib$es6$promise$asap$$useMutationObserver() {\n      var iterations = 0;\n      var observer = new lib$es6$promise$asap$$BrowserMutationObserver(lib$es6$promise$asap$$flush);\n      var node = document.createTextNode('');\n      observer.observe(node, { characterData: true });\n\n      return function() {\n        node.data = (iterations = ++iterations % 2);\n      };\n    }\n\n    // web worker\n    function lib$es6$promise$asap$$useMessageChannel() {\n      var channel = new MessageChannel();\n      channel.port1.onmessage = lib$es6$promise$asap$$flush;\n      return function () {\n        channel.port2.postMessage(0);\n      };\n    }\n\n    function lib$es6$promise$asap$$useSetTimeout() {\n      return function() {\n        setTimeout(lib$es6$promise$asap$$flush, 1);\n      };\n    }\n\n    var lib$es6$promise$asap$$queue = new Array(1000);\n    function lib$es6$promise$asap$$flush() {\n      for (var i = 0; i < lib$es6$promise$asap$$len; i+=2) {\n        var callback = lib$es6$promise$asap$$queue[i];\n        var arg = lib$es6$promise$asap$$queue[i+1];\n\n        callback(arg);\n\n        lib$es6$promise$asap$$queue[i] = undefined;\n        lib$es6$promise$asap$$queue[i+1] = undefined;\n      }\n\n      lib$es6$promise$asap$$len = 0;\n    }\n\n    function lib$es6$promise$asap$$attemptVertex() {\n      try {\n        var r = require;\n        var vertx = r('vertx');\n        lib$es6$promise$asap$$vertxNext = vertx.runOnLoop || vertx.runOnContext;\n        return lib$es6$promise$asap$$useVertxTimer();\n      } catch(e) {\n        return lib$es6$promise$asap$$useSetTimeout();\n      }\n    }\n\n    var lib$es6$promise$asap$$scheduleFlush;\n    // Decide what async method to use to triggering processing of queued callbacks:\n    if (lib$es6$promise$asap$$isNode) {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useNextTick();\n    } else if (lib$es6$promise$asap$$BrowserMutationObserver) {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useMutationObserver();\n    } else if (lib$es6$promise$asap$$isWorker) {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useMessageChannel();\n    } else if (lib$es6$promise$asap$$browserWindow === undefined && typeof require === 'function') {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$attemptVertex();\n    } else {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useSetTimeout();\n    }\n\n    function lib$es6$promise$$internal$$noop() {}\n\n    var lib$es6$promise$$internal$$PENDING   = void 0;\n    var lib$es6$promise$$internal$$FULFILLED = 1;\n    var lib$es6$promise$$internal$$REJECTED  = 2;\n\n    var lib$es6$promise$$internal$$GET_THEN_ERROR = new lib$es6$promise$$internal$$ErrorObject();\n\n    function lib$es6$promise$$internal$$selfFullfillment() {\n      return new TypeError(\"You cannot resolve a promise with itself\");\n    }\n\n    function lib$es6$promise$$internal$$cannotReturnOwn() {\n      return new TypeError('A promises callback cannot return that same promise.');\n    }\n\n    function lib$es6$promise$$internal$$getThen(promise) {\n      try {\n        return promise.then;\n      } catch(error) {\n        lib$es6$promise$$internal$$GET_THEN_ERROR.error = error;\n        return lib$es6$promise$$internal$$GET_THEN_ERROR;\n      }\n    }\n\n    function lib$es6$promise$$internal$$tryThen(then, value, fulfillmentHandler, rejectionHandler) {\n      try {\n        then.call(value, fulfillmentHandler, rejectionHandler);\n      } catch(e) {\n        return e;\n      }\n    }\n\n    function lib$es6$promise$$internal$$handleForeignThenable(promise, thenable, then) {\n       lib$es6$promise$asap$$asap(function(promise) {\n        var sealed = false;\n        var error = lib$es6$promise$$internal$$tryThen(then, thenable, function(value) {\n          if (sealed) { return; }\n          sealed = true;\n          if (thenable !== value) {\n            lib$es6$promise$$internal$$resolve(promise, value);\n          } else {\n            lib$es6$promise$$internal$$fulfill(promise, value);\n          }\n        }, function(reason) {\n          if (sealed) { return; }\n          sealed = true;\n\n          lib$es6$promise$$internal$$reject(promise, reason);\n        }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n        if (!sealed && error) {\n          sealed = true;\n          lib$es6$promise$$internal$$reject(promise, error);\n        }\n      }, promise);\n    }\n\n    function lib$es6$promise$$internal$$handleOwnThenable(promise, thenable) {\n      if (thenable._state === lib$es6$promise$$internal$$FULFILLED) {\n        lib$es6$promise$$internal$$fulfill(promise, thenable._result);\n      } else if (thenable._state === lib$es6$promise$$internal$$REJECTED) {\n        lib$es6$promise$$internal$$reject(promise, thenable._result);\n      } else {\n        lib$es6$promise$$internal$$subscribe(thenable, undefined, function(value) {\n          lib$es6$promise$$internal$$resolve(promise, value);\n        }, function(reason) {\n          lib$es6$promise$$internal$$reject(promise, reason);\n        });\n      }\n    }\n\n    function lib$es6$promise$$internal$$handleMaybeThenable(promise, maybeThenable) {\n      if (maybeThenable.constructor === promise.constructor) {\n        lib$es6$promise$$internal$$handleOwnThenable(promise, maybeThenable);\n      } else {\n        var then = lib$es6$promise$$internal$$getThen(maybeThenable);\n\n        if (then === lib$es6$promise$$internal$$GET_THEN_ERROR) {\n          lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$GET_THEN_ERROR.error);\n        } else if (then === undefined) {\n          lib$es6$promise$$internal$$fulfill(promise, maybeThenable);\n        } else if (lib$es6$promise$utils$$isFunction(then)) {\n          lib$es6$promise$$internal$$handleForeignThenable(promise, maybeThenable, then);\n        } else {\n          lib$es6$promise$$internal$$fulfill(promise, maybeThenable);\n        }\n      }\n    }\n\n    function lib$es6$promise$$internal$$resolve(promise, value) {\n      if (promise === value) {\n        lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$selfFullfillment());\n      } else if (lib$es6$promise$utils$$objectOrFunction(value)) {\n        lib$es6$promise$$internal$$handleMaybeThenable(promise, value);\n      } else {\n        lib$es6$promise$$internal$$fulfill(promise, value);\n      }\n    }\n\n    function lib$es6$promise$$internal$$publishRejection(promise) {\n      if (promise._onerror) {\n        promise._onerror(promise._result);\n      }\n\n      lib$es6$promise$$internal$$publish(promise);\n    }\n\n    function lib$es6$promise$$internal$$fulfill(promise, value) {\n      if (promise._state !== lib$es6$promise$$internal$$PENDING) { return; }\n\n      promise._result = value;\n      promise._state = lib$es6$promise$$internal$$FULFILLED;\n\n      if (promise._subscribers.length !== 0) {\n        lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publish, promise);\n      }\n    }\n\n    function lib$es6$promise$$internal$$reject(promise, reason) {\n      if (promise._state !== lib$es6$promise$$internal$$PENDING) { return; }\n      promise._state = lib$es6$promise$$internal$$REJECTED;\n      promise._result = reason;\n\n      lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publishRejection, promise);\n    }\n\n    function lib$es6$promise$$internal$$subscribe(parent, child, onFulfillment, onRejection) {\n      var subscribers = parent._subscribers;\n      var length = subscribers.length;\n\n      parent._onerror = null;\n\n      subscribers[length] = child;\n      subscribers[length + lib$es6$promise$$internal$$FULFILLED] = onFulfillment;\n      subscribers[length + lib$es6$promise$$internal$$REJECTED]  = onRejection;\n\n      if (length === 0 && parent._state) {\n        lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publish, parent);\n      }\n    }\n\n    function lib$es6$promise$$internal$$publish(promise) {\n      var subscribers = promise._subscribers;\n      var settled = promise._state;\n\n      if (subscribers.length === 0) { return; }\n\n      var child, callback, detail = promise._result;\n\n      for (var i = 0; i < subscribers.length; i += 3) {\n        child = subscribers[i];\n        callback = subscribers[i + settled];\n\n        if (child) {\n          lib$es6$promise$$internal$$invokeCallback(settled, child, callback, detail);\n        } else {\n          callback(detail);\n        }\n      }\n\n      promise._subscribers.length = 0;\n    }\n\n    function lib$es6$promise$$internal$$ErrorObject() {\n      this.error = null;\n    }\n\n    var lib$es6$promise$$internal$$TRY_CATCH_ERROR = new lib$es6$promise$$internal$$ErrorObject();\n\n    function lib$es6$promise$$internal$$tryCatch(callback, detail) {\n      try {\n        return callback(detail);\n      } catch(e) {\n        lib$es6$promise$$internal$$TRY_CATCH_ERROR.error = e;\n        return lib$es6$promise$$internal$$TRY_CATCH_ERROR;\n      }\n    }\n\n    function lib$es6$promise$$internal$$invokeCallback(settled, promise, callback, detail) {\n      var hasCallback = lib$es6$promise$utils$$isFunction(callback),\n          value, error, succeeded, failed;\n\n      if (hasCallback) {\n        value = lib$es6$promise$$internal$$tryCatch(callback, detail);\n\n        if (value === lib$es6$promise$$internal$$TRY_CATCH_ERROR) {\n          failed = true;\n          error = value.error;\n          value = null;\n        } else {\n          succeeded = true;\n        }\n\n        if (promise === value) {\n          lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$cannotReturnOwn());\n          return;\n        }\n\n      } else {\n        value = detail;\n        succeeded = true;\n      }\n\n      if (promise._state !== lib$es6$promise$$internal$$PENDING) {\n        // noop\n      } else if (hasCallback && succeeded) {\n        lib$es6$promise$$internal$$resolve(promise, value);\n      } else if (failed) {\n        lib$es6$promise$$internal$$reject(promise, error);\n      } else if (settled === lib$es6$promise$$internal$$FULFILLED) {\n        lib$es6$promise$$internal$$fulfill(promise, value);\n      } else if (settled === lib$es6$promise$$internal$$REJECTED) {\n        lib$es6$promise$$internal$$reject(promise, value);\n      }\n    }\n\n    function lib$es6$promise$$internal$$initializePromise(promise, resolver) {\n      try {\n        resolver(function resolvePromise(value){\n          lib$es6$promise$$internal$$resolve(promise, value);\n        }, function rejectPromise(reason) {\n          lib$es6$promise$$internal$$reject(promise, reason);\n        });\n      } catch(e) {\n        lib$es6$promise$$internal$$reject(promise, e);\n      }\n    }\n\n    function lib$es6$promise$enumerator$$Enumerator(Constructor, input) {\n      var enumerator = this;\n\n      enumerator._instanceConstructor = Constructor;\n      enumerator.promise = new Constructor(lib$es6$promise$$internal$$noop);\n\n      if (enumerator._validateInput(input)) {\n        enumerator._input     = input;\n        enumerator.length     = input.length;\n        enumerator._remaining = input.length;\n\n        enumerator._init();\n\n        if (enumerator.length === 0) {\n          lib$es6$promise$$internal$$fulfill(enumerator.promise, enumerator._result);\n        } else {\n          enumerator.length = enumerator.length || 0;\n          enumerator._enumerate();\n          if (enumerator._remaining === 0) {\n            lib$es6$promise$$internal$$fulfill(enumerator.promise, enumerator._result);\n          }\n        }\n      } else {\n        lib$es6$promise$$internal$$reject(enumerator.promise, enumerator._validationError());\n      }\n    }\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._validateInput = function(input) {\n      return lib$es6$promise$utils$$isArray(input);\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._validationError = function() {\n      return new Error('Array Methods must be provided an Array');\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._init = function() {\n      this._result = new Array(this.length);\n    };\n\n    var lib$es6$promise$enumerator$$default = lib$es6$promise$enumerator$$Enumerator;\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._enumerate = function() {\n      var enumerator = this;\n\n      var length  = enumerator.length;\n      var promise = enumerator.promise;\n      var input   = enumerator._input;\n\n      for (var i = 0; promise._state === lib$es6$promise$$internal$$PENDING && i < length; i++) {\n        enumerator._eachEntry(input[i], i);\n      }\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._eachEntry = function(entry, i) {\n      var enumerator = this;\n      var c = enumerator._instanceConstructor;\n\n      if (lib$es6$promise$utils$$isMaybeThenable(entry)) {\n        if (entry.constructor === c && entry._state !== lib$es6$promise$$internal$$PENDING) {\n          entry._onerror = null;\n          enumerator._settledAt(entry._state, i, entry._result);\n        } else {\n          enumerator._willSettleAt(c.resolve(entry), i);\n        }\n      } else {\n        enumerator._remaining--;\n        enumerator._result[i] = entry;\n      }\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._settledAt = function(state, i, value) {\n      var enumerator = this;\n      var promise = enumerator.promise;\n\n      if (promise._state === lib$es6$promise$$internal$$PENDING) {\n        enumerator._remaining--;\n\n        if (state === lib$es6$promise$$internal$$REJECTED) {\n          lib$es6$promise$$internal$$reject(promise, value);\n        } else {\n          enumerator._result[i] = value;\n        }\n      }\n\n      if (enumerator._remaining === 0) {\n        lib$es6$promise$$internal$$fulfill(promise, enumerator._result);\n      }\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._willSettleAt = function(promise, i) {\n      var enumerator = this;\n\n      lib$es6$promise$$internal$$subscribe(promise, undefined, function(value) {\n        enumerator._settledAt(lib$es6$promise$$internal$$FULFILLED, i, value);\n      }, function(reason) {\n        enumerator._settledAt(lib$es6$promise$$internal$$REJECTED, i, reason);\n      });\n    };\n    function lib$es6$promise$promise$all$$all(entries) {\n      return new lib$es6$promise$enumerator$$default(this, entries).promise;\n    }\n    var lib$es6$promise$promise$all$$default = lib$es6$promise$promise$all$$all;\n    function lib$es6$promise$promise$race$$race(entries) {\n      /*jshint validthis:true */\n      var Constructor = this;\n\n      var promise = new Constructor(lib$es6$promise$$internal$$noop);\n\n      if (!lib$es6$promise$utils$$isArray(entries)) {\n        lib$es6$promise$$internal$$reject(promise, new TypeError('You must pass an array to race.'));\n        return promise;\n      }\n\n      var length = entries.length;\n\n      function onFulfillment(value) {\n        lib$es6$promise$$internal$$resolve(promise, value);\n      }\n\n      function onRejection(reason) {\n        lib$es6$promise$$internal$$reject(promise, reason);\n      }\n\n      for (var i = 0; promise._state === lib$es6$promise$$internal$$PENDING && i < length; i++) {\n        lib$es6$promise$$internal$$subscribe(Constructor.resolve(entries[i]), undefined, onFulfillment, onRejection);\n      }\n\n      return promise;\n    }\n    var lib$es6$promise$promise$race$$default = lib$es6$promise$promise$race$$race;\n    function lib$es6$promise$promise$resolve$$resolve(object) {\n      /*jshint validthis:true */\n      var Constructor = this;\n\n      if (object && typeof object === 'object' && object.constructor === Constructor) {\n        return object;\n      }\n\n      var promise = new Constructor(lib$es6$promise$$internal$$noop);\n      lib$es6$promise$$internal$$resolve(promise, object);\n      return promise;\n    }\n    var lib$es6$promise$promise$resolve$$default = lib$es6$promise$promise$resolve$$resolve;\n    function lib$es6$promise$promise$reject$$reject(reason) {\n      /*jshint validthis:true */\n      var Constructor = this;\n      var promise = new Constructor(lib$es6$promise$$internal$$noop);\n      lib$es6$promise$$internal$$reject(promise, reason);\n      return promise;\n    }\n    var lib$es6$promise$promise$reject$$default = lib$es6$promise$promise$reject$$reject;\n\n    var lib$es6$promise$promise$$counter = 0;\n\n    function lib$es6$promise$promise$$needsResolver() {\n      throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n    }\n\n    function lib$es6$promise$promise$$needsNew() {\n      throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n    }\n\n    var lib$es6$promise$promise$$default = lib$es6$promise$promise$$Promise;\n    /**\n      Promise objects represent the eventual result of an asynchronous operation. The\n      primary way of interacting with a promise is through its `then` method, which\n      registers callbacks to receive either a promise's eventual value or the reason\n      why the promise cannot be fulfilled.\n\n      Terminology\n      -----------\n\n      - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n      - `thenable` is an object or function that defines a `then` method.\n      - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n      - `exception` is a value that is thrown using the throw statement.\n      - `reason` is a value that indicates why a promise was rejected.\n      - `settled` the final resting state of a promise, fulfilled or rejected.\n\n      A promise can be in one of three states: pending, fulfilled, or rejected.\n\n      Promises that are fulfilled have a fulfillment value and are in the fulfilled\n      state.  Promises that are rejected have a rejection reason and are in the\n      rejected state.  A fulfillment value is never a thenable.\n\n      Promises can also be said to *resolve* a value.  If this value is also a\n      promise, then the original promise's settled state will match the value's\n      settled state.  So a promise that *resolves* a promise that rejects will\n      itself reject, and a promise that *resolves* a promise that fulfills will\n      itself fulfill.\n\n\n      Basic Usage:\n      ------------\n\n      ```js\n      var promise = new Promise(function(resolve, reject) {\n        // on success\n        resolve(value);\n\n        // on failure\n        reject(reason);\n      });\n\n      promise.then(function(value) {\n        // on fulfillment\n      }, function(reason) {\n        // on rejection\n      });\n      ```\n\n      Advanced Usage:\n      ---------------\n\n      Promises shine when abstracting away asynchronous interactions such as\n      `XMLHttpRequest`s.\n\n      ```js\n      function getJSON(url) {\n        return new Promise(function(resolve, reject){\n          var xhr = new XMLHttpRequest();\n\n          xhr.open('GET', url);\n          xhr.onreadystatechange = handler;\n          xhr.responseType = 'json';\n          xhr.setRequestHeader('Accept', 'application/json');\n          xhr.send();\n\n          function handler() {\n            if (this.readyState === this.DONE) {\n              if (this.status === 200) {\n                resolve(this.response);\n              } else {\n                reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n              }\n            }\n          };\n        });\n      }\n\n      getJSON('/posts.json').then(function(json) {\n        // on fulfillment\n      }, function(reason) {\n        // on rejection\n      });\n      ```\n\n      Unlike callbacks, promises are great composable primitives.\n\n      ```js\n      Promise.all([\n        getJSON('/posts'),\n        getJSON('/comments')\n      ]).then(function(values){\n        values[0] // => postsJSON\n        values[1] // => commentsJSON\n\n        return values;\n      });\n      ```\n\n      @class Promise\n      @param {function} resolver\n      Useful for tooling.\n      @constructor\n    */\n    function lib$es6$promise$promise$$Promise(resolver) {\n      this._id = lib$es6$promise$promise$$counter++;\n      this._state = undefined;\n      this._result = undefined;\n      this._subscribers = [];\n\n      if (lib$es6$promise$$internal$$noop !== resolver) {\n        if (!lib$es6$promise$utils$$isFunction(resolver)) {\n          lib$es6$promise$promise$$needsResolver();\n        }\n\n        if (!(this instanceof lib$es6$promise$promise$$Promise)) {\n          lib$es6$promise$promise$$needsNew();\n        }\n\n        lib$es6$promise$$internal$$initializePromise(this, resolver);\n      }\n    }\n\n    lib$es6$promise$promise$$Promise.all = lib$es6$promise$promise$all$$default;\n    lib$es6$promise$promise$$Promise.race = lib$es6$promise$promise$race$$default;\n    lib$es6$promise$promise$$Promise.resolve = lib$es6$promise$promise$resolve$$default;\n    lib$es6$promise$promise$$Promise.reject = lib$es6$promise$promise$reject$$default;\n    lib$es6$promise$promise$$Promise._setScheduler = lib$es6$promise$asap$$setScheduler;\n    lib$es6$promise$promise$$Promise._setAsap = lib$es6$promise$asap$$setAsap;\n    lib$es6$promise$promise$$Promise._asap = lib$es6$promise$asap$$asap;\n\n    lib$es6$promise$promise$$Promise.prototype = {\n      constructor: lib$es6$promise$promise$$Promise,\n\n    /**\n      The primary way of interacting with a promise is through its `then` method,\n      which registers callbacks to receive either a promise's eventual value or the\n      reason why the promise cannot be fulfilled.\n\n      ```js\n      findUser().then(function(user){\n        // user is available\n      }, function(reason){\n        // user is unavailable, and you are given the reason why\n      });\n      ```\n\n      Chaining\n      --------\n\n      The return value of `then` is itself a promise.  This second, 'downstream'\n      promise is resolved with the return value of the first promise's fulfillment\n      or rejection handler, or rejected if the handler throws an exception.\n\n      ```js\n      findUser().then(function (user) {\n        return user.name;\n      }, function (reason) {\n        return 'default name';\n      }).then(function (userName) {\n        // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n        // will be `'default name'`\n      });\n\n      findUser().then(function (user) {\n        throw new Error('Found user, but still unhappy');\n      }, function (reason) {\n        throw new Error('`findUser` rejected and we're unhappy');\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n        // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n      });\n      ```\n      If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n\n      ```js\n      findUser().then(function (user) {\n        throw new PedagogicalException('Upstream error');\n      }).then(function (value) {\n        // never reached\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // The `PedgagocialException` is propagated all the way down to here\n      });\n      ```\n\n      Assimilation\n      ------------\n\n      Sometimes the value you want to propagate to a downstream promise can only be\n      retrieved asynchronously. This can be achieved by returning a promise in the\n      fulfillment or rejection handler. The downstream promise will then be pending\n      until the returned promise is settled. This is called *assimilation*.\n\n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // The user's comments are now available\n      });\n      ```\n\n      If the assimliated promise rejects, then the downstream promise will also reject.\n\n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // If `findCommentsByAuthor` fulfills, we'll have the value here\n      }, function (reason) {\n        // If `findCommentsByAuthor` rejects, we'll have the reason here\n      });\n      ```\n\n      Simple Example\n      --------------\n\n      Synchronous Example\n\n      ```javascript\n      var result;\n\n      try {\n        result = findResult();\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n\n      Errback Example\n\n      ```js\n      findResult(function(result, err){\n        if (err) {\n          // failure\n        } else {\n          // success\n        }\n      });\n      ```\n\n      Promise Example;\n\n      ```javascript\n      findResult().then(function(result){\n        // success\n      }, function(reason){\n        // failure\n      });\n      ```\n\n      Advanced Example\n      --------------\n\n      Synchronous Example\n\n      ```javascript\n      var author, books;\n\n      try {\n        author = findAuthor();\n        books  = findBooksByAuthor(author);\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n\n      Errback Example\n\n      ```js\n\n      function foundBooks(books) {\n\n      }\n\n      function failure(reason) {\n\n      }\n\n      findAuthor(function(author, err){\n        if (err) {\n          failure(err);\n          // failure\n        } else {\n          try {\n            findBoooksByAuthor(author, function(books, err) {\n              if (err) {\n                failure(err);\n              } else {\n                try {\n                  foundBooks(books);\n                } catch(reason) {\n                  failure(reason);\n                }\n              }\n            });\n          } catch(error) {\n            failure(err);\n          }\n          // success\n        }\n      });\n      ```\n\n      Promise Example;\n\n      ```javascript\n      findAuthor().\n        then(findBooksByAuthor).\n        then(function(books){\n          // found books\n      }).catch(function(reason){\n        // something went wrong\n      });\n      ```\n\n      @method then\n      @param {Function} onFulfilled\n      @param {Function} onRejected\n      Useful for tooling.\n      @return {Promise}\n    */\n      then: function(onFulfillment, onRejection) {\n        var parent = this;\n        var state = parent._state;\n\n        if (state === lib$es6$promise$$internal$$FULFILLED && !onFulfillment || state === lib$es6$promise$$internal$$REJECTED && !onRejection) {\n          return this;\n        }\n\n        var child = new this.constructor(lib$es6$promise$$internal$$noop);\n        var result = parent._result;\n\n        if (state) {\n          var callback = arguments[state - 1];\n          lib$es6$promise$asap$$asap(function(){\n            lib$es6$promise$$internal$$invokeCallback(state, child, callback, result);\n          });\n        } else {\n          lib$es6$promise$$internal$$subscribe(parent, child, onFulfillment, onRejection);\n        }\n\n        return child;\n      },\n\n    /**\n      `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n      as the catch block of a try/catch statement.\n\n      ```js\n      function findAuthor(){\n        throw new Error('couldn't find that author');\n      }\n\n      // synchronous\n      try {\n        findAuthor();\n      } catch(reason) {\n        // something went wrong\n      }\n\n      // async with promises\n      findAuthor().catch(function(reason){\n        // something went wrong\n      });\n      ```\n\n      @method catch\n      @param {Function} onRejection\n      Useful for tooling.\n      @return {Promise}\n    */\n      'catch': function(onRejection) {\n        return this.then(null, onRejection);\n      }\n    };\n    function lib$es6$promise$polyfill$$polyfill() {\n      var local;\n\n      if (typeof global !== 'undefined') {\n          local = global;\n      } else if (typeof self !== 'undefined') {\n          local = self;\n      } else {\n          try {\n              local = Function('return this')();\n          } catch (e) {\n              throw new Error('polyfill failed because global object is unavailable in this environment');\n          }\n      }\n\n      var P = local.Promise;\n\n      if (P && Object.prototype.toString.call(P.resolve()) === '[object Promise]' && !P.cast) {\n        return;\n      }\n\n      local.Promise = lib$es6$promise$promise$$default;\n    }\n    var lib$es6$promise$polyfill$$default = lib$es6$promise$polyfill$$polyfill;\n\n    var lib$es6$promise$umd$$ES6Promise = {\n      'Promise': lib$es6$promise$promise$$default,\n      'polyfill': lib$es6$promise$polyfill$$default\n    };\n\n    /* global define:true module:true window: true */\n    if (typeof define === 'function' && define['amd']) {\n      define(function() { return lib$es6$promise$umd$$ES6Promise; });\n    } else if (typeof module !== 'undefined' && module['exports']) {\n      module['exports'] = lib$es6$promise$umd$$ES6Promise;\n    } else if (typeof this !== 'undefined') {\n      this['ES6Promise'] = lib$es6$promise$umd$$ES6Promise;\n    }\n\n    lib$es6$promise$polyfill$$default();\n}).call(this);\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es6-promise/dist/es6-promise.js\n// module id = 28\n// module chunks = 0","module.exports = function() { throw new Error(\"define cannot be used indirect\"); };\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/amd-define.js\n// module id = 30\n// module chunks = 0","module.exports = __webpack_amd_options__;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/amd-options.js\n// module id = 32\n// module chunks = 0","// Replace local require by a lazy loader\nvar globalRequire = require;\nrequire = function () {};\n\n// Expose submodules\nvar exports = module.exports = {\n  Lexer:        require('./lib/N3Lexer'),\n  Parser:       require('./lib/N3Parser'),\n  Writer:       require('./lib/N3Writer'),\n  Store:        require('./lib/N3Store'),\n  StreamParser: require('./lib/N3StreamParser'),\n  StreamWriter: require('./lib/N3StreamWriter'),\n  Util:         require('./lib/N3Util'),\n};\n\n// Load submodules on first access\nObject.keys(exports).forEach(function (submodule) {\n  Object.defineProperty(exports, submodule, {\n    configurable: true,\n    enumerable: true,\n    get: function () {\n      delete exports[submodule];\n      return exports[submodule] = globalRequire('./lib/N3' + submodule);\n    },\n  });\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/n3/N3.js\n// module id = 33\n// module chunks = 0","var map = {\n\t\"./N3Lexer\": 35,\n\t\"./N3Lexer.js\": 35,\n\t\"./N3Parser\": 36,\n\t\"./N3Parser.js\": 36,\n\t\"./N3Store\": 37,\n\t\"./N3Store.js\": 37,\n\t\"./N3StreamParser\": 39,\n\t\"./N3StreamParser.js\": 39,\n\t\"./N3StreamWriter\": 68,\n\t\"./N3StreamWriter.js\": 68,\n\t\"./N3Util\": 38,\n\t\"./N3Util.js\": 38,\n\t\"./N3Writer\": 69,\n\t\"./N3Writer.js\": 69\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 34;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/n3/lib ^\\.\\/N3.*$\n// module id = 34\n// module chunks = 0","// **N3Lexer** tokenizes N3 documents.\nvar fromCharCode = String.fromCharCode;\nvar immediately = typeof setImmediate === 'function' ? setImmediate :\n                  function setImmediate(func) { setTimeout(func, 0); };\n\n// Regular expression and replacement string to escape N3 strings.\n// Note how we catch invalid unicode sequences separately (they will trigger an error).\nvar escapeSequence = /\\\\u([a-fA-F0-9]{4})|\\\\U([a-fA-F0-9]{8})|\\\\[uU]|\\\\(.)/g;\nvar escapeReplacements = { '\\\\': '\\\\', \"'\": \"'\", '\"': '\"',\n                           'n': '\\n', 'r': '\\r', 't': '\\t', 'f': '\\f', 'b': '\\b',\n                           '_': '_', '~': '~', '.': '.', '-': '-', '!': '!', '$': '$', '&': '&',\n                           '(': '(', ')': ')', '*': '*', '+': '+', ',': ',', ';': ';', '=': '=',\n                           '/': '/', '?': '?', '#': '#', '@': '@', '%': '%' };\nvar illegalIriChars = /[\\x00-\\x20<>\\\\\"\\{\\}\\|\\^\\`]/;\n\n// ## Constructor\nfunction N3Lexer(options) {\n  if (!(this instanceof N3Lexer))\n    return new N3Lexer(options);\n\n  // In line mode (N-Triples or N-Quads), only simple features may be parsed\n  if (options && options.lineMode) {\n    // Don't tokenize special literals\n    this._tripleQuotedString = this._number = this._boolean = /$0^/;\n    // Swap the tokenize method for a restricted version\n    var self = this;\n    this._tokenize = this.tokenize;\n    this.tokenize = function (input, callback) {\n      this._tokenize(input, function (error, token) {\n        if (!error && /^(?:IRI|prefixed|literal|langcode|type|\\.|eof)$/.test(token.type))\n          callback && callback(error, token);\n        else\n          callback && callback(error || self._syntaxError(token.type, callback = null));\n      });\n    };\n  }\n}\n\nN3Lexer.prototype = {\n  // ## Regular expressions\n  // It's slightly faster to have these as properties than as in-scope variables.\n\n  _iri: /^<((?:[^>\\\\]|\\\\[uU])+)>/, // IRI with escape sequences; needs sanity check after unescaping\n  _unescapedIri: /^<([^\\x00-\\x20<>\\\\\"\\{\\}\\|\\^\\`]*)>/, // IRI without escape sequences; no unescaping\n  _unescapedString: /^\"[^\"\\\\]+\"(?=[^\"\\\\])/, // non-empty string without escape sequences\n  _singleQuotedString: /^\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\"(?=[^\"\\\\])|^'[^'\\\\]*(?:\\\\.[^'\\\\]*)*'(?=[^'\\\\])/,\n  _tripleQuotedString: /^\"\"(\"[^\"\\\\]*(?:(?:\\\\.|\"(?!\"\"))[^\"\\\\]*)*\")\"\"|^''('[^'\\\\]*(?:(?:\\\\.|'(?!''))[^'\\\\]*)*')''/,\n  _langcode: /^@([a-z]+(?:-[a-z0-9]+)*)(?=[^a-z0-9\\-])/i,\n  _prefix: /^((?:[A-Za-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:\\.?[\\-0-9A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)?:(?=[#\\s<])/,\n  _prefixed: /^((?:[A-Za-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:\\.?[\\-0-9A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)?:((?:(?:[0-:A-Z_a-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff]|%[0-9a-fA-F]{2}|\\\\[!#-\\/;=?\\-@_~])(?:(?:[\\.\\-0-:A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff]|%[0-9a-fA-F]{2}|\\\\[!#-\\/;=?\\-@_~])*(?:[\\-0-:A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff]|%[0-9a-fA-F]{2}|\\\\[!#-\\/;=?\\-@_~]))?)?)(?=\\.?[,;\\s#()\\[\\]\\{\\}\"'<])/,\n  _blank: /^_:((?:[0-9A-Z_a-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:\\.?[\\-0-9A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)(?=\\.?[,;:\\s#()\\[\\]\\{\\}\"'<])/,\n  _number: /^[\\-+]?(?:\\d+\\.?\\d*([eE](?:[\\-\\+])?\\d+)|\\d*\\.?\\d+)(?=[.,;:\\s#()\\[\\]\\{\\}\"'<])/,\n  _boolean: /^(?:true|false)(?=[.,;:\\s#()\\[\\]\\{\\}\"'<])/,\n  _keyword: /^@[a-z]+(?=[\\s#<:])/,\n  _sparqlKeyword: /^(?:PREFIX|BASE|GRAPH)(?=[\\s#<:])/i,\n  _shortPredicates: /^a(?=\\s+|<)/,\n  _newline: /^[ \\t]*(?:#[^\\n\\r]*)?(?:\\r\\n|\\n|\\r)[ \\t]*/,\n  _whitespace: /^[ \\t]+/,\n  _endOfFile: /^(?:#[^\\n\\r]*)?$/,\n\n  // ## Private methods\n\n  // ### `_tokenizeToEnd` tokenizes as for as possible, emitting tokens through the callback.\n  _tokenizeToEnd: function (callback, inputFinished) {\n    // Continue parsing as far as possible; the loop will return eventually.\n    var input = this._input;\n    while (true) {\n      // Count and skip whitespace lines.\n      var whiteSpaceMatch;\n      while (whiteSpaceMatch = this._newline.exec(input))\n        input = input.substr(whiteSpaceMatch[0].length, input.length), this._line++;\n      // Skip whitespace on current line.\n      if (whiteSpaceMatch = this._whitespace.exec(input))\n        input = input.substr(whiteSpaceMatch[0].length, input.length);\n\n      // Stop for now if we're at the end.\n      if (this._endOfFile.test(input)) {\n        // If the input is finished, emit EOF.\n        if (inputFinished)\n          callback(input = null, { line: this._line, type: 'eof', value: '', prefix: '' });\n        return this._input = input;\n      }\n\n      // Look for specific token types based on the first character.\n      var line = this._line, type = '', value = '', prefix = '',\n          firstChar = input[0], match = null, matchLength = 0, unescaped, inconclusive = false;\n      switch (firstChar) {\n      case '^':\n        // Try to match a type.\n        if (input.length === 1) break;\n        else if (input[1] !== '^') return reportSyntaxError(this);\n        this._prevTokenType = '^';\n        // Move to type IRI or prefixed name.\n        input = input.substr(2);\n        if (input[0] !== '<') {\n          inconclusive = true;\n          break;\n        }\n        // Fall through in case the type is an IRI.\n\n      case '<':\n        // Try to find a full IRI without escape sequences.\n        if (match = this._unescapedIri.exec(input))\n          type = 'IRI', value = match[1];\n        // Try to find a full IRI with escape sequences.\n        else if (match = this._iri.exec(input)) {\n          unescaped = this._unescape(match[1]);\n          if (unescaped === null || illegalIriChars.test(unescaped))\n            return reportSyntaxError(this);\n          type = 'IRI', value = unescaped;\n        }\n        break;\n\n      case '_':\n        // Try to find a blank node. Since it can contain (but not end with) a dot,\n        // we always need a non-dot character before deciding it is a prefixed name.\n        // Therefore, try inserting a space if we're at the end of the input.\n        if ((match = this._blank.exec(input)) ||\n            inputFinished && (match = this._blank.exec(input + ' ')))\n          type = 'prefixed', prefix = '_', value = match[1];\n        break;\n\n      case '\"':\n      case \"'\":\n        // Try to find a non-empty double-quoted literal without escape sequences.\n        if (match = this._unescapedString.exec(input))\n          type = 'literal', value = match[0];\n        // Try to find any other literal wrapped in a pair of single or double quotes.\n        else if (match = this._singleQuotedString.exec(input)) {\n          unescaped = this._unescape(match[0]);\n          if (unescaped === null)\n            return reportSyntaxError(this);\n          type = 'literal', value = unescaped.replace(/^'|'$/g, '\"');\n        }\n        // Try to find a literal wrapped in three pairs of single or double quotes.\n        else if (match = this._tripleQuotedString.exec(input)) {\n          unescaped = match[1] || match[2];\n          // Count the newlines and advance line counter.\n          this._line += unescaped.split(/\\r\\n|\\r|\\n/).length - 1;\n          unescaped = this._unescape(unescaped);\n          if (unescaped === null)\n            return reportSyntaxError(this);\n          type = 'literal', value = unescaped.replace(/^'|'$/g, '\"');\n        }\n        break;\n\n      case '@':\n        // Try to find a language code.\n        if (this._prevTokenType === 'literal' && (match = this._langcode.exec(input)))\n          type = 'langcode', value = match[1];\n        // Try to find a keyword.\n        else if (match = this._keyword.exec(input))\n          type = match[0];\n        break;\n\n      case '.':\n        // Try to find a dot as punctuation.\n        if (input.length === 1 ? inputFinished : (input[1] < '0' || input[1] > '9')) {\n          type = '.';\n          matchLength = 1;\n          break;\n        }\n        // Fall through to numerical case (could be a decimal dot).\n\n      case '0':\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n      case '+':\n      case '-':\n        // Try to find a number.\n        if (match = this._number.exec(input)) {\n          type = 'literal';\n          value = '\"' + match[0] + '\"^^http://www.w3.org/2001/XMLSchema#' +\n                  (match[1] ? 'double' : (/^[+\\-]?\\d+$/.test(match[0]) ? 'integer' : 'decimal'));\n        }\n        break;\n\n      case 'B':\n      case 'b':\n      case 'p':\n      case 'P':\n      case 'G':\n      case 'g':\n        // Try to find a SPARQL-style keyword.\n        if (match = this._sparqlKeyword.exec(input))\n          type = match[0].toUpperCase();\n        else\n          inconclusive = true;\n        break;\n\n      case 'f':\n      case 't':\n        // Try to match a boolean.\n        if (match = this._boolean.exec(input))\n          type = 'literal', value = '\"' + match[0] + '\"^^http://www.w3.org/2001/XMLSchema#boolean';\n        else\n          inconclusive = true;\n        break;\n\n      case 'a':\n        // Try to find an abbreviated predicate.\n        if (match = this._shortPredicates.exec(input))\n          type = 'abbreviation', value = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type';\n        else\n          inconclusive = true;\n        break;\n\n      case ',':\n      case ';':\n      case '[':\n      case ']':\n      case '(':\n      case ')':\n      case '{':\n      case '}':\n        // The next token is punctuation\n        matchLength = 1;\n        type = firstChar;\n        break;\n\n      default:\n        inconclusive = true;\n      }\n\n      // Some first characters do not allow an immediate decision, so inspect more.\n      if (inconclusive) {\n        // Try to find a prefix.\n        if ((this._prevTokenType === '@prefix' || this._prevTokenType === 'PREFIX') &&\n            (match = this._prefix.exec(input)))\n          type = 'prefix', value = match[1] || '';\n        // Try to find a prefixed name. Since it can contain (but not end with) a dot,\n        // we always need a non-dot character before deciding it is a prefixed name.\n        // Therefore, try inserting a space if we're at the end of the input.\n        else if ((match = this._prefixed.exec(input)) ||\n                 inputFinished && (match = this._prefixed.exec(input + ' ')))\n          type = 'prefixed', prefix = match[1] || '', value = this._unescape(match[2]);\n      }\n\n      // A type token is special: it can only be emitted after an IRI or prefixed name is read.\n      if (this._prevTokenType === '^')\n        type = (type === 'IRI' || type === 'prefixed') ? 'type' : '';\n\n      // What if nothing of the above was found?\n      if (!type) {\n        // We could be in streaming mode, and then we just wait for more input to arrive.\n        // Otherwise, a syntax error has occurred in the input.\n        // One exception: error on an unaccounted linebreak (= not inside a triple-quoted literal).\n        if (inputFinished || (!/^'''|^\"\"\"/.test(input) && /\\n|\\r/.test(input)))\n          return reportSyntaxError(this);\n        else\n          return this._input = input;\n      }\n\n      // Emit the parsed token.\n      callback(null, { line: line, type: type, value: value, prefix: prefix });\n      this._prevTokenType = type;\n\n      // Advance to next part to tokenize.\n      input = input.substr(matchLength || match[0].length, input.length);\n    }\n\n    // Signals the syntax error through the callback\n    function reportSyntaxError(self) { callback(self._syntaxError(/^\\S*/.exec(input)[0])); }\n  },\n\n  // ### `_unescape` replaces N3 escape codes by their corresponding characters.\n  _unescape: function (item) {\n    try {\n      return item.replace(escapeSequence, function (sequence, unicode4, unicode8, escapedChar) {\n        var charCode;\n        if (unicode4) {\n          charCode = parseInt(unicode4, 16);\n          if (isNaN(charCode)) throw new Error(); // can never happen (regex), but helps performance\n          return fromCharCode(charCode);\n        }\n        else if (unicode8) {\n          charCode = parseInt(unicode8, 16);\n          if (isNaN(charCode)) throw new Error(); // can never happen (regex), but helps performance\n          if (charCode <= 0xFFFF) return fromCharCode(charCode);\n          return fromCharCode(0xD800 + ((charCode -= 0x10000) / 0x400), 0xDC00 + (charCode & 0x3FF));\n        }\n        else {\n          var replacement = escapeReplacements[escapedChar];\n          if (!replacement)\n            throw new Error();\n          return replacement;\n        }\n      });\n    }\n    catch (error) { return null; }\n  },\n\n  // ### `_syntaxError` creates a syntax error for the given issue\n  _syntaxError: function (issue) {\n    this._input = null;\n    return new Error('Syntax error: unexpected \"' + issue + '\" on line ' + this._line + '.');\n  },\n\n\n  // ## Public methods\n\n  // ### `tokenize` starts the transformation of an N3 document into an array of tokens.\n  // The input can be a string or a stream.\n  tokenize: function (input, callback) {\n    var self = this;\n    this._line = 1;\n\n    // If the input is a string, continuously emit tokens through the callback until the end.\n    if (typeof input === 'string') {\n      this._input = input;\n      immediately(function () { self._tokenizeToEnd(callback, true); });\n    }\n    // Otherwise, the input will be streamed.\n    else {\n      this._input = '';\n\n      // If no input was given, it will be streamed through `addChunk` and ended with `end`\n      if (!input || typeof input === 'function') {\n        this.addChunk = addChunk;\n        this.end = end;\n        if (!callback)\n          callback = input;\n      }\n      // Otherwise, the input itself must be a stream\n      else {\n        if (typeof input.setEncoding === 'function')\n          input.setEncoding('utf8');\n        input.on('data', addChunk);\n        input.on('end', end);\n      }\n    }\n\n    // Adds the data chunk to the buffer and parses as far as possible\n    function addChunk(data) {\n      if (self._input !== null) {\n        self._input += data;\n        self._tokenizeToEnd(callback, false);\n      }\n    }\n\n    // Parses until the end\n    function end() {\n      if (self._input !== null)\n        self._tokenizeToEnd(callback, true);\n    }\n  },\n};\n\n// ## Exports\n\n// Export the `N3Lexer` class as a whole.\nmodule.exports = N3Lexer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/n3/lib/N3Lexer.js\n// module id = 35\n// module chunks = 0","// **N3Parser** parses N3 documents.\nvar N3Lexer = require('./N3Lexer');\n\nvar RDF_PREFIX = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',\n    RDF_NIL    = RDF_PREFIX + 'nil',\n    RDF_FIRST  = RDF_PREFIX + 'first',\n    RDF_REST   = RDF_PREFIX + 'rest';\n\nvar absoluteIRI = /^[a-z][a-z0-9+.-]*:/i,\n    schemeAuthority = /^(?:([a-z][a-z0-9+.-]*:))?(?:\\/\\/[^\\/]*)?/i,\n    dotSegments = /(?:^|\\/)\\.\\.?(?:$|[\\/#?])/;\n\n// The next ID for new blank nodes\nvar blankNodePrefix = 0, blankNodeCount = 0;\n\n// ## Constructor\nfunction N3Parser(options) {\n  if (!(this instanceof N3Parser))\n    return new N3Parser(options);\n  this._tripleStack = [];\n  this._graph = null;\n\n  // Set the document IRI.\n  options = options || {};\n  this._setBase(options.documentIRI);\n\n  // Set supported features depending on the format.\n  var format = (typeof options.format === 'string') && options.format.match(/\\w*$/)[0].toLowerCase(),\n      isTurtle = format === 'turtle', isTriG = format === 'trig',\n      isNTriples = /triple/.test(format), isNQuads = /quad/.test(format),\n      isLineMode = isNTriples || isNQuads;\n  if (!(this._supportsNamedGraphs = !isTurtle))\n    this._readPredicateOrNamedGraph = this._readPredicate;\n  this._supportsQuads = !(isTurtle || isTriG || isNTriples);\n  // Disable relative IRIs in N-Triples or N-Quads mode\n  if (isLineMode) {\n    this._base = '';\n    this._resolveIRI = function (token) {\n      this._error('Disallowed relative IRI', token);\n      return this._callback = noop, this._subject = null;\n    };\n  }\n  this._blankNodePrefix = typeof options.blankNodePrefix !== 'string' ? '' :\n                            '_:' + options.blankNodePrefix.replace(/^_:/, '');\n  this._lexer = options.lexer || new N3Lexer({ lineMode: isLineMode });\n}\n\n// ## Private class methods\n\n// ### `_resetBlankNodeIds` restarts blank node identification.\nN3Parser._resetBlankNodeIds = function () {\n  blankNodePrefix = blankNodeCount = 0;\n};\n\nN3Parser.prototype = {\n  // ## Private methods\n\n  // ### `_setBase` sets the base IRI to resolve relative IRIs.\n  _setBase: function (baseIRI) {\n    if (!baseIRI)\n      baseIRI = null;\n    else if (baseIRI.indexOf('#') >= 0)\n      throw new Error('Invalid base IRI ' + baseIRI);\n    // Set base IRI and its components\n    if (this._base = baseIRI) {\n      this._basePath   = baseIRI.replace(/[^\\/?]*(?:\\?.*)?$/, '');\n      baseIRI = baseIRI.match(schemeAuthority);\n      this._baseRoot   = baseIRI[0];\n      this._baseScheme = baseIRI[1];\n    }\n  },\n\n  // ### `_readInTopContext` reads a token when in the top context.\n  _readInTopContext: function (token) {\n    switch (token.type) {\n    // If an EOF token arrives in the top context, signal that we're done.\n    case 'eof':\n      if (this._graph !== null)\n        return this._error('Unclosed graph', token);\n      delete this._prefixes._;\n      return this._callback(null, null, this._prefixes);\n    // It could be a prefix declaration.\n    case '@prefix':\n      this._sparqlStyle = false;\n      return this._readPrefix;\n    case 'PREFIX':\n      this._sparqlStyle = true;\n      return this._readPrefix;\n    // It could be a base declaration.\n    case '@base':\n      this._sparqlStyle = false;\n      return this._readBaseIRI;\n    case 'BASE':\n      this._sparqlStyle = true;\n      return this._readBaseIRI;\n    // It could be a graph.\n    case '{':\n      if (this._supportsNamedGraphs) {\n        this._graph = '';\n        this._subject = null;\n        return this._readSubject;\n      }\n    case 'GRAPH':\n      if (this._supportsNamedGraphs)\n        return this._readNamedGraphLabel;\n    // Otherwise, the next token must be a subject.\n    default:\n      return this._readSubject(token);\n    }\n  },\n\n  // ### `_readSubject` reads a triple's subject.\n  _readSubject: function (token) {\n    this._predicate = null;\n    switch (token.type) {\n    case 'IRI':\n      if (this._base === null || absoluteIRI.test(token.value))\n        this._subject = token.value;\n      else\n        this._subject = this._resolveIRI(token);\n      break;\n    case 'prefixed':\n      var prefix = this._prefixes[token.prefix];\n      if (prefix === undefined)\n        return this._error('Undefined prefix \"' + token.prefix + ':\"', token);\n      this._subject = prefix + token.value;\n      break;\n    case '[':\n      // Start a new triple with a new blank node as subject.\n      this._subject = '_:b' + blankNodeCount++;\n      this._tripleStack.push({ subject: this._subject, predicate: null, object: null, type: 'blank' });\n      return this._readBlankNodeHead;\n    case '(':\n      // Start a new list\n      this._tripleStack.push({ subject: RDF_NIL, predicate: null, object: null, type: 'list' });\n      this._subject = null;\n      return this._readListItem;\n    case '}':\n      return this._readPunctuation(token);\n    default:\n      return this._error('Expected subject but got ' + token.type, token);\n    }\n    // The next token must be a predicate,\n    // or, if the subject was actually a graph IRI, a named graph.\n    return this._readPredicateOrNamedGraph;\n  },\n\n  // ### `_readPredicate` reads a triple's predicate.\n  _readPredicate: function (token) {\n    var type = token.type;\n    switch (type) {\n    case 'IRI':\n    case 'abbreviation':\n      if (this._base === null || absoluteIRI.test(token.value))\n        this._predicate = token.value;\n      else\n        this._predicate = this._resolveIRI(token);\n      break;\n    case 'prefixed':\n      if (token.prefix === '_')\n        return this._error('Disallowed blank node as predicate', token);\n      var prefix = this._prefixes[token.prefix];\n      if (prefix === undefined)\n        return this._error('Undefined prefix \"' + token.prefix + ':\"', token);\n      this._predicate = prefix + token.value;\n      break;\n    case '.':\n    case ']':\n    case '}':\n      // Expected predicate didn't come, must have been trailing semicolon.\n      if (this._predicate === null)\n        return this._error('Unexpected ' + type, token);\n      this._subject = null;\n      return type === ']' ? this._readBlankNodeTail(token) : this._readPunctuation(token);\n    case ';':\n      // Extra semicolons can be safely ignored\n      return this._readPredicate;\n    default:\n      return this._error('Expected predicate to follow \"' + this._subject + '\"', token);\n    }\n    // The next token must be an object.\n    return this._readObject;\n  },\n\n  // ### `_readObject` reads a triple's object.\n  _readObject: function (token) {\n    switch (token.type) {\n    case 'IRI':\n      if (this._base === null || absoluteIRI.test(token.value))\n        this._object = token.value;\n      else\n        this._object = this._resolveIRI(token);\n      break;\n    case 'prefixed':\n      var prefix = this._prefixes[token.prefix];\n      if (prefix === undefined)\n        return this._error('Undefined prefix \"' + token.prefix + ':\"', token);\n      this._object = prefix + token.value;\n      break;\n    case 'literal':\n      this._object = token.value;\n      return this._readDataTypeOrLang;\n    case '[':\n      // Start a new triple with a new blank node as subject.\n      var blank = '_:b' + blankNodeCount++;\n      this._tripleStack.push({ subject: this._subject, predicate: this._predicate, object: blank, type: 'blank' });\n      this._subject = blank;\n      return this._readBlankNodeHead;\n    case '(':\n      // Start a new list\n      this._tripleStack.push({ subject: this._subject, predicate: this._predicate, object: RDF_NIL, type: 'list' });\n      this._subject = null;\n      return this._readListItem;\n    default:\n      return this._error('Expected object to follow \"' + this._predicate + '\"', token);\n    }\n    return this._getTripleEndReader();\n  },\n\n  // ### `_readPredicateOrNamedGraph` reads a triple's predicate, or a named graph.\n  _readPredicateOrNamedGraph: function (token) {\n    return token.type === '{' ? this._readGraph(token) : this._readPredicate(token);\n  },\n\n  // ### `_readGraph` reads a graph.\n  _readGraph: function (token) {\n    if (token.type !== '{')\n      return this._error('Expected graph but got ' + token.type, token);\n    // The \"subject\" we read is actually the GRAPH's label\n    this._graph = this._subject, this._subject = null;\n    return this._readSubject;\n  },\n\n  // ### `_readBlankNodeHead` reads the head of a blank node.\n  _readBlankNodeHead: function (token) {\n    if (token.type === ']') {\n      this._subject = null;\n      return this._readBlankNodeTail(token);\n    }\n    else {\n      this._predicate = null;\n      return this._readPredicate(token);\n    }\n  },\n\n  // ### `_readBlankNodeTail` reads the end of a blank node.\n  _readBlankNodeTail: function (token) {\n    if (token.type !== ']')\n      return this._readBlankNodePunctuation(token);\n\n    // Store blank node triple.\n    if (this._subject !== null)\n      this._callback(null, { subject:   this._subject,\n                             predicate: this._predicate,\n                             object:    this._object,\n                             graph:     this._graph || '' });\n\n    // Restore parent triple that contains the blank node.\n    var triple = this._tripleStack.pop();\n    this._subject = triple.subject;\n    // Was the blank node the object?\n    if (triple.object !== null) {\n      // Restore predicate and object as well, and continue by reading punctuation.\n      this._predicate = triple.predicate;\n      this._object = triple.object;\n      return this._getTripleEndReader();\n    }\n    // The blank node was the subject, so continue reading the predicate.\n    // If the blank node didn't contain any predicates, it could also be the label of a named graph.\n    return this._predicate !== null ? this._readPredicate : this._readPredicateOrNamedGraph;\n  },\n\n  // ### `_readDataTypeOrLang` reads an _optional_ data type or language.\n  _readDataTypeOrLang: function (token) {\n    switch (token.type) {\n    case 'type':\n      var value;\n      if (token.prefix === '') {\n        if (this._base === null || absoluteIRI.test(token.value))\n          value = token.value;\n        else\n          value = this._resolveIRI(token);\n      }\n      else {\n        var prefix = this._prefixes[token.prefix];\n        if (prefix === undefined)\n          return this._error('Undefined prefix \"' + token.prefix + ':\"', token);\n        value = prefix + token.value;\n      }\n      this._object += '^^' + value;\n      return this._getTripleEndReader();\n    case 'langcode':\n      this._object += '@' + token.value.toLowerCase();\n      return this._getTripleEndReader();\n    default:\n      return this._getTripleEndReader().call(this, token);\n    }\n  },\n\n  // ### `_readListItem` reads items from a list.\n  _readListItem: function (token) {\n    var item = null,                  // The actual list item.\n        itemHead = null,              // The head of the rdf:first predicate.\n        prevItemHead = this._subject, // The head of the previous rdf:first predicate.\n        stack = this._tripleStack,    // The stack of triples part of recursion (lists, blanks, etc.).\n        parentTriple = stack[stack.length - 1], // The triple containing the current list.\n        next = this._readListItem;    // The next function to execute.\n\n    switch (token.type) {\n    case 'IRI':\n      if (this._base === null || absoluteIRI.test(token.value))\n        item = token.value;\n      else\n        item = this._resolveIRI(token);\n      break;\n    case 'prefixed':\n      var prefix = this._prefixes[token.prefix];\n      if (prefix === undefined)\n        return this._error('Undefined prefix \"' + token.prefix + ':\"', token);\n      item = prefix + token.value;\n      break;\n    case 'literal':\n      item = token.value;\n      next = this._readDataTypeOrLang;\n      break;\n    case '[':\n      // Stack the current list triple and start a new triple with a blank node as subject.\n      itemHead = '_:b' + blankNodeCount++;\n      item     = '_:b' + blankNodeCount++;\n      stack.push({ subject: itemHead, predicate: RDF_FIRST, object: item, type: 'blank' });\n      this._subject = item;\n      next = this._readBlankNodeHead;\n      break;\n    case '(':\n      // Stack the current list triple and start a new list\n      itemHead = '_:b' + blankNodeCount++;\n      stack.push({ subject: itemHead, predicate: RDF_FIRST, object: RDF_NIL, type: 'list' });\n      this._subject = null;\n      next = this._readListItem;\n      break;\n    case ')':\n      // Restore the parent triple.\n      stack.pop();\n      // If this list is contained within a parent list, return the membership triple here.\n      // This will be `<parent list element> rdf:first <this list>.`.\n      if (stack.length !== 0 && stack[stack.length - 1].type === 'list')\n        this._callback(null, { subject:   parentTriple.subject,\n                               predicate: parentTriple.predicate,\n                               object:    parentTriple.object,\n                               graph:     this._graph || '' });\n      // Restore the parent triple's subject.\n      this._subject = parentTriple.subject;\n      // Was this list in the parent triple's subject?\n      if (parentTriple.predicate === null) {\n        // The next token is the predicate.\n        next = this._readPredicate;\n        // Skip writing the list tail if this was an empty list.\n        if (parentTriple.subject === RDF_NIL)\n          return next;\n      }\n      // The list was in the parent triple's object.\n      else {\n        // Restore the parent triple's predicate and object as well.\n        this._predicate = parentTriple.predicate;\n        this._object = parentTriple.object;\n        next = this._getTripleEndReader();\n        // Skip writing the list tail if this was an empty list.\n        if (parentTriple.object === RDF_NIL)\n          return next;\n      }\n      // Close the list by making the item head nil.\n      itemHead = RDF_NIL;\n      break;\n    default:\n      return this._error('Expected list item instead of \"' + token.type + '\"', token);\n    }\n\n     // Create a new blank node if no item head was assigned yet.\n    if (itemHead === null)\n      this._subject = itemHead = '_:b' + blankNodeCount++;\n\n    // Is this the first element of the list?\n    if (prevItemHead === null) {\n      // This list is either the object or the subject.\n      if (parentTriple.object === RDF_NIL)\n        parentTriple.object = itemHead;\n      else\n        parentTriple.subject = itemHead;\n    }\n    else {\n      // The rest of the list is in the current head.\n      this._callback(null, { subject:   prevItemHead,\n                             predicate: RDF_REST,\n                             object:    itemHead,\n                             graph:     this._graph || '' });\n    }\n    // Add the item's value.\n    if (item !== null)\n      this._callback(null, { subject:   itemHead,\n                             predicate: RDF_FIRST,\n                             object:    item,\n                             graph:     this._graph || '' });\n    return next;\n  },\n\n  // ### `_readPunctuation` reads punctuation between triples or triple parts.\n  _readPunctuation: function (token) {\n    var next, subject = this._subject, graph = this._graph;\n    switch (token.type) {\n    // A closing brace ends a graph\n    case '}':\n      if (this._graph === null)\n        return this._error('Unexpected graph closing', token);\n      this._graph = null;\n    // A dot just ends the statement, without sharing anything with the next.\n    case '.':\n      this._subject = null;\n      next = this._readInTopContext;\n      break;\n    // Semicolon means the subject is shared; predicate and object are different.\n    case ';':\n      next = this._readPredicate;\n      break;\n    // Comma means both the subject and predicate are shared; the object is different.\n    case ',':\n      next = this._readObject;\n      break;\n    // An IRI means this is a quad (only allowed if not already inside a graph).\n    case 'IRI':\n      if (this._supportsQuads && this._graph === null) {\n        if (this._base === null || absoluteIRI.test(token.value))\n          graph = token.value;\n        else\n          graph = this._resolveIRI(token);\n        subject = this._subject;\n        next = this._readQuadPunctuation;\n        break;\n      }\n    // An prefixed name means this is a quad (only allowed if not already inside a graph).\n    case 'prefixed':\n      if (this._supportsQuads && this._graph === null) {\n        var prefix = this._prefixes[token.prefix];\n        if (prefix === undefined)\n          return this._error('Undefined prefix \"' + token.prefix + ':\"', token);\n        graph = prefix + token.value;\n        next = this._readQuadPunctuation;\n        break;\n      }\n    default:\n      return this._error('Expected punctuation to follow \"' + this._object + '\"', token);\n    }\n    // A triple has been completed now, so return it.\n    if (subject !== null)\n      this._callback(null, { subject:   subject,\n                             predicate: this._predicate,\n                             object:    this._object,\n                             graph:     graph || '' });\n    return next;\n  },\n\n    // ### `_readBlankNodePunctuation` reads punctuation in a blank node\n  _readBlankNodePunctuation: function (token) {\n    var next;\n    switch (token.type) {\n    // Semicolon means the subject is shared; predicate and object are different.\n    case ';':\n      next = this._readPredicate;\n      break;\n    // Comma means both the subject and predicate are shared; the object is different.\n    case ',':\n      next = this._readObject;\n      break;\n    default:\n      return this._error('Expected punctuation to follow \"' + this._object + '\"', token);\n    }\n    // A triple has been completed now, so return it.\n    this._callback(null, { subject:   this._subject,\n                           predicate: this._predicate,\n                           object:    this._object,\n                           graph:     this._graph || '' });\n    return next;\n  },\n\n  // ### `_readQuadPunctuation` reads punctuation after a quad.\n  _readQuadPunctuation: function (token) {\n    if (token.type !== '.')\n      return this._error('Expected dot to follow quad', token);\n    return this._readInTopContext;\n  },\n\n  // ### `_readPrefix` reads the prefix of a prefix declaration.\n  _readPrefix: function (token) {\n    if (token.type !== 'prefix')\n      return this._error('Expected prefix to follow @prefix', token);\n    this._prefix = token.value;\n    return this._readPrefixIRI;\n  },\n\n  // ### `_readPrefixIRI` reads the IRI of a prefix declaration.\n  _readPrefixIRI: function (token) {\n    if (token.type !== 'IRI')\n      return this._error('Expected IRI to follow prefix \"' + this._prefix + ':\"', token);\n    var prefixIRI;\n    if (this._base === null || absoluteIRI.test(token.value))\n      prefixIRI = token.value;\n    else\n      prefixIRI = this._resolveIRI(token);\n    this._prefixes[this._prefix] = prefixIRI;\n    this._prefixCallback(this._prefix, prefixIRI);\n    return this._readDeclarationPunctuation;\n  },\n\n  // ### `_readBaseIRI` reads the IRI of a base declaration.\n  _readBaseIRI: function (token) {\n    if (token.type !== 'IRI')\n      return this._error('Expected IRI to follow base declaration', token);\n    try {\n      this._setBase(this._base === null ||\n                    absoluteIRI.test(token.value) ? token.value : this._resolveIRI(token));\n    }\n    catch (error) { this._error(error.message, token); }\n    return this._readDeclarationPunctuation;\n  },\n\n  // ### `_readNamedGraphLabel` reads the label of a named graph.\n  _readNamedGraphLabel: function (token) {\n    switch (token.type) {\n    case 'IRI':\n    case 'prefixed':\n      return this._readSubject(token), this._readGraph;\n    case '[':\n      return this._readNamedGraphBlankLabel;\n    default:\n      return this._error('Invalid graph label', token);\n    }\n  },\n\n  // ### `_readNamedGraphLabel` reads a blank node label of a named graph.\n  _readNamedGraphBlankLabel: function (token) {\n    if (token.type !== ']')\n      return this._error('Invalid graph label', token);\n    this._subject = '_:b' + blankNodeCount++;\n    return this._readGraph;\n  },\n\n  // ### `_readDeclarationPunctuation` reads the punctuation of a declaration.\n  _readDeclarationPunctuation: function (token) {\n    // SPARQL-style declarations don't have punctuation.\n    if (this._sparqlStyle)\n      return this._readInTopContext(token);\n\n    if (token.type !== '.')\n      return this._error('Expected declaration to end with a dot', token);\n    return this._readInTopContext;\n  },\n\n  // ### `_getTripleEndReader` gets the next reader function at the end of a triple.\n  _getTripleEndReader: function () {\n    var stack = this._tripleStack;\n    if (stack.length === 0)\n      return this._readPunctuation;\n\n    switch (stack[stack.length - 1].type) {\n    case 'blank':\n      return this._readBlankNodeTail;\n    case 'list':\n      return this._readListItem;\n    }\n  },\n\n  // ### `_error` emits an error message through the callback.\n  _error: function (message, token) {\n    this._callback(new Error(message + ' at line ' + token.line + '.'));\n  },\n\n  // ### `_resolveIRI` resolves a relative IRI token against the base path,\n  // assuming that a base path has been set and that the IRI is indeed relative.\n  _resolveIRI: function (token) {\n    var iri = token.value;\n    switch (iri[0]) {\n    // An empty relative IRI indicates the base IRI\n    case undefined: return this._base;\n    // Resolve relative fragment IRIs against the base IRI\n    case '#': return this._base + iri;\n    // Resolve relative query string IRIs by replacing the query string\n    case '?': return this._base.replace(/(?:\\?.*)?$/, iri);\n    // Resolve root-relative IRIs at the root of the base IRI\n    case '/':\n      // Resolve scheme-relative IRIs to the scheme\n      return (iri[1] === '/' ? this._baseScheme : this._baseRoot) + this._removeDotSegments(iri);\n    // Resolve all other IRIs at the base IRI's path\n    default:\n      return this._removeDotSegments(this._basePath + iri);\n    }\n  },\n\n  // ### `_removeDotSegments` resolves './' and '../' path segments in an IRI as per RFC3986.\n  _removeDotSegments: function (iri) {\n    // Don't modify the IRI if it does not contain any dot segments\n    if (!dotSegments.test(iri))\n      return iri;\n\n    // Start with an imaginary slash before the IRI in order to resolve trailing './' and '../'\n    var result = '', length = iri.length, i = -1, pathStart = -1, segmentStart = 0, next = '/';\n\n    while (i < length) {\n      switch (next) {\n      // The path starts with the first slash after the authority\n      case ':':\n        if (pathStart < 0) {\n          // Skip two slashes before the authority\n          if (iri[++i] === '/' && iri[++i] === '/')\n            // Skip to slash after the authority\n            while ((pathStart = i + 1) < length && iri[pathStart] !== '/')\n              i = pathStart;\n        }\n        break;\n      // Don't modify a query string or fragment\n      case '?':\n      case '#':\n        i = length;\n        break;\n      // Handle '/.' or '/..' path segments\n      case '/':\n        if (iri[i + 1] === '.') {\n          next = iri[++i + 1];\n          switch (next) {\n          // Remove a '/.' segment\n          case '/':\n            result += iri.substring(segmentStart, i - 1);\n            segmentStart = i + 1;\n            break;\n          // Remove a trailing '/.' segment\n          case undefined:\n          case '?':\n          case '#':\n            return result + iri.substring(segmentStart, i) + iri.substr(i + 1);\n          // Remove a '/..' segment\n          case '.':\n            next = iri[++i + 1];\n            if (next === undefined || next === '/' || next === '?' || next === '#') {\n              result += iri.substring(segmentStart, i - 2);\n              // Try to remove the parent path from result\n              if ((segmentStart = result.lastIndexOf('/')) >= pathStart)\n                result = result.substr(0, segmentStart);\n              // Remove a trailing '/..' segment\n              if (next !== '/')\n                return result + '/' + iri.substr(i + 1);\n              segmentStart = i + 1;\n            }\n          }\n        }\n      }\n      next = iri[++i];\n    }\n    return result + iri.substring(segmentStart);\n  },\n\n  // ## Public methods\n\n  // ### `parse` parses the N3 input and emits each parsed triple through the callback.\n  parse: function (input, tripleCallback, prefixCallback) {\n    // The read callback is the next function to be executed when a token arrives.\n    // We start reading in the top context.\n    this._readCallback = this._readInTopContext;\n    this._prefixes = Object.create(null);\n    this._prefixes._ = this._blankNodePrefix || '_:b' + blankNodePrefix++ + '_';\n\n    // If the input argument is not given, shift parameters\n    if (typeof input === 'function')\n      prefixCallback = tripleCallback, tripleCallback = input, input = null;\n\n    // Set the triple and prefix callbacks.\n    this._callback = tripleCallback || noop;\n    this._prefixCallback = prefixCallback || noop;\n\n    // Execute the read callback when a token arrives.\n    var self = this;\n    this._lexer.tokenize(input, function (error, token) {\n      if (error !== null)\n        self._callback(error), self._callback = noop;\n      else if (self._readCallback !== undefined)\n        self._readCallback = self._readCallback(token);\n    });\n\n    // If no input was given, it can be added with `addChunk` and ended with `end`\n    if (!input) {\n      this.addChunk = this._lexer.addChunk;\n      this.end = this._lexer.end;\n    }\n  },\n};\n\n// The empty function\nfunction noop() {}\n\n// ## Exports\n\n// Export the `N3Parser` class as a whole.\nmodule.exports = N3Parser;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/n3/lib/N3Parser.js\n// module id = 36\n// module chunks = 0","// **N3Store** objects store N3 triples by graph in memory.\n\nvar expandPrefixedName = require('./N3Util').expandPrefixedName;\n\n// ## Constructor\nfunction N3Store(triples, options) {\n  if (!(this instanceof N3Store))\n    return new N3Store(triples, options);\n\n  // The number of triples is initially zero.\n  this._size = 0;\n  // `_graphs` contains subject, predicate, and object indexes per graph.\n  this._graphs = Object.create(null);\n  // `_entities` maps entities such as `http://xmlns.com/foaf/0.1/name` to numbers.\n  // This saves memory, since only the numbers have to be stored in `_graphs`.\n  this._entities = Object.create(null);\n  this._entities['><'] = 0; // Dummy entry, so the first actual key is non-zero\n  this._entityCount = 0;\n  // `_blankNodeIndex` is the index of the last created blank node that was automatically named\n  this._blankNodeIndex = 0;\n\n  // Shift parameters if `triples` is not given\n  if (!options && triples && !triples[0])\n    options = triples, triples = null;\n\n  // Add triples and prefixes if passed\n  this._prefixes = Object.create(null);\n  if (options && options.prefixes)\n    this.addPrefixes(options.prefixes);\n  if (triples)\n    this.addTriples(triples);\n}\n\nN3Store.prototype = {\n  // ## Public properties\n\n  // ### `size` returns the number of triples in the store.\n  get size() {\n    // Return the triple count if if was cached.\n    var size = this._size;\n    if (size !== null)\n      return size;\n\n    // Calculate the number of triples by counting to the deepest level.\n    var graphs = this._graphs, subjects, subject;\n    for (var graphKey in graphs)\n      for (var subjectKey in (subjects = graphs[graphKey].subjects))\n        for (var predicateKey in (subject = subjects[subjectKey]))\n          size += Object.keys(subject[predicateKey]).length;\n    return this._size = size;\n  },\n\n  // ## Private methods\n\n  // ### `_addToIndex` adds a triple to a three-layered index.\n  _addToIndex: function (index0, key0, key1, key2) {\n    // Create layers as necessary.\n    var index1 = index0[key0] || (index0[key0] = {});\n    var index2 = index1[key1] || (index1[key1] = {});\n    // Setting the key to _any_ value signalizes the presence of the triple.\n    index2[key2] = null;\n  },\n\n  // ### `_removeFromIndex` removes a triple from a three-layered index.\n  _removeFromIndex: function (index0, key0, key1, key2) {\n    // Remove the triple from the index.\n    var index1 = index0[key0], index2 = index1[key1], key;\n    delete index2[key2];\n\n    // Remove intermediary index layers if they are empty.\n    for (key in index2) return;\n    delete index1[key1];\n    for (key in index1) return;\n    delete index0[key0];\n  },\n\n  // ### `_findInIndex` finds a set of triples in a three-layered index.\n  // The index base is `index0` and the keys at each level are `key0`, `key1`, and `key2`.\n  // Any of these keys can be `null`, which is interpreted as a wildcard.\n  // `name0`, `name1`, and `name2` are the names of the keys at each level,\n  // used when reconstructing the resulting triple\n  // (for instance: _subject_, _predicate_, and _object_).\n  // Finally, `graph` will be the graph of the created triples.\n  _findInIndex: function (index0, key0, key1, key2, name0, name1, name2, graph) {\n    var results = [], entityKeys = Object.keys(this._entities), tmp, index1, index2;\n\n    // If a key is specified, use only that part of index 0.\n    if (key0) (tmp = index0, index0 = {})[key0] = tmp[key0];\n    for (var value0 in index0) {\n      var entity0 = entityKeys[value0];\n\n      if (index1 = index0[value0]) {\n        // If a key is specified, use only that part of index 1.\n        if (key1) (tmp = index1, index1 = {})[key1] = tmp[key1];\n        for (var value1 in index1) {\n          var entity1 = entityKeys[value1];\n\n          if (index2 = index1[value1]) {\n            // If a key is specified, use only that part of index 2, if it exists.\n            var values = key2 ? (key2 in index2 ? [key2] : []) : Object.keys(index2);\n            // Create triples for all items found in index 2.\n            for (var l = values.length - 1; l >= 0; l--) {\n              var result = { subject: '', predicate: '', object: '', graph: graph };\n              result[name0] = entity0;\n              result[name1] = entity1;\n              result[name2] = entityKeys[values[l]];\n              results.push(result);\n            }\n          }\n        }\n      }\n    }\n    return results;\n  },\n\n  // ### `_countInIndex` counts matching triples in a three-layered index.\n  // The index base is `index0` and the keys at each level are `key0`, `key1`, and `key2`.\n  // Any of these keys can be `null`, which is interpreted as a wildcard.\n  _countInIndex: function (index0, key0, key1, key2) {\n    var count = 0, tmp, index1, index2;\n\n    // If a key is specified, count only that part of index 0.\n    if (key0) (tmp = index0, index0 = {})[key0] = tmp[key0];\n    for (var value0 in index0) {\n      if (index1 = index0[value0]) {\n        // If a key is specified, count only that part of index 1.\n        if (key1) (tmp = index1, index1 = {})[key1] = tmp[key1];\n        for (var value1 in index1) {\n          if (index2 = index1[value1]) {\n            // If a key is specified, count the triple if it exists.\n            if (key2) (key2 in index2) && count++;\n            // Otherwise, count all triples.\n            else count += Object.keys(index2).length;\n          }\n        }\n      }\n    }\n    return count;\n  },\n\n  // ## Public methods\n\n  // ### `addTriple` adds a new N3 triple to the store.\n  addTriple: function (subject, predicate, object, graph) {\n    // Shift arguments if a triple object is given instead of components\n    if (!predicate)\n      graph = subject.graph, object = subject.object,\n        predicate = subject.predicate, subject = subject.subject;\n\n    // Find the graph that will contain the triple.\n    graph = graph || '';\n    var graphItem = this._graphs[graph];\n    // Create the graph if it doesn't exist yet.\n    if (!graphItem) {\n      graphItem = this._graphs[graph] = { subjects: {}, predicates: {}, objects: {} };\n      // Freezing a graph helps subsequent `add` performance,\n      // and properties will never be modified anyway.\n      Object.freeze(graphItem);\n    }\n\n    // Since entities can often be long IRIs, we avoid storing them in every index.\n    // Instead, we have a separate index that maps entities to numbers,\n    // which are then used as keys in the other indexes.\n    var entities = this._entities;\n    subject   = entities[subject]   || (entities[subject]   = ++this._entityCount);\n    predicate = entities[predicate] || (entities[predicate] = ++this._entityCount);\n    object    = entities[object]    || (entities[object]    = ++this._entityCount);\n\n    this._addToIndex(graphItem.subjects,   subject,   predicate, object);\n    this._addToIndex(graphItem.predicates, predicate, object,    subject);\n    this._addToIndex(graphItem.objects,    object,    subject,   predicate);\n\n    // The cached triple count is now invalid.\n    this._size = null;\n  },\n\n  // ### `addTriples` adds multiple N3 triples to the store.\n  addTriples: function (triples) {\n    for (var i = triples.length - 1; i >= 0; i--)\n      this.addTriple(triples[i]);\n  },\n\n  // ### `addPrefix` adds support for querying with the given prefix\n  addPrefix: function (prefix, iri) {\n    this._prefixes[prefix] = iri;\n  },\n\n  // ### `addPrefixes` adds support for querying with the given prefixes\n  addPrefixes: function (prefixes) {\n    for (var prefix in prefixes)\n      this.addPrefix(prefix, prefixes[prefix]);\n  },\n\n  // ### `removeTriple` removes an N3 triple from the store if it exists.\n  removeTriple: function (subject, predicate, object, graph) {\n    // Shift arguments if a triple object is given instead of components.\n    if (!predicate)\n      graph = subject.graph, object = subject.object,\n        predicate = subject.predicate, subject = subject.subject;\n    graph = graph || '';\n\n    // Find internal identifiers for all components.\n    var graphItem, entities = this._entities, graphs = this._graphs;\n    if (!(subject     = entities[subject]))   return;\n    if (!(predicate   = entities[predicate])) return;\n    if (!(object      = entities[object]))    return;\n    if (!(graphItem   = graphs[graph]))       return;\n\n    // Verify that the triple exists.\n    var subjects, predicates;\n    if (!(subjects   = graphItem.subjects[subject])) return;\n    if (!(predicates = subjects[predicate])) return;\n    if (!(object in predicates)) return;\n\n    // Remove it from all indexes.\n    this._removeFromIndex(graphItem.subjects,   subject,   predicate, object);\n    this._removeFromIndex(graphItem.predicates, predicate, object,    subject);\n    this._removeFromIndex(graphItem.objects,    object,    subject,   predicate);\n    if (this._size !== null) this._size--;\n\n    // Remove the graph if it is empty.\n    for (subject in graphItem.subjects) return;\n    delete graphs[graph];\n  },\n\n  // ### `removeTriples` removes multiple N3 triples from the store.\n  removeTriples: function (triples) {\n    for (var i = triples.length - 1; i >= 0; i--)\n      this.removeTriple(triples[i]);\n  },\n\n  // ### `find` finds a set of triples matching a pattern, expanding prefixes as necessary.\n  // Setting `subject`, `predicate`, or `object` to `null` means an _anything_ wildcard.\n  // Setting `graph` to `null` means the default graph.\n  find: function (subject, predicate, object, graph) {\n    var prefixes = this._prefixes;\n    return this.findByIRI(\n      expandPrefixedName(subject,   prefixes),\n      expandPrefixedName(predicate, prefixes),\n      expandPrefixedName(object,    prefixes),\n      expandPrefixedName(graph,     prefixes)\n    );\n  },\n\n  // ### `findByIRI` finds a set of triples matching a pattern.\n  // Setting `subject`, `predicate`, or `object` to a falsy value means an _anything_ wildcard.\n  // Setting `graph` to a falsy value means the default graph.\n  findByIRI: function (subject, predicate, object, graph) {\n    graph = graph || '';\n    var graphItem = this._graphs[graph], entities = this._entities;\n\n    // If the specified graph contain no triples, there are no results.\n    if (!graphItem) return [];\n\n    // Translate IRIs to internal index keys.\n    // Optimization: if the entity doesn't exist, no triples with it exist.\n    if (subject   && !(subject   = entities[subject]))   return [];\n    if (predicate && !(predicate = entities[predicate])) return [];\n    if (object    && !(object    = entities[object]))    return [];\n\n    // Choose the optimal index, based on what fields are present\n    if (subject) {\n      if (object)\n        // If subject and object are given, the object index will be the fastest.\n        return this._findInIndex(graphItem.objects, object, subject, predicate,\n                                 'object', 'subject', 'predicate', graph);\n      else\n        // If only subject and possibly predicate are given, the subject index will be the fastest.\n        return this._findInIndex(graphItem.subjects, subject, predicate, null,\n                                 'subject', 'predicate', 'object', graph);\n    }\n    else if (predicate)\n      // If only predicate and possibly object are given, the predicate index will be the fastest.\n      return this._findInIndex(graphItem.predicates, predicate, object, null,\n                               'predicate', 'object', 'subject', graph);\n    else if (object)\n      // If only object is given, the object index will be the fastest.\n      return this._findInIndex(graphItem.objects, object, null, null,\n                               'object', 'subject', 'predicate', graph);\n    else\n      // If nothing is given, iterate subjects and predicates first\n      return this._findInIndex(graphItem.subjects, null, null, null,\n                               'subject', 'predicate', 'object', graph);\n  },\n\n  // ### `count` returns the number of triples matching a pattern, expanding prefixes as necessary.\n  // Setting `subject`, `predicate`, or `object` to `null` means an _anything_ wildcard.\n  // Setting `graph` to `null` means the default graph.\n  count: function (subject, predicate, object, graph) {\n    var prefixes = this._prefixes;\n    return this.countByIRI(\n      expandPrefixedName(subject,   prefixes),\n      expandPrefixedName(predicate, prefixes),\n      expandPrefixedName(object,    prefixes),\n      expandPrefixedName(graph,     prefixes)\n    );\n  },\n\n  // ### `countByIRI` returns the number of triples matching a pattern.\n  // Setting `subject`, `predicate`, or `object` to `null` means an _anything_ wildcard.\n  // Setting `graph` to `null` means the default graph.\n  countByIRI: function (subject, predicate, object, graph) {\n    graph = graph || '';\n    var graphItem = this._graphs[graph], entities = this._entities;\n\n    // If the specified graph contain no triples, there are no results.\n    if (!graphItem) return 0;\n\n    // Translate IRIs to internal index keys.\n    // Optimization: if the entity doesn't exist, no triples with it exist.\n    if (subject   && !(subject   = entities[subject]))   return 0;\n    if (predicate && !(predicate = entities[predicate])) return 0;\n    if (object    && !(object    = entities[object]))    return 0;\n\n    // Choose the optimal index, based on what fields are present\n    if (subject) {\n      if (object)\n        // If subject and object are given, the object index will be the fastest.\n        return this._countInIndex(graphItem.objects, object, subject, predicate);\n      else\n        // If only subject and possibly predicate are given, the subject index will be the fastest.\n        return this._countInIndex(graphItem.subjects, subject, predicate, object);\n    }\n    else if (predicate) {\n      // If only predicate and possibly object are given, the predicate index will be the fastest.\n      return this._countInIndex(graphItem.predicates, predicate, object, subject);\n    }\n    else {\n      // If only object is possibly given, the object index will be the fastest.\n      return this._countInIndex(graphItem.objects, object, subject, predicate);\n    }\n  },\n\n  // ### `createBlankNode` creates a new blank node, returning its name.\n  createBlankNode: function (suggestedName) {\n    var name, index;\n    // Generate a name based on the suggested name\n    if (suggestedName) {\n      name = suggestedName = '_:' + suggestedName, index = 1;\n      while (this._entities[name])\n        name = suggestedName + index++;\n    }\n    // Generate a generic blank node name\n    else {\n      do { name = '_:b' + this._blankNodeIndex++; }\n      while (this._entities[name]);\n    }\n    // Add the blank node to the entities, avoiding the generation of duplicates\n    this._entities[name] = ++this._entityCount;\n    return name;\n  },\n};\n\n// ## Exports\n\n// Export the `N3Store` class as a whole.\nmodule.exports = N3Store;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/n3/lib/N3Store.js\n// module id = 37\n// module chunks = 0","// **N3Util** provides N3 utility functions\n\nvar Xsd = 'http://www.w3.org/2001/XMLSchema#';\nvar XsdString  = Xsd + 'string';\nvar XsdInteger = Xsd + 'integer';\nvar XsdDecimal = Xsd + 'decimal';\nvar XsdBoolean = Xsd + 'boolean';\nvar RdfLangString = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#langString';\n\nvar N3Util = {\n  // Tests whether the given entity (triple object) represents an IRI in the N3 library\n  isIRI: function (entity) {\n    if (!entity)\n      return entity;\n    var firstChar = entity[0];\n    return firstChar !== '\"' && firstChar !== '_';\n  },\n\n  // Tests whether the given entity (triple object) represents a literal in the N3 library\n  isLiteral: function (entity) {\n    return entity && entity[0] === '\"';\n  },\n\n  // Tests whether the given entity (triple object) represents a blank node in the N3 library\n  isBlank: function (entity) {\n    return entity && entity.substr(0, 2) === '_:';\n  },\n\n  // Gets the string value of a literal in the N3 library\n  getLiteralValue: function (literal) {\n    var match = /^\"([^]*)\"/.exec(literal);\n    if (!match)\n      throw new Error(literal + ' is not a literal');\n    return match[1];\n  },\n\n  // Gets the type of a literal in the N3 library\n  getLiteralType: function (literal) {\n    var match = /^\"[^]*\"(?:\\^\\^([^\"]+)|(@)[^@\"]+)?$/.exec(literal);\n    if (!match)\n      throw new Error(literal + ' is not a literal');\n    return match[1] || (match[2] ? RdfLangString : XsdString);\n  },\n\n  // Gets the language of a literal in the N3 library\n  getLiteralLanguage: function (literal) {\n    var match = /^\"[^]*\"(?:@([^@\"]+)|\\^\\^[^\"]+)?$/.exec(literal);\n    if (!match)\n      throw new Error(literal + ' is not a literal');\n    return match[1] ? match[1].toLowerCase() : '';\n  },\n\n  // Tests whether the given entity (triple object) represents a prefixed name\n  isPrefixedName: function (entity) {\n    return entity && /^[^:\\/\"']*:[^:\\/\"']+$/.test(entity);\n  },\n\n  // Expands the prefixed name to a full IRI (also when it occurs as a literal's type)\n  expandPrefixedName: function (prefixedName, prefixes) {\n    var match = /(?:^|\"\\^\\^)([^:\\/#\"'\\^_]*):[^\\/]*$/.exec(prefixedName), prefix, base, index;\n    if (match)\n      prefix = match[1], base = prefixes[prefix], index = match.index;\n    if (base === undefined)\n      return prefixedName;\n\n    // The match index is non-zero when expanding a literal's type.\n    return index === 0 ? base + prefixedName.substr(prefix.length + 1)\n                       : prefixedName.substr(0, index + 3) +\n                         base + prefixedName.substr(index + prefix.length + 4);\n  },\n\n  // Creates an IRI in N3.js representation\n  createIRI: function (iri) {\n    return iri && iri[0] === '\"' ? N3Util.getLiteralValue(iri) : iri;\n  },\n\n  // Creates a literal in N3.js representation\n  createLiteral: function (value, modifier) {\n    if (!modifier) {\n      switch (typeof value) {\n      case 'boolean':\n        modifier = XsdBoolean;\n        break;\n      case 'number':\n        if (isFinite(value)) {\n          modifier = value % 1 === 0 ? XsdInteger : XsdDecimal;\n          break;\n        }\n      default:\n        return '\"' + value + '\"';\n      }\n    }\n    return '\"' + value +\n           (/^[a-z]+(-[a-z0-9]+)*$/i.test(modifier) ? '\"@'  + modifier.toLowerCase()\n                                                    : '\"^^' + modifier);\n  },\n};\n\n// Add the N3Util functions to the given object or its prototype\nfunction addN3Util(parent, toPrototype) {\n  for (var name in N3Util)\n    if (!toPrototype)\n      parent[name] = N3Util[name];\n    else\n      parent.prototype[name] = applyToThis(N3Util[name]);\n\n  return parent;\n}\n\n// Returns a function that applies `f` to the `this` object\nfunction applyToThis(f) {\n  return function (a) { return f(this, a); };\n}\n\n// Expose N3Util, attaching all functions to it\nmodule.exports = addN3Util(addN3Util);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/n3/lib/N3Util.js\n// module id = 38\n// module chunks = 0","// **N3StreamParser** parses an N3 stream into a triple stream\nvar Transform = require('stream').Transform,\n    util = require('util'),\n    N3Parser = require('./N3Parser.js');\n\n// ## Constructor\nfunction N3StreamParser(options) {\n  if (!(this instanceof N3StreamParser))\n    return new N3StreamParser(options);\n\n  // Initialize Transform base class\n  Transform.call(this, { decodeStrings: true });\n  this._readableState.objectMode = true;\n\n  // Set up parser\n  var self = this, parser = new N3Parser(options);\n  parser.parse(\n    // Handle triples by pushing them down the pipeline\n    function (error, triple) {\n      triple && self.push(triple) ||\n      error  && self.emit('error', error);\n    },\n    // Emit prefixes through the `prefix` event\n    this.emit.bind(this, 'prefix'));\n\n  // Implement Transform methods on top of parser\n  this._transform = function (chunk, encoding, done) { parser.addChunk(chunk); done(); };\n  this._flush = function (done) { parser.end(); done(); };\n}\nutil.inherits(N3StreamParser, Transform);\n\n// ## Exports\n// Export the `N3StreamParser` class as a whole.\nmodule.exports = N3StreamParser;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/n3/lib/N3StreamParser.js\n// module id = 39\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js');\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/stream-browserify/index.js\n// module id = 40\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/events/events.js\n// module id = 41\n// module chunks = 0","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/inherits/inherits_browser.js\n// module id = 42\n// module chunks = 0","var Stream = (function (){\n  try {\n    return require('st' + 'ream'); // hack to fix a circular dependency issue when used with browserify\n  } catch(_){}\n}());\nexports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = Stream || exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n\nif (!process.browser && process.env.READABLE_STREAM === 'disable' && Stream) {\n  module.exports = Stream;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/stream-browserify/~/readable-stream/readable.js\n// module id = 43\n// module chunks = 0","'use strict';\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar processNextTick = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream;\n(function () {\n  try {\n    Stream = require('st' + 'ream');\n  } catch (_) {} finally {\n    if (!Stream) Stream = require('events').EventEmitter;\n  }\n})();\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\n/*<replacement>*/\nvar bufferShim = require('buffer-shims');\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/BufferList');\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') {\n    return emitter.prependListener(event, fn);\n  } else {\n    // This is a hack to make sure that our error handler is attached before any\n    // userland ones.  NEVER DO THIS. This is here only because this code needs\n    // to continue to work with older versions of Node.js that do not include\n    // the prependListener() method. The goal is to eventually remove this hack.\n    if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n  }\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = ~ ~this.highWaterMark;\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // when piping, we only care about 'readable' events that happen\n  // after read()ing all the bytes and not getting any pushback.\n  this.ranOut = false;\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options && typeof options.read === 'function') this._read = options.read;\n\n  Stream.call(this);\n}\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n\n  if (!state.objectMode && typeof chunk === 'string') {\n    encoding = encoding || state.defaultEncoding;\n    if (encoding !== state.encoding) {\n      chunk = bufferShim.from(chunk, encoding);\n      encoding = '';\n    }\n  }\n\n  return readableAddChunk(this, state, chunk, encoding, false);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  var state = this._readableState;\n  return readableAddChunk(this, state, chunk, '', true);\n};\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\nfunction readableAddChunk(stream, state, chunk, encoding, addToFront) {\n  var er = chunkInvalid(state, chunk);\n  if (er) {\n    stream.emit('error', er);\n  } else if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else if (state.objectMode || chunk && chunk.length > 0) {\n    if (state.ended && !addToFront) {\n      var e = new Error('stream.push() after EOF');\n      stream.emit('error', e);\n    } else if (state.endEmitted && addToFront) {\n      var _e = new Error('stream.unshift() after end event');\n      stream.emit('error', _e);\n    } else {\n      var skipAdd;\n      if (state.decoder && !addToFront && !encoding) {\n        chunk = state.decoder.write(chunk);\n        skipAdd = !state.objectMode && chunk.length === 0;\n      }\n\n      if (!addToFront) state.reading = false;\n\n      // Don't add to the buffer if we've decoded to an empty string chunk and\n      // we're not in object mode\n      if (!skipAdd) {\n        // if we want the data now, just emit it.\n        if (state.flowing && state.length === 0 && !state.sync) {\n          stream.emit('data', chunk);\n          stream.read(0);\n        } else {\n          // update the buffer info.\n          state.length += state.objectMode ? 1 : chunk.length;\n          if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n          if (state.needReadable) emitReadable(stream);\n        }\n      }\n\n      maybeReadMore(stream, state);\n    }\n  } else if (!addToFront) {\n    state.reading = false;\n  }\n\n  return needMoreData(state);\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction chunkInvalid(state, chunk) {\n  var er = null;\n  if (!Buffer.isBuffer(chunk) && typeof chunk !== 'string' && chunk !== null && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) processNextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    processNextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : cleanup;\n  if (state.endEmitted) processNextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable) {\n    debug('onunpipe');\n    if (readable === src) {\n      cleanup();\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', cleanup);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        processNextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this, state);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    processNextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var state = this._readableState;\n  var paused = false;\n\n  var self = this;\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) self.push(chunk);\n    }\n\n    self.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = self.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  var events = ['error', 'close', 'destroy', 'pause', 'resume'];\n  forEach(events, function (ev) {\n    stream.on(ev, self.emit.bind(self, ev));\n  });\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  self._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return self;\n};\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = bufferShim.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    processNextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction forEach(xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/stream-browserify/~/readable-stream/lib/_stream_readable.js\n// module id = 44\n// module chunks = 0","'use strict';\n\nif (!process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = nextTick;\n} else {\n  module.exports = process.nextTick;\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process-nextick-args/index.js\n// module id = 45\n// module chunks = 0","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/stream-browserify/~/isarray/index.js\n// module id = 46\n// module chunks = 0","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/buffer/index.js\n// module id = 47\n// module chunks = 0","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return b64.length * 3 / 4 - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, j, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr(len * 3 / 4 - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/base64-js/index.js\n// module id = 48\n// module chunks = 0","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ieee754/index.js\n// module id = 49\n// module chunks = 0","'use strict';\n\nvar buffer = require('buffer');\nvar Buffer = buffer.Buffer;\nvar SlowBuffer = buffer.SlowBuffer;\nvar MAX_LEN = buffer.kMaxLength || 2147483647;\nexports.alloc = function alloc(size, fill, encoding) {\n  if (typeof Buffer.alloc === 'function') {\n    return Buffer.alloc(size, fill, encoding);\n  }\n  if (typeof encoding === 'number') {\n    throw new TypeError('encoding must not be number');\n  }\n  if (typeof size !== 'number') {\n    throw new TypeError('size must be a number');\n  }\n  if (size > MAX_LEN) {\n    throw new RangeError('size is too large');\n  }\n  var enc = encoding;\n  var _fill = fill;\n  if (_fill === undefined) {\n    enc = undefined;\n    _fill = 0;\n  }\n  var buf = new Buffer(size);\n  if (typeof _fill === 'string') {\n    var fillBuf = new Buffer(_fill, enc);\n    var flen = fillBuf.length;\n    var i = -1;\n    while (++i < size) {\n      buf[i] = fillBuf[i % flen];\n    }\n  } else {\n    buf.fill(_fill);\n  }\n  return buf;\n}\nexports.allocUnsafe = function allocUnsafe(size) {\n  if (typeof Buffer.allocUnsafe === 'function') {\n    return Buffer.allocUnsafe(size);\n  }\n  if (typeof size !== 'number') {\n    throw new TypeError('size must be a number');\n  }\n  if (size > MAX_LEN) {\n    throw new RangeError('size is too large');\n  }\n  return new Buffer(size);\n}\nexports.from = function from(value, encodingOrOffset, length) {\n  if (typeof Buffer.from === 'function' && (!global.Uint8Array || Uint8Array.from !== Buffer.from)) {\n    return Buffer.from(value, encodingOrOffset, length);\n  }\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number');\n  }\n  if (typeof value === 'string') {\n    return new Buffer(value, encodingOrOffset);\n  }\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    var offset = encodingOrOffset;\n    if (arguments.length === 1) {\n      return new Buffer(value);\n    }\n    if (typeof offset === 'undefined') {\n      offset = 0;\n    }\n    var len = length;\n    if (typeof len === 'undefined') {\n      len = value.byteLength - offset;\n    }\n    if (offset >= value.byteLength) {\n      throw new RangeError('\\'offset\\' is out of bounds');\n    }\n    if (len > value.byteLength - offset) {\n      throw new RangeError('\\'length\\' is out of bounds');\n    }\n    return new Buffer(value.slice(offset, offset + len));\n  }\n  if (Buffer.isBuffer(value)) {\n    var out = new Buffer(value.length);\n    value.copy(out, 0, 0, value.length);\n    return out;\n  }\n  if (value) {\n    if (Array.isArray(value) || (typeof ArrayBuffer !== 'undefined' && value.buffer instanceof ArrayBuffer) || 'length' in value) {\n      return new Buffer(value);\n    }\n    if (value.type === 'Buffer' && Array.isArray(value.data)) {\n      return new Buffer(value.data);\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ' + 'ArrayBuffer, Array, or array-like object.');\n}\nexports.allocUnsafeSlow = function allocUnsafeSlow(size) {\n  if (typeof Buffer.allocUnsafeSlow === 'function') {\n    return Buffer.allocUnsafeSlow(size);\n  }\n  if (typeof size !== 'number') {\n    throw new TypeError('size must be a number');\n  }\n  if (size >= MAX_LEN) {\n    throw new RangeError('size is too large');\n  }\n  return new SlowBuffer(size);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/buffer-shims/index.js\n// module id = 51\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-util-is/lib/util.js\n// module id = 52\n// module chunks = 0","'use strict';\n\nvar Buffer = require('buffer').Buffer;\n/*<replacement>*/\nvar bufferShim = require('buffer-shims');\n/*</replacement>*/\n\nmodule.exports = BufferList;\n\nfunction BufferList() {\n  this.head = null;\n  this.tail = null;\n  this.length = 0;\n}\n\nBufferList.prototype.push = function (v) {\n  var entry = { data: v, next: null };\n  if (this.length > 0) this.tail.next = entry;else this.head = entry;\n  this.tail = entry;\n  ++this.length;\n};\n\nBufferList.prototype.unshift = function (v) {\n  var entry = { data: v, next: this.head };\n  if (this.length === 0) this.tail = entry;\n  this.head = entry;\n  ++this.length;\n};\n\nBufferList.prototype.shift = function () {\n  if (this.length === 0) return;\n  var ret = this.head.data;\n  if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n  --this.length;\n  return ret;\n};\n\nBufferList.prototype.clear = function () {\n  this.head = this.tail = null;\n  this.length = 0;\n};\n\nBufferList.prototype.join = function (s) {\n  if (this.length === 0) return '';\n  var p = this.head;\n  var ret = '' + p.data;\n  while (p = p.next) {\n    ret += s + p.data;\n  }return ret;\n};\n\nBufferList.prototype.concat = function (n) {\n  if (this.length === 0) return bufferShim.alloc(0);\n  if (this.length === 1) return this.head.data;\n  var ret = bufferShim.allocUnsafe(n >>> 0);\n  var p = this.head;\n  var i = 0;\n  while (p) {\n    p.data.copy(ret, i);\n    i += p.data.length;\n    p = p.next;\n  }\n  return ret;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/stream-browserify/~/readable-stream/lib/internal/streams/BufferList.js\n// module id = 54\n// module chunks = 0","// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar processNextTick = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\nvar keys = objectKeys(Writable.prototype);\nfor (var v = 0; v < keys.length; v++) {\n  var method = keys[v];\n  if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  processNextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nfunction forEach(xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/stream-browserify/~/readable-stream/lib/_stream_duplex.js\n// module id = 55\n// module chunks = 0","// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\nmodule.exports = Writable;\n\n/*<replacement>*/\nvar processNextTick = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : processNextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream;\n(function () {\n  try {\n    Stream = require('st' + 'ream');\n  } catch (_) {} finally {\n    if (!Stream) Stream = require('events').EventEmitter;\n  }\n})();\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\n/*<replacement>*/\nvar bufferShim = require('buffer-shims');\n/*</replacement>*/\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = ~ ~this.highWaterMark;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  processNextTick(cb, er);\n}\n\n// If we get something that is not a buffer, string, null, or undefined,\n// and we're not in objectMode, then that's an error.\n// Otherwise stream chunks are all considered to be of length=1, and the\n// watermarks determine how many objects to keep in the buffer, rather than\n// how many bytes or characters.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n  // Always throw error if a null is written\n  // if we are not in object mode then throw\n  // if it is not a buffer, string, or undefined.\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (!Buffer.isBuffer(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    processNextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (Buffer.isBuffer(chunk)) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = bufferShim.from(chunk, encoding);\n  }\n  return chunk;\n}\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, chunk, encoding, cb) {\n  chunk = decodeChunk(state, chunk, encoding);\n\n  if (Buffer.isBuffer(chunk)) encoding = 'buffer';\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = new WriteReq(chunk, encoding, cb);\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n  if (sync) processNextTick(cb, er);else cb(er);\n\n  stream._writableState.errorEmitted = true;\n  stream.emit('error', er);\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n        afterWrite(stream, state, finished, cb);\n      }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    while (entry) {\n      buffer[count] = entry;\n      entry = entry.next;\n      count += 1;\n    }\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequestCount = 0;\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished) {\n    state.prefinished = true;\n    stream.emit('prefinish');\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    if (state.pendingcb === 0) {\n      prefinish(stream, state);\n      state.finished = true;\n      stream.emit('finish');\n    } else {\n      prefinish(stream, state);\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) processNextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n\n  this.finish = function (err) {\n    var entry = _this.entry;\n    _this.entry = null;\n    while (entry) {\n      var cb = entry.callback;\n      state.pendingcb--;\n      cb(err);\n      entry = entry.next;\n    }\n    if (state.corkedRequestsFree) {\n      state.corkedRequestsFree.next = _this;\n    } else {\n      state.corkedRequestsFree = _this;\n    }\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/stream-browserify/~/readable-stream/lib/_stream_writable.js\n// module id = 56\n// module chunks = 0","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/util-deprecate/browser.js\n// module id = 57\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar Buffer = require('buffer').Buffer;\n\nvar isBufferEncoding = Buffer.isEncoding\n  || function(encoding) {\n       switch (encoding && encoding.toLowerCase()) {\n         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;\n         default: return false;\n       }\n     }\n\n\nfunction assertEncoding(encoding) {\n  if (encoding && !isBufferEncoding(encoding)) {\n    throw new Error('Unknown encoding: ' + encoding);\n  }\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters. CESU-8 is handled as part of the UTF-8 encoding.\n//\n// @TODO Handling all encodings inside a single object makes it very difficult\n// to reason about this code, so it should be split up in the future.\n// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code\n// points as used by CESU-8.\nvar StringDecoder = exports.StringDecoder = function(encoding) {\n  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');\n  assertEncoding(encoding);\n  switch (this.encoding) {\n    case 'utf8':\n      // CESU-8 represents each of Surrogate Pair by 3-bytes\n      this.surrogateSize = 3;\n      break;\n    case 'ucs2':\n    case 'utf16le':\n      // UTF-16 represents each of Surrogate Pair by 2-bytes\n      this.surrogateSize = 2;\n      this.detectIncompleteChar = utf16DetectIncompleteChar;\n      break;\n    case 'base64':\n      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.\n      this.surrogateSize = 3;\n      this.detectIncompleteChar = base64DetectIncompleteChar;\n      break;\n    default:\n      this.write = passThroughWrite;\n      return;\n  }\n\n  // Enough space to store all bytes of a single character. UTF-8 needs 4\n  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).\n  this.charBuffer = new Buffer(6);\n  // Number of bytes received for the current incomplete multi-byte character.\n  this.charReceived = 0;\n  // Number of bytes expected for the current incomplete multi-byte character.\n  this.charLength = 0;\n};\n\n\n// write decodes the given buffer and returns it as JS string that is\n// guaranteed to not contain any partial multi-byte characters. Any partial\n// character found at the end of the buffer is buffered up, and will be\n// returned when calling write again with the remaining bytes.\n//\n// Note: Converting a Buffer containing an orphan surrogate to a String\n// currently works, but converting a String to a Buffer (via `new Buffer`, or\n// Buffer#write) will replace incomplete surrogates with the unicode\n// replacement character. See https://codereview.chromium.org/121173009/ .\nStringDecoder.prototype.write = function(buffer) {\n  var charStr = '';\n  // if our last write ended with an incomplete multibyte character\n  while (this.charLength) {\n    // determine how many remaining bytes this buffer has to offer for this char\n    var available = (buffer.length >= this.charLength - this.charReceived) ?\n        this.charLength - this.charReceived :\n        buffer.length;\n\n    // add the new bytes to the char buffer\n    buffer.copy(this.charBuffer, this.charReceived, 0, available);\n    this.charReceived += available;\n\n    if (this.charReceived < this.charLength) {\n      // still not enough chars in this buffer? wait for more ...\n      return '';\n    }\n\n    // remove bytes belonging to the current character from the buffer\n    buffer = buffer.slice(available, buffer.length);\n\n    // get the character that was split\n    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);\n\n    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n    var charCode = charStr.charCodeAt(charStr.length - 1);\n    if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n      this.charLength += this.surrogateSize;\n      charStr = '';\n      continue;\n    }\n    this.charReceived = this.charLength = 0;\n\n    // if there are no more bytes in this buffer, just emit our char\n    if (buffer.length === 0) {\n      return charStr;\n    }\n    break;\n  }\n\n  // determine and set charLength / charReceived\n  this.detectIncompleteChar(buffer);\n\n  var end = buffer.length;\n  if (this.charLength) {\n    // buffer the incomplete character bytes we got\n    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);\n    end -= this.charReceived;\n  }\n\n  charStr += buffer.toString(this.encoding, 0, end);\n\n  var end = charStr.length - 1;\n  var charCode = charStr.charCodeAt(end);\n  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n  if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n    var size = this.surrogateSize;\n    this.charLength += size;\n    this.charReceived += size;\n    this.charBuffer.copy(this.charBuffer, size, 0, size);\n    buffer.copy(this.charBuffer, 0, 0, size);\n    return charStr.substring(0, end);\n  }\n\n  // or just emit the charStr\n  return charStr;\n};\n\n// detectIncompleteChar determines if there is an incomplete UTF-8 character at\n// the end of the given buffer. If so, it sets this.charLength to the byte\n// length that character, and sets this.charReceived to the number of bytes\n// that are available for this character.\nStringDecoder.prototype.detectIncompleteChar = function(buffer) {\n  // determine how many bytes we have to check at the end of this buffer\n  var i = (buffer.length >= 3) ? 3 : buffer.length;\n\n  // Figure out if one of the last i bytes of our buffer announces an\n  // incomplete char.\n  for (; i > 0; i--) {\n    var c = buffer[buffer.length - i];\n\n    // See http://en.wikipedia.org/wiki/UTF-8#Description\n\n    // 110XXXXX\n    if (i == 1 && c >> 5 == 0x06) {\n      this.charLength = 2;\n      break;\n    }\n\n    // 1110XXXX\n    if (i <= 2 && c >> 4 == 0x0E) {\n      this.charLength = 3;\n      break;\n    }\n\n    // 11110XXX\n    if (i <= 3 && c >> 3 == 0x1E) {\n      this.charLength = 4;\n      break;\n    }\n  }\n  this.charReceived = i;\n};\n\nStringDecoder.prototype.end = function(buffer) {\n  var res = '';\n  if (buffer && buffer.length)\n    res = this.write(buffer);\n\n  if (this.charReceived) {\n    var cr = this.charReceived;\n    var buf = this.charBuffer;\n    var enc = this.encoding;\n    res += buf.slice(0, cr).toString(enc);\n  }\n\n  return res;\n};\n\nfunction passThroughWrite(buffer) {\n  return buffer.toString(this.encoding);\n}\n\nfunction utf16DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 2;\n  this.charLength = this.charReceived ? 2 : 0;\n}\n\nfunction base64DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 3;\n  this.charLength = this.charReceived ? 3 : 0;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/string_decoder/index.js\n// module id = 58\n// module chunks = 0","// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction TransformState(stream) {\n  this.afterTransform = function (er, data) {\n    return afterTransform(stream, er, data);\n  };\n\n  this.needTransform = false;\n  this.transforming = false;\n  this.writecb = null;\n  this.writechunk = null;\n  this.writeencoding = null;\n}\n\nfunction afterTransform(stream, er, data) {\n  var ts = stream._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) return stream.emit('error', new Error('no writecb in Transform class'));\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data !== null && data !== undefined) stream.push(data);\n\n  cb(er);\n\n  var rs = stream._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    stream._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = new TransformState(this);\n\n  var stream = this;\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.once('prefinish', function () {\n    if (typeof this._flush === 'function') this._flush(function (er, data) {\n      done(stream, er, data);\n    });else done(stream);\n  });\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data !== null && data !== undefined) stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  var ws = stream._writableState;\n  var ts = stream._transformState;\n\n  if (ws.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (ts.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/stream-browserify/~/readable-stream/lib/_stream_transform.js\n// module id = 59\n// module chunks = 0","// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/stream-browserify/~/readable-stream/lib/_stream_passthrough.js\n// module id = 60\n// module chunks = 0","module.exports = require(\"./lib/_stream_writable.js\")\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/stream-browserify/~/readable-stream/writable.js\n// module id = 61\n// module chunks = 0","module.exports = require(\"./lib/_stream_duplex.js\")\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/stream-browserify/~/readable-stream/duplex.js\n// module id = 62\n// module chunks = 0","module.exports = require(\"./lib/_stream_transform.js\")\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/stream-browserify/~/readable-stream/transform.js\n// module id = 63\n// module chunks = 0","module.exports = require(\"./lib/_stream_passthrough.js\")\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/stream-browserify/~/readable-stream/passthrough.js\n// module id = 64\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/util/util.js\n// module id = 65\n// module chunks = 0","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/util/support/isBufferBrowser.js\n// module id = 66\n// module chunks = 0","// **N3StreamWriter** serializes a triple stream into an N3 stream\nvar Transform = require('stream').Transform,\n    util = require('util'),\n    N3Writer = require('./N3Writer.js');\n\n// ## Constructor\nfunction N3StreamWriter(options) {\n  if (!(this instanceof N3StreamWriter))\n    return new N3StreamWriter(options);\n\n  // Initialize Transform base class\n  Transform.call(this, { encoding: 'utf8' });\n  this._writableState.objectMode = true;\n\n  // Set up writer with a dummy stream object\n  var self = this;\n  var writer = new N3Writer({\n    write: function (chunk, encoding, callback) { self.push(chunk); callback && callback(); },\n    end: function (callback) { self.push(null); callback && callback(); },\n  }, options);\n\n  // Implement Transform methods on top of writer\n  this._transform = function (triple, encoding, done) { writer.addTriple(triple, done); };\n  this._flush = function (done) { writer.end(done); };\n}\nutil.inherits(N3StreamWriter, Transform);\n\n// ## Exports\n// Export the `N3StreamWriter` class as a whole.\nmodule.exports = N3StreamWriter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/n3/lib/N3StreamWriter.js\n// module id = 68\n// module chunks = 0","// **N3Writer** writes N3 documents.\n\n// Matches a literal as represented in memory by the N3 library\nvar N3LiteralMatcher = /^\"([^]*)\"(?:\\^\\^(.+)|@([\\-a-z]+))?$/i;\n\n// rdf:type predicate (for 'a' abbreviation)\nvar RDF_PREFIX = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',\n    RDF_TYPE   = RDF_PREFIX + 'type';\n\n// Characters in literals that require escaping\nvar escape    = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019\\ud800-\\udbff]/,\n    escapeAll = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019]|[\\ud800-\\udbff][\\udc00-\\udfff]/g,\n    escapeReplacements = { '\\\\': '\\\\\\\\', '\"': '\\\\\"', '\\t': '\\\\t',\n                           '\\n': '\\\\n', '\\r': '\\\\r', '\\b': '\\\\b', '\\f': '\\\\f' };\n\n// ## Constructor\nfunction N3Writer(outputStream, options) {\n  if (!(this instanceof N3Writer))\n    return new N3Writer(outputStream, options);\n\n  // Shift arguments if the first argument is not a stream\n  if (outputStream && typeof outputStream.write !== 'function')\n    options = outputStream, outputStream = null;\n  options = options || {};\n\n  // If no output stream given, send the output as string through the end callback\n  if (!outputStream) {\n    var output = '';\n    this._outputStream = {\n      write: function (chunk, encoding, done) { output += chunk; done && done(); },\n      end:   function (done) { done && done(null, output); },\n    };\n    this._endStream = true;\n  }\n  else {\n    this._outputStream = outputStream;\n    this._endStream = options.end === undefined ? true : !!options.end;\n  }\n\n  // Initialize writer, depending on the format\n  this._subject = null;\n  if (!(/triple|quad/i).test(options.format)) {\n    this._graph = '';\n    this._prefixIRIs = Object.create(null);\n    options.prefixes && this.addPrefixes(options.prefixes);\n  }\n  else {\n    this._writeTriple = this._writeTripleLine;\n  }\n}\n\nN3Writer.prototype = {\n  // ## Private methods\n\n  // ### `_write` writes the argument to the output stream\n  _write: function (string, callback) {\n    this._outputStream.write(string, 'utf8', callback);\n  },\n\n    // ### `_writeTriple` writes the triple to the output stream\n  _writeTriple: function (subject, predicate, object, graph, done) {\n    try {\n      // Write the graph's label if it has changed\n      if (this._graph !== graph) {\n        // Close the previous graph and start the new one\n        this._write((this._subject === null ? '' : (this._graph ? '\\n}\\n' : '.\\n')) +\n                    (graph ? this._encodeIriOrBlankNode(graph) + ' {\\n' : ''));\n        this._subject = null;\n        // Don't treat identical blank nodes as repeating graphs\n        this._graph = graph[0] !== '[' ? graph : ']';\n      }\n      // Don't repeat the subject if it's the same\n      if (this._subject === subject) {\n        // Don't repeat the predicate if it's the same\n        if (this._predicate === predicate)\n          this._write(', ' + this._encodeObject(object), done);\n        // Same subject, different predicate\n        else\n          this._write(';\\n    ' +\n                      this._encodePredicate(this._predicate = predicate) + ' ' +\n                      this._encodeObject(object), done);\n      }\n      // Different subject; write the whole triple\n      else\n        this._write((this._subject === null ? '' : '.\\n') +\n                    this._encodeSubject(this._subject = subject) + ' ' +\n                    this._encodePredicate(this._predicate = predicate) + ' ' +\n                    this._encodeObject(object), done);\n    }\n    catch (error) { done && done(error); }\n  },\n\n  // ### `_writeTripleLine` writes the triple or quad to the output stream as a single line\n  _writeTripleLine: function (subject, predicate, object, graph, done) {\n    // Don't use prefixes\n    delete this._prefixMatch;\n    // Write the triple\n    try {\n      this._write(this._encodeIriOrBlankNode(subject) + ' ' +\n                  this._encodeIriOrBlankNode(predicate) + ' ' +\n                  this._encodeObject(object) +\n                  (graph ? ' ' + this._encodeIriOrBlankNode(graph) + '.\\n' : '.\\n'), done);\n    }\n    catch (error) { done && done(error); }\n  },\n\n  // ### `_encodeIriOrBlankNode` represents an IRI or blank node\n  _encodeIriOrBlankNode: function (entity) {\n    // A blank node or list is represented as-is\n    var firstChar = entity[0];\n    if (firstChar === '[' || firstChar === '(' || firstChar === '_' && entity[1] === ':')\n      return entity;\n    // Escape special characters\n    if (escape.test(entity))\n      entity = entity.replace(escapeAll, characterReplacer);\n    // Try to represent the IRI as prefixed name\n    var prefixMatch = this._prefixRegex.exec(entity);\n    return !prefixMatch ? '<' + entity + '>' :\n           (!prefixMatch[1] ? entity : this._prefixIRIs[prefixMatch[1]] + prefixMatch[2]);\n  },\n\n  // ### `_encodeLiteral` represents a literal\n  _encodeLiteral: function (value, type, language) {\n    // Escape special characters\n    if (escape.test(value))\n      value = value.replace(escapeAll, characterReplacer);\n    // Write the literal, possibly with type or language\n    if (language)\n      return '\"' + value + '\"@' + language;\n    else if (type)\n      return '\"' + value + '\"^^' + this._encodeIriOrBlankNode(type);\n    else\n      return '\"' + value + '\"';\n  },\n\n  // ### `_encodeSubject` represents a subject\n  _encodeSubject: function (subject) {\n    if (subject[0] === '\"')\n      throw new Error('A literal as subject is not allowed: ' + subject);\n    // Don't treat identical blank nodes as repeating subjects\n    if (subject[0] === '[')\n      this._subject = ']';\n    return this._encodeIriOrBlankNode(subject);\n  },\n\n  // ### `_encodePredicate` represents a predicate\n  _encodePredicate: function (predicate) {\n    if (predicate[0] === '\"')\n      throw new Error('A literal as predicate is not allowed: ' + predicate);\n    return predicate === RDF_TYPE ? 'a' : this._encodeIriOrBlankNode(predicate);\n  },\n\n  // ### `_encodeObject` represents an object\n  _encodeObject: function (object) {\n    // Represent an IRI or blank node\n    if (object[0] !== '\"')\n      return this._encodeIriOrBlankNode(object);\n    // Represent a literal\n    var match = N3LiteralMatcher.exec(object);\n    if (!match) throw new Error('Invalid literal: ' + object);\n    return this._encodeLiteral(match[1], match[2], match[3]);\n  },\n\n  // ### `_blockedWrite` replaces `_write` after the writer has been closed\n  _blockedWrite: function () {\n    throw new Error('Cannot write because the writer has been closed.');\n  },\n\n  // ### `addTriple` adds the triple to the output stream\n  addTriple: function (subject, predicate, object, graph, done) {\n    // The triple was given as a triple object, so shift parameters\n    if (object === undefined)\n      this._writeTriple(subject.subject, subject.predicate, subject.object,\n                        subject.graph || '', predicate);\n    // The optional `graph` parameter was not provided\n    else if (typeof graph !== 'string')\n      this._writeTriple(subject, predicate, object, '', graph);\n    // The `graph` parameter was provided\n    else\n      this._writeTriple(subject, predicate, object, graph, done);\n  },\n\n  // ### `addTriples` adds the triples to the output stream\n  addTriples: function (triples) {\n    for (var i = 0; i < triples.length; i++)\n      this.addTriple(triples[i]);\n  },\n\n  // ### `addPrefix` adds the prefix to the output stream\n  addPrefix: function (prefix, iri, done) {\n    var prefixes = {};\n    prefixes[prefix] = iri;\n    this.addPrefixes(prefixes, done);\n  },\n\n  // ### `addPrefixes` adds the prefixes to the output stream\n  addPrefixes: function (prefixes, done) {\n    // Add all useful prefixes\n    var prefixIRIs = this._prefixIRIs, hasPrefixes = false;\n    for (var prefix in prefixes) {\n      // Verify whether the prefix can be used and does not exist yet\n      var iri = prefixes[prefix];\n      if (/[#\\/]$/.test(iri) && prefixIRIs[iri] !== (prefix += ':')) {\n        hasPrefixes = true;\n        prefixIRIs[iri] = prefix;\n        // Finish a possible pending triple\n        if (this._subject !== null) {\n          this._write(this._graph ? '\\n}\\n' : '.\\n');\n          this._subject = null, this._graph = '';\n        }\n        // Write prefix\n        this._write('@prefix ' + prefix + ' <' + iri + '>.\\n');\n      }\n    }\n    // Recreate the prefix matcher\n    if (hasPrefixes) {\n      var IRIlist = '', prefixList = '';\n      for (var prefixIRI in prefixIRIs) {\n        IRIlist += IRIlist ? '|' + prefixIRI : prefixIRI;\n        prefixList += (prefixList ? '|' : '') + prefixIRIs[prefixIRI];\n      }\n      IRIlist = IRIlist.replace(/[\\]\\/\\(\\)\\*\\+\\?\\.\\\\\\$]/g, '\\\\$&');\n      this._prefixRegex = new RegExp('^(?:' + prefixList + ')[^\\/]*$|' +\n                                     '^(' + IRIlist + ')([a-zA-Z][\\\\-_a-zA-Z0-9]*)$');\n    }\n    // End a prefix block with a newline\n    this._write(hasPrefixes ? '\\n' : '', done);\n  },\n\n  // ### `blank` creates a blank node with the given content\n  blank: function (predicate, object) {\n    var children = predicate, child, length;\n    // Empty blank node\n    if (predicate === undefined)\n      children = [];\n    // Blank node passed as blank(\"predicate\", \"object\")\n    else if (typeof predicate === 'string')\n      children = [{ predicate: predicate, object: object }];\n    // Blank node passed as blank({ predicate: predicate, object: object })\n    else if (!('length' in predicate))\n      children = [predicate];\n\n    switch (length = children.length) {\n    // Generate an empty blank node\n    case 0:\n      return '[]';\n    // Generate a non-nested one-triple blank node\n    case 1:\n      child = children[0];\n      if (child.object[0] !== '[')\n        return '[ ' + this._encodePredicate(child.predicate) + ' ' +\n                      this._encodeObject(child.object) + ' ]';\n    // Generate a multi-triple or nested blank node\n    default:\n      var contents = '[';\n      // Write all triples in order\n      for (var i = 0; i < length; i++) {\n        child = children[i];\n        // Write only the object is the predicate is the same as the previous\n        if (child.predicate === predicate)\n          contents += ', ' + this._encodeObject(child.object);\n        // Otherwise, write the predicate and the object\n        else {\n          contents += (i ? ';\\n  ' : '\\n  ') +\n                      this._encodePredicate(child.predicate) + ' ' +\n                      this._encodeObject(child.object);\n          predicate = child.predicate;\n        }\n      }\n      return contents + '\\n]';\n    }\n  },\n\n  // ### `list` creates a list node with the given content\n  list: function (elements) {\n    var length = elements && elements.length || 0, contents = new Array(length);\n    for (var i = 0; i < length; i++)\n      contents[i] = this._encodeObject(elements[i]);\n    return '(' + contents.join(' ') + ')';\n  },\n\n  // ### `_prefixRegex` matches a prefixed name or IRI that begins with one of the added prefixes\n  _prefixRegex: /$0^/,\n\n  // ### `end` signals the end of the output stream\n  end: function (done) {\n    // Finish a possible pending triple\n    if (this._subject !== null) {\n      this._write(this._graph ? '\\n}\\n' : '.\\n');\n      this._subject = null;\n    }\n    // Disallow further writing\n    this._write = this._blockedWrite;\n\n    // Try to end the underlying stream, ensuring done is called exactly one time\n    var singleDone = done && function (error, result) { singleDone = null, done(error, result); };\n    if (this._endStream) {\n      try { return this._outputStream.end(singleDone); }\n      catch (error) { /* error closing stream */ }\n    }\n    singleDone && singleDone();\n  },\n};\n\n// Replaces a character by its escaped version\nfunction characterReplacer(character) {\n  // Replace a single character by its escaped version\n  var result = escapeReplacements[character];\n  if (result === undefined) {\n    // Replace a single character with its 4-bit unicode escape sequence\n    if (character.length === 1) {\n      result = character.charCodeAt(0).toString(16);\n      result = '\\\\u0000'.substr(0, 6 - result.length) + result;\n    }\n    // Replace a surrogate pair with its 8-bit unicode escape sequence\n    else {\n      result = ((character.charCodeAt(0) - 0xD800) * 0x400 +\n                 character.charCodeAt(1) + 0x2400).toString(16);\n      result = '\\\\U00000000'.substr(0, 10 - result.length) + result;\n    }\n  }\n  return result;\n}\n\n// ## Exports\n\n// Export the `N3Writer` class as a whole.\nmodule.exports = N3Writer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/n3/lib/N3Writer.js\n// module id = 69\n// module chunks = 0","'use strict';\n\n/*      Serialization of RDF Graphs\n**\n** Tim Berners-Lee 2006\n** This is or was http://dig.csail.mit.edu/2005/ajar/ajaw/js/rdf/serialize.js\n**\n** Bug: can't serialize  http://data.semanticweb.org/person/abraham-bernstein/rdf\n** in XML (from mhausenblas)\n*/\n// @@@ Check the whole toStr thing tosee whetehr it still makes sense -- tbl\nvar NamedNode = require('./named-node');\nvar BlankNode = require('./blank-node');\nvar Uri = require('./uri');\nvar Util = require('./util');\nvar XSD = require('./xsd');\n\nvar Serializer = function () {\n  var __Serializer = function __Serializer(store) {\n    this.flags = '';\n    this.base = null;\n\n    this.prefixes = []; // suggested prefixes\n    this.namespaces = []; // complementary indexes\n\n    this.suggestPrefix('rdf', 'http://www.w3.org/1999/02/22-rdf-syntax-ns#'); // XML code assumes this!\n    this.suggestPrefix('xml', 'reserved:reservedForFutureUse'); // XML reserves xml: in the spec.\n\n    this.namespacesUsed = []; // Count actually used and so needed in @prefixes\n    this.keywords = ['a']; // The only one we generate at the moment\n    this.prefixchars = 'abcdefghijklmnopqustuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    this.incoming = null; // Array not calculated yet\n    this.formulas = []; // remebering original formulae from hashes\n    this.store = store;\n\n    /* pass */\n  };\n\n  __Serializer.prototype.setBase = function (base) {\n    this.base = base;return this;\n  };\n\n  __Serializer.prototype.setFlags = function (flags) {\n    this.flags = flags ? flags : '';return this;\n  };\n\n  __Serializer.prototype.toStr = function (x) {\n    var s = x.toNT();\n    if (x.termType == 'formula') {\n      this.formulas[s] = x; // remember as reverse does not work\n    }\n    return s;\n  };\n\n  __Serializer.prototype.fromStr = function (s) {\n    if (s[0] == '{') {\n      var x = this.formulas[s];\n      if (!x) console.log('No formula object for ' + s);\n      return x;\n    }\n    return this.store.fromNT(s);\n  };\n  /* Accumulate Namespaces\n  **\n  ** These are only hints.  If two overlap, only one gets used\n  ** There is therefore no guarantee in general.\n  */\n  __Serializer.prototype.suggestPrefix = function (prefix, uri) {\n    if (prefix.slice(0, 7) === 'default') return; // Try to weed these out\n    if (prefix.slice(0, 2) === 'ns') return; //  From others inferior algos\n    if (!prefix || !uri) return; // empty strings not suitable\n    if (prefix in this.namespaces || uri in this.prefixes) return; // already used\n    this.prefixes[uri] = prefix;\n    this.namespaces[prefix] = uri;\n  };\n\n  // Takes a namespace -> prefix map\n  __Serializer.prototype.suggestNamespaces = function (namespaces) {\n    for (var px in namespaces) {\n      this.suggestPrefix(px, namespaces[px]);\n      return this;\n    }\n  };\n\n  __Serializer.prototype.checkIntegrity = function () {\n    var p, ns;\n    for (p in this.namespaces) {\n      if (this.prefixes[this.namespaces[p]] !== p) {\n        throw 'Serializer integity error 1: ' + p + ', ' + this.namespaces[p] + ', ' + this.prefixes[this.namespaces[p]] + '!';\n      }\n    }\n    for (ns in this.prefixes) {\n      if (this.namespaces[this.prefixes[ns]] !== ns) {\n        throw 'Serializer integity error 2: ' + ns + ', ' + this.prefixs[ns] + ', ' + this.namespaces[this.prefixes[ns]] + '!';\n      }\n    }\n  };\n\n  // Make up an unused prefix for a random namespace\n  __Serializer.prototype.makeUpPrefix = function (uri) {\n    var p = uri;\n    var pok;\n    function canUse(pp) {\n      if (!__Serializer.prototype.validPrefix.test(pp)) return false; // bad format\n      if (pp === 'ns') return false; // boring\n      if (pp in this.namespaces) return false; // already used\n      this.prefixes[uri] = pp;\n      this.namespaces[pp] = uri;\n      pok = pp;\n      return true;\n    }\n    canUse = canUse.bind(this);\n    /*    for (var ns in this.prefixes) {\n            namespaces[this.prefixes[ns]] = ns // reverse index foo\n        }\n        */\n    if ('#/'.indexOf(p[p.length - 1]) >= 0) p = p.slice(0, -1);\n    var slash = p.lastIndexOf('/');\n    if (slash >= 0) p = p.slice(slash + 1);\n    var i = 0;\n    while (i < p.length) {\n      if (this.prefixchars.indexOf(p[i])) i++;else break;\n    }p = p.slice(0, i);\n    if (p.length < 6 && canUse(p)) return pok; // exact i sbest\n    if (canUse(p.slice(0, 3))) return pok;\n    if (canUse(p.slice(0, 2))) return pok;\n    if (canUse(p.slice(0, 4))) return pok;\n    if (canUse(p.slice(0, 1))) return pok;\n    if (canUse(p.slice(0, 5))) return pok;\n    if (!__Serializer.prototype.validPrefix.test(p)) {\n      p = 'n'; // Otherwise the loop below may never termimnate\n    }\n    for (var i = 0;; i++) {\n      if (canUse(p.slice(0, 3) + i)) return pok;\n    }\n  };\n  // Todo:\n  //  - Sort the statements by subject, pred, object\n  //  - do stuff about the docu first and then (or first) about its primary topic.\n\n  __Serializer.prototype.rootSubjects = function (sts) {\n    var incoming = {};\n    var subjects = {};\n    var allBnodes = {};\n\n    /* This scan is to find out which nodes will have to be the roots of trees\n    ** in the serialized form. This will be any symbols, and any bnodes\n    ** which hve more or less than one incoming arc, and any bnodes which have\n    ** one incoming arc but it is an uninterrupted loop of such nodes back to itself.\n    ** This should be kept linear time with repect to the number of statements.\n    ** Note it does not use any indexing of the store.\n    */\n    // $rdf.log.debug('serialize.js Find bnodes with only one incoming arc\\n')\n    for (var i = 0; i < sts.length; i++) {\n      var st = sts[i];\n      var st2 = [st.subject, st.predicate, st.object];\n      st2.map(function (y) {\n        if (y.termType == 'BlankNode') {\n          allBnodes[y.toNT()] = true;\n        }\n      });\n      var x = sts[i].object;\n      if (!incoming.hasOwnProperty(x)) incoming[x] = [];\n      incoming[x].push(st.subject); // List of things which will cause this to be printed\n      var ss = subjects[this.toStr(st.subject)]; // Statements with this as subject\n      if (!ss) ss = [];\n      ss.push(st);\n      subjects[this.toStr(st.subject)] = ss; // Make hash. @@ too slow for formula?\n      // $rdf.log.debug(' sz potential subject: '+sts[i].subject)\n    }\n\n    var roots = [];\n    for (var xNT in subjects) {\n      if (!subjects.hasOwnProperty(xNT)) continue;\n      var x = this.fromStr(xNT);\n      if (x.termType != 'BlankNode' || !incoming[x] || incoming[x].length != 1) {\n        roots.push(x);\n        // $rdf.log.debug(' sz actual subject -: ' + x)\n        continue;\n      }\n    }\n    this.incoming = incoming; // Keep for serializing @@ Bug for nested formulas\n\n    // ////////// New bit for CONNECTED bnode loops:frootshash\n\n    // This scans to see whether the serialization is gpoing to lead to a bnode loop\n    // and at the same time accumulates a list of all bnodes mentioned.\n    // This is in fact a cut down N3 serialization\n    /*\n        // $rdf.log.debug('serialize.js Looking for connected bnode loops\\n')\n        for (var i=0; i<sts.length; i++) { // @@TBL\n            // dump('\\t'+sts[i]+'\\n')\n        }\n        var doneBnodesNT = {}\n        function dummyPropertyTree(subject, subjects, rootsHash) {\n            // dump('dummyPropertyTree('+subject+'...)\\n')\n            var sts = subjects[sz.toStr(subject)] // relevant statements\n            for (var i=0; i<sts.length; i++) {\n                dummyObjectTree(sts[i].object, subjects, rootsHash)\n            }\n        }\n         // Convert a set of statements into a nested tree of lists and strings\n        // @param force,    \"we know this is a root, do it anyway. It isn't a loop.\"\n        function dummyObjectTree(obj, subjects, rootsHash, force) {\n            // dump('dummyObjectTree('+obj+'...)\\n')\n            if (obj.termType == 'BlankNode' && (subjects[sz.toStr(obj)]  &&\n                (force || (rootsHash[obj.toNT()] == undefined )))) {// and there are statements\n                if (doneBnodesNT[obj.toNT()]) { // Ah-ha! a loop\n                    throw \"Serializer: Should be no loops \"+obj\n                }\n                doneBnodesNT[obj.toNT()] = true\n                return  dummyPropertyTree(obj, subjects, rootsHash)\n            }\n            return dummyTermToN3(obj, subjects, rootsHash)\n        }\n         // Scan for bnodes nested inside lists too\n        function dummy  subjects, rootsHash) {\n            if (expr.termType == 'BlankNode') doneBnodesNT[expr.toNT()] = true\n            // $rdf.log.debug('serialize: seen '+expr)\n            if (expr.termType == 'collection') {\n                for (i=0; i<expr.elements.length; i++) {\n                    if (expr.elements[i].termType == 'BlankNode')\n                        dummyObjectTree(expr.elements[i], subjects, rootsHash)\n                }\n            return\n            }\n        }\n         // The tree for a subject\n        function dummySubjectTree(subject, subjects, rootsHash) {\n            // dump('dummySubjectTree('+subject+'...)\\n')\n            if (subject.termType == 'BlankNode' && !incoming[subject])\n                return dummyObjectTree(subject, subjects, rootsHash, true) // Anonymous bnode subject\n            dummyTermToN3(subject, subjects, rootsHash)\n            dummyPropertyTree(subject, subjects, rootsHash)\n        }\n    */\n    // Now do the scan using existing roots\n    // $rdf.log.debug('serialize.js Dummy serialize to check for missing nodes')\n    var rootsHash = {};\n    for (var i = 0; i < roots.length; i++) {\n      rootsHash[roots[i].toNT()] = true;\n    } /*\n          for (var i=0; i<roots.length; i++) {\n              var root = roots[i]\n              dummySubjectTree(root, subjects, rootsHash)\n          }\n          // dump('Looking for mising bnodes...\\n')\n       // Now in new roots for anythig not acccounted for\n      // Now we check for any bndoes which have not been covered.\n      // Such bnodes must be in isolated rings of pure bnodes.\n      // They each have incoming link of 1.\n           // $rdf.log.debug('serialize.js Looking for connected bnode loops\\n')\n          for (;;) {\n              var bnt\n              var found = null\n              for (bnt in allBnodes) { // @@ Note: not repeatable. No canonicalisation\n                  if (doneBnodesNT[bnt]) continue\n                  found = bnt; // Ah-ha! not covered\n                  break\n              }\n              if (found == null) break; // All done - no bnodes left out/\n              // dump('Found isolated bnode:'+found+'\\n')\n              doneBnodesNT[bnt] = true\n              var root = this.store.fromNT(found)\n              roots.push(root) // Add a new root\n              rootsHash[found] = true\n              // $rdf.log.debug('isolated bnode:'+found+', subjects[found]:'+subjects[found]+'\\n')\n              if (subjects[found] == undefined) {\n                  for (var i=0; i<sts.length; i++) {\n                      // dump('\\t'+sts[i]+'\\n')\n                  }\n                  throw \"Isolated node should be a subject\" +found\n              }\n              dummySubjectTree(root, subjects, rootsHash) // trace out the ring\n          }\n          // dump('Done bnode adjustments.\\n')\n      */\n    return { 'roots': roots, 'subjects': subjects,\n      'rootsHash': rootsHash, 'incoming': incoming };\n  };\n\n  // //////////////////////////////////////////////////////\n\n  __Serializer.prototype.toN3 = function (f) {\n    return this.statementsToN3(f.statements);\n  };\n\n  __Serializer.prototype._notQNameChars = '\\t\\r\\n !\"#$%&\\'()*.,+/;<=>?@[\\\\]^`{|}~';\n  __Serializer.prototype._notNameChars = __Serializer.prototype._notQNameChars + ':';\n\n  __Serializer.prototype.explicitURI = function (uri) {\n    if (this.flags.indexOf('r') < 0 && this.base) uri = Uri.refTo(this.base, uri);else if (this.flags.indexOf('u') >= 0) // Unicode encoding NTriples style\n      uri = backslashUify(uri);else uri = hexify(uri);\n    return '<' + uri + '>';\n  };\n\n  __Serializer.prototype.statementsToNTriples = function (sts) {\n    var sorted = sts.slice();\n    sorted.sort();\n    var str = '';\n    var rdfns = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#';\n    var self = this;\n    var kb = this.store;\n    var termToNT = function termToNT(x) {\n      if (x.termType !== 'collection') {\n        return self.atomicTermToN3(x);\n      }\n      var list = x.elements;\n      var rest = kb.sym(rdfns + 'nill');\n      for (var i = list.length - 1; i >= 0; i--) {\n        var bnode = new BlankNode();\n        str += termToNT(bnode) + ' ' + termToNT(kb.sym(rdfns + 'first')) + ' ' + termToNT(list[i]) + '.\\n';\n        str += termToNT(bnode) + ' ' + termToNT(kb.sym(rdfns + 'rest')) + ' ' + termToNT(rest) + '.\\n';\n        rest = bnode;\n      }\n      return self.atomicTermToN3(rest);\n    };\n    for (var i = 0; i < sorted.length; i++) {\n      var st = sorted[i];\n      var s = '';\n      s += termToNT(st.subject) + ' ';\n      s += termToNT(st.predicate) + ' ';\n      s += termToNT(st.object) + ' ';\n      if (this.flags.indexOf('q') >= 0) {\n        // Do quads not nrtiples\n        s += termToNT(st.why) + ' ';\n      }\n      s += '.\\n';\n      str += s;\n    }\n    return str;\n  };\n\n  __Serializer.prototype.statementsToN3 = function (sts) {\n    var indent = 4;\n    var width = 80;\n\n    var predMap = {};\n\n    if (this.flags.indexOf('s') < 0) {\n      predMap['http://www.w3.org/2002/07/owl#sameAs'] = '=';\n    }\n    if (this.flags.indexOf('t') < 0) {\n      predMap['http://www.w3.org/1999/02/22-rdf-syntax-ns#type'] = 'a';\n    }\n    if (this.flags.indexOf('i') < 0) {\n      predMap['http://www.w3.org/2000/10/swap/log#implies'] = '=>';\n    }\n    // //////////////////////// Arrange the bits of text\n\n    var spaces = function spaces(n) {\n      var s = '';\n      for (var i = 0; i < n; i++) {\n        s += ' ';\n      }return s;\n    };\n\n    var treeToLine = function treeToLine(tree) {\n      var str = '';\n      for (var i = 0; i < tree.length; i++) {\n        var branch = tree[i];\n        var s2 = typeof branch == 'string' ? branch : treeToLine(branch);\n        // Note the space before the dot in case statement ends 123. which is in fact allowed but be conservative.\n        if (i != 0 && s2 != ',' && s2 != ';') str += ' '; // was also:  && s2 != '.'\n        str += s2;\n      }\n      return str;\n    };\n\n    // Convert a nested tree of lists and strings to a string\n    var treeToString = function treeToString(tree, level) {\n      var str = '';\n      var lastLength = 100000;\n      if (!level) level = 0;\n      for (var i = 0; i < tree.length; i++) {\n        var branch = tree[i];\n        if (typeof branch != 'string') {\n          var substr = treeToString(branch, level + 1);\n          if (substr.length < 10 * (width - indent * level) && substr.indexOf('\"\"\"') < 0) {\n            // Don't mess up multiline strings\n            var line = treeToLine(branch);\n            if (line.length < width - indent * level) {\n              branch = '   ' + line; //   @@ Hack: treat as string below\n              substr = '';\n            }\n          }\n          if (substr) lastLength = 10000;\n          str += substr;\n        }\n        if (typeof branch == 'string') {\n          if (branch.length == '1' && str.slice(-1) == '\\n') {\n            if (',.;'.indexOf(branch) >= 0) {\n              str = str.slice(0, -1) + branch + '\\n'; //  slip punct'n on end\n              lastLength += 1;\n              continue;\n            } else if ('])}'.indexOf(branch) >= 0) {\n              str = str.slice(0, -1) + ' ' + branch + '\\n';\n              lastLength += 2;\n              continue;\n            }\n          }\n          if (lastLength < indent * level + 4) {\n            // continue\n            str = str.slice(0, -1) + ' ' + branch + '\\n';\n            lastLength += branch.length + 1;\n          } else {\n            var line = spaces(indent * level) + branch;\n            str += line + '\\n';\n            lastLength = line.length;\n          }\n        } else {// not string\n        }\n      }\n      return str;\n    };\n\n    // //////////////////////////////////////////// Structure for N3\n    // Convert a set of statements into a nested tree of lists and strings\n    function statementListToTree(statements) {\n      // print('Statement tree for '+statements.length)\n      var res = [];\n      var stats = this.rootSubjects(statements);\n      var roots = stats.roots;\n      var results = [];\n      for (var i = 0; i < roots.length; i++) {\n        var root = roots[i];\n        results.push(subjectTree(root, stats));\n      }\n      return results;\n    }\n    statementListToTree = statementListToTree.bind(this);\n\n    // The tree for a subject\n    function subjectTree(subject, stats) {\n      if (subject.termType == 'BlankNode' && !stats.incoming[subject]) return objectTree(subject, stats, true).concat(['.']); // Anonymous bnode subject\n      return [termToN3(subject, stats)].concat([propertyTree(subject, stats)]).concat(['.']);\n    }\n    // The property tree for a single subject or anonymous node\n    function propertyTree(subject, stats) {\n      // print('Proprty tree for '+subject)\n      var results = [];\n      var lastPred = null;\n      var sts = stats.subjects[this.toStr(subject)]; // relevant statements\n      if (typeof sts == 'undefined') {\n        throw 'Cant find statements for ' + subject;\n      }\n\n      var SPO = function SPO(x, y) {\n        return Util.heavyCompareSPO(x, y, this.store);\n      };\n      sts.sort(); // 2014-09-30\n      //        sts.sort(SPO); // 2014-09-30\n      var objects = [];\n      for (var i = 0; i < sts.length; i++) {\n        var st = sts[i];\n        if (st.predicate.uri == lastPred) {\n          objects.push(',');\n        } else {\n          if (lastPred) {\n            results = results.concat([objects]).concat([';']);\n            objects = [];\n          }\n          results.push(predMap[st.predicate.uri] ? predMap[st.predicate.uri] : termToN3(st.predicate, stats));\n        }\n        lastPred = st.predicate.uri;\n        objects.push(objectTree(st.object, stats));\n      }\n      results = results.concat([objects]);\n      return results;\n    }\n    propertyTree = propertyTree.bind(this);\n\n    function objectTree(obj, stats, force) {\n      if (obj.termType == 'BlankNode' && stats.subjects[this.toStr(obj)] && ( // and there are statements\n      force || stats.rootsHash[obj.toNT()] == undefined)) // and not a root\n        return ['['].concat(propertyTree(obj, stats)).concat([']']);\n      return termToN3(obj, stats);\n    }\n    objectTree = objectTree.bind(this);\n\n    function termToN3(expr, stats) {\n      //\n      var i;\n      switch (expr.termType) {\n        case 'formula':\n          var res = ['{'];\n          res = res.concat(statementListToTree(expr.statements));\n          return res.concat(['}']);\n\n        case 'collection':\n          var res = ['('];\n          for (i = 0; i < expr.elements.length; i++) {\n            res.push([objectTree(expr.elements[i], stats)]);\n          }\n          res.push(')');\n          return res;\n\n        default:\n          return this.atomicTermToN3(expr);\n      }\n    }\n    __Serializer.prototype.termToN3 = termToN3;\n    termToN3 = termToN3.bind(this);\n\n    function prefixDirectives() {\n      var str = '';\n      if (this.defaultNamespace) str += '@prefix : <' + this.defaultNamespace + '>.\\n';\n      for (var ns in this.prefixes) {\n        if (!this.prefixes.hasOwnProperty(ns)) continue;\n        if (!this.namespacesUsed[ns]) continue;\n        str += '@prefix ' + this.prefixes[ns] + ': ' + this.explicitURI(ns) + '.\\n';\n      }\n      return str + '\\n';\n    }\n    var prefixDirectives = prefixDirectives.bind(this);\n\n    // Body of statementsToN3:\n\n    var tree = statementListToTree(sts);\n    return prefixDirectives() + treeToString(tree, -1);\n  };\n  // //////////////////////////////////////////// Atomic Terms\n\n  //  Deal with term level things and nesting with no bnode structure\n  __Serializer.prototype.atomicTermToN3 = function atomicTermToN3(expr, stats) {\n    switch (expr.termType) {\n      case 'BlankNode':\n      case 'Variable':\n        return expr.toNT();\n      case 'Literal':\n        if (expr.datatype && this.flags.indexOf('x') < 0) {\n          // Supress native numbers\n          switch (expr.datatype.uri) {\n            case 'http://www.w3.org/2001/XMLSchema#integer':\n              return expr.value.toString();\n\n            // case 'http://www.w3.org/2001/XMLSchema#double': // Must force use of 'e'\n\n            case 'http://www.w3.org/2001/XMLSchema#boolean':\n              return expr.value ? 'true' : 'false';\n          }\n        }\n        var str = this.stringToN3(expr.value);\n        if (expr.language) {\n          str += '@' + expr.language;\n        } else if (!expr.datatype.equals(XSD.string)) {\n          str += '^^' + this.atomicTermToN3(expr.datatype, stats);\n        }\n        return str;\n      case 'NamedNode':\n        return this.symbolToN3(expr);\n      default:\n        throw 'Internal: atomicTermToN3 cannot handle ' + expr + ' of termType: ' + expr.termType + '\\n';\n        return '' + expr;\n    }\n  };\n\n  //  stringToN3:  String escaping for N3\n\n  __Serializer.prototype.validPrefix = new RegExp(/^[a-zA-Z][a-zA-Z0-9]*$/);\n\n  __Serializer.prototype.forbidden1 = new RegExp(/[\\\\\"\\b\\f\\r\\v\\t\\n\\u0080-\\uffff]/gm);\n  __Serializer.prototype.forbidden3 = new RegExp(/[\\\\\"\\b\\f\\r\\v\\u0080-\\uffff]/gm);\n  __Serializer.prototype.stringToN3 = function stringToN3(str, flags) {\n    if (!flags) flags = 'e';\n    var res = '',\n        i = 0,\n        j = 0;\n    var delim;\n    var forbidden;\n    if (str.length > 20 // Long enough to make sense\n    && str.slice(-1) != '\"' // corner case'\n    && flags.indexOf('n') < 0 // Force single line\n    && (str.indexOf('\\n') > 0 || str.indexOf('\"') > 0)) {\n      delim = '\"\"\"';\n      forbidden = __Serializer.prototype.forbidden3;\n    } else {\n      delim = '\"';\n      forbidden = __Serializer.prototype.forbidden1;\n    }\n    for (var i = 0; i < str.length;) {\n      forbidden.lastIndex = 0;\n      var m = forbidden.exec(str.slice(i));\n      if (m == null) break;\n      j = i + forbidden.lastIndex - 1;\n      res += str.slice(i, j);\n      var ch = str[j];\n      if (ch == '\"' && delim == '\"\"\"' && str.slice(j, j + 3) != '\"\"\"') {\n        res += ch;\n      } else {\n        var k = '\\b\\f\\r\\t\\v\\n\\\\\"'.indexOf(ch); // No escaping of bell (7)?\n        if (k >= 0) {\n          res += '\\\\' + 'bfrtvn\\\\\"'[k];\n        } else {\n          if (flags.indexOf('e') >= 0) {\n            // Unicode escaping in strings not unix style\n            res += '\\\\u' + ('000' + ch.charCodeAt(0).toString(16).toLowerCase()).slice(-4);\n          } else {\n            // no 'e' flag\n            res += ch;\n          }\n        }\n      }\n      i = j + 1;\n    }\n    return delim + res + str.slice(i) + delim;\n  };\n  //  A single symbol, either in  <> or namespace notation\n\n  __Serializer.prototype.symbolToN3 = function symbolToN3(x) {\n    // c.f. symbolString() in notation3.py\n    var uri = x.uri;\n    var j = uri.indexOf('#');\n    if (j < 0 && this.flags.indexOf('/') < 0) {\n      j = uri.lastIndexOf('/');\n    }\n    if (j >= 0 && this.flags.indexOf('p') < 0 && (\n    // Can split at namespace but only if http[s]: URI or file: or ws[s] (why not others?)\n    uri.indexOf('http') === 0 || uri.indexOf('ws') === 0 || uri.indexOf('file') === 0)) {\n      var canSplit = true;\n      for (var k = j + 1; k < uri.length; k++) {\n        if (__Serializer.prototype._notNameChars.indexOf(uri[k]) >= 0) {\n          canSplit = false;\n          break;\n        }\n      }\n\n      if (uri.slice(0, j + 1) == this.base + '#') {\n        // base-relative\n        return '<#' + uri.slice(j + 1) + '>';\n      }\n      if (canSplit) {\n        var localid = uri.slice(j + 1);\n        var namesp = uri.slice(0, j + 1);\n        if (this.defaultNamespace && this.defaultNamespace == namesp && this.flags.indexOf('d') < 0) {\n          // d -> suppress default\n          if (this.flags.indexOf('k') >= 0 && this.keyords.indexOf(localid) < 0) return localid;\n          return ':' + localid;\n        }\n        this.checkIntegrity(); //  @@@ Remove when not testing\n        var prefix = this.prefixes[namesp];\n        if (!prefix) prefix = this.makeUpPrefix(namesp);\n        if (prefix) {\n          this.namespacesUsed[namesp] = true;\n          return prefix + ':' + localid;\n        }\n        // Fall though if can't do qname\n      }\n    }\n    return this.explicitURI(uri);\n  };\n\n  // String escaping utilities\n\n  function hexify(str) {\n    // also used in parser\n    return encodeURI(str);\n  }\n\n  function backslashUify(str) {\n    var res = '',\n        k;\n    for (var i = 0; i < str.length; i++) {\n      k = str.charCodeAt(i);\n      if (k > 65535) res += '\\\\U' + ('00000000' + k.toString(16)).slice(-8); // convert to upper?\n      else if (k > 126) res += '\\\\u' + ('0000' + k.toString(16)).slice(-4);else res += str[i];\n    }\n    return res;\n  }\n\n  // /////////////////////////// Quad store serialization\n\n  // @para. write  - a function taking a single string to be output\n  //\n  __Serializer.prototype.writeStore = function (write) {\n    var kb = this.store;\n    var fetcher = kb.fetcher;\n    var session = fetcher && fetcher.appNode;\n\n    // The core data\n\n    var sources = this.store.index[3];\n    for (var s in sources) {\n      // -> assume we can use -> as short for log:semantics\n      var source = kb.fromNT(s);\n      if (session && source.sameTerm(session)) continue;\n      write('\\n' + this.atomicTermToN3(source) + ' ' + this.atomicTermToN3(kb.sym('http://www.w3.org/2000/10/swap/log#semantics')) + ' { ' + this.statementsToN3(kb.statementsMatching(undefined, undefined, undefined, source)) + ' }.\\n');\n    }\n\n    // The metadata from HTTP interactions:\n\n    kb.statementsMatching(undefined, kb.sym('http://www.w3.org/2007/ont/link#requestedURI')).map(function (st) {\n      write('\\n<' + st.object.value + '> log:metadata {\\n');\n      var sts = kb.statementsMatching(undefined, undefined, undefined, st.subject);\n      write(this.statementsToN3(this.statementsToN3(sts)));\n      write('}.\\n');\n    });\n\n    // Inferences we have made ourselves not attributable to anyone else\n\n    var metaSources = [];\n    if (session) metaSources.push(session);\n    var metadata = [];\n    metaSources.map(function (source) {\n      metadata = metadata.concat(kb.statementsMatching(undefined, undefined, undefined, source));\n    });\n    write(this.statementsToN3(metadata));\n  };\n\n  // ////////////////////////////////////////////// XML serialization\n\n  __Serializer.prototype.statementsToXML = function (sts) {\n    var indent = 4;\n    var width = 80;\n\n    var namespaceCounts = []; // which have been used\n    namespaceCounts['http://www.w3.org/1999/02/22-rdf-syntax-ns#'] = true;\n\n    var liPrefix = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#_'; // prefix for ordered list items\n\n    // //////////////////////// Arrange the bits of XML text\n\n    var spaces = function spaces(n) {\n      var s = '';\n      for (var i = 0; i < n; i++) {\n        s += ' ';\n      }return s;\n    };\n\n    var XMLtreeToLine = function XMLtreeToLine(tree) {\n      var str = '';\n      for (var i = 0; i < tree.length; i++) {\n        var branch = tree[i];\n        var s2 = typeof branch == 'string' ? branch : XMLtreeToLine(branch);\n        str += s2;\n      }\n      return str;\n    };\n\n    // Convert a nested tree of lists and strings to a string\n    var XMLtreeToString = function XMLtreeToString(tree, level) {\n      var str = '';\n      var lastLength = 100000;\n      if (!level) level = 0;\n      for (var i = 0; i < tree.length; i++) {\n        var branch = tree[i];\n        if (typeof branch != 'string') {\n          var substr = XMLtreeToString(branch, level + 1);\n          if (substr.length < 10 * (width - indent * level) && substr.indexOf('\"\"\"') < 0) {\n            // Don't mess up multiline strings\n            var line = XMLtreeToLine(branch);\n            if (line.length < width - indent * level) {\n              branch = '   ' + line; //   @@ Hack: treat as string below\n              substr = '';\n            }\n          }\n          if (substr) lastLength = 10000;\n          str += substr;\n        }\n        if (typeof branch == 'string') {\n          if (lastLength < indent * level + 4) {\n            // continue\n            str = str.slice(0, -1) + ' ' + branch + '\\n';\n            lastLength += branch.length + 1;\n          } else {\n            var line = spaces(indent * level) + branch;\n            str += line + '\\n';\n            lastLength = line.length;\n          }\n        } else {// not string\n        }\n      }\n      return str;\n    };\n\n    function statementListToXMLTree(statements) {\n      this.suggestPrefix('rdf', 'http://www.w3.org/1999/02/22-rdf-syntax-ns#');\n      var stats = this.rootSubjects(statements);\n      var roots = stats.roots;\n      var results = [];\n      for (var i = 0; i < roots.length; i++) {\n        root = roots[i];\n        results.push(subjectXMLTree(root, stats));\n      }\n      return results;\n    }\n    statementListToXMLTree = statementListToXMLTree.bind(this);\n\n    function escapeForXML(str) {\n      if (typeof str == 'undefined') return '@@@undefined@@@@';\n      return str.replace(/[&<\"]/g, function (m) {\n        switch (m[0]) {\n          case '&':\n            return '&amp;';\n          case '<':\n            return '&lt;';\n          case '\"':\n            return '&quot;'; // '\n        }\n      });\n    }\n\n    function relURI(term) {\n      return escapeForXML(this.base ? Util.uri.refTo(this.base, term.uri) : term.uri);\n    }\n    relURI = relURI.bind(this);\n\n    // The tree for a subject\n    function subjectXMLTree(subject, stats) {\n      var results = [];\n      var type, t, st, pred;\n      var sts = stats.subjects[this.toStr(subject)]; // relevant statements\n      if (typeof sts == 'undefined') {\n        throw 'Serializing XML - Cant find statements for ' + subject;\n      }\n\n      // Sort only on the predicate, leave the order at object\n      // level undisturbed.  This leaves multilingual content in\n      // the order of entry (for partner literals), which helps\n      // readability.\n      //\n      // For the predicate sort, we attempt to split the uri\n      // as a hint to the sequence\n      sts.sort(function (a, b) {\n        var ap = a.predicate.uri;\n        var bp = b.predicate.uri;\n        if (ap.substring(0, liPrefix.length) == liPrefix || bp.substring(0, liPrefix.length) == liPrefix) {\n          // we're only interested in sorting list items\n          return ap.localeCompare(bp);\n        }\n\n        var as = ap.substring(liPrefix.length);\n        var bs = bp.substring(liPrefix.length);\n        var an = parseInt(as);\n        var bn = parseInt(bs);\n        if (isNaN(an) || isNaN(bn) || an != as || bn != bs) {\n          // we only care about integers\n          return ap.localeCompare(bp);\n        }\n\n        return an - bn;\n      });\n\n      for (var i = 0; i < sts.length; i++) {\n        st = sts[i];\n        // look for a type\n        if (st.predicate.uri == 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type' && !type && st.object.termType == 'symbol') {\n          type = st.object;\n          continue; // don't include it as a child element\n        }\n\n        // see whether predicate can be replaced with \"li\"\n        pred = st.predicate;\n        if (pred.uri.substr(0, liPrefix.length) == liPrefix) {\n          var number = pred.uri.substr(liPrefix.length);\n          // make sure these are actually numeric list items\n          var intNumber = parseInt(number);\n          if (number == intNumber.toString()) {\n            // was numeric; don't need to worry about ordering since we've already\n            // sorted the statements\n            pred = new NamedNode('http://www.w3.org/1999/02/22-rdf-syntax-ns#li');\n          }\n        }\n\n        t = qname(pred);\n        switch (st.object.termType) {\n          case 'BlankNode':\n            if (stats.incoming[st.object].length == 1) {\n              // there should always be something in the incoming array for a bnode\n              results = results.concat(['<' + t + '>', subjectXMLTree(st.object, stats), '</' + t + '>']);\n            } else {\n              results = results.concat(['<' + t + ' rdf:nodeID=\"' + st.object.toNT().slice(2) + '\"/>']);\n            }\n            break;\n          case 'NamedNode':\n            results = results.concat(['<' + t + ' rdf:resource=\"' + relURI(st.object) + '\"/>']);\n            break;\n          case 'Literal':\n            results = results.concat(['<' + t + (st.object.datatype.equals(XSD.string) ? '' : ' rdf:datatype=\"' + escapeForXML(st.object.datatype.uri) + '\"') + (st.object.language ? ' xml:lang=\"' + st.object.language + '\"' : '') + '>' + escapeForXML(st.object.value) + '</' + t + '>']);\n            break;\n          case 'collection':\n            results = results.concat(['<' + t + ' rdf:parseType=\"Collection\">', collectionXMLTree(st.object, stats), '</' + t + '>']);\n            break;\n          default:\n            throw \"Can't serialize object of type \" + st.object.termType + ' into XML';\n        } // switch\n      }\n\n      var tag = type ? qname(type) : 'rdf:Description';\n\n      var attrs = '';\n      if (subject.termType == 'BlankNode') {\n        if (!stats.incoming[subject] || stats.incoming[subject].length != 1) {\n          // not an anonymous bnode\n          attrs = ' rdf:nodeID=\"' + subject.toNT().slice(2) + '\"';\n        }\n      } else {\n        attrs = ' rdf:about=\"' + relURI(subject) + '\"';\n      }\n\n      return ['<' + tag + attrs + '>'].concat([results]).concat(['</' + tag + '>']);\n    }\n\n    subjectXMLTree = subjectXMLTree.bind(this);\n\n    function collectionXMLTree(subject, stats) {\n      var res = [];\n      for (var i = 0; i < subject.elements.length; i++) {\n        res.push(subjectXMLTree(subject.elements[i], stats));\n      }\n      return res;\n    }\n\n    // The property tree for a single subject or anonymos node\n    function propertyXMLTree(subject, stats) {\n      var results = [];\n      var sts = stats.subjects[this.toStr(subject)]; // relevant statements\n      if (sts == undefined) return results; // No relevant statements\n      sts.sort();\n      for (var i = 0; i < sts.length; i++) {\n        var st = sts[i];\n        switch (st.object.termType) {\n          case 'BlankNode':\n            if (stats.rootsHash[st.object.toNT()]) {\n              // This bnode has been done as a root -- no content here @@ what bout first time\n              results = results.concat(['<' + qname(st.predicate) + ' rdf:nodeID=\"' + st.object.toNT().slice(2) + '\">', '</' + qname(st.predicate) + '>']);\n            } else {\n              results = results.concat(['<' + qname(st.predicate) + ' rdf:parseType=\"Resource\">', propertyXMLTree(st.object, stats), '</' + qname(st.predicate) + '>']);\n            }\n            break;\n          case 'NamedNode':\n            results = results.concat(['<' + qname(st.predicate) + ' rdf:resource=\"' + relURI(st.object) + '\"/>']);\n            break;\n          case 'Literal':\n            results = results.concat(['<' + qname(st.predicate) + (st.object.datatype.equals(XSD.string) ? '' : ' rdf:datatype=\"' + escapeForXML(st.object.datatype.value) + '\"') + (st.object.language ? ' xml:lang=\"' + st.object.language + '\"' : '') + '>' + escapeForXML(st.object.value) + '</' + qname(st.predicate) + '>']);\n            break;\n          case 'collection':\n            results = results.concat(['<' + qname(st.predicate) + ' rdf:parseType=\"Collection\">', collectionXMLTree(st.object, stats), '</' + qname(st.predicate) + '>']);\n            break;\n          default:\n            throw \"Can't serialize object of type \" + st.object.termType + ' into XML';\n\n        } // switch\n      }\n      return results;\n    }\n    propertyXMLTree = propertyXMLTree.bind(this);\n\n    function qname(term) {\n      var uri = term.uri;\n\n      var j = uri.indexOf('#');\n      if (j < 0 && this.flags.indexOf('/') < 0) {\n        j = uri.lastIndexOf('/');\n      }\n      if (j < 0) throw 'Cannot make qname out of <' + uri + '>';\n\n      var canSplit = true;\n      for (var k = j + 1; k < uri.length; k++) {\n        if (__Serializer.prototype._notNameChars.indexOf(uri[k]) >= 0) {\n          throw 'Invalid character \"' + uri[k] + '\" cannot be in XML qname for URI: ' + uri;\n        }\n      }\n      var localid = uri.slice(j + 1);\n      var namesp = uri.slice(0, j + 1);\n      if (this.defaultNamespace && this.defaultNamespace == namesp && this.flags.indexOf('d') < 0) {\n        // d -> suppress default\n        return localid;\n      }\n      var prefix = this.prefixes[namesp];\n      if (!prefix) prefix = this.makeUpPrefix(namesp);\n      namespaceCounts[namesp] = true;\n      return prefix + ':' + localid;\n      //        throw ('No prefix for namespace \"'+namesp +'\" for XML qname for '+uri+', namespaces: '+sz.prefixes+' sz='+sz)\n    }\n    qname = qname.bind(this);\n\n    // Body of toXML:\n\n    var tree = statementListToXMLTree(sts);\n    var str = '<rdf:RDF';\n    if (this.defaultNamespace) str += ' xmlns=\"' + escapeForXML(this.defaultNamespace) + '\"';\n    for (var ns in namespaceCounts) {\n      if (!namespaceCounts.hasOwnProperty(ns)) continue;\n      str += '\\n xmlns:' + this.prefixes[ns] + '=\"' + escapeForXML(ns) + '\"';\n    }\n    str += '>';\n\n    var tree2 = [str, tree, '</rdf:RDF>']; // @@ namespace declrations\n    return XMLtreeToString(tree2, -1);\n  }; // End @@ body\n\n  var Serializer = function Serializer(store) {\n    return new __Serializer(store);\n  };\n  return Serializer;\n}();\n\nmodule.exports = Serializer;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rdflib/lib/serializer.js\n// module id = 70\n// module chunks = 0","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Node = require('./node');\n\nvar Statement = function () {\n  function Statement(subject, predicate, object, graph) {\n    _classCallCheck(this, Statement);\n\n    this.subject = Node.fromValue(subject);\n    this.predicate = Node.fromValue(predicate);\n    this.object = Node.fromValue(object);\n    this.why = graph; // property currently used by rdflib\n  }\n\n  _createClass(Statement, [{\n    key: 'equals',\n    value: function equals(other) {\n      return other.subject.equals(this.subject) && other.predicate.equals(this.predicate) && other.object.equals(this.object) && other.graph.equals(this.graph);\n    }\n  }, {\n    key: 'substitute',\n    value: function substitute(bindings) {\n      var y = new Statement(this.subject.substitute(bindings), this.predicate.substitute(bindings), this.object.substitute(bindings), this.why.substitute(bindings)); // 2016\n      console.log('@@@ statement substitute:' + y);\n      return y;\n    }\n  }, {\n    key: 'toCanonical',\n    value: function toCanonical() {\n      var terms = [this.subject.toCanonical(), this.predicate.toCanonical(), this.object.toCanonical()];\n      if (this.graph && this.graph.termType !== 'DefaultGraph') {\n        terms.push(this.graph.toCanonical());\n      }\n      return terms.join(' ') + ' .';\n    }\n  }, {\n    key: 'toNT',\n    value: function toNT() {\n      return [this.subject.toNT(), this.predicate.toNT(), this.object.toNT()].join(' ') + ' .';\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return this.toNT();\n    }\n  }, {\n    key: 'graph',\n    get: function get() {\n      return this.why;\n    },\n    set: function set(g) {\n      this.why = g;\n    }\n  }]);\n\n  return Statement;\n}();\n\nmodule.exports = Statement;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rdflib/lib/statement.js\n// module id = 71\n// module chunks = 0","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ClassOrder = require('./class-order');\nvar Node = require('./node');\nvar Uri = require('./uri');\n\n/**\n * Variables are placeholders used in patterns to be matched.\n * In cwm they are symbols which are the formula's list of quantified variables.\n * In sparql they are not visibly URIs.  Here we compromise, by having\n * a common special base URI for variables. Their names are uris,\n * but the ? notation has an implicit base uri of 'varid:'\n * @class Variable\n */\n\nvar Variable = function (_Node) {\n  _inherits(Variable, _Node);\n\n  function Variable() {\n    var name = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];\n\n    _classCallCheck(this, Variable);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Variable).call(this));\n\n    _this.termType = Variable.termType;\n    _this.value = name;\n    _this.base = 'varid:';\n    _this.uri = Uri.join(name, _this.base);\n    return _this;\n  }\n\n  _createClass(Variable, [{\n    key: 'equals',\n    value: function equals(other) {\n      if (!other) {\n        return false;\n      }\n      return this.termType === other.termType && this.value === other.value;\n    }\n  }, {\n    key: 'hashString',\n    value: function hashString() {\n      return this.toString();\n    }\n  }, {\n    key: 'substitute',\n    value: function substitute(bindings) {\n      var ref;\n      return (ref = bindings[this.toNT()]) != null ? ref : this;\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      if (this.uri.slice(0, this.base.length) === this.base) {\n        return '?' + this.uri.slice(this.base.length);\n      }\n      return '?' + this.uri;\n    }\n  }]);\n\n  return Variable;\n}(Node);\n\nVariable.termType = 'Variable';\nVariable.prototype.classOrder = ClassOrder['Variable'];\nVariable.prototype.isVar = 1;\n\nmodule.exports = Variable;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rdflib/lib/variable.js\n// module id = 72\n// module chunks = 0","'use strict';\n\nvar NamedNode = require('./named-node');\n\nfunction Namespace(nsuri) {\n  return function (ln) {\n    return new NamedNode(nsuri + (ln || ''));\n  };\n}\n\nmodule.exports = Namespace;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rdflib/lib/namespace.js\n// module id = 73\n// module chunks = 0","'use strict';\n\nvar _indexedFormula = require('./indexed-formula');\n\nvar _indexedFormula2 = _interopRequireDefault(_indexedFormula);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } } // Matching a formula against another formula\n// Assync as well as Synchronously\n//\n// W3C open source licence 2005.\n//\n// This builds on term.js, match.js (and identity.js?)\n// to allow a query of a formula.\n//\n// Here we introduce for the first time a subclass of term: variable.\n//\n// SVN ID: $Id: query.js 25116 2008-11-15 16:13:48Z timbl $\n\n//  Variable\n//\n// Compare with BlankNode.  They are similar, but a variable\n// stands for something whose value is to be returned.\n// Also, users name variables and want the same name back when stuff is printed\n/* jsl:option explicit*/ // Turn on JavaScriptLint variable declaration checking\n\nvar log = require('./log');\nvar docpart = require('./uri').docpart;\n\n/**\n * Query class, for tracking queries the user has in the UI.\n */\n\nvar Query = function Query(name, id) {\n  _classCallCheck(this, Query);\n\n  this.pat = new _indexedFormula2.default(); // The pattern to search for\n  this.vars = []; // Used by UI code but not in query.js\n  //    this.orderBy = [] // Not used yet\n  this.name = name;\n  this.id = id;\n};\n\n/**\n * This function will match a pattern to the current kb\n *\n * The callback function is called whenever a match is found\n * When fetcher is supplied this will be called to satisfy any resource requests\n * currently not in the kb. The fetcher function needs to be defined manualy and\n * should call $rdf.Util.AJAR_handleNewTerm to process the requested resource.\n *\n * @param\tmyQuery,\ta knowledgebase containing a pattern to use as query\n * @param\tcallback, \twhenever the pattern in myQuery is met this is called with\n * \t\t\t\t\t\tthe new bindings as parameter\n * @param\tfetcher,\twhenever a resource needs to be loaded this gets called  IGNORED OBSOLETE\n *                              f.fetecher is used as a Fetcher instance to do this.\n * @param       onDone          callback when\n */\n\n\nfunction indexedFormulaQuery(myQuery, callback, fetcher, onDone) {\n  // var kb = this\n  // /////////// Debug strings\n  var bindingDebug = function bindingDebug(b) {\n    var str = '';\n    var v;\n    for (v in b) {\n      if (b.hasOwnProperty(v)) {\n        str += '    ' + v + ' -> ' + b[v];\n      }\n    }\n    return str;\n  };\n\n  var bindingsDebug = function bindingsDebug(nbs) {\n    var str = 'Bindings: ';\n    var i;\n    var n = nbs.length;\n    for (i = 0; i < n; i++) {\n      str += bindingDebug(nbs[i][0]) + ';\\n\\t';\n    }\n    return str;\n  }; // bindingsDebug\n\n  // Unification: see also\n  //  http://www.w3.org/2000/10/swap/term.py\n  // for similar things in python\n  //\n  // Unification finds all bindings such that when the binding is applied\n  // to one term it is equal to the other.\n  // Returns: a list of bindings, where a binding is an associative array\n  //  mapping variuable to value.\n\n  var unifyTerm = function unifyTerm(self, other, bindings, formula) {\n    var actual = bindings[self];\n    if (actual === undefined) {\n      // Not mapped\n      if (self.isVar) {\n        /* if (self.isBlank)  //bnodes are existential variables\n        {\n                if (self.toString() == other.toString()) return [[ [], null]]\n                else return []\n        }*/\n        var b = [];\n        b[self] = other;\n        return [[b, null]]; // Match\n      }\n      actual = self;\n    }\n    if (!actual.complexType) {\n      if (formula.redirections[actual]) {\n        actual = formula.redirections[actual];\n      }\n      if (formula.redirections[other]) {\n        other = formula.redirections[other];\n      }\n      if (actual.sameTerm(other)) {\n        return [[[], null]];\n      }\n      return [];\n    }\n    if (self instanceof Array) {\n      if (!(other instanceof Array)) {\n        return [];\n      }\n      return unifyContents(self, other, bindings);\n    }\n    throw new Error('query.js: oops - code not written yet');\n    // return undefined;  // for lint - no jslint objects to unreachables\n    //    return actual.unifyContents(other, bindings)\n  }; // unifyTerm\n\n  var unifyContents = function unifyContents(self, other, bindings, formula) {\n    var nbs2;\n    if (self.length !== other.length) {\n      return []; // no way\n    }\n    if (!self.length) {\n      return [[[], null]]; // Success\n    }\n    var nbs = unifyTerm(self[0], other[0], bindings, formula);\n    if (nbs.length === 0) {\n      return nbs;\n    }\n    var res = [];\n    var i;\n    var n = nbs.length;\n    var nb;\n    var j;\n    var m;\n    var v;\n    var nb2;\n    var bindings2;\n    for (i = 0; i < n; i++) {\n      // for each possibility from the first term\n      nb = nbs[i][0]; // new bindings\n      bindings2 = [];\n      for (v in nb) {\n        if (nb.hasOwnProperty(v)) {\n          bindings2[v] = nb[v]; // copy\n        }\n      }\n      for (v in bindings) {\n        if (bindings.hasOwnProperty(v)) {\n          bindings2[v] = bindings[v]; // copy\n        }\n      }\n      nbs2 = unifyContents(self.slice(1), other.slice(1), bindings2, formula);\n      m = nbs2.length;\n      for (j = 0; j < m; j++) {\n        nb2 = nbs2[j][0]; // @@@@ no idea whether this is used or right\n        for (v in nb) {\n          if (nb.hasOwnProperty(v)) {\n            nb2[v] = nb[v];\n          }\n        }\n        res.push([nb2, null]);\n      }\n    }\n    return res;\n  }; // unifyContents\n\n  //  Matching\n  //\n  // Matching finds all bindings such that when the binding is applied\n  // to one term it is equal to the other term.  We only match formulae.\n\n  /** if x is not in the bindings array, return the var; otherwise, return the bindings **/\n  var bind = function bind(x, binding) {\n    var y = binding[x];\n    if (y === undefined) {\n      return x;\n    }\n    return y;\n  };\n\n  // When there are OPTIONAL clauses, we must return bindings without them if none of them\n  // succeed. However, if any of them do succeed, we should not.  (This is what branchCount()\n  // tracked. The problem currently is (2011/7) that when several optionals exist, and they\n  // all match, multiple sets of bindings are returned, each with one optional filled in.)\n\n  var union = function union(a, b) {\n    var c = {};\n    var x;\n    for (x in a) {\n      if (a.hasOwnProperty(x)) {\n        c[x] = a[x];\n      }\n    }\n    for (x in b) {\n      if (b.hasOwnProperty(x)) {\n        c[x] = b[x];\n      }\n    }\n    return c;\n  };\n\n  var OptionalBranchJunction = function OptionalBranchJunction(originalCallback, trunkBindings) {\n    this.trunkBindings = trunkBindings;\n    this.originalCallback = originalCallback;\n    this.branches = [];\n    // this.results = []; // result[i] is an array of bindings for branch i\n    // this.done = {};  // done[i] means all/any results are in for branch i\n    // this.count = {}\n    return this;\n  };\n\n  OptionalBranchJunction.prototype.checkAllDone = function () {\n    var i;\n    for (i = 0; i < this.branches.length; i++) {\n      if (!this.branches[i].done) {\n        return;\n      }\n    }\n    log.debug('OPTIONAL BIDNINGS ALL DONE:');\n    this.doCallBacks(this.branches.length - 1, this.trunkBindings);\n  };\n  // Recrursively generate the cross product of the bindings\n  OptionalBranchJunction.prototype.doCallBacks = function (b, bindings) {\n    var j;\n    if (b < 0) {\n      return this.originalCallback(bindings);\n    }\n    for (j = 0; j < this.branches[b].results.length; j++) {\n      this.doCallBacks(b - 1, union(bindings, this.branches[b].results[j]));\n    }\n  };\n\n  // A mandatory branch is the normal one, where callbacks\n  // are made immediately and no junction is needed.\n  // Might be useful for onFinsihed callback for query API.\n  var MandatoryBranch = function MandatoryBranch(callback, onDone) {\n    this.count = 0;\n    this.success = false;\n    this.done = false;\n    // this.results = []\n    this.callback = callback;\n    this.onDone = onDone;\n    // this.junction = junction\n    // junction.branches.push(this)\n    return this;\n  };\n\n  MandatoryBranch.prototype.reportMatch = function (bindings) {\n    // log.error(\"@@@@ query.js 1\"); // @@\n    this.callback(bindings);\n    this.success = true;\n  };\n\n  MandatoryBranch.prototype.reportDone = function () {\n    this.done = true;\n    log.info('Mandatory query branch finished.***');\n    if (this.onDone !== undefined) {\n      this.onDone();\n    }\n  };\n\n  // An optional branch hoards its results.\n  var OptionalBranch = function OptionalBranch(junction) {\n    this.count = 0;\n    this.done = false;\n    this.results = [];\n    this.junction = junction;\n    junction.branches.push(this);\n    return this;\n  };\n\n  OptionalBranch.prototype.reportMatch = function (bindings) {\n    this.results.push(bindings);\n  };\n\n  OptionalBranch.prototype.reportDone = function () {\n    log.debug('Optional branch finished - results.length = ' + this.results.length);\n    if (this.results.length === 0) {\n      // This is what optional means: if no hits,\n      this.results.push({}); // mimic success, but with no bindings\n      log.debug(\"Optional branch FAILED - that's OK.\");\n    }\n    this.done = true;\n    this.junction.checkAllDone();\n  };\n\n  /** prepare -- sets the index of the item to the possible matches\n      * @param f - formula\n      * @param item - an Statement, possibly w/ vars in it\n      * @param bindings -\n  * @returns true if the query fails -- there are no items that match **/\n  var prepare = function prepare(f, item, bindings) {\n    var t, terms, termIndex, i, ind;\n    item.nvars = 0;\n    item.index = null;\n    // if (!f.statements) log.warn(\"@@@ prepare: f is \"+f)\n    //    log.debug(\"Prepare: f has \"+ f.statements.length)\n    // log.debug(\"Prepare: Kb size \"+f.statements.length+\" Preparing \"+item)\n\n    terms = [item.subject, item.predicate, item.object];\n    ind = [f.subjectIndex, f.predicateIndex, f.objectIndex];\n    for (i = 0; i < 3; i++) {\n      // alert(\"Prepare \"+terms[i]+\" \"+(terms[i] in bindings))\n      if (terms[i].isVar && !(bindings[terms[i]] !== undefined)) {\n        item.nvars++;\n      } else {\n        t = bind(terms[i], bindings); // returns the RDF binding if bound, otherwise itself\n        // if (terms[i]!=bind(terms[i],bindings) alert(\"Term: \"+terms[i]+\"Binding: \"+bind(terms[i], bindings))\n        if (f.redirections[t.hashString()]) {\n          t = f.redirections[t.hashString()]; // redirect\n        }\n        termIndex = ind[i][t.hashString()];\n\n        if (!termIndex) {\n          item.index = [];\n          return false; // Query line cannot match\n        }\n        if (item.index === null || item.index.length > termIndex.length) {\n          item.index = termIndex;\n        }\n      }\n    }\n\n    if (item.index === null) {\n      // All 3 are variables?\n      item.index = f.statements;\n    }\n    return true;\n  }; // prepare\n\n  /** sorting function -- negative if self is easier **/\n  // We always prefer to start with a URI to be able to browse a graph\n  // this is why we put off items with more variables till later.\n  function easiestQuery(self, other) {\n    if (self.nvars !== other.nvars) {\n      return self.nvars - other.nvars;\n    }\n    return self.index.length - other.index.length;\n  }\n\n  var match_index = 0; // index\n  /** matches a pattern formula against the knowledge base, e.g. to find matches for table-view\n  *\n  * @param f - knowledge base formula\n  * @param g - pattern formula (may have vars)\n  * @param bindingsSoFar  - bindings accumulated in matching to date\n  * @param level - spaces to indent stuff also lets you know what level of recursion you're at\n  * @param fetcher - function (term, requestedBy) - myFetcher / AJAR_handleNewTerm / the sort\n  * @param localCallback - function(bindings, pattern, branch) called on sucess\n  * @returns nothing\n  *\n  * Will fetch linked data from the web iff the knowledge base an associated source fetcher (f.fetcher)\n  ***/\n  var match = function match(f, g, bindingsSoFar, level, fetcher, localCallback, branch) {\n    log.debug('Match begins, Branch count now: ' + branch.count + ' for ' + branch.pattern_debug);\n    var sf = f.fetcher ? f.fetcher : null;\n    // log.debug(\"match: f has \"+f.statements.length+\", g has \"+g.statements.length)\n    var pattern = g.statements;\n    if (pattern.length === 0) {\n      // when it's satisfied all the pattern triples\n      log.debug('FOUND MATCH WITH BINDINGS:' + bindingDebug(bindingsSoFar));\n      if (g.optional.length === 0) {\n        branch.reportMatch(bindingsSoFar);\n      } else {\n        log.debug('OPTIONAL: ' + g.optional);\n        var junction = new OptionalBranchJunction(callback, bindingsSoFar); // @@ won't work with nested optionals? nest callbacks\n        var br = [];\n        var b;\n        for (b = 0; b < g.optional.length; b++) {\n          br[b] = new OptionalBranch(junction); // Allocate branches to prevent premature ending\n          br[b].pattern_debug = g.optional[b]; // for diagnotics only\n        }\n        for (b = 0; b < g.optional.length; b++) {\n          br[b].count = br[b].count + 1; // Count how many matches we have yet to complete\n          match(f, g.optional[b], bindingsSoFar, '', fetcher, callback, br[b]);\n        }\n      }\n      branch.count--;\n      log.debug('Match ends -- success , Branch count now: ' + branch.count + ' for ' + branch.pattern_debug);\n      return; // Success\n    }\n\n    var item;\n    var i;\n    var n = pattern.length;\n    // log.debug(level + \"Match \"+n+\" left, bs so far:\"+bindingDebug(bindingsSoFar))\n\n    // Follow links from variables in query\n    if (sf) {\n      // Fetcher is used to fetch URIs, function first term is a URI term, second is the requester\n      var id = 'match' + match_index++;\n      var fetchResource = function fetchResource(requestedTerm, id) {\n        var docuri = requestedTerm.uri.split('#')[0];\n        sf.nowOrWhenFetched(docuri, undefined, function (err, body, xhr) {\n          if (err) {\n            console.log('Error following link to <' + requestedTerm.uri + '> in query: ' + body);\n          }\n          match(f, g, bindingsSoFar, level, fetcher, // match not match2 to look up any others necessary.\n          localCallback, branch);\n        });\n        /*\n        if( sf ) {\n            sf.addCallback('done', function(uri) {\n                if ((kb.canon(kb.sym(uri)).uri !== path) && (uri !== kb.canon(kb.sym(path)))) {\n                    return true\n                }\n                return false\n            })\n        }\n        fetcher(requestedTerm, id)\n        */\n      };\n      for (i = 0; i < n; i++) {\n        item = pattern[i]; // for each of the triples in the query\n        if (bindingsSoFar[item.subject] !== undefined && bindingsSoFar[item.subject].uri && sf && sf.getState(docpart(bindingsSoFar[item.subject].uri)) === 'unrequested') {\n          // fetch the subject info and return to id\n          fetchResource(bindingsSoFar[item.subject], id);\n          return; // only look up one per line this time, but we will come back again though match\n        }\n        if (bindingsSoFar[item.object] !== undefined && bindingsSoFar[item.object].uri && sf && sf.getState(docpart(bindingsSoFar[item.object].uri)) === 'unrequested') {\n          fetchResource(bindingsSoFar[item.object], id);\n          return;\n        }\n      }\n    } // if sf\n    match2(f, g, bindingsSoFar, level, fetcher, localCallback, branch);\n    return;\n  }; // match\n\n  var constraintsSatisfied = function constraintsSatisfied(bindings, constraints) {\n    var res = true;\n    var x;\n    var test;\n    for (x in bindings) {\n      if (bindings.hasOwnProperty(x)) {\n        if (constraints[x]) {\n          test = constraints[x].test;\n          if (test && !test(bindings[x])) {\n            res = false;\n          }\n        }\n      }\n    }\n    return res;\n  };\n\n  /** match2 -- stuff after the fetch **/\n  var match2 = function match2(f, g, bindingsSoFar, level, fetcher, callback, branch) {\n    // post fetch\n    var pattern = g.statements;\n    var n = pattern.length;\n    var i;\n    var k;\n    var nk;\n    var v;\n    var bindings2;\n    var newBindings1;\n    var item;\n    for (i = 0; i < n; i++) {\n      // For each statement left in the query, run prepare\n      item = pattern[i];\n      log.info('match2: item=' + item + ', bindingsSoFar=' + bindingDebug(bindingsSoFar));\n      prepare(f, item, bindingsSoFar);\n    }\n    pattern.sort(easiestQuery);\n    item = pattern[0];\n    // log.debug(\"Sorted pattern:\\n\"+pattern)\n    var rest = f.formula();\n    rest.optional = g.optional;\n    rest.constraints = g.constraints;\n    rest.statements = pattern.slice(1); // No indexes: we will not query g.\n    log.debug(level + 'match2 searching ' + item.index.length + ' for ' + item + '; bindings so far=' + bindingDebug(bindingsSoFar));\n    // var results = []\n    var c;\n    var nc = item.index.length;\n    var nbs1;\n    var st;\n    var onward = 0;\n    // var x\n    for (c = 0; c < nc; c++) {\n      // For each candidate statement\n      st = item.index[c]; // for each statement in the item's index, spawn a new match with that binding\n      nbs1 = unifyContents([item.subject, item.predicate, item.object], [st.subject, st.predicate, st.object], bindingsSoFar, f);\n      log.info(level + ' From first: ' + nbs1.length + ': ' + bindingsDebug(nbs1));\n      nk = nbs1.length;\n      // branch.count += nk\n      // log.debug(\"Branch count bumped \"+nk+\" to: \"+branch.count)\n      for (k = 0; k < nk; k++) {\n        // For each way that statement binds\n        bindings2 = [];\n        newBindings1 = nbs1[k][0];\n        if (!constraintsSatisfied(newBindings1, g.constraints)) {\n          // branch.count--\n          log.debug('Branch count CS: ' + branch.count);\n        } else {\n          for (v in newBindings1) {\n            if (newBindings1.hasOwnProperty(v)) {\n              bindings2[v] = newBindings1[v]; // copy\n            }\n          }\n          for (v in bindingsSoFar) {\n            if (bindingsSoFar.hasOwnProperty(v)) {\n              bindings2[v] = bindingsSoFar[v]; // copy\n            }\n          }\n\n          branch.count++; // Count how many matches we have yet to complete\n          onward++;\n          match(f, rest, bindings2, level + '  ', fetcher, callback, branch); // call match\n        }\n      }\n    }\n    branch.count--;\n    if (onward === 0) {\n      log.debug('Match2 fails completely on ' + item);\n    }\n    log.debug('Match2 ends, Branch count: ' + branch.count + ' for ' + branch.pattern_debug);\n    if (branch.count === 0) {\n      log.debug('Branch finished.');\n      branch.reportDone();\n    }\n  }; // match2\n  // ////////////////////////// Body of query()  ///////////////////////\n  /*\n  if(!fetcher) {\n      fetcher=function (x, requestedBy) {\n          if (x === null) {\n              return\n          }\n          $rdf.Util.AJAR_handleNewTerm(kb, x, requestedBy)\n      }\n  }\n  */\n  // prepare, oncallback: match1\n  // match1: fetcher, oncallback: match2\n  // match2, oncallback: populatetable\n  //    log.debug(\"Query F length\"+this.statements.length+\" G=\"+myQuery)\n  var f = this;\n  log.debug('Query on ' + this.statements.length);\n  // kb.remoteQuery(myQuery,'http://jena.hpl.hp.com:3040/backstage',callback)\n  // return\n  var trunck = new MandatoryBranch(callback, onDone);\n  trunck.count++; // count one branch to complete at the moment\n  setTimeout(function () {\n    match(f, myQuery.pat, myQuery.pat.initBindings, '', fetcher, callback, trunck /* branch */);\n  }, 0);\n\n  return; // returns nothing; callback does the work\n} // query\n\nmodule.exports.Query = Query;\nmodule.exports.indexedFormulaQuery = indexedFormulaQuery;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rdflib/lib/query.js\n// module id = 74\n// module chunks = 0","'use strict';\n\nvar _indexedFormula = require('./indexed-formula');\n\nvar _indexedFormula2 = _interopRequireDefault(_indexedFormula);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar BlankNode = require('./blank-node');\nvar Collection = require('./collection');\nvar DefaultGraph = require('./default-graph');\nvar Fetcher = require('./fetcher');\n\nvar Literal = require('./literal');\nvar NamedNode = require('./named-node');\nvar Statement = require('./statement');\nvar Variable = require('./variable');\n\nfunction blankNode(value) {\n  return new BlankNode(value);\n}\nfunction collection(elements) {\n  return new Collection(elements);\n}\nfunction defaultGraph() {\n  return new DefaultGraph();\n}\nfunction fetcher(store, timeout, async) {\n  return new Fetcher(store, timeout, async);\n}\nfunction graph() {\n  return new _indexedFormula2.default();\n}\nfunction lit(val, lang, dt) {\n  return new Literal('' + val, lang, dt);\n}\nfunction literal(value, languageOrDatatype) {\n  if (typeof languageOrDatatype === 'string') {\n    if (languageOrDatatype.indexOf(':') === -1) {\n      return new Literal(value, languageOrDatatype);\n    } else {\n      return new Literal(value, null, namedNode(languageOrDatatype));\n    }\n  } else {\n    return new Literal(value, null, languageOrDatatype);\n  }\n}\nfunction namedNode(value) {\n  return new NamedNode(value);\n}\nfunction quad(subject, predicate, object, graph) {\n  graph = graph || new DefaultGraph();\n  return new Statement(subject, predicate, object, graph);\n}\nfunction st(subject, predicate, object, graph) {\n  return new Statement(subject, predicate, object, graph);\n}\nfunction triple(subject, predicate, object) {\n  return quad(subject, predicate, object);\n}\nfunction variable(name) {\n  return new Variable(name);\n}\n\n// rdfjs spec factory methods\nmodule.exports.blankNode = blankNode;\nmodule.exports.defaultGraph = defaultGraph;\nmodule.exports.graph = graph;\nmodule.exports.literal = literal;\nmodule.exports.namedNode = namedNode;\nmodule.exports.quad = quad;\nmodule.exports.triple = triple;\nmodule.exports.variable = variable;\n\n// rdflib only\nmodule.exports.collection = collection;\nmodule.exports.fetcher = fetcher;\nmodule.exports.lit = lit;\nmodule.exports.st = st;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rdflib/lib/data-factory.js\n// module id = 75\n// module chunks = 0","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Node = require('./node');\n\nvar DefaultGraph = function (_Node) {\n  _inherits(DefaultGraph, _Node);\n\n  function DefaultGraph() {\n    _classCallCheck(this, DefaultGraph);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(DefaultGraph).call(this));\n\n    _this.termType = 'DefaultGraph';\n    _this.value = '';\n    return _this;\n  }\n\n  _createClass(DefaultGraph, [{\n    key: 'toCanonical',\n    value: function toCanonical() {\n      return this.value;\n    }\n  }]);\n\n  return DefaultGraph;\n}(Node);\n\nmodule.exports = DefaultGraph;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rdflib/lib/default-graph.js\n// module id = 76\n// module chunks = 0","'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\n/* global $SolidTestEnvironment */\n/**\n *\n * Project: rdflib.js\n *\n * File: fetcher.js\n *\n * Description: contains functions for requesting/fetching/retracting\n *  This implements quite a lot of the web architecture.\n * A fetcher is bound to a specific knowledge base graph, into which\n * it loads stuff and into which it writes its metadata\n * @@ The metadata should be optionally a separate graph\n *\n * - implements semantics of HTTP headers, Internet Content Types\n * - selects parsers for rdf/xml, n3, rdfa, grddl\n *\n * Dependencies:\n *\n * needs: util.js uri.js term.js rdfparser.js rdfa.js n3parser.js\n *      identity.js sparql.js jsonparser.js\n *\n * Independent of jQuery\n */\n\n/**\n * Things to test: callbacks on request, refresh, retract\n *   loading from HTTP, HTTPS, FTP, FILE, others?\n * To do:\n * Firing up a mail client for mid:  (message:) URLs\n */\nvar log = require('./log');\nvar N3Parser = require('./n3parser');\nvar NamedNode = require('./named-node');\nvar Namespace = require('./namespace');\nvar rdfParse = require('./parse');\nvar parseRDFaDOM = require('./rdfaparser').parseRDFaDOM;\nvar RDFParser = require('./rdfxmlparser');\nvar Uri = require('./uri');\nvar Util = require('./util');\nvar serialize = require('./serialize');\n\nvar Parsable = {\n  'text/n3': true,\n  'text/turtle': true,\n  'application/rdf+xml': true,\n  'application/xhtml+xml': true,\n  'text/html': true,\n  'application/ld+json': true\n};\n\nvar Fetcher = function Fetcher(store, timeout, async) {\n  this.store = store;\n  this.thisURI = 'http://dig.csail.mit.edu/2005/ajar/ajaw/rdf/sources.js' + '#SourceFetcher'; // -- Kenny\n  this.timeout = timeout || 30000;\n  this.async = async != null ? async : true;\n  this.appNode = this.store.bnode(); // Denoting this session\n  this.store.fetcher = this; // Bi-linked\n  this.requested = {};\n  // this.requested[uri] states:\n  //   undefined     no record of web access or records reset\n  //   true          has been requested, XHR in progress\n  //   'done'        received, Ok\n  //   403           HTTP status unauthorized\n  //   404           Ressource does not exist. Can be created etc.\n  //   'redirected'  In attempt to counter CORS problems retried.\n  //   other strings mean various other erros, such as parse errros.\n  //\n  this.redirectedTo = {}; // Wehn 'redireced'\n  this.fetchCallbacks = {}; // fetchCallbacks[uri].push(callback)\n\n  this.nonexistant = {}; // keep track of explict 404s -> we can overwrite etc\n  this.lookedUp = {};\n  this.handlers = [];\n  this.mediatypes = {};\n  var sf = this;\n  var kb = this.store;\n  var ns = {}; // Convenience namespaces needed in this module:\n  // These are delibertely not exported as the user application should\n  // make its own list and not rely on the prefixes used here,\n  // and not be tempted to add to them, and them clash with those of another\n  // application.\n  ns.link = Namespace('http://www.w3.org/2007/ont/link#');\n  ns.http = Namespace('http://www.w3.org/2007/ont/http#');\n  ns.httph = Namespace('http://www.w3.org/2007/ont/httph#');\n  ns.rdf = Namespace('http://www.w3.org/1999/02/22-rdf-syntax-ns#');\n  ns.rdfs = Namespace('http://www.w3.org/2000/01/rdf-schema#');\n  ns.dc = Namespace('http://purl.org/dc/elements/1.1/');\n\n  sf.mediatypes['image/*'] = {\n    'q': 0.9\n  };\n\n  sf.mediatypes['*/*'] = { // Must allow access to random content\n    'q': 0.1\n  };\n\n  Fetcher.crossSiteProxy = function (uri) {\n    if (Fetcher.crossSiteProxyTemplate) {\n      return Fetcher.crossSiteProxyTemplate.replace('{uri}', encodeURIComponent(uri));\n    } else {\n      return undefined;\n    }\n  };\n\n  Fetcher.RDFXMLHandler = function (args) {\n    if (args) {\n      this.dom = args[0];\n    }\n    this.handlerFactory = function (xhr) {\n      xhr.handle = function (cb) {\n        // sf.addStatus(xhr.req, 'parsing soon as RDF/XML...')\n        var kb = sf.store;\n        if (!this.dom) this.dom = Util.parseXML(xhr.responseText);\n        var root = this.dom.documentElement;\n        if (root.nodeName === 'parsererror') {\n          // @@ Mozilla only See issue/issue110\n          sf.failFetch(xhr, 'Badly formed XML in ' + xhr.resource.uri); // have to fail the request\n          throw new Error('Badly formed XML in ' + xhr.resource.uri); // @@ Add details\n        }\n        var parser = new RDFParser(kb);\n        try {\n          parser.parse(this.dom, xhr.original.uri, xhr.original);\n        } catch (e) {\n          sf.addStatus(xhr.req, 'Syntax error parsing RDF/XML! ' + e);\n          console.log('Syntax error parsing RDF/XML! ' + e);\n        }\n        if (!xhr.options.noMeta) {\n          kb.add(xhr.original, ns.rdf('type'), ns.link('RDFDocument'), sf.appNode);\n        }\n        cb();\n      };\n    };\n  };\n  Fetcher.RDFXMLHandler.toString = function () {\n    return 'RDFXMLHandler';\n  };\n  Fetcher.RDFXMLHandler.register = function (sf) {\n    sf.mediatypes['application/rdf+xml'] = {\n      'q': 0.9\n    };\n  };\n  Fetcher.RDFXMLHandler.pattern = new RegExp('application/rdf\\\\+xml');\n\n  // This would much better use on-board XSLT engine. @@\n  /*  deprocated 2016-02-17  timbl\n  Fetcher.doGRDDL = function(kb, doc, xslturi, xmluri) {\n      sf.requestURI('http://www.w3.org/2005/08/' + 'online_xslt/xslt?' + 'xslfile=' + escape(xslturi) + '&xmlfile=' + escape(xmluri), doc)\n  }\n  */\n  Fetcher.XHTMLHandler = function (args) {\n    if (args) {\n      this.dom = args[0];\n    }\n    this.handlerFactory = function (xhr) {\n      xhr.handle = function (cb) {\n        var relation, reverse;\n        if (!this.dom) {\n          this.dom = Util.parseXML(xhr.responseText);\n        }\n        var kb = sf.store;\n\n        // dc:title\n        var title = this.dom.getElementsByTagName('title');\n        if (title.length > 0) {\n          kb.add(xhr.resource, ns.dc('title'), kb.literal(title[0].textContent), xhr.resource);\n          // log.info(\"Inferring title of \" + xhr.resource)\n        }\n\n        // link rel\n        var links = this.dom.getElementsByTagName('link');\n        for (var x = links.length - 1; x >= 0; x--) {\n          // @@ rev\n          relation = links[x].getAttribute('rel');\n          reverse = false;\n          if (!relation) {\n            relation = links[x].getAttribute('rev');\n            reverse = true;\n          }\n          if (relation) {\n            sf.linkData(xhr, relation, links[x].getAttribute('href'), xhr.resource, reverse);\n          }\n        }\n\n        // Data Islands\n\n        var scripts = this.dom.getElementsByTagName('script');\n        for (var i = 0; i < scripts.length; i++) {\n          var contentType = scripts[i].getAttribute('type');\n          if (Parsable[contentType]) {\n            rdfParse(scripts[i].textContent, kb, xhr.original.uri, contentType);\n          }\n        }\n\n        if (!xhr.options.noMeta) {\n          kb.add(xhr.resource, ns.rdf('type'), ns.link('WebPage'), sf.appNode);\n        }\n\n        if (!xhr.options.noRDFa && parseRDFaDOM) {\n          // enable by default\n          try {\n            parseRDFaDOM(this.dom, kb, xhr.original.uri);\n          } catch (e) {\n            var msg = 'Error trying to parse ' + xhr.resource + ' as RDFa:\\n' + e + ':\\n' + e.stack;\n            // dump(msg+\"\\n\")\n            sf.failFetch(xhr, msg);\n            return;\n          }\n        }\n        cb(); // Fire done callbacks\n      };\n    };\n  };\n  Fetcher.XHTMLHandler.toString = function () {\n    return 'XHTMLHandler';\n  };\n  Fetcher.XHTMLHandler.register = function (sf) {\n    sf.mediatypes['application/xhtml+xml'] = {};\n  };\n  Fetcher.XHTMLHandler.pattern = new RegExp('application/xhtml');\n\n  Fetcher.XMLHandler = function () {\n    this.handlerFactory = function (xhr) {\n      xhr.handle = function (cb) {\n        var dom = Util.parseXML(xhr.responseText);\n\n        // XML Semantics defined by root element namespace\n        // figure out the root element\n        for (var c = 0; c < dom.childNodes.length; c++) {\n          // is this node an element?\n          if (dom.childNodes[c].nodeType === 1) {\n            // We've found the first element, it's the root\n            var ns = dom.childNodes[c].namespaceURI;\n\n            // Is it RDF/XML?\n            if (ns && ns === ns['rdf']) {\n              sf.addStatus(xhr.req, 'Has XML root element in the RDF namespace, so assume RDF/XML.');\n              sf.switchHandler('RDFXMLHandler', xhr, cb, [dom]);\n              return;\n            }\n            // it isn't RDF/XML or we can't tell\n            // Are there any GRDDL transforms for this namespace?\n            // @@ assumes ns documents have already been loaded\n            /*\n            var xforms = kb.each(kb.sym(ns), kb.sym(\"http://www.w3.org/2003/g/data-view#namespaceTransformation\"))\n            for (var i = 0; i < xforms.length; i++) {\n                var xform = xforms[i]\n                // log.info(xhr.resource.uri + \" namespace \" + ns + \" has GRDDL ns transform\" + xform.uri)\n                 Fetcher.doGRDDL(kb, xhr.resource, xform.uri, xhr.resource.uri)\n            }\n            */\n            break;\n          }\n        }\n\n        // Or it could be XHTML?\n        // Maybe it has an XHTML DOCTYPE?\n        if (dom.doctype) {\n          // log.info(\"We found a DOCTYPE in \" + xhr.resource)\n          if (dom.doctype.name === 'html' && dom.doctype.publicId.match(/^-\\/\\/W3C\\/\\/DTD XHTML/) && dom.doctype.systemId.match(/http:\\/\\/www.w3.org\\/TR\\/xhtml/)) {\n            sf.addStatus(xhr.req, 'Has XHTML DOCTYPE. Switching to XHTML Handler.\\n');\n            sf.switchHandler('XHTMLHandler', xhr, cb);\n            return;\n          }\n        }\n\n        // Or what about an XHTML namespace?\n        var html = dom.getElementsByTagName('html')[0];\n        if (html) {\n          var xmlns = html.getAttribute('xmlns');\n          if (xmlns && xmlns.match(/^http:\\/\\/www.w3.org\\/1999\\/xhtml/)) {\n            sf.addStatus(xhr.req, 'Has a default namespace for ' + 'XHTML. Switching to XHTMLHandler.\\n');\n            sf.switchHandler('XHTMLHandler', xhr, cb);\n            return;\n          }\n        }\n\n        // At this point we should check the namespace document (cache it!) and\n        // look for a GRDDL transform\n        // @@  Get namespace document <n>, parse it, look for  <n> grddl:namespaceTransform ?y\n        // Apply ?y to   dom\n        // We give up. What dialect is this?\n        sf.failFetch(xhr, 'Unsupported dialect of XML: not RDF or XHTML namespace, etc.\\n' + xhr.responseText.slice(0, 80));\n      };\n    };\n  };\n\n  Fetcher.XMLHandler.toString = function () {\n    return 'XMLHandler';\n  };\n  Fetcher.XMLHandler.register = function (sf) {\n    sf.mediatypes['text/xml'] = {\n      'q': 0.5\n    };\n    sf.mediatypes['application/xml'] = {\n      'q': 0.5\n    };\n  };\n  Fetcher.XMLHandler.pattern = new RegExp('(text|application)/(.*)xml');\n\n  Fetcher.HTMLHandler = function () {\n    this.handlerFactory = function (xhr) {\n      xhr.handle = function (cb) {\n        var rt = xhr.responseText;\n        // We only handle XHTML so we have to figure out if this is XML\n        // log.info(\"Sniffing HTML \" + xhr.resource + \" for XHTML.\")\n\n        if (rt.match(/\\s*<\\?xml\\s+version\\s*=[^<>]+\\?>/)) {\n          sf.addStatus(xhr.req, \"Has an XML declaration. We'll assume \" + \"it's XHTML as the content-type was text/html.\\n\");\n          sf.switchHandler('XHTMLHandler', xhr, cb);\n          return;\n        }\n\n        // DOCTYPE\n        // There is probably a smarter way to do this\n        if (rt.match(/.*<!DOCTYPE\\s+html[^<]+-\\/\\/W3C\\/\\/DTD XHTML[^<]+http:\\/\\/www.w3.org\\/TR\\/xhtml[^<]+>/)) {\n          sf.addStatus(xhr.req, 'Has XHTML DOCTYPE. Switching to XHTMLHandler.\\n');\n          sf.switchHandler('XHTMLHandler', xhr, cb);\n          return;\n        }\n\n        // xmlns\n        if (rt.match(/[^(<html)]*<html\\s+[^<]*xmlns=['\"]http:\\/\\/www.w3.org\\/1999\\/xhtml[\"'][^<]*>/)) {\n          sf.addStatus(xhr.req, 'Has default namespace for XHTML, so switching to XHTMLHandler.\\n');\n          sf.switchHandler('XHTMLHandler', xhr, cb);\n          return;\n        }\n\n        // dc:title\t                       //no need to escape '/' here\n        var titleMatch = new RegExp('<title>([\\\\s\\\\S]+?)</title>', 'im').exec(rt);\n        if (titleMatch) {\n          var kb = sf.store;\n          kb.add(xhr.resource, ns.dc('title'), kb.literal(titleMatch[1]), xhr.resource); // think about xml:lang later\n          kb.add(xhr.resource, ns.rdf('type'), ns.link('WebPage'), sf.appNode);\n          cb(); // doneFetch, not failed\n          return;\n        }\n        sf.addStatus(xhr.req, 'non-XML HTML document, not parsed for data.');\n        sf.doneFetch(xhr);\n        // sf.failFetch(xhr, \"Sorry, can't yet parse non-XML HTML\")\n      };\n    };\n  };\n\n  Fetcher.HTMLHandler.toString = function () {\n    return 'HTMLHandler';\n  };\n  Fetcher.HTMLHandler.register = function (sf) {\n    sf.mediatypes['text/html'] = {\n      'q': 0.9\n    };\n  };\n  Fetcher.HTMLHandler.pattern = new RegExp('text/html');\n\n  Fetcher.TextHandler = function () {\n    this.handlerFactory = function (xhr) {\n      xhr.handle = function (cb) {\n        // We only speak dialects of XML right now. Is this XML?\n        var rt = xhr.responseText;\n\n        // Look for an XML declaration\n        if (rt.match(/\\s*<\\?xml\\s+version\\s*=[^<>]+\\?>/)) {\n          sf.addStatus(xhr.req, 'Warning: ' + xhr.resource + \" has an XML declaration. We'll assume \" + \"it's XML but its content-type wasn't XML.\\n\");\n          sf.switchHandler('XMLHandler', xhr, cb);\n          return;\n        }\n\n        // Look for an XML declaration\n        if (rt.slice(0, 500).match(/xmlns:/)) {\n          sf.addStatus(xhr.req, \"May have an XML namespace. We'll assume \" + \"it's XML but its content-type wasn't XML.\\n\");\n          sf.switchHandler('XMLHandler', xhr, cb);\n          return;\n        }\n\n        // We give up finding semantics - this is not an error, just no data\n        sf.addStatus(xhr.req, 'Plain text document, no known RDF semantics.');\n        sf.doneFetch(xhr);\n        //                sf.failFetch(xhr, \"unparseable - text/plain not visibly XML\")\n        //                dump(xhr.resource + \" unparseable - text/plain not visibly XML, starts:\\n\" + rt.slice(0, 500)+\"\\n\")\n      };\n    };\n  };\n\n  Fetcher.TextHandler.toString = function () {\n    return 'TextHandler';\n  };\n  Fetcher.TextHandler.register = function (sf) {\n    sf.mediatypes['text/plain'] = {\n      'q': 0.5\n    };\n  };\n  Fetcher.TextHandler.pattern = new RegExp('text/plain');\n\n  Fetcher.N3Handler = function () {\n    this.handlerFactory = function (xhr) {\n      xhr.handle = function (cb) {\n        // Parse the text of this non-XML file\n\n        // console.log('web.js: Parsing as N3 ' + xhr.resource.uri + ' base: ' + xhr.original.uri) // @@@@ comment me out\n        // sf.addStatus(xhr.req, \"N3 not parsed yet...\")\n        var p = N3Parser(kb, kb, xhr.original.uri, xhr.original.uri, null, null, '', null);\n        //                p.loadBuf(xhr.responseText)\n        try {\n          p.loadBuf(xhr.responseText);\n        } catch (e) {\n          var msg = 'Error trying to parse ' + xhr.resource + ' as Notation3:\\n' + e + ':\\n' + e.stack;\n          // dump(msg+\"\\n\")\n          sf.failFetch(xhr, msg);\n          return;\n        }\n\n        sf.addStatus(xhr.req, 'N3 parsed: ' + p.statementCount + ' triples in ' + p.lines + ' lines.');\n        sf.store.add(xhr.original, ns.rdf('type'), ns.link('RDFDocument'), sf.appNode);\n        // var args = [xhr.original.uri] // Other args needed ever?\n        sf.doneFetch(xhr);\n      };\n    };\n  };\n\n  Fetcher.N3Handler.toString = function () {\n    return 'N3Handler';\n  };\n  Fetcher.N3Handler.register = function (sf) {\n    sf.mediatypes['text/n3'] = {\n      'q': '1.0'\n    }; // as per 2008 spec\n    /*\n    sf.mediatypes['application/x-turtle'] = {\n      'q': 1.0\n    } // pre 2008\n    */\n    sf.mediatypes['text/turtle'] = {\n      'q': 1.0\n    }; // post 2008\n  };\n  Fetcher.N3Handler.pattern = new RegExp('(application|text)/(x-)?(rdf\\\\+)?(n3|turtle)');\n\n  Util.callbackify(this, ['request', 'recv', 'headers', 'load', 'fail', 'refresh', 'retract', 'done']);\n\n  this.addHandler = function (handler) {\n    sf.handlers.push(handler);\n    handler.register(sf);\n  };\n\n  this.switchHandler = function (name, xhr, cb, args) {\n    var Handler = null;\n    for (var i = 0; i < this.handlers.length; i++) {\n      if ('' + this.handlers[i] === name) {\n        Handler = this.handlers[i];\n      }\n    }\n    if (!Handler) {\n      throw new Error('web.js: switchHandler: name=' + name + ' , this.handlers =' + this.handlers + '\\n' + 'switchHandler: switching to ' + Handler + '; sf=' + sf + '; typeof Fetcher=' + (typeof Fetcher === 'undefined' ? 'undefined' : _typeof(Fetcher)) + ';\\n\\t Fetcher.HTMLHandler=' + Fetcher.HTMLHandler + '\\n' + '\\n\\tsf.handlers=' + sf.handlers + '\\n');\n    }\n    new Handler(args).handlerFactory(xhr);\n    xhr.handle(cb);\n  };\n\n  this.addStatus = function (req, status) {\n    // <Debug about=\"parsePerformance\">\n    var now = new Date();\n    status = '[' + now.getHours() + ':' + now.getMinutes() + ':' + now.getSeconds() + '.' + now.getMilliseconds() + '] ' + status;\n    // </Debug>\n    var kb = this.store;\n    var s = kb.the(req, ns.link('status'));\n    if (s && s.append) {\n      s.append(kb.literal(status));\n    } else {\n      log.warn('web.js: No list to add to: ' + s + ',' + status); // @@@\n    }\n  };\n\n  // Record errors in the system on failure\n  // Returns xhr so can just do return this.failfetch(...)\n  this.failFetch = function (xhr, status) {\n    this.addStatus(xhr.req, status);\n    if (!xhr.options.noMeta) {\n      kb.add(xhr.original, ns.link('error'), status);\n    }\n    if (!xhr.resource.sameTerm(xhr.original)) {\n      console.log('@@ Recording failure original ' + xhr.original + '( as ' + xhr.resource + ') : ' + xhr.status);\n    } else {\n      console.log('@@ Recording failure for ' + xhr.original + ': ' + xhr.status);\n    }\n    this.requested[Uri.docpart(xhr.original.uri)] = xhr.status; // changed 2015 was false\n    while (this.fetchCallbacks[xhr.original.uri] && this.fetchCallbacks[xhr.original.uri].length) {\n      this.fetchCallbacks[xhr.original.uri].shift()(false, 'Fetch of <' + xhr.original.uri + '> failed: ' + status, xhr);\n    }\n    delete this.fetchCallbacks[xhr.original.uri];\n    this.fireCallbacks('fail', [xhr.original.uri, status]);\n    xhr.abort();\n    return xhr;\n  };\n\n  // in the why part of the quad distinguish between HTML and HTTP header\n  // Reverse is set iif the link was rev= as opposed to rel=\n  this.linkData = function (xhr, rel, uri, why, reverse) {\n    if (!uri) return;\n    var predicate;\n    // See http://www.w3.org/TR/powder-dr/#httplink for describedby 2008-12-10\n    var obj = kb.sym(Uri.join(uri, xhr.original.uri));\n    if (rel === 'alternate' || rel === 'seeAlso' || rel === 'meta' || rel === 'describedby') {\n      if (obj.uri === xhr.original.uri) return;\n      predicate = ns.rdfs('seeAlso');\n    } else if (rel === 'type') {\n      predicate = kb.sym('http://www.w3.org/1999/02/22-rdf-syntax-ns#type');\n    } else {\n      // See https://www.iana.org/assignments/link-relations/link-relations.xml\n      // Alas not yet in RDF yet for each predicate\n      predicate = kb.sym(Uri.join(rel, 'http://www.iana.org/assignments/link-relations/'));\n    }\n    if (reverse) {\n      kb.add(obj, predicate, xhr.original, why);\n    } else {\n      kb.add(xhr.original, predicate, obj, why);\n    }\n  };\n\n  this.parseLinkHeader = function (xhr, thisReq) {\n    var link;\n    try {\n      link = xhr.getResponseHeader('link'); // May crash from CORS error\n    } catch (e) {}\n    if (link) {\n      var linkexp = /<[^>]*>\\s*(\\s*;\\s*[^\\(\\)<>@,;:\"\\/\\[\\]\\?={} \\t]+=(([^\\(\\)<>@,;:\"\\/\\[\\]\\?={} \\t]+)|(\"[^\"]*\")))*(,|$)/g;\n      var paramexp = /[^\\(\\)<>@,;:\"\\/\\[\\]\\?={} \\t]+=(([^\\(\\)<>@,;:\"\\/\\[\\]\\?={} \\t]+)|(\"[^\"]*\"))/g;\n\n      var matches = link.match(linkexp);\n      for (var i = 0; i < matches.length; i++) {\n        var split = matches[i].split('>');\n        var href = split[0].substring(1);\n        var ps = split[1];\n        var s = ps.match(paramexp);\n        for (var j = 0; j < s.length; j++) {\n          var p = s[j];\n          var paramsplit = p.split('=');\n          // var name = paramsplit[0]\n          var rel = paramsplit[1].replace(/[\"']/g, ''); // '\"\n          this.linkData(xhr, rel, href, thisReq);\n        }\n      }\n    }\n  };\n\n  this.doneFetch = function (xhr) {\n    this.addStatus(xhr.req, 'Done.');\n    this.requested[xhr.original.uri] = 'done'; // Kenny\n    while (this.fetchCallbacks[xhr.original.uri] && this.fetchCallbacks[xhr.original.uri].length) {\n      this.fetchCallbacks[xhr.original.uri].shift()(true, undefined, xhr);\n    }\n    delete this.fetchCallbacks[xhr.original.uri];\n    this.fireCallbacks('done', [xhr.original.uri]);\n  };\n  var handlerList = [Fetcher.RDFXMLHandler, Fetcher.XHTMLHandler, Fetcher.XMLHandler, Fetcher.HTMLHandler, Fetcher.TextHandler, Fetcher.N3Handler];\n  handlerList.map(this.addHandler);\n\n  /** Note two nodes are now smushed\n   **\n   ** If only one was flagged as looked up, then\n   ** the new node is looked up again, which\n   ** will make sure all the URIs are dereferenced\n   */\n  this.nowKnownAs = function (was, now) {\n    if (this.lookedUp[was.uri]) {\n      if (!this.lookedUp[now.uri]) this.lookUpThing(now, was); //  @@@@  Transfer userCallback\n    } else if (this.lookedUp[now.uri]) {\n      if (!this.lookedUp[was.uri]) this.lookUpThing(was, now);\n    }\n  };\n\n  // Returns promise of XHR\n  //\n  //  Writes back to the web what we have in the store for this uri\n  this.putBack = function (uri, options) {\n    uri = uri.uri || uri; // Accept object or string\n    var doc = new NamedNode(uri).doc(); // strip off #\n    options.data = serialize(doc, this.store, doc.uri, options.contentType || 'text/turtle');\n    return this.webOperation('PUT', uri, options);\n  };\n\n  // Returns promise of XHR\n  //\n  this.webOperation = function (method, uri, options) {\n    uri = uri.uri || uri;options = options || {};\n    uri = this.proxyIfNecessary(uri);\n    var fetcher = this;\n    return new Promise(function (resolve, reject) {\n      var xhr = Util.XMLHTTPFactory();\n      xhr.options = options;\n      xhr.original = fetcher.store.sym(uri);\n      if (!options.noMeta && typeof tabulator !== 'undefined') {\n        fetcher.saveRequestMetadata(xhr, fetcher.store, uri);\n      }\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === 4) {\n          // NOte a 404 can be not afailure\n          var ok = !xhr.status || xhr.status >= 200 && xhr.status < 300;\n          if (!options.noMeta && typeof tabulator !== 'undefined') {\n            fetcher.saveResponseMetadata(xhr, fetcher.store);\n          }\n          if (ok) {\n            resolve(xhr);\n          } else {\n            reject(xhr.status + ' ' + xhr.statusText);\n          }\n        }\n      };\n      xhr.open(method, uri, true);\n      xhr.setRequestHeader('Content-type', options.contentType || 'text/turtle');\n      xhr.send(options.data ? options.data : undefined);\n    });\n  };\n\n  this.webCopy = function (here, there, content_type) {\n    var fetcher = this;\n    here = here.uri || here;\n    return new Promise(function (resolve, reject) {\n      fetcher.webOperation('GET', here).then(function (xhr) {\n        fetcher.webOperation('PUT', // @@@ change to binary from text\n        there, { data: xhr.responseText, contentType: content_type }).then(function (xhr) {\n          resolve(xhr);\n        }).catch(function (e) {\n          reject(e);\n        });\n      }).catch(function (e) {\n        reject(e);\n      });\n    });\n  };\n\n  // Looks up something.\n  //\n  // Looks up all the URIs a things has.\n  //\n  // Parameters:\n  //\n  //  term:       canonical term for the thing whose URI is to be dereferenced\n  //  rterm:      the resource which refered to this (for tracking bad links)\n  //  options:    (old: force paraemter) or dictionary of options:\n  //      force:      Load the data even if loaded before\n  //  oneDone:   is called as callback(ok, errorbody, xhr) for each one\n  //  allDone:   is called as callback(ok, errorbody) for all of them\n  // Returns      the number of URIs fetched\n  //\n  this.lookUpThing = function (term, rterm, options, oneDone, allDone) {\n    var uris = kb.uris(term); // Get all URIs\n    var success = true;\n    var errors = '';\n    var outstanding = {};\n    var force;\n    if (options === false || options === true) {\n      // Old signature\n      force = options;\n      options = { force: force };\n    } else {\n      if (options === undefined) options = {};\n      force = !!options.force;\n    }\n\n    if (typeof uris !== 'undefined') {\n      for (var i = 0; i < uris.length; i++) {\n        var u = uris[i];\n        outstanding[u] = true;\n        this.lookedUp[u] = true;\n        var sf = this;\n\n        var requestOne = function requestOne(u1) {\n          sf.requestURI(Uri.docpart(u1), rterm, options, function (ok, body, xhr) {\n            if (ok) {\n              if (oneDone) oneDone(true, u1);\n            } else {\n              if (oneDone) oneDone(false, body);\n              success = false;\n              errors += body + '\\n';\n            }\n            delete outstanding[u];\n            if (Object.keys(outstanding).length > 0) {\n              return;\n            }\n            if (allDone) {\n              allDone(success, errors);\n            }\n          });\n        };\n        requestOne(u);\n      }\n    }\n    return uris.length;\n  };\n\n  /* Promise-based load function\n  **\n  ** NamedNode -> Promise of xhr\n  ** uri string -> Promise of xhr\n  ** Array of the above -> Promise of array of xhr\n  **\n  ** @@ todo: If p1 is array then sequence or parallel fetch of all\n  */\n  this.load = function (uri, options) {\n    var fetcher = this;\n    if (uri instanceof Array) {\n      var ps = uri.map(function (x) {\n        return fetcher.load(x);\n      });\n      return Promise.all(ps);\n    }\n    uri = uri.uri || uri; // NamedNode or URI string\n    return new Promise(function (resolve, reject) {\n      fetcher.nowOrWhenFetched(uri, options, function (ok, message, xhr) {\n        if (ok) {\n          resolve(xhr);\n        } else {\n          reject(message);\n        }\n      });\n    });\n  };\n\n  /*  Ask for a doc to be loaded if necessary then call back\n  **\n  ** Changed 2013-08-20:  Added (ok, errormessage) params to callback\n  **\n  ** Calling methods:\n  **   nowOrWhenFetched (uri, userCallback)\n  **   nowOrWhenFetched (uri, options, userCallback)\n  **   nowOrWhenFetched (uri, referringTerm, userCallback, options)  <-- old\n  **   nowOrWhenFetched (uri, referringTerm, userCallback) <-- old\n  **\n  **  Options include:\n  **   referringTerm    The docuemnt in which this link was found.\n  **                    this is valuable when finding the source of bad URIs\n  **   force            boolean.  Never mind whether you have tried before,\n  **                    load this from scratch.\n  **   forceContentType Override the incoming header to force the data to be\n  **                    treaed as this content-type.\n  **/\n  this.nowOrWhenFetched = function (uri, p2, userCallback, options) {\n    uri = uri.uri || uri; // allow symbol object or string to be passed\n    if (typeof p2 === 'function') {\n      options = {};\n      userCallback = p2;\n    } else if (typeof p2 === 'undefined') {// original calling signature\n      // referingTerm = undefined\n    } else if (p2 instanceof NamedNode) {\n      // referingTerm = p2\n      options = { referingTerm: p2 };\n    } else {\n      options = p2;\n    }\n\n    this.requestURI(uri, p2, options || {}, userCallback);\n  };\n\n  this.get = this.nowOrWhenFetched;\n\n  // Look up response header\n  //\n  // Returns: a list of header values found in a stored HTTP response\n  //      or [] if response was found but no header found\n  //      or undefined if no response is available.\n  //\n  this.getHeader = function (doc, header) {\n    var kb = this.store;\n    var requests = kb.each(undefined, ns.link('requestedURI'), doc.uri);\n    for (var r = 0; r < requests.length; r++) {\n      var request = requests[r];\n      if (request !== undefined) {\n        var response = kb.any(request, ns.link('response'));\n        if (request !== undefined) {\n          var results = kb.each(response, ns.httph(header.toLowerCase()));\n          if (results.length) {\n            return results.map(function (v) {\n              return v.value;\n            });\n          }\n          return [];\n        }\n      }\n    }\n    return undefined;\n  };\n\n  this.proxyIfNecessary = function (uri) {\n    if (typeof tabulator !== 'undefined' && tabulator.isExtension) return uri; // Extenstion does not need proxy\n\n    if (typeof $SolidTestEnvironment !== 'undefined' && $SolidTestEnvironment.localSiteMap) {\n      // nested dictionaries of URI parts from origin down\n      var hostpath = uri.split('/').slice(2); // the bit after the //\n      var lookup = function lookup(parts, index) {\n        var z = index[parts.shift()];\n        if (!z) return null;\n        if (typeof z === 'string') {\n          return z + parts.join('/');\n        }\n        if (!parts) return null;\n        return lookup(parts, z);\n      };\n      var y = lookup(hostpath, $SolidTestEnvironment.localSiteMap);\n      if (y) {\n        return y;\n      }\n    }\n    // browser does 2014 on as https browser script not trusted\n    // If the web app origin is https: then the mixed content rules\n    // prevent it loading insecure http: stuff so we need proxy.\n    if (Fetcher.crossSiteProxyTemplate && typeof document !== 'undefined' && document.location && ('' + document.location).slice(0, 6) === 'https:' && // origin is secure\n    uri.slice(0, 5) === 'http:') {\n      // requested data is not\n      return Fetcher.crossSiteProxyTemplate.replace('{uri}', encodeURIComponent(uri));\n    }\n    return uri;\n  };\n\n  this.saveRequestMetadata = function (xhr, kb, docuri) {\n    var request = kb.bnode();\n    xhr.resource = kb.sym(docuri);\n\n    xhr.req = request;\n    if (!xhr.options.noMeta) {\n      // Store no triples but do mind the bnode for req\n      var now = new Date();\n      var timeNow = '[' + now.getHours() + ':' + now.getMinutes() + ':' + now.getSeconds() + '] ';\n      kb.add(request, ns.rdfs('label'), kb.literal(timeNow + ' Request for ' + docuri), this.appNode);\n      kb.add(request, ns.link('requestedURI'), kb.literal(docuri), this.appNode);\n      if (xhr.original && xhr.original.uri !== docuri) {\n        kb.add(request, ns.link('orginalURI'), kb.literal(xhr.original.uri), this.appNode);\n      }\n      kb.add(request, ns.link('status'), kb.collection(), this.appNode);\n    }\n    return request;\n  };\n\n  this.saveResponseMetadata = function (xhr, kb) {\n    var response = kb.bnode();\n\n    if (xhr.req) kb.add(xhr.req, ns.link('response'), response);\n    kb.add(response, ns.http('status'), kb.literal(xhr.status), response);\n    kb.add(response, ns.http('statusText'), kb.literal(xhr.statusText), response);\n\n    xhr.headers = {};\n    if (Uri.protocol(xhr.resource.uri) === 'http' || Uri.protocol(xhr.resource.uri) === 'https') {\n      xhr.headers = Util.getHTTPHeaders(xhr);\n      for (var h in xhr.headers) {\n        // trim below for Safari - adds a CR!\n        var value = xhr.headers[h].trim();\n        var h2 = h.toLowerCase();\n        kb.add(response, ns.httph(h2), value, response);\n        if (h2 === 'content-type') {\n          // Convert to RDF type\n          kb.add(xhr.resource, ns.rdf('type'), Util.mediaTypeClass(value), response);\n        }\n      }\n    }\n    return response;\n  };\n\n  /** Requests a document URI and arranges to load the document.\n   ** Parameters:\n   **\t    term:  term for the thing whose URI is to be dereferenced\n   **      rterm:  the resource which refered to this (for tracking bad links)\n   **      options:\n   **              force:  Load the data even if loaded before\n   **              withCredentials:   flag for XHR/CORS etc\n   **      userCallback:  Called with (true) or (false, errorbody, {status: 400}) after load is done or failed\n   ** Return value:\n   **\t    The xhr object for the HTTP access\n   **      null if the protocol is not a look-up protocol,\n   **              or URI has already been loaded\n   */\n  this.requestURI = function (docuri, rterm, options, userCallback) {\n    // sources_request_new\n    // Various calling conventions\n    docuri = docuri.uri || docuri; // NamedNode or string\n    docuri = docuri.split('#')[0];\n    if (typeof options === 'boolean') {\n      options = { 'force': options }; // Ols dignature\n    }\n    if (typeof options === 'undefined') options = {};\n\n    var force = !!options.force;\n    var kb = this.store;\n    var args = arguments;\n    var baseURI = options.baseURI || docuri; // Preseve though proxying etc\n    options.userCallback = userCallback;\n\n    var pcol = Uri.protocol(docuri);\n    if (pcol === 'tel' || pcol === 'mailto' || pcol === 'urn') {\n      // \"No look-up operation on these, but they are not errors?\"\n      console.log('Unsupported protocol in: ' + docuri);\n      return userCallback(false, 'Unsupported protocol', { 'status': 900 }) || undefined;\n    }\n    var docterm = kb.sym(docuri);\n\n    var sta = this.getState(docuri);\n    if (!force) {\n      if (sta === 'fetched') {\n        return userCallback ? userCallback(true) : undefined;\n      }\n      if (sta === 'failed') {\n        return userCallback ? userCallback(false, 'Previously failed. ' + this.requested[docuri], { 'status': this.requested[docuri] }) : undefined; // An xhr standin\n      }\n      // if (sta === 'requested') return userCallback? userCallback(false, \"Sorry already requested - pending already.\", {'status': 999 }) : undefined\n    } else {\n      delete this.nonexistant[docuri];\n    }\n    // @@ Should allow concurrent requests\n\n    // If it is 'failed', then shoulkd we try again?  I think so so an old error doens't get stuck\n    // if (sta === 'unrequested')\n\n    this.fireCallbacks('request', args); // Kenny: fire 'request' callbacks here\n    // dump( \"web.js: Requesting uri: \" + docuri + \"\\n\" )\n\n    if (userCallback) {\n      if (!this.fetchCallbacks[docuri]) {\n        this.fetchCallbacks[docuri] = [userCallback];\n      } else {\n        this.fetchCallbacks[docuri].push(userCallback);\n      }\n    }\n\n    if (this.requested[docuri] === true) {\n      return; // Don't ask again - wait for existing call\n    } else {\n      this.requested[docuri] = true;\n    }\n\n    if (!options.noMeta && rterm && rterm.uri) {\n      kb.add(docterm.uri, ns.link('requestedBy'), rterm.uri, this.appNode);\n    }\n\n    var xhr = Util.XMLHTTPFactory();\n    var req = xhr.req = kb.bnode();\n    xhr.original = kb.sym(baseURI);\n    // console.log('XHR original: ' + xhr.original)\n    xhr.options = options;\n    xhr.resource = docterm; // This might be proxified\n    var sf = this;\n\n    var now = new Date();\n    var timeNow = '[' + now.getHours() + ':' + now.getMinutes() + ':' + now.getSeconds() + '] ';\n    if (!options.noMeta) {\n      kb.add(req, ns.rdfs('label'), kb.literal(timeNow + ' Request for ' + docuri), this.appNode);\n      kb.add(req, ns.link('requestedURI'), kb.literal(docuri), this.appNode);\n      kb.add(req, ns.link('status'), kb.collection(), this.appNode);\n    }\n\n    var checkCredentialsRetry = function checkCredentialsRetry() {\n      if (!xhr.withCredentials) return false; // not dealt with\n\n      if (xhr.retriedWithCredentials) {\n        return true;\n      }\n      xhr.retriedWithCredentials = true; // protect against called twice\n      console.log('web: Retrying with no credentials for ' + xhr.resource);\n      xhr.abort();\n      delete sf.requested[docuri]; // forget the original request happened\n      var newopt = {};\n      for (var opt in options) {\n        // transfer baseURI etc\n        if (options.hasOwnProperty(opt)) {\n          newopt[opt] = options[opt];\n        }\n      }\n      newopt.withCredentials = false;\n      sf.addStatus(xhr.req, 'Abort: Will retry with credentials SUPPRESSED to see if that helps');\n      sf.requestURI(docuri, rterm, newopt, xhr.userCallback); // userCallback already registered (with where?)\n      return true;\n    };\n\n    var onerrorFactory = function onerrorFactory(xhr) {\n      return function (event) {\n        xhr.onErrorWasCalled = true; // debugging and may need it\n        if (typeof document !== 'undefined') {\n          // Mashup situation, not node etc\n          if (Fetcher.crossSiteProxyTemplate && document.location && !xhr.proxyUsed) {\n            var hostpart = Uri.hostpart;\n            var here = '' + document.location;\n            var uri = xhr.resource.uri;\n            if (hostpart(here) && hostpart(uri) && hostpart(here) !== hostpart(uri)) {\n              // If cross-site\n              if (xhr.status === 401 || xhr.status === 403 || xhr.status === 404) {\n                onreadystatechangeFactory(xhr)();\n              } else {\n                // IT IS A PAIN THAT NO PROPER ERROR REPORTING\n                if (checkCredentialsRetry(xhr)) {\n                  // If credentials flag set, retry without,\n                  return;\n                }\n                // If it wasn't, or we already tried that\n                var newURI = Fetcher.crossSiteProxy(uri);\n                console.log('web: Direct failed so trying proxy ' + newURI);\n                sf.addStatus(xhr.req, 'BLOCKED -> Cross-site Proxy to <' + newURI + '>');\n                if (xhr.aborted) return;\n\n                var kb = sf.store;\n                var oldreq = xhr.req;\n                if (!xhr.options.noMeta) {\n                  kb.add(oldreq, ns.http('redirectedTo'), kb.sym(newURI), oldreq);\n                }\n                xhr.abort();\n                xhr.aborted = true;\n\n                sf.addStatus(oldreq, 'redirected to new request'); // why\n                // the callback throws an exception when called from xhr.onerror (so removed)\n                // sf.fireCallbacks('done', args) // Are these args right? @@@   Not done yet! done means success\n                sf.requested[xhr.resource.uri] = 'redirected';\n                sf.redirectedTo[xhr.resource.uri] = newURI;\n\n                if (sf.fetchCallbacks[xhr.resource.uri]) {\n                  if (!sf.fetchCallbacks[newURI]) {\n                    sf.fetchCallbacks[newURI] = [];\n                  }\n                  sf.fetchCallbacks[newURI] === sf.fetchCallbacks[newURI].concat(sf.fetchCallbacks[xhr.resource.uri]);\n                  delete sf.fetchCallbacks[xhr.resource.uri];\n                }\n\n                var xhr2 = sf.requestURI(newURI, xhr.resource, xhr.options, xhr.userCallback);\n                if (xhr2) {\n                  xhr2.proxyUsed = true; // only try the proxy once\n                  xhr2.original = xhr.original;\n                  console.log('Proxying but original still ' + xhr2.original);\n                }\n                if (xhr2 && xhr2.req) {\n                  if (!xhr.options.noMeta) {\n                    kb.add(xhr.req, kb.sym('http://www.w3.org/2007/ont/link#redirectedRequest'), xhr2.req, sf.appNode);\n                  }\n                  return;\n                }\n              }\n            }\n            xhr.CORS_status = 999;\n            // xhr.status = 999     forbidden - read-only\n          }\n        } // mashu\n      }; // function of event\n    }; // onerrorFactory\n\n    // Set up callbacks\n    var onreadystatechangeFactory = function onreadystatechangeFactory(xhr) {\n      return function () {\n        var handleResponse = function handleResponse() {\n          if (xhr.handleResponseDone) return;\n          xhr.handleResponseDone = true;\n          var handler = null;\n          var thisReq = xhr.req; // Might have changes by redirect\n          sf.fireCallbacks('recv', args);\n          var kb = sf.store;\n          sf.saveResponseMetadata(xhr, kb);\n          sf.fireCallbacks('headers', [{ uri: docuri, headers: xhr.headers }]);\n\n          // Check for masked errors.\n          // For \"security reasons\" theboraser hides errors such as CORS errors from\n          // the calling code (2015). oneror() used to be called but is not now.\n          //\n          if (xhr.status === 0) {\n            console.log('Masked error - status 0 for ' + xhr.resource.uri);\n            if (checkCredentialsRetry(xhr)) {\n              // retry is could be credentials flag CORS issue\n              return;\n            }\n            xhr.CORS_status = 900; // unknown masked error\n            return;\n          }\n          if (xhr.status >= 400) {\n            // For extra dignostics, keep the reply\n            //  @@@ 401 should cause  a retry with credential son\n            // @@@ cache the credentials flag by host ????\n            if (xhr.status === 404) {\n              kb.fetcher.nonexistant[xhr.resource.uri] = true;\n            }\n            if (xhr.responseText.length > 10) {\n              var response2 = kb.bnode();\n              kb.add(response2, ns.http('content'), kb.literal(xhr.responseText), response2);\n              if (xhr.statusText) {\n                kb.add(response2, ns.http('statusText'), kb.literal(xhr.statusText), response2);\n              }\n              // dump(\"HTTP >= 400 responseText:\\n\"+xhr.responseText+\"\\n\"); // @@@@\n            }\n            sf.failFetch(xhr, 'HTTP error for ' + xhr.resource + ': ' + xhr.status + ' ' + xhr.statusText);\n            return;\n          }\n\n          var loc = xhr.headers['content-location'];\n\n          // deduce some things from the HTTP transaction\n          var addType = function addType(cla) {\n            // add type to all redirected resources too\n            var prev = thisReq;\n            if (loc) {\n              var docURI = kb.any(prev, ns.link('requestedURI'));\n              if (docURI !== loc) {\n                kb.add(kb.sym(loc), ns.rdf('type'), cla, sf.appNode);\n              }\n            }\n            for (;;) {\n              var doc = kb.any(prev, ns.link('requestedURI'));\n              if (doc && doc.value) {\n                kb.add(kb.sym(doc.value), ns.rdf('type'), cla, sf.appNode);\n              } // convert Literal\n              prev = kb.any(undefined, kb.sym('http://www.w3.org/2007/ont/link#redirectedRequest'), prev);\n              if (!prev) break;\n              var response = kb.any(prev, kb.sym('http://www.w3.org/2007/ont/link#response'));\n              if (!response) break;\n              var redirection = kb.any(response, kb.sym('http://www.w3.org/2007/ont/http#status'));\n              if (!redirection) break;\n              if (redirection !== '301' && redirection !== '302') break;\n            }\n          };\n          // This is a minimal set to allow the use of damaged servers if necessary\n          var extensionToContentType = {\n            'rdf': 'application/rdf+xml', 'owl': 'application/rdf+xml',\n            'n3': 'text/n3', 'ttl': 'text/turtle', 'nt': 'text/n3', 'acl': 'text/n3',\n            'html': 'text/html',\n            'xml': 'text/xml'\n          };\n          var guess;\n          if (xhr.status === 200) {\n            addType(ns.link('Document'));\n            var ct = xhr.headers['content-type'];\n            if (options.forceContentType) {\n              xhr.headers['content-type'] = options.forceContentType;\n            }\n            if (!ct || ct.indexOf('application/octet-stream') >= 0) {\n              guess = extensionToContentType[xhr.resource.uri.split('.').pop()];\n              if (guess) {\n                xhr.headers['content-type'] = guess;\n              }\n            }\n            if (ct) {\n              if (ct.indexOf('image/') === 0 || ct.indexOf('application/pdf') === 0) addType(kb.sym('http://purl.org/dc/terms/Image'));\n            }\n            if (options.clearPreviousData) {\n              // Before we parse new data clear old but only on 200\n              kb.removeDocument(xhr.resource);\n            }\n          }\n          // application/octet-stream; charset=utf-8\n\n          if (Uri.protocol(xhr.resource.uri) === 'file' || Uri.protocol(xhr.resource.uri) === 'chrome') {\n            if (options.forceContentType) {\n              xhr.headers['content-type'] = options.forceContentType;\n            } else {\n              guess = extensionToContentType[xhr.resource.uri.split('.').pop()];\n              if (guess) {\n                xhr.headers['content-type'] = guess;\n              } else {\n                xhr.headers['content-type'] = 'text/xml';\n              }\n            }\n          }\n\n          // If we have alread got the thing at this location, abort\n          if (loc) {\n            var udoc = Uri.join(xhr.resource.uri, loc);\n            if (!force && udoc !== xhr.resource.uri && sf.requested[udoc] && sf.requested[udoc] === 'done') {\n              // we have already fetched this in fact.\n              // should we smush too?\n              // log.info(\"HTTP headers indicate we have already\" + \" retrieved \" + xhr.resource + \" as \" + udoc + \". Aborting.\")\n              sf.doneFetch(xhr);\n              xhr.abort();\n              return;\n            }\n            sf.requested[udoc] = true;\n          }\n\n          for (var x = 0; x < sf.handlers.length; x++) {\n            if (xhr.headers['content-type'] && xhr.headers['content-type'].match(sf.handlers[x].pattern)) {\n              handler = new sf.handlers[x]();\n              break;\n            }\n          }\n\n          sf.parseLinkHeader(xhr, thisReq);\n\n          if (handler) {\n            try {\n              handler.handlerFactory(xhr);\n            } catch (e) {\n              // Try to avoid silent errors\n              sf.failFetch(xhr, 'Exception handling content-type ' + xhr.headers['content-type'] + ' was: ' + e);\n            }\n          } else {\n            sf.doneFetch(xhr); //  Not a problem, we just don't extract data.\n            /*\n            // sf.failFetch(xhr, \"Unhandled content type: \" + xhr.headers['content-type']+\n            //        \", readyState = \"+xhr.readyState)\n            */\n            return;\n          }\n        };\n\n        // DONE: 4\n        // HEADERS_RECEIVED: 2\n        // LOADING: 3\n        // OPENED: 1\n        // UNSENT: 0\n\n        // log.debug(\"web.js: XHR \" + xhr.resource.uri + ' readyState='+xhr.readyState); // @@@@ comment me out\n\n        switch (xhr.readyState) {\n          case 0:\n            var uri = xhr.resource.uri;\n            var newURI;\n            if (this.crossSiteProxyTemplate && typeof document !== 'undefined' && document.location) {\n              // In mashup situation\n              var hostpart = Uri.hostpart;\n              var here = '' + document.location;\n              if (hostpart(here) && hostpart(uri) && hostpart(here) !== hostpart(uri)) {\n                newURI = this.crossSiteProxyTemplate.replace('{uri}', encodeURIComponent(uri));\n                sf.addStatus(xhr.req, 'BLOCKED -> Cross-site Proxy to <' + newURI + '>');\n                if (xhr.aborted) return;\n\n                var kb = sf.store;\n                var oldreq = xhr.req;\n                kb.add(oldreq, ns.http('redirectedTo'), kb.sym(newURI), oldreq);\n\n                // //////////// Change the request node to a new one:  @@@@@@@@@@@@ Duplicate?\n                var newreq = xhr.req = kb.bnode(); // Make NEW reqest for everything else\n                kb.add(oldreq, ns.http('redirectedRequest'), newreq, xhr.req);\n\n                var now = new Date();\n                var timeNow = '[' + now.getHours() + ':' + now.getMinutes() + ':' + now.getSeconds() + '] ';\n                kb.add(newreq, ns.rdfs('label'), kb.literal(timeNow + ' Request for ' + newURI), this.appNode);\n                kb.add(newreq, ns.link('status'), kb.collection(), this.appNode);\n                kb.add(newreq, ns.link('requestedURI'), kb.literal(newURI), this.appNode);\n\n                var response = kb.bnode();\n                kb.add(oldreq, ns.link('response'), response);\n                // kb.add(response, ns.http('status'), kb.literal(xhr.status), response)\n                // if (xhr.statusText) kb.add(response, ns.http('statusText'), kb.literal(xhr.statusText), response)\n\n                xhr.abort();\n                xhr.aborted = true;\n                xhr.redirected = true;\n\n                sf.addStatus(oldreq, 'redirected XHR'); // why\n\n                if (sf.fetchCallbacks[xhr.resource.uri]) {\n                  if (!sf.fetchCallbacks[newURI]) {\n                    sf.fetchCallbacks[newURI] = [];\n                  }\n                  sf.fetchCallbacks[newURI] === sf.fetchCallbacks[newURI].concat(sf.fetchCallbacks[xhr.resource.uri]);\n                  delete sf.fetchCallbacks[xhr.resource.uri];\n                }\n\n                sf.fireCallbacks('redirected', args); // Are these args right? @@@\n                sf.requested[xhr.resource.uri] = 'redirected';\n\n                var xhr2 = sf.requestURI(newURI, xhr.resource, xhr.options || {}, xhr.userCallback);\n                if (xhr2 && xhr2.req) {\n                  kb.add(xhr.req, kb.sym('http://www.w3.org/2007/ont/link#redirectedRequest'), xhr2.req, sf.appNode);\n                  return;\n                }\n              }\n            }\n            sf.failFetch(xhr, 'HTTP Blocked. (ReadyState 0) Cross-site violation for <' + docuri + '>');\n\n            break;\n\n          case 3:\n            // Intermediate state -- 3 may OR MAY NOT be called, selon browser.\n            // handleResponse();   // In general it you can't do it yet as the headers are in but not the data\n            break;\n          case 4:\n            // Final state for this XHR but may be redirected\n            handleResponse();\n            // Now handle\n            if (xhr.handle && xhr.responseText !== undefined) {\n              // can be validly zero length\n              if (sf.requested[xhr.resource.uri] === 'redirected') {\n                break;\n              }\n              sf.fireCallbacks('load', args);\n              xhr.handle(function () {\n                sf.doneFetch(xhr);\n              });\n            } else {\n              if (xhr.redirected) {\n                sf.addStatus(xhr.req, 'Aborted and redirected to new request.');\n              } else {\n                sf.addStatus(xhr.req, 'Fetch over. No data handled. Aborted = ' + xhr.aborted);\n              }\n              // sf.failFetch(xhr, \"HTTP failed unusually. (no handler set) (x-site violation? no net?) for <\"+\n              //    docuri+\">\")\n            }\n            break;\n        } // switch\n      };\n    };\n\n    // Map the URI to a localhost proxy if we are running on localhost\n    // This is used for working offline, e.g. on planes.\n    // Is the script istelf is running in localhost, then access all data in a localhost mirror.\n    // Do not remove without checking with TimBL\n    var uri2 = docuri;\n    if (typeof tabulator !== 'undefined' && tabulator.preferences.get('offlineModeUsingLocalhost')) {\n      if (uri2.slice(0, 7) === 'http://' && uri2.slice(7, 17) !== 'localhost/') {\n        uri2 = 'http://localhost/' + uri2.slice(7);\n        log.warn('Localhost kludge for offline use: actually getting <' + uri2 + '>');\n      } else {\n        // log.warn(\"Localhost kludge NOT USED <\" + uri2 + \">\")\n      }\n    } else {}\n      // log.warn(\"Localhost kludge OFF offline use: actually getting <\" + uri2 + \">\")\n\n      // 2014 probelm:\n      // XMLHttpRequest cannot load http://www.w3.org/People/Berners-Lee/card.\n      // A wildcard '*' cannot be used in the 'Access-Control-Allow-Origin' header when the credentials flag is true.\n      // @ Many ontology files under http: and need CORS wildcard -> can't have withCredentials\n\n    var withCredentials = uri2.slice(0, 6) === 'https:'; // @@ Kludge -- need for webid which typically is served from https\n    if (options.withCredentials !== undefined) {\n      withCredentials = options.withCredentials;\n    }\n    var actualProxyURI = this.proxyIfNecessary(uri2);\n\n    // Setup the request\n    // var xhr\n    // xhr = Util.XMLHTTPFactory()\n    xhr.onerror = onerrorFactory(xhr);\n    xhr.onreadystatechange = onreadystatechangeFactory(xhr);\n    xhr.timeout = sf.timeout;\n    xhr.withCredentials = withCredentials;\n    xhr.actualProxyURI = actualProxyURI;\n\n    xhr.req = req;\n    xhr.options = options;\n    xhr.options = options;\n    xhr.resource = docterm;\n    xhr.requestedURI = uri2;\n\n    xhr.ontimeout = function () {\n      sf.failFetch(xhr, 'requestTimeout');\n    };\n    try {\n      xhr.open('GET', actualProxyURI, this.async);\n    } catch (er) {\n      return this.failFetch(xhr, 'XHR open for GET failed for <' + uri2 + '>:\\n\\t' + er);\n    }\n    if (force) {\n      // must happen after open\n      xhr.setRequestHeader('Cache-control', 'no-cache');\n    }\n\n    // Set redirect callback and request headers -- alas Firefox Extension Only\n    if (typeof tabulator !== 'undefined' && tabulator.isExtension && xhr.channel && (Uri.protocol(xhr.resource.uri) === 'http' || Uri.protocol(xhr.resource.uri) === 'https')) {\n      try {\n        xhr.channel.notificationCallbacks = {\n          getInterface: function getInterface(iid) {\n            if (iid.equals(Components.interfaces.nsIChannelEventSink)) {\n              return {\n                onChannelRedirect: function onChannelRedirect(oldC, newC, flags) {\n                  if (xhr.aborted) return;\n                  var kb = sf.store;\n                  var newURI = newC.URI.spec;\n                  var oldreq = xhr.req;\n                  if (!xhr.options.noMeta) {\n                    sf.addStatus(xhr.req, 'Redirected: ' + xhr.status + ' to <' + newURI + '>');\n                    kb.add(oldreq, ns.http('redirectedTo'), kb.sym(newURI), xhr.req);\n\n                    // //////////// Change the request node to a new one:  @@@@@@@@@@@@ Duplicate code?\n                    var newreq = xhr.req = kb.bnode(); // Make NEW reqest for everything else\n                    kb.add(oldreq, ns.http('redirectedRequest'), newreq, this.appNode);\n\n                    var now = new Date();\n                    var timeNow = '[' + now.getHours() + ':' + now.getMinutes() + ':' + now.getSeconds() + '] ';\n                    kb.add(newreq, ns.rdfs('label'), kb.literal(timeNow + ' Request for ' + newURI), this.appNode);\n                    kb.add(newreq, ns.link('status'), kb.collection(), this.appNode);\n                    kb.add(newreq, ns.link('requestedURI'), kb.literal(newURI), this.appNode);\n                    // /////////////\n\n                    // // log.info('@@ sources onChannelRedirect'+\n                    //               \"Redirected: \"+\n                    //               xhr.status + \" to <\" + newURI + \">\"); //@@\n                    var response = kb.bnode();\n                    // kb.add(response, ns.http('location'), newURI, response); Not on this response\n                    kb.add(oldreq, ns.link('response'), response);\n                    kb.add(response, ns.http('status'), kb.literal(xhr.status), response);\n                    if (xhr.statusText) kb.add(response, ns.http('statusText'), kb.literal(xhr.statusText), response);\n                  }\n                  if (xhr.status - 0 !== 303) kb.HTTPRedirects[xhr.resource.uri] = newURI; // same document as\n                  if (xhr.status - 0 === 301 && rterm) {\n                    // 301 Moved\n                    var badDoc = Uri.docpart(rterm.uri);\n                    var msg = 'Warning: ' + xhr.resource + ' has moved to <' + newURI + '>.';\n                    if (rterm) {\n                      msg += ' Link in <' + badDoc + ' >should be changed';\n                      kb.add(badDoc, kb.sym('http://www.w3.org/2007/ont/link#warning'), msg, sf.appNode);\n                    }\n                    // dump(msg+\"\\n\")\n                  }\n                  xhr.abort();\n                  xhr.aborted = true;\n\n                  if (sf.fetchCallbacks[xhr.resource.uri]) {\n                    if (!sf.fetchCallbacks[newURI]) {\n                      sf.fetchCallbacks[newURI] = [];\n                    }\n                    sf.fetchCallbacks[newURI] === sf.fetchCallbacks[newURI].concat(sf.fetchCallbacks[xhr.resource.uri]);\n                    delete sf.fetchCallbacks[xhr.resource.uri];\n                  }\n\n                  sf.addStatus(oldreq, 'redirected'); // why\n                  sf.fireCallbacks('redirected', args); // Are these args right? @@@\n                  sf.requested[xhr.resource.uri] = 'redirected';\n                  sf.redirectedTo[xhr.resource.uri] = newURI;\n\n                  var hash = newURI.indexOf('#');\n                  if (hash >= 0) {\n                    if (!xhr.options.noMeta) {\n                      kb.add(xhr.resource, kb.sym('http://www.w3.org/2007/ont/link#warning'), 'Warning: ' + xhr.resource + ' HTTP redirects to' + newURI + ' which should not contain a \"#\" sign');\n                    }\n                    newURI = newURI.slice(0, hash);\n                  }\n                  var xhr2 = sf.requestURI(newURI, xhr.resource, xhr.options, xhr.userCallback);\n                  if (xhr2 && xhr2.req && !options.noMeta) {\n                    kb.add(xhr.req, kb.sym('http://www.w3.org/2007/ont/link#redirectedRequest'), xhr2.req, sf.appNode);\n                  }\n                  // else dump(\"No xhr.req available for redirect from \"+xhr.resource+\" to \"+newURI+\"\\n\")\n                },\n\n                // See https://developer.mozilla.org/en/XPCOM_Interface_Reference/nsIChannelEventSink\n                asyncOnChannelRedirect: function asyncOnChannelRedirect(oldC, newC, flags, callback) {\n                  if (xhr.aborted) return;\n                  var kb = sf.store;\n                  var newURI = newC.URI.spec;\n                  var oldreq = xhr.req;\n                  sf.addStatus(xhr.req, 'Redirected: ' + xhr.status + ' to <' + newURI + '>');\n                  kb.add(oldreq, ns.http('redirectedTo'), kb.sym(newURI), xhr.req);\n\n                  // //////////// Change the request node to a new one:  @@@@@@@@@@@@ Duplicate?\n                  var newreq = xhr.req = kb.bnode(); // Make NEW reqest for everything else\n                  // xhr.resource = docterm\n                  // xhr.requestedURI = args[0]\n\n                  // kb.add(kb.sym(newURI), ns.link(\"request\"), req, this.appNode)\n                  kb.add(oldreq, ns.http('redirectedRequest'), newreq, xhr.req);\n\n                  var now = new Date();\n                  var timeNow = '[' + now.getHours() + ':' + now.getMinutes() + ':' + now.getSeconds() + '] ';\n                  kb.add(newreq, ns.rdfs('label'), kb.literal(timeNow + ' Request for ' + newURI), this.appNode);\n                  kb.add(newreq, ns.link('status'), kb.collection(), this.appNode);\n                  kb.add(newreq, ns.link('requestedURI'), kb.literal(newURI), this.appNode);\n                  // /////////////\n\n                  // // log.info('@@ sources onChannelRedirect'+\n                  //               \"Redirected: \"+\n                  //               xhr.status + \" to <\" + newURI + \">\"); //@@\n                  var response = kb.bnode();\n                  // kb.add(response, ns.http('location'), newURI, response); Not on this response\n                  kb.add(oldreq, ns.link('response'), response);\n                  kb.add(response, ns.http('status'), kb.literal(xhr.status), response);\n                  if (xhr.statusText) kb.add(response, ns.http('statusText'), kb.literal(xhr.statusText), response);\n\n                  if (xhr.status - 0 !== 303) kb.HTTPRedirects[xhr.resource.uri] = newURI; // same document as\n                  if (xhr.status - 0 === 301 && rterm) {\n                    // 301 Moved\n                    var badDoc = Uri.docpart(rterm.uri);\n                    var msg = 'Warning: ' + xhr.resource + ' has moved to <' + newURI + '>.';\n                    if (rterm) {\n                      msg += ' Link in <' + badDoc + ' >should be changed';\n                      kb.add(badDoc, kb.sym('http://www.w3.org/2007/ont/link#warning'), msg, sf.appNode);\n                    }\n                    // dump(msg+\"\\n\")\n                  }\n                  xhr.abort();\n                  xhr.aborted = true;\n\n                  var hash = newURI.indexOf('#');\n                  if (hash >= 0) {\n                    var msg2 = 'Warning: ' + xhr.resource + ' HTTP redirects to' + newURI + ' which do not normally contain a \"#\" sign';\n                    // dump(msg+\"\\n\")\n                    kb.add(xhr.resource, kb.sym('http://www.w3.org/2007/ont/link#warning'), msg2);\n                    newURI = newURI.slice(0, hash);\n                  }\n                  /*\n                  if (sf.fetchCallbacks[xhr.resource.uri]) {\n                    if (!sf.fetchCallbacks[newURI]) {\n                      sf.fetchCallbacks[newURI] = []\n                    }\n                    sf.fetchCallbacks[newURI] = sf.fetchCallbacks[newURI].concat(sf.fetchCallbacks[xhr.resource.uri])\n                    delete sf.fetchCallbacks[xhr.resource.uri]\n                  }\n                  */\n                  sf.requested[xhr.resource.uri] = 'redirected';\n                  sf.redirectedTo[xhr.resource.uri] = newURI;\n\n                  var xhr2 = sf.requestURI(newURI, xhr.resource, xhr.options, xhr.userCallback);\n                  if (xhr2) {\n                    // may be no XHR is other URI already loaded\n                    xhr2.original = xhr.original; // use this for finding base\n                    if (xhr2.req) {\n                      kb.add(xhr.req, kb.sym('http://www.w3.org/2007/ont/link#redirectedRequest'), xhr2.req, sf.appNode);\n                    }\n                  }\n                  // else dump(\"No xhr.req available for redirect from \"+xhr.resource+\" to \"+newURI+\"\\n\")\n                } // asyncOnChannelRedirect\n              };\n            }\n            return Components.results.NS_NOINTERFACE;\n          }\n        };\n      } catch (err) {\n        return sf.failFetch(xhr, \"@@ Couldn't set callback for redirects: \" + err);\n      } // try\n    } // if Firefox extension\n\n    try {\n      var acceptstring = '';\n      for (var type in this.mediatypes) {\n        // var attrstring = ''\n        if (acceptstring !== '') {\n          acceptstring += ', ';\n        }\n        acceptstring += type;\n        for (var attr in this.mediatypes[type]) {\n          acceptstring += ';' + attr + '=' + this.mediatypes[type][attr];\n        }\n      }\n      xhr.setRequestHeader('Accept', acceptstring);\n      this.addStatus(xhr.req, 'Accept: ' + acceptstring);\n\n      // if (requester) { xhr.setRequestHeader('Referer',requester) }\n    } catch (err) {\n      throw new Error(\"Can't set Accept header: \" + err);\n    }\n\n    // Fire\n    try {\n      xhr.send(null);\n    } catch (er) {\n      return this.failFetch(xhr, 'XHR send failed:' + er);\n    }\n    setTimeout(function () {\n      if (xhr.readyState !== 4 && sf.isPending(xhr.resource.uri)) {\n        sf.failFetch(xhr, 'requestTimeout');\n      }\n    }, this.timeout);\n    this.addStatus(xhr.req, 'HTTP Request sent.');\n    return xhr;\n  }; // this.requestURI()\n\n  this.objectRefresh = function (term) {\n    var uris = kb.uris(term); // Get all URIs\n    if (typeof uris !== 'undefined') {\n      for (var i = 0; i < uris.length; i++) {\n        this.refresh(this.store.sym(Uri.docpart(uris[i])));\n        // what about rterm?\n      }\n    }\n  };\n\n  // deprecated -- use IndexedFormula.removeDocument(doc)\n  this.unload = function (term) {\n    this.store.removeMany(undefined, undefined, undefined, term);\n    delete this.requested[term.uri]; // So it can be loaded again\n  };\n\n  this.refresh = function (term, userCallback) {\n    // sources_refresh\n    this.fireCallbacks('refresh', arguments);\n    this.requestURI(term.uri, undefined, { force: true, clearPreviousData: true }, userCallback);\n  };\n\n  this.retract = function (term) {\n    // sources_retract\n    this.store.removeMany(undefined, undefined, undefined, term);\n    if (term.uri) {\n      delete this.requested[Uri.docpart(term.uri)];\n    }\n    this.fireCallbacks('retract', arguments);\n  };\n\n  this.getState = function (docuri) {\n    if (typeof this.requested[docuri] === 'undefined') {\n      return 'unrequested';\n    } else if (this.requested[docuri] === true) {\n      return 'requested';\n    } else if (this.requested[docuri] === 'done') {\n      return 'fetched';\n    } else if (this.requested[docuri] === 'redirected') {\n      return this.getState(this.redirectedTo[docuri]);\n    } else {\n      // An non-200 HTTP error status\n      return 'failed';\n    }\n  };\n\n  // doing anyStatementMatching is wasting time\n  this.isPending = function (docuri) {\n    // sources_pending\n    // if it's not pending: false -> flailed 'done' -> done 'redirected' -> redirected\n    return this.requested[docuri] === true;\n  };\n  // var updatesVia = new $rdf.UpdatesVia(this) // Subscribe to headers\n  // @@@@@@@@ This is turned off because it causes a websocket to be set up for ANY fetch\n  // whether we want to track it ot not. including ontologies loaed though the XSSproxy\n}; // End of fetcher\n\nmodule.exports = Fetcher;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rdflib/lib/fetcher.js\n// module id = 77\n// module chunks = 0","'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\n/**\n*\n*  UTF-8 data encode / decode\n*  http://www.webtoolkit.info/\n*\n**/\nvar Uri = require('./uri');\nvar ArrayIndexOf = require('./util').ArrayIndexOf;\n\nvar N3Parser = function () {\n\n    function hexify(str) {\n        // also used in parser\n        return encodeURI(str);\n    }\n\n    var Utf8 = {\n        // public method for url encoding\n        encode: function encode(string) {\n            string = string.replace(/\\r\\n/g, \"\\n\");\n            var utftext = \"\";\n\n            for (var n = 0; n < string.length; n++) {\n\n                var c = string.charCodeAt(n);\n\n                if (c < 128) {\n                    utftext += String.fromCharCode(c);\n                } else if (c > 127 && c < 2048) {\n                    utftext += String.fromCharCode(c >> 6 | 192);\n                    utftext += String.fromCharCode(c & 63 | 128);\n                } else {\n                    utftext += String.fromCharCode(c >> 12 | 224);\n                    utftext += String.fromCharCode(c >> 6 & 63 | 128);\n                    utftext += String.fromCharCode(c & 63 | 128);\n                }\n            }\n\n            return utftext;\n        },\n        // public method for url decoding\n        decode: function decode(utftext) {\n            var string = \"\";\n            var i = 0;\n\n            while (i < utftext.length) {\n\n                var c = utftext.charCodeAt(i);\n                if (c < 128) {\n                    string += String.fromCharCode(c);\n                    i++;\n                } else if (c > 191 && c < 224) {\n                    string += String.fromCharCode((c & 31) << 6 | utftext.charCodeAt(i + 1) & 63);\n                    i += 2;\n                } else {\n                    string += String.fromCharCode((c & 15) << 12 | (utftext.charCodeAt(i + 1) & 63) << 6 | utftext.charCodeAt(i + 2) & 63);\n                    i += 3;\n                }\n            }\n            return string;\n        }\n    }; // Things we need to define to make converted pythn code work in js\n    // environment of $rdf\n\n    var RDFSink_forSomeSym = \"http://www.w3.org/2000/10/swap/log#forSome\";\n    var RDFSink_forAllSym = \"http://www.w3.org/2000/10/swap/log#forAll\";\n    var Logic_NS = \"http://www.w3.org/2000/10/swap/log#\";\n\n    //  pyjs seems to reference runtime library which I didn't find\n\n    var pyjslib_Tuple = function pyjslib_Tuple(theList) {\n        return theList;\n    };\n\n    var pyjslib_List = function pyjslib_List(theList) {\n        return theList;\n    };\n\n    var pyjslib_Dict = function pyjslib_Dict(listOfPairs) {\n        if (listOfPairs.length > 0) throw \"missing.js: oops nnonempty dict not imp\";\n        return [];\n    };\n\n    var pyjslib_len = function pyjslib_len(s) {\n        return s.length;\n    };\n\n    var pyjslib_slice = function pyjslib_slice(str, i, j) {\n        if (typeof str.slice == 'undefined') throw '@@ mising.js: No .slice function for ' + str + ' of type ' + (typeof str === 'undefined' ? 'undefined' : _typeof(str));\n        if (typeof j == 'undefined' || j == null) return str.slice(i);\n        return str.slice(i, j); // @ exactly the same spec?\n    };\n    var StopIteration = Error('dummy error stop iteration');\n\n    var pyjslib_Iterator = function pyjslib_Iterator(theList) {\n        this.last = 0;\n        this.li = theList;\n        this.next = function () {\n            if (this.last == this.li.length) throw StopIteration;\n            return this.li[this.last++];\n        };\n        return this;\n    };\n\n    var ord = function ord(str) {\n        return str.charCodeAt(0);\n    };\n\n    var string_find = function string_find(str, s) {\n        return str.indexOf(s);\n    };\n\n    var assertFudge = function assertFudge(condition, desc) {\n        if (condition) return;\n        if (desc) throw \"python Assertion failed: \" + desc;\n        throw \"(python) Assertion failed.\";\n    };\n\n    var stringFromCharCode = function stringFromCharCode(uesc) {\n        return String.fromCharCode(uesc);\n    };\n\n    String.prototype.encode = function (encoding) {\n        if (encoding != 'utf-8') throw \"UTF8_converter: can only do utf-8\";\n        return Utf8.encode(this);\n    };\n    String.prototype.decode = function (encoding) {\n        if (encoding != 'utf-8') throw \"UTF8_converter: can only do utf-8\";\n        //return Utf8.decode(this);\n        return this;\n    };\n\n    var uripath_join = function uripath_join(base, given) {\n        return Uri.join(given, base); // sad but true\n    };\n\n    var becauseSubexpression = null; // No reason needed\n    var diag_tracking = 0;\n    var diag_chatty_flag = 0;\n    var diag_progress = function diag_progress(str) {} /*$rdf.log.debug(str);*/\n\n    // why_BecauseOfData = function(doc, reason) { return doc };\n\n\n    ;var RDF_type_URI = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\";\n    var DAML_sameAs_URI = \"http://www.w3.org/2002/07/owl#sameAs\";\n\n    /*\n    function SyntaxError(details) {\n        return new __SyntaxError(details);\n    }\n    */\n\n    function __SyntaxError(details) {\n        this.details = details;\n    }\n\n    /*\n    \n    $Id: n3parser.js 14561 2008-02-23 06:37:26Z kennyluck $\n    \n    HAND EDITED FOR CONVERSION TO JAVASCRIPT\n    \n    This module implements a Nptation3 parser, and the final\n    part of a notation3 serializer.\n    \n    See also:\n    \n    Notation 3\n    http://www.w3.org/DesignIssues/Notation3\n    \n    Closed World Machine - and RDF Processor\n    http://www.w3.org/2000/10/swap/cwm\n    \n    To DO: See also \"@@\" in comments\n    \n    - Clean up interfaces\n    ______________________________________________\n    \n    Module originally by Dan Connolly, includeing notation3\n    parser and RDF generator. TimBL added RDF stream model\n    and N3 generation, replaced stream model with use\n    of common store/formula API.  Yosi Scharf developped\n    the module, including tests and test harness.\n    \n    */\n\n    var ADDED_HASH = \"#\";\n    var LOG_implies_URI = \"http://www.w3.org/2000/10/swap/log#implies\";\n    var INTEGER_DATATYPE = \"http://www.w3.org/2001/XMLSchema#integer\";\n    var FLOAT_DATATYPE = \"http://www.w3.org/2001/XMLSchema#double\";\n    var DECIMAL_DATATYPE = \"http://www.w3.org/2001/XMLSchema#decimal\";\n    var DATE_DATATYPE = \"http://www.w3.org/2001/XMLSchema#date\";\n    var DATETIME_DATATYPE = \"http://www.w3.org/2001/XMLSchema#dateTime\";\n    var BOOLEAN_DATATYPE = \"http://www.w3.org/2001/XMLSchema#boolean\";\n    var option_noregen = 0;\n    var _notQNameChars = \"\\t\\r\\n !\\\"#$%&'()*.,+/;<=>?@[\\\\]^`{|}~\";\n    var _notNameChars = _notQNameChars + \":\";\n    var _rdfns = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\";\n    var N3CommentCharacter = \"#\";\n    var eol = new RegExp(\"^[ \\\\t]*(#[^\\\\n]*)?\\\\r?\\\\n\", 'g');\n    var eof = new RegExp(\"^[ \\\\t]*(#[^\\\\n]*)?$\", 'g');\n    var ws = new RegExp(\"^[ \\\\t]*\", 'g');\n    var signed_integer = new RegExp(\"^[-+]?[0-9]+\", 'g');\n    var number_syntax = new RegExp(\"^([-+]?[0-9]+)(\\\\.[0-9]+)?(e[-+]?[0-9]+)?\", 'g');\n    var datetime_syntax = new RegExp('^[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9](T[0-9][0-9]:[0-9][0-9](:[0-9][0-9](\\\\.[0-9]*)?)?)?Z?');\n\n    var digitstring = new RegExp(\"^[0-9]+\", 'g');\n    var interesting = new RegExp(\"[\\\\\\\\\\\\r\\\\n\\\\\\\"]\", 'g');\n    var langcode = new RegExp(\"^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\", 'g');\n    function SinkParser(store, openFormula, thisDoc, baseURI, genPrefix, metaURI, flags, why) {\n        return new __SinkParser(store, openFormula, thisDoc, baseURI, genPrefix, metaURI, flags, why);\n    }\n    function __SinkParser(store, openFormula, thisDoc, baseURI, genPrefix, metaURI, flags, why) {\n        if (typeof openFormula == 'undefined') openFormula = null;\n        if (typeof thisDoc == 'undefined') thisDoc = \"\";\n        if (typeof baseURI == 'undefined') baseURI = null;\n        if (typeof genPrefix == 'undefined') genPrefix = \"\";\n        if (typeof metaURI == 'undefined') metaURI = null;\n        if (typeof flags == 'undefined') flags = \"\";\n        if (typeof why == 'undefined') why = null;\n        /*\n        note: namespace names should *not* end in #;\n        the # will get added during qname processing */\n\n        this._bindings = new pyjslib_Dict([]);\n        this._flags = flags;\n        if (thisDoc != \"\") {\n            assertFudge(thisDoc.indexOf(\":\") >= 0, \"Document URI not absolute: \" + thisDoc);\n            this._bindings[\"\"] = thisDoc + \"#\";\n        }\n        this._store = store;\n        if (genPrefix) {\n            store.setGenPrefix(genPrefix);\n        }\n        this._thisDoc = thisDoc;\n        this.source = store.sym(thisDoc);\n        this.lines = 0;\n        this.statementCount = 0;\n        this.startOfLine = 0;\n        this.previousLine = 0;\n        this._genPrefix = genPrefix;\n        this.keywords = new pyjslib_List([\"a\", \"this\", \"bind\", \"has\", \"is\", \"of\", \"true\", \"false\"]);\n        this.keywordsSet = 0;\n        this._anonymousNodes = new pyjslib_Dict([]);\n        this._variables = new pyjslib_Dict([]);\n        this._parentVariables = new pyjslib_Dict([]);\n        this._reason = why;\n        this._reason2 = null;\n        if (diag_tracking) {\n            this._reason2 = why_BecauseOfData(store.sym(thisDoc), this._reason);\n        }\n        if (baseURI) {\n            this._baseURI = baseURI;\n        } else {\n            if (thisDoc) {\n                this._baseURI = thisDoc;\n            } else {\n                this._baseURI = null;\n            }\n        }\n        assertFudge(!this._baseURI || this._baseURI.indexOf(\":\") >= 0);\n        if (!this._genPrefix) {\n            if (this._thisDoc) {\n                this._genPrefix = this._thisDoc + \"#_g\";\n            } else {\n                this._genPrefix = RDFSink_uniqueURI();\n            }\n        }\n        if (openFormula == null) {\n            if (this._thisDoc) {\n                this._formula = store.formula(thisDoc + \"#_formula\");\n            } else {\n                this._formula = store.formula();\n            }\n        } else {\n            this._formula = openFormula;\n        }\n        this._context = this._formula;\n        this._parentContext = null;\n    }\n    __SinkParser.prototype.here = function (i) {\n        return this._genPrefix + \"_L\" + this.lines + \"C\" + (i - this.startOfLine + 1);\n    };\n    __SinkParser.prototype.formula = function () {\n        return this._formula;\n    };\n    __SinkParser.prototype.loadStream = function (stream) {\n        return this.loadBuf(stream.read());\n    };\n    __SinkParser.prototype.loadBuf = function (buf) {\n        /*\n        Parses a buffer and returns its top level formula*/\n\n        this.startDoc();\n        this.feed(buf);\n        return this.endDoc();\n    };\n    __SinkParser.prototype.feed = function (octets) {\n        /*\n        Feed an octet stream tothe parser\n         if BadSyntax is raised, the string\n        passed in the exception object is the\n        remainder after any statements have been parsed.\n        So if there is more data to feed to the\n        parser, it should be straightforward to recover.*/\n\n        var str = octets.decode(\"utf-8\");\n        var i = 0;\n        while (i >= 0) {\n            var j = this.skipSpace(str, i);\n            if (j < 0) {\n                return;\n            }\n            var i = this.directiveOrStatement(str, j);\n            if (i < 0) {\n                throw BadSyntax(this._thisDoc, this.lines, str, j, \"expected directive or statement\");\n            }\n        }\n    };\n    __SinkParser.prototype.directiveOrStatement = function (str, h) {\n        var i = this.skipSpace(str, h);\n        if (i < 0) {\n            return i;\n        }\n        var j = this.directive(str, i);\n        if (j >= 0) {\n            return this.checkDot(str, j);\n        }\n        var j = this.statement(str, i);\n        if (j >= 0) {\n            return this.checkDot(str, j);\n        }\n        return j;\n    };\n    __SinkParser.prototype.tok = function (tok, str, i) {\n        /*\n        Check for keyword.  Space must have been stripped on entry and\n        we must not be at end of file.*/\n        var whitespace = \"\\t\\n\\v\\f\\r \";\n        if (pyjslib_slice(str, i, i + 1) == \"@\") {\n            var i = i + 1;\n        } else {\n            if (ArrayIndexOf(this.keywords, tok) < 0) {\n                return -1;\n            }\n        }\n        var k = i + pyjslib_len(tok);\n        if (pyjslib_slice(str, i, k) == tok && _notQNameChars.indexOf(str.charAt(k)) >= 0) {\n            return k;\n        } else {\n            return -1;\n        }\n    };\n    __SinkParser.prototype.directive = function (str, i) {\n        var j = this.skipSpace(str, i);\n        if (j < 0) {\n            return j;\n        }\n        var res = new pyjslib_List([]);\n        var j = this.tok(\"bind\", str, i);\n        if (j > 0) {\n            throw BadSyntax(this._thisDoc, this.lines, str, i, \"keyword bind is obsolete: use @prefix\");\n        }\n        var j = this.tok(\"keywords\", str, i);\n        if (j > 0) {\n            var i = this.commaSeparatedList(str, j, res, false);\n            if (i < 0) {\n                throw BadSyntax(this._thisDoc, this.lines, str, i, \"'@keywords' needs comma separated list of words\");\n            }\n            this.setKeywords(pyjslib_slice(res, null, null));\n            if (diag_chatty_flag > 80) {\n                diag_progress(\"Keywords \", this.keywords);\n            }\n            return i;\n        }\n        var j = this.tok(\"forAll\", str, i);\n        if (j > 0) {\n            var i = this.commaSeparatedList(str, j, res, true);\n            if (i < 0) {\n                throw BadSyntax(this._thisDoc, this.lines, str, i, \"Bad variable list after @forAll\");\n            }\n\n            var __x = new pyjslib_Iterator(res);\n            try {\n                while (true) {\n                    var x = __x.next();\n\n                    if (ArrayIndexOf(this._variables, x) < 0 || ArrayIndexOf(this._parentVariables, x) >= 0) {\n                        this._variables[x] = this._context.newUniversal(x);\n                    }\n                }\n            } catch (e) {\n                if (e != StopIteration) {\n                    throw e;\n                }\n            }\n\n            return i;\n        }\n        var j = this.tok(\"forSome\", str, i);\n        if (j > 0) {\n            var i = this.commaSeparatedList(str, j, res, this.uri_ref2);\n            if (i < 0) {\n                throw BadSyntax(this._thisDoc, this.lines, str, i, \"Bad variable list after @forSome\");\n            }\n\n            var __x = new pyjslib_Iterator(res);\n            try {\n                while (true) {\n                    var x = __x.next();\n\n                    this._context.declareExistential(x);\n                }\n            } catch (e) {\n                if (e != StopIteration) {\n                    throw e;\n                }\n            }\n\n            return i;\n        }\n        var j = this.tok(\"prefix\", str, i);\n        if (j >= 0) {\n            var t = new pyjslib_List([]);\n            var i = this.qname(str, j, t);\n            if (i < 0) {\n                throw BadSyntax(this._thisDoc, this.lines, str, j, \"expected qname after @prefix\");\n            }\n            var j = this.uri_ref2(str, i, t);\n            if (j < 0) {\n                throw BadSyntax(this._thisDoc, this.lines, str, i, \"expected <uriref> after @prefix _qname_\");\n            }\n            var ns = t[1].uri;\n            if (this._baseURI) {\n                var ns = uripath_join(this._baseURI, ns);\n            } else {\n                assertFudge(ns.indexOf(\":\") >= 0, \"With no base URI, cannot handle relative URI for NS\");\n            }\n            assertFudge(ns.indexOf(\":\") >= 0);\n            this._bindings[t[0][0]] = ns;\n\n            this.bind(t[0][0], hexify(ns));\n            return j;\n        }\n        var j = this.tok(\"base\", str, i);\n        if (j >= 0) {\n            var t = new pyjslib_List([]);\n            var i = this.uri_ref2(str, j, t);\n            if (i < 0) {\n                throw BadSyntax(this._thisDoc, this.lines, str, j, \"expected <uri> after @base \");\n            }\n            var ns = t[0].uri;\n            if (this._baseURI) {\n                var ns = uripath_join(this._baseURI, ns);\n            } else {\n                throw BadSyntax(this._thisDoc, this.lines, str, j, \"With no previous base URI, cannot use relative URI in @base  <\" + ns + \">\");\n            }\n            assertFudge(ns.indexOf(\":\") >= 0);\n            this._baseURI = ns;\n            return i;\n        }\n        return -1;\n    };\n    __SinkParser.prototype.bind = function (qn, uri) {\n        if (qn == \"\") {} else {\n            this._store.setPrefixForURI(qn, uri);\n        }\n    };\n    __SinkParser.prototype.setKeywords = function (k) {\n        /*\n        Takes a list of strings*/\n\n        if (k == null) {\n            this.keywordsSet = 0;\n        } else {\n            this.keywords = k;\n            this.keywordsSet = 1;\n        }\n    };\n    __SinkParser.prototype.startDoc = function () {};\n    __SinkParser.prototype.endDoc = function () {\n        /*\n        Signal end of document and stop parsing. returns formula*/\n\n        return this._formula;\n    };\n    __SinkParser.prototype.makeStatement = function (quad) {\n        quad[0].add(quad[2], quad[1], quad[3], this.source);\n        this.statementCount += 1;\n    };\n    __SinkParser.prototype.statement = function (str, i) {\n        var r = new pyjslib_List([]);\n        var i = this.object(str, i, r);\n        if (i < 0) {\n            return i;\n        }\n        var j = this.property_list(str, i, r[0]);\n        if (j < 0) {\n            throw BadSyntax(this._thisDoc, this.lines, str, i, \"expected propertylist\");\n        }\n        return j;\n    };\n    __SinkParser.prototype.subject = function (str, i, res) {\n        return this.item(str, i, res);\n    };\n    __SinkParser.prototype.verb = function (str, i, res) {\n        /*\n        has _prop_\n        is _prop_ of\n        a\n        =\n        _prop_\n        >- prop ->\n        <- prop -<\n        _operator_*/\n\n        var j = this.skipSpace(str, i);\n        if (j < 0) {\n            return j;\n        }\n        var r = new pyjslib_List([]);\n        var j = this.tok(\"has\", str, i);\n        if (j >= 0) {\n            var i = this.prop(str, j, r);\n            if (i < 0) {\n                throw BadSyntax(this._thisDoc, this.lines, str, j, \"expected property after 'has'\");\n            }\n            res.push(new pyjslib_Tuple([\"->\", r[0]]));\n            return i;\n        }\n        var j = this.tok(\"is\", str, i);\n        if (j >= 0) {\n            var i = this.prop(str, j, r);\n            if (i < 0) {\n                throw BadSyntax(this._thisDoc, this.lines, str, j, \"expected <property> after 'is'\");\n            }\n            var j = this.skipSpace(str, i);\n            if (j < 0) {\n                throw BadSyntax(this._thisDoc, this.lines, str, i, \"End of file found, expected property after 'is'\");\n                return j;\n            }\n            var i = j;\n            var j = this.tok(\"of\", str, i);\n            if (j < 0) {\n                throw BadSyntax(this._thisDoc, this.lines, str, i, \"expected 'of' after 'is' <prop>\");\n            }\n            res.push(new pyjslib_Tuple([\"<-\", r[0]]));\n            return j;\n        }\n        var j = this.tok(\"a\", str, i);\n        if (j >= 0) {\n            res.push(new pyjslib_Tuple([\"->\", this._store.sym(RDF_type_URI)]));\n            return j;\n        }\n        if (pyjslib_slice(str, i, i + 2) == \"<=\") {\n            res.push(new pyjslib_Tuple([\"<-\", this._store.sym(Logic_NS + \"implies\")]));\n            return i + 2;\n        }\n        if (pyjslib_slice(str, i, i + 1) == \"=\") {\n            if (pyjslib_slice(str, i + 1, i + 2) == \">\") {\n                res.push(new pyjslib_Tuple([\"->\", this._store.sym(Logic_NS + \"implies\")]));\n                return i + 2;\n            }\n            res.push(new pyjslib_Tuple([\"->\", this._store.sym(DAML_sameAs_URI)]));\n            return i + 1;\n        }\n        if (pyjslib_slice(str, i, i + 2) == \":=\") {\n            res.push(new pyjslib_Tuple([\"->\", Logic_NS + \"becomes\"]));\n            return i + 2;\n        }\n        var j = this.prop(str, i, r);\n        if (j >= 0) {\n            res.push(new pyjslib_Tuple([\"->\", r[0]]));\n            return j;\n        }\n        if (pyjslib_slice(str, i, i + 2) == \">-\" || pyjslib_slice(str, i, i + 2) == \"<-\") {\n            throw BadSyntax(this._thisDoc, this.lines, str, j, \">- ... -> syntax is obsolete.\");\n        }\n        return -1;\n    };\n    __SinkParser.prototype.prop = function (str, i, res) {\n        return this.item(str, i, res);\n    };\n    __SinkParser.prototype.item = function (str, i, res) {\n        return this.path(str, i, res);\n    };\n    __SinkParser.prototype.blankNode = function (uri) {\n        return this._context.bnode(uri, this._reason2);\n    };\n    __SinkParser.prototype.path = function (str, i, res) {\n        /*\n        Parse the path production.\n        */\n\n        var j = this.nodeOrLiteral(str, i, res);\n        if (j < 0) {\n            return j;\n        }\n        while (\"!^.\".indexOf(pyjslib_slice(str, j, j + 1)) >= 0) {\n            var ch = pyjslib_slice(str, j, j + 1);\n            if (ch == \".\") {\n                var ahead = pyjslib_slice(str, j + 1, j + 2);\n                if (!ahead || _notNameChars.indexOf(ahead) >= 0 && \":?<[{(\".indexOf(ahead) < 0) {\n                    break;\n                }\n            }\n            var subj = res.pop();\n            var obj = this.blankNode(this.here(j));\n            var j = this.node(str, j + 1, res);\n            if (j < 0) {\n                throw BadSyntax(this._thisDoc, this.lines, str, j, \"EOF found in middle of path syntax\");\n            }\n            var pred = res.pop();\n            if (ch == \"^\") {\n                this.makeStatement(new pyjslib_Tuple([this._context, pred, obj, subj]));\n            } else {\n                this.makeStatement(new pyjslib_Tuple([this._context, pred, subj, obj]));\n            }\n            res.push(obj);\n        }\n        return j;\n    };\n    __SinkParser.prototype.anonymousNode = function (ln) {\n        /*\n        Remember or generate a term for one of these _: anonymous nodes*/\n\n        var term = this._anonymousNodes[ln];\n        if (term) {\n            return term;\n        }\n        var term = this._store.bnode(this._context, this._reason2);\n        this._anonymousNodes[ln] = term;\n        return term;\n    };\n    __SinkParser.prototype.node = function (str, i, res, subjectAlready) {\n        if (typeof subjectAlready == 'undefined') subjectAlready = null;\n        /*\n        Parse the <node> production.\n        Space is now skipped once at the beginning\n        instead of in multipe calls to self.skipSpace().\n        */\n\n        var subj = subjectAlready;\n        var j = this.skipSpace(str, i);\n        if (j < 0) {\n            return j;\n        }\n        var i = j;\n        var ch = pyjslib_slice(str, i, i + 1);\n        if (ch == \"[\") {\n            var bnodeID = this.here(i);\n            var j = this.skipSpace(str, i + 1);\n            if (j < 0) {\n                throw BadSyntax(this._thisDoc, this.lines, str, i, \"EOF after '['\");\n            }\n            if (pyjslib_slice(str, j, j + 1) == \"=\") {\n                var i = j + 1;\n                var objs = new pyjslib_List([]);\n                var j = this.objectList(str, i, objs);\n\n                if (j >= 0) {\n                    var subj = objs[0];\n                    if (pyjslib_len(objs) > 1) {\n\n                        var __obj = new pyjslib_Iterator(objs);\n                        try {\n                            while (true) {\n                                var obj = __obj.next();\n\n                                this.makeStatement(new pyjslib_Tuple([this._context, this._store.sym(DAML_sameAs_URI), subj, obj]));\n                            }\n                        } catch (e) {\n                            if (e != StopIteration) {\n                                throw e;\n                            }\n                        }\n                    }\n                    var j = this.skipSpace(str, j);\n                    if (j < 0) {\n                        throw BadSyntax(this._thisDoc, this.lines, str, i, \"EOF when objectList expected after [ = \");\n                    }\n                    if (pyjslib_slice(str, j, j + 1) == \";\") {\n                        var j = j + 1;\n                    }\n                } else {\n                    throw BadSyntax(this._thisDoc, this.lines, str, i, \"objectList expected after [= \");\n                }\n            }\n            if (subj == null) {\n                var subj = this.blankNode(bnodeID);\n            }\n            var i = this.property_list(str, j, subj);\n            if (i < 0) {\n                throw BadSyntax(this._thisDoc, this.lines, str, j, \"property_list expected\");\n            }\n            var j = this.skipSpace(str, i);\n            if (j < 0) {\n                throw BadSyntax(this._thisDoc, this.lines, str, i, \"EOF when ']' expected after [ <propertyList>\");\n            }\n            if (pyjslib_slice(str, j, j + 1) != \"]\") {\n                throw BadSyntax(this._thisDoc, this.lines, str, j, \"']' expected\");\n            }\n            res.push(subj);\n            return j + 1;\n        }\n        if (ch == \"{\") {\n            var ch2 = pyjslib_slice(str, i + 1, i + 2);\n            if (ch2 == \"$\") {\n                i += 1;\n                var j = i + 1;\n                var mylist = new pyjslib_List([]);\n                var first_run = true;\n                while (1) {\n                    var i = this.skipSpace(str, j);\n                    if (i < 0) {\n                        throw BadSyntax(this._thisDoc, this.lines, str, i, \"needed '$}', found end.\");\n                    }\n                    if (pyjslib_slice(str, i, i + 2) == \"$}\") {\n                        var j = i + 2;\n                        break;\n                    }\n                    if (!first_run) {\n                        if (pyjslib_slice(str, i, i + 1) == \",\") {\n                            i += 1;\n                        } else {\n                            throw BadSyntax(this._thisDoc, this.lines, str, i, \"expected: ','\");\n                        }\n                    } else {\n                        var first_run = false;\n                    }\n                    var item = new pyjslib_List([]);\n                    var j = this.item(str, i, item);\n                    if (j < 0) {\n                        throw BadSyntax(this._thisDoc, this.lines, str, i, \"expected item in set or '$}'\");\n                    }\n                    mylist.push(item[0]);\n                }\n                res.push(this._store.newSet(mylist, this._context));\n                return j;\n            } else {\n                var j = i + 1;\n                var oldParentContext = this._parentContext;\n                this._parentContext = this._context;\n                var parentAnonymousNodes = this._anonymousNodes;\n                var grandParentVariables = this._parentVariables;\n                this._parentVariables = this._variables;\n                this._anonymousNodes = new pyjslib_Dict([]);\n                this._variables = this._variables.slice();\n                var reason2 = this._reason2;\n                this._reason2 = becauseSubexpression;\n                if (subj == null) {\n                    var subj = this._store.formula();\n                }\n                this._context = subj;\n                while (1) {\n                    var i = this.skipSpace(str, j);\n                    if (i < 0) {\n                        throw BadSyntax(this._thisDoc, this.lines, str, i, \"needed '}', found end.\");\n                    }\n                    if (pyjslib_slice(str, i, i + 1) == \"}\") {\n                        var j = i + 1;\n                        break;\n                    }\n                    var j = this.directiveOrStatement(str, i);\n                    if (j < 0) {\n                        throw BadSyntax(this._thisDoc, this.lines, str, i, \"expected statement or '}'\");\n                    }\n                }\n                this._anonymousNodes = parentAnonymousNodes;\n                this._variables = this._parentVariables;\n                this._parentVariables = grandParentVariables;\n                this._context = this._parentContext;\n                this._reason2 = reason2;\n                this._parentContext = oldParentContext;\n                res.push(subj.close());\n                return j;\n            }\n        }\n        if (ch == \"(\") {\n            var thing_type = this._store.list;\n            var ch2 = pyjslib_slice(str, i + 1, i + 2);\n            if (ch2 == \"$\") {\n                var thing_type = this._store.newSet;\n                i += 1;\n            }\n            var j = i + 1;\n            var mylist = new pyjslib_List([]);\n            while (1) {\n                var i = this.skipSpace(str, j);\n                if (i < 0) {\n                    throw BadSyntax(this._thisDoc, this.lines, str, i, \"needed ')', found end.\");\n                }\n                if (pyjslib_slice(str, i, i + 1) == \")\") {\n                    var j = i + 1;\n                    break;\n                }\n                var item = new pyjslib_List([]);\n                var j = this.item(str, i, item);\n                if (j < 0) {\n                    throw BadSyntax(this._thisDoc, this.lines, str, i, \"expected item in list or ')'\");\n                }\n                mylist.push(item[0]);\n            }\n            res.push(thing_type(mylist, this._context));\n            return j;\n        }\n        var j = this.tok(\"this\", str, i);\n        if (j >= 0) {\n            throw BadSyntax(this._thisDoc, this.lines, str, i, \"Keyword 'this' was ancient N3. Now use @forSome and @forAll keywords.\");\n            res.push(this._context);\n            return j;\n        }\n        var j = this.tok(\"true\", str, i);\n        if (j >= 0) {\n            res.push(true);\n            return j;\n        }\n        var j = this.tok(\"false\", str, i);\n        if (j >= 0) {\n            res.push(false);\n            return j;\n        }\n        if (subj == null) {\n            var j = this.uri_ref2(str, i, res);\n            if (j >= 0) {\n                return j;\n            }\n        }\n        return -1;\n    };\n    __SinkParser.prototype.property_list = function (str, i, subj) {\n        /*\n        Parse property list\n        Leaves the terminating punctuation in the buffer\n        */\n\n        while (1) {\n            var j = this.skipSpace(str, i);\n            if (j < 0) {\n                throw BadSyntax(this._thisDoc, this.lines, str, i, \"EOF found when expected verb in property list\");\n                return j;\n            }\n            if (pyjslib_slice(str, j, j + 2) == \":-\") {\n                var i = j + 2;\n                var res = new pyjslib_List([]);\n                var j = this.node(str, i, res, subj);\n                if (j < 0) {\n                    throw BadSyntax(this._thisDoc, this.lines, str, i, \"bad {} or () or [] node after :- \");\n                }\n                var i = j;\n                continue;\n            }\n            var i = j;\n            var v = new pyjslib_List([]);\n            var j = this.verb(str, i, v);\n            if (j <= 0) {\n                return i;\n            }\n            var objs = new pyjslib_List([]);\n            var i = this.objectList(str, j, objs);\n            if (i < 0) {\n                throw BadSyntax(this._thisDoc, this.lines, str, j, \"objectList expected\");\n            }\n\n            var __obj = new pyjslib_Iterator(objs);\n            try {\n                while (true) {\n                    var obj = __obj.next();\n\n                    var pairFudge = v[0];\n                    var dir = pairFudge[0];\n                    var sym = pairFudge[1];\n                    if (dir == \"->\") {\n                        this.makeStatement(new pyjslib_Tuple([this._context, sym, subj, obj]));\n                    } else {\n                        this.makeStatement(new pyjslib_Tuple([this._context, sym, obj, subj]));\n                    }\n                }\n            } catch (e) {\n                if (e != StopIteration) {\n                    throw e;\n                }\n            }\n\n            var j = this.skipSpace(str, i);\n            if (j < 0) {\n                throw BadSyntax(this._thisDoc, this.lines, str, j, \"EOF found in list of objects\");\n                return j;\n            }\n            if (pyjslib_slice(str, i, i + 1) != \";\") {\n                return i;\n            }\n            var i = i + 1;\n        }\n    };\n    __SinkParser.prototype.commaSeparatedList = function (str, j, res, ofUris) {\n        /*\n        return value: -1 bad syntax; >1 new position in str\n        res has things found appended\n         Used to use a final value of the function to be called, e.g. this.bareWord\n        but passing the function didn't work fo js converion pyjs\n        */\n\n        var i = this.skipSpace(str, j);\n        if (i < 0) {\n            throw BadSyntax(this._thisDoc, this.lines, str, i, \"EOF found expecting comma sep list\");\n            return i;\n        }\n        if (str.charAt(i) == \".\") {\n            return j;\n        }\n        if (ofUris) {\n            var i = this.uri_ref2(str, i, res);\n        } else {\n            var i = this.bareWord(str, i, res);\n        }\n        if (i < 0) {\n            return -1;\n        }\n        while (1) {\n            var j = this.skipSpace(str, i);\n            if (j < 0) {\n                return j;\n            }\n            var ch = pyjslib_slice(str, j, j + 1);\n            if (ch != \",\") {\n                if (ch != \".\") {\n                    return -1;\n                }\n                return j;\n            }\n            if (ofUris) {\n                var i = this.uri_ref2(str, j + 1, res);\n            } else {\n                var i = this.bareWord(str, j + 1, res);\n            }\n            if (i < 0) {\n                throw BadSyntax(this._thisDoc, this.lines, str, i, \"bad list content\");\n                return i;\n            }\n        }\n    };\n    __SinkParser.prototype.objectList = function (str, i, res) {\n        var i = this.object(str, i, res);\n        if (i < 0) {\n            return -1;\n        }\n        while (1) {\n            var j = this.skipSpace(str, i);\n            if (j < 0) {\n                throw BadSyntax(this._thisDoc, this.lines, str, j, \"EOF found after object\");\n                return j;\n            }\n            if (pyjslib_slice(str, j, j + 1) != \",\") {\n                return j;\n            }\n            var i = this.object(str, j + 1, res);\n            if (i < 0) {\n                return i;\n            }\n        }\n    };\n    __SinkParser.prototype.checkDot = function (str, i) {\n        var j = this.skipSpace(str, i);\n        if (j < 0) {\n            return j;\n        }\n        if (pyjslib_slice(str, j, j + 1) == \".\") {\n            return j + 1;\n        }\n        if (pyjslib_slice(str, j, j + 1) == \"}\") {\n            return j;\n        }\n        if (pyjslib_slice(str, j, j + 1) == \"]\") {\n            return j;\n        }\n        throw BadSyntax(this._thisDoc, this.lines, str, j, \"expected '.' or '}' or ']' at end of statement\");\n        return i;\n    };\n    __SinkParser.prototype.uri_ref2 = function (str, i, res) {\n        /*\n        Generate uri from n3 representation.\n         Note that the RDF convention of directly concatenating\n        NS and local name is now used though I prefer inserting a '#'\n        to make the namesapces look more like what XML folks expect.\n        */\n\n        var qn = new pyjslib_List([]);\n        var j = this.qname(str, i, qn);\n        if (j >= 0) {\n            var pairFudge = qn[0];\n            var pfx = pairFudge[0];\n            var ln = pairFudge[1];\n            if (pfx == null) {\n                assertFudge(0, \"not used?\");\n                var ns = this._baseURI + ADDED_HASH;\n            } else {\n                var ns = this._bindings[pfx];\n                if (!ns) {\n                    if (pfx == \"_\") {\n                        res.push(this.anonymousNode(ln));\n                        return j;\n                    }\n                    throw BadSyntax(this._thisDoc, this.lines, str, i, \"Prefix \" + pfx + \" not bound.\");\n                }\n            }\n            var symb = this._store.sym(ns + ln);\n            if (ArrayIndexOf(this._variables, symb) >= 0) {\n                res.push(this._variables[symb]);\n            } else {\n                res.push(symb);\n            }\n            return j;\n        }\n        var i = this.skipSpace(str, i);\n        if (i < 0) {\n            return -1;\n        }\n        if (str.charAt(i) == \"?\") {\n            var v = new pyjslib_List([]);\n            var j = this.variable(str, i, v);\n            if (j > 0) {\n                res.push(v[0]);\n                return j;\n            }\n            return -1;\n        } else if (str.charAt(i) == \"<\") {\n            var i = i + 1;\n            var st = i;\n            while (i < pyjslib_len(str)) {\n                if (str.charAt(i) == \">\") {\n                    var uref = pyjslib_slice(str, st, i);\n                    if (this._baseURI) {\n                        var uref = uripath_join(this._baseURI, uref);\n                    } else {\n                        assertFudge(uref.indexOf(\":\") >= 0, \"With no base URI, cannot deal with relative URIs\");\n                    }\n                    if (pyjslib_slice(str, i - 1, i) == \"#\" && !(pyjslib_slice(uref, -1, null) == \"#\")) {\n                        var uref = uref + \"#\";\n                    }\n                    var symb = this._store.sym(uref);\n                    if (ArrayIndexOf(this._variables, symb) >= 0) {\n                        res.push(this._variables[symb]);\n                    } else {\n                        res.push(symb);\n                    }\n                    return i + 1;\n                }\n                var i = i + 1;\n            }\n            throw BadSyntax(this._thisDoc, this.lines, str, j, \"unterminated URI reference\");\n        } else if (this.keywordsSet) {\n            var v = new pyjslib_List([]);\n            var j = this.bareWord(str, i, v);\n            if (j < 0) {\n                return -1;\n            }\n            if (ArrayIndexOf(this.keywords, v[0]) >= 0) {\n                throw BadSyntax(this._thisDoc, this.lines, str, i, \"Keyword \\\"\" + v[0] + \"\\\" not allowed here.\");\n            }\n            res.push(this._store.sym(this._bindings[\"\"] + v[0]));\n            return j;\n        } else {\n            return -1;\n        }\n    };\n    __SinkParser.prototype.skipSpace = function (str, i) {\n        /*\n        Skip white space, newlines and comments.\n        return -1 if EOF, else position of first non-ws character*/\n\n        var whitespace = ' \\n\\r\\t\\f\\u000b            ​\\u2028\\u2029　';\n        for (var j = i ? i : 0; j < str.length; j++) {\n            var ch = str.charAt(j);\n            // console.log(\"    skipspace j= \"+j + \" i= \" + i + \" n= \" + str.length);\n            // console.log(\" skipspace ch <\" + ch + \">\");\n            if (whitespace.indexOf(ch) < 0) {\n                //not ws\n                // console.log(\" skipspace 2 ch <\" + ch + \">\");\n                if (str.charAt(j) === '#') {\n                    for (;; j++) {\n                        // console.log(\"    skipspace2 j= \"+j + \" i= \" + i + \" n= \" + str.length);\n                        if (j === str.length) {\n                            return -1; // EOF\n                        }\n                        if (str.charAt(j) === '\\n') {\n                            this.lines = this.lines + 1;\n                            break;\n                        }\n                    };\n                } else {\n                    // Not hash - something interesting\n                    // console.log(\" skipspace 3 ch <\" + ch + \">\");\n                    return j;\n                }\n            } else {\n                // Whitespace\n                // console.log(\" skipspace 5 ch <\" + ch + \">\");\n                if (str.charAt(j) === '\\n') {\n                    this.lines = this.lines + 1;\n                }\n            }\n        } // next j\n        return -1; // EOF\n    };\n\n    __SinkParser.prototype.variable = function (str, i, res) {\n        /*\n        ?abc -> variable(:abc)\n        */\n\n        var j = this.skipSpace(str, i);\n        if (j < 0) {\n            return -1;\n        }\n        if (pyjslib_slice(str, j, j + 1) != \"?\") {\n            return -1;\n        }\n        var j = j + 1;\n        var i = j;\n        if (\"0123456789-\".indexOf(str.charAt(j)) >= 0) {\n            throw BadSyntax(this._thisDoc, this.lines, str, j, \"Varible name can't start with '\" + str.charAt(j) + \"s'\");\n            return -1;\n        }\n        while (i < pyjslib_len(str) && _notNameChars.indexOf(str.charAt(i)) < 0) {\n            var i = i + 1;\n        }\n        if (this._parentContext == null) {\n            throw BadSyntax(this._thisDoc, this.lines, str, j, \"Can't use ?xxx syntax for variable in outermost level: \" + pyjslib_slice(str, j - 1, i));\n        }\n        res.push(this._store.variable(pyjslib_slice(str, j, i)));\n        return i;\n    };\n    __SinkParser.prototype.bareWord = function (str, i, res) {\n        /*\n        abc -> :abc\n        */\n\n        var j = this.skipSpace(str, i);\n        if (j < 0) {\n            return -1;\n        }\n        var ch = str.charAt(j);\n        if (\"0123456789-\".indexOf(ch) >= 0) {\n            return -1;\n        }\n        if (_notNameChars.indexOf(ch) >= 0) {\n            return -1;\n        }\n        var i = j;\n        while (i < pyjslib_len(str) && _notNameChars.indexOf(str.charAt(i)) < 0) {\n            var i = i + 1;\n        }\n        res.push(pyjslib_slice(str, j, i));\n        return i;\n    };\n    __SinkParser.prototype.qname = function (str, i, res) {\n        /*\n         xyz:def -> ('xyz', 'def')\n        If not in keywords and keywordsSet: def -> ('', 'def')\n        :def -> ('', 'def')\n        */\n\n        var i = this.skipSpace(str, i);\n        if (i < 0) {\n            return -1;\n        }\n        var c = str.charAt(i);\n        if (\"0123456789-+\".indexOf(c) >= 0) {\n            return -1;\n        }\n        if (_notNameChars.indexOf(c) < 0) {\n            var ln = c;\n            var i = i + 1;\n            while (i < pyjslib_len(str)) {\n                var c = str.charAt(i);\n                if (_notNameChars.indexOf(c) < 0) {\n                    var ln = ln + c;\n                    var i = i + 1;\n                } else {\n                    break;\n                }\n            }\n        } else {\n            var ln = \"\";\n        }\n        if (i < pyjslib_len(str) && str.charAt(i) == \":\") {\n            var pfx = ln;\n            var i = i + 1;\n            var ln = \"\";\n            while (i < pyjslib_len(str)) {\n                var c = str.charAt(i);\n                if (_notNameChars.indexOf(c) < 0) {\n                    var ln = ln + c;\n                    var i = i + 1;\n                } else {\n                    break;\n                }\n            }\n            res.push(new pyjslib_Tuple([pfx, ln]));\n            return i;\n        } else {\n            if (ln && this.keywordsSet && ArrayIndexOf(this.keywords, ln) < 0) {\n                res.push(new pyjslib_Tuple([\"\", ln]));\n                return i;\n            }\n            return -1;\n        }\n    };\n    __SinkParser.prototype.object = function (str, i, res) {\n        var j = this.subject(str, i, res);\n        if (j >= 0) {\n            return j;\n        } else {\n            var j = this.skipSpace(str, i);\n            if (j < 0) {\n                return -1;\n            } else {\n                var i = j;\n            }\n            if (str.charAt(i) == \"\\\"\") {\n                if (pyjslib_slice(str, i, i + 3) == \"\\\"\\\"\\\"\") {\n                    var delim = \"\\\"\\\"\\\"\";\n                } else {\n                    var delim = \"\\\"\";\n                }\n                var i = i + pyjslib_len(delim);\n                var pairFudge = this.strconst(str, i, delim);\n                var j = pairFudge[0];\n                var s = pairFudge[1];\n                res.push(this._store.literal(s));\n                diag_progress(\"New string const \", s, j);\n                return j;\n            } else {\n                return -1;\n            }\n        }\n    };\n    __SinkParser.prototype.nodeOrLiteral = function (str, i, res) {\n        var j = this.node(str, i, res);\n        if (j >= 0) {\n            return j;\n        } else {\n            var j = this.skipSpace(str, i);\n            if (j < 0) {\n                return -1;\n            } else {\n                var i = j;\n            }\n            var ch = str.charAt(i);\n            if (\"-+0987654321\".indexOf(ch) >= 0) {\n\n                datetime_syntax.lastIndex = 0;\n                var m = datetime_syntax.exec(str.slice(i));\n                if (m != null) {\n                    // j =  ( i + datetime_syntax.lastIndex ) ;\n                    var val = m[0];\n                    j = i + val.length;\n                    if (val.indexOf(\"T\") >= 0) {\n                        res.push(this._store.literal(val, undefined, this._store.sym(DATETIME_DATATYPE)));\n                    } else {\n                        res.push(this._store.literal(val, undefined, this._store.sym(DATE_DATATYPE)));\n                    }\n                } else {\n                    number_syntax.lastIndex = 0;\n                    var m = number_syntax.exec(str.slice(i));\n                    if (m == null) {\n                        throw BadSyntax(this._thisDoc, this.lines, str, i, \"Bad number or date syntax\");\n                    }\n                    j = i + number_syntax.lastIndex;\n                    var val = pyjslib_slice(str, i, j);\n                    if (val.indexOf(\"e\") >= 0) {\n                        res.push(this._store.literal(parseFloat(val), undefined, this._store.sym(FLOAT_DATATYPE)));\n                    } else if (pyjslib_slice(str, i, j).indexOf(\".\") >= 0) {\n                        res.push(this._store.literal(parseFloat(val), undefined, this._store.sym(DECIMAL_DATATYPE)));\n                    } else {\n                        res.push(this._store.literal(parseInt(val), undefined, this._store.sym(INTEGER_DATATYPE)));\n                    }\n                };\n                return j; // Where we have got up to\n            }\n            if (str.charAt(i) == \"\\\"\") {\n                if (pyjslib_slice(str, i, i + 3) == \"\\\"\\\"\\\"\") {\n                    var delim = \"\\\"\\\"\\\"\";\n                } else {\n                    var delim = \"\\\"\";\n                }\n                var i = i + pyjslib_len(delim);\n                var dt = null;\n                var pairFudge = this.strconst(str, i, delim);\n                var j = pairFudge[0];\n                var s = pairFudge[1];\n                var lang = null;\n                if (pyjslib_slice(str, j, j + 1) == \"@\") {\n                    langcode.lastIndex = 0;\n\n                    var m = langcode.exec(str.slice(j + 1));\n                    if (m == null) {\n                        throw BadSyntax(this._thisDoc, startline, str, i, \"Bad language code syntax on string literal, after @\");\n                    }\n                    var i = langcode.lastIndex + j + 1;\n\n                    var lang = pyjslib_slice(str, j + 1, i);\n                    var j = i;\n                }\n                if (pyjslib_slice(str, j, j + 2) == \"^^\") {\n                    var res2 = new pyjslib_List([]);\n                    var j = this.uri_ref2(str, j + 2, res2);\n                    var dt = res2[0];\n                }\n                res.push(this._store.literal(s, lang, dt));\n                return j;\n            } else {\n                return -1;\n            }\n        }\n    };\n    __SinkParser.prototype.strconst = function (str, i, delim) {\n        /*\n        parse an N3 string constant delimited by delim.\n        return index, val\n        */\n\n        var j = i;\n        var ustr = \"\";\n        var startline = this.lines;\n        while (j < pyjslib_len(str)) {\n            var i = j + pyjslib_len(delim);\n            if (pyjslib_slice(str, j, i) == delim) {\n                return new pyjslib_Tuple([i, ustr]);\n            }\n            if (str.charAt(j) == \"\\\"\") {\n                var ustr = ustr + \"\\\"\";\n                var j = j + 1;\n                continue;\n            }\n            interesting.lastIndex = 0;\n            var m = interesting.exec(str.slice(j));\n            if (!m) {\n                throw BadSyntax(this._thisDoc, startline, str, j, \"Closing quote missing in string at ^ in \" + pyjslib_slice(str, j - 20, j) + \"^\" + pyjslib_slice(str, j, j + 20));\n            }\n            var i = j + interesting.lastIndex - 1;\n            var ustr = ustr + pyjslib_slice(str, j, i);\n            var ch = str.charAt(i);\n            if (ch == \"\\\"\") {\n                var j = i;\n                continue;\n            } else if (ch == \"\\r\") {\n                var j = i + 1;\n                continue;\n            } else if (ch == \"\\n\") {\n                if (delim == \"\\\"\") {\n                    throw BadSyntax(this._thisDoc, startline, str, i, \"newline found in string literal\");\n                }\n                this.lines = this.lines + 1;\n                var ustr = ustr + ch;\n                var j = i + 1;\n                this.previousLine = this.startOfLine;\n                this.startOfLine = j;\n            } else if (ch == \"\\\\\") {\n                var j = i + 1;\n                var ch = pyjslib_slice(str, j, j + 1);\n                if (!ch) {\n                    throw BadSyntax(this._thisDoc, startline, str, i, \"unterminated string literal (2)\");\n                }\n                var k = string_find(\"abfrtvn\\\\\\\"\", ch);\n                if (k >= 0) {\n                    var uch = \"\\a\\b\\f\\r\\t\\v\\n\\\\\\\"\".charAt(k);\n                    var ustr = ustr + uch;\n                    var j = j + 1;\n                } else if (ch == \"u\") {\n                    var pairFudge = this.uEscape(str, j + 1, startline);\n                    var j = pairFudge[0];\n                    var ch = pairFudge[1];\n                    var ustr = ustr + ch;\n                } else if (ch == \"U\") {\n                    var pairFudge = this.UEscape(str, j + 1, startline);\n                    var j = pairFudge[0];\n                    var ch = pairFudge[1];\n                    var ustr = ustr + ch;\n                } else {\n                    throw BadSyntax(this._thisDoc, this.lines, str, i, \"bad escape\");\n                }\n            }\n        }\n        throw BadSyntax(this._thisDoc, this.lines, str, i, \"unterminated string literal\");\n    };\n    __SinkParser.prototype.uEscape = function (str, i, startline) {\n        var j = i;\n        var count = 0;\n        var value = 0;\n        while (count < 4) {\n            var chFudge = pyjslib_slice(str, j, j + 1);\n            var ch = chFudge.toLowerCase();\n            var j = j + 1;\n            if (ch == \"\") {\n                throw BadSyntax(this._thisDoc, startline, str, i, \"unterminated string literal(3)\");\n            }\n            var k = string_find(\"0123456789abcdef\", ch);\n            if (k < 0) {\n                throw BadSyntax(this._thisDoc, startline, str, i, \"bad string literal hex escape\");\n            }\n            var value = value * 16 + k;\n            var count = count + 1;\n        }\n        var uch = String.fromCharCode(value);\n        return new pyjslib_Tuple([j, uch]);\n    };\n    __SinkParser.prototype.UEscape = function (str, i, startline) {\n        var j = i;\n        var count = 0;\n        var value = '\\\\U';\n        while (count < 8) {\n            var chFudge = pyjslib_slice(str, j, j + 1);\n            var ch = chFudge.toLowerCase();\n            var j = j + 1;\n            if (ch == \"\") {\n                throw BadSyntax(this._thisDoc, startline, str, i, \"unterminated string literal(3)\");\n            }\n            var k = string_find(\"0123456789abcdef\", ch);\n            if (k < 0) {\n                throw BadSyntax(this._thisDoc, startline, str, i, \"bad string literal hex escape\");\n            }\n            var value = value + ch;\n            var count = count + 1;\n        }\n        var uch = stringFromCharCode(\"0x\" + pyjslib_slice(value, 2, 10) - 0);\n        return new pyjslib_Tuple([j, uch]);\n    };\n    function OLD_BadSyntax(uri, lines, str, i, why) {\n        return new __OLD_BadSyntax(uri, lines, str, i, why);\n    }\n    function __OLD_BadSyntax(uri, lines, str, i, why) {\n        this._str = str.encode(\"utf-8\");\n        this._str = str;\n        this._i = i;\n        this._why = why;\n        this.lines = lines;\n        this._uri = uri;\n    }\n    __OLD_BadSyntax.prototype.toString = function () {\n        var str = this._str;\n        var i = this._i;\n        var st = 0;\n        if (i > 60) {\n            var pre = \"...\";\n            var st = i - 60;\n        } else {\n            var pre = \"\";\n        }\n        if (pyjslib_len(str) - i > 60) {\n            var post = \"...\";\n        } else {\n            var post = \"\";\n        }\n        return \"Line %i of <%s>: Bad syntax (%s) at ^ in:\\n\\\"%s%s^%s%s\\\"\" % new pyjslib_Tuple([this.lines + 1, this._uri, this._why, pre, pyjslib_slice(str, st, i), pyjslib_slice(str, i, i + 60), post]);\n    };\n    function BadSyntax(uri, lines, str, i, why) {\n        return \"Line \" + (lines + 1) + \" of <\" + uri + \">: Bad syntax: \" + why + \"\\nat: \\\"\" + pyjslib_slice(str, i, i + 30) + \"\\\"\";\n    }\n\n    function stripCR(str) {\n        var res = \"\";\n\n        var __ch = new pyjslib_Iterator(str);\n        try {\n            while (true) {\n                var ch = __ch.next();\n\n                if (ch != \"\\r\") {\n                    var res = res + ch;\n                }\n            }\n        } catch (e) {\n            if (e != StopIteration) {\n                throw e;\n            }\n        }\n\n        return res;\n    }\n\n    function dummyWrite(x) {}\n\n    return SinkParser;\n}();\n\nmodule.exports = N3Parser;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rdflib/lib/n3parser.js\n// module id = 78\n// module chunks = 0","'use strict';\n\nmodule.exports = parse;\n\nvar BlankNode = require('./blank-node');\nvar jsonld = require('jsonld');\nvar Literal = require('./literal');\nvar N3 = require('n3'); // @@ Goal: remove this dependency\nvar N3Parser = require('./n3parser');\nvar NamedNode = require('./named-node');\nvar parseRDFaDOM = require('./rdfaparser').parseRDFaDOM;\nvar RDFParser = require('./rdfxmlparser');\nvar sparqlUpdateParser = require('./patch-parser');\nvar Util = require('./util');\n\n/**\n * Parse a string and put the result into the graph kb.\n * Normal method is sync.\n * Unfortunately jsdonld is currently written to need to be called async.\n * Hence the mess below with executeCallback.\n */\nfunction parse(str, kb, base, contentType, callback) {\n  try {\n    if (contentType === 'text/n3' || contentType === 'text/turtle') {\n      var p = N3Parser(kb, kb, base, base, null, null, '', null);\n      p.loadBuf(str);\n      executeCallback();\n    } else if (contentType === 'application/rdf+xml') {\n      var parser = new RDFParser(kb);\n      parser.parse(Util.parseXML(str), base, kb.sym(base));\n      executeCallback();\n    } else if (contentType === 'application/xhtml+xml') {\n      parseRDFaDOM(Util.parseXML(str, { contentType: 'application/xhtml+xml' }), kb, base);\n      executeCallback();\n    } else if (contentType === 'text/html') {\n      parseRDFaDOM(Util.parseXML(str, { contentType: 'text/html' }), kb, base);\n      executeCallback();\n    } else if (contentType === 'application/sparql-update') {\n      // @@ we handle a subset\n      sparqlUpdateParser(str, kb, base);\n      executeCallback();\n    } else if (contentType === 'application/ld+json' || contentType === 'application/nquads' || contentType === 'application/n-quads') {\n      var n3Parser = N3.Parser();\n      var triples = [];\n      if (contentType === 'application/ld+json') {\n        var jsonDocument;\n        try {\n          jsonDocument = JSON.parse(str);\n        } catch (parseErr) {\n          callback(parseErr, null);\n        }\n        jsonld.toRDF(jsonDocument, { format: 'application/nquads' }, nquadCallback);\n      } else {\n        nquadCallback(null, str);\n      }\n    } else {\n      throw new Error(\"Don't know how to parse \" + contentType + ' yet');\n    }\n  } catch (e) {\n    executeErrorCallback(e);\n  }\n\n  function executeCallback() {\n    if (callback) {\n      callback(null, kb);\n    } else {\n      return;\n    }\n  }\n\n  function executeErrorCallback(e) {\n    if (contentType !== 'application/ld+json' || contentType !== 'application/nquads' || contentType !== 'application/n-quads') {\n      if (callback) {\n        callback(e, kb);\n      } else {\n        throw new Error('Error trying to parse <' + base + '> as ' + contentType + ':\\n' + e + ':\\n' + e.stack);\n      }\n    }\n  }\n  /*\n    function setJsonLdBase (doc, base) {\n      if (doc instanceof Array) {\n        return\n      }\n      if (!('@context' in doc)) {\n        doc['@context'] = {}\n      }\n      doc['@context']['@base'] = base\n    }\n  */\n  function nquadCallback(err, nquads) {\n    if (err) {\n      callback(err, kb);\n    }\n    try {\n      n3Parser.parse(nquads, tripleCallback);\n    } catch (err) {\n      callback(err, kb);\n    }\n  }\n\n  function tripleCallback(err, triple, prefixes) {\n    if (err) {\n      callback(err, kb);\n    }\n    if (triple) {\n      triples.push(triple);\n    } else {\n      for (var i = 0; i < triples.length; i++) {\n        addTriple(kb, triples[i]);\n      }\n      callback(null, kb);\n    }\n  }\n\n  function addTriple(kb, triple) {\n    var subject = createTerm(triple.subject);\n    var predicate = createTerm(triple.predicate);\n    var object = createTerm(triple.object);\n    var why = null;\n    if (triple.graph) {\n      why = createTerm(triple.graph);\n    }\n    kb.add(subject, predicate, object, why);\n  }\n\n  function createTerm(termString) {\n    var value;\n    if (N3.Util.isLiteral(termString)) {\n      value = N3.Util.getLiteralValue(termString);\n      var language = N3.Util.getLiteralLanguage(termString);\n      var datatype = new NamedNode(N3.Util.getLiteralType(termString));\n      return new Literal(value, language, datatype);\n    } else if (N3.Util.isIRI(termString)) {\n      return new NamedNode(termString);\n    } else if (N3.Util.isBlank(termString)) {\n      value = termString.substring(2, termString.length);\n      return new BlankNode(value);\n    } else {\n      return null;\n    }\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rdflib/lib/parse.js\n// module id = 79\n// module chunks = 0","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n//  RDFa Parser for rdflib.js\n\n// Originally by: Alex Milowski\n// From https://github.com/alexmilowski/green-turtle\n// Converted: timbl 2015-08-25 not yet working\n// Added wrapper: csarven 2016-05-09 working\n\n// RDFaProcessor.prototype = new Object() // Was URIResolver\n\n// RDFaProcessor.prototype.constructor=RDFaProcessor\n\n// options.base = base URI    not really an option, shopuld always be set.\n//\n\nvar BlankNode = require('./blank-node');\nvar Literal = require('./literal');\nvar rdf = require('./data-factory');\nvar NamedNode = require('./named-node');\nvar Uri = require('./uri');\nvar Util = require('./util');\n\nif (typeof Node === 'undefined') {\n  //  @@@@@@ Global. Interface to xmldom.\n  var Node = {\n    ELEMENT_NODE: 1,\n    ATTRIBUTE_NODE: 2,\n    TEXT_NODE: 3,\n    CDATA_SECTION_NODE: 4,\n    ENTITY_REFERENCE_NODE: 5,\n    ENTITY_NODE: 6,\n    PROCESSING_INSTRUCTION_NODE: 7,\n    COMMENT_NODE: 8,\n    DOCUMENT_NODE: 9,\n    DOCUMENT_TYPE_NODE: 10,\n    DOCUMENT_FRAGMENT_NODE: 11,\n    NOTATION_NODE: 12\n  };\n}\n\nvar RDFaProcessor = function () {\n  function RDFaProcessor(kb, options) {\n    _classCallCheck(this, RDFaProcessor);\n\n    this.options = options || {};\n    this.kb = kb;\n    this.target = options.target || {\n      graph: {\n        subjects: {},\n        prefixes: {},\n        terms: {}\n      }\n    };\n    // XXX: Added to track bnodes\n    this.blankNodes = [];\n    // XXX: Added for normalisation\n    this.htmlOptions = {\n      'selfClosing': 'br img input area base basefont col colgroup source wbr isindex link meta param hr'\n    };\n    this.theOne = '_:' + new Date().getTime();\n    this.language = null;\n    this.vocabulary = null;\n    this.blankCounter = 0;\n    this.langAttributes = [{ namespaceURI: 'http://www.w3.org/XML/1998/namespace', localName: 'lang' }];\n    this.inXHTMLMode = false;\n    this.absURIRE = /[\\w\\_\\-]+:\\S+/;\n    this.finishedHandlers = [];\n    this.init();\n  }\n\n  _createClass(RDFaProcessor, [{\n    key: 'addTriple',\n    value: function addTriple(origin, subject, predicate, object) {\n      var su, ob, pr, or;\n      if (typeof subject === 'undefined') {\n        su = rdf.namedNode(this.options.base);\n      } else {\n        su = this.toRDFNodeObject(subject);\n      }\n      pr = this.toRDFNodeObject(predicate);\n      ob = this.toRDFNodeObject(object);\n      or = rdf.namedNode(this.options.base);\n      // console.log('Adding { ' + su + ' ' + pr + ' ' + ob + ' ' + or + ' }')\n      this.kb.add(su, pr, ob, or);\n    }\n  }, {\n    key: 'ancestorPath',\n    value: function ancestorPath(node) {\n      var path = '';\n      while (node && node.nodeType !== Node.DOCUMENT_NODE) {\n        path = '/' + node.localName + path;\n        node = node.parentNode;\n      }\n      return path;\n    }\n  }, {\n    key: 'copyMappings',\n    value: function copyMappings(mappings) {\n      var newMappings = {};\n      for (var k in mappings) {\n        newMappings[k] = mappings[k];\n      }\n      return newMappings;\n    }\n  }, {\n    key: 'copyProperties',\n    value: function copyProperties() {}\n  }, {\n    key: 'deriveDateTimeType',\n    value: function deriveDateTimeType(value) {\n      for (var i = 0; i < RDFaProcessor.dateTimeTypes.length; i++) {\n        // console.log(\"Checking \"+value+\" against \"+RDFaProcessor.dateTimeTypes[i].type)\n        var matched = RDFaProcessor.dateTimeTypes[i].pattern.exec(value);\n        if (matched && matched[0].length === value.length) {\n          // console.log(\"Matched!\")\n          return RDFaProcessor.dateTimeTypes[i].type;\n        }\n      }\n      return null;\n    }\n  }, {\n    key: 'init',\n    value: function init() {}\n  }, {\n    key: 'newBlankNode',\n    value: function newBlankNode() {\n      this.blankCounter++;\n      return '_:' + this.blankCounter;\n    }\n  }, {\n    key: 'newSubjectOrigin',\n    value: function newSubjectOrigin(origin, subject) {}\n  }, {\n    key: 'parseCURIE',\n    value: function parseCURIE(value, prefixes, base) {\n      var colon = value.indexOf(':');\n      var uri;\n      if (colon >= 0) {\n        var prefix = value.substring(0, colon);\n        if (prefix === '') {\n          // default prefix\n          uri = prefixes[''];\n          return uri ? uri + value.substring(colon + 1) : null;\n        } else if (prefix === '_') {\n          // blank node\n          return '_:' + value.substring(colon + 1);\n        } else if (RDFaProcessor.NCNAME.test(prefix)) {\n          uri = prefixes[prefix];\n          if (uri) {\n            return uri + value.substring(colon + 1);\n          }\n        }\n      }\n      return null;\n    }\n  }, {\n    key: 'parseCURIEOrURI',\n    value: function parseCURIEOrURI(value, prefixes, base) {\n      var curie = this.parseCURIE(value, prefixes, base);\n      if (curie) {\n        return curie;\n      }\n      return this.resolveAndNormalize(base, value);\n    }\n  }, {\n    key: 'parsePredicate',\n    value: function parsePredicate(value, defaultVocabulary, terms, prefixes, base, ignoreTerms) {\n      if (value === '') {\n        return null;\n      }\n      var predicate = this.parseTermOrCURIEOrAbsURI(value, defaultVocabulary, ignoreTerms ? null : terms, prefixes, base);\n      if (predicate && predicate.indexOf('_:') === 0) {\n        return null;\n      }\n      return predicate;\n    }\n  }, {\n    key: 'parsePrefixMappings',\n    value: function parsePrefixMappings(str, target) {\n      var values = this.tokenize(str);\n      var prefix = null;\n      // var uri = null\n      for (var i = 0; i < values.length; i++) {\n        if (values[i][values[i].length - 1] === ':') {\n          prefix = values[i].substring(0, values[i].length - 1);\n        } else if (prefix) {\n          target[prefix] = this.options.base ? Uri.join(values[i], this.options.base) : values[i];\n          prefix = null;\n        }\n      }\n    }\n  }, {\n    key: 'parseSafeCURIEOrCURIEOrURI',\n    value: function parseSafeCURIEOrCURIEOrURI(value, prefixes, base) {\n      value = this.trim(value);\n      if (value.charAt(0) === '[' && value.charAt(value.length - 1) === ']') {\n        value = value.substring(1, value.length - 1);\n        value = value.trim(value);\n        if (value.length === 0) {\n          return null;\n        }\n        if (value === '_:') {\n          // the one node\n          return this.theOne;\n        }\n        return this.parseCURIE(value, prefixes, base);\n      } else {\n        return this.parseCURIEOrURI(value, prefixes, base);\n      }\n    }\n  }, {\n    key: 'parseTermOrCURIEOrAbsURI',\n    value: function parseTermOrCURIEOrAbsURI(value, defaultVocabulary, terms, prefixes, base) {\n      // alert(\"Parsing \"+value+\" with default vocab \"+defaultVocabulary)\n      value = this.trim(value);\n      var curie = this.parseCURIE(value, prefixes, base);\n      if (curie) {\n        return curie;\n      } else if (terms) {\n        if (defaultVocabulary && !this.absURIRE.exec(value)) {\n          return defaultVocabulary + value;\n        }\n        var term = terms[value];\n        if (term) {\n          return term;\n        }\n        var lcvalue = value.toLowerCase();\n        term = terms[lcvalue];\n        if (term) {\n          return term;\n        }\n      }\n      if (this.absURIRE.exec(value)) {\n        return this.resolveAndNormalize(base, value);\n      }\n      return null;\n    }\n  }, {\n    key: 'parseTermOrCURIEOrURI',\n    value: function parseTermOrCURIEOrURI(value, defaultVocabulary, terms, prefixes, base) {\n      // alert(\"Parsing \"+value+\" with default vocab \"+defaultVocabulary)\n      value = this.trim(value);\n      var curie = this.parseCURIE(value, prefixes, base);\n      if (curie) {\n        return curie;\n      } else {\n        var term = terms[value];\n        if (term) {\n          return term;\n        }\n        var lcvalue = value.toLowerCase();\n        term = terms[lcvalue];\n        if (term) {\n          return term;\n        }\n        if (defaultVocabulary && !this.absURIRE.exec(value)) {\n          return defaultVocabulary + value;\n        }\n      }\n      return this.resolveAndNormalize(base, value);\n    }\n  }, {\n    key: 'parseURI',\n    value: function parseURI(uri) {\n      return uri; // We just use strings as URIs, not objects now.\n    }\n  }, {\n    key: 'process',\n    value: function process(node, options) {\n      /*\n      if (!window.console) {\n         window.console = { log: function() {} }\n      }*/\n      var base;\n      if (node.nodeType === Node.DOCUMENT_NODE) {\n        base = node.baseURI;\n        node = node.documentElement;\n        node.baseURI = base;\n        this.setContext(node);\n      } else if (node.parentNode.nodeType === Node.DOCUMENT_NODE) {\n        this.setContext(node);\n      }\n      var queue = [];\n      // Fix for Firefox that includes the hash in the base URI\n      var removeHash = function removeHash(baseURI) {\n        // Fix for undefined baseURI property\n        if (!baseURI && options && options.baseURI) {\n          return options.baseURI;\n        }\n\n        var hash = baseURI.indexOf('#');\n        if (hash >= 0) {\n          baseURI = baseURI.substring(0, hash);\n        }\n        if (options && options.baseURIMap) {\n          baseURI = options.baseURIMap(baseURI);\n        }\n        return baseURI;\n      };\n      queue.push({ current: node,\n        context: this.push(null, removeHash(node.baseURI))\n      });\n      while (queue.length > 0) {\n        var item = queue.shift();\n        if (item.parent) {\n          // Sequence Step 14: list triple generation\n          if (item.context.parent && item.context.parent.listMapping === item.listMapping) {\n            // Skip a child context with exactly the same mapping\n            continue;\n          }\n          // console.log(\"Generating lists for \"+item.subject+\", tag \"+item.parent.localName)\n          for (var _predicate in item.listMapping) {\n            var list = item.listMapping[_predicate];\n            if (list.length === 0) {\n              this.addTriple(item.parent, item.subject, _predicate, { type: RDFaProcessor.objectURI, value: 'http://www.w3.org/1999/02/22-rdf-syntax-ns#nil' });\n              continue;\n            }\n            var bnodes = [];\n            for (var _i = 0; _i < list.length; _i++) {\n              bnodes.push(this.newBlankNode());\n              // this.newSubject(item.parent,bnodes[i])\n            }\n            for (var _i2 = 0; _i2 < bnodes.length; _i2++) {\n              this.addTriple(item.parent, bnodes[_i2], 'http://www.w3.org/1999/02/22-rdf-syntax-ns#first', list[_i2]);\n              this.addTriple(item.parent, bnodes[_i2], 'http://www.w3.org/1999/02/22-rdf-syntax-ns#rest', { type: RDFaProcessor.objectURI, value: _i2 + 1 < bnodes.length ? bnodes[_i2 + 1] : 'http://www.w3.org/1999/02/22-rdf-syntax-ns#nil' });\n            }\n            this.addTriple(item.parent, item.subject, _predicate, { type: RDFaProcessor.objectURI, value: bnodes[0] });\n          }\n          continue;\n        }\n        var current = item.current;\n        var context = item.context;\n        // console.log(\"Tag: \"+current.localName+\", listMapping=\"+JSON.stringify(context.listMapping))\n        // Sequence Step 1\n        var skip = false;\n        var newSubject = null;\n        var currentObjectResource = null;\n        var typedResource = null;\n        var prefixes = context.prefixes;\n        var prefixesCopied = false;\n        var incomplete = [];\n        var listMapping = context.listMapping;\n        var listMappingDifferent = !context.parent;\n        var language = context.language;\n        var vocabulary = context.vocabulary;\n        // TODO: the \"base\" element may be used for HTML+RDFa 1.1\n        base = this.parseURI(removeHash(current.baseURI));\n        current.item = null;\n        // Sequence Step 2: set the default vocabulary\n        var vocabAtt = current.getAttributeNode('vocab');\n        if (vocabAtt) {\n          var value = this.trim(vocabAtt.value);\n          if (value.length > 0) {\n            vocabulary = value;\n            var baseSubject = base.spec;\n            // this.newSubject(current,baseSubject)\n            this.addTriple(current, baseSubject, 'http://www.w3.org/ns/rdfa#usesVocabulary', { type: RDFaProcessor.objectURI, value: vocabulary });\n          } else {\n            vocabulary = this.vocabulary;\n          }\n        }\n        // Sequence Step 3: IRI mappings\n        // handle xmlns attributes\n        for (var i = 0; i < current.attributes.length; i++) {\n          var att = current.attributes[i];\n          // if (att.namespaceURI==\"http://www.w3.org/2000/xmlns/\") {\n          if (att.nodeName.charAt(0) === 'x' && att.nodeName.indexOf('xmlns:') === 0) {\n            if (!prefixesCopied) {\n              prefixes = this.copyMappings(prefixes);\n              prefixesCopied = true;\n            }\n            var prefix = att.nodeName.substring(6);\n            // TODO: resolve relative?\n            var ref = RDFaProcessor.trim(att.value);\n            prefixes[prefix] = this.options.base ? Uri.join(ref, this.options.base) : ref;\n          }\n        }\n        // Handle prefix mappings (@prefix)\n        var prefixAtt = current.getAttributeNode('prefix');\n        if (prefixAtt) {\n          if (!prefixesCopied) {\n            prefixes = this.copyMappings(prefixes);\n            prefixesCopied = true;\n          }\n          this.parsePrefixMappings(prefixAtt.value, prefixes);\n        }\n        // Sequence Step 4: language\n        var xmlLangAtt = null;\n        for (var _i3 = 0; !xmlLangAtt && _i3 < this.langAttributes.length; _i3++) {\n          xmlLangAtt = current.getAttributeNodeNS(this.langAttributes[_i3].namespaceURI, this.langAttributes[_i3].localName);\n        }\n        if (xmlLangAtt) {\n          var _value = RDFaProcessor.trim(xmlLangAtt.value);\n          if (_value.length > 0) {\n            language = _value;\n          } else {\n            language = null;\n          }\n        }\n        var relAtt = current.getAttributeNode('rel');\n        var revAtt = current.getAttributeNode('rev');\n        var typeofAtt = current.getAttributeNode('typeof');\n        var propertyAtt = current.getAttributeNode('property');\n        var datatypeAtt = current.getAttributeNode('datatype');\n        var datetimeAtt = this.inHTMLMode ? current.getAttributeNode('datetime') : null;\n        var contentAtt = current.getAttributeNode('content');\n        var aboutAtt = current.getAttributeNode('about');\n        var srcAtt = current.getAttributeNode('src');\n        var resourceAtt = current.getAttributeNode('resource');\n        var hrefAtt = current.getAttributeNode('href');\n        var inlistAtt = current.getAttributeNode('inlist');\n        var relAttPredicates = [];\n        var predicate, values;\n        if (relAtt) {\n          values = this.tokenize(relAtt.value);\n          for (var _i4 = 0; _i4 < values.length; _i4++) {\n            predicate = this.parsePredicate(values[_i4], vocabulary, context.terms, prefixes, base, this.inHTMLMode && propertyAtt !== null);\n            if (predicate) {\n              relAttPredicates.push(predicate);\n            }\n          }\n        }\n        var revAttPredicates = [];\n        if (revAtt) {\n          values = this.tokenize(revAtt.value);\n          for (var _i5 = 0; _i5 < values.length; _i5++) {\n            predicate = this.parsePredicate(values[_i5], vocabulary, context.terms, prefixes, base, this.inHTMLMode && propertyAtt);\n            if (predicate) {\n              revAttPredicates.push(predicate);\n            }\n          }\n        }\n        // Section 3.1, bullet 7\n        if (this.inHTMLMode && (relAtt || revAtt) && propertyAtt) {\n          if (relAttPredicates.length === 0) {\n            relAtt = null;\n          }\n          if (revAttPredicates.length === 0) {\n            revAtt = null;\n          }\n        }\n        if (relAtt || revAtt) {\n          // Sequence Step 6: establish new subject and value\n          if (aboutAtt) {\n            newSubject = this.parseSafeCURIEOrCURIEOrURI(aboutAtt.value, prefixes, base);\n          }\n          if (typeofAtt) {\n            typedResource = newSubject;\n          }\n          if (!newSubject) {\n            if (current.parentNode.nodeType === Node.DOCUMENT_NODE) {\n              newSubject = removeHash(current.baseURI);\n            } else if (context.parentObject) {\n              // TODO: Verify: If the xml:base has been set and the parentObject is the baseURI of the parent, then the subject needs to be the new base URI\n              newSubject = removeHash(current.parentNode.baseURI) === context.parentObject ? removeHash(current.baseURI) : context.parentObject;\n            }\n          }\n          if (resourceAtt) {\n            currentObjectResource = this.parseSafeCURIEOrCURIEOrURI(resourceAtt.value, prefixes, base);\n          }\n          if (!currentObjectResource) {\n            if (hrefAtt) {\n              currentObjectResource = this.resolveAndNormalize(base, encodeURI(hrefAtt.value));\n            } else if (srcAtt) {\n              currentObjectResource = this.resolveAndNormalize(base, encodeURI(srcAtt.value));\n            } else if (typeofAtt && !aboutAtt && !(this.inXHTMLMode && (current.localName === 'head' || current.localName === 'body'))) {\n              currentObjectResource = this.newBlankNode();\n            }\n          }\n          if (typeofAtt && !aboutAtt && this.inXHTMLMode && (current.localName === 'head' || current.localName === 'body')) {\n            typedResource = newSubject;\n          } else if (typeofAtt && !aboutAtt) {\n            typedResource = currentObjectResource;\n          }\n        } else if (propertyAtt && !contentAtt && !datatypeAtt) {\n          // Sequence Step 5.1: establish a new subject\n          if (aboutAtt) {\n            newSubject = this.parseSafeCURIEOrCURIEOrURI(aboutAtt.value, prefixes, base);\n            if (typeofAtt) {\n              typedResource = newSubject;\n            }\n          }\n          if (!newSubject && current.parentNode.nodeType === Node.DOCUMENT_NODE) {\n            newSubject = removeHash(current.baseURI);\n            if (typeofAtt) {\n              typedResource = newSubject;\n            }\n          } else if (!newSubject && context.parentObject) {\n            // TODO: Verify: If the xml:base has been set and the parentObject is the baseURI of the parent, then the subject needs to be the new base URI\n            newSubject = removeHash(current.parentNode.baseURI) === context.parentObject ? removeHash(current.baseURI) : context.parentObject;\n          }\n          if (typeofAtt && !typedResource) {\n            if (resourceAtt) {\n              typedResource = this.parseSafeCURIEOrCURIEOrURI(resourceAtt.value, prefixes, base);\n            }\n            if (!typedResource && hrefAtt) {\n              typedResource = this.resolveAndNormalize(base, encodeURI(hrefAtt.value));\n            }\n            if (!typedResource && srcAtt) {\n              typedResource = this.resolveAndNormalize(base, encodeURI(srcAtt.value));\n            }\n            if (!typedResource && (this.inXHTMLMode || this.inHTMLMode) && (current.localName === 'head' || current.localName === 'body')) {\n              typedResource = newSubject;\n            }\n            if (!typedResource) {\n              typedResource = this.newBlankNode();\n            }\n            currentObjectResource = typedResource;\n          }\n          // console.log(current.localName+\", newSubject=\"+newSubject+\", typedResource=\"+typedResource+\", currentObjectResource=\"+currentObjectResource)\n        } else {\n          // Sequence Step 5.2: establish a new subject\n          if (aboutAtt) {\n            newSubject = this.parseSafeCURIEOrCURIEOrURI(aboutAtt.value, prefixes, base);\n          }\n          if (!newSubject && resourceAtt) {\n            newSubject = this.parseSafeCURIEOrCURIEOrURI(resourceAtt.value, prefixes, base);\n          }\n          if (!newSubject && hrefAtt) {\n            newSubject = this.resolveAndNormalize(base, encodeURI(hrefAtt.value));\n          }\n          if (!newSubject && srcAtt) {\n            newSubject = this.resolveAndNormalize(base, encodeURI(srcAtt.value));\n          }\n          if (!newSubject) {\n            if (current.parentNode.nodeType === Node.DOCUMENT_NODE) {\n              newSubject = removeHash(current.baseURI);\n            } else if ((this.inXHTMLMode || this.inHTMLMode) && (current.localName === 'head' || current.localName === 'body')) {\n              newSubject = removeHash(current.parentNode.baseURI) === context.parentObject ? removeHash(current.baseURI) : context.parentObject;\n            } else if (typeofAtt) {\n              newSubject = this.newBlankNode();\n            } else if (context.parentObject) {\n              // TODO: Verify: If the xml:base has been set and the parentObject is the baseURI of the parent, then the subject needs to be the new base URI\n              newSubject = removeHash(current.parentNode.baseURI) === context.parentObject ? removeHash(current.baseURI) : context.parentObject;\n              if (!propertyAtt) {\n                skip = true;\n              }\n            }\n          }\n          if (typeofAtt) {\n            typedResource = newSubject;\n          }\n        }\n        // console.log(current.tagName+\": newSubject=\"+newSubject+\", currentObjectResource=\"+currentObjectResource+\", typedResource=\"+typedResource+\", skip=\"+skip)\n        // var rdfaData = null\n        if (newSubject) {\n          // this.newSubject(current,newSubject)\n          if (aboutAtt || resourceAtt || typedResource) {\n            var id = newSubject;\n            if (typeofAtt && !aboutAtt && !resourceAtt && currentObjectResource) {\n              id = currentObjectResource;\n            }\n            // console.log(\"Setting data attribute for \"+current.localName+\" for subject \"+id)\n            this.newSubjectOrigin(current, id);\n          }\n        }\n        // Sequence Step 7: generate type triple\n        if (typedResource) {\n          values = this.tokenize(typeofAtt.value);\n          for (var _i6 = 0; _i6 < values.length; _i6++) {\n            var object = this.parseTermOrCURIEOrAbsURI(values[_i6], vocabulary, context.terms, prefixes, base);\n            if (object) {\n              this.addTriple(current, typedResource, RDFaProcessor.typeURI, { type: RDFaProcessor.objectURI, value: object });\n            }\n          }\n        }\n        // Sequence Step 8: new list mappings if there is a new subject\n        // console.log(\"Step 8: newSubject=\"+newSubject+\", context.parentObject=\"+context.parentObject)\n        if (newSubject && newSubject !== context.parentObject) {\n          // console.log(\"Generating new list mapping for \"+newSubject)\n          listMapping = {};\n          listMappingDifferent = true;\n        }\n        // Sequence Step 9: generate object triple\n        if (currentObjectResource) {\n          if (relAtt && inlistAtt) {\n            for (var _i7 = 0; _i7 < relAttPredicates.length; _i7++) {\n              var _list = listMapping[relAttPredicates[_i7]];\n              if (!_list) {\n                _list = [];\n                listMapping[relAttPredicates[_i7]] = _list;\n              }\n              _list.push({ type: RDFaProcessor.objectURI, value: currentObjectResource });\n            }\n          } else if (relAtt) {\n            for (var _i8 = 0; _i8 < relAttPredicates.length; _i8++) {\n              this.addTriple(current, newSubject, relAttPredicates[_i8], { type: RDFaProcessor.objectURI, value: currentObjectResource });\n            }\n          }\n          if (revAtt) {\n            for (var _i9 = 0; _i9 < revAttPredicates.length; _i9++) {\n              this.addTriple(current, currentObjectResource, revAttPredicates[_i9], { type: RDFaProcessor.objectURI, value: newSubject });\n            }\n          }\n        } else {\n          // Sequence Step 10: incomplete triples\n          if (newSubject && !currentObjectResource && (relAtt || revAtt)) {\n            currentObjectResource = this.newBlankNode();\n            // alert(current.tagName+\": generated blank node, newSubject=\"+newSubject+\" currentObjectResource=\"+currentObjectResource)\n          }\n          if (relAtt && inlistAtt) {\n            for (var _i10 = 0; _i10 < relAttPredicates.length; _i10++) {\n              var _list2 = listMapping[relAttPredicates[_i10]];\n              if (!_list2) {\n                _list2 = [];\n                listMapping[predicate] = _list2;\n              }\n              // console.log(\"Adding incomplete list for \"+predicate)\n              incomplete.push({ predicate: relAttPredicates[_i10], list: _list2 });\n            }\n          } else if (relAtt) {\n            for (var _i11 = 0; _i11 < relAttPredicates.length; _i11++) {\n              incomplete.push({ predicate: relAttPredicates[_i11], forward: true });\n            }\n          }\n          if (revAtt) {\n            for (var _i12 = 0; _i12 < revAttPredicates.length; _i12++) {\n              incomplete.push({ predicate: revAttPredicates[_i12], forward: false });\n            }\n          }\n        }\n        // Step 11: Current property values\n        if (propertyAtt) {\n          var datatype = null;\n          var content = null;\n          if (datatypeAtt) {\n            datatype = datatypeAtt.value === '' ? RDFaProcessor.PlainLiteralURI : this.parseTermOrCURIEOrAbsURI(datatypeAtt.value, vocabulary, context.terms, prefixes, base);\n            if (datetimeAtt && !contentAtt) {\n              content = datetimeAtt.value;\n            } else {\n              content = datatype === RDFaProcessor.XMLLiteralURI || datatype === RDFaProcessor.HTMLLiteralURI ? null : contentAtt ? contentAtt.value : current.textContent;\n            }\n          } else if (contentAtt) {\n            datatype = RDFaProcessor.PlainLiteralURI;\n            content = contentAtt.value;\n          } else if (datetimeAtt) {\n            content = datetimeAtt.value;\n            datatype = RDFaProcessor.deriveDateTimeType(content);\n            if (!datatype) {\n              datatype = RDFaProcessor.PlainLiteralURI;\n            }\n          } else if (!relAtt && !revAtt) {\n            if (resourceAtt) {\n              content = this.parseSafeCURIEOrCURIEOrURI(resourceAtt.value, prefixes, base);\n            }\n            if (!content && hrefAtt) {\n              content = this.resolveAndNormalize(base, encodeURI(hrefAtt.value));\n            } else if (!content && srcAtt) {\n              content = this.resolveAndNormalize(base, encodeURI(srcAtt.value));\n            }\n            if (content) {\n              datatype = RDFaProcessor.objectURI;\n            }\n          }\n          if (!datatype) {\n            if (typeofAtt && !aboutAtt) {\n              datatype = RDFaProcessor.objectURI;\n              content = typedResource;\n            } else {\n              content = current.textContent;\n              if (this.inHTMLMode && current.localName === 'time') {\n                datatype = RDFaProcessor.deriveDateTimeType(content);\n              }\n              if (!datatype) {\n                datatype = RDFaProcessor.PlainLiteralURI;\n              }\n            }\n          }\n          values = this.tokenize(propertyAtt.value);\n          for (var _i13 = 0; _i13 < values.length; _i13++) {\n            var _predicate2 = this.parsePredicate(values[_i13], vocabulary, context.terms, prefixes, base);\n            if (_predicate2) {\n              if (inlistAtt) {\n                var _list3 = listMapping[_predicate2];\n                if (!_list3) {\n                  _list3 = [];\n                  listMapping[_predicate2] = _list3;\n                }\n                _list3.push(datatype === RDFaProcessor.XMLLiteralURI || datatype === RDFaProcessor.HTMLLiteralURI ? { type: datatype, value: current.childNodes } : { type: datatype ? datatype : RDFaProcessor.PlainLiteralURI, value: content, language: language });\n              } else {\n                if (datatype === RDFaProcessor.XMLLiteralURI || datatype === RDFaProcessor.HTMLLiteralURI) {\n                  this.addTriple(current, newSubject, _predicate2, { type: datatype, value: current.childNodes });\n                } else {\n                  this.addTriple(current, newSubject, _predicate2, { type: datatype ? datatype : RDFaProcessor.PlainLiteralURI, value: content, language: language });\n                  // console.log(newSubject+\" \"+predicate+\"=\"+content)\n                }\n              }\n            }\n          }\n        }\n        // Sequence Step 12: complete incomplete triples with new subject\n        if (newSubject && !skip) {\n          for (var _i14 = 0; _i14 < context.incomplete.length; _i14++) {\n            if (context.incomplete[_i14].list) {\n              // console.log(\"Adding subject \"+newSubject+\" to list for \"+context.incomplete[i].predicate)\n              // TODO: it is unclear what to do here\n              context.incomplete[_i14].list.push({ type: RDFaProcessor.objectURI, value: newSubject });\n            } else if (context.incomplete[_i14].forward) {\n              // console.log(current.tagName+\": completing forward triple \"+context.incomplete[i].predicate+\" with object=\"+newSubject)\n              this.addTriple(current, context.subject, context.incomplete[_i14].predicate, { type: RDFaProcessor.objectURI, value: newSubject });\n            } else {\n              // console.log(current.tagName+\": completing reverse triple with object=\"+context.subject)\n              this.addTriple(current, newSubject, context.incomplete[_i14].predicate, { type: RDFaProcessor.objectURI, value: context.subject });\n            }\n          }\n        }\n        var childContext = null;\n        var listSubject = newSubject;\n        if (skip) {\n          // TODO: should subject be null?\n          childContext = this.push(context, context.subject);\n          // TODO: should the entObject be passed along?  If not, then intermediary children will keep properties from being associated with incomplete triples.\n          // TODO: Verify: if the current baseURI has changed and the parentObject is the parent's base URI, then the baseURI should change\n          childContext.parentObject = removeHash(current.parentNode.baseURI) === context.parentObject ? removeHash(current.baseURI) : context.parentObject;\n          childContext.incomplete = context.incomplete;\n          childContext.language = language;\n          childContext.prefixes = prefixes;\n          childContext.vocabulary = vocabulary;\n        } else {\n          childContext = this.push(context, newSubject);\n          childContext.parentObject = currentObjectResource ? currentObjectResource : newSubject ? newSubject : context.subject;\n          childContext.prefixes = prefixes;\n          childContext.incomplete = incomplete;\n          if (currentObjectResource) {\n            // console.log(\"Generating new list mapping for \"+currentObjectResource)\n            listSubject = currentObjectResource;\n            listMapping = {};\n            listMappingDifferent = true;\n          }\n          childContext.listMapping = listMapping;\n          childContext.language = language;\n          childContext.vocabulary = vocabulary;\n        }\n        if (listMappingDifferent) {\n          // console.log(\"Pushing list parent \"+current.localName)\n          queue.unshift({ parent: current, context: context, subject: listSubject, listMapping: listMapping });\n        }\n        for (var child = current.lastChild; child; child = child.previousSibling) {\n          if (child.nodeType === Node.ELEMENT_NODE) {\n            // console.log(\"Pushing child \"+child.localName)\n            child.baseURI = current.baseURI;\n            queue.unshift({ current: child, context: childContext });\n          }\n        }\n      }\n      if (this.inHTMLMode) {\n        this.copyProperties();\n      }\n      for (var _i15 = 0; _i15 < this.finishedHandlers.length; _i15++) {\n        this.finishedHandlers[_i15](node);\n      }\n    }\n  }, {\n    key: 'push',\n    value: function push(parent, subject) {\n      return {\n        parent: parent,\n        subject: subject ? subject : parent ? parent.subject : null,\n        parentObject: null,\n        incomplete: [],\n        listMapping: parent ? parent.listMapping : {},\n        language: parent ? parent.language : this.language,\n        prefixes: parent ? parent.prefixes : this.target.graph.prefixes,\n        terms: parent ? parent.terms : this.target.graph.terms,\n        vocabulary: parent ? parent.vocabulary : this.vocabulary\n      };\n    }\n  }, {\n    key: 'resolveAndNormalize',\n    value: function resolveAndNormalize(base, uri) {\n      // console.log(\"Joining \" + uri + \" to \" + base + \" making \" +  Uri.join(uri, base))\n      return Uri.join(uri, base); // @@ normalize?\n    }\n  }, {\n    key: 'setContext',\n    value: function setContext(node) {\n      // We only recognized XHTML+RDFa 1.1 if the version is set propertyly\n      if (node.localName === 'html' && node.getAttribute('version') === 'XHTML+RDFa 1.1') {\n        this.setXHTMLContext();\n      } else if (node.localName === 'html' || node.namespaceURI === 'http://www.w3.org/1999/xhtml') {\n        if (typeof document !== 'undefined' && document.doctype) {\n          if (document.doctype.publicId === '-//W3C//DTD XHTML+RDFa 1.0//EN' && document.doctype.systemId === 'http://www.w3.org/MarkUp/DTD/xhtml-rdfa-1.dtd') {\n            console.log('WARNING: RDF 1.0 is not supported.  Defaulting to HTML5 mode.');\n            this.setHTMLContext();\n          } else if (document.doctype.publicId === '-//W3C//DTD XHTML+RDFa 1.1//EN' && document.doctype.systemId === 'http://www.w3.org/MarkUp/DTD/xhtml-rdfa-2.dtd') {\n            this.setXHTMLContext();\n          } else {\n            this.setHTMLContext();\n          }\n        } else {\n          this.setHTMLContext();\n        }\n      } else {\n        this.setXMLContext();\n      }\n    }\n  }, {\n    key: 'setHTMLContext',\n    value: function setHTMLContext() {\n      this.setInitialContext();\n      this.langAttributes = [{\n        namespaceURI: 'http://www.w3.org/XML/1998/namespace',\n        localName: 'lang'\n      }, { namespaceURI: null, localName: 'lang' }];\n      this.inXHTMLMode = false;\n      this.inHTMLMode = true;\n    }\n  }, {\n    key: 'setInitialContext',\n    value: function setInitialContext() {\n      this.vocabulary = null;\n      // By default, the prefixes are terms are loaded to the RDFa 1.1. standard within the graph constructor\n      this.langAttributes = [{\n        namespaceURI: 'http://www.w3.org/XML/1998/namespace',\n        localName: 'lang'\n      }];\n    }\n  }, {\n    key: 'setXHTMLContext',\n    value: function setXHTMLContext() {\n      this.setInitialContext();\n      this.inXHTMLMode = true;\n      this.inHTMLMode = false;\n      this.langAttributes = [{\n        namespaceURI: 'http://www.w3.org/XML/1998/namespace',\n        localName: 'lang' }, { namespaceURI: null, localName: 'lang' }];\n      // From http://www.w3.org/2011/rdfa-context/xhtml-rdfa-1.1\n      this.target.graph.terms['alternate'] = 'http://www.w3.org/1999/xhtml/vocab#alternate';\n      this.target.graph.terms['appendix'] = 'http://www.w3.org/1999/xhtml/vocab#appendix';\n      this.target.graph.terms['bookmark'] = 'http://www.w3.org/1999/xhtml/vocab#bookmark';\n      this.target.graph.terms['cite'] = 'http://www.w3.org/1999/xhtml/vocab#cite';\n      this.target.graph.terms['chapter'] = 'http://www.w3.org/1999/xhtml/vocab#chapter';\n      this.target.graph.terms['contents'] = 'http://www.w3.org/1999/xhtml/vocab#contents';\n      this.target.graph.terms['copyright'] = 'http://www.w3.org/1999/xhtml/vocab#copyright';\n      this.target.graph.terms['first'] = 'http://www.w3.org/1999/xhtml/vocab#first';\n      this.target.graph.terms['glossary'] = 'http://www.w3.org/1999/xhtml/vocab#glossary';\n      this.target.graph.terms['help'] = 'http://www.w3.org/1999/xhtml/vocab#help';\n      this.target.graph.terms['icon'] = 'http://www.w3.org/1999/xhtml/vocab#icon';\n      this.target.graph.terms['index'] = 'http://www.w3.org/1999/xhtml/vocab#index';\n      this.target.graph.terms['last'] = 'http://www.w3.org/1999/xhtml/vocab#last';\n      this.target.graph.terms['license'] = 'http://www.w3.org/1999/xhtml/vocab#license';\n      this.target.graph.terms['meta'] = 'http://www.w3.org/1999/xhtml/vocab#meta';\n      this.target.graph.terms['next'] = 'http://www.w3.org/1999/xhtml/vocab#next';\n      this.target.graph.terms['prev'] = 'http://www.w3.org/1999/xhtml/vocab#prev';\n      this.target.graph.terms['previous'] = 'http://www.w3.org/1999/xhtml/vocab#previous';\n      this.target.graph.terms['section'] = 'http://www.w3.org/1999/xhtml/vocab#section';\n      this.target.graph.terms['stylesheet'] = 'http://www.w3.org/1999/xhtml/vocab#stylesheet';\n      this.target.graph.terms['subsection'] = 'http://www.w3.org/1999/xhtml/vocab#subsection';\n      this.target.graph.terms['start'] = 'http://www.w3.org/1999/xhtml/vocab#start';\n      this.target.graph.terms['top'] = 'http://www.w3.org/1999/xhtml/vocab#top';\n      this.target.graph.terms['up'] = 'http://www.w3.org/1999/xhtml/vocab#up';\n      this.target.graph.terms['p3pv1'] = 'http://www.w3.org/1999/xhtml/vocab#p3pv1';\n      // other\n      this.target.graph.terms['related'] = 'http://www.w3.org/1999/xhtml/vocab#related';\n      this.target.graph.terms['role'] = 'http://www.w3.org/1999/xhtml/vocab#role';\n      this.target.graph.terms['transformation'] = 'http://www.w3.org/1999/xhtml/vocab#transformation';\n    }\n  }, {\n    key: 'setXMLContext',\n    value: function setXMLContext() {\n      this.setInitialContext();\n      this.inXHTMLMode = false;\n      this.inHTMLMode = false;\n    }\n  }, {\n    key: 'tokenize',\n    value: function tokenize(str) {\n      return this.trim(str).split(/\\s+/);\n    }\n  }, {\n    key: 'toRDFNodeObject',\n    value: function toRDFNodeObject(x) {\n      if (typeof x === 'undefined') return undefined;\n      if (typeof x === 'string') {\n        if (x.substring(0, 2) === '_:') {\n          if (typeof this.blankNodes[x.substring(2)] === 'undefined') {\n            this.blankNodes[x.substring(2)] = new BlankNode(x.substring(2));\n          }\n          return this.blankNodes[x.substring(2)];\n        }\n        return rdf.namedNode(x);\n      }\n      switch (x.type) {\n        case RDFaProcessor.objectURI:\n          if (x.value.substring(0, 2) === '_:') {\n            if (typeof this.blankNodes[x.value.substring(2)] === 'undefined') {\n              this.blankNodes[x.value.substring(2)] = new BlankNode(x.value.substring(2));\n            }\n            return this.blankNodes[x.value.substring(2)];\n          }\n          return rdf.namedNode(x.value);\n        case RDFaProcessor.PlainLiteralURI:\n          return new Literal(x.value, x.language || '');\n        case RDFaProcessor.XMLLiteralURI:\n        case RDFaProcessor.HTMLLiteralURI:\n          var string = '';\n          Object.keys(x.value).forEach(function (i) {\n            string += Util.domToString(x.value[i], this.htmlOptions);\n          });\n          return new Literal(string, '', new NamedNode(x.type));\n        default:\n          return new Literal(x.value, '', new NamedNode(x.type));\n      }\n    }\n  }, {\n    key: 'trim',\n    value: function trim(str) {\n      return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n    }\n  }], [{\n    key: 'parseRDFaDOM',\n    value: function parseRDFaDOM(dom, kb, base) {\n      var p = new RDFaProcessor(kb, { 'base': base });\n      dom.baseURI = base;\n      p.process(dom);\n    }\n  }]);\n\n  return RDFaProcessor;\n}();\n\nRDFaProcessor.XMLLiteralURI = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral';\nRDFaProcessor.HTMLLiteralURI = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#HTML';\nRDFaProcessor.PlainLiteralURI = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#PlainLiteral';\nRDFaProcessor.objectURI = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#object';\nRDFaProcessor.typeURI = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type';\nRDFaProcessor.nameChar = '[-A-Z_a-zÀ-ÖØ-öø-˿Ͱ-ͽͿ-῿‌-‍⁰-↏Ⰰ-⿯、-퟿豈-﷏ﷰ-�က0-F.0-9·̀-ͯ‿-⁀]';\nRDFaProcessor.nameStartChar = '[A-Za-zÀ-ÖØ-öø-ÿĀ-ıĴ-ľŁ-ňŊ-žƀ-ǃǍ-ǰǴ-ǵǺ-ȗɐ-ʨʻ-ˁΆΈ-ΊΌΎ-ΡΣ-ώϐ-ϖϚϜϞϠϢ-ϳЁ-ЌЎ-яё-ќў-ҁҐ-ӄӇ-ӈӋ-ӌӐ-ӫӮ-ӵӸ-ӹԱ-Ֆՙա-ֆא-תװ-ײء-غف-يٱ-ڷں-ھۀ-ێې-ۓەۥ-ۦअ-हऽक़-ॡঅ-ঌএ-ঐও-নপ-রলশ-হড়-ঢ়য়-ৡৰ-ৱਅ-ਊਏ-ਐਓ-ਨਪ-ਰਲ-ਲ਼ਵ-ਸ਼ਸ-ਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઋઍએ-ઑઓ-નપ-રલ-ળવ-હઽૠଅ-ଌଏ-ଐଓ-ନପ-ରଲ-ଳଶ-ହଽଡ଼-ଢ଼ୟ-ୡஅ-ஊஎ-ஐஒ-கங-சஜஞ-டண-தந-பம-வஷ-ஹఅ-ఌఎ-ఐఒ-నప-ళవ-హౠ-ౡಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹೞೠ-ೡഅ-ഌഎ-ഐഒ-നപ-ഹൠ-ൡก-ฮะา-ำเ-ๅກ-ຂຄງ-ຈຊຍດ-ທນ-ຟມ-ຣລວສ-ຫອ-ຮະາ-ຳຽເ-ໄཀ-ཇཉ-ཀྵႠ-Ⴥა-ჶᄀᄂ-ᄃᄅ-ᄇᄉᄋ-ᄌᄎ-ᄒᄼᄾᅀᅌᅎᅐᅔ-ᅕᅙᅟ-ᅡᅣᅥᅧᅩᅭ-ᅮᅲ-ᅳᅵᆞᆨᆫᆮ-ᆯᆷ-ᆸᆺᆼ-ᇂᇫᇰᇹḀ-ẛẠ-ỹἀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼΩK-Å℮ↀ-ↂぁ-ゔァ-ヺㄅ-ㄬ가-힣一-龥〇〡-〩_]';\nRDFaProcessor.NCNAME = new RegExp('^' + RDFaProcessor.nameStartChar + RDFaProcessor.nameChar + '*$');\n\n/*\nRDFaProcessor.prototype.resolveAndNormalize = function(base,href) {\n   var u = base.resolve(href)\n   var parsed = this.parseURI(u)\n   parsed.normalize()\n   return parsed.spec\n}\n*/\n\nRDFaProcessor.dateTimeTypes = [{ pattern: /-?P(?:[0-9]+Y)?(?:[0-9]+M)?(?:[0-9]+D)?(?:T(?:[0-9]+H)?(?:[0-9]+M)?(?:[0-9]+(?:\\.[0-9]+)?S)?)?/,\n  type: 'http://www.w3.org/2001/XMLSchema#duration' }, { pattern: /-?(?:[1-9][0-9][0-9][0-9]|0[1-9][0-9][0-9]|00[1-9][0-9]|000[1-9])-[0-9][0-9]-[0-9][0-9]T(?:[0-1][0-9]|2[0-4]):[0-5][0-9]:[0-5][0-9](?:\\.[0-9]+)?(?:Z|[+\\-][0-9][0-9]:[0-9][0-9])?/,\n  type: 'http://www.w3.org/2001/XMLSchema#dateTime' }, { pattern: /-?(?:[1-9][0-9][0-9][0-9]|0[1-9][0-9][0-9]|00[1-9][0-9]|000[1-9])-[0-9][0-9]-[0-9][0-9](?:Z|[+\\-][0-9][0-9]:[0-9][0-9])?/,\n  type: 'http://www.w3.org/2001/XMLSchema#date' }, { pattern: /(?:[0-1][0-9]|2[0-4]):[0-5][0-9]:[0-5][0-9](?:\\.[0-9]+)?(?:Z|[+\\-][0-9][0-9]:[0-9][0-9])?/,\n  type: 'http://www.w3.org/2001/XMLSchema#time' }, { pattern: /-?(?:[1-9][0-9][0-9][0-9]|0[1-9][0-9][0-9]|00[1-9][0-9]|000[1-9])-[0-9][0-9]/,\n  type: 'http://www.w3.org/2001/XMLSchema#gYearMonth' }, { pattern: /-?[1-9][0-9][0-9][0-9]|0[1-9][0-9][0-9]|00[1-9][0-9]|000[1-9]/,\n  type: 'http://www.w3.org/2001/XMLSchema#gYear' }];\n\nmodule.exports = RDFaProcessor;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rdflib/lib/rdfaparser.js\n// module id = 80\n// module chunks = 0","'use strict';\n\n/**\n * @fileoverview\n *  RDF/XML PARSER\n *\n * Version 0.1\n *  Parser believed to be in full positive RDF/XML parsing compliance\n *  with the possible exception of handling deprecated RDF attributes\n *  appropriately. Parser is believed to comply fully with other W3C\n *  and industry standards where appropriate (DOM, ECMAScript, &c.)\n *\n *  Author: David Sheets <dsheets@mit.edu>\n *\n * W3C® SOFTWARE NOTICE AND LICENSE\n * http://www.w3.org/Consortium/Legal/2002/copyright-software-20021231\n * This work (and included software, documentation such as READMEs, or\n * other related items) is being provided by the copyright holders under\n * the following license. By obtaining, using and/or copying this work,\n * you (the licensee) agree that you have read, understood, and will\n * comply with the following terms and conditions.\n *\n * Permission to copy, modify, and distribute this software and its\n * documentation, with or without modification, for any purpose and\n * without fee or royalty is hereby granted, provided that you include\n * the following on ALL copies of the software and documentation or\n * portions thereof, including modifications:\n *\n * 1. The full text of this NOTICE in a location viewable to users of\n * the redistributed or derivative work.\n * 2. Any pre-existing intellectual property disclaimers, notices, or terms and\n * conditions. If none exist, the W3C Software Short Notice should be\n * included (hypertext is preferred, text is permitted) within the body\n * of any redistributed or derivative code.\n * 3. Notice of any changes or modifications to the files, including the\n * date changes were made. (We recommend you provide URIs to the location\n * from which the code is derived.)\n *\n * THIS SOFTWARE AND DOCUMENTATION IS PROVIDED \"AS IS,\" AND COPYRIGHT\n * HOLDERS MAKE NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY OR FITNESS\n * FOR ANY PARTICULAR PURPOSE OR THAT THE USE OF THE SOFTWARE OR\n * DOCUMENTATION WILL NOT INFRINGE ANY THIRD PARTY PATENTS, COPYRIGHTS,\n * TRADEMARKS OR OTHER RIGHTS.\n *\n * COPYRIGHT HOLDERS WILL NOT BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL\n * OR CONSEQUENTIAL DAMAGES ARISING OUT OF ANY USE OF THE SOFTWARE OR\n * DOCUMENTATION.\n *\n * The name and trademarks of copyright holders may NOT be used in\n * advertising or publicity pertaining to the software without specific,\n * written prior permission. Title to copyright in this software and any\n * associated documentation will at all times remain with copyright\n * holders.\n */\n/**\n * @class Class defining an RDFParser resource object tied to an RDFStore\n *\n * @author David Sheets <dsheets@mit.edu>\n * @version 0.1\n *\n * @constructor\n * @param {RDFStore} store An RDFStore object\n */\nvar uriUtil = require('./uri');\n\nvar RDFParser = function RDFParser(store) {\n  var RDFParser = {};\n\n  /** Standard namespaces that we know how to handle @final\n   *  @member RDFParser\n   */\n  RDFParser.ns = { 'RDF': 'http://www.w3.org/1999/02/22-rdf-syntax-ns#', 'RDFS': 'http://www.w3.org/2000/01/rdf-schema#' };\n\n  /** DOM Level 2 node type magic numbers @final\n   *  @member RDFParser\n   */\n  RDFParser.nodeType = { 'ELEMENT': 1, 'ATTRIBUTE': 2, 'TEXT': 3,\n    'CDATA_SECTION': 4, 'ENTITY_REFERENCE': 5,\n    'ENTITY': 6, 'PROCESSING_INSTRUCTION': 7,\n    'COMMENT': 8, 'DOCUMENT': 9, 'DOCUMENT_TYPE': 10,\n    'DOCUMENT_FRAGMENT': 11, 'NOTATION': 12 };\n\n  /**\n   * Frame class for namespace and base URI lookups\n   * Base lookups will always resolve because the parser knows\n   * the default base.\n   *\n   * @private\n   */\n\n  this.frameFactory = function (parser, parent, element) {\n    return { 'NODE': 1, 'ARC': 2, 'parent': parent, 'parser': parser, 'store': parser.store, 'element': element,\n      'lastChild': 0, 'base': null, 'lang': null, 'node': null, 'nodeType': null, 'listIndex': 1, 'rdfid': null, 'datatype': null, 'collection': false, /** Terminate the frame and notify the store that we're done */\n      'terminateFrame': function terminateFrame() {\n        if (this.collection) {\n          this.node.close();\n        }\n      }, /** Add a symbol of a certain type to the this frame */'addSymbol': function addSymbol(type, uri) {\n        uri = uriUtil.join(uri, this.base);\n        this.node = this.store.sym(uri);\n\n        this.nodeType = type;\n      }, /** Load any constructed triples into the store */'loadTriple': function loadTriple() {\n        if (this.parent.parent.collection) {\n          this.parent.parent.node.append(this.node);\n        } else {\n          this.store.add(this.parent.parent.node, this.parent.node, this.node, this.parser.why);\n        }\n        if (this.parent.rdfid != null) {\n          // reify\n          var triple = this.store.sym(uriUtil.join('#' + this.parent.rdfid, this.base));\n          this.store.add(triple, this.store.sym(RDFParser.ns.RDF + 'type'), this.store.sym(RDFParser.ns.RDF + 'Statement'), this.parser.why);\n          this.store.add(triple, this.store.sym(RDFParser.ns.RDF + 'subject'), this.parent.parent.node, this.parser.why);\n          this.store.add(triple, this.store.sym(RDFParser.ns.RDF + 'predicate'), this.parent.node, this.parser.why);\n\n          this.store.add(triple, this.store.sym(RDFParser.ns.RDF + 'object'), this.node, this.parser.why);\n        }\n      }, /** Check if it's OK to load a triple */'isTripleToLoad': function isTripleToLoad() {\n        return this.parent != null && this.parent.parent != null && this.nodeType === this.NODE && this.parent.nodeType === this.ARC && this.parent.parent.nodeType === this.NODE;\n      }, /** Add a symbolic node to this frame */'addNode': function addNode(uri) {\n        this.addSymbol(this.NODE, uri);\n        if (this.isTripleToLoad()) {\n          this.loadTriple();\n        }\n      }, /** Add a collection node to this frame */'addCollection': function addCollection() {\n        this.nodeType = this.NODE;\n        this.node = this.store.collection();\n        this.collection = true;\n        if (this.isTripleToLoad()) {\n          this.loadTriple();\n        }\n      }, /** Add a collection arc to this frame */'addCollectionArc': function addCollectionArc() {\n        this.nodeType = this.ARC;\n      }, /** Add a bnode to this frame */'addBNode': function addBNode(id) {\n        if (id != null) {\n          if (this.parser.bnodes[id] != null) {\n            this.node = this.parser.bnodes[id];\n          } else {\n            this.node = this.parser.bnodes[id] = this.store.bnode();\n          }\n        } else {\n          this.node = this.store.bnode();\n        }\n        this.nodeType = this.NODE;\n        if (this.isTripleToLoad()) {\n          this.loadTriple();\n        }\n      }, /** Add an arc or property to this frame */'addArc': function addArc(uri) {\n        if (uri === RDFParser.ns.RDF + 'li') {\n          uri = RDFParser.ns.RDF + '_' + this.parent.listIndex;\n          this.parent.listIndex++;\n        }\n\n        this.addSymbol(this.ARC, uri);\n      }, /** Add a literal to this frame */'addLiteral': function addLiteral(value) {\n        if (this.parent.datatype) {\n          this.node = this.store.literal(value, '', this.store.sym(this.parent.datatype));\n        } else {\n          this.node = this.store.literal(value, this.lang);\n        }\n        this.nodeType = this.NODE;\n        if (this.isTripleToLoad()) {\n          this.loadTriple();\n        }\n      }\n    };\n  };\n\n  // from the OpenLayers source .. needed to get around IE problems.\n  this.getAttributeNodeNS = function (node, uri, name) {\n    var attributeNode = null;\n    if (node.getAttributeNodeNS) {\n      attributeNode = node.getAttributeNodeNS(uri, name);\n    } else {\n      var attributes = node.attributes;\n      var potentialNode, fullName;\n      for (var i = 0; i < attributes.length; ++i) {\n        potentialNode = attributes[i];\n        if (potentialNode.namespaceURI === uri) {\n          fullName = potentialNode.prefix ? potentialNode.prefix + ':' + name : name;\n          if (fullName === potentialNode.nodeName) {\n            attributeNode = potentialNode;\n            break;\n          }\n        }\n      }\n    }\n    return attributeNode;\n  };\n\n  /** Our triple store reference @private */\n\n  this.store = store; /** Our identified blank nodes @private */\n  this.bnodes = {}; /** A context for context-aware stores @private */\n  this.why = null; /** Reification flag */\n  this.reify = false;\n\n  /**\n   * Build our initial scope frame and parse the DOM into triples\n   * @param {DOMTree} document The DOM to parse\n   * @param {String} base The base URL to use\n   * @param {Object} why The context to which this resource belongs\n   */\n\n  this.parse = function (document, base, why) {\n    var children = document.childNodes; // clean up for the next run\n    this.cleanParser(); // figure out the root element\n    var root;\n    if (document.nodeType === RDFParser.nodeType.DOCUMENT) {\n      for (var c = 0; c < children.length; c++) {\n        if (children[c].nodeType === RDFParser.nodeType.ELEMENT) {\n          root = children[c];\n          break;\n        }\n      }\n    } else if (document.nodeType === RDFParser.nodeType.ELEMENT) {\n      root = document;\n    } else {\n      throw new Error(\"RDFParser: can't find root in \" + base + '. Halting. ');\n      // return false\n    }\n    this.why = why; // our topmost frame\n    var f = this.frameFactory(this);\n    this.base = base;\n    f.base = base;\n    f.lang = null; // was '' but can't have langs like that 2015 (!)\n    this.parseDOM(this.buildFrame(f, root));\n    return true;\n  };\n\n  this.parseDOM = function (frame) {\n    // a DOM utility function used in parsing\n    var rdfid;\n    var elementURI = function (el) {\n      var result = '';\n      if (el.namespaceURI == null) {\n        throw new Error('RDF/XML syntax error: No namespace for ' + el.localName + ' in ' + this.base);\n      }\n      if (el.namespaceURI) {\n        result = result + el.namespaceURI;\n      }\n      if (el.localName) {\n        result = result + el.localName;\n      } else if (el.nodeName) {\n        if (el.nodeName.indexOf(':') >= 0) result = result + el.nodeName.split(':')[1];else result = result + el.nodeName;\n      }\n      return result;\n    }.bind(this);\n    var dig = true; // if we'll dig down in the tree on the next iter\n    while (frame.parent) {\n      var dom = frame.element;\n      var attrs = dom.attributes;\n      if (dom.nodeType === RDFParser.nodeType.TEXT || dom.nodeType === RDFParser.nodeType.CDATA_SECTION) {\n        // we have a literal\n        if (frame.parent.nodeType === frame.NODE) {\n          // must have had attributes, store as rdf:value\n          frame.addArc(RDFParser.ns.RDF + 'value');\n          frame = this.buildFrame(frame);\n        }\n        frame.addLiteral(dom.nodeValue);\n      } else if (elementURI(dom) !== RDFParser.ns.RDF + 'RDF') {\n        // not root\n        if (frame.parent && frame.parent.collection) {\n          // we're a collection element\n          frame.addCollectionArc();\n          frame = this.buildFrame(frame, frame.element);\n          frame.parent.element = null;\n        }\n        if (!frame.parent || !frame.parent.nodeType || frame.parent.nodeType === frame.ARC) {\n          // we need a node\n          var about = this.getAttributeNodeNS(dom, RDFParser.ns.RDF, 'about');\n          rdfid = this.getAttributeNodeNS(dom, RDFParser.ns.RDF, 'ID');\n          if (about && rdfid) {\n            throw new Error('RDFParser: ' + dom.nodeName + ' has both rdf:id and rdf:about.' + ' Halting. Only one of these' + ' properties may be specified on a' + ' node.');\n          }\n          if (!about && rdfid) {\n            frame.addNode('#' + rdfid.nodeValue);\n            dom.removeAttributeNode(rdfid);\n          } else if (about == null && rdfid == null) {\n            var bnid = this.getAttributeNodeNS(dom, RDFParser.ns.RDF, 'nodeID');\n            if (bnid) {\n              frame.addBNode(bnid.nodeValue);\n              dom.removeAttributeNode(bnid);\n            } else {\n              frame.addBNode();\n            }\n          } else {\n            frame.addNode(about.nodeValue);\n            dom.removeAttributeNode(about);\n          }\n          // Typed nodes\n          var rdftype = this.getAttributeNodeNS(dom, RDFParser.ns.RDF, 'type');\n          if (RDFParser.ns.RDF + 'Description' !== elementURI(dom)) {\n            rdftype = { 'nodeValue': elementURI(dom) };\n          }\n          if (rdftype != null) {\n            this.store.add(frame.node, this.store.sym(RDFParser.ns.RDF + 'type'), this.store.sym(uriUtil.join(rdftype.nodeValue, frame.base)), this.why);\n            if (rdftype.nodeName) {\n              dom.removeAttributeNode(rdftype);\n            }\n          }\n          // Property Attributes\n          for (var x = attrs.length - 1; x >= 0; x--) {\n            this.store.add(frame.node, this.store.sym(elementURI(attrs[x])), this.store.literal(attrs[x].nodeValue, frame.lang), this.why);\n          }\n        } else {\n          // we should add an arc (or implicit bnode+arc)\n          frame.addArc(elementURI(dom)); // save the arc's rdf:ID if it has one\n          if (this.reify) {\n            rdfid = this.getAttributeNodeNS(dom, RDFParser.ns.RDF, 'ID');\n            if (rdfid) {\n              frame.rdfid = rdfid.nodeValue;\n              dom.removeAttributeNode(rdfid);\n            }\n          }\n          var parsetype = this.getAttributeNodeNS(dom, RDFParser.ns.RDF, 'parseType');\n          var datatype = this.getAttributeNodeNS(dom, RDFParser.ns.RDF, 'datatype');\n          if (datatype) {\n            frame.datatype = datatype.nodeValue;\n            dom.removeAttributeNode(datatype);\n          }\n          if (parsetype) {\n            var nv = parsetype.nodeValue;\n            if (nv === 'Literal') {\n              frame.datatype = RDFParser.ns.RDF + 'XMLLiteral'; // (this.buildFrame(frame)).addLiteral(dom)\n              // should work but doesn't\n              frame = this.buildFrame(frame);\n              frame.addLiteral(dom);\n              dig = false;\n            } else if (nv === 'Resource') {\n              frame = this.buildFrame(frame, frame.element);\n              frame.parent.element = null;\n              frame.addBNode();\n            } else if (nv === 'Collection') {\n              frame = this.buildFrame(frame, frame.element);\n              frame.parent.element = null;\n              frame.addCollection();\n            }\n            dom.removeAttributeNode(parsetype);\n          }\n          if (attrs.length !== 0) {\n            var resource = this.getAttributeNodeNS(dom, RDFParser.ns.RDF, 'resource');\n            var bnid2 = this.getAttributeNodeNS(dom, RDFParser.ns.RDF, 'nodeID');\n            frame = this.buildFrame(frame);\n            if (resource) {\n              frame.addNode(resource.nodeValue);\n              dom.removeAttributeNode(resource);\n            } else {\n              if (bnid2) {\n                frame.addBNode(bnid2.nodeValue);\n                dom.removeAttributeNode(bnid2);\n              } else {\n                frame.addBNode();\n              }\n            }\n            for (var x1 = attrs.length - 1; x1 >= 0; x1--) {\n              var f = this.buildFrame(frame);\n              f.addArc(elementURI(attrs[x1]));\n              if (elementURI(attrs[x1]) === RDFParser.ns.RDF + 'type') {\n                this.buildFrame(f).addNode(attrs[x1].nodeValue);\n              } else {\n                this.buildFrame(f).addLiteral(attrs[x1].nodeValue);\n              }\n            }\n          } else if (dom.childNodes.length === 0) {\n            this.buildFrame(frame).addLiteral('');\n          }\n        }\n      } // rdf:RDF\n      // dig dug\n      dom = frame.element;\n      while (frame.parent) {\n        var pframe = frame;\n        while (dom == null) {\n          frame = frame.parent;\n          dom = frame.element;\n        }\n        var candidate = dom.childNodes && dom.childNodes[frame.lastChild];\n        if (!candidate || !dig) {\n          frame.terminateFrame();\n          if (!(frame = frame.parent)) {\n            break;\n          } // done\n          dom = frame.element;\n          dig = true;\n        } else if (candidate.nodeType !== RDFParser.nodeType.ELEMENT && candidate.nodeType !== RDFParser.nodeType.TEXT && candidate.nodeType !== RDFParser.nodeType.CDATA_SECTION || (candidate.nodeType === RDFParser.nodeType.TEXT || candidate.nodeType === RDFParser.nodeType.CDATA_SECTION) && dom.childNodes.length !== 1) {\n          frame.lastChild++;\n        } else {\n          // not a leaf\n          frame.lastChild++;\n          frame = this.buildFrame(pframe, dom.childNodes[frame.lastChild - 1]);\n          break;\n        }\n      }\n    } // while\n  };\n\n  /**\n   * Cleans out state from a previous parse run\n   * @private\n   */\n  this.cleanParser = function () {\n    this.bnodes = {};\n    this.why = null;\n  };\n\n  /**\n   * Builds scope frame\n   * @private\n   */\n  this.buildFrame = function (parent, element) {\n    var frame = this.frameFactory(this, parent, element);\n    if (parent) {\n      frame.base = parent.base;\n      frame.lang = parent.lang;\n    }\n    if (!element || element.nodeType === RDFParser.nodeType.TEXT || element.nodeType === RDFParser.nodeType.CDATA_SECTION) {\n      return frame;\n    }\n    var attrs = element.attributes;\n    var base = element.getAttributeNode('xml:base');\n    if (base != null) {\n      frame.base = base.nodeValue;\n      element.removeAttribute('xml:base');\n    }\n    var lang = element.getAttributeNode('xml:lang');\n    if (lang != null) {\n      frame.lang = lang.nodeValue;\n      element.removeAttribute('xml:lang');\n    }\n    // remove all extraneous xml and xmlns attributes\n    for (var x = attrs.length - 1; x >= 0; x--) {\n      if (attrs[x].nodeName.substr(0, 3) === 'xml') {\n        if (attrs[x].name.slice(0, 6) === 'xmlns:') {\n          var uri = attrs[x].nodeValue; // alert('base for namespac attr:'+this.base)\n          if (this.base) uri = uriUtil.join(uri, this.base);\n          this.store.setPrefixForURI(attrs[x].name.slice(6), uri);\n        }\n        //\t\talert('rdfparser: xml atribute: '+attrs[x].name) //@@\n        element.removeAttributeNode(attrs[x]);\n      }\n    }\n    return frame;\n  };\n};\n\nmodule.exports = RDFParser;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rdflib/lib/rdfxmlparser.js\n// module id = 81\n// module chunks = 0","'use strict';\n\n// Parse a simple SPARL-Update subset syntax for patches.\n//\n//  This parses\n//   WHERE {xxx} DELETE {yyy} INSERT DATA {zzz}\n// (not necessarily in that order)\n// as though it were the n3\n//   <#query> patch:where {xxx}; patch:delete {yyy}; patch:insert {zzz}.\nmodule.exports = sparqlUpdateParser;\n\nvar N3Parser = require('./n3parser');\nvar Namespace = require('./namespace');\n\nfunction sparqlUpdateParser(str, kb, base) {\n  var i, j, k;\n  var keywords = ['INSERT', 'DELETE', 'WHERE'];\n  var SQNS = Namespace('http://www.w3.org/ns/pim/patch#');\n  var p = N3Parser(kb, kb, base, base, null, null, '', null);\n  var clauses = {};\n\n  var badSyntax = function badSyntax(uri, lines, str, i, why) {\n    return 'Line ' + (lines + 1) + ' of <' + uri + '>: Bad syntax:\\n   ' + why + '\\n   at: \"' + str.slice(i, i + 30) + '\"';\n  };\n\n  // var check = function (next, last, message) {\n  //   if (next < 0) {\n  //     throw badSyntax(p._thisDoc, p.lines, str, j, last, message)\n  //   }\n  //   return next\n  // }\n  i = 0;\n  var query = kb.sym(base + '#query'); // Invent a URI for the query\n  clauses['query'] = query; // A way of accessing it in its N3 model.\n\n  while (true) {\n    // console.log(\"A Now at i = \" + i)\n    j = p.skipSpace(str, i);\n    if (j < 0) {\n      return clauses;\n    }\n    // console.log(\"B After space at j= \" + j)\n    if (str[j] === ';') {\n      i = p.skipSpace(str, j + 1);\n      if (i < 0) {\n        return clauses; // Allow end in a\n      }\n      j = i;\n    }\n    var found = false;\n    for (k = 0; k < keywords.length; k++) {\n      var key = keywords[k];\n      if (str.slice(j, j + key.length) === key) {\n        i = p.skipSpace(str, j + key.length);\n        if (i < 0) {\n          throw badSyntax(p._thisDoc, p.lines, str, j + key.length, 'found EOF, needed {...} after ' + key);\n        }\n        if ((key === 'INSERT' || key === 'DELETE') && str.slice(i, i + 4) === 'DATA') {\n          // Some wanted 'DATA'. Whatever\n          j = p.skipSpace(str, i + 4);\n          if (j < 0) {\n            throw badSyntax(p._thisDoc, p.lines, str, i + 4, 'needed {...} after INSERT DATA ' + key);\n          }\n          i = j;\n        }\n        var res2 = [];\n        j = p.node(str, i, res2); // Parse all the complexity of the clause\n\n        if (j < 0) {\n          throw badSyntax(p._thisDoc, p.lines, str, i, 'bad syntax or EOF in {...} after ' + key);\n        }\n        clauses[key.toLowerCase()] = res2[0];\n        kb.add(query, SQNS(key.toLowerCase()), res2[0]); // , kb.sym(base)\n        // key is the keyword and res2 has the contents\n        found = true;\n        i = j;\n      }\n    }\n    if (!found && str.slice(j, j + 7) === '@prefix') {\n      i = p.directive(str, j);\n      if (i < 0) {\n        throw badSyntax(p._thisDoc, p.lines, str, i, 'bad syntax or EOF after @prefix ');\n      }\n      // console.log(\"P before dot i= \" + i)\n      i = p.checkDot(str, i);\n      // console.log(\"Q after dot i= \" + i)\n      found = true;\n    }\n    if (!found) {\n      // console.log(\"Bad syntax \" + j)\n      throw badSyntax(p._thisDoc, p.lines, str, j, \"Unknown syntax at start of statememt: '\" + str.slice(j).slice(0, 20) + \"'\");\n    }\n  } // while\n  // return clauses\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rdflib/lib/patch-parser.js\n// module id = 82\n// module chunks = 0","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Node = require('./node');\n\n/**\n * Singleton subclass of an empty Collection.\n */\n\nvar Empty = function (_Node) {\n  _inherits(Empty, _Node);\n\n  function Empty() {\n    _classCallCheck(this, Empty);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Empty).call(this));\n\n    _this.termType = Empty.termType;\n    return _this;\n  }\n\n  _createClass(Empty, [{\n    key: 'toString',\n    value: function toString() {\n      return '()';\n    }\n  }]);\n\n  return Empty;\n}(Node);\n\nEmpty.termType = 'empty';\n\nmodule.exports = Empty;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rdflib/lib/empty.js\n// module id = 83\n// module chunks = 0","'use strict';\n\nvar jsonParser = function () {\n  return {\n    parseJSON: function parseJSON(data, source, store) {\n      var subject, predicate, object;\n      var bnodes = {};\n      var why = store.sym(source);\n      for (var x in data) {\n        if (x.indexOf('_:') === 0) {\n          if (bnodes[x]) {\n            subject = bnodes[x];\n          } else {\n            subject = store.bnode(x);\n            bnodes[x] = subject;\n          }\n        } else {\n          subject = store.sym(x);\n        }\n        var preds = data[x];\n        for (var y in preds) {\n          var objects = preds[y];\n          predicate = store.sym(y);\n          for (var z in objects) {\n            var obj = objects[z];\n            if (obj.type === 'uri') {\n              object = store.sym(obj.value);\n              store.add(subject, predicate, object, why);\n            } else if (obj.type === 'BlankNode') {\n              if (bnodes[obj.value]) {\n                object = bnodes[obj.value];\n              } else {\n                object = store.bnode(obj.value);\n                bnodes[obj.value] = object;\n              }\n              store.add(subject, predicate, object, why);\n            } else if (obj.type === 'Literal') {\n              // var datatype\n              if (obj.datatype) {\n                object = store.literal(obj.value, undefined, store.sym(obj.datatype));\n              } else if (obj.lang) {\n                object = store.literal(obj.value, obj.lang);\n              } else {\n                object = store.literal(obj.value);\n              }\n              store.add(subject, predicate, object, why);\n            } else {\n              throw new Error('error: unexpected termtype: ' + z.type);\n            }\n          }\n        }\n      }\n    }\n  };\n}();\n\nmodule.exports = jsonParser;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rdflib/lib/jsonparser.js\n// module id = 84\n// module chunks = 0","'use strict';\n\nvar log = require('./log');\n\nfunction queryToSPARQL(query) {\n  var indent = 0;\n  function getSelect(query) {\n    var str = addIndent() + 'SELECT ';\n    for (var i = 0; i < query.vars.length; i++) {\n      str += query.vars[i] + ' ';\n    }\n    str += '\\n';\n    return str;\n  }\n\n  function getPattern(pat) {\n    var str = '';\n    var st = pat.statements;\n    for (var x in st) {\n      log.debug('Found statement: ' + st);\n      str += addIndent() + st[x] + '\\n';\n    }\n    return str;\n  }\n\n  function getConstraints(pat) {\n    var str = '';\n    for (var v in pat.constraints) {\n      var foo = pat.constraints[v];\n      str += addIndent() + 'FILTER ( ' + foo.describe(v) + ' ) ' + '\\n';\n    }\n    return str;\n  }\n\n  function getOptionals(pat) {\n    var str = '';\n    for (var x = 0; x < pat.optional.length; x++) {\n      // alert(pat.optional.termType)\n      log.debug('Found optional query');\n      str += addIndent() + 'OPTIONAL { ' + '\\n';\n      indent++;\n      str += getPattern(pat.optional[x]);\n      str += getConstraints(pat.optional[x]);\n      str += getOptionals(pat.optional[x]);\n      indent--;\n      str += addIndent() + '}' + '\\n';\n    }\n    return str;\n  }\n\n  function getWhere(pat) {\n    var str = addIndent() + 'WHERE \\n' + '{ \\n';\n    indent++;\n    str += getPattern(pat);\n    str += getConstraints(pat);\n    str += getOptionals(pat);\n    indent--;\n    str += '}';\n    return str;\n  }\n\n  function addIndent() {\n    var str = '';\n    for (var i = 0; i < indent; i++) {\n      str += '    ';\n    }\n    return str;\n  }\n\n  function getSPARQL(query) {\n    return getSelect(query) + getWhere(query.pat);\n  }\n\n  return getSPARQL(query);\n}\n\nmodule.exports = queryToSPARQL;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rdflib/lib/query-to-sparql.js\n// module id = 85\n// module chunks = 0","'use strict';\n\n// Converting between SPARQL queries and the $rdf query API\n/*\n\nfunction SQuery () {\n  this.terms = []\n  return this\n}\n\nSTerm.prototype.toString = STerm.val\nSQuery.prototype.add = function (str) {this.terms.push()}*/\n\nvar log = require('./log');\nvar Query = require('./query').Query;\n// const Fetcher = require('./fetcher')\n\n/**\n * @SPARQL: SPARQL text that is converted to a query object which is returned.\n * @testMode: testing flag. Prevents loading of sources.\n */\nfunction SPARQLToQuery(SPARQL, testMode, kb) {\n  // AJAR_ClearTable()\n  var variableHash = [];\n  function makeVar(name) {\n    if (variableHash[name]) {\n      return variableHash[name];\n    }\n    var newVar = kb.variable(name);\n    variableHash[name] = newVar;\n    return newVar;\n  }\n\n  // term type functions\n  function isRealText(term) {\n    return typeof term === 'string' && term.match(/[^ \\n\\t]/);\n  }\n  function isVar(term) {\n    return typeof term === 'string' && term.match(/^[\\?\\$]/);\n  }\n  function fixSymbolBrackets(term) {\n    if (typeof term === 'string') {\n      return term.replace(/^&lt;/, '<').replace(/&gt;$/, '>');\n    } else {\n      return term;\n    }\n  }\n  function isSymbol(term) {\n    return typeof term === 'string' && term.match(/^<[^>]*>$/);\n  }\n  function isBnode(term) {\n    return typeof term === 'string' && (term.match(/^_:/) || term.match(/^$/));\n  }\n  function isPrefix(term) {\n    return typeof term === 'string' && term.match(/:$/);\n  }\n  function isPrefixedSymbol(term) {\n    return typeof term === 'string' && term.match(/^:|^[^_][^:]*:/);\n  }\n  function getPrefix(term) {\n    var a = term.split(':');\n    return a[0];\n  }\n  function getSuffix(term) {\n    var a = term.split(':');\n    return a[1];\n  }\n  function removeBrackets(term) {\n    if (isSymbol(term)) {\n      return term.slice(1, term.length - 1);\n    } else {\n      return term;\n    }\n  }\n  // takes a string and returns an array of strings and Literals in the place of literals\n  function parseLiterals(str) {\n    // var sin = (str.indexOf(/[ \\n]\\'/)==-1)?null:str.indexOf(/[ \\n]\\'/), doub = (str.indexOf(/[ \\n]\\\"/)==-1)?null:str.indexOf(/[ \\n]\\\"/)\n    var sin = str.indexOf(\"'\") === -1 ? null : str.indexOf(\"'\");\n    var doub = str.indexOf('\"') === -1 ? null : str.indexOf('\"');\n    // alert(\"S: \"+sin+\" D: \"+doub)\n    if (!sin && !doub) {\n      var a = new Array(1);\n      a[0] = str;\n      return a;\n    }\n    var res = new Array(2);\n    var br;\n    var ind;\n    if (!sin || doub && doub < sin) {\n      br = '\"';\n      ind = doub;\n    } else if (!doub || sin && sin < doub) {\n      br = \"'\";\n      ind = sin;\n    } else {\n      log.error('SQARQL QUERY OOPS!');\n      return res;\n    }\n    res[0] = str.slice(0, ind);\n    var end = str.slice(ind + 1).indexOf(br);\n    if (end === -1) {\n      log.error('SPARQL parsing error: no matching parentheses in literal ' + str);\n      return str;\n    }\n    // alert(str.slice(end + ind + 2).match(/^\\^\\^/))\n    var end2;\n    if (str.slice(end + ind + 2).match(/^\\^\\^/)) {\n      end2 = str.slice(end + ind + 2).indexOf(' ');\n      // alert(end2)\n      res[1] = kb.literal(str.slice(ind + 1, ind + 1 + end), '', kb.sym(removeBrackets(str.slice(ind + 4 + end, ind + 2 + end + end2))));\n      // alert(res[1].datatype.uri)\n      res = res.concat(parseLiterals(str.slice(end + ind + 3 + end2)));\n    } else if (str.slice(end + ind + 2).match(/^@/)) {\n      end2 = str.slice(end + ind + 2).indexOf(' ');\n      // alert(end2)\n      res[1] = kb.literal(str.slice(ind + 1, ind + 1 + end), str.slice(ind + 3 + end, ind + 2 + end + end2), null);\n      // alert(res[1].datatype.uri)\n      res = res.concat(parseLiterals(str.slice(end + ind + 2 + end2)));\n    } else {\n      res[1] = kb.literal(str.slice(ind + 1, ind + 1 + end), '', null);\n      log.info('Literal found: ' + res[1]);\n      res = res.concat(parseLiterals(str.slice(end + ind + 2))); // finds any other literals\n    }\n    return res;\n  }\n\n  function spaceDelimit(str) {\n    str = str.replace(/\\(/g, ' ( ').replace(/\\)/g, ' ) ').replace(/</g, ' <').replace(/>/g, '> ').replace(/{/g, ' { ').replace(/}/g, ' } ').replace(/[\\t\\n\\r]/g, ' ').replace(/; /g, ' ; ').replace(/\\. /g, ' . ').replace(/, /g, ' , ');\n    log.info('New str into spaceDelimit: \\n' + str);\n    var res = [];\n    var br = str.split(' ');\n    for (var x in br) {\n      if (isRealText(br[x])) {\n        res = res.concat(br[x]);\n      }\n    }\n    return res;\n  }\n\n  function replaceKeywords(input) {\n    var strarr = input;\n    for (var x = 0; x < strarr.length; x++) {\n      if (strarr[x] === 'a') {\n        strarr[x] = '<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>';\n      }\n      if (strarr[x] === 'is' && strarr[x + 2] === 'of') {\n        strarr.splice(x, 1);\n        strarr.splice(x + 1, 1);\n        var s = strarr[x - 1];\n        strarr[x - 1] = strarr[x + 1];\n        strarr[x + 1] = s;\n      }\n    }\n    return strarr;\n  }\n\n  function toTerms(input) {\n    var res = [];\n    for (var x = 0; x < input.length; x++) {\n      if (typeof input[x] !== 'string') {\n        res[x] = input[x];\n        continue;\n      }\n      input[x] = fixSymbolBrackets(input[x]);\n      if (isVar(input[x])) {\n        res[x] = makeVar(input[x].slice(1));\n      } else if (isBnode(input[x])) {\n        log.info(input[x] + ' was identified as a bnode.');\n        res[x] = kb.bnode();\n      } else if (isSymbol(input[x])) {\n        log.info(input[x] + ' was identified as a symbol.');\n        res[x] = kb.sym(removeBrackets(input[x]));\n      } else if (isPrefixedSymbol(input[x])) {\n        log.info(input[x] + ' was identified as a prefixed symbol');\n        if (prefixes[getPrefix(input[x])]) {\n          res[x] = kb.sym(input[x] = prefixes[getPrefix(input[x])] + getSuffix(input[x]));\n        } else {\n          log.error('SPARQL error: ' + input[x] + ' with prefix ' + getPrefix(input[x]) + ' does not have a correct prefix entry.');\n          res[x] = input[x];\n        }\n      } else {\n        res[x] = input[x];\n      }\n    }\n    return res;\n  }\n\n  function tokenize(str) {\n    var token1 = parseLiterals(str);\n    var token2 = [];\n    for (var x in token1) {\n      if (typeof token1[x] === 'string') {\n        token2 = token2.concat(spaceDelimit(token1[x]));\n      } else {\n        token2 = token2.concat(token1[x]);\n      }\n    }\n    token2 = replaceKeywords(token2);\n    log.info('SPARQL Tokens: ' + token2);\n    return token2;\n  }\n\n  // CASE-INSENSITIVE\n  function arrayIndexOf(str, arr) {\n    for (var i = 0; i < arr.length; i++) {\n      if (typeof arr[i] !== 'string') {\n        continue;\n      }\n      if (arr[i].toLowerCase() === str.toLowerCase()) {\n        return i;\n      }\n    }\n    // log.warn(\"No instance of \"+str+\" in array \"+arr)\n    return null;\n  }\n\n  // CASE-INSENSITIVE\n  function arrayIndicesOf(str, arr) {\n    var ind = [];\n    for (var i = 0; i < arr.length; i++) {\n      if (typeof arr[i] !== 'string') {\n        continue;\n      }\n      if (arr[i].toLowerCase() === str.toLowerCase()) {\n        ind.push(i);\n      }\n    }\n    return ind;\n  }\n\n  function setVars(input, query) {\n    log.info('SPARQL vars: ' + input);\n    for (var x in input) {\n      if (isVar(input[x])) {\n        log.info('Added ' + input[x] + ' to query variables from SPARQL');\n        var v = makeVar(input[x].slice(1));\n        query.vars.push(v);\n        v.label = input[x].slice(1);\n      } else {\n        log.warn('Incorrect SPARQL variable in SELECT: ' + input[x]);\n      }\n    }\n  }\n\n  function getPrefixDeclarations(input) {\n    var prefInd = arrayIndicesOf('PREFIX', input);\n    var res = [];\n    for (var i in prefInd) {\n      var a = input[prefInd[i] + 1];\n      var b = input[prefInd[i] + 2];\n      if (!isPrefix(a)) {\n        log.error('Invalid SPARQL prefix: ' + a);\n      } else if (!isSymbol(b)) {\n        log.error('Invalid SPARQL symbol: ' + b);\n      } else {\n        log.info('Prefix found: ' + a + ' -> ' + b);\n        var pref = getPrefix(a);\n        var symbol = removeBrackets(b);\n        res[pref] = symbol;\n      }\n    }\n    return res;\n  }\n\n  function getMatchingBracket(arr, open, close) {\n    log.info('Looking for a close bracket of type ' + close + ' in ' + arr);\n    var index = 0;\n    for (var i = 0; i < arr.length; i++) {\n      if (arr[i] === open) {\n        index++;\n      }\n      if (arr[i] === close) {\n        index--;\n      }\n      if (index < 0) {\n        return i;\n      }\n    }\n    log.error('Statement had no close parenthesis in SPARQL query');\n    return 0;\n  }\n\n  function constraintGreaterThan(value) {\n    this.describe = function (varstr) {\n      return varstr + ' > ' + value.toNT();\n    };\n    this.test = function (term) {\n      if (term.value.match(/[0-9]+(\\.[0-9]+)?([eE][+-]?[0-9]+)?/)) {\n        return parseFloat(term.value) > parseFloat(value);\n      } else {\n        return term.toNT() > value.toNT();\n      }\n    };\n    return this;\n  }\n\n  function constraintLessThan(value) {\n    // this is not the recommended usage. Should only work on literal, numeric, dateTime\n    this.describe = function (varstr) {\n      return varstr + ' < ' + value.toNT();\n    };\n    this.test = function (term) {\n      // this.describe = function (varstr) { return varstr + \" < \"+value }\n      if (term.value.match(/[0-9]+(\\.[0-9]+)?([eE][+-]?[0-9]+)?/)) {\n        return parseFloat(term.value) < parseFloat(value);\n      } else {\n        return term.toNT() < value.toNT();\n      }\n    };\n    return this;\n  }\n  // This should only work on literals but doesn't.\n  function ConstraintEqualTo(value) {\n    this.describe = function (varstr) {\n      return varstr + ' = ' + value.toNT();\n    };\n    this.test = function (term) {\n      return value.sameTerm(term);\n    };\n    return this;\n  }\n\n  // value must be a literal\n  function ConstraintRegexp(value) {\n    this.describe = function (varstr) {\n      return \"REGEXP( '\" + value + \"' , \" + varstr + ' )';\n    };\n    this.test = function (term) {\n      var str = value;\n      // str = str.replace(/^//,\"\").replace(//$/,\"\")\n      var rg = new RegExp(str);\n      if (term.value) {\n        return rg.test(term.value);\n      } else {\n        return false;\n      }\n    };\n  }\n\n  function setConstraint(input, pat) {\n    if (input.length === 3 && input[0].termType === 'Variable' && (input[2].termType === 'NamedNode' || input[2].termType === 'Literal')) {\n      if (input[1] === '=') {\n        log.debug('Constraint added: ' + input);\n        pat.constraints[input[0]] = new ConstraintEqualTo(input[2]);\n      } else if (input[1] === '>') {\n        log.debug('Constraint added: ' + input);\n        pat.constraints[input[0]] = new ConstraintEqualTo(input[2]);\n      } else if (input[1] === '<') {\n        log.debug('Constraint added: ' + input);\n        pat.constraints[input[0]] = new ConstraintEqualTo(input[2]);\n      } else {\n        log.warn(\"I don't know how to handle the constraint: \" + input);\n      }\n    } else if (input.length === 6 && typeof input[0] === 'string' && input[0].toLowerCase() === 'regexp' && input[1] === '(' && input[5] === ')' && input[3] === ',' && input[4].termType === 'Variable' && input[2].termType === 'Literal') {\n      log.debug('Constraint added: ' + input);\n      pat.constraints[input[4]] = new ConstraintRegexp(input[2].value);\n    }\n    // log.warn(\"I don't know how to handle the constraint: \"+input)\n    // alert(\"length: \"+input.length+\" input 0 type: \"+input[0].termType+\" input 1: \"+input[1]+\" input[2] type: \"+input[2].termType)\n  }\n\n  function setOptional(terms, pat) {\n    log.debug('Optional query: ' + terms + ' not yet implemented.');\n    var opt = kb.formula();\n    setWhere(terms, opt);\n    pat.optional.push(opt);\n  }\n\n  function setWhere(input, pat) {\n    var terms = toTerms(input);\n    var end;\n    log.debug('WHERE: ' + terms);\n    var opt;\n    // var opt = arrayIndicesOf(\"OPTIONAL\",terms)\n    while (arrayIndexOf('OPTIONAL', terms)) {\n      opt = arrayIndexOf('OPTIONAL', terms);\n      log.debug('OPT: ' + opt + ' ' + terms[opt] + ' in ' + terms);\n      if (terms[opt + 1] !== '{') {\n        log.warn('Bad optional opening bracket in word ' + opt);\n      }\n      end = getMatchingBracket(terms.slice(opt + 2), '{', '}');\n      if (end === -1) {\n        log.error('No matching bracket in word ' + opt);\n      } else {\n        setOptional(terms.slice(opt + 2, opt + 2 + end), pat);\n        // alert(pat.statements[0].toNT())\n        opt = arrayIndexOf('OPTIONAL', terms);\n        end = getMatchingBracket(terms.slice(opt + 2), '{', '}');\n        terms.splice(opt, end + 3);\n      }\n    }\n    log.debug('WHERE after optionals: ' + terms);\n    while (arrayIndexOf('FILTER', terms)) {\n      var filt = arrayIndexOf('FILTER', terms);\n      if (terms[filt + 1] !== '(') {\n        log.warn('Bad filter opening bracket in word ' + filt);\n      }\n      end = getMatchingBracket(terms.slice(filt + 2), '(', ')');\n      if (end === -1) {\n        log.error('No matching bracket in word ' + filt);\n      } else {\n        setConstraint(terms.slice(filt + 2, filt + 2 + end), pat);\n        filt = arrayIndexOf('FILTER', terms);\n        end = getMatchingBracket(terms.slice(filt + 2), '(', ')');\n        terms.splice(filt, end + 3);\n      }\n    }\n    log.debug('WHERE after filters and optionals: ' + terms);\n    extractStatements(terms, pat);\n  }\n\n  function extractStatements(terms, formula) {\n    var arrayZero = new Array(1);\n    arrayZero[0] = -1; // this is just to add the beginning of the where to the periods index.\n    var per = arrayZero.concat(arrayIndicesOf('.', terms));\n    var stat = [];\n    for (var x = 0; x < per.length - 1; x++) {\n      stat[x] = terms.slice(per[x] + 1, per[x + 1]);\n    }\n    // Now it's in an array of statements\n    for (x in stat) {\n      // THIS MUST BE CHANGED FOR COMMA, SEMICOLON\n      log.info('s+p+o ' + x + ' = ' + stat[x]);\n      var subj = stat[x][0];\n      stat[x].splice(0, 1);\n      var sem = arrayZero.concat(arrayIndicesOf(';', stat[x]));\n      sem.push(stat[x].length);\n      var stat2 = [];\n      for (var y = 0; y < sem.length - 1; y++) {\n        stat2[y] = stat[x].slice(sem[y] + 1, sem[y + 1]);\n      }\n      for (x in stat2) {\n        log.info('p+o ' + x + ' = ' + stat[x]);\n        var pred = stat2[x][0];\n        stat2[x].splice(0, 1);\n        var com = arrayZero.concat(arrayIndicesOf(',', stat2[x]));\n        com.push(stat2[x].length);\n        var stat3 = [];\n        for (y = 0; y < com.length - 1; y++) {\n          stat3[y] = stat2[x].slice(com[y] + 1, com[y + 1]);\n        }\n        for (x in stat3) {\n          var obj = stat3[x][0];\n          log.info('Subj=' + subj + ' Pred=' + pred + ' Obj=' + obj);\n          formula.add(subj, pred, obj);\n        }\n      }\n    }\n  }\n\n  // ******************************* Body of SPARQLToQuery ***************************//\n  log.info('SPARQL input: \\n' + SPARQL);\n  var q = new Query();\n  var sp = tokenize(SPARQL); // first tokenize everything\n  var prefixes = getPrefixDeclarations(sp);\n  if (!prefixes.rdf) {\n    prefixes.rdf = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#';\n  }\n  if (!prefixes.rdfs) {\n    prefixes.rdfs = 'http://www.w3.org/2000/01/rdf-schema#';\n  }\n  var selectLoc = arrayIndexOf('SELECT', sp);\n  var whereLoc = arrayIndexOf('WHERE', sp);\n  if (selectLoc < 0 || whereLoc < 0 || selectLoc > whereLoc) {\n    log.error('Invalid or nonexistent SELECT and WHERE tags in SPARQL query');\n    return false;\n  }\n  setVars(sp.slice(selectLoc + 1, whereLoc), q);\n\n  setWhere(sp.slice(whereLoc + 2, sp.length - 1), q.pat);\n\n  if (testMode) {\n    return q;\n  }\n\n  for (var x in q.pat.statements) {\n    var st = q.pat.statements[x];\n    if (st.subject.termType === 'NamedNode') {\n      /* && sf.isPending(st.subject.uri) */ // This doesn't work.\n      // sf.requestURI(st.subject.uri,\"sparql:\"+st.subject) Kenny: I remove these two\n      if (kb.fetcher) {\n        kb.fetcher.lookUpThing(st.subject, 'sparql:' + st.subject);\n      }\n    }\n    if (st.object.termType === 'NamedNode') {\n      /* && sf.isPending(st.object.uri) */\n      // sf.requestURI(st.object.uri,\"sparql:\"+st.object)\n      if (kb.fetcher) {\n        kb.fetcher.lookUpThing(st.object, 'sparql:' + st.object);\n      }\n    }\n  }\n  // alert(q.pat)\n  return q;\n  // checkVars()\n  // *******************************************************************//\n}\n\nmodule.exports = SPARQLToQuery;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rdflib/lib/sparql-to-query.js\n// module id = 86\n// module chunks = 0","'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar _indexedFormula = require('./indexed-formula');\n\nvar _indexedFormula2 = _interopRequireDefault(_indexedFormula);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Joe Presbrey <presbrey@mit.edu>\n// 2007-07-15\n// 2010-08-08 TimBL folded in Kenny's WEBDAV\n// 2010-12-07 TimBL addred local file write code\nvar docpart = require('./uri').docpart;\nvar Fetcher = require('./fetcher');\nvar graph = require('./data-factory').graph;\n\nvar namedNode = require('./data-factory').namedNode;\nvar Namespace = require('./namespace');\nvar Serializer = require('./serializer');\nvar uriJoin = require('./uri').join;\nvar Util = require('./util');\n\nvar UpdateManager = function () {\n  var sparql = function sparql(store) {\n    this.store = store;\n    if (store.updater) {\n      throw new Error(\"You can't have two UpdateManagers for the same store\");\n    }\n    if (!store.fetcher) {\n      // The store must also/already have a fetcher\n      new Fetcher(store);\n    }\n    store.updater = this;\n    this.ifps = {};\n    this.fps = {};\n    this.ns = {};\n    this.ns.link = Namespace('http://www.w3.org/2007/ont/link#');\n    this.ns.http = Namespace('http://www.w3.org/2007/ont/http#');\n    this.ns.httph = Namespace('http://www.w3.org/2007/ont/httph#');\n    this.ns.ldp = Namespace('http://www.w3.org/ns/ldp#');\n    this.ns.rdf = Namespace('http://www.w3.org/1999/02/22-rdf-syntax-ns#');\n    this.ns.rdfs = Namespace('http://www.w3.org/2000/01/rdf-schema#');\n    this.ns.rdf = Namespace('http://www.w3.org/1999/02/22-rdf-syntax-ns#');\n    this.ns.owl = Namespace('http://www.w3.org/2002/07/owl#');\n\n    this.patchControl = []; // index of objects fro coordinating incomng and outgoing patches\n  };\n\n  sparql.prototype.patchControlFor = function (doc) {\n    if (!this.patchControl[doc.uri]) {\n      this.patchControl[doc.uri] = [];\n    }\n    return this.patchControl[doc.uri];\n  };\n\n  // Returns The method string SPARQL or DAV or LOCALFILE or false if known, undefined if not known.\n  //\n  // Files have to have a specific annotaton that they are machine written, for safety.\n  // We don't actually check for write access on files.\n  //\n  sparql.prototype.editable = function (uri, kb) {\n    if (!uri) {\n      return false; // Eg subject is bnode, no known doc to write to\n    }\n    if (!kb) {\n      kb = this.store;\n    }\n\n    if (uri.slice(0, 8) === 'file:///') {\n      if (kb.holds(kb.sym(uri), namedNode('http://www.w3.org/1999/02/22-rdf-syntax-ns#type'), namedNode('http://www.w3.org/2007/ont/link#MachineEditableDocument'))) {\n        return 'LOCALFILE';\n      }\n\n      var sts = kb.statementsMatching(kb.sym(uri), undefined, undefined);\n\n      console.log('sparql.editable: Not MachineEditableDocument file ' + uri + '\\n');\n      console.log(sts.map(function (x) {\n        return x.toNT();\n      }).join('\\n'));\n      return false;\n      // @@ Would be nifty of course to see whether we actually have write acess first.\n    }\n\n    var request;\n    var definitive = false;\n    var requests = kb.each(undefined, this.ns.link('requestedURI'), docpart(uri));\n\n    // Hack for the moment @@@@ 2016-02-12\n    if (kb.holds(namedNode(uri), this.ns.rdf('type'), this.ns.ldp('Resource'))) {\n      return 'SPARQL';\n    }\n    var i;\n    var method;\n    for (var r = 0; r < requests.length; r++) {\n      request = requests[r];\n      if (request !== undefined) {\n        var response = kb.any(request, this.ns.link('response'));\n        if (request !== undefined) {\n          var acceptPatch = kb.each(response, this.ns.httph('accept-patch'));\n          if (acceptPatch.length) {\n            for (i = 0; i < acceptPatch.length; i++) {\n              method = acceptPatch[i].value.trim();\n              if (method.indexOf('application/sparql-update') >= 0) return 'SPARQL';\n            }\n          }\n          var author_via = kb.each(response, this.ns.httph('ms-author-via'));\n          if (author_via.length) {\n            for (i = 0; i < author_via.length; i++) {\n              method = author_via[i].value.trim();\n              if (method.indexOf('SPARQL') >= 0) {\n                return 'SPARQL';\n              }\n              if (method.indexOf('DAV') >= 0) {\n                return 'DAV';\n              }\n            }\n          }\n          var status = kb.each(response, this.ns.http('status'));\n          if (status.length) {\n            for (i = 0; i < status.length; i++) {\n              if (status[i] === 200 || status[i] === 404) {\n                definitive = true;\n                // return false // A definitive answer\n              }\n            }\n          }\n        } else {\n          console.log('sparql.editable: No response for ' + uri + '\\n');\n        }\n      }\n    }\n    if (requests.length === 0) {\n      console.log('sparql.editable: No request for ' + uri + '\\n');\n    } else {\n      if (definitive) {\n        return false; // We have got a request and it did NOT say editable => not editable\n      }\n    }\n    console.log('sparql.editable: inconclusive for ' + uri + '\\n');\n    return undefined; // We don't know (yet) as we haven't had a response (yet)\n  };\n\n  // /////////  The identification of bnodes\n\n  sparql.prototype.anonymize = function (obj) {\n    return obj.toNT().substr(0, 2) === '_:' && this._mentioned(obj) ? '?' + obj.toNT().substr(2) : obj.toNT();\n  };\n\n  sparql.prototype.anonymizeNT = function (stmt) {\n    return this.anonymize(stmt.subject) + ' ' + this.anonymize(stmt.predicate) + ' ' + this.anonymize(stmt.object) + ' .';\n  };\n\n  // A list of all bnodes occuring in a statement\n  sparql.prototype._statement_bnodes = function (st) {\n    return [st.subject, st.predicate, st.object].filter(function (x) {\n      return x.isBlank;\n    });\n  };\n\n  // A list of all bnodes occuring in a list of statements\n  sparql.prototype._statement_array_bnodes = function (sts) {\n    var bnodes = [];\n    for (var i = 0; i < sts.length; i++) {\n      bnodes = bnodes.concat(this._statement_bnodes(sts[i]));\n    }\n    bnodes.sort(); // in place sort - result may have duplicates\n    var bnodes2 = [];\n    for (var j = 0; j < bnodes.length; j++) {\n      if (j === 0 || !bnodes[j].sameTerm(bnodes[j - 1])) {\n        bnodes2.push(bnodes[j]);\n      }\n    }\n    return bnodes2;\n  };\n\n  sparql.prototype._cache_ifps = function () {\n    // Make a cached list of [Inverse-]Functional properties\n    // Call this once before calling context_statements\n    this.ifps = {};\n    var a = this.store.each(undefined, this.ns.rdf('type'), this.ns.owl('InverseFunctionalProperty'));\n    for (var i = 0; i < a.length; i++) {\n      this.ifps[a[i].uri] = true;\n    }\n    this.fps = {};\n    a = this.store.each(undefined, this.ns.rdf('type'), this.ns.owl('FunctionalProperty'));\n    for (i = 0; i < a.length; i++) {\n      this.fps[a[i].uri] = true;\n    }\n  };\n\n  // Returns a context to bind a given node, up to a given depth\n  sparql.prototype._bnode_context2 = function (x, source, depth) {\n    // Return a list of statements which indirectly identify a node\n    //  Depth > 1 if try further indirection.\n    //  Return array of statements (possibly empty), or null if failure\n    var sts = this.store.statementsMatching(undefined, undefined, x, source); // incoming links\n    var y;\n    var res;\n    for (var i = 0; i < sts.length; i++) {\n      if (this.fps[sts[i].predicate.uri]) {\n        y = sts[i].subject;\n        if (!y.isBlank) {\n          return [sts[i]];\n        }\n        if (depth) {\n          res = this._bnode_context2(y, source, depth - 1);\n          if (res) {\n            return res.concat([sts[i]]);\n          }\n        }\n      }\n    }\n    // outgoing links\n    sts = this.store.statementsMatching(x, undefined, undefined, source);\n    for (i = 0; i < sts.length; i++) {\n      if (this.ifps[sts[i].predicate.uri]) {\n        y = sts[i].object;\n        if (!y.isBlank) {\n          return [sts[i]];\n        }\n        if (depth) {\n          res = this._bnode_context2(y, source, depth - 1);\n          if (res) {\n            return res.concat([sts[i]]);\n          }\n        }\n      }\n    }\n    return null; // Failure\n  };\n\n  // Returns the smallest context to bind a given single bnode\n  sparql.prototype._bnode_context_1 = function (x, source) {\n    // Return a list of statements which indirectly identify a node\n    //   Breadth-first\n    var self = this;\n    for (var depth = 0; depth < 3; depth++) {\n      // Try simple first\n      var con = this._bnode_context2(x, source, depth);\n      if (con !== null) return con;\n    }\n    // If we can't guarantee unique with logic just send all info about node\n    return this.store.connectedStatements(x, source); // was:\n    // throw new Error('Unable to uniquely identify bnode: ' + x.toNT())\n  };\n\n  sparql.prototype._mentioned = function (x) {\n    return this.store.statementsMatching(x).length !== 0 || // Don't pin fresh bnodes\n    this.store.statementsMatching(undefined, x).length !== 0 || this.store.statementsMatching(undefined, undefined, x).length !== 0;\n  };\n\n  sparql.prototype._bnode_context = function (bnodes, doc) {\n    var context = [];\n    if (bnodes.length) {\n      this._cache_ifps();\n      for (var i = 0; i < bnodes.length; i++) {\n        // Does this occur in old graph?\n        var bnode = bnodes[i];\n        if (!this._mentioned(bnode)) continue;\n        context = context.concat(this._bnode_context_1(bnode, doc));\n      }\n    }\n    return context;\n  };\n\n  /*  Weird code does not make sense -- some code corruption along the line -- st undefined -- weird\n      sparql.prototype._bnode_context = function(bnodes) {\n          var context = []\n          if (bnodes.length) {\n              if (this.store.statementsMatching(st.subject.isBlank?undefined:st.subject,\n                                        st.predicate.isBlank?undefined:st.predicate,\n                                        st.object.isBlank?undefined:st.object,\n                                        st.why).length <= 1) {\n                  context = context.concat(st)\n              } else {\n                  this._cache_ifps()\n                  for (x in bnodes) {\n                      context = context.concat(this._bnode_context_1(bnodes[x], st.why))\n                  }\n              }\n          }\n          return context\n      }\n  */\n  // Returns the best context for a single statement\n  sparql.prototype._statement_context = function (st) {\n    var bnodes = this._statement_bnodes(st);\n    return this._bnode_context(bnodes, st.why);\n  };\n\n  sparql.prototype._context_where = function (context) {\n    var sparql = this;\n    return !context || context.length === 0 ? '' : 'WHERE { ' + context.map(function (x) {\n      return sparql.anonymizeNT(x);\n    }).join('\\n') + ' }\\n';\n  };\n\n  sparql.prototype._fire = function (uri, query, callback) {\n    if (!uri) {\n      throw new Error('No URI given for remote editing operation: ' + query);\n    }\n    console.log('sparql: sending update to <' + uri + '>');\n    var xhr = Util.XMLHTTPFactory();\n    xhr.options = {};\n\n    xhr.onreadystatechange = function () {\n      // dump(\"SPARQL update ready state for <\"+uri+\"> readyState=\"+xhr.readyState+\"\\n\"+query+\"\\n\")\n      if (xhr.readyState === 4) {\n        var success = !xhr.status || xhr.status >= 200 && xhr.status < 300;\n        if (!success) {\n          console.log('sparql: update failed for <' + uri + '> status=' + xhr.status + ', ' + xhr.statusText + ', body length=' + xhr.responseText.length + '\\n   for query: ' + query);\n        } else {\n          console.log('sparql: update Ok for <' + uri + '>');\n        }\n        callback(uri, success, xhr.responseText, xhr);\n      }\n    };\n\n    xhr.open('PATCH', uri, true); // async=true\n    xhr.setRequestHeader('Content-type', 'application/sparql-update');\n    xhr.send(query);\n  };\n\n  // This does NOT update the statement.\n  // It returns an object whcih includes\n  //  function which can be used to change the object of the statement.\n  //\n  sparql.prototype.update_statement = function (statement) {\n    if (statement && !statement.why) {\n      return;\n    }\n    var sparql = this;\n    var context = this._statement_context(statement);\n\n    return {\n      statement: statement ? [statement.subject, statement.predicate, statement.object, statement.why] : undefined,\n      statementNT: statement ? this.anonymizeNT(statement) : undefined,\n      where: sparql._context_where(context),\n\n      set_object: function set_object(obj, callback) {\n        var query = this.where;\n        query += 'DELETE DATA { ' + this.statementNT + ' } ;\\n';\n        query += 'INSERT DATA { ' + this.anonymize(this.statement[0]) + ' ' + this.anonymize(this.statement[1]) + ' ' + this.anonymize(obj) + ' ' + ' . }\\n';\n\n        sparql._fire(this.statement[3].uri, query, callback);\n      }\n    };\n  };\n\n  sparql.prototype.insert_statement = function (st, callback) {\n    var st0 = st instanceof Array ? st[0] : st;\n    var query = this._context_where(this._statement_context(st0));\n\n    if (st instanceof Array) {\n      var stText = '';\n      for (var i = 0; i < st.length; i++) {\n        stText += st[i] + '\\n';\n      }query += 'INSERT DATA { ' + stText + ' }\\n';\n    } else {\n      query += 'INSERT DATA { ' + this.anonymize(st.subject) + ' ' + this.anonymize(st.predicate) + ' ' + this.anonymize(st.object) + ' ' + ' . }\\n';\n    }\n\n    this._fire(st0.why.uri, query, callback);\n  };\n\n  sparql.prototype.delete_statement = function (st, callback) {\n    var st0 = st instanceof Array ? st[0] : st;\n    var query = this._context_where(this._statement_context(st0));\n\n    if (st instanceof Array) {\n      var stText = '';\n      for (var i = 0; i < st.length; i++) {\n        stText += st[i] + '\\n';\n      }query += 'DELETE DATA { ' + stText + ' }\\n';\n    } else {\n      query += 'DELETE DATA { ' + this.anonymize(st.subject) + ' ' + this.anonymize(st.predicate) + ' ' + this.anonymize(st.object) + ' ' + ' . }\\n';\n    }\n\n    this._fire(st0.why.uri, query, callback);\n  };\n\n  //  Request a now or future action to refresh changes coming downstream\n  //\n  // This is designed to allow the system to re-request the server version,\n  // when a websocket has pinged to say there are changes.\n  // If thewebsocket, by contrast, has sent a patch, then this may not be necessary.\n  // This may be called out of context so *this* cannot be used.\n\n  sparql.prototype.requestDownstreamAction = function (doc, action) {\n    var control = this.patchControlFor(doc);\n    if (!control.pendingUpstream) {\n      action(doc);\n    } else {\n      if (control.downstreamAction) {\n        if (control.downstreamAction === action) {\n          return;\n        } else {\n          throw new Error(\"Can't wait for > 1 differnt downstream actions\");\n        }\n      } else {\n        control.downstreamAction = action;\n      }\n    }\n  };\n\n  // We want to start counting websockt notifications\n  // to distinguish the ones from others from our own.\n  sparql.prototype.clearUpstreamCount = function (doc) {\n    var control = this.patchControlFor(doc);\n    control.upstreamCount = 0;\n  };\n\n  sparql.prototype.getUpdatesVia = function (doc) {\n    var linkHeaders = this.store.fetcher.getHeader(doc, 'updates-via');\n    if (!linkHeaders || !linkHeaders.length) return null;\n    return linkHeaders[0].trim();\n  };\n\n  sparql.prototype.addDownstreamChangeListener = function (doc, listener) {\n    var control = this.patchControlFor(doc);\n    if (!control.downstreamChangeListeners) control.downstreamChangeListeners = [];\n    control.downstreamChangeListeners.push(listener);\n    var self = this;\n    this.setRefreshHandler(doc, function (doc) {\n      // a function not a method\n      self.reloadAndSync(doc);\n    });\n  };\n\n  sparql.prototype.reloadAndSync = function (doc) {\n    var control = this.patchControlFor(doc);\n    var updater = this;\n\n    if (control.reloading) {\n      console.log('   Already reloading - stop');\n      return; // once only needed\n    }\n    control.reloading = true;\n    var retryTimeout = 1000; // ms\n    var tryReload = function tryReload() {\n      console.log('try reload - timeout = ' + retryTimeout);\n      updater.reload(updater.store, doc, function (ok, message, xhr) {\n        control.reloading = false;\n        if (ok) {\n          if (control.downstreamChangeListeners) {\n            for (var i = 0; i < control.downstreamChangeListeners.length; i++) {\n              console.log('        Calling downstream listener ' + i);\n              control.downstreamChangeListeners[i]();\n            }\n          }\n        } else {\n          if (xhr.status === 0) {\n            console.log('Network error refreshing the data. Retrying in ' + retryTimeout / 1000);\n            control.reloading = true;\n            retryTimeout = retryTimeout * 2;\n            setTimeout(tryReload, retryTimeout);\n          } else {\n            console.log('Error ' + xhr.status + 'refreshing the data:' + message + '. Stopped' + doc);\n          }\n        }\n      });\n    };\n    tryReload();\n  };\n\n  // Set up websocket to listen on\n  //\n  // There is coordination between upstream changes and downstream ones\n  // so that a reload is not done in the middle of an upsteeam patch.\n  // If you usie this API then you get called when a change happens, and you\n  // have to reload the file yourself, and then refresh the UI.\n  // Alternative is addDownstreamChangeListener(), where you do not\n  // have to do the reload yourslf. Do mot mix them.\n  //\n  //  kb contains the HTTP  metadata from prefvious operations\n  //\n  sparql.prototype.setRefreshHandler = function (doc, handler) {\n    var wssURI = this.getUpdatesVia(doc); // relative\n    // var kb = this.store\n    var theHandler = handler;\n    var self = this;\n    var updater = this;\n    var retryTimeout = 1500; // *2 will be 3 Seconds, 6, 12, etc\n    var retries = 0;\n\n    if (!wssURI) {\n      console.log('Server doies not support live updates thoughUpdates-Via :-(');\n      return false;\n    }\n\n    wssURI = uriJoin(wssURI, doc.uri);\n    wssURI = wssURI.replace(/^http:/, 'ws:').replace(/^https:/, 'wss:');\n    console.log('Web socket URI ' + wssURI);\n\n    var openWebsocket = function openWebsocket() {\n      // From https://github.com/solid/solid-spec#live-updates\n      var socket;\n      if (typeof WebSocket !== 'undefined') {\n        socket = new WebSocket(wssURI);\n      } else if (typeof Services !== 'undefined') {\n        // Firefox add on http://stackoverflow.com/questions/24244886/is-websocket-supported-in-firefox-for-android-addons\n        socket = Services.wm.getMostRecentWindow('navigator:browser').WebSocket(wssURI);\n      } else if (typeof window !== 'undefined' && window.WebSocket) {\n        socket = window.WebSocket(wssURI);\n      } else {\n        console.log('Live update disabled, as WebSocket not supported by platform :-(');\n        return;\n      }\n      socket.onopen = function () {\n        console.log('    websocket open');\n        retryTimeout = 1500; // reset timeout to fast on success\n        this.send('sub ' + doc.uri);\n        if (retries) {\n          console.log('Web socket has been down, better check for any news.');\n          updater.requestDownstreamAction(doc, theHandler);\n        }\n      };\n      var control = self.patchControlFor(doc);\n      control.upstreamCount = 0;\n\n      // https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent\n      //\n      // 1000\tCLOSE_NORMAL\tNormal closure; the connection successfully completed whatever purpose for which it was created.\n      // 1001\tCLOSE_GOING_AWAY\tThe endpoint is going away, either\n      //                                  because of a server failure or because the browser is navigating away from the page that opened the connection.\n      // 1002\tCLOSE_PROTOCOL_ERROR\tThe endpoint is terminating the connection due to a protocol error.\n      // 1003\tCLOSE_UNSUPPORTED\tThe connection is being terminated because the endpoint\n      //                                  received data of a type it cannot accept (for example, a text-only endpoint received binary data).\n      // 1004                             Reserved. A meaning might be defined in the future.\n      // 1005\tCLOSE_NO_STATUS\tReserved.  Indicates that no status code was provided even though one was expected.\n      // 1006\tCLOSE_ABNORMAL\tReserved. Used to indicate that a connection was closed abnormally (\n      //\n      //\n      socket.onclose = function (event) {\n        console.log('*** Websocket closed with code ' + event.code + \", reason '\" + event.reason + \"' clean = \" + event.clean);\n        retryTimeout *= 2;\n        retries += 1;\n        console.log('Retrying in ' + retryTimeout + 'ms'); // (ask user?)\n        setTimeout(function () {\n          console.log('Trying websocket again');\n          openWebsocket();\n        }, retryTimeout);\n      };\n      socket.onmessage = function (msg) {\n        if (msg.data && msg.data.slice(0, 3) === 'pub') {\n          if ('upstreamCount' in control) {\n            control.upstreamCount -= 1;\n            if (control.upstreamCount >= 0) {\n              console.log('just an echo: ' + control.upstreamCount);\n              return; // Just an echo\n            }\n          }\n          console.log('Assume a real downstream change: ' + control.upstreamCount + ' -> 0');\n          control.upstreamCount = 0;\n          self.requestDownstreamAction(doc, theHandler);\n        }\n      };\n    }; // openWebsocket\n    openWebsocket();\n\n    return true;\n  };\n\n  // This high-level function updates the local store iff the web is changed successfully.\n  //\n  //  - deletions, insertions may be undefined or single statements or lists or formulae.\n  //      (may contain bnodes which can be indirectly identified by a where clause)\n  //\n  //  - callback is called as callback(uri, success, errorbody, xhr)\n  //\n  sparql.prototype.update = function (deletions, insertions, callback) {\n    try {\n      var kb = this.store;\n      var ds = !deletions ? [] : deletions instanceof _indexedFormula2.default ? deletions.statements : deletions instanceof Array ? deletions : [deletions];\n      var is = !insertions ? [] : insertions instanceof _indexedFormula2.default ? insertions.statements : insertions instanceof Array ? insertions : [insertions];\n      if (!(ds instanceof Array)) {\n        throw new Error('Type Error ' + (typeof ds === 'undefined' ? 'undefined' : _typeof(ds)) + ': ' + ds);\n      }\n      if (!(is instanceof Array)) {\n        throw new Error('Type Error ' + (typeof is === 'undefined' ? 'undefined' : _typeof(is)) + ': ' + is);\n      }\n      if (ds.length === 0 && is.length === 0) {\n        return callback(null, true); // success -- nothing needed to be done.\n      }\n      var doc = ds.length ? ds[0].why : is[0].why;\n      var control = this.patchControlFor(doc);\n      var startTime = Date.now();\n\n      var props = ['subject', 'predicate', 'object', 'why'];\n      var verbs = ['insert', 'delete'];\n      var clauses = { 'delete': ds, 'insert': is };\n      verbs.map(function (verb) {\n        clauses[verb].map(function (st) {\n          if (!doc.sameTerm(st.why)) {\n            throw new Error('update: destination ' + doc + ' inconsistent with delete quad ' + st.why);\n          }\n          props.map(function (prop) {\n            if (typeof st[prop] === 'undefined') {\n              throw new Error('update: undefined ' + prop + ' of statement.');\n            }\n          });\n        });\n      });\n\n      var protocol = this.editable(doc.uri, kb);\n      if (!protocol) {\n        throw new Error(\"Can't make changes in uneditable \" + doc);\n      }\n      var i;\n      var newSts;\n      var documentString;\n      var sz;\n      if (protocol.indexOf('SPARQL') >= 0) {\n        var bnodes = [];\n        if (ds.length) bnodes = this._statement_array_bnodes(ds);\n        if (is.length) bnodes = bnodes.concat(this._statement_array_bnodes(is));\n        var context = this._bnode_context(bnodes, doc);\n        var whereClause = this._context_where(context);\n        var query = '';\n        if (whereClause.length) {\n          // Is there a WHERE clause?\n          if (ds.length) {\n            query += 'DELETE { ';\n            for (i = 0; i < ds.length; i++) {\n              query += this.anonymizeNT(ds[i]) + '\\n';\n            }\n            query += ' }\\n';\n          }\n          if (is.length) {\n            query += 'INSERT { ';\n            for (i = 0; i < is.length; i++) {\n              query += this.anonymizeNT(is[i]) + '\\n';\n            }\n            query += ' }\\n';\n          }\n          query += whereClause;\n        } else {\n          // no where clause\n          if (ds.length) {\n            query += 'DELETE DATA { ';\n            for (i = 0; i < ds.length; i++) {\n              query += this.anonymizeNT(ds[i]) + '\\n';\n            }\n            query += ' } \\n';\n          }\n          if (is.length) {\n            if (ds.length) query += ' ; ';\n            query += 'INSERT DATA { ';\n            for (i = 0; i < is.length; i++) {\n              query += this.anonymizeNT(is[i]) + '\\n';\n            }\n            query += ' }\\n';\n          }\n        }\n        // Track pending upstream patches until they have fnished their callback\n        control.pendingUpstream = control.pendingUpstream ? control.pendingUpstream + 1 : 1;\n        if ('upstreamCount' in control) {\n          control.upstreamCount += 1; // count changes we originated ourselves\n          console.log('upstream count up to : ' + control.upstreamCount);\n        }\n\n        this._fire(doc.uri, query, function (uri, success, body, xhr) {\n          xhr.elapsedTime_ms = Date.now() - startTime;\n          console.log('    sparql: Return ' + (success ? 'success' : 'FAILURE ' + xhr.status) + ' elapsed ' + xhr.elapsedTime_ms + 'ms');\n          if (success) {\n            try {\n              kb.remove(ds);\n            } catch (e) {\n              success = false;\n              body = 'Remote Ok BUT error deleting ' + ds.length + ' from store!!! ' + e;\n            } // Add in any case -- help recover from weirdness??\n            for (var i = 0; i < is.length; i++) {\n              kb.add(is[i].subject, is[i].predicate, is[i].object, doc);\n            }\n          }\n\n          callback(uri, success, body, xhr);\n          control.pendingUpstream -= 1;\n          // When upstream patches have been sent, reload state if downstream waiting\n          if (control.pendingUpstream === 0 && control.downstreamAction) {\n            var downstreamAction = control.downstreamAction;\n            delete control.downstreamAction;\n            console.log('delayed downstream action:');\n            downstreamAction(doc);\n          }\n        });\n      } else if (protocol.indexOf('DAV') >= 0) {\n        // The code below is derived from Kenny's UpdateCenter.js\n        documentString;\n        var request = kb.any(doc, this.ns.link('request'));\n        if (!request) {\n          throw new Error('No record of our HTTP GET request for document: ' + doc);\n        } // should not happen\n        var response = kb.any(request, this.ns.link('response'));\n        if (!response) {\n          return null; // throw \"No record HTTP GET response for document: \"+doc\n        }\n        var content_type = kb.the(response, this.ns.httph('content-type')).value;\n\n        // prepare contents of revised document\n        newSts = kb.statementsMatching(undefined, undefined, undefined, doc).slice(); // copy!\n        for (i = 0; i < ds.length; i++) {\n          Util.RDFArrayRemove(newSts, ds[i]);\n        }\n        for (i = 0; i < is.length; i++) {\n          newSts.push(is[i]);\n        }\n\n        // serialize to te appropriate format\n        sz = Serializer(kb);\n        sz.suggestNamespaces(kb.namespaces);\n        sz.setBase(doc.uri); // ?? beware of this - kenny (why? tim)\n        switch (content_type) {\n          case 'application/rdf+xml':\n            documentString = sz.statementsToXML(newSts);\n            break;\n          case 'text/n3':\n          case 'text/turtle':\n          case 'application/x-turtle': // Legacy\n          case 'application/n3':\n            // Legacy\n            documentString = sz.statementsToN3(newSts);\n            break;\n          default:\n            throw new Error('Content-type ' + content_type + ' not supported for data write');\n        }\n\n        // Write the new version back\n\n        var candidateTarget = kb.the(response, this.ns.httph('content-location'));\n        var targetURI;\n        if (candidateTarget) {\n          targetURI = uriJoin(candidateTarget.value, targetURI);\n        }\n        var xhr = Util.XMLHTTPFactory();\n        xhr.options = {};\n        xhr.onreadystatechange = function () {\n          if (xhr.readyState === 4) {\n            // formula from sparqlUpdate.js, what about redirects?\n            var success = !xhr.status || xhr.status >= 200 && xhr.status < 300;\n            if (success) {\n              for (var i = 0; i < ds.length; i++) {\n                kb.remove(ds[i]);\n              }\n              for (i = 0; i < is.length; i++) {\n                kb.add(is[i].subject, is[i].predicate, is[i].object, doc);\n              }\n            }\n            callback(doc.uri, success, xhr.responseText);\n          }\n        };\n        xhr.open('PUT', targetURI, true);\n        // assume the server does PUT content-negotiation.\n        xhr.setRequestHeader('Content-type', content_type); // OK?\n        xhr.send(documentString);\n      } else {\n        if (protocol.indexOf('LOCALFILE') >= 0) {\n          try {\n            console.log('Writing back to local file\\n');\n            // See http://simon-jung.blogspot.com/2007/10/firefox-extension-file-io.html\n            // prepare contents of revised document\n            newSts = kb.statementsMatching(undefined, undefined, undefined, doc).slice(); // copy!\n            for (i = 0; i < ds.length; i++) {\n              Util.RDFArrayRemove(newSts, ds[i]);\n            }\n            for (i = 0; i < is.length; i++) {\n              newSts.push(is[i]);\n            }\n            // serialize to the appropriate format\n            documentString;\n            sz = Serializer(kb);\n            sz.suggestNamespaces(kb.namespaces);\n            sz.setBase(doc.uri); // ?? beware of this - kenny (why? tim)\n            var dot = doc.uri.lastIndexOf('.');\n            if (dot < 1) {\n              throw new Error('Rewriting file: No filename extension: ' + doc.uri);\n            }\n            var ext = doc.uri.slice(dot + 1);\n            switch (ext) {\n              case 'rdf':\n              case 'owl': // Just my experence   ...@@ we should keep the format in which it was parsed\n              case 'xml':\n                documentString = sz.statementsToXML(newSts);\n                break;\n              case 'n3':\n              case 'nt':\n              case 'ttl':\n                documentString = sz.statementsToN3(newSts);\n                break;\n              default:\n                throw new Error('File extension .' + ext + ' not supported for data write');\n            }\n            // Write the new version back\n            // create component for file writing\n            console.log('Writing back: <<<' + documentString + '>>>');\n            var filename = doc.uri.slice(7); // chop off   file://  leaving /path\n            // console.log(\"Writeback: Filename: \"+filename+\"\\n\")\n            var file = Components.classes['@mozilla.org/file/local;1'].createInstance(Components.interfaces.nsILocalFile);\n            file.initWithPath(filename);\n            if (!file.exists()) {\n              throw new Error('Rewriting file <' + doc.uri + '> but it does not exist!');\n            }\n            // {\n            // file.create( Components.interfaces.nsIFile.NORMAL_FILE_TYPE, 420)\n            // }\n            // create file output stream and use write/create/truncate mode\n            // 0x02 writing, 0x08 create file, 0x20 truncate length if exist\n            var stream = Components.classes['@mozilla.org/network/file-output-stream;1'].createInstance(Components.interfaces.nsIFileOutputStream);\n\n            // Various JS systems object to 0666 in struct mode as dangerous\n            stream.init(file, 0x02 | 0x08 | 0x20, parseInt('0666', 8), 0);\n\n            // write data to file then close output stream\n            stream.write(documentString, documentString.length);\n            stream.close();\n\n            for (i = 0; i < ds.length; i++) {\n              kb.remove(ds[i]);\n            }\n            for (i = 0; i < is.length; i++) {\n              kb.add(is[i].subject, is[i].predicate, is[i].object, doc);\n            }\n            callback(doc.uri, true, ''); // success!\n          } catch (e) {\n            callback(doc.uri, false, 'Exception trying to write back file <' + doc.uri + '>\\n'\n            // + tabulator.Util.stackString(e))\n            );\n          }\n        } else {\n          throw new Error(\"Unhandled edit method: '\" + protocol + \"' for \" + doc);\n        }\n      }\n    } catch (e) {\n      callback(undefined, false, 'Exception in update: ' + e + '\\n' + $rdf.Util.stackString(e));\n    }\n  }; // wnd update\n\n  // This suitable for an inital creation of a document\n  //\n  // data:    string, or array of statements\n  //\n  sparql.prototype.put = function (doc, data, content_type, callback) {\n    var documentString;\n    var kb = this.store;\n\n    if ((typeof data === 'undefined' ? 'undefined' : _typeof(data)) === _typeof('')) {\n      documentString = data;\n    } else {\n      // serialize to te appropriate format\n      var sz = Serializer(kb);\n      sz.suggestNamespaces(kb.namespaces);\n      sz.setBase(doc.uri);\n      switch (content_type) {\n        case 'application/rdf+xml':\n          documentString = sz.statementsToXML(data);\n          break;\n        case 'text/n3':\n        case 'text/turtle':\n        case 'application/x-turtle': // Legacy\n        case 'application/n3':\n          // Legacy\n          documentString = sz.statementsToN3(data);\n          break;\n        default:\n          throw new Error('Content-type ' + content_type + ' not supported for data PUT');\n      }\n    }\n    var xhr = Util.XMLHTTPFactory();\n    xhr.options = {};\n    xhr.onreadystatechange = function () {\n      if (xhr.readyState === 4) {\n        // formula from sparqlUpdate.js, what about redirects?\n        var success = !xhr.status || xhr.status >= 200 && xhr.status < 300;\n        if (success && typeof data !== 'string') {\n          data.map(function (st) {\n            kb.addStatement(st);\n          });\n          // kb.fetcher.requested[doc.uri] = true // as though fetched\n        }\n        if (success) {\n          delete kb.fetcher.nonexistant[doc.uri];\n          delete kb.fetcher.requested[doc.uri];\n          // @@ later we can fake it has been requestd if put gives us the header sand we save them.\n        }\n        callback(doc.uri, success, xhr.responseText, xhr);\n      }\n    };\n    xhr.open('PUT', doc.uri, true);\n    xhr.setRequestHeader('Content-type', content_type);\n    xhr.send(documentString);\n  };\n\n  // Reload a document.\n  //\n  // Fast and cheap, no metaata\n  // Measure times for the document\n  // Load it provisionally\n  // Don't delete the statemenst before the load, or it will leave a broken document\n  // in the meantime.\n\n  sparql.prototype.reload = function (kb, doc, callback) {\n    var startTime = Date.now();\n    // force sets no-cache and\n    kb.fetcher.nowOrWhenFetched(doc.uri, { force: true, noMeta: true, clearPreviousData: true }, function (ok, body, xhr) {\n      if (!ok) {\n        console.log('    ERROR reloading data: ' + body);\n        callback(false, 'Error reloading data: ' + body, xhr);\n      } else if (xhr.onErrorWasCalled || xhr.status !== 200) {\n        console.log('    Non-HTTP error reloading data! onErrorWasCalled=' + xhr.onErrorWasCalled + ' status: ' + xhr.status);\n        callback(false, 'Non-HTTP error reloading data: ' + body, xhr);\n      } else {\n        var elapsedTime_ms = Date.now() - startTime;\n        if (!doc.reloadTime_total) doc.reloadTime_total = 0;\n        if (!doc.reloadTime_count) doc.reloadTime_count = 0;\n        doc.reloadTime_total += elapsedTime_ms;\n        doc.reloadTime_count += 1;\n        console.log('    Fetch took ' + elapsedTime_ms + 'ms, av. of ' + doc.reloadTime_count + ' = ' + doc.reloadTime_total / doc.reloadTime_count + 'ms.');\n        callback(true);\n      }\n    });\n  };\n\n  sparql.prototype.oldReload = function (kb, doc, callback) {\n    var g2 = graph(); // A separate store to hold the data as we load it\n    var f2 = fetcher(g2);\n    var startTime = Date.now();\n    // force sets no-cache and\n    f2.nowOrWhenFetched(doc.uri, { force: true, noMeta: true, clearPreviousData: true }, function (ok, body, xhr) {\n      if (!ok) {\n        console.log('    ERROR reloading data: ' + body);\n        callback(false, 'Error reloading data: ' + body, xhr);\n      } else if (xhr.onErrorWasCalled || xhr.status !== 200) {\n        console.log('    Non-HTTP error reloading data! onErrorWasCalled=' + xhr.onErrorWasCalled + ' status: ' + xhr.status);\n        callback(false, 'Non-HTTP error reloading data: ' + body, xhr);\n      } else {\n        var sts1 = kb.statementsMatching(undefined, undefined, undefined, doc).slice(); // Take a copy!!\n        var sts2 = g2.statementsMatching(undefined, undefined, undefined, doc).slice();\n        console.log('    replacing ' + sts1.length + ' with ' + sts2.length + ' out of total statements ' + kb.statements.length);\n        kb.remove(sts1);\n        kb.add(sts2);\n        var elapsedTime_ms = Date.now() - startTime;\n        if (sts2.length === 0) {\n          console.log('????????????????? 0000000');\n        }\n        if (!doc.reloadTime_total) doc.reloadTime_total = 0;\n        if (!doc.reloadTime_count) doc.reloadTime_count = 0;\n        doc.reloadTime_total += elapsedTime_ms;\n        doc.reloadTime_count += 1;\n        console.log('    fetch took ' + elapsedTime_ms + 'ms, av. of ' + doc.reloadTime_count + ' = ' + doc.reloadTime_total / doc.reloadTime_count + 'ms.');\n        callback(true);\n      }\n    });\n  };\n  return sparql;\n}();\n\nmodule.exports = UpdateManager;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rdflib/lib/update-manager.js\n// module id = 87\n// module chunks = 0","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*\n * Updates-Via\n */\nvar namedNode = require('./data-factory').namedNode;\n\nvar UpdatesSocket = function () {\n  function UpdatesSocket(parent, via) {\n    _classCallCheck(this, UpdatesSocket);\n\n    this.parent = parent;\n    this.via = via;\n    this.connected = false;\n    this.pending = {};\n    this.subscribed = {};\n    this.socket = {};\n    try {\n      this.socket = new WebSocket(via);\n      this.socket.onopen = this.onOpen;\n      this.socket.onclose = this.onClose;\n      this.socket.onmessage = this.onMessage;\n      this.socket.onerror = this.onError;\n    } catch (error) {\n      this.onError(error);\n    }\n  }\n\n  _createClass(UpdatesSocket, [{\n    key: '_decode',\n    value: function _decode(q) {\n      var elt;\n      var i;\n      var k;\n      var r;\n      var ref;\n      var ref1;\n      var v;\n      r = {};\n      ref = function () {\n        var j, len, ref, results;\n        ref = q.split('&');\n        results = [];\n        for (j = 0, len = ref.length; j < len; j++) {\n          elt = ref[j];\n          results.push(elt.split('='));\n        }\n        return results;\n      }();\n      for (i in ref) {\n        elt = ref[i];\n        ref1 = [decodeURIComponent(elt[0]), decodeURIComponent(elt[1])];\n        k = ref1[0];\n        v = ref1[1];\n        if (r[k] == null) {\n          r[k] = [];\n        }\n        r[k].push(v);\n      }\n      return r;\n    }\n  }, {\n    key: '_send',\n    value: function _send(method, uri, data) {\n      var base, message;\n      message = [method, uri, data].join(' ');\n      return typeof (base = this.socket).send === 'function' ? base.send(message) : void 0;\n    }\n  }, {\n    key: '_subscribe',\n    value: function _subscribe(uri) {\n      this._send('sub', uri, '');\n      this.subscribed[uri] = true;\n      return this.subscribed[uri];\n    }\n  }, {\n    key: 'onClose',\n    value: function onClose(e) {\n      var uri;\n      this.connected = false;\n      for (uri in this.subscribed) {\n        this.pending[uri] = true;\n      }\n      this.subscribed = {};\n      return this.subscribed;\n    }\n  }, {\n    key: 'onError',\n    value: function onError(e) {\n      throw new Error('onError' + e);\n    }\n  }, {\n    key: 'onMessage',\n    value: function onMessage(e) {\n      var base, message;\n      message = e.data.split(' ');\n      if (message[0] === 'ping') {\n        return typeof (base = this.socket).send === 'function' ? base.send('pong ' + message.slice(1).join(' ')) : void 0;\n      } else if (message[0] === 'pub') {\n        return this.parent.onUpdate(message[1], this._decode(message[2]));\n      }\n    }\n  }, {\n    key: 'onOpen',\n    value: function onOpen(e) {\n      var results, uri;\n      this.connected = true;\n      results = [];\n      for (uri in this.pending) {\n        delete this.pending[uri];\n        results.push(this._subscribe(uri));\n      }\n      return results;\n    }\n  }, {\n    key: 'subscribe',\n    value: function subscribe(uri) {\n      if (this.connected) {\n        return this._subscribe(uri);\n      } else {\n        this.pending[uri] = true;\n        return this.pending[uri];\n      }\n    }\n  }]);\n\n  return UpdatesSocket;\n}();\n\nvar UpdatesVia = function () {\n  function UpdatesVia(fetcher) {\n    _classCallCheck(this, UpdatesVia);\n\n    this.fetcher = fetcher;\n    this.graph = {};\n    this.via = {};\n    this.fetcher.addCallback('headers', this.onHeaders);\n  }\n\n  _createClass(UpdatesVia, [{\n    key: 'onHeaders',\n    value: function onHeaders(d) {\n      var etag, uri, via;\n      if (d.headers == null) {\n        return true;\n      }\n      if (typeof WebSocket === 'undefined' || WebSocket === null) {\n        return true;\n      }\n      etag = d.headers['etag'];\n      via = d.headers['updates-via'];\n      uri = d.uri;\n      if (etag && via) {\n        this.graph[uri] = {\n          etag: etag,\n          via: via\n        };\n        this.register(via, uri);\n      }\n      return true;\n    }\n  }, {\n    key: 'onUpdate',\n    value: function onUpdate(uri, d) {\n      return this.fetcher.refresh(namedNode(uri));\n    }\n  }, {\n    key: 'register',\n    value: function register(via, uri) {\n      if (this.via[via] == null) {\n        this.via[via] = new UpdatesSocket(this, via);\n      }\n      return this.via[via].subscribe(uri);\n    }\n  }]);\n\n  return UpdatesVia;\n}();\n\nmodule.exports.UpdatesSocket = UpdatesSocket;\nmodule.exports.UpdatesVia = UpdatesVia;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rdflib/lib/updates-via.js\n// module id = 88\n// module chunks = 0","/*\n The MIT License (MIT)\n\n Copyright (c) 2016-17 Solid\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n If you would like to know more about the solid Solid project, please see\n https://github.com/solid/solid\n */\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar RelyingParty = require('oidc-rp');\n\n// URI parameter types\nvar HASH = 'hash';\nvar QUERY = 'query';\n\n// AuthenticationRequest sending methods\nvar REDIRECT = 'redirect';\n\nvar ClientAuthOIDC = function () {\n  /**\n   * @constructor\n   * @param [options={}]\n   * @param [options.window=Window] Optionally inject global browser window\n   * @param [options.localStorage=localStorage] Optionally inject localStorage\n   */\n  function ClientAuthOIDC() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, ClientAuthOIDC);\n\n    this.window = options.window || global.window;\n    this.localStorage = options.localStorage || global.localStorage;\n    this.currentClient = null;\n    this.providerUri = null;\n    this.webId = null;\n    this.idToken = null;\n    this.accessToken = null;\n    this.method = REDIRECT; // only redirect is currently supported\n  }\n\n  _createClass(ClientAuthOIDC, [{\n    key: 'initEventListeners',\n    value: function initEventListeners(window) {\n      window.addEventListener('message', this.onMessage.bind(this));\n    }\n\n    /**\n     * Returns the current window's URI\n     * @return {string}\n     */\n\n  }, {\n    key: 'currentLocation',\n    value: function currentLocation() {\n      var window = this.window;\n      return window.location.href;\n    }\n  }, {\n    key: 'currentUser',\n    value: function currentUser() {\n      if (this.webId) {\n        return Promise.resolve(this.webId);\n      }\n      // Attempt to find a provider based on the 'state' param of the current URI\n      var providerUri = this.providerFromCurrentUri();\n      if (providerUri) {\n        return this.login(providerUri);\n      } else {\n        return Promise.resolve(null);\n      }\n    }\n\n    /**\n     * Extracts and returns the `state` query or hash fragment param from a uri\n     * @param uri {string}\n     * @param uriType {string} 'hash' or QUERY\n     * @return {string|null} Value of the `state` query or hash fragment param\n     */\n\n  }, {\n    key: 'extractState',\n    value: function extractState(uri) {\n      var uriType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : HASH;\n\n      if (!uri) {\n        return null;\n      }\n      var uriObj = new URL(uri);\n      var state = void 0;\n      if (uriType === HASH) {\n        var hash = uriObj.hash || '#';\n        var params = new URLSearchParams(hash.substr(1));\n        state = params.get('state');\n      }\n      if (uriType === QUERY) {\n        state = uriObj.searchParams.get('state');\n      }\n      return state;\n    }\n  }, {\n    key: 'keyByProvider',\n    value: function keyByProvider() {\n      var providerUri = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.providerUri;\n\n      return 'oidc.rp.by-provider.' + providerUri;\n    }\n  }, {\n    key: 'keyByState',\n    value: function keyByState(state) {\n      if (!state) {\n        throw new TypeError('No state provided to keyByState()');\n      }\n      return 'oidc.rp.by-state.' + state;\n    }\n\n    /**\n     * @param providerUri {string}\n     * @return {Promise<RelyingParty>}\n     */\n\n  }, {\n    key: 'loadOrRegisterClient',\n    value: function loadOrRegisterClient(providerUri) {\n      var _this = this;\n\n      this.currentClient = null;\n      return this.loadClient(providerUri).then(function (loadedClient) {\n        if (loadedClient) {\n          _this.currentClient = loadedClient;\n          return loadedClient;\n        } else {\n          _this.currentClient = null;\n          return _this.registerClient(providerUri);\n        }\n      });\n    }\n\n    /**\n     * @param providerUri {string}\n     * @return {Promise<RelyingParty>}\n     */\n\n  }, {\n    key: 'loadClient',\n    value: function loadClient(providerUri) {\n      if (!providerUri) {\n        var error = new Error('Cannot load or register client, providerURI missing');\n        return Promise.reject(error);\n      }\n      if (this.currentClient && this.currentClient.provider.url === providerUri) {\n        // Client is cached, return it\n        return Promise.resolve(this.currentClient);\n      }\n\n      // Check for client config stored locally\n      var key = this.keyByProvider(providerUri);\n      var clientConfig = localStorage.getItem(key);\n      if (clientConfig) {\n        clientConfig = JSON.parse(clientConfig);\n        return RelyingParty.from(clientConfig);\n      } else {\n        return Promise.resolve(null);\n      }\n    }\n\n    /**\n     * Loads a provider's URI from localStorage, given a `state` uri param.\n     * @param state {string}\n     * @return {string}\n     */\n\n  }, {\n    key: 'loadProvider',\n    value: function loadProvider(state) {\n      var key = this.keyByState(state);\n      var providerUri = localStorage.getItem(key);\n      return providerUri;\n    }\n\n    /**\n     * Resolves to the WebID URI of the current user. Intended to be called\n     * on page load (in case the user is already authenticated), as well as\n     * triggered when the user initiates login explicitly (such as by pressing\n     * a Login button, etc).\n     * @param [providerUri] {string} Provider URI, result of a Provider Selection\n     *   operation (that the app developer has provided). If `null`, the\n     *   `selectProvider()` step will kick off its own UI for Provider Selection.\n     * @return {Promise<string>} Resolves to the logged in user's WebID URI\n     */\n\n  }, {\n    key: 'login',\n    value: function login(providerUri) {\n      this.clearCurrentUser();\n      var selectProvider = this.selectProvider.bind(this);\n      var loadOrRegisterClient = this.loadOrRegisterClient.bind(this);\n      var validateOrSendAuthRequest = this.validateOrSendAuthRequest.bind(this);\n\n      return Promise.resolve(providerUri).then(selectProvider).then(loadOrRegisterClient).then(validateOrSendAuthRequest);\n    }\n  }, {\n    key: 'clearCurrentUser',\n    value: function clearCurrentUser() {\n      this.webId = null;\n      this.accessToken = null;\n      this.idToken = null;\n    }\n  }, {\n    key: 'logout',\n    value: function logout() {\n      this.clearCurrentUser();\n      if (!this.currentClient) {\n        return Promise.resolve(null);\n      }\n      return this.currentClient.logout();\n    }\n\n    /**\n     * Resolves to the URI of an OIDC identity provider, from one of the following:\n     *\n     * 1. If a `providerUri` was passed in by the app developer (perhaps they\n     *   developed a custom 'Select Provider' UI), that value is returned.\n     * 2. The current `this.providerUri` cached on this auth client, if present\n     * 3. The `state` parameter of the current window URI (in case the user has\n     *   gone through the login workflow and this page is the redirect back).\n     * 3. Lastly, if none of the above worked, the clients opens its own\n     *   'Select Provider' UI popup window, and sets up an event listener (for\n     *   when a user makes a selection.\n     *\n     * @param [providerUri] {string} If the provider URI is already known to the\n     *   app developer, just pass it through, no need to take further action.\n     * @return {Promise<string>}\n     */\n\n  }, {\n    key: 'selectProvider',\n    value: function selectProvider(providerUri) {\n      if (providerUri) {\n        return Promise.resolve(providerUri);\n      }\n      // Attempt to find a provider based on the 'state' param of the current URI\n      providerUri = this.providerFromCurrentUri();\n      if (providerUri) {\n        return Promise.resolve(providerUri);\n      }\n      // Lastly, kick off a Select Provider popup window workflow\n      return this.providerFromUI();\n    }\n\n    /**\n     * Parses the current URI's `state` hash param and attempts to load a\n     * previously saved providerUri from it. If no `state` param is present, or if\n     * no providerUri has been saved, returns `null`.\n     *\n     * @return {string|null} Provider URI, if present\n     */\n\n  }, {\n    key: 'providerFromCurrentUri',\n    value: function providerFromCurrentUri() {\n      var currentUri = this.currentLocation();\n      var stateParam = this.extractState(currentUri, HASH);\n      if (stateParam) {\n        return this.loadProvider(stateParam);\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: 'providerFromUI',\n    value: function providerFromUI() {\n      console.log('No state param, getting provider from UI');\n      this.initEventListeners(window);\n      // Get the provider from the UI somehow\n    }\n\n    /**\n     * Tests whether the current URI is the result of an AuthenticationRequest\n     * return redirect.\n     * @return {boolean}\n     */\n\n  }, {\n    key: 'currentUriHasAuthResponse',\n    value: function currentUriHasAuthResponse() {\n      var currentUri = this.currentLocation();\n      var stateParam = this.extractState(currentUri, HASH);\n      return !!stateParam;\n    }\n\n    /**\n     * Redirects the current window to the given uri.\n     * @param uri {string}\n     */\n\n  }, {\n    key: 'redirectTo',\n    value: function redirectTo(uri) {\n      this.window.location = uri;\n    }\n\n    /**\n     * @private\n     * @param client {RelyingParty}\n     * @throws {Error}\n     * @return {Promise<null>}\n     */\n\n  }, {\n    key: 'sendAuthRequest',\n    value: function sendAuthRequest(client) {\n      var _this2 = this;\n\n      var options = {};\n      var providerUri = client.provider.url;\n      return client.createRequest(options, this.localStorage).then(function (authUri) {\n        var state = _this2.extractState(authUri, QUERY);\n        if (!state) {\n          throw new Error('Invalid authentication request uri');\n        }\n        _this2.saveProviderByState(state, providerUri);\n        if (_this2.method === REDIRECT) {\n          _this2.redirectTo(authUri);\n        }\n      });\n    }\n\n    /**\n     * @param client {RelyingParty}\n     * @throws {Error}\n     * @return {Promise<null|string>} Resolves to either an AuthenticationRequest\n     *   being sent (`null`), or to the webId of the current user (extracted\n     *   from the authentication response).\n     */\n\n  }, {\n    key: 'validateOrSendAuthRequest',\n    value: function validateOrSendAuthRequest(client) {\n      if (!client) {\n        var error = new Error('Could not load or register a RelyingParty client');\n        return Promise.reject(error);\n      }\n\n      if (this.currentUriHasAuthResponse()) {\n        return this.initUserFromResponse(client);\n      }\n\n      return this.sendAuthRequest(client);\n    }\n\n    /**\n     * Validates the auth response in the current uri, initializes the current\n     * user's ID Token and Access token, and returns the\n     * @param client {RelyingParty}\n     * @throws {Error}\n     * @returns {Promise<string>}\n     */\n\n  }, {\n    key: 'initUserFromResponse',\n    value: function initUserFromResponse(client) {\n      var _this3 = this;\n\n      return client.validateResponse(this.currentLocation(), this.localStorage).then(function (response) {\n        _this3.idToken = response.params.id_token;\n        _this3.accessToken = response.params.access_token;\n        return _this3.extractAndValidateWebId(response.decoded);\n      }).catch(function (error) {\n        if (error.message === 'Cannot resolve signing key for ID Token.') {\n          console.log('ID Token found, but could not validate. Provider likely has changed their public keys. Please retry login.');\n          return null;\n        } else {\n          throw error;\n        }\n      });\n    }\n\n    /**\n     * @param idToken {IDToken}\n     * @throws {Error}\n     * @return {string}\n     */\n\n  }, {\n    key: 'extractAndValidateWebId',\n    value: function extractAndValidateWebId(idToken) {\n      var webId = idToken.payload.sub;\n      this.webId = webId;\n      return webId;\n    }\n\n    /**\n     * @param providerUri {string}\n     * @param [options={}]\n     * @param [options.redirectUri] {string} Defaults to window.location.href\n     * @param [options.scope='openid profile'] {string}\n     * @param [options.store=localStorage]\n     * @throws {TypeError} If providerUri is missing\n     * @return {Promise<RelyingParty>} Registered RelyingParty client instance\n     */\n\n  }, {\n    key: 'registerClient',\n    value: function registerClient(providerUri) {\n      var _this4 = this;\n\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      return this.registerPublicClient(providerUri, options).then(function (registeredClient) {\n        _this4.storeClient(registeredClient, providerUri);\n        return registeredClient;\n      });\n    }\n\n    /**\n     * @private\n     * @param providerUri {string}\n     * @param [options={}]\n     * @param [options.redirectUri] {string} Defaults to window.location.href\n     * @param [options.scope='openid profile'] {string}\n     * @param [options.store=localStorage]\n     * @throws {TypeError} If providerUri is missing\n     * @return {Promise<RelyingParty>} Registered RelyingParty client instance\n     */\n\n  }, {\n    key: 'registerPublicClient',\n    value: function registerPublicClient(providerUri) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      console.log('Registering public client...');\n      if (!providerUri) {\n        throw new TypeError('Cannot registerClient auth client, missing providerUri');\n      }\n      var redirectUri = options.redirectUri || this.currentLocation();\n      this.redirectUri = redirectUri;\n      var registration = {\n        issuer: providerUri,\n        grant_types: ['implicit'],\n        redirect_uris: [redirectUri],\n        response_types: ['id_token token'],\n        scope: options.scope || 'openid profile'\n      };\n      var rpOptions = {\n        defaults: {\n          authenticate: {\n            redirect_uri: redirectUri,\n            response_type: 'id_token token'\n          }\n        },\n        store: options.store || localStorage\n      };\n      return RelyingParty.register(providerUri, registration, rpOptions);\n    }\n  }, {\n    key: 'onMessage',\n    value: function onMessage(event) {\n      console.log('Auth client received event: ', event);\n      if (!event || !event.data) {\n        return;\n      }\n      switch (event.data.event_type) {\n        case 'providerSelected':\n          console.log('Provider selected: ', event.data.value);\n          break;\n        default:\n          console.error('onMessage - unknown event type: ', event);\n          break;\n      }\n    }\n\n    /**\n     * @param state {string}\n     * @param providerUri {string}\n     * @throws {Error}\n     */\n\n  }, {\n    key: 'saveProviderByState',\n    value: function saveProviderByState(state, providerUri) {\n      if (!state) {\n        throw new Error('Cannot save providerUri - state not provided');\n      }\n      var key = this.keyByState(state);\n      localStorage.setItem(key, providerUri);\n    }\n\n    /**\n     * Stores a RelyingParty client for a given provider in localStorage.\n     * @param client {RelyingParty}\n     * @param providerUri {string}\n     */\n\n  }, {\n    key: 'storeClient',\n    value: function storeClient(client, providerUri) {\n      this.currentClient = client;\n      localStorage.setItem(this.keyByProvider(providerUri), client.serialize());\n    }\n  }]);\n\n  return ClientAuthOIDC;\n}();\n\nmodule.exports = ClientAuthOIDC;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/solid-auth-oidc/lib/index.js\n// module id = 89\n// module chunks = 0","'use strict';\n\nmodule.exports = require('./RelyingParty');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/oidc-rp/lib/index.js\n// module id = 90\n// module chunks = 0","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Dependencies\n */\nvar assert = require('assert');\nvar fetch = require('node-fetch');\nvar Headers = fetch.Headers ? fetch.Headers : global.Headers;\n\nvar _require = require('json-document'),\n    JSONSchema = _require.JSONSchema,\n    JSONDocument = _require.JSONDocument;\n\nvar _require2 = require('jose'),\n    JWKSet = _require2.JWKSet;\n\nvar AuthenticationRequest = require('./AuthenticationRequest');\nvar AuthenticationResponse = require('./AuthenticationResponse');\nvar RelyingPartySchema = require('./RelyingPartySchema');\n// const Session = require('./Session')\n\n/**\n * RelyingParty\n *\n * @class\n * Client interface for OpenID Connect Relying Party.\n *\n * @example\n *  let client = RelyingParty({\n *    provider: {\n *      name: 'Anvil Research, Inc.',\n *      url: 'https://forge.anvil.io'\n *      // configuration\n *      // jwks\n *    },\n *    authenticate: {\n *      response_type: 'code',\n *      display: 'popup',\n *      scope: 'openid profile email'\n *    },\n *    register: {\n *      client_name: 'Example',\n *      client_uri: 'https://example.com',\n *      logo_uri: 'https://example.com/assets/logo.png',\n *      redirect_uris: ['https://app.example.com/callback'],\n *      response_types: ['code', 'code id_token token'],\n *      grant_types: ['authorization_code'],\n *      default_max_age: 7200,\n *      post_logout_redirect_uris: ['https://app.example.com']\n *    },\n *    registration: {\n *      // if you have it saved somewhere\n *    },\n *    store: localStorage || req.session,\n *    popup: { width: 400, height: 300 }\n *  })\n *\n *  client.discover() => Promise\n *  client.jwks() => Promise\n *  client.authenticate()\n *  client.authenticateUri()\n *  client.validateResponse(uri) => Promise\n *  client.userinfo() => Promise\n *  client.logout()\n */\n\nvar RelyingParty = function (_JSONDocument) {\n  _inherits(RelyingParty, _JSONDocument);\n\n  function RelyingParty() {\n    _classCallCheck(this, RelyingParty);\n\n    return _possibleConstructorReturn(this, (RelyingParty.__proto__ || Object.getPrototypeOf(RelyingParty)).apply(this, arguments));\n  }\n\n  _createClass(RelyingParty, [{\n    key: 'discover',\n\n\n    /**\n     * Discover\n     *\n     * @description Fetches the issuer's OpenID Configuration.\n     * @returns {Promise<Object>} Resolves with the provider configuration response\n     */\n    value: function discover() {\n      var _this2 = this;\n\n      try {\n        var issuer = this.provider.url;\n        var endpoint = '.well-known/openid-configuration';\n\n        assert(issuer, 'RelyingParty provider must define \"url\"');\n\n        return fetch(issuer + '/' + endpoint)\n        //.then(status(200))\n        .then(function (response) {\n          return response.json().then(function (json) {\n            return _this2.provider.configuration = json;\n          });\n        });\n      } catch (error) {\n        return Promise.reject(error);\n      }\n    }\n\n    /**\n     * Register\n     *\n     * @description Register's a client with provider as a Relying Party\n     *\n     * @param options {Object}\n     * @returns {Promise<Object>} Resolves with the registration response object\n     */\n\n  }, {\n    key: 'register',\n    value: function register(options) {\n      var _this3 = this;\n\n      try {\n        var configuration = this.provider.configuration;\n\n        assert(configuration, 'OpenID Configuration is not initialized.');\n        assert(configuration.registration_endpoint, 'OpenID Configuration is missing registration_endpoint.');\n\n        var uri = configuration.registration_endpoint;\n        var method = 'post';\n        var headers = new Headers({ 'Content-Type': 'application/json' });\n        var params = this.defaults.register;\n        var body = JSON.stringify(Object.assign({}, params, options));\n\n        return fetch(uri, { method: method, headers: headers, body: body })\n        //.then(status)\n        .then(function (response) {\n          return response.json().then(function (json) {\n            return _this3.registration = json;\n          });\n        });\n      } catch (error) {\n        return Promise.reject(error);\n      }\n    }\n  }, {\n    key: 'serialize',\n    value: function serialize() {\n      return JSON.stringify(this);\n    }\n\n    /**\n     * jwks\n     *\n     * @description Promises the issuer's JWK Set.\n     * @returns {Promise}\n     */\n\n  }, {\n    key: 'jwks',\n    value: function jwks() {\n      var _this4 = this;\n\n      try {\n        var configuration = this.provider.configuration;\n\n        assert(configuration, 'OpenID Configuration is not initialized.');\n        assert(configuration.jwks_uri, 'OpenID Configuration is missing jwks_uri.');\n\n        var uri = configuration.jwks_uri;\n\n        return fetch(uri)\n        //.then(status(200))\n        .then(function (response) {\n          return response.json().then(function (json) {\n            return JWKSet.importKeys(json);\n          }).then(function (jwks) {\n            return _this4.provider.jwks = jwks;\n          });\n        });\n      } catch (error) {\n        return Promise.reject(error);\n      }\n    }\n\n    /**\n     * createRequest\n     *\n     * @param options {Object} Authn request options hashmap\n     * @param options.redirect_uri {string}\n     * @param options.response_type {string} e.g. 'code' or 'id_token token'\n     * @param session {Session|Storage} req.session or localStorage\n     * @returns {Promise<string>} Authn request URL\n     */\n\n  }, {\n    key: 'createRequest',\n    value: function createRequest(options, session) {\n      return AuthenticationRequest.create(this, options, session || this.store);\n    }\n\n    /**\n     * Validate Response\n     *\n     * @param response {string} req.query or req.body.text\n     * @param session {Session|Storage} req.session or localStorage or similar\n     * @returns {Promise<Object>} Custom response object, with `params` and\n     *   `mode` properties\n     */\n\n  }, {\n    key: 'validateResponse',\n    value: function validateResponse(response, session) {\n      session = session || this.store;\n\n      if (response.match(/^http(s?):\\/\\//)) {\n        response = { rp: this, redirect: response, session: session };\n      } else {\n        response = { rp: this, body: response, session: session };\n      }\n\n      return AuthenticationResponse.validateResponse(response);\n    }\n\n    /**\n     * userinfo\n     *\n     * @description Promises the authenticated user's claims.\n     * @returns {Promise}\n     */\n\n  }, {\n    key: 'userinfo',\n    value: function userinfo() {\n      try {\n        var configuration = this.provider.configuration;\n\n        assert(configuration, 'OpenID Configuration is not initialized.');\n        assert(configuration.registration_endpoint, 'OpenID Configuration is missing registration_endpoint.');\n\n        var uri = configuration.userinfo_endpoint;\n        var access_token = this.session.access_token;\n\n        assert(access_token, 'Missing access token.');\n\n        var headers = new Headers({\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + access_token\n        });\n\n        return fetch(uri, { headers: headers }).then(status(200)).then(function (response) {\n          return response.json();\n        });\n      } catch (error) {\n        return Promise.reject(error);\n      }\n    }\n\n    /**\n     * Logout\n     *\n     * @returns {Promise}\n     */\n\n  }, {\n    key: 'logout',\n    value: function logout() {\n      var configuration = void 0;\n      try {\n        configuration = this.provider.configuration;\n        assert(configuration, 'OpenID Configuration is not initialized.');\n        assert(configuration.end_session_endpoint, 'OpenID Configuration is missing end_session_endpoint.');\n      } catch (error) {\n        return Promise.reject(error);\n      }\n\n      var uri = configuration.end_session_endpoint;\n      var method = 'get';\n\n      return fetch(uri, { method: method });\n\n      // TODO: Validate `frontchannel_logout_uri` if necessary\n      /**\n       * frontchannel_logout_uri - OPTIONAL. RP URL that will cause the RP to log\n       * itself out when rendered in an iframe by the OP.\n       *\n       * An `iss` (issuer) query parameter and a `sid`\n       * (session ID) query parameter MAY be included by the OP to enable the RP\n       * to validate the request and to determine which of the potentially\n       * multiple sessions is to be logged out. If a sid (session ID) query\n       * parameter is included, an iss (issuer) query parameter MUST also be\n       * included.\n       * @see https://openid.net/specs/openid-connect-frontchannel-1_0.html#RPLogout\n       */\n    }\n  }], [{\n    key: 'from',\n\n\n    /**\n     * from\n     *\n     * @description\n     * Create a RelyingParty instance from a previously registered client.\n     *\n     * @param {Object} data\n     * @returns {Promise<RelyingParty>}\n     */\n    value: function from(data) {\n      var rp = new RelyingParty(data);\n      var validation = rp.validate();\n\n      // schema validation\n      if (!validation.valid) {\n        return Promise.reject(validation);\n      }\n\n      var jwks = rp.provider.jwks;\n\n      // request the JWK Set if missing\n      if (!jwks) {\n        return rp.jwks().then(function () {\n          return rp;\n        });\n      }\n\n      // otherwise import the JWK Set to webcrypto\n      return JWKSet.importKeys(jwks).then(function (jwks) {\n        rp.provider.jwks = jwks;\n        return rp;\n      });\n    }\n\n    /**\n     * register\n     *\n     * @param issuer {string} Provider URL\n     * @param registration {Object} Client dynamic registration options\n     * @param options {Object}\n     * @param options.defaults\n     * @param [options.store] {Session|Storage}\n     * @returns {Promise<RelyingParty>} RelyingParty instance, registered.\n     */\n\n  }, {\n    key: 'register',\n    value: function register(issuer, registration, options) {\n      var rp = new RelyingParty({\n        provider: { url: issuer },\n        defaults: Object.assign({}, options.defaults),\n        store: options.store\n      });\n\n      return Promise.resolve().then(function () {\n        return rp.discover();\n      }).catch(function (err) {\n        console.error('Error in RP register() > discover() step:', err);\n        throw err;\n      }).then(function () {\n        return rp.jwks();\n      }).catch(function (err) {\n        console.error('Error in RP register() > jwks() step:', err);\n        throw err;\n      }).then(function () {\n        return rp.register(registration);\n      }).catch(function (err) {\n        console.error('Error in RP register() > register() step:', err);\n        throw err;\n      }).then(function () {\n        return rp;\n      });\n    }\n  }, {\n    key: 'schema',\n\n\n    /**\n     * Schema\n     */\n    get: function get() {\n      return RelyingPartySchema;\n    }\n  }]);\n\n  return RelyingParty;\n}(JSONDocument);\n\nmodule.exports = RelyingParty;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/oidc-rp/lib/RelyingParty.js\n// module id = 91\n// module chunks = 0","'use strict';\n\n// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nfunction isBuffer(b) {\n  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {\n    return global.Buffer.isBuffer(b);\n  }\n  return !!(b != null && b._isBuffer);\n}\n\n// based on node assert, original notice:\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar util = require('util/');\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar pSlice = Array.prototype.slice;\nvar functionsHaveNames = (function () {\n  return function foo() {}.name === 'foo';\n}());\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!util.isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n};\n\n// assert.AssertionError instanceof Error\nutil.inherits(assert.AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames || !util.isFunction(something)) {\n    return util.inspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new assert.AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', assert.ok);\n}\nassert.ok = ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n};\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', assert.notEqual);\n  }\n};\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n  }\n};\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);\n  }\n};\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (util.isDate(actual) && util.isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (util.isPrimitive(a) || util.isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', assert.strictEqual);\n  }\n};\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', assert.notStrictEqual);\n  }\n};\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && util.isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\nassert.throws = function(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n};\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n};\n\nassert.ifError = function(err) { if (err) throw err; };\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/assert/assert.js\n// module id = 92\n// module chunks = 0","module.exports = fetch;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"fetch\"\n// module id = 93\n// module chunks = 0","'use strict';\n\nmodule.exports = {\n  Formats: require('./Formats'),\n  Initializer: require('./Initializer'),\n  JSONDocument: require('./JSONDocument'),\n  JSONMapping: require('./JSONMapping'),\n  JSONPatch: require('./JSONPatch'),\n  JSONPointer: require('./JSONPointer'),\n  JSONSchema: require('./JSONSchema'),\n  Validator: require('./Validator')\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-document/lib/index.js\n// module id = 94\n// module chunks = 0","'use strict';\n\n/**\n * JSON Schema Formats\n *\n * TODO\n * Is there a good way to express these over multiple lines with comments\n * for easier debugging and auditing?\n */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar DATETIME_REGEXP = /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d[t\\s][0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?(?:z|[+-]\\d\\d:\\d\\d)$/i;\nvar URI_REGEXP = /^(?:[a-z][a-z0-9+-.]*)?(?:\\:|\\/)\\/?[^\\s]*$/i;\nvar EMAIL_REGEXP = /^[a-z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?)*$/i;\nvar IPV4_REGEXP = /^(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)$/;\nvar IPV6_REGEXP = /^\\s*(?:(?:(?:[0-9a-f]{1,4}:){7}(?:[0-9a-f]{1,4}|:))|(?:(?:[0-9a-f]{1,4}:){6}(?::[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){5}(?:(?:(?::[0-9a-f]{1,4}){1,2})|:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){4}(?:(?:(?::[0-9a-f]{1,4}){1,3})|(?:(?::[0-9a-f]{1,4})?:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){3}(?:(?:(?::[0-9a-f]{1,4}){1,4})|(?:(?::[0-9a-f]{1,4}){0,2}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){2}(?:(?:(?::[0-9a-f]{1,4}){1,5})|(?:(?::[0-9a-f]{1,4}){0,3}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){1}(?:(?:(?::[0-9a-f]{1,4}){1,6})|(?:(?::[0-9a-f]{1,4}){0,4}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?::(?:(?:(?::[0-9a-f]{1,4}){1,7})|(?:(?::[0-9a-f]{1,4}){0,5}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(?:%.+)?\\s*$/i;\nvar HOSTNAME_REGEXP = /^[a-z](?:(?:[-0-9a-z]{0,61})?[0-9a-z])?(\\.[a-z](?:(?:[-0-9a-z]{0,61})?[0-9a-z])?)*$/i;\n\n/**\n * Formats\n */\n\nvar Formats = function () {\n  function Formats() {\n    _classCallCheck(this, Formats);\n  }\n\n  _createClass(Formats, [{\n    key: 'register',\n\n\n    /**\n     * Register\n     *\n     * @description\n     * Register a new mapping from named format to RegExp instance\n     *\n     * TODO\n     * We can do some extra validation of the RegExp to\n     * ensure it's the acceptable subset of RegExps allowed\n     * by JSON Schema.\n     *\n     * @param {string} name\n     * @param {RegExp} pattern\n     * @returns {RegExp}\n     */\n    value: function register(name, pattern) {\n      // verify name is a string\n      if (typeof name !== 'string') {\n        throw new Error('Format name must be a string');\n      }\n\n      // cast a string to RegExp\n      if (typeof pattern === 'string') {\n        pattern = new RegExp(pattern);\n      }\n\n      return this[name] = pattern;\n    }\n\n    /**\n     * Resolve\n     *\n     * @description\n     * Given a format name, return the corresponding registered validation. In the\n     * event a format is not registered, throw an error.\n     *\n     * @param {string} name\n     * @returns {RegExp}\n     */\n\n  }, {\n    key: 'resolve',\n    value: function resolve(name) {\n      var format = this[name];\n\n      if (!format) {\n        throw new Error('Unknown JSON Schema format.');\n      }\n\n      return format;\n    }\n\n    /**\n     * Test\n     *\n     * @description\n     * Test that a value conforms to a format.\n     *\n     * @param {string} name\n     * @param {string} value\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: 'test',\n    value: function test(name, value) {\n      var format = this.resolve(name);\n      return format.test(value);\n    }\n  }], [{\n    key: 'initialize',\n\n\n    /**\n     * Initialize\n     *\n     * @description\n     * Create a new Formats instance and register default formats\n     *\n     * @returns {Formats}\n     */\n    value: function initialize() {\n      var formats = new Formats();\n      formats.register('date-time', DATETIME_REGEXP);\n      formats.register('uri', URI_REGEXP);\n      formats.register('email', EMAIL_REGEXP);\n      formats.register('ipv4', IPV4_REGEXP);\n      formats.register('ipv6', IPV6_REGEXP);\n      formats.register('hostname', HOSTNAME_REGEXP);\n      return formats;\n    }\n  }]);\n\n  return Formats;\n}();\n\n/**\n * Export\n */\n\n\nmodule.exports = Formats.initialize();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-document/lib/Formats.js\n// module id = 95\n// module chunks = 0","'use strict';\n\n/**\n * Initializer\n */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Initializer = function () {\n  _createClass(Initializer, null, [{\n    key: 'compile',\n\n\n    /**\n     * Compile (static)\n     */\n    value: function compile(schema) {\n      var initializer = new Initializer(schema);\n      initializer.parse();\n      return initializer.compile();\n    }\n\n    /**\n     * Constructor\n     */\n\n  }]);\n\n  function Initializer(schema) {\n    _classCallCheck(this, Initializer);\n\n    this.schema = schema;\n  }\n\n  /**\n   * Parse\n   */\n\n\n  _createClass(Initializer, [{\n    key: 'parse',\n    value: function parse() {\n      var schema = this.schema;\n      var operations = this.operations = new Map();\n\n      function parser(schema, chain) {\n        var properties = schema.properties || {};\n\n        Object.keys(properties).forEach(function (key) {\n          var refchain = chain.concat([key]);\n          var descriptor = properties[key];\n\n          // operation\n          var operation = {\n            key: key,\n            fn: 'property',\n            ref: refchain.join('.'),\n            chain: refchain\n          };\n\n          // TODO:\n          // The repetitious nature of these conditionals is becoming absurd.\n          // Consider using Object.assign(operation, descriptor)\n          if (descriptor.private) {\n            operation.private = true;\n          }\n\n          if (descriptor.default) {\n            operation.default = descriptor.default;\n          }\n\n          if (descriptor.immutable) {\n            operation.immutable = true;\n          }\n\n          if (descriptor.set) {\n            operation.setter = descriptor.set;\n          }\n\n          if (descriptor.after) {\n            operation.after = descriptor.after;\n          }\n\n          // this descriptor is for a property\n          if (!descriptor.properties) {\n\n            // assignment\n            operations.set(refchain, operation);\n\n            // this is a nested schema\n          } else {\n            if (!operations.get(refchain)) {\n              operation.fn = 'ensureContainer';\n              operations.set(refchain, operation);\n            }\n\n            // recurse\n            parser(descriptor, refchain);\n          }\n        });\n      }\n\n      parser(schema, []);\n    }\n\n    /**\n     * Compile\n     */\n\n  }, {\n    key: 'compile',\n    value: function compile() {\n      var _this = this;\n\n      var block = 'options = options || {}\\n';\n\n      this.operations.forEach(function (operation) {\n        block += _this[operation.fn](operation);\n      });\n\n      return new Function('target', 'source', 'options', block);\n    }\n\n    /**\n     * Grammar\n     */\n\n    /**\n     * Property\n     */\n\n  }, {\n    key: 'property',\n    value: function property(operation) {\n      if (operation.private) {\n        return this.private(operation);\n      } else {\n        return this.assign(operation);\n      }\n    }\n\n    /**\n     * Private\n     */\n\n  }, {\n    key: 'private',\n    value: function _private(operation) {\n      return '\\n    if (options.private) {\\n      ' + this.assign(operation) + '\\n    }\\n    ';\n    }\n\n    /**\n     * Assign\n     */\n\n  }, {\n    key: 'assign',\n    value: function assign(operation) {\n      var assignment = void 0;\n\n      if (operation.setter) {\n        assignment = this.setterAssign(operation);\n      } else if (operation.immutable) {\n        assignment = this.immutableAssign(operation);\n      } else {\n        assignment = this.simpleAssign(operation);\n      }\n\n      assignment = '\\n    if (' + this.condition(operation) + ') {\\n      ' + assignment + '\\n    } ' + (operation.default ? this.defaults(operation) : '') + '\\n    ';\n\n      if (operation.after) {\n        assignment += this.afterAssign(operation);\n      }\n\n      return assignment;\n    }\n\n    /**\n     * Immutable assign\n     */\n\n  }, {\n    key: 'immutableAssign',\n    value: function immutableAssign(operation) {\n      var target = 'target';\n      var ref = operation.chain.slice(0, operation.chain.length - 1).join('.');\n\n      // add reference to nested property container\n      if (ref) {\n        target = target + '.' + ref;\n      }\n\n      return 'Object.defineProperty(' + target + ', \\'' + operation.key + '\\', {\\n        value: source.' + operation.ref + ',\\n        writable: ' + !operation.immutable + ',\\n        enumerable: true\\n      })';\n    }\n\n    /**\n     * Simple assign\n     */\n\n  }, {\n    key: 'simpleAssign',\n    value: function simpleAssign(operation) {\n      return 'target.' + operation.ref + ' = source.' + operation.ref;\n    }\n\n    /**\n     * Setter assign\n     */\n\n  }, {\n    key: 'setterAssign',\n    value: function setterAssign(operation) {\n      return 'target.' + operation.ref + ' = (' + operation.setter.toString() + ')(source)';\n    }\n\n    /**\n     * After assign\n     * TODO:\n     * These invocations should take place at the end of the\n     * generated function\n     */\n\n  }, {\n    key: 'afterAssign',\n    value: function afterAssign(operation) {\n      return '\\n    (' + operation.after.toString() + ').call(target, source)\\n    ';\n    }\n\n    /**\n     * Defaults\n     */\n\n  }, {\n    key: 'defaults',\n    value: function defaults(operation) {\n      // TODO:\n      // It's not optimal to inline the function definition\n      // because the function gets created each time the\n      // initializer function is run. Rather, we need to be\n      // able to reference functions by symbols/methods available to\n      // the definition scope.\n      if (typeof operation.default === 'function') {\n        operation.defaultString = '(' + operation.default.toString() + ')()';\n      } else {\n        operation.defaultString = JSON.stringify(operation.default);\n      }\n\n      return 'else if (options.defaults !== false) {\\n      ' + (operation.immutable ? this.immutableDefault(operation) : this.simpleDefault(operation)) + '\\n    }';\n    }\n\n    /**\n     * Simple default\n     */\n\n  }, {\n    key: 'simpleDefault',\n    value: function simpleDefault(operation) {\n      return 'target.' + operation.ref + ' = ' + operation.defaultString;\n    }\n\n    /**\n     * Immutable default\n     */\n\n  }, {\n    key: 'immutableDefault',\n    value: function immutableDefault(operation) {\n      var target = 'target';\n      var ref = operation.chain.slice(0, operation.chain.length - 1).join('.');\n\n      // add reference to nested property container\n      if (ref) {\n        target = target + '.' + ref;\n      }\n\n      return 'Object.defineProperty(' + target + ', \\'' + operation.key + '\\', {\\n        value: ' + operation.defaultString + ',\\n        writable: ' + !operation.immutable + ',\\n        enumerable: true\\n      })';\n    }\n\n    /**\n     * Condition\n     */\n\n  }, {\n    key: 'condition',\n    value: function condition(operation) {\n      var chain = operation.chain;\n      var ref = operation.ref;\n\n      var guards = chain.reduce(function (result, key, index) {\n        if (index > 0) {\n          result.push('source.' + chain.slice(0, index).join('.'));\n        }\n        return result;\n      }, []).join(' && ');\n\n      var condition = guards ? guards + ' && source.' + ref + ' !== undefined' : 'source.' + ref + ' !== undefined';\n\n      return condition;\n    }\n\n    /**\n     * Ensure object reference exists\n     */\n\n  }, {\n    key: 'ensureContainer',\n    value: function ensureContainer(operation) {\n      // should this check the source object for\n      // presence of the reference or some default property\n      // before adding this property to the source?\n      return '\\n    if (!target.' + operation.ref + ') {\\n      target.' + operation.ref + ' = {}\\n    }\\n    ';\n    }\n  }]);\n\n  return Initializer;\n}();\n\n/**\n * Export\n */\n\n\nmodule.exports = Initializer;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-document/lib/Initializer.js\n// module id = 96\n// module chunks = 0","'use strict';\n\n/**\n * Module dependencies\n * @ignore\n */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar JSONPatch = require('./JSONPatch');\n\n/**\n * JSONDocument\n *\n * @class\n * JSONDocument is a high level interface that binds together all other features of\n * this package and provides the principle method of data modeling.\n */\n\nvar JSONDocument = function () {\n  _createClass(JSONDocument, null, [{\n    key: 'schema',\n\n\n    /**\n     * Schema\n     */\n    get: function get() {\n      throw new Error('Schema must be defined by classes extending JSONDocument');\n    }\n\n    /**\n     * Constructor\n     *\n     * @param {Object} data\n     * @param {Object} options\n     */\n\n  }]);\n\n  function JSONDocument() {\n    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, JSONDocument);\n\n    this.initialize(data, options);\n  }\n\n  /**\n   * Initialize\n   *\n   * @param {Object} data\n   * @param {Object} options\n   */\n\n\n  _createClass(JSONDocument, [{\n    key: 'initialize',\n    value: function initialize() {\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var schema = this.constructor.schema;\n\n      schema.initialize(this, data, options);\n    }\n\n    /**\n     * Validate\n     *\n     * @param {JSONSchema} alternate - OPTIONAL alternate schema\n     * @returns {Object}\n     */\n\n  }, {\n    key: 'validate',\n    value: function validate(alternate) {\n      var schema = this.constructor.schema;\n\n      return (alternate || schema).validate(this);\n    }\n\n    /**\n     * Patch\n     *\n     * @param {Array} ops\n     */\n\n  }, {\n    key: 'patch',\n    value: function patch(ops) {\n      var patch = new JSONPatch(ops);\n      patch.apply(this);\n    }\n\n    /**\n     * Select\n     */\n\n  }, {\n    key: 'select',\n    value: function select() {}\n\n    /**\n     * Project\n     *\n     * @description\n     * Given a mapping, return an object projected from the current instance.\n     *\n     * @example\n     * let schema = new JSONSchema({\n     *   properties: {\n     *     foo: { type: 'Array' }\n     *   }\n     * })\n     *\n     * let mapping = new JSONMapping({\n     *   '/foo/0': '/bar/baz'\n     * })\n     *\n     * class FooTracker extends JSONDocument {\n     *   static get schema () { return schema }\n     * }\n     *\n     * let instance = new FooTracker({ foo: ['qux'] })\n     * instance.project(mapping)\n     * // => { bar: { baz: 'qux' } }\n     *\n     * @param {JSONMapping} mapping\n     * @return {Object}\n     */\n\n  }, {\n    key: 'project',\n    value: function project(mapping) {\n      return mapping.project(this);\n    }\n\n    /**\n     * Serialize\n     *\n     * @param {Object} object\n     * @returns {string}\n     */\n\n  }], [{\n    key: 'serialize',\n    value: function serialize(object) {\n      return JSON.stringify(object);\n    }\n\n    /**\n     * Deserialize\n     *\n     * @param {string} data\n     * @return {*}\n     */\n\n  }, {\n    key: 'deserialize',\n    value: function deserialize(data) {\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        throw new Error('Failed to parse JSON');\n      }\n    }\n  }]);\n\n  return JSONDocument;\n}();\n\n/**\n * Export\n */\n\n\nmodule.exports = JSONDocument;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-document/lib/JSONDocument.js\n// module id = 97\n// module chunks = 0","'use strict';\n\n/**\n * Module dependencies\n * @ignore\n */\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar JSONPointer = require('./JSONPointer');\n\n/**\n * Modes\n */\nvar THROW = 0;\nvar RECOVER = 1;\nvar SILENT = 2;\n\n/**\n * Operations list\n */\nvar OPERATIONS = ['add', 'remove', 'replace', 'move', 'copy', 'test'];\n\n/**\n * Patch\n *\n * @class\n * Implements RFC 6902: JavaScript Object Notation (JSON) Patch\n * https://tools.ietf.org/html/rfc6902\n */\n\nvar JSONPatch = function () {\n\n  /**\n   * Constructor\n   *\n   * @param {Array} ops\n   */\n  function JSONPatch(ops) {\n    _classCallCheck(this, JSONPatch);\n\n    this.ops = ops || [];\n  }\n\n  /**\n   * Apply\n   *\n   * @todo handle errors/roll back\n   * @todo protect properties that are private in the schema\n   * @todo map JSON Pointers real property names\n   *\n   * @param {Object} target\n   */\n\n\n  _createClass(JSONPatch, [{\n    key: 'apply',\n    value: function apply(target) {\n      var _this = this;\n\n      this.ops.forEach(function (operation) {\n        var op = operation.op;\n\n        if (!op) {\n          throw new Error('Missing \"op\" in JSON Patch operation');\n        }\n\n        if (OPERATIONS.indexOf(op) === -1) {\n          throw new Error('Invalid \"op\" in JSON Patch operation');\n        }\n\n        if (!operation.path) {\n          throw new Error('Missing \"path\" in JSON Patch operation');\n        }\n\n        _this[op](operation, target);\n      });\n    }\n\n    /**\n     * Add\n     *\n     * @param {Object} op\n     * @param {Object} target\n     */\n\n  }, {\n    key: 'add',\n    value: function add(op, target) {\n      if (op.value === undefined) {\n        throw new Error('Missing \"value\" in JSON Patch add operation');\n      }\n\n      var pointer = new JSONPointer(op.path, SILENT);\n      pointer.add(target, op.value);\n    }\n\n    /**\n     * Remove\n     *\n     * @param {Object} op\n     * @param {Object} target\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(op, target) {\n      var pointer = new JSONPointer(op.path);\n      pointer.remove(target);\n    }\n\n    /**\n     * Replace\n     *\n     * @param {Object} op\n     * @param {Object} target\n     */\n\n  }, {\n    key: 'replace',\n    value: function replace(op, target) {\n      if (op.value === undefined) {\n        throw new Error('Missing \"value\" in JSON Patch replace operation');\n      }\n\n      var pointer = new JSONPointer(op.path);\n      pointer.replace(target, op.value);\n    }\n\n    /**\n     * Move\n     *\n     * @param {Object} op\n     * @param {Object} target\n     */\n\n  }, {\n    key: 'move',\n    value: function move(op, target) {\n      if (op.from === undefined) {\n        throw new Error('Missing \"from\" in JSON Patch move operation');\n      }\n\n      if (op.path.match(new RegExp('^' + op.from))) {\n        throw new Error('Invalid \"from\" in JSON Patch move operation');\n      }\n\n      var pointer = new JSONPointer(op.path);\n      var from = new JSONPointer(op.from);\n      var value = from.get(target);\n\n      from.remove(target);\n      pointer.add(target, value);\n    }\n\n    /**\n     * Copy\n     *\n     * @param {Object} op\n     * @param {Object} target\n     */\n\n  }, {\n    key: 'copy',\n    value: function copy(op, target) {\n      if (op.from === undefined) {\n        throw new Error('Missing \"from\" in JSON Patch copy operation');\n      }\n\n      var pointer = new JSONPointer(op.path);\n      var from = new JSONPointer(op.from);\n      var value = from.get(target);\n\n      pointer.add(target, value);\n    }\n\n    /**\n     * Test\n     *\n     * @param {Object} op\n     * @param {Object} target\n     */\n\n  }, {\n    key: 'test',\n    value: function test(op, target) {\n      if (op.value === undefined) {\n        throw new Error('Missing \"value\" in JSON Patch test operation');\n      }\n\n      var pointer = new JSONPointer(op.path);\n      var value = pointer.get(target);\n\n      switch (_typeof(op.value)) {\n        //case 'string':\n        //case 'number':\n        //case 'boolean':\n        //  if (value !== op.value) {\n        //    throw new Error('Mismatching JSON Patch test value')\n        //  }\n        default:\n          if (value !== op.value) {\n            throw new Error('Mismatching JSON Patch test value');\n          }\n      }\n    }\n  }]);\n\n  return JSONPatch;\n}();\n\n/**\n * Exports\n */\n\n\nmodule.exports = JSONPatch;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-document/lib/JSONPatch.js\n// module id = 98\n// module chunks = 0","'use strict';\n\n/**\n * Mode enumeration\n */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar THROW = 0;\nvar RECOVER = 1;\nvar SILENT = 2;\n\n/**\n * JSONPointer\n *\n * @class\n * Implements RFC 6901: JavaScript Object Notation (JSON) Pointer\n * https://tools.ietf.org/html/rfc6901\n */\n\nvar JSONPointer = function () {\n\n  /**\n   * Constructor\n   */\n  function JSONPointer(expr, mode) {\n    _classCallCheck(this, JSONPointer);\n\n    this.expr = expr;\n    this.mode = mode || THROW;\n    this.tokens = expr && expr.charAt(0) === '#' ? this.parseURIFragmentIdentifier(expr) : this.parseJSONString(expr);\n  }\n\n  /**\n   * Escape\n   */\n\n\n  _createClass(JSONPointer, [{\n    key: 'escape',\n    value: function escape(expr) {\n      return expr.replace(/~/g, '~0').replace(/\\//g, '~1');\n    }\n\n    /**\n     * Unescape\n     */\n\n  }, {\n    key: 'unescape',\n    value: function unescape(expr) {\n      return expr.replace(/~1/g, '/').replace(/~0/g, '~');\n    }\n\n    /**\n     * Parse\n     */\n\n  }, {\n    key: 'parseJSONString',\n\n\n    /**\n     * Parse JSON String\n     *\n     * @description Parse an expression into a list of tokens\n     * @param {string} expr\n     * @returns {Array}\n     */\n    value: function parseJSONString(expr) {\n      if (typeof expr !== 'string') {\n        throw new Error('JSON Pointer must be a string');\n      }\n\n      if (expr === '') {\n        return [];\n      }\n\n      if (expr.charAt(0) !== '/') {\n        throw new Error('Invalid JSON Pointer');\n      }\n\n      if (expr === '/') {\n        return [''];\n      }\n\n      return expr.substr(1).split('/').map(this.unescape);\n    }\n\n    /**\n     * To JSON String\n     *\n     * @description Render a JSON string representation of a pointer\n     * @returns {string}\n     */\n\n  }, {\n    key: 'toJSONString',\n    value: function toJSONString() {\n      return '/' + this.tokens.map(this.escape).join('/');\n    }\n\n    /**\n     * Parse URI Fragment Identifer\n     */\n\n  }, {\n    key: 'parseURIFragmentIdentifier',\n    value: function parseURIFragmentIdentifier(expr) {\n      if (typeof expr !== 'string') {\n        throw new Error('JSON Pointer must be a string');\n      }\n\n      if (expr.charAt(0) !== '#') {\n        throw new Error('Invalid JSON Pointer URI Fragment Identifier');\n      }\n\n      return this.parseJSONString(decodeURIComponent(expr.substr(1)));\n    }\n\n    /**\n     * To URI Fragment Identifier\n     *\n     * @description Render a URI Fragment Identifier representation of a pointer\n     * @returns {string}\n     */\n\n  }, {\n    key: 'toURIFragmentIdentifier',\n    value: function toURIFragmentIdentifier() {\n      var _this = this;\n\n      var value = this.tokens.map(function (token) {\n        return encodeURIComponent(_this.escape(token));\n      }).join('/');\n\n      return '#/' + value;\n    }\n\n    /**\n     * Get\n     *\n     * @description Get a value from the source object referenced by the pointer\n     * @param {Object} source\n     * @returns {*}\n     */\n\n  }, {\n    key: 'get',\n    value: function get(source) {\n      var current = source;\n      var tokens = this.tokens;\n\n      for (var i = 0; i < tokens.length; i++) {\n        if (!current || current[tokens[i]] === undefined) {\n          if (this.mode !== THROW) {\n            return undefined;\n          } else {\n            throw new Error('Invalid JSON Pointer reference');\n          }\n        }\n\n        current = current[tokens[i]];\n      }\n\n      return current;\n    }\n\n    /**\n     * Add\n     *\n     * @description Set a value on a target object referenced by the pointer. Put\n     * will insert an array element. To change an existing array elemnent, use\n     * `pointer.set()`\n     * @param {Object} target\n     * @param {*} value\n     */\n\n  }, {\n    key: 'add',\n    value: function add(target, value) {\n      var tokens = this.tokens;\n      var current = target;\n\n      // iterate through the tokens\n      for (var i = 0; i < tokens.length; i++) {\n        var token = tokens[i];\n\n        // set the property on the target location\n        if (i === tokens.length - 1) {\n          if (token === '-') {\n            current.push(value);\n          } else if (Array.isArray(current)) {\n            current.splice(token, 0, value);\n          } else {\n            current[token] = value;\n          }\n\n          // handle missing target location based on \"mode\"\n        } else if (!current[token]) {\n          switch (this.mode) {\n            case THROW:\n              throw new Error('Invalid JSON Pointer reference');\n\n            case RECOVER:\n              current = current[token] = parseInt(token) ? [] : {};\n              break;\n\n            case SILENT:\n              return;\n\n            default:\n              throw new Error('Invalid pointer mode');\n          }\n\n          // reference the next object in the path\n        } else {\n          current = current[token];\n        }\n      }\n    }\n\n    /**\n     * Replace\n     *\n     * @description Set a value on a target object referenced by the pointer. Set will\n     * overwrite an existing array element at the target location.\n     * @param {Object} target\n     * @param {*} value\n     */\n\n  }, {\n    key: 'replace',\n    value: function replace(target, value) {\n      var tokens = this.tokens;\n      var current = target;\n\n      for (var i = 0; i < tokens.length; i++) {\n        var token = tokens[i];\n\n        if (i === tokens.length - 1) {\n          current[token] = value;\n        } else if (!current[token]) {\n          current = current[token] = parseInt(token) ? [] : {};\n        } else {\n          current = current[token];\n        }\n      }\n    }\n\n    /**\n     * Del\n     *\n     * - if this is an array it should splice the value out\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(target) {\n      var tokens = this.tokens;\n      var current = target;\n\n      for (var i = 0; i < tokens.length; i++) {\n        var token = tokens[i];\n\n        if (current === undefined || current[token] === undefined) {\n          return undefined;\n        } else if (Array.isArray(current)) {\n          current.splice(token, 1);\n          return undefined;\n        } else if (i === tokens.length - 1) {\n          delete current[token];\n        }\n\n        current = current[token];\n      }\n\n      // delete from the target\n    }\n  }], [{\n    key: 'parse',\n    value: function parse(expr) {\n      return new JSONPointer(expr);\n    }\n  }]);\n\n  return JSONPointer;\n}();\n\n/**\n * Exports\n */\n\n\nmodule.exports = JSONPointer;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-document/lib/JSONPointer.js\n// module id = 99\n// module chunks = 0","'use strict';\n\n/**\n * Module dependencies\n * @ignore\n */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar JSONPointer = require('./JSONPointer');\n\n/**\n * JSONPointer mode\n */\nvar RECOVER = 1;\n\n/**\n * JSONMapping\n *\n * @class\n * Defines a means to declaratively translate between object\n * representations using JSON Pointer syntax.\n */\n\nvar JSONMapping = function (_Map) {\n  _inherits(JSONMapping, _Map);\n\n  /**\n   * Constructor\n   *\n   * @description Translate pointers from JSON Strings into Pointer objects\n   * @param {Object} mapping\n   */\n  function JSONMapping(mapping) {\n    _classCallCheck(this, JSONMapping);\n\n    var _this = _possibleConstructorReturn(this, (JSONMapping.__proto__ || Object.getPrototypeOf(JSONMapping)).call(this));\n\n    Object.keys(mapping).forEach(function (key) {\n      var value = mapping[key];\n      _this.set(new JSONPointer(key, RECOVER), new JSONPointer(value, RECOVER));\n    });\n    return _this;\n  }\n\n  /**\n   * Map\n   *\n   * @description Assign values from source to target by reading the mapping\n   * from right to left.\n   * @param {Object} target\n   * @param {Object} source\n   */\n\n\n  _createClass(JSONMapping, [{\n    key: 'map',\n    value: function map(target, source) {\n      this.forEach(function (right, left) {\n        left.add(target, right.get(source));\n      });\n    }\n\n    /**\n     * Project\n     *\n     * @description Assign values from source to target by reading the mapping\n     * from left to right.\n     * @param {Object} source\n     * @param {Object} target\n     */\n\n  }, {\n    key: 'project',\n    value: function project(source, target) {\n      this.forEach(function (right, left) {\n        right.add(target, left.get(source));\n      });\n    }\n  }]);\n\n  return JSONMapping;\n}(Map);\n\n/**\n * Exports\n */\n\n\nmodule.exports = JSONMapping;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-document/lib/JSONMapping.js\n// module id = 100\n// module chunks = 0","'use strict';\n\n/**\n * Module dependencies\n * @ignore\n */\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Initializer = require('./Initializer');\nvar Validator = require('./Validator');\n\n/**\n * JSONSchema\n *\n * @class\n * Compiles JSON Schema documents to an object with object initialization\n * and validation methods.\n */\n\nvar JSONSchema = function () {\n\n  /**\n   * Constructor\n   *\n   * @param {Object} schema\n   */\n  function JSONSchema(schema) {\n    _classCallCheck(this, JSONSchema);\n\n    // TODO: optionally parse JSON string?\n    Object.assign(this, schema);\n\n    // add schema-derived initialize and validate methods\n    Object.defineProperties(this, {\n      initialize: {\n        enumerable: false,\n        writeable: false,\n        value: Initializer.compile(schema)\n      },\n      validate: {\n        enumerable: false,\n        writeable: false,\n        value: Validator.compile(schema)\n      }\n    });\n  }\n\n  /**\n   * Extend\n   *\n   * @description\n   * ...\n   * Dear future,\n   *\n   * This function was meticulously plagiarized from some curious amalgam of\n   * stackoverflow posts whilst dozing off at my keyboard, too deprived of REM-\n   * sleep to recurse unassisted. If it sucks, you have only yourself to blame.\n   *\n   * Goodnight.\n   *\n   * @param {Object} schema\n   * @returns {JSONSchema}\n   */\n\n\n  _createClass(JSONSchema, [{\n    key: 'extend',\n    value: function extend(schema) {\n      function isObject(data) {\n        return data && (typeof data === 'undefined' ? 'undefined' : _typeof(data)) === 'object' && data !== null && !Array.isArray(data);\n      }\n\n      function extender(target, source) {\n        var result = Object.assign({}, target);\n        if (isObject(target) && isObject(source)) {\n          Object.keys(source).forEach(function (key) {\n            if (isObject(source[key])) {\n              if (!(key in target)) {\n                Object.assign(result, _defineProperty({}, key, source[key]));\n              } else {\n                result[key] = extender(target[key], source[key]);\n              }\n            } else {\n              Object.assign(result, _defineProperty({}, key, source[key]));\n            }\n          });\n        }\n        return result;\n      }\n\n      var descriptor = extender(this, schema);\n      return new JSONSchema(descriptor);\n    }\n  }]);\n\n  return JSONSchema;\n}();\n\n/**\n * Export\n */\n\n\nmodule.exports = JSONSchema;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-document/lib/JSONSchema.js\n// module id = 101\n// module chunks = 0","'use strict';\n\n/**\n * Module dependencies\n * @ignore\n */\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar formats = require('./Formats');\n\n/**\n * Validator\n *\n * Compile an object describing a JSON Schema into a validation function.\n */\n\nvar Validator = function () {\n  _createClass(Validator, null, [{\n    key: 'compile',\n\n\n    /**\n     * Compile (static)\n     *\n     * @description\n     * Compile an object describing a JSON Schema into a validation function.\n     *\n     * @param {Object} schema\n     * @returns {Function}\n     */\n    value: function compile(schema) {\n      var validator = new Validator(schema);\n\n      var body = '\\n      // \"cursor\"\\n      let value = data\\n      let container\\n      let stack = []\\n      let top = -1\\n\\n      // error state\\n      let valid = true\\n      let errors = []\\n\\n      // complex schema state\\n      let initialValidity\\n      let anyValid\\n      let notValid\\n      let countOfValid\\n      let initialErrorCount\\n      let accumulatedErrorCount\\n\\n      // validation code\\n      ' + validator.compile() + '\\n\\n      // validation result\\n      return {\\n        valid,\\n        errors\\n      }\\n    ';\n\n      return new Function('data', body);\n    }\n\n    /**\n     * Constructor\n     *\n     * @param {Object} schema - object representation of a schema\n     * @param {string} options - compilation options\n     */\n\n  }]);\n\n  function Validator(schema) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Validator);\n\n    // assign schema to this\n    this.schema = schema;\n\n    // assign all options to this\n    Object.assign(this, options);\n\n    // ensure address is defined\n    if (!this.address) {\n      this.address = '';\n    }\n\n    // ensure require is boolean\n    if (this.require !== true) {\n      this.require = false;\n    }\n  }\n\n  /**\n   * Compile\n   *\n   * @description\n   * The instance compile method is \"dumb\". It only sequences invocation of\n   * more specific compilation methods. It generates code to\n   *\n   *  - read a value from input\n   *  - validate type(s) of input\n   *  - validate constraints described by various schema keywords\n   *\n   * Conditional logic related to code generation is pushed downsteam to\n   * type-specific methods.\n   */\n\n\n  _createClass(Validator, [{\n    key: 'compile',\n    value: function compile() {\n      var block = '';\n\n      if (this.require) {\n        block += this.required();\n      }\n\n      // type validation\n      block += this.type();\n\n      // type specific validation generators\n      // null and boolean are covered by this.type()\n      // integer should be covered by number and this.type()\n      block += this.array();\n      block += this.number();\n      block += this.object();\n      block += this.string();\n\n      // non-type-specific validation generators\n      block += this.enum();\n      block += this.anyOf();\n      block += this.allOf();\n      block += this.not();\n      block += this.oneOf();\n\n      return block;\n    }\n\n    /**\n     * push\n     */\n\n  }, {\n    key: 'push',\n    value: function push() {\n      return '\\n      stack.push(value)\\n      container = value\\n      top++\\n    ';\n    }\n\n    /**\n     * pop\n     */\n\n  }, {\n    key: 'pop',\n    value: function pop() {\n      return '\\n      if (stack.length > 1) {\\n        top--\\n        stack.pop()\\n      }\\n\\n      value = container = stack[top]\\n    ';\n    }\n\n    /**\n     * type\n     *\n     * @description\n     * > An instance matches successfully if its primitive type is one of the\n     * > types defined by keyword. Recall: \"number\" includes \"integer\".\n     * > JSON Schema Validation Section 5.5.2\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'type',\n    value: function type() {\n      var type = this.schema.type,\n          address = this.address;\n\n      var block = '';\n\n      if (type) {\n        var types = Array.isArray(type) ? type : [type];\n        var conditions = types.map(function (type) {\n          // TODO: can we make a mapping object for this to clean it up?\n          if (type === 'array') return '!Array.isArray(value)';\n          if (type === 'boolean') return 'typeof value !== \\'boolean\\'';\n          if (type === 'integer') return '!Number.isInteger(value)';\n          if (type === 'null') return 'value !== null';\n          if (type === 'number') return 'typeof value !== \\'number\\'';\n          if (type === 'object') return '(typeof value !== \\'object\\' || Array.isArray(value) || value === null)';\n          if (type === 'string') return 'typeof value !== \\'string\\'';\n        }).join(' && ');\n\n        block += '\\n      // ' + address + ' type checking\\n      if (value !== undefined && ' + conditions + ') {\\n        valid = false\\n        errors.push({\\n          keyword: \\'type\\',\\n          message: \\'invalid type\\'\\n        })\\n      }\\n      ';\n      }\n\n      return block;\n    }\n\n    /**\n     * Type-specific validations\n     *\n     * Type checking is optional in JSON Schema, and a schema can allow\n     * multiple types. Generated code needs to apply type-specific validations\n     * only to appropriate values, and ignore everything else. Type validation\n     * itself is handled separately from other validation keywords.\n     *\n     * The methods `array`, `number`, `object`, `string` generate type-specific\n     * validation code blocks, wrapped in a conditional such that they will\n     * only be applied to values of that type.\n     *\n     * For example, the `number` method, given the schema\n     *\n     *     { minimum: 3 }\n     *\n     * will generate\n     *\n     *     if (typeof value === 'number') {\n     *       if (value < 3) {\n     *         valid = false\n     *         errors.push({ message: '...' })\n     *       }\n     *     }\n     *\n     * Integer values are also numbers, and are validated the same as numbers\n     * other than the type validation itself. Therefore no `integer` method is\n     * needed.\n     */\n\n    /**\n     * array\n     *\n     * @description\n     * Invoke methods for array-specific keywords and wrap resulting code in\n     * type-checking conditional so that any resulting validations are only\n     * applied to array values.\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'array',\n    value: function array() {\n      var keywords = ['additionalItems', 'items', 'minItems', 'maxItems', 'uniqueItems'];\n      var validations = this.validations(keywords);\n      var block = '';\n\n      if (validations.length > 0) {\n        block += '\\n      /**\\n       * Array validations\\n       */\\n      if (Array.isArray(value)) {\\n      ' + validations + '\\n      }\\n      ';\n      }\n\n      return block;\n    }\n\n    /**\n     * number\n     *\n     * @description\n     * Invoke methods for number-specific keywords and wrap resulting code in\n     * type-checking conditional so that any resulting validations are only\n     * applied to number values.\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'number',\n    value: function number() {\n      var keywords = ['minimum', 'maximum', 'multipleOf'];\n      var validations = this.validations(keywords);\n      var block = '';\n\n      if (validations.length > 0) {\n        block += '\\n      /**\\n       * Number validations\\n       */\\n      if (typeof value === \\'number\\') {\\n      ' + validations + '\\n      }\\n      ';\n      }\n\n      return block;\n    }\n\n    /**\n     * object\n     *\n     * @description\n     * Invoke methods for object-specific keywords and wrap resulting code in\n     * type-checking conditional so that any resulting validations are only\n     * applied to object values.\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'object',\n    value: function object() {\n      var keywords = ['maxProperties', 'minProperties', 'additionalProperties', 'properties', 'patternProperties', 'dependencies', 'schemaDependencies', 'propertyDependencies'];\n      var validations = this.validations(keywords);\n      var block = '';\n\n      if (validations.length > 0) {\n        block += '\\n      /**\\n       * Object validations\\n       */\\n      if (typeof value === \\'object\\' && value !== null && !Array.isArray(value)) {\\n      ' + validations + '\\n      }\\n      ';\n      }\n\n      return block;\n    }\n\n    /**\n     * string\n     *\n     * @description\n     * Invoke methods for string-specific keywords and wrap resulting code in\n     * type-checking conditional so that any resulting validations are only\n     * applied to string values.\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'string',\n    value: function string() {\n      var keywords = ['maxLength', 'minLength', 'pattern', 'format'];\n      var validations = this.validations(keywords);\n      var block = '';\n\n      if (validations.length > 0) {\n        block += '\\n      /**\\n       * String validations\\n       */\\n      if (typeof value === \\'string\\') {\\n      ' + validations + '\\n      }\\n      ';\n      }\n\n      return block;\n    }\n\n    /**\n     * validations\n     *\n     * @description\n     * Iterate over an array of keywords and invoke code generator methods\n     * for each. Concatenate the results together and return. Used by \"type\"\n     * methods such as this.array() and this.string()\n     *\n     * @param {Array} keywords\n     * @returns {string}\n     */\n\n  }, {\n    key: 'validations',\n    value: function validations(keywords) {\n      var _this = this;\n\n      var schema = this.schema;\n\n      var block = '';\n\n      var constraints = Object.keys(schema).filter(function (key) {\n        return keywords.indexOf(key) !== -1;\n      });\n\n      constraints.forEach(function (keyword) {\n        block += _this[keyword]();\n      });\n\n      return block;\n    }\n\n    /**\n     * enum\n     *\n     * @description\n     * > An instance validates successfully against this keyword if its value\n     * > is equal to one of the elements in this keyword's array value.\n     * > JSON Schema Validation Section 5.5.1\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'enum',\n    value: function _enum() {\n      var enumerated = this.schema.enum,\n          address = this.address;\n\n      var conditions = ['value !== undefined'];\n      var block = '';\n\n      if (enumerated) {\n        enumerated.forEach(function (value) {\n          switch (typeof value === 'undefined' ? 'undefined' : _typeof(value)) {\n            case 'boolean':\n              conditions.push('value !== ' + value);\n              break;\n\n            case 'number':\n              conditions.push('value !== ' + value);\n              break;\n\n            case 'string':\n              conditions.push('value !== \"' + value + '\"');\n              break;\n\n            case 'object':\n              if (value === null) {\n                conditions.push('value !== null');\n              } else {\n                conditions.push('\\'' + JSON.stringify(value) + '\\' !== JSON.stringify(value)');\n              }\n              break;\n\n            default:\n              throw new Error('Things are not well in the land of enum');\n\n          }\n        });\n\n        block += '\\n      /**\\n       * Validate \"' + address + '\" enum\\n       */\\n      if (' + conditions.join(' && ') + ') {\\n        valid = false\\n        errors.push({\\n          keyword: \\'enum\\',\\n          message: JSON.stringify(value) + \\' is not an enumerated value\\'\\n        })\\n      }\\n      ';\n      }\n\n      return block;\n    }\n\n    /**\n     * anyOf\n     *\n     * @description\n     * > An instance validates successfully against this keyword if it\n     * > validates successfully against at least one schema defined by this\n     * > keyword's value.\n     * > JSON Schema Validation Section 5.5.4\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'anyOf',\n    value: function anyOf() {\n      var anyOf = this.schema.anyOf,\n          address = this.address;\n\n      var block = '';\n\n      if (Array.isArray(anyOf)) {\n        block += '\\n        initialValidity = valid\\n        initialErrorCount = errors.length\\n        anyValid = false\\n      ';\n\n        anyOf.forEach(function (subschema) {\n          var validator = new Validator(subschema, { address: address });\n          block += '\\n        accumulatedErrorCount = errors.length\\n        ' + validator.compile() + '\\n        if (accumulatedErrorCount === errors.length) {\\n          anyValid = true\\n        }\\n        ';\n        });\n\n        block += '\\n          if (anyValid === true) {\\n            valid = initialValidity\\n            errors = errors.slice(0, initialErrorCount)\\n          }\\n      ';\n      }\n\n      return block;\n    }\n\n    /**\n     * allOf\n     *\n     * @description\n     * > An instance validates successfully against this keyword if it\n     * > validates successfully against all schemas defined by this keyword's\n     * > value.\n     * > JSON Schema Validation Section 5.5.3\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'allOf',\n    value: function allOf() {\n      var allOf = this.schema.allOf,\n          address = this.address;\n\n      var block = '';\n\n      if (Array.isArray(allOf)) {\n        allOf.forEach(function (subschema) {\n          var validator = new Validator(subschema, { address: address });\n          block += '\\n        ' + validator.compile() + '\\n        ';\n        });\n      }\n\n      return block;\n    }\n\n    /**\n     * oneOf\n     *\n     * @description\n     * > An instance validates successfully against this keyword if it\n     * > validates successfully against exactly one schema defined by this\n     * > keyword's value.\n     * > JSON Schema Validation Section 5.5.5\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'oneOf',\n    value: function oneOf() {\n      var oneOf = this.schema.oneOf,\n          address = this.address;\n\n      var block = '';\n\n      if (Array.isArray(oneOf)) {\n        block += '\\n        /**\\n         * Validate ' + address + ' oneOf\\n         */\\n        initialValidity = valid\\n        initialErrorCount = errors.length\\n        countOfValid = 0\\n      ';\n\n        oneOf.forEach(function (subschema) {\n          var validator = new Validator(subschema, { address: address });\n          block += '\\n        accumulatedErrorCount = errors.length\\n        ' + validator.compile() + '\\n        if (accumulatedErrorCount === errors.length) {\\n          countOfValid += 1\\n        }\\n        ';\n        });\n\n        block += '\\n          if (countOfValid === 1) {\\n            valid = initialValidity\\n            errors = errors.slice(0, initialErrorCount)\\n          } else {\\n            valid = false\\n            errors.push({\\n              keyword: \\'oneOf\\',\\n              message: \\'what is a reasonable error message for this case?\\'\\n            })\\n          }\\n      ';\n      }\n\n      return block;\n    }\n\n    /**\n     * not\n     *\n     * @description\n     * > An instance is valid against this keyword if it fails to validate\n     * > successfully against the schema defined by this keyword.\n     * > JSON Schema Validation Section 5.5.6\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'not',\n    value: function not() {\n      var not = this.schema.not,\n          address = this.address;\n\n      var block = '';\n\n      if ((typeof not === 'undefined' ? 'undefined' : _typeof(not)) === 'object' && not !== null && !Array.isArray(not)) {\n        var subschema = not;\n        var validator = new Validator(subschema, { address: address });\n\n        block += '\\n        /**\\n         * NOT\\n         */\\n        if (value !== undefined) {\\n          initialValidity = valid\\n          initialErrorCount = errors.length\\n          notValid = true\\n\\n          accumulatedErrorCount = errors.length\\n\\n          ' + validator.compile() + '\\n\\n          if (accumulatedErrorCount === errors.length) {\\n            notValid = false\\n          }\\n\\n          if (notValid === true) {\\n            valid = initialValidity\\n            errors = errors.slice(0, initialErrorCount)\\n          } else {\\n            valid = false\\n            errors = errors.slice(0, initialErrorCount)\\n            errors.push({\\n              keyword: \\'not\\',\\n              message: \\'hmm...\\'\\n            })\\n          }\\n        }\\n      ';\n      }\n\n      return block;\n    }\n\n    /**\n     * properties\n     *\n     * @description\n     * Iterate over the `properties` schema property if it is an object. For each\n     * key, initialize a new Validator for the subschema represented by the property\n     * value and invoke compile. Append the result of compiling each subschema to\n     * the block of code being generated.\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'properties',\n    value: function properties() {\n      var schema = this.schema,\n          address = this.address;\n      var properties = schema.properties,\n          required = schema.required;\n\n      var block = this.push();\n\n      // ensure the value of \"required\" schema property is an array\n      required = Array.isArray(required) ? required : [];\n\n      if ((typeof properties === 'undefined' ? 'undefined' : _typeof(properties)) === 'object') {\n        Object.keys(properties).forEach(function (key) {\n          var subschema = properties[key];\n          var isRequired = required.indexOf(key) !== -1;\n          // TODO\n          // how should we be calculating these things? should be json pointer?\n          // needs a separate function\n          var pointer = [address, key].filter(function (segment) {\n            return !!segment;\n          }).join('.');\n          var validation = new Validator(subschema, { address: pointer, require: isRequired });\n\n          // read the value\n          block += '\\n        value = container[\\'' + key + '\\']\\n        ';\n\n          block += validation.compile();\n        });\n      }\n\n      block += this.pop();\n\n      return block;\n    }\n\n    /**\n     * Other Properties\n     *\n     * @description\n     * This method is not for a keyword. It wraps validations for\n     * patternProperties and additionalProperties in a single iteration over\n     * an object-type value's properties.\n     *\n     * It should only be invoked once for a given subschema.\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'otherProperties',\n    value: function otherProperties() {\n      return '\\n      /**\\n       * Validate Other Properties\\n       */\\n      ' + this.push() + '\\n\\n      for (let key in container) {\\n        value = container[key]\\n        matched = false\\n\\n        ' + this.patternValidations() + '\\n        ' + this.additionalValidations() + '\\n      }\\n\\n      ' + this.pop() + '\\n    ';\n    }\n\n    /**\n     * Pattern Validations\n     *\n     * @description\n     * Generate validation code from a subschema for properties matching a\n     * regular expression.\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'patternValidations',\n    value: function patternValidations() {\n      var patternProperties = this.schema.patternProperties;\n\n      var block = '';\n\n      if ((typeof patternProperties === 'undefined' ? 'undefined' : _typeof(patternProperties)) === 'object') {\n        Object.keys(patternProperties).forEach(function (pattern) {\n          var subschema = patternProperties[pattern];\n          var validator = new Validator(subschema);\n          block += '\\n          if (key.match(\\'' + pattern + '\\')) {\\n            matched = true\\n            ' + validator.compile() + '\\n          }\\n        ';\n        });\n      }\n\n      return block;\n    }\n\n    /**\n     * Additional Validations\n     *\n     * @description\n     * Generate validation code, either from a subschema for properties not\n     * defined in the schema, or to disallow properties not defined in the\n     * schema.\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'additionalValidations',\n    value: function additionalValidations() {\n      var _schema = this.schema,\n          properties = _schema.properties,\n          additionalProperties = _schema.additionalProperties,\n          address = this.address;\n\n      var validations = '';\n      var block = '';\n\n      // catch additional unmatched properties\n      var conditions = ['matched !== true'];\n\n      // ignore defined properties\n      Object.keys(properties || {}).forEach(function (key) {\n        conditions.push('key !== \\'' + key + '\\'');\n      });\n\n      // validate additional properties\n      if ((typeof additionalProperties === 'undefined' ? 'undefined' : _typeof(additionalProperties)) === 'object') {\n        var subschema = additionalProperties;\n        var validator = new Validator(subschema, { address: address + '[APKey]' });\n        block += '\\n        // validate additional properties\\n        if (' + conditions.join(' && ') + ') {\\n          ' + validator.compile() + '\\n        }\\n      ';\n      }\n\n      // error for additional properties\n      if (additionalProperties === false) {\n        block += '\\n        // validate non-presence of additional properties\\n        if (' + conditions.join(' && ') + ') {\\n          valid = false\\n          errors.push({\\n            keyword: \\'additionalProperties\\',\\n            message: key + \\' is not a defined property\\'\\n          })\\n        }\\n      ';\n      }\n\n      return block;\n    }\n\n    /**\n     * patternProperties\n     *\n     * @description\n     * Generate validation code for properties matching a pattern\n     * defined by the property name (key), which must be a string\n     * representing a valid regular expression.\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'patternProperties',\n    value: function patternProperties() {\n      var block = '';\n\n      if (!this.otherPropertiesCalled) {\n        this.otherPropertiesCalled = true;\n        block += this.otherProperties();\n      }\n\n      return block;\n    }\n\n    /**\n     * additionalProperties\n     *\n     * @description\n     * Generate validation code for additional properties not defined\n     * in the schema, or disallow additional properties if the value of\n     * `additionalProperties` in the schema is `false`.\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'additionalProperties',\n    value: function additionalProperties() {\n      var block = '';\n\n      if (!this.otherPropertiesCalled) {\n        this.otherPropertiesCalled = true;\n        block += this.otherProperties();\n      }\n\n      return block;\n    }\n\n    /**\n     * minProperties\n     *\n     * @description\n     * > An object instance is valid against \"minProperties\" if its number of\n     * > properties is greater than, or equal to, the value of this keyword.\n     * > JSON Schema Validation Section 5.4.2\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'minProperties',\n    value: function minProperties() {\n      var minProperties = this.schema.minProperties,\n          address = this.address;\n\n\n      return '\\n        // ' + address + ' min properties\\n        if (Object.keys(value).length < ' + minProperties + ') {\\n          valid = false\\n          errors.push({\\n            keyword: \\'minProperties\\',\\n            message: \\'too few properties\\'\\n          })\\n        }\\n    ';\n    }\n\n    /**\n     * maxProperties\n     *\n     * @description\n     * > An object instance is valid against \"maxProperties\" if its number of\n     * > properties is less than, or equal to, the value of this keyword.\n     * > JSON Schema Validation Section 5.4.1\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'maxProperties',\n    value: function maxProperties() {\n      var maxProperties = this.schema.maxProperties,\n          address = this.address;\n\n\n      return '\\n        // ' + address + ' max properties\\n        if (Object.keys(value).length > ' + maxProperties + ') {\\n          valid = false\\n          errors.push({\\n            keyword: \\'maxProperties\\',\\n            message: \\'too many properties\\'\\n          })\\n        }\\n    ';\n    }\n\n    /**\n     * Dependencies\n     *\n     * @description\n     * > For all (name, schema) pair of schema dependencies, if the instance has\n     * > a property by this name, then it must also validate successfully against\n     * > the schema.\n     * >\n     * > Note that this is the instance itself which must validate successfully,\n     * > not the value associated with the property name.\n     * >\n     * > For each (name, propertyset) pair of property dependencies, if the\n     * > instance has a property by this name, then it must also have properties\n     * > with the same names as propertyset.\n     * > JSON Schema Validation Section 5.4.5.2\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'dependencies',\n    value: function dependencies() {\n      var dependencies = this.schema.dependencies,\n          address = this.address;\n\n\n      var block = this.push();\n\n      if ((typeof dependencies === 'undefined' ? 'undefined' : _typeof(dependencies)) === 'object') {\n        Object.keys(dependencies).forEach(function (key) {\n          var dependency = dependencies[key];\n          var conditions = [];\n\n          if (Array.isArray(dependency)) {\n            dependency.forEach(function (item) {\n              conditions.push('container[\\'' + item + '\\'] === undefined');\n            });\n\n            block += '\\n            if (container[\\'' + key + '\\'] !== undefined && (' + conditions.join(' || ') + ')) {\\n              valid = false\\n              errors.push({\\n                keyword: \\'dependencies\\',\\n                message: \\'unmet dependencies\\'\\n              })\\n            }\\n          ';\n          } else if ((typeof dependency === 'undefined' ? 'undefined' : _typeof(dependency)) === 'object') {\n            var subschema = dependency;\n            var validator = new Validator(subschema, { address: address });\n\n            block += '\\n            if (container[\\'' + key + '\\'] !== undefined) {\\n              ' + validator.compile() + '\\n            }\\n          ';\n          }\n        });\n      }\n\n      block += this.pop();\n\n      return block;\n    }\n\n    /**\n     * Required\n     *\n     * @description\n     * > An object instance is valid against this keyword if its property set\n     * > contains all elements in this keyword's array value.\n     * > JSON Schema Validation Section 5.4.3\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'required',\n    value: function required() {\n      var properties = this.schema.properties,\n          address = this.address;\n\n      var block = '';\n\n      block += '\\n      // validate ' + address + ' presence\\n      if (value === undefined) {\\n        valid = false\\n        errors.push({\\n          keyword: \\'required\\',\\n          message: \\'is required\\'\\n        })\\n      }\\n    ';\n\n      return block;\n    }\n\n    /**\n     * additionalItems\n     *\n     * @description\n     * > Successful validation of an array instance with regards to these two\n     * > keywords is determined as follows: if \"items\" is not present, or its\n     * > value is an object, validation of the instance always succeeds,\n     * > regardless of the value of \"additionalItems\"; if the value of\n     * > \"additionalItems\" is boolean value true or an object, validation of\n     * > the instance always succeeds; if the value of \"additionalItems\" is\n     * > boolean value false and the value of \"items\" is an array, the\n     * > instance is valid if its size is less than, or equal to, the size\n     * > of \"items\".\n     * > JSON Schema Validation Section 5.3.1\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'additionalItems',\n    value: function additionalItems() {\n      var _schema2 = this.schema,\n          items = _schema2.items,\n          additionalItems = _schema2.additionalItems,\n          address = this.address;\n\n      var block = '';\n\n      if (additionalItems === false && Array.isArray(items)) {\n        block += '\\n        // don\\'t allow additional items\\n        if (value.length > ' + items.length + ') {\\n          valid = false\\n          errors.push({\\n            keyword: \\'additionalItems\\',\\n            message: \\'additional items not allowed\\'\\n          })\\n        }\\n      ';\n      }\n\n      if ((typeof additionalItems === 'undefined' ? 'undefined' : _typeof(additionalItems)) === 'object' && additionalItems !== null && Array.isArray(items)) {\n        var subschema = additionalItems;\n        var validator = new Validator(subschema);\n\n        block += '\\n        // additional items\\n        ' + this.push() + '\\n\\n        for (var i = ' + items.length + '; i <= container.length; i++) {\\n          value = container[i]\\n          ' + validator.compile() + '\\n        }\\n\\n        ' + this.pop() + '\\n      ';\n      }\n\n      return block;\n    }\n\n    /**\n     * Items\n     *\n     * @description\n     * > Successful validation of an array instance with regards to these two\n     * > keywords is determined as follows: if \"items\" is not present, or its\n     * > value is an object, validation of the instance always succeeds,\n     * > regardless of the value of \"additionalItems\"; if the value of\n     * > \"additionalItems\" is boolean value true or an object, validation of\n     * > the instance always succeeds; if the value of \"additionalItems\" is\n     * > boolean value false and the value of \"items\" is an array, the\n     * > instance is valid if its size is less than, or equal to, the size\n     * > of \"items\".\n     * > JSON Schema Validation Section 5.3.1\n     *\n     * Code to generate\n     *\n     *     // this outer conditional is generated by this.array()\n     *     if (Array.isArray(value) {\n     *       let parent = value\n     *       for (let i = 0; i < parent.length; i++) {\n     *         value = parent[i]\n     *         // other validation code depending on value here\n     *       }\n     *       value = parent\n     *     }\n     *\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'items',\n    value: function items() {\n      var items = this.schema.items,\n          address = this.address;\n\n      var block = '';\n\n      // if items is an array\n      if (Array.isArray(items)) {\n        block += this.push();\n\n        items.forEach(function (item, index) {\n          var subschema = item;\n          var validator = new Validator(subschema, { address: address + '[' + index + ']' });\n\n          block += '\\n          // item #' + index + '\\n          value = container[' + index + ']\\n          ' + validator.compile() + '\\n        ';\n        });\n\n        block += this.pop();\n\n        // if items is an object\n      } else if ((typeof items === 'undefined' ? 'undefined' : _typeof(items)) === 'object' && items !== null) {\n        var subschema = items;\n        var validator = new Validator(subschema);\n\n        block += '\\n        // items\\n        ' + this.push() + '\\n\\n        for (var i = 0; i < container.length; i++) {\\n          // read array element\\n          value = container[i]\\n          ' + validator.compile() + '\\n        }\\n\\n        ' + this.pop() + '\\n      ';\n      }\n\n      return block;\n    }\n\n    /**\n     * minItems\n     *\n     * @description\n     * > An array instance is valid against \"minItems\" if its size is greater\n     * > than, or equal to, the value of this keyword.\n     * > JSON Schema Validation Section 5.3.3\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'minItems',\n    value: function minItems() {\n      var minItems = this.schema.minItems,\n          address = this.address;\n\n\n      return '\\n        // ' + address + ' min items\\n        if (value.length < ' + minItems + ') {\\n          valid = false\\n          errors.push({\\n            keyword: \\'minItems\\',\\n            message: \\'too few properties\\'\\n          })\\n        }\\n    ';\n    }\n\n    /**\n     * maxItems\n     *\n     * @description\n     * > An array instance is valid against \"maxItems\" if its size is less\n     * > than, or equal to, the value of this keyword.\n     * > JSON Schema Validation Section 5.3.2\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'maxItems',\n    value: function maxItems() {\n      var maxItems = this.schema.maxItems,\n          address = this.address;\n\n\n      return '\\n        // ' + address + ' max items\\n        if (value.length > ' + maxItems + ') {\\n          valid = false\\n          errors.push({\\n            keyword: \\'maxItems\\',\\n            message: \\'too many properties\\'\\n          })\\n        }\\n    ';\n    }\n\n    /**\n     * uniqueItems\n     *\n     * @description\n     * > If this keyword has boolean value false, the instance validates\n     * > successfully. If it has boolean value true, the instance validates\n     * > successfully if all of its elements are unique.\n     * > JSON Schema Validation Section 5.3.4\n     *\n     * TODO\n     * optimize\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'uniqueItems',\n    value: function uniqueItems() {\n      var uniqueItems = this.schema.uniqueItems,\n          address = this.address;\n\n      var block = '';\n\n      if (uniqueItems === true) {\n        block += '\\n        // validate ' + address + ' unique items\\n        let values = value.map(v => JSON.stringify(v)) // TODO: optimize\\n        let set = new Set(values)\\n        if (values.length !== set.size) {\\n          valid = false\\n          errors.push({\\n            keyword: \\'uniqueItems\\',\\n            message: \\'items must be unique\\'\\n          })\\n        }\\n      ';\n      }\n\n      return block;\n    }\n\n    /**\n     * minLength\n     *\n     * @description\n     * > A string instance is valid against this keyword if its length is\n     * > greater than, or equal to, the value of this keyword. The length of\n     * > a string instance is defined as the number of its characters as\n     * > defined by RFC 4627 [RFC4627].\n     * > JSON Schema Validation Section 5.2.2\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'minLength',\n    value: function minLength() {\n      var minLength = this.schema.minLength,\n          address = this.address;\n\n\n      return '\\n        // ' + address + ' validate minLength\\n        if (Array.from(value).length < ' + minLength + ') {\\n          valid = false\\n          errors.push({\\n            keyword: \\'minLength\\',\\n            message: \\'too short\\'\\n          })\\n        }\\n    ';\n    }\n\n    /**\n     * maxLength\n     *\n     * @description\n     * > A string instance is valid against this keyword if its length is less\n     * > than, or equal to, the value of this keyword. The length of a string\n     * > instance is defined as the number of its characters as defined by\n     * > RFC 4627 [RFC4627].\n     * > JSON Schema Validation Section 5.2.1\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'maxLength',\n    value: function maxLength() {\n      var maxLength = this.schema.maxLength,\n          address = this.address;\n\n\n      return '\\n        // ' + address + ' validate maxLength\\n        if (Array.from(value).length > ' + maxLength + ') {\\n          valid = false\\n          errors.push({\\n            keyword: \\'maxLength\\',\\n            message: \\'too long\\'\\n          })\\n        }\\n    ';\n    }\n\n    /**\n     * Pattern\n     *\n     * @description\n     * > A string instance is considered valid if the regular expression\n     * > matches the instance successfully.\n     * > JSON Schema Validation Section 5.2.3\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'pattern',\n    value: function pattern() {\n      var pattern = this.schema.pattern,\n          address = this.address;\n\n\n      if (pattern) {\n        return '\\n          // ' + address + ' validate pattern\\n          if (!value.match(new RegExp(\\'' + pattern + '\\'))) {\\n            valid = false\\n            errors.push({\\n              keyword: \\'pattern\\',\\n              message: \\'does not match the required pattern\\'\\n            })\\n          }\\n      ';\n      }\n    }\n\n    /**\n     * Format\n     *\n     * @description\n     * > Structural validation alone may be insufficient to validate that\n     * > an instance meets all the requirements of an application. The\n     * > \"format\" keyword is defined to allow interoperable semantic\n     * > validation for a fixed subset of values which are accurately\n     * > described by authoritative resources, be they RFCs or other\n     * > external specifications.\n     * > JSON Schema Validation Section 7.1\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'format',\n    value: function format() {\n      var format = this.schema.format,\n          address = this.address;\n\n      var matcher = formats.resolve(format);\n\n      if (matcher) {\n        return '\\n      // ' + address + ' validate format\\n      if (!value.match(' + matcher + ')) {\\n        valid = false\\n        errors.push({\\n          keyword: \\'format\\',\\n          message: \\'is not \"' + format + '\" format\\'\\n        })\\n      }\\n      ';\n      }\n    }\n\n    /**\n     * Minimum\n     *\n     * @description\n     * > Successful validation depends on the presence and value of\n     * > \"exclusiveMinimum\": if \"exclusiveMinimum\" is not present, or has\n     * > boolean value false, then the instance is valid if it is greater\n     * > than, or equal to, the value of \"minimum\"; if \"exclusiveMinimum\" is\n     * > present and has boolean value true, the instance is valid if it is\n     * > strictly greater than the value of \"minimum\".\n     * > JSON Schema Validation Section 5.1.3\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'minimum',\n    value: function minimum() {\n      var _schema3 = this.schema,\n          minimum = _schema3.minimum,\n          exclusiveMinimum = _schema3.exclusiveMinimum,\n          address = this.address;\n\n      var operator = exclusiveMinimum === true ? '<=' : '<';\n\n      return '\\n        // ' + address + ' validate minimum\\n        if (value ' + operator + ' ' + minimum + ') {\\n          valid = false\\n          errors.push({\\n            keyword: \\'minimum\\',\\n            message: \\'too small\\'\\n          })\\n        }\\n    ';\n    }\n\n    /**\n     * Maximum\n     *\n     * @description\n     * > Successful validation depends on the presence and value of\n     * > \"exclusiveMaximum\": if \"exclusiveMaximum\" is not present, or has\n     * > boolean value false, then the instance is valid if it is lower than,\n     * > or equal to, the value of \"maximum\"; if \"exclusiveMaximum\" has\n     * > boolean value true, the instance is valid if it is strictly lower\n     * > than the value of \"maximum\".\n     * > JSON Schema Validation Section 5.1.2\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'maximum',\n    value: function maximum() {\n      var _schema4 = this.schema,\n          maximum = _schema4.maximum,\n          exclusiveMaximum = _schema4.exclusiveMaximum,\n          address = this.address;\n\n      var operator = exclusiveMaximum === true ? '>=' : '>';\n\n      return '\\n        // ' + address + ' validate maximum\\n        if (value ' + operator + ' ' + maximum + ') {\\n          valid = false\\n          errors.push({\\n            keyword: \\'maximum\\',\\n            message: \\'too large\\'\\n          })\\n        }\\n    ';\n    }\n\n    /**\n     * multipleOf\n     *\n     * @description\n     * > A numeric instance is valid against \"multipleOf\" if the result of\n     * > the division of the instance by this keyword's value is an integer.\n     * > JSON Schema Validation Section 5.1.1\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'multipleOf',\n    value: function multipleOf() {\n      var multipleOf = this.schema.multipleOf;\n\n      var block = '';\n\n      if (typeof multipleOf === 'number') {\n        var length = multipleOf.toString().length;\n        var decimals = length - multipleOf.toFixed(0).length - 1;\n        var pow = decimals > 0 ? Math.pow(10, decimals) : 1;\n        var condition = void 0;\n\n        if (decimals > 0) {\n          condition = '(value * ' + pow + ') % ' + multipleOf * pow + ' !== 0';\n        } else {\n          condition = 'value % ' + multipleOf + ' !== 0';\n        }\n\n        block += '\\n        if (' + condition + ') {\\n          valid = false\\n          errors.push({\\n            keyword: \\'multipleOf\\',\\n            message: \\'must be a multiple of ' + multipleOf + '\\'\\n          })\\n        }\\n      ';\n      }\n\n      return block;\n    }\n  }]);\n\n  return Validator;\n}();\n\n/**\n * Export\n */\n\n\nmodule.exports = Validator;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-document/lib/Validator.js\n// module id = 102\n// module chunks = 0","'use strict';\n\n/**\n * @module JSON Object Signing and Encryption (JOSE)\n */\nvar JWA = require('./jose/JWA');\nvar JWK = require('./jose/JWK');\nvar JWKSet = require('./jose/JWKSet');\nvar JWT = require('./jose/JWT');\nvar JWS = require('./jose/JWS');\nvar Base64URLSchema = require('./schemas/Base64URLSchema');\nvar JOSEHeaderSchema = require('./schemas/JOSEHeaderSchema');\nvar JWKSchema = require('./schemas/JWKSchema');\nvar JWKSetSchema = require('./schemas/JWKSetSchema');\nvar JWTClaimsSetSchema = require('./schemas/JWTClaimsSetSchema');\nvar JWTSchema = require('./schemas/JWTSchema');\n\n/**\n * Export\n */\nmodule.exports = {\n  JWA: JWA,\n  JWK: JWK,\n  JWKSet: JWKSet,\n  JWT: JWT,\n  JWS: JWS,\n  Base64URLSchema: Base64URLSchema,\n  JOSEHeaderSchema: JOSEHeaderSchema,\n  JWKSchema: JWKSchema,\n  JWKSetSchema: JWKSetSchema,\n  JWTClaimsSetSchema: JWTClaimsSetSchema,\n  JWTSchema: JWTSchema\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/jose/lib/index.js\n// module id = 103\n// module chunks = 0","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Dependencies\n *\n * TODO\n * - switch between Node.js webcrypto package and browser implementation\n */\nvar base64url = require('base64url');\nvar supportedAlgorithms = require('../algorithms');\n\nvar _require = require('../errors'),\n    NotSupportedError = _require.NotSupportedError;\n\n/**\n * JWA\n * https://tools.ietf.org/html/rfc7518\n */\n\n\nvar JWA = function () {\n  function JWA() {\n    _classCallCheck(this, JWA);\n  }\n\n  _createClass(JWA, null, [{\n    key: 'sign',\n\n\n    /**\n     * Sign\n     *\n     * @description\n     * Create a digital signature.\n     *\n     * @param {string} alg\n     * @param {CryptoKey} key\n     * @param {string|Buffer} data\n     *\n     * @return {Promise}\n     */\n    value: function sign(alg, key, data) {\n      // normalize the algorithm\n      var normalizedAlgorithm = supportedAlgorithms.normalize('sign', alg);\n\n      // validate algorithm is supported\n      if (normalizedAlgorithm instanceof Error) {\n        return Promise.reject(new NotSupportedError(alg));\n      }\n\n      // validate type of key\n      // TODO\n      //  - is the key suitable for the algorithm?\n      //  - does that get validated in webcrypto?\n      //if (key instanceof CryptoKey) {\n      //  return Promise.reject(new InvalidKeyError())\n      //}\n\n      // sign the data\n      return normalizedAlgorithm.sign(key, data);\n    }\n\n    /**\n     * Verify\n     *\n     * @description\n     * Verify a digital signature.\n     *\n     * @param {string} alg\n     * @param {CryptoKey} privateKey\n     * @param {string|Buffer} signature\n     * @param {string|Buffer} data\n     *\n     * @return {Promise}\n     */\n\n  }, {\n    key: 'verify',\n    value: function verify(alg, key, signature, data) {\n      var normalizedAlgorithm = supportedAlgorithms.normalize('verify', alg);\n\n      if (normalizedAlgorithm instanceof Error) {\n        return Promise.reject(new NotSupportedError(alg));\n      }\n\n      // TODO\n      // validate publicKey\n\n      // verify the signature\n      return normalizedAlgorithm.verify(key, signature, data);\n    }\n\n    /**\n     * Encrypt\n     */\n\n    /**\n     * Decrypt\n     */\n\n    /**\n     * Import\n     */\n\n  }, {\n    key: 'importKey',\n    value: function importKey(key) {\n      var normalizedAlgorithm = supportedAlgorithms.normalize('importKey', key.alg);\n      return normalizedAlgorithm.importKey(key);\n    }\n  }]);\n\n  return JWA;\n}();\n\n/**\n * Export\n */\n\n\nmodule.exports = JWA;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/jose/lib/jose/JWA.js\n// module id = 104\n// module chunks = 0","function fromBase64(base64string) {\n  return (\n    base64string\n      .replace(/=/g, '')\n      .replace(/\\+/g, '-')\n      .replace(/\\//g, '_')\n  );\n}\n\nfunction toBase64(base64UrlString) {\n  if (Buffer.isBuffer(base64UrlString))\n    base64UrlString = base64UrlString.toString();\n\n  var b64str = padString(base64UrlString)\n    .replace(/\\-/g, '+')\n    .replace(/_/g, '/');\n  return b64str;\n}\n\nfunction padString(string) {\n  var segmentLength = 4;\n  var stringLength = string.length;\n  var diff = string.length % segmentLength;\n  if (!diff)\n    return string;\n  var position = stringLength;\n  var padLength = segmentLength - diff;\n  var paddedStringLength = stringLength + padLength;\n  var buffer = Buffer(paddedStringLength);\n  buffer.write(string);\n  while (padLength--)\n    buffer.write('=', position++);\n  return buffer.toString();\n}\n\nfunction decodeBase64Url(base64UrlString, encoding) {\n  return Buffer(toBase64(base64UrlString), 'base64').toString(encoding);\n}\n\nfunction base64url(stringOrBuffer, encoding) {\n  return fromBase64(Buffer(stringOrBuffer, encoding).toString('base64'));\n}\n\nfunction toBuffer(base64string) {\n  return Buffer(toBase64(base64string), 'base64');\n}\n\nbase64url.toBase64 = toBase64;\nbase64url.fromBase64 = fromBase64;\nbase64url.decode = decodeBase64Url;\nbase64url.encode = base64url;\nbase64url.toBuffer = toBuffer;\n\nmodule.exports = base64url;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/jose/~/base64url/index.js\n// module id = 105\n// module chunks = 0","'use strict';\n\n/**\n * Local dependencies\n */\nvar HMAC = require('./HMAC');\nvar RSASSA_PKCS1_v1_5 = require('./RSASSA-PKCS1-v1_5');\nvar SupportedAlgorithms = require('./SupportedAlgorithms');\n\n/**\n * Register Supported Algorithms\n */\nvar supportedAlgorithms = new SupportedAlgorithms();\n\n/**\n * Sign\n */\nsupportedAlgorithms.define('HS256', 'sign', new HMAC({\n  name: 'HMAC',\n  hash: {\n    name: 'SHA-256'\n  }\n}));\n\nsupportedAlgorithms.define('HS384', 'sign', new HMAC({\n  name: 'HMAC',\n  hash: {\n    name: 'SHA-384'\n  }\n}));\n\nsupportedAlgorithms.define('HS512', 'sign', new HMAC({\n  name: 'HMAC',\n  hash: {\n    name: 'SHA-512'\n  }\n}));\n\nsupportedAlgorithms.define('RS256', 'sign', new RSASSA_PKCS1_v1_5({\n  name: 'RSASSA-PKCS1-v1_5',\n  hash: {\n    name: 'SHA-256'\n  }\n}));\n\nsupportedAlgorithms.define('RS384', 'sign', new RSASSA_PKCS1_v1_5({\n  name: 'RSASSA-PKCS1-v1_5',\n  hash: {\n    name: 'SHA-384'\n  }\n}));\n\nsupportedAlgorithms.define('RS512', 'sign', new RSASSA_PKCS1_v1_5({\n  name: 'RSASSA-PKCS1-v1_5',\n  hash: {\n    name: 'SHA-512'\n  }\n}));\n//supportedAlgorithms.define('ES256', 'sign', {})\n//supportedAlgorithms.define('ES384', 'sign', {})\n//supportedAlgorithms.define('ES512', 'sign', {})\n//supportedAlgorithms.define('PS256', 'sign', {})\n//supportedAlgorithms.define('PS384', 'sign', {})\n//supportedAlgorithms.define('PS512', 'sign', {})\nsupportedAlgorithms.define('none', 'sign', {});\n\n/**\n * Verify\n */\nsupportedAlgorithms.define('HS256', 'verify', new HMAC({\n  name: 'HMAC',\n  hash: {\n    name: 'SHA-256'\n  }\n}));\n\nsupportedAlgorithms.define('HS384', 'verify', new HMAC({\n  name: 'HMAC',\n  hash: {\n    name: 'SHA-384'\n  }\n}));\n\nsupportedAlgorithms.define('HS512', 'verify', new HMAC({\n  name: 'HMAC',\n  hash: {\n    name: 'SHA-512'\n  }\n}));\n\nsupportedAlgorithms.define('RS256', 'verify', new RSASSA_PKCS1_v1_5({\n  name: 'RSASSA-PKCS1-v1_5',\n  hash: {\n    name: 'SHA-256'\n  }\n}));\n\nsupportedAlgorithms.define('RS384', 'verify', new RSASSA_PKCS1_v1_5({\n  name: 'RSASSA-PKCS1-v1_5',\n  hash: {\n    name: 'SHA-384'\n  }\n}));\n\nsupportedAlgorithms.define('RS512', 'verify', new RSASSA_PKCS1_v1_5({\n  name: 'RSASSA-PKCS1-v1_5',\n  hash: {\n    name: 'SHA-512'\n  }\n}));\n//supportedAlgorithms.define('ES256', 'verify', {})\n//supportedAlgorithms.define('ES384', 'verify', {})\n//supportedAlgorithms.define('ES512', 'verify', {})\n//supportedAlgorithms.define('PS256', 'verify', {})\n//supportedAlgorithms.define('PS384', 'verify', {})\n//supportedAlgorithms.define('PS512', 'verify', {})\nsupportedAlgorithms.define('none', 'verify', {});\n\nsupportedAlgorithms.define('RS256', 'importKey', new RSASSA_PKCS1_v1_5({\n  name: 'RSASSA-PKCS1-v1_5',\n  hash: {\n    name: 'SHA-256'\n  }\n}));\n\nsupportedAlgorithms.define('RS384', 'importKey', new RSASSA_PKCS1_v1_5({\n  name: 'RSASSA-PKCS1-v1_5',\n  hash: {\n    name: 'SHA-384'\n  }\n}));\n\nsupportedAlgorithms.define('RS512', 'importKey', new RSASSA_PKCS1_v1_5({\n  name: 'RSASSA-PKCS1-v1_5',\n  hash: {\n    name: 'SHA-512'\n  }\n}));\n\n/**\n * Export\n */\nmodule.exports = supportedAlgorithms;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/jose/lib/algorithms/index.js\n// module id = 106\n// module chunks = 0","'use strict';\n\n/**\n * Dependencies\n * @ignore\n */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar base64url = require('base64url');\nvar crypto = require('webcrypto');\nvar TextEncoder = require('../text-encoder');\n\n/**\n * HMAC with SHA-2 Functions\n */\n\nvar HMAC = function () {\n\n  /**\n   * Constructor\n   *\n   * @param {string} bitlength\n   */\n  function HMAC(params) {\n    _classCallCheck(this, HMAC);\n\n    this.params = params;\n  }\n\n  /**\n   * Sign\n   *\n   * @description\n   * Generate a hash-based message authentication code for a\n   * given input and key. Enforce the key length is equal to\n   * or greater than the bitlength.\n   *\n   * @param {CryptoKey} key\n   * @param {string} data\n   *\n   * @returns {string}\n   */\n\n\n  _createClass(HMAC, [{\n    key: 'sign',\n    value: function sign(key, data) {\n      var algorithm = this.params;\n\n      // TODO: validate key length\n\n      data = new TextEncoder().encode(data);\n\n      return crypto.subtle.sign(algorithm, key, data).then(function (signature) {\n        return base64url(Buffer.from(signature));\n      });\n    }\n\n    /**\n     * Verify\n     *\n     * @description\n     * Verify a digital signature for a given input and private key.\n     *\n     * @param {CryptoKey} key\n     * @param {string} signature\n     * @param {string} data\n     *\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: 'verify',\n    value: function verify(key, signature, data) {\n      var algorithm = this.params;\n\n      if (typeof signature === 'string') {\n        signature = Uint8Array.from(base64url.toBuffer(signature));\n      }\n\n      if (typeof data === 'string') {\n        data = new TextEncoder().encode(data);\n      }\n\n      return crypto.subtle.verify(algorithm, key, signature, data);\n    }\n\n    /**\n     * Assert Sufficient Key Length\n     *\n     * @description Assert that the key length is sufficient\n     * @param {string} key\n     */\n\n  }, {\n    key: 'assertSufficientKeyLength',\n    value: function assertSufficientKeyLength(key) {\n      if (key.length < this.bitlength) {\n        throw new Error('The key is too short.');\n      }\n    }\n  }]);\n\n  return HMAC;\n}();\n\n/**\n * Export\n */\n\n\nmodule.exports = HMAC;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/jose/lib/algorithms/HMAC.js\n// module id = 107\n// module chunks = 0","module.exports = crypto;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"crypto\"\n// module id = 108\n// module chunks = 0","'use strict';\n\nvar TextEncoder = global.TextEncoder ? global.TextEncoder // browser\n: require('text-encoding').TextEncoder; // node shim\nmodule.exports = TextEncoder;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/jose/lib/text-encoder/index.js\n// module id = 109\n// module chunks = 0","module.exports = TextEncoder;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"TextEncoder\"\n// module id = 110\n// module chunks = 0","'use strict';\n\n/**\n * Dependencies\n * @ignore\n */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar base64url = require('base64url');\nvar crypto = require('webcrypto');\nvar TextEncoder = require('../text-encoder');\n\n/**\n * RSASSA-PKCS1-v1_5\n */\n\nvar RSASSA_PKCS1_v1_5 = function () {\n\n  /**\n   * constructor\n   *\n   * @param {string} bitlength\n   */\n  function RSASSA_PKCS1_v1_5(params) {\n    _classCallCheck(this, RSASSA_PKCS1_v1_5);\n\n    this.params = params;\n  }\n\n  /**\n   * sign\n   *\n   * @description\n   * Generate a digital signature for a given input and private key.\n   *\n   * @param {CryptoKey} key\n   * @param {BufferSource} data\n   *\n   * @returns {Promise}\n   */\n\n\n  _createClass(RSASSA_PKCS1_v1_5, [{\n    key: 'sign',\n    value: function sign(key, data) {\n      var algorithm = this.params;\n\n      // TODO\n      //if (!this.sufficientKeySize()) {\n      //  return Promise.reject(\n      //    new Error(\n      //      'A key size of 2048 bits or larger must be used with RSASSA-PKCS1-v1_5'\n      //    )\n      //  )\n      //}\n\n      data = new TextEncoder().encode(data);\n\n      return crypto.subtle.sign(algorithm, key, data).then(function (signature) {\n        return base64url(Buffer.from(signature));\n      });\n    }\n\n    /**\n     * verify\n     *\n     * @description\n     * Verify a digital signature for a given input and private key.\n     *\n     * @param {CryptoKey} key\n     * @param {BufferSource} signature\n     * @param {BufferSource} data\n     *\n     * @returns {Promise}\n     */\n\n  }, {\n    key: 'verify',\n    value: function verify(key, signature, data) {\n      var algorithm = this.params;\n\n      if (typeof signature === 'string') {\n        signature = Uint8Array.from(base64url.toBuffer(signature));\n      }\n\n      if (typeof data === 'string') {\n        data = new TextEncoder().encode(data);\n      }\n      // ...\n\n      return crypto.subtle.verify(algorithm, key, signature, data);\n    }\n\n    /**\n     * importKey\n     *\n     * @param {JWK} key\n     * @returns {Promise}\n     */\n\n  }, {\n    key: 'importKey',\n    value: function importKey(key) {\n      var jwk = Object.assign({}, key);\n      var algorithm = this.params;\n      var usages = key['key_ops'] || [];\n\n      if (key.use === 'sig') {\n        usages.push('verify');\n      }\n\n      if (key.use === 'enc') {\n        // TODO: handle encryption keys\n        return Promise.resolve(key);\n      }\n\n      if (key.key_ops) {\n        usages = key.key_ops;\n      }\n\n      return crypto.subtle.importKey('jwk', jwk, algorithm, true, usages).then(function (cryptoKey) {\n        Object.defineProperty(jwk, 'cryptoKey', {\n          enumerable: false,\n          value: cryptoKey\n        });\n\n        return jwk;\n      });\n    }\n  }]);\n\n  return RSASSA_PKCS1_v1_5;\n}();\n\n/**\n * Export\n */\n\n\nmodule.exports = RSASSA_PKCS1_v1_5;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/jose/lib/algorithms/RSASSA-PKCS1-v1_5.js\n// module id = 111\n// module chunks = 0","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Dependencies\n */\nvar NotSupportedError = require('../errors/NotSupportedError');\n\n/**\n * Operations\n */\nvar operations = ['sign', 'verify', 'encrypt', 'decrypt', 'importKey'];\n\n/**\n * SupportedAlgorithms\n */\n\nvar SupportedAlgorithms = function () {\n\n  /**\n   * constructor\n   */\n  function SupportedAlgorithms() {\n    var _this = this;\n\n    _classCallCheck(this, SupportedAlgorithms);\n\n    operations.forEach(function (op) {\n      _this[op] = {};\n    });\n  }\n\n  /**\n   * Supported Operations\n   */\n\n\n  _createClass(SupportedAlgorithms, [{\n    key: 'define',\n\n\n    /**\n     * define\n     *\n     * @description\n     * Register Web Crypto API algorithm parameter for an algorithm\n     * and operation.\n     *\n     * @param {string} alg\n     * @param {string} op\n     * @param {Object} argument\n     */\n    value: function define(alg, op, argument) {\n      var registeredAlgorithms = this[op];\n      registeredAlgorithms[alg] = argument;\n    }\n\n    /**\n     * normalize\n     *\n     * @description\n     * Map JWA alg name to Web Crypto API algorithm parameter\n     *\n     * @param {string} op\n     * @param {Object} alg\n     *\n     * @returns {Object}\n     */\n\n  }, {\n    key: 'normalize',\n    value: function normalize(op, alg) {\n      var registeredAlgorithms = this[op];\n\n      if (!registeredAlgorithms) {\n        return new SyntaxError(); // what kind of error should this be?\n      }\n\n      var argument = registeredAlgorithms[alg];\n\n      if (!argument) {\n        return new NotSupportedError(alg);\n      }\n\n      return argument;\n    }\n  }], [{\n    key: 'operations',\n    get: function get() {\n      return operations;\n    }\n  }]);\n\n  return SupportedAlgorithms;\n}();\n\n/**\n * Export\n */\n\n\nmodule.exports = SupportedAlgorithms;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/jose/lib/algorithms/SupportedAlgorithms.js\n// module id = 112\n// module chunks = 0","\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * NotSupportedError\n */\nvar NotSupportedError = function (_Error) {\n  _inherits(NotSupportedError, _Error);\n\n  function NotSupportedError(alg) {\n    _classCallCheck(this, NotSupportedError);\n\n    var _this = _possibleConstructorReturn(this, (NotSupportedError.__proto__ || Object.getPrototypeOf(NotSupportedError)).call(this));\n\n    _this.message = alg + \" is not a supported algorithm\";\n    return _this;\n  }\n\n  return NotSupportedError;\n}(Error);\n\n/**\n * Export\n */\n\n\nmodule.exports = NotSupportedError;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/jose/lib/errors/NotSupportedError.js\n// module id = 113\n// module chunks = 0","'use strict';\n\nmodule.exports = {\n  DataError: require('./DataError'),\n  NotSupportedError: require('./NotSupportedError')\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/jose/lib/errors/index.js\n// module id = 114\n// module chunks = 0","\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * DataError\n */\nvar DataError = function (_Error) {\n  _inherits(DataError, _Error);\n\n  function DataError(message) {\n    _classCallCheck(this, DataError);\n\n    return _possibleConstructorReturn(this, (DataError.__proto__ || Object.getPrototypeOf(DataError)).call(this, message));\n  }\n\n  return DataError;\n}(Error);\n\n/**\n * Export\n */\n\n\nmodule.exports = DataError;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/jose/lib/errors/DataError.js\n// module id = 115\n// module chunks = 0","'use strict';\n\n/**\n * Dependencies\n * @ignore\n */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _require = require('json-document'),\n    JSONDocument = _require.JSONDocument;\n\nvar JWKSchema = require('../schemas/JWKSchema');\nvar JWA = require('./JWA');\n\n/**\n * JWK Class\n */\n\nvar JWK = function (_JSONDocument) {\n  _inherits(JWK, _JSONDocument);\n\n  function JWK() {\n    _classCallCheck(this, JWK);\n\n    return _possibleConstructorReturn(this, (JWK.__proto__ || Object.getPrototypeOf(JWK)).apply(this, arguments));\n  }\n\n  _createClass(JWK, null, [{\n    key: 'importKey',\n\n\n    /**\n     * importKey\n     *\n     * TODO:\n     * - should this be on JWA?\n     */\n    value: function importKey(jwk) {\n      return JWA.importKey(jwk);\n    }\n  }, {\n    key: 'schema',\n\n\n    /**\n     * Schema\n     */\n    get: function get() {\n      return JWKSchema;\n    }\n  }]);\n\n  return JWK;\n}(JSONDocument);\n\n/**\n * Export\n */\n\n\nmodule.exports = JWK;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/jose/lib/jose/JWK.js\n// module id = 116\n// module chunks = 0","'use strict';\n\n/**\n * Dependencies\n * @ignore\n */\n\nvar _require = require('json-document'),\n    JSONSchema = _require.JSONSchema;\n\nvar _require2 = require('../formats'),\n    BASE64_REGEXP = _require2.BASE64_REGEXP;\n\n/**\n * JWK Schema\n */\n\n\nvar JWKSchema = new JSONSchema({\n  type: 'object',\n  properties: {\n\n    kty: {\n      type: 'string',\n      //format: 'case-sensitive',\n      enum: ['RSA', 'EC', 'oct'] // other values MAY be used\n    },\n\n    use: {\n      type: 'string',\n      //format: 'case-sensitive',\n      enum: ['sig', 'enc'] // other values MAY be used\n    },\n\n    key_ops: {\n      type: 'array',\n      //format: 'case-sensitive',\n      enum: ['sign', 'verify', 'encrypt', 'decrypt', 'wrapKey', 'unwrapKey', 'deriveKey', 'deriveBits'] // other values MAY be used\n    },\n\n    alg: {\n      type: 'string',\n      //format: 'case-sensitive',\n      enum: ['HS256', 'HS384', 'HS512', 'RS256', 'RS384', 'RS512', 'ES256', 'ES384', 'ES512', 'PS256', 'PS384', 'PS512', 'none'] // other values MAY be used\n    },\n\n    kid: {\n      type: 'string'\n    },\n\n    x5u: {\n      type: 'string'\n    },\n\n    x5c: {\n      type: 'array'\n    },\n\n    x5t: {\n      type: 'string'\n    }\n\n  }\n});\n\n/**\n * Export\n */\nmodule.exports = JWKSchema;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/jose/lib/schemas/JWKSchema.js\n// module id = 117\n// module chunks = 0","'use strict';\n\n/**\n * Package dependencies\n */\nvar _require = require('json-document'),\n    Formats = _require.Formats;\n\n/**\n * Format extensions\n */\n\n\nFormats.register('StringOrURI', new RegExp());\nFormats.register('NumericDate', new RegExp());\nFormats.register('URI', new RegExp());\nFormats.register('url', new RegExp());\nFormats.register('base64', new RegExp());\nFormats.register('base64url', new RegExp());\nFormats.register('MediaType', new RegExp());\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/jose/lib/formats/index.js\n// module id = 118\n// module chunks = 0","'use strict';\n\n/**\n * Dependencies\n */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _require = require('json-document'),\n    JSONDocument = _require.JSONDocument;\n\nvar JWKSetSchema = require('../schemas/JWKSetSchema');\nvar JWK = require('./JWK');\n\n/**\n * JWKSet\n *\n * @class\n * JWKSet represents a JSON Web Key Set as described in Section 5 of RFC 7517:\n * https://tools.ietf.org/html/rfc7517#section-5\n */\n\nvar JWKSet = function (_JSONDocument) {\n  _inherits(JWKSet, _JSONDocument);\n\n  function JWKSet() {\n    _classCallCheck(this, JWKSet);\n\n    return _possibleConstructorReturn(this, (JWKSet.__proto__ || Object.getPrototypeOf(JWKSet)).apply(this, arguments));\n  }\n\n  _createClass(JWKSet, null, [{\n    key: 'importKeys',\n\n\n    /**\n     * importKeys\n     */\n    value: function importKeys(jwks) {\n      var validation = this.schema.validate(jwks);\n\n      if (!validation.valid) {\n        Promise.reject(validation);\n      }\n\n      var imported = new JWKSet(jwks);\n      var importing = jwks.keys.map(function (key) {\n        return JWK.importKey(key);\n      });\n\n      return Promise.all(importing).then(function (keys) {\n        imported.keys = keys;\n        return imported;\n      });\n    }\n  }, {\n    key: 'schema',\n\n\n    /**\n     * schema\n     */\n    get: function get() {\n      return JWKSetSchema;\n    }\n  }]);\n\n  return JWKSet;\n}(JSONDocument);\n\n/**\n * Export\n */\n\n\nmodule.exports = JWKSet;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/jose/lib/jose/JWKSet.js\n// module id = 119\n// module chunks = 0","'use strict';\n\n/**\n * Dependencies\n */\n\nvar _require = require('json-document'),\n    JSONSchema = _require.JSONSchema;\n\nvar JWKSchema = require('./JWKSchema');\n\n/**\n * JWKSetSchema\n */\nvar JWKSetSchema = new JSONSchema({\n  type: 'object',\n  properties: {\n    keys: {\n      type: 'array',\n      items: JWKSchema\n    }\n  }\n});\n\n/**\n * Export\n */\nmodule.exports = JWKSetSchema;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/jose/lib/schemas/JWKSetSchema.js\n// module id = 120\n// module chunks = 0","'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Dependencies\n */\nvar base64url = require('base64url');\n\nvar _require = require('json-document'),\n    JSONDocument = _require.JSONDocument;\n\nvar JWTSchema = require('../schemas/JWTSchema');\nvar JWS = require('./JWS');\nvar DataError = require('../errors/DataError');\n\n/**\n * JWT\n */\n\nvar JWT = function (_JSONDocument) {\n  _inherits(JWT, _JSONDocument);\n\n  function JWT() {\n    _classCallCheck(this, JWT);\n\n    return _possibleConstructorReturn(this, (JWT.__proto__ || Object.getPrototypeOf(JWT)).apply(this, arguments));\n  }\n\n  _createClass(JWT, [{\n    key: 'isJWE',\n\n\n    /**\n     * isJWE\n     */\n    value: function isJWE() {\n      return !!this.header.enc;\n    }\n\n    /**\n     * resolveKeys\n     * @param jwks {Array<JWK>|JWK|JWKSet}\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: 'resolveKeys',\n    value: function resolveKeys(jwks) {\n      var kid = this.header.kid;\n      var keys = void 0,\n          match = void 0;\n\n      // treat an array as the \"keys\" property of a JWK Set\n      if (Array.isArray(jwks)) {\n        keys = jwks;\n      }\n\n      // presence of keys indicates object is a JWK Set\n      if (jwks.keys) {\n        keys = jwks.keys;\n      }\n\n      // wrap a plain object they is not a JWK Set in Array\n      if (!jwks.keys && (typeof jwks === 'undefined' ? 'undefined' : _typeof(jwks)) === 'object') {\n        keys = [jwks];\n      }\n\n      // ensure there are keys to search\n      if (!keys) {\n        throw new DataError('Invalid JWK argument');\n      }\n\n      // match by \"kid\" or \"use\" header\n      if (kid) {\n        match = keys.find(function (jwk) {\n          return jwk.kid === kid;\n        });\n      } else {\n        match = keys.find(function (jwk) {\n          return jwk.use === 'sig';\n        });\n      }\n\n      // assign matching key to JWT and return a boolean\n      if (match) {\n        console.log(match);\n        this.key = match.cryptoKey;\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    /**\n     * encode\n     *\n     * @description\n     * Encode a JWT instance\n     *\n     * @returns {Promise}\n     */\n\n  }, {\n    key: 'encode',\n    value: function encode() {\n      // validate\n      var validation = this.validate();\n\n      if (!validation.valid) {\n        return Promise.reject(validation);\n      }\n\n      var token = this;\n\n      if (this.isJWE()) {\n        return JWE.encrypt(token);\n      } else {\n        return JWS.sign(token);\n      }\n    }\n\n    /**\n     * verify\n     *\n     * @description\n     * Verify a decoded JWT instance\n     *\n     * @returns {Promise}\n     */\n\n  }, {\n    key: 'verify',\n    value: function verify() {\n      var validation = this.validate();\n\n      if (!validation.valid) {\n        return Promise.reject(validation);\n      }\n\n      return JWS.verify(this);\n    }\n  }], [{\n    key: 'decode',\n\n\n    /**\n     * decode\n     *\n     * @description\n     * Decode a JSON Web Token\n     *\n     * @param {string} data\n     * @returns {JWT}\n     */\n    value: function decode(data) {\n      var ExtendedJWT = this;\n      var jwt = void 0;\n\n      if (typeof data !== 'string') {\n        throw new DataError('JWT must be a string');\n      }\n\n      // JSON of Flattened JSON Serialization\n      if (data.startsWith('{')) {\n        try {\n          data = JSON.parse(data, function () {});\n        } catch (error) {\n          throw new DataError('Invalid JWT serialization');\n        }\n\n        if (data.signatures || data.recipients) {\n          data.serialization = 'json';\n        } else {\n          data.serialization = 'flattened';\n        }\n\n        jwt = new ExtendedJWT(data);\n\n        // Compact Serialization\n      } else {\n        try {\n          var serialization = 'compact';\n          var segments = data.split('.');\n          var length = segments.length;\n\n          if (length !== 3 && length !== 5) {\n            throw new Error('Malformed JWT');\n          }\n\n          var header = JSON.parse(base64url.decode(segments[0]));\n\n          // JSON Web Signature\n          if (length === 3) {\n            var type = 'JWS';\n            var payload = JSON.parse(base64url.decode(segments[1]));\n            var signature = segments[2];\n\n            jwt = new ExtendedJWT({ type: type, segments: segments, header: header, payload: payload, signature: signature, serialization: serialization });\n          }\n\n          // JSON Web Encryption\n          if (length === 5) {\n            //let type = 'JWE'\n            //let [protected, encryption_key, iv, ciphertext, tag] = segments\n\n            //jwt = new ExtendedJWT({\n            //  type,\n            //  protected: base64url.decode(JSON.parse(protected)),\n            //  encryption_key,\n            //  iv,\n            //  ciphertext,\n            //  tag,\n            //  serialization\n            //})\n          }\n        } catch (error) {\n          throw new DataError('Invalid JWT compact serialization');\n        }\n      }\n\n      return jwt;\n    }\n\n    /**\n     * encode\n     *\n     * @description\n     * Encode a JSON Web Token\n     *\n     * @param {Object} header\n     * @param {Object} payload\n     * @param {CryptoKey} key\n     *\n     * @returns {Promise}\n     */\n\n  }, {\n    key: 'encode',\n    value: function encode(header, payload, key) {\n      var jwt = new JWT(header, payload);\n      return jwt.encode(key);\n    }\n\n    /**\n     * verify\n     *\n     * @description\n     *\n     * @param {CryptoKey} key\n     * @param {string} token\n     *\n     * @returns {Promise}\n     */\n\n  }, {\n    key: 'verify',\n    value: function verify(key, token) {\n      var jwt = JWT.decode(token);\n      jwt.key = key;\n      return jwt.verify().then(function (verified) {\n        return jwt;\n      });\n    }\n  }, {\n    key: 'schema',\n\n\n    /**\n     * schema\n     */\n    get: function get() {\n      return JWTSchema;\n    }\n  }]);\n\n  return JWT;\n}(JSONDocument);\n\n/**\n * Export\n */\n\n\nmodule.exports = JWT;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/jose/lib/jose/JWT.js\n// module id = 121\n// module chunks = 0","'use strict';\n\n/**\n * Dependencies\n */\nvar Base64URLSchema = require('./Base64URLSchema');\nvar JWTClaimsSetSchema = require('./JWTClaimsSetSchema');\nvar JOSEHeaderSchema = require('./JOSEHeaderSchema');\n\nvar _require = require('json-document'),\n    JSONSchema = _require.JSONSchema;\n\n/**\n * JWTSchema\n *\n * @description\n * This schema represents all the things a deserialized JWT can be, i.e.,\n * either a JWS or JWE, and any serialization of them. Validation of well-\n * formedness for a given serialization is accomplished at the time of\n * encoding.\n */\n\n\nvar JWTSchema = new JSONSchema({\n  type: 'object',\n  properties: {\n\n    /**\n     * type\n     */\n    type: {\n      type: 'string',\n      enum: ['JWS', 'JWE']\n    },\n\n    /**\n     * segments\n     */\n    segments: {\n      type: 'array'\n    },\n\n    /**\n     * header\n     */\n    header: JOSEHeaderSchema,\n\n    /**\n     * protected\n     */\n    protected: JOSEHeaderSchema,\n\n    /**\n     * unprotected\n     */\n    unprotected: JOSEHeaderSchema,\n\n    /**\n     * iv\n     */\n    iv: Base64URLSchema,\n\n    /**\n     * aad\n     */\n    aad: Base64URLSchema,\n\n    /**\n     * ciphertext\n     */\n    ciphertext: Base64URLSchema,\n\n    /**\n     * tag\n     */\n    tag: Base64URLSchema,\n\n    /**\n     * recipients\n     */\n    recipients: {\n      type: 'array',\n      items: {\n        type: 'object',\n        properties: {\n          header: JOSEHeaderSchema,\n          encrypted_key: Base64URLSchema\n        }\n      }\n    },\n\n    /**\n     * payload\n     */\n    payload: JWTClaimsSetSchema,\n\n    /**\n     * signatures\n     */\n    signatures: {\n      type: 'array',\n      items: {\n        type: 'object',\n        properties: {\n          protected: JOSEHeaderSchema,\n          header: JOSEHeaderSchema,\n          signature: Base64URLSchema,\n          key: { type: 'object' }\n        }\n      }\n    },\n\n    /**\n     * signature\n     */\n    signature: Base64URLSchema,\n\n    /**\n     * verified\n     */\n    verified: {\n      type: 'boolean',\n      default: false\n    },\n\n    /**\n     * key\n     */\n    key: {\n      type: 'object'\n    },\n\n    /**\n     * serialization\n     */\n    serialization: {\n      type: 'string',\n      enum: ['compact', 'json', 'flattened'],\n      default: 'compact'\n    }\n  }\n});\n\n/**\n * Export\n */\nmodule.exports = JWTSchema;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/jose/lib/schemas/JWTSchema.js\n// module id = 122\n// module chunks = 0","'use strict';\n\n/**\n * Dependencies\n */\nvar _require = require('json-document'),\n    JSONSchema = _require.JSONSchema;\n\n/**\n * Base64URLSchema\n */\n\n\nvar Base64URLSchema = new JSONSchema({\n  type: 'string',\n  format: 'base64url'\n});\n\n/**\n * Export\n */\nmodule.exports = Base64URLSchema;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/jose/lib/schemas/Base64URLSchema.js\n// module id = 123\n// module chunks = 0","'use strict';\n\n/**\n * Dependencies\n */\nvar _require = require('json-document'),\n    JSONSchema = _require.JSONSchema;\n\n/**\n * JWTClaimsSetSchema\n *\n * JSON Web Token (JWT)\n * https://tools.ietf.org/html/rfc7519#section-4\n *\n * 4.  JWT Claims\n *\n *   The JWT Claims Set represents a JSON object whose members are the\n *   claims conveyed by the JWT.  The Claim Names within a JWT Claims Set\n *   MUST be unique; JWT parsers MUST either reject JWTs with duplicate\n *   Claim Names or use a JSON parser that returns only the lexically last\n *   duplicate member name, as specified in Section 15.12 (\"The JSON\n *   Object\") of ECMAScript 5.1 [ECMAScript].\n *\n *   The set of claims that a JWT must contain to be considered valid is\n *   context dependent and is outside the scope of this specification.\n *   Specific applications of JWTs will require implementations to\n *   understand and process some claims in particular ways.  However, in\n *   the absence of such requirements, all claims that are not understood\n *   by implementations MUST be ignored.\n *\n *   There are three classes of JWT Claim Names: Registered Claim Names,\n *   Public Claim Names, and Private Claim Names.\n */\n\n\nvar JWTClaimsSetSchema = new JSONSchema({\n  properties: {\n\n    /**\n     * JSON Web Token (JWT)\n     * https://tools.ietf.org/html/rfc7519#section-4.1\n     *\n     * 4.1.  Registered Claim Names\n     *\n     *   The following Claim Names are registered in the IANA \"JSON Web Token\n     *   Claims\" registry established by Section 10.1.  None of the claims\n     *   defined below are intended to be mandatory to use or implement in all\n     *   cases, but rather they provide a starting point for a set of useful,\n     *   interoperable claims.  Applications using JWTs should define which\n     *   specific claims they use and when they are required or optional.  All\n     *   the names are short because a core goal of JWTs is for the\n     *   representation to be compact.\n     */\n\n    /**\n     * iss\n     *\n     * JSON Web Token (JWT)\n     * https://tools.ietf.org/html/rfc7519#section-4.1.1\n     *\n     * 4.1.1.  \"iss\" (Issuer) Claim\n     *\n     *   The \"iss\" (issuer) claim identifies the principal that issued the\n     *   JWT.  The processing of this claim is generally application specific.\n     *   The \"iss\" value is a case-sensitive string containing a StringOrURI\n     *   value.  Use of this claim is OPTIONAL.\n     */\n    iss: {\n      type: 'string',\n      format: 'StringOrURI'\n    },\n\n    /**\n     * sub\n     *\n     * JSON Web Token (JWT)\n     * https://tools.ietf.org/html/rfc7519#section-4.1.2\n     *\n     * 4.1.2.  \"sub\" (Subject) Claim\n     *\n     *   The \"sub\" (subject) claim identifies the principal that is the\n     *   subject of the JWT.  The claims in a JWT are normally statements\n     *   about the subject.  The subject value MUST either be scoped to be\n     *   locally unique in the context of the issuer or be globally unique.\n     *   The processing of this claim is generally application specific.  The\n     *   \"sub\" value is a case-sensitive string containing a StringOrURI\n     *   value.  Use of this claim is OPTIONAL.\n     */\n    sub: {\n      type: 'string',\n      format: 'StringOrURI'\n    },\n\n    /**\n     * aud\n     *\n     * JSON Web Token (JWT)\n     * https://tools.ietf.org/html/rfc7519#section-4.1.3\n     *\n     * 4.1.3.  \"aud\" (Audience) Claim\n     *\n     *   The \"aud\" (audience) claim identifies the recipients that the JWT is\n     *   intended for.  Each principal intended to process the JWT MUST\n     *   identify itself with a value in the audience claim.  If the principal\n     *   processing the claim does not identify itself with a value in the\n     *   \"aud\" claim when this claim is present, then the JWT MUST be\n     *   rejected.  In the general case, the \"aud\" value is an array of case-\n     *   sensitive strings, each containing a StringOrURI value.  In the\n     *   special case when the JWT has one audience, the \"aud\" value MAY be a\n     *   single case-sensitive string containing a StringOrURI value.  The\n     *   interpretation of audience values is generally application specific.\n     *   Use of this claim is OPTIONAL.\n     */\n    aud: {\n      type: ['array', 'string'],\n      format: 'StringOrURI',\n      items: {\n        format: 'StringOrURI'\n      }\n    },\n\n    /**\n     * exp\n     *\n     * JSON Web Token (JWT)\n     * https://tools.ietf.org/html/rfc7519#section-4.1.4\n     *\n     * 4.1.4.  \"exp\" (Expiration Time) Claim\n     *\n     *   The \"exp\" (expiration time) claim identifies the expiration time on\n     *   or after which the JWT MUST NOT be accepted for processing.  The\n     *   processing of the \"exp\" claim requires that the current date/time\n     *   MUST be before the expiration date/time listed in the \"exp\" claim.\n     *\n     *   Implementers MAY provide for some small leeway, usually no more than\n     *   a few minutes, to account for clock skew.  Its value MUST be a number\n     *   containing a NumericDate value.  Use of this claim is OPTIONAL.\n     *\n     */\n    exp: {\n      type: 'number',\n      format: 'NumericDate'\n    },\n\n    /**\n     * nbf\n     *\n     * JSON Web Token (JWT)\n     * https://tools.ietf.org/html/rfc7519#section-4.1.5\n     *\n     * 4.1.5.  \"nbf\" (Not Before) Claim\n     *\n     *   The \"nbf\" (not before) claim identifies the time before which the JWT\n     *   MUST NOT be accepted for processing.  The processing of the \"nbf\"\n     *   claim requires that the current date/time MUST be after or equal to\n     *   the not-before date/time listed in the \"nbf\" claim.  Implementers MAY\n     *   provide for some small leeway, usually no more than a few minutes, to\n     *   account for clock skew.  Its value MUST be a number containing a\n     *   NumericDate value.  Use of this claim is OPTIONAL.\n     */\n    nbf: {\n      type: 'number',\n      format: 'NumericDate'\n    },\n\n    /**\n     * iat\n     *\n     * JSON Web Token (JWT)\n     * https://tools.ietf.org/html/rfc7519#section-4.1.6\n     *\n     * 4.1.6.  \"iat\" (Issued At) Claim\n     *\n     *   The \"iat\" (issued at) claim identifies the time at which the JWT was\n     *   issued.  This claim can be used to determine the age of the JWT.  Its\n     *   value MUST be a number containing a NumericDate value.  Use of this\n     *   claim is OPTIONAL.\n     */\n    iat: {\n      type: 'number',\n      format: 'NumericDate'\n    },\n\n    /**\n     * jti\n     *\n     * JSON Web Token (JWT)\n     * https://tools.ietf.org/html/rfc7519#section-4.1.7\n     *\n     * 4.1.7.  \"jti\" (JWT ID) Claim\n     *\n     *   The \"jti\" (JWT ID) claim provides a unique identifier for the JWT.\n     *   The identifier value MUST be assigned in a manner that ensures that\n     *   there is a negligible probability that the same value will be\n     *   accidentally assigned to a different data object; if the application\n     *   uses multiple issuers, collisions MUST be prevented among values\n     *   produced by different issuers as well.  The \"jti\" claim can be used\n     *   to prevent the JWT from being replayed.  The \"jti\" value is a case-\n     *   sensitive string.  Use of this claim is OPTIONAL.\n     */\n    jti: {\n      type: 'string'\n    }\n  }\n});\n\n/**\n * Export\n */\nmodule.exports = JWTClaimsSetSchema;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/jose/lib/schemas/JWTClaimsSetSchema.js\n// module id = 124\n// module chunks = 0","'use strict';\n\n/**\n * Dependencies\n */\nvar JWKSchema = require('./JWKSchema');\n\nvar _require = require('json-document'),\n    JSONSchema = _require.JSONSchema;\n\n/**\n * JOSEHeaderSchema\n *\n * JSON Web Token (JWT)\n * https://tools.ietf.org/html/rfc7519#section-5\n *\n * 5.  JOSE Header\n *\n *   For a JWT object, the members of the JSON object represented by the\n *   JOSE Header describe the cryptographic operations applied to the JWT\n *   and optionally, additional properties of the JWT.  Depending upon\n *   whether the JWT is a JWS or JWE, the corresponding rules for the JOSE\n *   Header values apply.\n */\n\n\nvar JOSEHeaderSchema = new JSONSchema({\n  type: 'object',\n  properties: {\n\n    /**\n     * typ\n     *\n     * JSON Web Token (JWT)\n     * https://tools.ietf.org/html/rfc7519#section-5.1\n     *\n     * 5.1.  \"typ\" (Type) Header Parameter\n     *\n     *   The \"typ\" (type) Header Parameter defined by [JWS] and [JWE] is used\n     *   by JWT applications to declare the media type [IANA.MediaTypes] of\n     *   this complete JWT.  This is intended for use by the JWT application\n     *   when values that are not JWTs could also be present in an application\n     *   data structure that can contain a JWT object; the application can use\n     *   this value to disambiguate among the different kinds of objects that\n     *   might be present.  It will typically not be used by applications when\n     *   it is already known that the object is a JWT.  This parameter is\n     *   ignored by JWT implementations; any processing of this parameter is\n     *   performed by the JWT application.  If present, it is RECOMMENDED that\n     *   its value be \"JWT\" to indicate that this object is a JWT.  While\n     *   media type names are not case sensitive, it is RECOMMENDED that \"JWT\"\n     *   always be spelled using uppercase characters for compatibility with\n     *   legacy implementations.  Use of this Header Parameter is OPTIONAL.\n     *\n     * JSON Web Signature (JWS)\n     * https://tools.ietf.org/html/rfc7515#section-4.1.9\n     *\n     * 4.1.9.  \"typ\" (Type) Header Parameter\n     *\n     *   The \"typ\" (type) Header Parameter is used by JWS applications to\n     *   declare the media type [IANA.MediaTypes] of this complete JWS.  This\n     *   is intended for use by the application when more than one kind of\n     *   object could be present in an application data structure that can\n     *   contain a JWS; the application can use this value to disambiguate\n     *   among the different kinds of objects that might be present.  It will\n     *   typically not be used by applications when the kind of object is\n     *   already known.  This parameter is ignored by JWS implementations; any\n     *   processing of this parameter is performed by the JWS application.\n     *   Use of this Header Parameter is OPTIONAL.\n     *\n     *   Per RFC 2045 [RFC2045], all media type values, subtype values, and\n     *   parameter names are case insensitive.  However, parameter values are\n     *   case sensitive unless otherwise specified for the specific parameter.\n     *\n     *   To keep messages compact in common situations, it is RECOMMENDED that\n     *   producers omit an \"application/\" prefix of a media type value in a\n     *   \"typ\" Header Parameter when no other '/' appears in the media type\n     *   value.  A recipient using the media type value MUST treat it as if\n     *   \"application/\" were prepended to any \"typ\" value not containing a\n     *   '/'.  For instance, a \"typ\" value of \"example\" SHOULD be used to\n     *   represent the \"application/example\" media type, whereas the media\n     *   type \"application/example;part=\"1/2\"\" cannot be shortened to\n     *   \"example;part=\"1/2\"\".\n     *\n     *   The \"typ\" value \"JOSE\" can be used by applications to indicate that\n     *   this object is a JWS or JWE using the JWS Compact Serialization or\n     *   the JWE Compact Serialization.  The \"typ\" value \"JOSE+JSON\" can be\n     *   used by applications to indicate that this object is a JWS or JWE\n     *   using the JWS JSON Serialization or the JWE JSON Serialization.\n     *   Other type values can also be used by applications.\n     *\n     * JSON Web Encryption (JWE)\n     * https://tools.ietf.org/html/rfc7516#section-4.1.11\n     *\n     * 4.1.11.  \"typ\" (Type) Header Parameter\n     *\n     *   This parameter has the same meaning, syntax, and processing rules as\n     *   the \"typ\" Header Parameter defined in Section 4.1.9 of [JWS], except\n     *   that the type is that of this complete JWE.\n     */\n    typ: {\n      type: 'string'\n    },\n\n    /**\n     * cty\n     *\n     * JSON Web Token (JWT)\n     * https://tools.ietf.org/html/rfc7519#section-5.2\n     *\n     * 5.2.  \"cty\" (Content Type) Header Parameter\n     *\n     *   The \"cty\" (content type) Header Parameter defined by [JWS] and [JWE]\n     *   is used by this specification to convey structural information about\n     *   the JWT.\n     *\n     *   In the normal case in which nested signing or encryption operations\n     *   are not employed, the use of this Header Parameter is NOT\n     *   RECOMMENDED.  In the case that nested signing or encryption is\n     *   employed, this Header Parameter MUST be present; in this case, the\n     *   value MUST be \"JWT\", to indicate that a Nested JWT is carried in this\n     *   JWT.  While media type names are not case sensitive, it is\n     *   RECOMMENDED that \"JWT\" always be spelled using uppercase characters\n     *   for compatibility with legacy implementations.  See Appendix A.2 for\n     *   an example of a Nested JWT.\n     *\n     *\n     * JSON Web Signature (JWS)\n     * https://tools.ietf.org/html/rfc7515#section-4.1.10\n     *\n     * 4.1.10.  \"cty\" (Content Type) Header Parameter\n     *\n     *   The \"cty\" (content type) Header Parameter is used by JWS applications\n     *   to declare the media type [IANA.MediaTypes] of the secured content\n     *   (the payload).  This is intended for use by the application when more\n     *   than one kind of object could be present in the JWS Payload; the\n     *   application can use this value to disambiguate among the different\n     *   kinds of objects that might be present.  It will typically not be\n     *   used by applications when the kind of object is already known.  This\n     *   parameter is ignored by JWS implementations; any processing of this\n     *   parameter is performed by the JWS application.  Use of this Header\n     *   Parameter is OPTIONAL.\n     *\n     *   Per RFC 2045 [RFC2045], all media type values, subtype values, and\n     *   parameter names are case insensitive.  However, parameter values are\n     *   case sensitive unless otherwise specified for the specific parameter.\n     *\n     *   To keep messages compact in common situations, it is RECOMMENDED that\n     *   producers omit an \"application/\" prefix of a media type value in a\n     *   \"cty\" Header Parameter when no other '/' appears in the media type\n     *   value.  A recipient using the media type value MUST treat it as if\n     *   \"application/\" were prepended to any \"cty\" value not containing a\n     *   '/'.  For instance, a \"cty\" value of \"example\" SHOULD be used to\n     *   represent the \"application/example\" media type, whereas the media\n     *   type \"application/example;part=\"1/2\"\" cannot be shortened to\n     *   \"example;part=\"1/2\"\".\n     *\n     * JSON Web Encryption (JWE)\n     * https://tools.ietf.org/html/rfc7516#section-4.1.12\n     *\n     * 4.1.12.  \"cty\" (Content Type) Header Parameter\n     *\n     *   This parameter has the same meaning, syntax, and processing rules as\n     *   the \"cty\" Header Parameter defined in Section 4.1.10 of [JWS], except\n     *   that the type is that of the secured content (the plaintext).\n     */\n    cty: {\n      type: 'string',\n      enum: ['JWT']\n    },\n\n    /**\n     * alg\n     *\n     * JSON Web Signature (JWS)\n     * https://tools.ietf.org/html/rfc7515#section-4.1.1\n     *\n     * 4.1.1.  \"alg\" (Algorithm) Header Parameter\n     *\n     *   The \"alg\" (algorithm) Header Parameter identifies the cryptographic\n     *   algorithm used to secure the JWS.  The JWS Signature value is not\n     *   valid if the \"alg\" value does not represent a supported algorithm or\n     *   if there is not a key for use with that algorithm associated with the\n     *   party that digitally signed or MACed the content.  \"alg\" values\n     *   should either be registered in the IANA \"JSON Web Signature and\n     *   Encryption Algorithms\" registry established by [JWA] or be a value\n     *   that contains a Collision-Resistant Name.  The \"alg\" value is a case-\n     *   sensitive ASCII string containing a StringOrURI value.  This Header\n     *   Parameter MUST be present and MUST be understood and processed by\n     *   implementations.\n     *\n     *   A list of defined \"alg\" values for this use can be found in the IANA\n     *   \"JSON Web Signature and Encryption Algorithms\" registry established\n     *   by [JWA]; the initial contents of this registry are the values\n     *   defined in Section 3.1 of [JWA].\n     *\n     * JSON Web Encryption (JWE)\n     * https://tools.ietf.org/html/rfc7516#section-4.1.1\n     *\n     * 4.1.1.  \"alg\" (Algorithm) Header Parameter\n     *\n     *   This parameter has the same meaning, syntax, and processing rules as\n     *   the \"alg\" Header Parameter defined in Section 4.1.1 of [JWS], except\n     *   that the Header Parameter identifies the cryptographic algorithm used\n     *   to encrypt or determine the value of the CEK.  The encrypted content\n     *   is not usable if the \"alg\" value does not represent a supported\n     *   algorithm, or if the recipient does not have a key that can be used\n     *   with that algorithm.\n     *\n     *   A list of defined \"alg\" values for this use can be found in the IANA\n     *   \"JSON Web Signature and Encryption Algorithms\" registry established\n     *   by [JWA]; the initial contents of this registry are the values\n     *   defined in Section 4.1 of [JWA].\n     */\n    alg: {\n      type: 'string',\n      format: 'StringOrURI'\n    },\n\n    /**\n     * jku\n     *\n     * JSON Web Signature (JWS)\n     * https://tools.ietf.org/html/rfc7515#section-4.1.2\n     *\n     * 4.1.2.  \"jku\" (JWK Set URL) Header Parameter (JWS)\n     *\n     *   The \"jku\" (JWK Set URL) Header Parameter is a URI [RFC3986] that\n     *   refers to a resource for a set of JSON-encoded public keys, one of\n     *   which corresponds to the key used to digitally sign the JWS.  The\n     *   keys MUST be encoded as a JWK Set [JWK].  The protocol used to\n     *   acquire the resource MUST provide integrity protection; an HTTP GET\n     *   request to retrieve the JWK Set MUST use Transport Layer Security\n     *   (TLS) [RFC2818] [RFC5246]; and the identity of the server MUST be\n     *   validated, as per Section 6 of RFC 6125 [RFC6125].  Also, see\n     *   Section 8 on TLS requirements.  Use of this Header Parameter is\n     *   OPTIONAL.\n     *\n     * JSON Web Encryption (JWE)\n     * https://tools.ietf.org/html/rfc7516#section-4.1.4\n     *\n     * 4.1.4.  \"jku\" (JWK Set URL) Header Parameter (JWE)\n     *\n     *   This parameter has the same meaning, syntax, and processing rules as\n     *   the \"jku\" Header Parameter defined in Section 4.1.2 of [JWS], except\n     *   that the JWK Set resource contains the public key to which the JWE\n     *   was encrypted; this can be used to determine the private key needed\n     *   to decrypt the JWE.\n     */\n    jku: {\n      type: 'string',\n      format: 'URI'\n    },\n\n    /**\n     * jwk\n     *\n     * JSON Web Signature (JWS)\n     * https://tools.ietf.org/html/rfc7515#section-4.1.3\n     *\n     * 4.1.3.  \"jwk\" (JSON Web Key) Header Parameter\n     *\n     *   The \"jwk\" (JSON Web Key) Header Parameter is the public key that\n     *   corresponds to the key used to digitally sign the JWS.  This key is\n     *   represented as a JSON Web Key [JWK].  Use of this Header Parameter is\n     *   OPTIONAL.\n     *\n     * JSON Web Encryption (JWE)\n     * https://tools.ietf.org/html/rfc7516#section-4.1.5\n     *\n     * 4.1.5.  \"jwk\" (JSON Web Key) Header Parameter\n     *\n     *   This parameter has the same meaning, syntax, and processing rules as\n     *   the \"jwk\" Header Parameter defined in Section 4.1.3 of [JWS], except\n     *   that the key is the public key to which the JWE was encrypted; this\n     *   can be used to determine the private key needed to decrypt the JWE.\n     */\n    //jwk: JWKSchema,\n\n    /**\n     * kid\n     *\n     * JSON Web Signature (JWS)\n     * https://tools.ietf.org/html/rfc7515#section-4.1.4\n     *\n     * 4.1.4.  \"kid\" (Key ID) Header Parameter\n     *\n     *   The \"kid\" (key ID) Header Parameter is a hint indicating which key\n     *   was used to secure the JWS.  This parameter allows originators to\n     *   explicitly signal a change of key to recipients.  The structure of\n     *   the \"kid\" value is unspecified.  Its value MUST be a case-sensitive\n     *   string.  Use of this Header Parameter is OPTIONAL.\n     *\n     *   When used with a JWK, the \"kid\" value is used to match a JWK \"kid\"\n     *   parameter value.\n     *\n     *\n     * JSON Web Encryption (JWE)\n     * https://tools.ietf.org/html/rfc7516#section-4.1.6\n     *\n     * 4.1.6.  \"kid\" (Key ID) Header Parameter\n     *\n     *   This parameter has the same meaning, syntax, and processing rules as\n     *   the \"kid\" Header Parameter defined in Section 4.1.4 of [JWS], except\n     *   that the key hint references the public key to which the JWE was\n     *   encrypted; this can be used to determine the private key needed to\n     *   decrypt the JWE.  This parameter allows originators to explicitly\n     *   signal a change of key to JWE recipients.\n     */\n    kid: {\n      type: 'string'\n    },\n\n    /**\n     * x5u\n     *\n     * JSON Web Signature (JWS)\n     * https://tools.ietf.org/html/rfc7515#section-4.1.5\n     *\n     * 4.1.5.  \"x5u\" (X.509 URL) Header Parameter\n     *\n     *   The \"x5u\" (X.509 URL) Header Parameter is a URI [RFC3986] that refers\n     *   to a resource for the X.509 public key certificate or certificate\n     *   chain [RFC5280] corresponding to the key used to digitally sign the\n     *   JWS.  The identified resource MUST provide a representation of the\n     *   certificate or certificate chain that conforms to RFC 5280 [RFC5280]\n     *   in PEM-encoded form, with each certificate delimited as specified in\n     *   Section 6.1 of RFC 4945 [RFC4945].  The certificate containing the\n     *   public key corresponding to the key used to digitally sign the JWS\n     *   MUST be the first certificate.  This MAY be followed by additional\n     *   certificates, with each subsequent certificate being the one used to\n     *   certify the previous one.  The protocol used to acquire the resource\n     *   MUST provide integrity protection; an HTTP GET request to retrieve\n     *   the certificate MUST use TLS [RFC2818] [RFC5246]; and the identity of\n     *   the server MUST be validated, as per Section 6 of RFC 6125 [RFC6125].\n     *   Also, see Section 8 on TLS requirements.  Use of this Header\n     *   Parameter is OPTIONAL.\n     *\n     * JSON Web Encryption (JWE)\n     * https://tools.ietf.org/html/rfc7516#section-4.1.7\n     *\n     * 4.1.7.  \"x5u\" (X.509 URL) Header Parameter\n     *\n     *   This parameter has the same meaning, syntax, and processing rules as\n     *   the \"x5u\" Header Parameter defined in Section 4.1.5 of [JWS], except\n     *   that the X.509 public key certificate or certificate chain [RFC5280]\n     *   contains the public key to which the JWE was encrypted; this can be\n     *   used to determine the private key needed to decrypt the JWE.\n     */\n    x5u: {\n      type: 'string',\n      format: 'URI'\n    },\n\n    /**\n     * x5c\n     *\n     * JSON Web Signature (JWS)\n     * https://tools.ietf.org/html/rfc7515#section-4.1.6\n     *\n     * 4.1.6.  \"x5c\" (X.509 Certificate Chain) Header Parameter\n     *\n     *   The \"x5c\" (X.509 certificate chain) Header Parameter contains the\n     *   X.509 public key certificate or certificate chain [RFC5280]\n     *   corresponding to the key used to digitally sign the JWS.  The\n     *   certificate or certificate chain is represented as a JSON array of\n     *   certificate value strings.  Each string in the array is a\n     *   base64-encoded (Section 4 of [RFC4648] -- not base64url-encoded) DER\n     *   [ITU.X690.2008] PKIX certificate value.  The certificate containing\n     *   the public key corresponding to the key used to digitally sign the\n     *   JWS MUST be the first certificate.  This MAY be followed by\n     *   additional certificates, with each subsequent certificate being the\n     *   one used to certify the previous one.  The recipient MUST validate\n     *   the certificate chain according to RFC 5280 [RFC5280] and consider\n     *   the certificate or certificate chain to be invalid if any validation\n     *   failure occurs.  Use of this Header Parameter is OPTIONAL.\n     *\n     * JSON Web Encryption (JWE)\n     * https://tools.ietf.org/html/rfc7516#section-4.1.8\n     *\n     * 4.1.8.  \"x5c\" (X.509 Certificate Chain) Header Parameter\n     *\n     *   This parameter has the same meaning, syntax, and processing rules as\n     *   the \"x5c\" Header Parameter defined in Section 4.1.6 of [JWS], except\n     *   that the X.509 public key certificate or certificate chain [RFC5280]\n     *   contains the public key to which the JWE was encrypted; this can be\n     *   used to determine the private key needed to decrypt the JWE.\n     */\n    x5c: {\n      type: 'array',\n      items: {\n        type: 'string',\n        format: 'base64'\n      }\n    },\n\n    /**\n     * x5t\n     *\n     * JSON Web Signature (JWS)\n     * https://tools.ietf.org/html/rfc7515#section-4.1.7\n     *\n     * 4.1.7.  \"x5t\" (X.509 Certificate SHA-1 Thumbprint) Header Parameter\n     *\n     *   The \"x5t\" (X.509 certificate SHA-1 thumbprint) Header Parameter is a\n     *   base64url-encoded SHA-1 thumbprint (a.k.a. digest) of the DER\n     *   encoding of the X.509 certificate [RFC5280] corresponding to the key\n     *   used to digitally sign the JWS.  Note that certificate thumbprints\n     *   are also sometimes known as certificate fingerprints.  Use of this\n     *   Header Parameter is OPTIONAL.\n     *\n     * JSON Web Encryption (JWE)\n     * https://tools.ietf.org/html/rfc7516#section-4.1.9\n     *\n     * 4.1.9.  \"x5t\" (X.509 Certificate SHA-1 Thumbprint) Header Parameter\n     *\n     *   This parameter has the same meaning, syntax, and processing rules as\n     *   the \"x5t\" Header Parameter defined in Section 4.1.7 of [JWS], except\n     *   that the certificate referenced by the thumbprint contains the public\n     *   key to which the JWE was encrypted; this can be used to determine the\n     *   private key needed to decrypt the JWE.  Note that certificate\n     *   thumbprints are also sometimes known as certificate fingerprints.\n     */\n    x5t: {\n      type: 'string',\n      format: 'base64url'\n    },\n\n    /**\n     * x5t#S256\n     *\n     * JSON Web Signature (JWS)\n     * https://tools.ietf.org/html/rfc7515#section-4.1.8\n     *\n     * 4.1.8.  \"x5t#S256\" (X.509 Certificate SHA-256 Thumbprint) Header\n     *         Parameter\n     *\n     *   The \"x5t#S256\" (X.509 certificate SHA-256 thumbprint) Header\n     *   Parameter is a base64url-encoded SHA-256 thumbprint (a.k.a. digest)\n     *   of the DER encoding of the X.509 certificate [RFC5280] corresponding\n     *   to the key used to digitally sign the JWS.  Note that certificate\n     *   thumbprints are also sometimes known as certificate fingerprints.\n     *   Use of this Header Parameter is OPTIONAL.\n     *\n     *\n     * JSON Web Encryption (JWE)\n     * https://tools.ietf.org/html/rfc7516#section-4.1.10\n     *\n     * 4.1.10.  \"x5t#S256\" (X.509 Certificate SHA-256 Thumbprint) Header\n     *          Parameter\n     *\n     *   This parameter has the same meaning, syntax, and processing rules as\n     *   the \"x5t#S256\" Header Parameter defined in Section 4.1.8 of [JWS],\n     *   except that the certificate referenced by the thumbprint contains the\n     *   public key to which the JWE was encrypted; this can be used to\n     *   determine the private key needed to decrypt the JWE.  Note that\n     *   certificate thumbprints are also sometimes known as certificate\n     *   fingerprints.\n     */\n    //'x5t#S256': {\n    //  type: 'string',\n    //  format: 'base64url'\n    //},\n\n    /**\n     * crit\n     *\n     * JSON Web Signature (JWS)\n     * https://tools.ietf.org/html/rfc7515#section-4.1.11\n     *\n     * 4.1.11.  \"crit\" (Critical) Header Parameter\n     *\n     *   The \"crit\" (critical) Header Parameter indicates that extensions to\n     *   this specification and/or [JWA] are being used that MUST be\n     *   understood and processed.  Its value is an array listing the Header\n     *   Parameter names present in the JOSE Header that use those extensions.\n     *   If any of the listed extension Header Parameters are not understood\n     *   and supported by the recipient, then the JWS is invalid.  Producers\n     *   MUST NOT include Header Parameter names defined by this specification\n     *   or [JWA] for use with JWS, duplicate names, or names that do not\n     *   occur as Header Parameter names within the JOSE Header in the \"crit\"\n     *   list.  Producers MUST NOT use the empty list \"[]\" as the \"crit\"\n     *   value.  Recipients MAY consider the JWS to be invalid if the critical\n     *   list contains any Header Parameter names defined by this\n     *   specification or [JWA] for use with JWS or if any other constraints\n     *   on its use are violated.  When used, this Header Parameter MUST be\n     *   integrity protected; therefore, it MUST occur only within the JWS\n     *   Protected Header.  Use of this Header Parameter is OPTIONAL.  This\n     *   Header Parameter MUST be understood and processed by implementations.\n     *\n     *   An example use, along with a hypothetical \"exp\" (expiration time)\n     *   field is:\n     *\n     *     {\"alg\":\"ES256\",\n     *     \"crit\":[\"exp\"],\n     *     \"exp\":1363284000\n     *     }\n     *\n     * JSON Web Encryption (JWE)\n     * https://tools.ietf.org/html/rfc7516#section-4.1.13\n     *\n     *   4.1.13.  \"crit\" (Critical) Header Parameter\n     *\n     *   This parameter has the same meaning, syntax, and processing rules as\n     *   the \"crit\" Header Parameter defined in Section 4.1.11 of [JWS],\n     *   except that Header Parameters for a JWE are being referred to, rather\n     *   than Header Parameters for a JWS.\n     */\n    crit: {\n      type: 'array',\n      items: {\n        type: 'string'\n      },\n      minItems: 1\n    },\n\n    /**\n     * enc\n     *\n     * JSON Web Encryption (JWE)\n     * https://tools.ietf.org/html/rfc7516#section-4.1.2\n     *\n     * 4.1.2.  \"enc\" (Encryption Algorithm) Header Parameter\n     *\n     *   The \"enc\" (encryption algorithm) Header Parameter identifies the\n     *   content encryption algorithm used to perform authenticated encryption\n     *   on the plaintext to produce the ciphertext and the Authentication\n     *   Tag.  This algorithm MUST be an AEAD algorithm with a specified key\n     *   length.  The encrypted content is not usable if the \"enc\" value does\n     *   not represent a supported algorithm.  \"enc\" values should either be\n     *   registered in the IANA \"JSON Web Signature and Encryption Algorithms\"\n     *   registry established by [JWA] or be a value that contains a\n     *   Collision-Resistant Name.  The \"enc\" value is a case-sensitive ASCII\n     *   string containing a StringOrURI value.  This Header Parameter MUST be\n     *   present and MUST be understood and processed by implementations.\n     *\n     *   A list of defined \"enc\" values for this use can be found in the IANA\n     *   \"JSON Web Signature and Encryption Algorithms\" registry established\n     *   by [JWA]; the initial contents of this registry are the values\n     *   defined in Section 5.1 of [JWA].\n     */\n    enc: {\n      type: 'string',\n      format: 'StringOrURI'\n    },\n\n    /**\n     * zip\n     *\n     * JSON Web Encryption (JWE)\n     * https://tools.ietf.org/html/rfc7516#section-4.1.3\n     *\n     * 4.1.3.  \"zip\" (Compression Algorithm) Header Parameter\n     *\n     *   The \"zip\" (compression algorithm) applied to the plaintext before\n     *   encryption, if any.  The \"zip\" value defined by this specification\n     *   is:\n     *\n     *   o  \"DEF\" - Compression with the DEFLATE [RFC1951] algorithm\n     *\n     *   Other values MAY be used.  Compression algorithm values can be\n     *   registered in the IANA \"JSON Web Encryption Compression Algorithms\"\n     *   registry established by [JWA].  The \"zip\" value is a case-sensitive\n     *   string.  If no \"zip\" parameter is present, no compression is applied\n     *   to the plaintext before encryption.  When used, this Header Parameter\n     *   MUST be integrity protected; therefore, it MUST occur only within the\n     *   JWE Protected Header.  Use of this Header Parameter is OPTIONAL.\n     *   This Header Parameter MUST be understood and processed by\n     *   implementations.\n     */\n    zip: {\n      type: 'string'\n    }\n  }\n});\n\n/**\n * Export\n */\nmodule.exports = JOSEHeaderSchema;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/jose/lib/schemas/JOSEHeaderSchema.js\n// module id = 125\n// module chunks = 0","'use strict';\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Dependencies\n */\nvar base64url = require('base64url');\nvar JWA = require('./JWA');\n\nvar _require = require('../errors'),\n    DataError = _require.DataError;\n\n/**\n * JWS\n */\n\n\nvar JWS = function () {\n  function JWS() {\n    _classCallCheck(this, JWS);\n  }\n\n  _createClass(JWS, null, [{\n    key: 'sign',\n\n\n    /**\n     * sign\n     *\n     * @description\n     * Encode a JWT instance\n     *\n     * @param {Object} token\n     * @returns {Promise}\n     */\n    value: function sign(token) {\n      var payload = base64url(JSON.stringify(token.payload));\n\n      // compact serialization\n      if (token.serialization === 'compact') {\n        var _ret = function () {\n          var key = token.key,\n              alg = token.header.alg;\n\n          var header = base64url(JSON.stringify(token.header));\n          var data = header + '.' + payload;\n\n          return {\n            v: JWA.sign(alg, key, data).then(function (signature) {\n              return data + '.' + signature;\n            })\n          };\n        }();\n\n        if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n      }\n\n      // JSON serialization\n      if (token.serialization === 'json') {}\n\n      // Flattened serialization\n      if (token.serialization === 'flattened') {}\n\n      return Promise.reject(new DataError('Unsupported serialization'));\n    }\n\n    /**\n     * verify\n     */\n\n  }, {\n    key: 'verify',\n    value: function verify(jwt) {\n      // multiple signatures\n      if (jwt.signatures) {}\n      // ...\n\n\n      // one signature\n      if (jwt.signature) {\n        var _jwt$segments = _slicedToArray(jwt.segments, 2),\n            header = _jwt$segments[0],\n            payload = _jwt$segments[1];\n\n        var data = header + '.' + payload;\n        var key = jwt.key,\n            signature = jwt.signature,\n            alg = jwt.header.alg;\n\n\n        return JWA.verify(alg, key, signature, data).then(function (verified) {\n          jwt.verified = verified;\n          return verified;\n        });\n      }\n\n      // no signatures to verify\n      return Promise.reject(new DataError('Missing signature(s)'));\n    }\n  }]);\n\n  return JWS;\n}();\n\n/**\n * Export\n */\n\n\nmodule.exports = JWS;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/jose/lib/jose/JWS.js\n// module id = 126\n// module chunks = 0","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Dependencies\n */\nvar assert = require('assert');\nvar base64url = require('base64url');\nvar crypto = require('webcrypto');\nvar FormUrlEncoded = require('./FormUrlEncoded');\nvar URL = require('urlutils');\n\n/**\n * Authentication Request\n */\n\nvar AuthenticationRequest = function () {\n  function AuthenticationRequest() {\n    _classCallCheck(this, AuthenticationRequest);\n  }\n\n  _createClass(AuthenticationRequest, null, [{\n    key: 'create',\n\n\n    /**\n     * create\n     *\n     * @description\n     * Create a new authentication request with generated state and nonce,\n     * validate presence of required parameters, serialize the request data and\n     * persist it to the session, and return a promise for an authentication\n     * request URI.\n     *\n     * @param {RelyingParty} rp – instance of RelyingParty\n     * @param {Object} options - optional request parameters\n     * @param {Object} session – reference to localStorage or other session object\n     *\n     * @returns {Promise}\n     */\n    value: function create(rp, options, session) {\n      return new Promise(function (resolve, reject) {\n        var provider = rp.provider,\n            defaults = rp.defaults,\n            registration = rp.registration;\n\n        // validate presence of OP configuration, RP client registration,\n        // and default parameters\n\n        assert(provider.configuration, 'RelyingParty provider OpenID Configuration is missing');\n\n        assert(defaults.authenticate, 'RelyingParty default authentication parameters are missing');\n\n        assert(registration, 'RelyingParty client registration is missing');\n\n        // define basic elements of the request\n        var issuer = provider.configuration.issuer;\n        var endpoint = provider.configuration.authorization_endpoint;\n        var client = { client_id: registration.client_id };\n        var params = Object.assign(defaults.authenticate, client, options);\n\n        // validate presence of required configuration and parameters\n        assert(issuer, 'Missing issuer in provider OpenID Configuration');\n\n        assert(endpoint, 'Missing authorization_endpoint in provider OpenID Configuration');\n\n        assert(params.scope, 'Missing scope parameter in authentication request');\n\n        assert(params.response_type, 'Missing response_type parameter in authentication request');\n\n        assert(params.client_id, 'Missing client_id parameter in authentication request');\n\n        assert(params.redirect_uri, 'Missing redirect_uri parameter in authentication request');\n\n        // generate state and nonce random octets\n        params.state = Array.from(crypto.getRandomValues(new Uint8Array(16)));\n        params.nonce = Array.from(crypto.getRandomValues(new Uint8Array(16)));\n\n        // hash the state and nonce parameter values\n        return Promise.all([crypto.subtle.digest({ name: 'SHA-256' }, new Uint8Array(params.state)), crypto.subtle.digest({ name: 'SHA-256' }, new Uint8Array(params.nonce))])\n\n        // serialize the request with original values, store in session by\n        // encoded state param, and replace state/nonce octets with encoded\n        // digests\n        .then(function (digests) {\n          var state = base64url(Buffer.from(digests[0]));\n          var nonce = base64url(Buffer.from(digests[1]));\n          var key = issuer + '/requestHistory/' + state;\n\n          // store the request params for response validation\n          // with serialized octet values for state and nonce\n          session[key] = JSON.stringify(params);\n\n          // replace state and nonce octets with base64url encoded digests\n          params.state = state;\n          params.nonce = nonce;\n        })\n\n        // optionally encode a JWT with the request parameters\n        .then(function () {\n          // TODO\n          // optionally encode the request parameters as a JWT\n          // and replace params with `{ request: <jwt> }`\n        })\n\n        // render the request URI and terminate the algorithm\n        .then(function () {\n          var url = new URL(endpoint);\n          url.search = FormUrlEncoded.encode(params);\n          resolve(url.href);\n        });\n      });\n    }\n  }]);\n\n  return AuthenticationRequest;\n}();\n\n/**\n * Export\n */\n\n\nmodule.exports = AuthenticationRequest;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/oidc-rp/lib/AuthenticationRequest.js\n// module id = 127\n// module chunks = 0","module.exports = require('./dist/base64url').default;\nmodule.exports.default = module.exports;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/base64url/index.js\n// module id = 128\n// module chunks = 0","\"use strict\";\nvar pad_string_1 = require(\"./pad-string\");\nfunction encode(input, encoding) {\n    if (encoding === void 0) { encoding = \"utf8\"; }\n    if (Buffer.isBuffer(input)) {\n        return fromBase64(input.toString(\"base64\"));\n    }\n    return fromBase64(new Buffer(input, encoding).toString(\"base64\"));\n}\n;\nfunction decode(base64url, encoding) {\n    if (encoding === void 0) { encoding = \"utf8\"; }\n    return new Buffer(toBase64(base64url), \"base64\").toString(encoding);\n}\nfunction toBase64(base64url) {\n    base64url = base64url.toString();\n    return pad_string_1.default(base64url)\n        .replace(/\\-/g, \"+\")\n        .replace(/_/g, \"/\");\n}\nfunction fromBase64(base64) {\n    return base64\n        .replace(/=/g, \"\")\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\");\n}\nfunction toBuffer(base64url) {\n    return new Buffer(toBase64(base64url), \"base64\");\n}\nvar base64url = encode;\nbase64url.encode = encode;\nbase64url.decode = decode;\nbase64url.toBase64 = toBase64;\nbase64url.fromBase64 = fromBase64;\nbase64url.toBuffer = toBuffer;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = base64url;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/base64url/dist/base64url.js\n// module id = 129\n// module chunks = 0","\"use strict\";\nfunction padString(input) {\n    var segmentLength = 4;\n    var stringLength = input.length;\n    var diff = stringLength % segmentLength;\n    if (!diff) {\n        return input;\n    }\n    var position = stringLength;\n    var padLength = segmentLength - diff;\n    var paddedStringLength = stringLength + padLength;\n    var buffer = new Buffer(paddedStringLength);\n    buffer.write(input);\n    while (padLength--) {\n        buffer.write(\"=\", position++);\n    }\n    return buffer.toString();\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = padString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/base64url/dist/pad-string.js\n// module id = 130\n// module chunks = 0","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Dependencies\n */\n\n/**\n * FormUrlEncoded\n */\nvar FormUrlEncoded = function () {\n  function FormUrlEncoded() {\n    _classCallCheck(this, FormUrlEncoded);\n  }\n\n  _createClass(FormUrlEncoded, null, [{\n    key: 'encode',\n\n\n    /**\n     * Encode\n     *\n     * @description\n     * Represent an object as x-www-form-urlencoded string.\n     *\n     * @param {Object} data\n     * @returns {string}\n     */\n    value: function encode(data) {\n      var pairs = [];\n\n      Object.keys(data).forEach(function (key) {\n        pairs.push(encodeURIComponent(key) + '=' + encodeURIComponent(data[key]));\n      });\n\n      return pairs.join('&');\n    }\n\n    /**\n     * Decode\n     *\n     * @description\n     * Parse a x-www-form-urlencoded into an object.\n     *\n     * @param {string} data\n     * @returns {Object}\n     */\n\n  }, {\n    key: 'decode',\n    value: function decode(data) {\n      var obj = {};\n\n      data.split('&').forEach(function (property) {\n        var pair = property.split('=');\n        var key = decodeURIComponent(pair[0]);\n        var val = decodeURIComponent(pair[1]);\n\n        obj[key] = val;\n      });\n\n      return obj;\n    }\n  }]);\n\n  return FormUrlEncoded;\n}();\n\n/**\n * Export\n */\n\n\nmodule.exports = FormUrlEncoded;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/oidc-rp/lib/FormUrlEncoded.js\n// module id = 131\n// module chunks = 0","module.exports = URL;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"URL\"\n// module id = 132\n// module chunks = 0","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Dependencies\n */\nvar URL = require('urlutils');\nvar assert = require('assert');\nvar crypto = require('webcrypto');\nvar base64url = require('base64url');\nvar fetch = require('node-fetch');\nvar Headers = fetch.Headers ? fetch.Headers : global.Headers;\nvar FormUrlEncoded = require('./FormUrlEncoded');\nvar IDToken = require('./IDToken');\n//const AccessToken = require('./AccessToken')\n\n/**\n * AuthenticationResponse\n */\n\nvar AuthenticationResponse = function () {\n  function AuthenticationResponse() {\n    _classCallCheck(this, AuthenticationResponse);\n  }\n\n  _createClass(AuthenticationResponse, null, [{\n    key: 'validateResponse',\n\n\n    /**\n     * validateResponse\n     *\n     * @description\n     * Authentication response validation.\n     *\n     * @param {string|Object} response\n     * @returns {Promise}\n     */\n    value: function validateResponse(response) {\n      return Promise.resolve(response).then(this.parseResponse).then(this.matchRequest).then(this.validateStateParam).then(this.errorResponse).then(this.validateResponseMode).then(this.validateResponseParams).then(this.exchangeAuthorizationCode).then(this.validateIDToken).then(function () {\n        // what kind of response object?\n        // instance of AuthenticationRequest?\n        return response;\n      });\n    }\n\n    /**\n     * parseResponse\n     *\n     * @param {Object} response\n     * @returns {Promise}\n     */\n\n  }, {\n    key: 'parseResponse',\n    value: function parseResponse(response) {\n      var redirect = response.redirect,\n          body = response.body;\n\n      // response must be either a redirect uri or request body, but not both\n\n      if (redirect && body || !redirect && !body) {\n        throw new Error('Invalid response mode');\n      }\n\n      // parse redirect uri\n      if (redirect) {\n        var url = new URL(redirect);\n        var search = url.search,\n            hash = url.hash;\n\n\n        if (search && hash) {\n          throw new Error('Invalid response mode');\n        }\n\n        if (search) {\n          response.params = FormUrlEncoded.decode(search.substring(1));\n          response.mode = 'query';\n        }\n\n        if (hash) {\n          response.params = FormUrlEncoded.decode(hash.substring(1));\n          response.mode = 'fragment';\n        }\n      }\n\n      // parse request form body\n      if (body) {\n        response.params = FormUrlEncoded.decode(body);\n        response.mode = 'form_post';\n      }\n\n      return response;\n    }\n\n    /**\n     * matchRequest\n     *\n     * @param {Object} response\n     * @returns {Promise}\n     */\n\n  }, {\n    key: 'matchRequest',\n    value: function matchRequest(response) {\n      var rp = response.rp,\n          params = response.params,\n          session = response.session;\n\n      var state = params.state;\n      var issuer = rp.provider.configuration.issuer;\n\n      if (!state) {\n        throw new Error('Missing state parameter in authentication response');\n      }\n\n      var key = issuer + '/requestHistory/' + state;\n      var request = session[key];\n\n      if (!request) {\n        throw new Error('Mismatching state parameter in authentication response');\n      }\n\n      response.request = JSON.parse(request);\n      return response;\n    }\n\n    /**\n     * validateStateParam\n     *\n     * @param {Object} response\n     * @returns {Promise}\n     */\n\n  }, {\n    key: 'validateStateParam',\n    value: function validateStateParam(response) {\n      var octets = new Uint8Array(response.request.state);\n      var encoded = response.params.state;\n\n      return crypto.subtle.digest({ name: 'SHA-256' }, octets).then(function (digest) {\n        if (encoded !== base64url(Buffer.from(digest))) {\n          throw new Error('Mismatching state parameter in authentication response');\n        }\n\n        return response;\n      });\n    }\n\n    /**\n     * errorResponse\n     *\n     * @param {Object} response\n     * @returns {Promise}\n     */\n\n  }, {\n    key: 'errorResponse',\n    value: function errorResponse(response) {\n      var error = response.params.error;\n\n      if (error) {\n        return Promise.reject(error);\n      }\n\n      return Promise.resolve(response);\n    }\n\n    /**\n     * validateResponseMode\n     *\n     * @param {Object} response\n     * @returns {Promise}\n     */\n\n  }, {\n    key: 'validateResponseMode',\n    value: function validateResponseMode(response) {\n      if (response.request.response_type !== 'code' && response.mode === 'query') {\n        throw new Error('Invalid response mode');\n      }\n\n      return response;\n    }\n\n    /**\n     * validateResponseParams\n     *\n     * @param {Object} response\n     * @returns {Promise}\n     */\n\n  }, {\n    key: 'validateResponseParams',\n    value: function validateResponseParams(response) {\n      var request = response.request,\n          params = response.params;\n\n      var expectedParams = request.response_type.split(' ');\n\n      if (expectedParams.includes('code')) {\n        assert(params.code, 'Missing authorization code in authentication response');\n        // TODO assert novelty of code\n      }\n\n      if (expectedParams.includes('id_token')) {\n        assert(params.id_token, 'Missing id_token in authentication response');\n      }\n\n      if (expectedParams.includes('token')) {\n        assert(params.access_token, 'Missing access_token in authentication response');\n\n        assert(params.token_type, 'Missing token_type in authentication response');\n      }\n\n      return response;\n    }\n\n    /**\n     * exchangeAuthorizationCode\n     *\n     * @param {Object} response\n     * @returns {Promise}\n     */\n\n  }, {\n    key: 'exchangeAuthorizationCode',\n    value: function exchangeAuthorizationCode(response) {\n      var rp = response.rp,\n          params = response.params,\n          request = response.request;\n\n      var code = params.code;\n\n      // only exchange the authorization code when the response type is \"code\"\n      if (!code || request['response_type'] !== 'code') {\n        return Promise.resolve(response);\n      }\n\n      var provider = rp.provider,\n          registration = rp.registration;\n\n      var id = registration['client_id'];\n      var secret = registration['client_secret'];\n\n      // verify the client is not public\n      if (!secret) {\n        throw new AuthenticationError('Client cannot exchange authorization code because ' + 'it is not a confidential client');\n      }\n\n      // initialize token request arguments\n      var endpoint = provider.configuration.token_endpoint;\n      var method = 'POST';\n\n      // initialize headers\n      var headers = new Headers({\n        'Content-Type': 'application/x-www-form-urlencoded'\n      });\n\n      // initialize the token request parameters\n      var body = FormUrlEncoded.encode({\n        'grant_type': 'authorization_code',\n        'code': code,\n        'redirect_uri': request['redirect_uri']\n      });\n\n      // determine client authentication method\n      var authMethod = registration['token_endpoint_auth_method'] || 'client_secret_basic';\n\n      // client secret basic authentication\n      if (authMethod === 'client_secret_basic') {\n        var credentials = new Buffer(id + ':' + secret).toString('base64');\n        headers.set('Authorization', 'Basic ' + credentials);\n      }\n\n      // client secret post authentication\n      if (authMethod === 'client_secret_post') {\n        body['client_id'] = id;\n        body['client_secret'] = secret;\n      }\n\n      // TODO\n      // client_secret_jwt authentication\n      // private_key_jwt\n\n      // make the token request\n      return fetch(endpoint, { method: method, headers: headers, body: body }).then(function (tokenResponse) {\n        return tokenResponse.json();\n      }).then(function (tokenResponse) {\n        assert(tokenResponse['access_token'], 'Missing access_token in token response');\n\n        assert(tokenResponse['token_type'], 'Missing token_type in token response');\n\n        assert(tokenResponse['id_token'], 'Missing id_token in token response');\n\n        // anything else?\n\n        // IS THIS THE RIGHT THING TO DO HERE?\n        response.params = Object.assign(response.params, tokenResponse);\n        return response;\n      });\n    }\n\n    /**\n     * validateIDToken\n     *\n     * @param {Object} response\n     * @returns {Promise}\n     */\n\n  }, {\n    key: 'validateIDToken',\n    value: function validateIDToken(response) {\n      var jwt = response.params.id_token;\n\n      // only validate the ID Token if present in the response\n      if (!jwt) {\n        return Promise.resolve(response);\n      }\n\n      var _response$rp = response.rp,\n          provider = _response$rp.provider,\n          registration = _response$rp.registration;\n      var configuration = provider.configuration,\n          jwks = provider.jwks;\n\n\n      return Promise.resolve(response).then(AuthenticationResponse.decryptIDToken).then(AuthenticationResponse.decodeIDToken).then(AuthenticationResponse.validateIssuer).then(AuthenticationResponse.validateAudience).then(AuthenticationResponse.resolveKeys).then(AuthenticationResponse.verifySignature).then(AuthenticationResponse.validateExpires).then(AuthenticationResponse.verifyNonce).then(AuthenticationResponse.validateACR).then(AuthenticationResponse.validateAuthTime).then(AuthenticationResponse.validateAccessTokenHash).then(AuthenticationResponse.validateCodeHash);\n    }\n\n    /**\n     * decryptIDToken\n     *\n     * @param {Object} response\n     * @returns {Promise}\n     */\n\n  }, {\n    key: 'decryptIDToken',\n    value: function decryptIDToken(response) {\n      // TODO\n      return Promise.resolve(response);\n    }\n\n    /**\n     * decodeIDToken\n     *\n     * @param {Object} response\n     * @returns {Promise}\n     */\n\n  }, {\n    key: 'decodeIDToken',\n    value: function decodeIDToken(response) {\n      var jwt = response.params.id_token;\n\n      if (jwt) {\n        response.decoded = IDToken.decode(jwt);\n      }\n\n      return response;\n    }\n\n    /**\n     * validateIssuer\n     *\n     * @param {Object} response\n     * @returns {Promise}\n     */\n\n  }, {\n    key: 'validateIssuer',\n    value: function validateIssuer(response) {\n      var configuration = response.rp.provider.configuration;\n      var payload = response.decoded.payload;\n\n      // validate issuer of token matches this relying party's provider\n      if (payload.iss !== configuration.issuer) {\n        throw new Error('Mismatching issuer in ID Token');\n      }\n\n      return response;\n    }\n\n    /**\n     * validateAudience\n     *\n     * @param {Object} response\n     * @returns {Promise}\n     */\n\n  }, {\n    key: 'validateAudience',\n    value: function validateAudience(response) {\n      var registration = response.rp.registration;\n      var _response$decoded$pay = response.decoded.payload,\n          aud = _response$decoded$pay.aud,\n          azp = _response$decoded$pay.azp;\n\n      // validate audience includes this relying party\n\n      if (typeof aud === 'string' && aud !== registration['client_id']) {\n        throw new Error('Mismatching audience in id_token');\n      }\n\n      // validate audience includes this relying party\n      if (Array.isArray(aud) && !aud.includes(registration['client_id'])) {\n        throw new Error('Mismatching audience in id_token');\n      }\n\n      // validate authorized party is present if required\n      if (Array.isArray(aud) && !azp) {\n        throw new Error('Missing azp claim in id_token');\n      }\n\n      // validate authorized party is this relying party\n      if (azp && azp !== registration['client_id']) {\n        throw new Error('Mismatching azp claim in id_token');\n      }\n\n      return response;\n    }\n\n    /**\n     * resolveKeys\n     *\n     * @param {Object} response\n     * @returns {Promise}\n     */\n\n  }, {\n    key: 'resolveKeys',\n    value: function resolveKeys(response) {\n      var rp = response.rp;\n      var provider = rp.provider;\n      var jwks = provider.jwks;\n      var decoded = response.decoded;\n\n      //if (decoded.resolveKeys(jwks)) {\n      //  return Promise.resolve(response)\n      //}\n\n      return rp.jwks().then(function (jwks) {\n        if (decoded.resolveKeys(jwks)) {\n          return Promise.resolve(response);\n        } else {\n          throw new Error('Cannot resolve signing key for ID Token.');\n        }\n      });\n    }\n\n    /**\n     * verifySignature\n     *\n     * @param {Object} response\n     * @returns {Promise}\n     */\n\n  }, {\n    key: 'verifySignature',\n    value: function verifySignature(response) {\n      var alg = response.decoded.header.alg;\n      var registration = response.rp.registration;\n      var expectedAlgorithm = registration['id_token_signed_response_alg'] || 'RS256';\n\n      // validate signing algorithm matches expectation\n      if (alg !== expectedAlgorithm) {\n        throw new Error('Expected ID Token to be signed with ' + expectedAlgorithm);\n      }\n\n      return response.decoded.verify().then(function (verified) {\n        if (!verified) {\n          throw new Error('Invalid ID Token signature');\n        }\n\n        return response;\n      });\n    }\n\n    /**\n     * validateExpires\n     *\n     * @param {Object} response\n     * @returns {Promise}\n     */\n\n  }, {\n    key: 'validateExpires',\n    value: function validateExpires(response) {\n      var exp = response.decoded.payload.exp;\n\n      // validate expiration of token\n      if (exp <= Math.floor(Date.now() / 1000)) {\n        throw new Error('Expired ID Token');\n      }\n\n      return response;\n    }\n\n    /**\n     * verifyNonce\n     *\n     * @param {Object} response\n     * @returns {Promise}\n     */\n\n  }, {\n    key: 'verifyNonce',\n    value: function verifyNonce(response) {\n      var octets = new Uint8Array(response.request.nonce);\n      var nonce = response.decoded.payload.nonce;\n\n      if (!nonce) {\n        throw new Error('Missing nonce in ID Token');\n      }\n\n      return crypto.subtle.digest({ name: 'SHA-256' }, octets).then(function (digest) {\n        if (nonce !== base64url(Buffer.from(digest))) {\n          throw new Error('Mismatching nonce in ID Token');\n        }\n\n        return response;\n      });\n    }\n\n    /**\n     * validateAcr\n     *\n     * @param {Object} response\n     * @returns {Promise}\n     */\n\n  }, {\n    key: 'validateAcr',\n    value: function validateAcr(response) {\n      // TODO\n      return response;\n    }\n\n    /**\n     * validateAccessTokenHash\n     *\n     * @param {Object} response\n     * @returns {Promise}\n     */\n\n  }, {\n    key: 'validateAccessTokenHash',\n    value: function validateAccessTokenHash(response) {\n      // TODO\n      return response;\n    }\n\n    /**\n     * validateAuthorizationCodeHash\n     *\n     * @param {Object} response\n     * @returns {Promise}\n     */\n\n  }, {\n    key: 'validateAuthorizationCodeHash',\n    value: function validateAuthorizationCodeHash(response) {\n      // TODO\n      return response;\n    }\n  }]);\n\n  return AuthenticationResponse;\n}();\n\n/**\n * Export\n */\n\n\nmodule.exports = AuthenticationResponse;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/oidc-rp/lib/AuthenticationResponse.js\n// module id = 133\n// module chunks = 0","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Local dependencies\n */\nvar _require = require('jose'),\n    JWT = _require.JWT;\n\nvar IDTokenSchema = require('./IDTokenSchema');\n\n/**\n * IDToken\n */\n\nvar IDToken = function (_JWT) {\n  _inherits(IDToken, _JWT);\n\n  function IDToken() {\n    _classCallCheck(this, IDToken);\n\n    return _possibleConstructorReturn(this, (IDToken.__proto__ || Object.getPrototypeOf(IDToken)).apply(this, arguments));\n  }\n\n  _createClass(IDToken, null, [{\n    key: 'schema',\n\n\n    /**\n     * Schema\n     */\n    get: function get() {\n      return IDTokenSchema;\n    }\n  }]);\n\n  return IDToken;\n}(JWT);\n\n/**\n * Export\n */\n\n\nmodule.exports = IDToken;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/oidc-rp/lib/IDToken.js\n// module id = 134\n// module chunks = 0","'use strict';\n\n/**\n * Local dependencies\n */\nvar _require = require('jose'),\n    JWTSchema = _require.JWTSchema;\n\n/**\n * IDToken Schema\n */\n\n\nvar IDTokenSchema = JWTSchema.extend({\n  properties: {\n\n    /**\n     * header\n     * http://openid.net/specs/openid-connect-core-1_0.html#IDToken\n     * ID Tokens SHOULD NOT use the JWS or JWE x5u, x5c, jku, or jwk Header\n     * Parameter fields. Instead, references to keys used are communicated in\n     * advance using Discovery and Registration parameters, per Section 10.\n     */\n    header: {\n      //not: { required: ['x5u', 'x5c', 'jku', 'jwk'] }\n    },\n\n    /**\n     * payload\n     */\n    payload: {\n      properties: {\n\n        /**\n         * iss\n         *\n         * REQUIRED. Issuer Identifier for the Issuer of the response.\n         * The iss value is a case sensitive URL using the https scheme\n         * that contains scheme, host, and optionally, port number and\n         * path components and no query or fragment components.\n         */\n        iss: { type: 'string', format: 'url' },\n\n        /**\n         * sub\n         *\n         * REQUIRED. Subject Identifier. A locally unique and never\n         * reassigned identifier within the Issuer for the End-User, which\n         * is intended to be consumed by the Client, e.g., 24400320 or\n         * AItOawmwtWwcT0k51BayewNvutrJUqsvl6qs7A4. It MUST NOT exceed 255\n         * ASCII characters in length. The sub value is a case sensitive\n         * string.\n         */\n        sub: { type: 'string', maxLength: 255 },\n\n        /**\n         * aud\n         *\n         * REQUIRED. Audience(s) that this ID Token is intended for. It\n         * MUST contain the OAuth 2.0 client_id of the Relying Party as an\n         * audience value. It MAY also contain identifiers for other audiences.\n         * In the general case, the aud value is an array of case sensitive\n         * strings. In the common special case when there is one audience,\n         * the aud value MAY be a single case sensitive string.\n         */\n        // inherited from JWTClaimsSetSchema\n\n        /**\n         * exp\n         *\n         * REQUIRED. Expiration time on or after which the ID Token MUST NOT\n         * be accepted for processing. The processing of this parameter\n         * requires that the current date/time MUST be before the expiration\n         * date/time listed in the value. Implementers MAY provide for some\n         * small leeway, usually no more than a few minutes, to account for\n         * clock skew. Its value is a JSON number representing the number of\n         * seconds from 1970-01-01T0:0:0Z as measured in UTC until the\n         * date/time. See RFC 3339 [RFC3339] for details regarding date/times\n         * in general and UTC in particular.\n         */\n        // inherited from JWTClaimsSetSchema\n\n        /**\n         * iat\n         *\n         * REQUIRED. Time at which the JWT was issued. Its value is a\n         * JSON number representing the number of seconds from\n         * 1970-01-01T0:0:0Z as measured in UTC until the date/time.\n         */\n        // inherited from JWTClaimsSetSchema\n\n        /**\n         * auth_time\n         *\n         * Time when the End-User authentication occurred. Its value is a\n         * JSON number representing the number of seconds from\n         * 1970-01-01T0:0:0Z as measured in UTC until the date/time. When a\n         * max_age request is made or when auth_time is requested as an\n         * Essential Claim, then this Claim is REQUIRED; otherwise, its\n         * inclusion is OPTIONAL. (The auth_time Claim semantically\n         * corresponds to the OpenID 2.0 PAPE [OpenID.PAPE] auth_time\n         * response parameter.)\n         */\n        auth_time: { type: 'integer', format: 'NumericDate' },\n\n        /**\n         * nonce\n         *\n         * String value used to associate a Client session with an ID Token,\n         * and to mitigate replay attacks. The value is passed through\n         * unmodified from the Authentication Request to the ID Token. If\n         * present in the ID Token, Clients MUST verify that the nonce Claim\n         * Value is equal to the value of the nonce parameter sent in the\n         * Authentication Request. If present in the Authentication Request,\n         * Authorization Servers MUST include a nonce Claim in the ID Token\n         * with the Claim Value being the nonce value sent in the\n         * Authentication Request. Authorization Servers SHOULD perform no\n         * other processing on nonce values used. The nonce value is a case\n         * sensitive string.\n         */\n        nonce: { type: 'string' },\n\n        /**\n         * acr\n         *\n         * OPTIONAL. Authentication Context Class Reference. String\n         * specifying an Authentication Context Class Reference value that\n         * identifies the Authentication Context Class that the authentication\n         * performed satisfied. The value \"0\" indicates the End-User\n         * authentication did not meet the requirements of ISO/IEC 29115\n         * [ISO29115] level 1. Authentication using a long-lived browser\n         * cookie, for instance, is one example where the use of \"level 0\" is\n         * appropriate. Authentications with level 0 SHOULD NOT be used to\n         * authorize access to any resource of any monetary value. (This\n         * corresponds to the OpenID 2.0 PAPE [OpenID.PAPE] nist_auth_level\n         * 0.) An absolute URI or an RFC 6711 [RFC6711] registered name\n         * SHOULD be used as the acr value; registered names MUST NOT be used\n         * with a different meaning than that which is registered. Parties\n         * using this claim will need to agree upon the meanings of the\n         * values used, which may be context-specific. The acr value is a\n         * case sensitive string.\n         */\n        acr: { type: 'string' },\n\n        /**\n         * amr\n         * OPTIONAL. Authentication Methods References. JSON array of strings\n         * that are identifiers for authentication methods used in the\n         * authentication. For instance, values might indicate that both\n         * password and OTP authentication methods were used. The definition\n         * of particular values to be used in the amr Claim is beyond the\n         * scope of this specification. Parties using this claim will need to\n         * agree upon the meanings of the values used, which may be context-\n         * specific. The amr value is an array of case sensitive strings.\n         */\n        amr: { type: 'array', items: { type: 'string' } },\n\n        /**\n         * azp\n         * OPTIONAL. Authorized party - the party to which the ID Token was\n         * issued. If present, it MUST contain the OAuth 2.0 Client ID of this\n         * party. This Claim is only needed when the ID Token has a single\n         * audience value and that audience is different than the authorized\n         * party. It MAY be included even when the authorized party is the\n         * same as the sole audience. The azp value is a case sensitive string\n         * containing a StringOrURI value.\n         */\n        azp: { type: 'string', format: 'StringOrURI' }\n      },\n\n      /**\n       * Required Claims\n       */\n      required: ['iss', 'sub', 'aud', 'exp', 'iat']\n    }\n  }\n});\n\n/**\n * Export\n */\nmodule.exports = IDTokenSchema;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/oidc-rp/lib/IDTokenSchema.js\n// module id = 135\n// module chunks = 0","'use strict';\n\n/**\n * Dependencies\n */\nvar _require = require('json-document'),\n    JSONSchema = _require.JSONSchema;\n\n/**\n * RelyingParty Schema\n *\n * This schema initializes and verifies Relying Party client configuration.\n * RelyingParty objects can be persisted and rehydrated. By encapsulating this data in\n * it's own class, it's possible to have multiple RP configurations running\n * simultaneously.\n */\n\n\nvar RelyingPartySchema = new JSONSchema({\n  type: 'object',\n  properties: {\n\n    /**\n     * provider\n     *\n     * Information about the provider, including issuer URL, human readable name,\n     * and any configuration or provider metadata retrieved from the OP.\n     */\n    provider: {\n      type: 'object',\n      properties: {\n        name: { type: 'string' },\n        url: { type: 'string', format: 'uri' },\n        // NOTE:\n        // OpenID Configuration (discovery response) and JSON Web Keys Set for an\n        // issuer can be cached here. However the cache should not be persisted or\n        // relied upon.\n        //\n        configuration: {}, // .well-known/openid-configuration\n        jwks: {} // /jwks\n      },\n      required: ['url']\n    },\n\n    /**\n     * defaults\n     *\n     * Default request parameters for authentication and dynamic registration requests.\n     * These values can be extended or overridden via arguments to the respective\n     * request methods.\n     *\n     * These are part of the relying party client configuration and can be serialized\n     * and persisted.\n     */\n    defaults: {\n      type: 'object',\n      properties: {\n\n        /**\n         * Default authentication request parameters\n         */\n        authenticate: {\n          type: 'object',\n          properties: {\n            redirect_uri: {\n              type: 'string',\n              format: 'uri'\n            },\n            response_type: {\n              type: 'string',\n              default: 'id_token token', // browser detection\n              enum: ['code', 'token', 'id_token token', 'id_token token code']\n            },\n            display: {\n              type: 'string',\n              default: 'page',\n              enum: ['page', 'popup']\n            },\n            scope: {\n              type: ['string', 'array'],\n              default: ['openid']\n            }\n          }\n        },\n\n        /**\n         * Default client registration parameters\n         */\n        register: {}\n      }\n    },\n\n    /**\n     * registration\n     *\n     * This is the client registration response from dynamic registration. It should\n     * always reflect the client configuration on the openid provider. A client access\n     * token is stored here\n     */\n    registration: {}, // ClientMetadataSchema\n\n    /**\n     * store\n     */\n    store: {\n      type: 'object',\n      default: {}\n    }\n  }\n});\n\n/**\n * Export\n */\nmodule.exports = RelyingPartySchema;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/oidc-rp/lib/RelyingPartySchema.js\n// module id = 136\n// module chunks = 0","'use strict';\n/**\n * Provides a Solid web client class for performing LDP CRUD operations.\n * @module web\n */\n\nvar DEFAULT_ACCEPT = 'text/turtle;q=0.8,*/*;q=0.5';\nvar DEFAULT_MIME_TYPE = 'text/turtle';\nvar defaultConfig = require('../config-default');\n\nvar composePatchQuery = require('./util/web-util').composePatchQuery;\nvar SolidResponse = require('./models/response');\nvar SolidContainer = require('./models/container');\nvar XMLHttpRequest = require('./util/xhr');\nvar HttpError = require('standard-http-error');\nvar vocab = require('solid-namespace');\n\n/**\n * Provides a collection of Solid/LDP web operations (CRUD)\n * @class SolidWebClient\n * @constructor\n * @param rdf {RDF} RDF library (like rdflib.js or rdf-ext) for parsing\n * @param [config] {Object} Config hashmap\n * @param [config.auth] {ClientAuthOIDC} Solid OIDC auth client instance\n */\nfunction SolidWebClient(rdf) {\n  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  this.rdf = rdf;\n  this.vocab = vocab(rdf);\n  this.config = Object.assign(defaultConfig, config);\n  this.auth = config.auth;\n}\n\n/**\n * Creates a Solid container with the specified name.\n * Uses PUT instead of POST to guarantee the container name (and uses\n * conditional HTTP headers to fail with a `409 Conflict` error if\n * a container with that name already exists).\n * @method createContainer\n * @param parentUrl {String} Parent directory/container in which to create\n * @param name {String} Container name (slug / URL fragment), no trailing\n *   slash needed.\n * @param [options] Options hashmap (optional, see `solidRequest()`)\n * @param [data] {String} Optional RDF data payload (additional triples\n *   that will be added to the container's metadata)\n * @throw {HttpError} Throws an error if a resource or container with the\n *   same name already exists\n * @return {Promise<SolidResponse>}\n */\nSolidWebClient.prototype.createContainer = function createContainer(parentUrl, name, options, data) {\n  return this.post(parentUrl, data, name, true);\n  // var newContainerUrl = parentUrl + name\n  // options = options || {}\n  // options.headers = options.headers || {}\n  // options.headers['If-None-Match'] = '*'\n  // var resourceType = vocab.ldp('BasicContainer')\n  // options.headers['Link'] = resourceType + '; rel=\"type\"'\n  // var mimeType = 'text/turtle'\n  // return this.put(newContainerUrl, data, mimeType, options)\n  //  .catch(function (error) {\n  //    if (error instanceof HttpError) {\n  //      if (error.code === HttpError.CONFLICT) {\n  //        error.message = 'A resource with the same name already exists'\n  //      } else if (error.code === HttpError.PRECONDITION_FAILED) {\n  //        error.message = 'A container with the same name already exists'\n  //      }\n  //      throw error\n  //    }\n  //  })\n};\n\n/**\n * Creates and returns the appropriate Solid wrapper for the XHR response.\n * @method createResponse\n * @param xhrResponse {XMLHttpRequest} XHR Response\n * @param method {String} HTTP verb\n * @return {SolidResponse|SolidContainer} Either a SolidResponse or a\n *   SolidContainer instance.\n */\nSolidWebClient.prototype.createResponse = function createResponse(xhrResponse, method) {\n  var response = new SolidResponse(this.rdf, xhrResponse, method);\n  if (response.method === 'get' && response.isContainer()) {\n    return new SolidContainer(this.rdf, response.url, response);\n  }\n  return response;\n};\n/**\n * Returns the current window's location (for use with `needsProxy()`)\n * if used in browser, or `null` if used from Node.\n * @method currentUrl\n * @return {String|Null}\n */\nSolidWebClient.prototype.currentUrl = function currentUrl() {\n  if (typeof window !== 'undefined') {\n    return window.location.href;\n  } else {\n    return null;\n  }\n};\n/**\n * Deletes an existing resource or container.\n * @method del\n * @param url {String} URL of the resource or container to be deleted\n * @return {Promise|Object} Result of the HTTP Delete operation (returns true\n *   on success, or an anonymous error object on failure)\n */\nSolidWebClient.prototype.del = function del(url) {\n  return this.solidRequest(url, 'DELETE');\n};\n/**\n * Retrieves a resource or container by making an HTTP GET call.\n * @method get\n * @param url {String} URL of the resource or container to fetch\n * @param [options={}] Options hashmap (see `solidRequest()` docs)\n * @return {Promise<SolidResponse|SolidContainer>|Object} Result of the HTTP\n *   GET operation, or an error object\n */\nSolidWebClient.prototype.get = function get(url) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  options.headers = options.headers || {};\n  // If no explicit Accept: header specified, set one\n  if (!options.headers['Accept']) {\n    options.headers['Accept'] = DEFAULT_ACCEPT;\n  }\n  return this.solidRequest(url, 'GET', options);\n};\n/**\n * Checks to see if a Solid resource exists, and returns useful resource\n *   metadata info.\n * @method head\n * @param url {String} URL of a resource or container\n * @param [options] Options hashmap (see `solidRequest()` docs)\n * @return {Promise} Result of an HTTP HEAD operation (returns a meta object)\n */\nSolidWebClient.prototype.head = function head(url, options) {\n  return this.solidRequest(url, 'HEAD', options);\n};\n/**\n * Loads a list of given RDF graphs via an async `Promise.all()`,\n * which resolves to an array of uri/parsed-graph hashes.\n * @method loadParsedGraphs\n * @param locations {Array<String>} Array of graph URLs to load\n * @param [options] Options hashmap (see `solidRequest()` docs)\n * @return {Promise<Array<Object>>}\n */\nSolidWebClient.prototype.loadParsedGraphs = function loadParsedGraphs(locations, options) {\n  var web = this;\n  var loadPromises = locations.map(function (location) {\n    var responseUrl; // may differ from location if redirected\n    return web.get(location, options).then(function (response) {\n      responseUrl = response.url;\n      return response.parsedGraph();\n    }).catch(function () {\n      // Suppress the error, no need to reject, just return null graph\n      return null;\n    }).then(function (parsedGraph) {\n      return {\n        uri: responseUrl,\n        value: parsedGraph\n      };\n    });\n  });\n  return Promise.all(loadPromises);\n};\n/**\n * Determines whether the web client needs to fall back onto a Proxy url,\n * to avoid being blocked by CORS\n * @method needsProxy\n * @param url {String}\n * @return {Boolean}\n */\nSolidWebClient.prototype.needsProxy = function needsProxy(url) {\n  var currentUrl = this.currentUrl();\n  var currentIsHttps = currentUrl && currentUrl.slice(0, 6) === 'https:';\n  var targetIsHttp = url && url.slice(0, 5) === 'http:';\n  return currentIsHttps && targetIsHttp;\n};\n/**\n * Issues an HTTP OPTIONS request. Useful for discovering server capabilities\n * (`Accept-Patch:`, `Updates-Via:` for websockets, etc).\n * @method options\n * @param url {String} URL of a resource or container\n * @return {Promise<SolidResponse>} Result of an HTTP OPTIONS operation\n */\nSolidWebClient.prototype.options = function options(url) {\n  return this.solidRequest(url, 'OPTIONS');\n};\n/**\n * Partially edits an RDF-type resource by performing a PATCH operation.\n *   Accepts arrays of individual statements (in Turtle format) as params.\n *   For example:\n *   [ '<a> <b> <c> .', '<d> <e> <f> .']\n * @method patch\n * @param url {String} URL of the resource to be edited\n * @param toDel {Array<String>} Triples to remove from the resource\n * @param toIns {Array<String>} Triples to insert into the resource\n * @param [options] Options hashmap\n * @return {Promise<SolidResponse>} Result of PATCH operation\n */\nSolidWebClient.prototype.patch = function patch(url, toDel, toIns, options) {\n  var data = composePatchQuery(toDel, toIns);\n  var mimeType = 'application/sparql-update';\n  options = options || {};\n  options.headers = options.headers || {};\n  options.headers['Content-Type'] = mimeType;\n  return this.solidRequest(url, 'PATCH', options, data);\n};\n/**\n * Creates a new resource by performing\n *   a Solid/LDP POST operation to a specified container.\n * @param url {String} URL of the container to post to\n * @param data {Object} Data/payload of the resource to be created\n * @param slug {String} Suggested URL fragment for the new resource\n * @param isContainer {Boolean} Is the object being created a Container\n *            or Resource?\n * @param mimeType {String} Content Type of the data/payload\n * @method post\n * @return {Promise|Object} Result of XHR POST (returns parsed\n *     response meta object) or an anonymous error object with status code\n */\nSolidWebClient.prototype.post = function post(url, data, slug, isContainer, mimeType) {\n  var resourceType;\n  if (isContainer) {\n    resourceType = this.vocab.ldp('BasicContainer');\n    // Force the right mime type for containers only\n    mimeType = 'text/turtle';\n  } else {\n    resourceType = this.vocab.ldp('Resource');\n    mimeType = mimeType || DEFAULT_MIME_TYPE;\n  }\n  var options = {};\n  options.headers = {};\n  options.headers['Link'] = resourceType + '; rel=\"type\"';\n  options.headers['Content-Type'] = mimeType;\n  if (slug && slug.length > 0) {\n    options.headers['Slug'] = slug;\n  }\n  return this.solidRequest(url, 'POST', options, data);\n};\n/**\n * Turns a given URL into a proxied version, using a proxy template\n * @method proxyUrl\n * @param url {String} Intended URL\n * @param proxyUrlTemplate {String}\n * @return {String}\n */\nSolidWebClient.prototype.proxyUrl = function proxyUrl(url, proxyUrlTemplate) {\n  proxyUrlTemplate = proxyUrlTemplate || this.config.proxyUrl;\n  return proxyUrlTemplate.replace('{uri}', encodeURIComponent(url));\n};\n/**\n * Updates an existing resource or creates a new resource by performing\n *   a Solid/LDP PUT operation to a specified container\n * @method put\n * @param url {String} URL of the resource to be updated/created\n * @param data {Object} Data/payload of the resource to be created or updated\n * @param [mimeType] {String} MIME Type of the resource to be created\n * @param [options] Options hashmap, see docs for `solidResponse()`\n * @return {Promise|Object} Result of PUT operation (returns parsed response\n *     meta object if successful, rejects with an anonymous error status\n *     object if not successful)\n */\nSolidWebClient.prototype.put = function put(url, data, mimeType, options) {\n  options = options || {};\n  options.headers = options.headers || {};\n  mimeType = mimeType || DEFAULT_MIME_TYPE;\n  options.headers['Content-Type'] = mimeType;\n  return this.solidRequest(url, 'PUT', options, data);\n};\n/**\n * Sends a generic XHR request with the appropriate Solid headers,\n * and returns a promise that resolves to a parsed response.\n * @method solidRequest\n * @param url {String} URL of the request\n * @param method {String} HTTP Verb ('GET', 'PUT', etc)\n * @param [options] Options hashmap\n * @param [options.noCredentials=false] {Boolean} Don't use `withCredentials`\n * @param [options.forceProxy=false] {Boolean} Enforce using proxy URL if true\n * @param [options.headers={}] {Object} HTTP headers to send along\n *          with request\n * @param [options.proxyUrl=config.proxyUrl] {String} Proxy URL to use for\n *          CORS Requests.\n * @param [options.timeout=config.timeout] {Number} Request timeout in\n *          milliseconds.\n * @param [data] {Object} Optional data / payload\n * @throws {HttpError} Rejects with `httpError.HttpError` of the appropriate\n *   type\n * @return {Promise<SolidResponse>}\n */\nSolidWebClient.prototype.solidRequest = function solidRequest(url, method, options, data) {\n  options = options || {};\n  options.headers = options.headers || {};\n  if (this.auth && this.auth.accessToken) {\n    options.headers['Authorization'] = 'Bearer ' + this.auth.accessToken;\n  }\n  options.proxyUrl = options.proxyUrl || this.config.proxyUrl;\n  options.timeout = options.timeout || this.config.timeout;\n  if (this.needsProxy(url) || options.forceProxy) {\n    url = this.proxyUrl(url);\n  }\n  var webClient = this;\n  return new Promise(function (resolve, reject) {\n    var http = new XMLHttpRequest();\n    http.open(method, url);\n    if (!options.noCredentials) {\n      http.withCredentials = true;\n    }\n    for (var header in options.headers) {\n      // Add in optional headers\n      http.setRequestHeader(header, options.headers[header]);\n    }\n    if (options.timeout) {\n      http.timeout = options.timeout;\n    }\n    http.onload = function () {\n      if (this.status >= 200 && this.status < 300) {\n        resolve(webClient.createResponse(this, method));\n      } else {\n        reject(new HttpError(this.status, this.statusText, { xhr: this }));\n      }\n    };\n    http.onerror = function () {\n      reject(new HttpError(this.status, this.statusText, { xhr: this }));\n    };\n    if (typeof data === 'undefined' || !data) {\n      http.send();\n    } else {\n      http.send(data);\n    }\n  });\n};\n\n/**\n * Returns a web client instance (convenience constructor method).\n * Usage:\n *\n *   ```\n *   var rdf = require('rdflib')  // or other compatible library\n *   var webClient = require('solid-web-client')(rdf)\n *   ```\n * @param rdf\n * @param config\n * @returns {SolidWebClient}\n */\nfunction getClient(rdf, config) {\n  return new SolidWebClient(rdf, config);\n}\n\nmodule.exports = getClient;\nmodule.exports.SolidWebClient = SolidWebClient;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/solid-web-client/lib/client.js\n// module id = 137\n// module chunks = 0","'use strict'\n/**\n * Provides a simple configuration object for Solid web client\n * @module config-default\n */\nmodule.exports = {\n  /**\n   * Default proxy URL for servicing CORS requests\n   */\n  proxyUrl: 'https://databox.me/,proxy?uri={uri}',\n  /**\n   * Timeout for web/ajax operations, in milliseconds\n   */\n  timeout: 50000\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/solid-web-client/config-default.js\n// module id = 138\n// module chunks = 0","'use strict';\n/**\n * Provides misc utility functions for the web client\n * @module web-util\n */\n\nmodule.exports.absoluteUrl = absoluteUrl;\nmodule.exports.composePatchQuery = composePatchQuery;\nmodule.exports.hostname = hostname;\nmodule.exports.parseAllowedMethods = parseAllowedMethods;\nmodule.exports.parseLinkHeader = parseLinkHeader;\nmodule.exports.statementToNT = statementToNT;\n\n/**\n * Return an absolute URL\n * @method absoluteUrl\n * @param baseUrl {String} URL to be used as base\n * @param pathUrl {String} Absolute or relative URL\n * @return {String}\n */\nfunction absoluteUrl(baseUrl, pathUrl) {\n  if (pathUrl && pathUrl.slice(0, 4) !== 'http') {\n    return [baseUrl, pathUrl].map(function (path) {\n      if (path[0] === '/') {\n        path = path.slice(1);\n      }\n      if (path[path.length - 1] === '/') {\n        path = path.slice(0, path.length - 1);\n      }\n      return path;\n    }).join('/');\n  }\n  return pathUrl;\n}\n\n/**\n * Composes and returns a PATCH SPARQL query (for use with `web.patch()`)\n * @method composePatchQuery\n * @param toDel {Array<String|Statement>} List of triples to delete\n * @param toIns {Array<String|Statement>} List of triples to insert\n * @return {String} SPARQL query for use with PATCH\n */\nfunction composePatchQuery(toDel, toIns) {\n  var query = '';\n  var excludeDot = true;\n  if (toDel && toDel.length > 0) {\n    toDel = toDel.map(function (st) {\n      return statementToNT(st, excludeDot);\n    });\n    query += 'DELETE DATA { ' + toDel.join(' . ') + ' };\\n';\n  }\n  if (toIns && toIns.length > 0) {\n    toIns = toIns.map(function (st) {\n      return statementToNT(st, excludeDot);\n    });\n    query += 'INSERT DATA { ' + toIns.join(' . ') + ' };\\n';\n  }\n  return query;\n}\n\nfunction hostname(url) {\n  var protocol, hostname, result, pathSegments;\n  var fragments = url.split('//');\n  if (fragments.length === 2) {\n    protocol = fragments[0];\n    hostname = fragments[1];\n  } else {\n    hostname = url;\n  }\n  pathSegments = hostname.split('/');\n  if (protocol) {\n    result = protocol + '//' + pathSegments[0];\n  } else {\n    result = pathSegments[0];\n  }\n  if (url.startsWith('//')) {\n    result = '//' + result;\n  }\n  return result;\n}\n\n/**\n * Extracts the allowed HTTP methods from the 'Allow' and 'Accept-Patch'\n * headers, and returns a hashmap of verbs allowed by the server\n * @method parseAllowedMethods\n * @param allowMethodsHeader {String} `Access-Control-Allow-Methods` response\n *   header\n * @param acceptPatchHeader {String} `Accept-Patch` response header\n * @return {Object} Hashmap of verbs (in lowercase) allowed by the server for\n *   the current user. Example:\n *   ```\n *   {\n *     'get': true,\n *     'put': true\n *   }\n *   ```\n */\nfunction parseAllowedMethods(allowMethodsHeader, acceptPatchHeader) {\n  var allowedMethods = {};\n  if (allowMethodsHeader) {\n    var verbs = allowMethodsHeader.split(',');\n    verbs.forEach(function (methodName) {\n      if (methodName && allowMethodsHeader.indexOf(methodName) >= 0) {\n        allowedMethods[methodName.trim().toLowerCase()] = true;\n      }\n    });\n  }\n  if (acceptPatchHeader && acceptPatchHeader.indexOf('application/sparql-update') >= 0) {\n    allowedMethods.patch = true;\n  }\n  return allowedMethods;\n}\n\n/**\n* Parses a Link header from an XHR HTTP Request.\n* @method parseLinkHeader\n* @param link {String} Contents of the Link response header\n* @return {Object}\n*/\nfunction parseLinkHeader(link) {\n  if (!link) {\n    return {};\n  }\n  var linkexp = /<[^>]*>\\s*(\\s*;\\s*[^\\(\\)<>@,;:\"\\/\\[\\]\\?={} \\t]+=(([^\\(\\)<>@,;:\"\\/\\[\\]\\?={} \\t]+)|(\"[^\"]*\")))*(,|$)/g;\n  var paramexp = /[^\\(\\)<>@,;:\"\\/\\[\\]\\?={} \\t]+=(([^\\(\\)<>@,;:\"\\/\\[\\]\\?={} \\t]+)|(\"[^\"]*\"))/g;\n  var matches = link.match(linkexp);\n  var rels = {};\n  for (var i = 0; i < matches.length; i++) {\n    var split = matches[i].split('>');\n    var href = split[0].substring(1);\n    var ps = split[1];\n    var s = ps.match(paramexp);\n\n    for (var j = 0; j < s.length; j++) {\n      var p = s[j];\n      var paramsplit = p.split('=');\n      // var name = paramsplit[0]\n      var rel = paramsplit[1].replace(/[\"']/g, '');\n      if (!rels[rel]) {\n        rels[rel] = [];\n      }\n      rels[rel].push(href);\n      if (rels[rel].length > 1) {\n        rels[rel].sort();\n      }\n    }\n  }\n  return rels;\n}\n\n/**\n * Converts a statement to string (if it isn't already), optionally slices off\n * the period at the end, and returns the statement.\n * @method statementToNT\n * @param statement {String|Triple} RDF Statement to be converted.\n * @param [excludeDot=false] {Boolean} Optionally slice off ending period.\n * @return {String}\n */\nfunction statementToNT(statement, excludeDot) {\n  if (typeof statement !== 'string') {\n    // This is an RDF Statement. Convert to string\n    statement = statement.toCanonical();\n  }\n  if (excludeDot && statement.endsWith('.')) {\n    statement = statement.slice(0, -1);\n  }\n  return statement;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/solid-web-client/lib/util/web-util.js\n// module id = 139\n// module chunks = 0","'use strict';\n/**\n * @module response\n */\n\nmodule.exports = SolidResponse;\n\nvar webUtil = require('../util/web-util');\nvar graphUtil = require('../util/graph-util'); // Used by .parsedGraph()\n\n/**\n * Provides a wrapper around an XHR response object, and adds several\n * Solid-specific parsed fields (link headers, allowed verbs, etc)\n * @class SolidResponse\n * @constructor\n * @param rdf {RDF} RDF Library such as rdflib.js\n * @param xhrResponse {XMLHttpRequest} Result of XHR operation\n * @param method {String} HTTP verb for the original request. Passed in\n *   separately because it's not actually stored in the XHR object.\n */\nfunction SolidResponse(rdf, xhrResponse, method) {\n  if (!xhrResponse) {\n    this.xhr = null;\n    this.user = '';\n    this.method = null;\n    this.types = [];\n    this.graph = null;\n    return;\n  }\n  /**\n   * RDF Library such as rdflib.js. Used by parsedGraph()\n   * @property rdf\n   * @type RDF\n   */\n  this.rdf = rdf;\n  /**\n   * Hashmap of parsed `Link:` headers. Example:\n   *\n   *   ```\n   *   {\n   *     acl: [ 'resourceName.acl' ],\n   *     describedBy: [ 'resourceName.meta' ],\n   *     type: [\n   *       'http://www.w3.org/ns/ldp#RDFResource',\n   *       'http://www.w3.org/ns/ldp#Resource'\n   *     ]\n   *   }\n   *   ```\n   * @property linkHeaders\n   * @type Object\n   */\n  var linkHeader = xhrResponse.getResponseHeader('Link');\n  this.linkHeaders = webUtil.parseLinkHeader(linkHeader) || {};\n\n  if (method) {\n    method = method.toLowerCase();\n  } else {\n    method = '';\n  }\n  /**\n   * HTTP verb for the original request (GET, PUT, etc)\n   * @property method\n   * @type String\n   */\n  this.method = method;\n\n  /**\n   * Name of the corresponding `.acl` resource\n   * @property acl\n   * @type String\n   */\n  this.acl = this.linkHeaders['acl'];\n  if (this.acl) {\n    this.acl = this.acl[0]; // Extract the single .acl link\n  }\n  /**\n   * Hashmap of HTTP methods/verbs allowed by the server.\n   * (If a verb is not allowed, it's not included.)\n   * Example:\n   *   ```\n   *   {\n   *     'get': true,\n   *     'put': true\n   *   }\n   *   ```\n   * @property allowedMethods\n   * @type Object\n   */\n  this.allowedMethods = this.parseAllowedMethods(xhrResponse, method);\n\n  /**\n   * Cache of the parsed graph of xhr.response,\n   * lazy-initialized when you call `response.parsedGraph()`\n   * @property graph\n   * @type {IndexedFormula}\n   */\n  this.graph = null;\n\n  /**\n   * Name of the corresponding `.meta` resource\n   * @property meta\n   * @type String\n   */\n  this.meta = this.linkHeaders['meta'] || this.linkHeaders['describedBy'];\n  if (this.meta) {\n    this.meta = this.meta[0]; // Extract the single .meta link\n  }\n  /**\n   * LDP Types for the resource.\n   * Example: [\n   *   'http://www.w3.org/ns/ldp#Resource',\n   *   'http://www.w3.org/ns/ldp#RDFResource'\n   * ]\n   * @property types\n   * @type Array<String>\n   */\n  this.types = this.typeLinkHeaders();\n  /**\n   * URL of the resource created or retrieved\n   * @property url\n   * @type String\n   */\n  this.url = xhrResponse.getResponseHeader('Location') ? webUtil.absoluteUrl(webUtil.hostname(xhrResponse.responseURL), xhrResponse.getResponseHeader('Location')) : xhrResponse.responseURL;\n  /**\n   * WebID URL of the currently authenticated user (empty string if none)\n   * @property user\n   * @type String\n   */\n  this.user = xhrResponse.getResponseHeader('User') || '';\n  /**\n   * URL of the corresponding websocket instance, for this resource\n   * Example: `wss://example.org/blog/hello-world`\n   * @property websocket\n   * @type String\n   */\n  this.websocket = xhrResponse.getResponseHeader('Updates-Via') || '';\n  /**\n   * Raw XHR response object\n   * @property xhr\n   * @type XMLHttpRequest\n   */\n  this.xhr = xhrResponse;\n}\n\n/**\n * Returns the absolute URL of the ACL resource for this response.\n * @method aclAbsoluteUrl\n * @return {String}\n */\nSolidResponse.prototype.aclAbsoluteUrl = function aclAbsoluteUrl() {\n  if (!this.acl) {\n    return null;\n  }\n  return this.resolveMetaOrAclUrl('acl');\n};\n\n/**\n * Returns the Content-Type of the response (or null if no response\n * is present)\n * @method contentType\n * @return {String|Null}\n */\nSolidResponse.prototype.contentType = function contentType() {\n  if (this.xhr) {\n    return this.xhr.getResponseHeader('Content-Type').split(';')[0]; // remove parameter\n  } else {\n    return null;\n  }\n};\n\n/**\n * Returns true if the resource exists (not a 404)\n * @method exists\n * @return {Boolean}\n */\nSolidResponse.prototype.exists = function exists() {\n  return this.xhr && this.xhr.status >= 200 && this.xhr.status < 400;\n};\n\n/**\n * Is this a Container instance (vs a regular resource).\n * @return {Boolean}\n */\nSolidResponse.prototype.isContainer = function isContainer() {\n  return this.isType('http://www.w3.org/ns/ldp#Container') || this.isType('http://www.w3.org/ns/ldp#BasicContainer');\n};\n\n/**\n * Returns true if the user is logged in with the server\n * @method isLoggedIn\n * @return {Boolean}\n */\nSolidResponse.prototype.isLoggedIn = function isLoggedIn() {\n  return this.user; // && this.user.slice(0, 4) === 'http'\n};\n\n/**\n * Returns true if this a given type matches this resource's types\n * @method isType\n * @param rdfClass {String}\n * @return {Boolean}\n */\nSolidResponse.prototype.isType = function isType(rdfClass) {\n  return this.types.indexOf(rdfClass) !== -1;\n};\n\n/**\n * Returns the absolute URL of the .meta resource for this response.\n * @method metaAbsoluteUrl\n * @return {String}\n */\nSolidResponse.prototype.metaAbsoluteUrl = function metaAbsoluteUrl() {\n  if (!this.meta) {\n    return null;\n  }\n  return this.resolveMetaOrAclUrl('meta');\n};\n\n/**\n * In case that this was preflight-type request (OPTIONS or POST, for example),\n * parses and returns the allowed methods for the resource (for the current\n * user).\n * @method parseAllowedMethods\n * @param xhrResponse {XMLHttpRequest}\n * @param method {String} HTTP verb for the original request\n * @return {Object} Hashmap of the allowed methods\n */\nSolidResponse.prototype.parseAllowedMethods = function parseAllowedMethods(xhrResponse, method) {\n  if (method === 'get') {\n    // Not a preflight request\n    return {};\n  } else {\n    return webUtil.parseAllowedMethods(xhrResponse.getResponseHeader('Allow'), xhrResponse.getResponseHeader('Accept-Patch'));\n  }\n};\n\n/**\n * Returns the parsed graph of the response (lazy-initializes it if it's not\n * present)\n * @method parsedGraph\n * @return {IndexedFormula}\n */\nSolidResponse.prototype.parsedGraph = function parsedGraph() {\n  if (!this.graph) {\n    this.graph = graphUtil.parseGraph(this.rdf, this.url, this.raw(), this.contentType());\n  }\n  return this.graph;\n};\n\n/**\n * Returns the raw XHR response (or null if absent)\n * @method raw\n * @return {Object|Null}\n */\nSolidResponse.prototype.raw = function raw() {\n  if (this.xhr) {\n    return this.xhr.response;\n  } else {\n    return null;\n  }\n};\n\n/**\n * Returns the absolute url of a \"related\" resource (.acl or .meta)\n * @param propertyName {string} Either 'acl' or 'meta'\n * @return {string}\n */\nSolidResponse.prototype.resolveMetaOrAclUrl = function resolveMetaOrAclUrl(propertyName) {\n  if (!this.url) {\n    return null;\n  }\n  var metaOrAclUrl = this[propertyName];\n  // if url is https://example.com/resource, parent is https://example.com/\n  var parentUrl = this.url.slice(0, this.url.lastIndexOf('/') + 1);\n  return webUtil.absoluteUrl(parentUrl, metaOrAclUrl);\n};\n\n/**\n * Returns a unique (de-duplicated) list of `rel=\"type\"` Link headers.\n * @return {Array}\n */\nSolidResponse.prototype.typeLinkHeaders = function typeLinkHeaders() {\n  if (!Array.isArray(this.linkHeaders.type)) {\n    return [];\n  }\n  var types = new Set(this.linkHeaders.type || []);\n  return Array.from(types);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/solid-web-client/lib/models/response.js\n// module id = 140\n// module chunks = 0","'use strict';\n/**\n * Provides convenience methods for graph manipulation.\n * Currently depends on RDFLib\n * @module graph-util\n */\n\nmodule.exports.appendGraph = appendGraph;\nmodule.exports.parseGraph = parseGraph;\nmodule.exports.parseLinks = parseLinks;\nmodule.exports.serializeStatements = serializeStatements;\nmodule.exports.graphFromStatements = graphFromStatements;\n\nvar ALL_STATEMENTS = null;\n\n/**\n * Appends RDF statements from one graph object to another\n * @method appendGraph\n * @param toGraph {Graph} Graph object to append to\n * @param fromGraph {Graph} Graph object to append from\n * @param docURI {String} Document URI to use as source\n */\nfunction appendGraph(toGraph, fromGraph, docURI) {\n  fromGraph.statementsMatching(ALL_STATEMENTS).forEach(function (st) {\n    toGraph.add(st.subject, st.predicate, st.object, st.why);\n  });\n}\n\n/**\n * Converts a list of RDF statements into a Graph, and returns\n * it.\n * @method graphFromStatements\n * @param rdf {RDF} RDF library such as rdflib.js\n * @param statements {Array<Statement>}\n * @return {Graph}\n */\nfunction graphFromStatements(rdf, statements) {\n  var graph = rdf.graph();\n  statements.forEach(function (st) {\n    graph.addStatement(st);\n  });\n  return graph;\n}\n\n/**\n * Parses a given graph, from text rdfSource, as a given content type.\n * Returns parsed graph.\n * @method parseGraph\n * @param rdf {RDF} RDF library such as rdflib.js\n * @param baseUrl {String}\n * @param rdfSource {String} Text source code\n * @param contentType {String} Mime Type (determines which parser to use)\n * @return {rdf.Graph}\n */\nfunction parseGraph(rdf, baseUrl, rdfSource, contentType) {\n  var parsedGraph = rdf.graph();\n  rdf.parse(rdfSource, parsedGraph, baseUrl, contentType);\n  return parsedGraph;\n}\n\n/**\n * Extracts the URIs from a parsed graph that match parameters.\n * The URIs are a set (duplicates are removed)\n * @method parseLinks\n * @param graph {Graph}\n * @param subject {NamedNode}\n * @param predicate {NamedNode}\n * @param object {NamedNode}\n * @param source {NamedNode}\n * @return {Array<String>} Array of link URIs that match the parameters\n */\nfunction parseLinks(graph, subject, predicate, object, source) {\n  var links = {};\n  var matches = graph.statementsMatching(subject, predicate, object, source);\n  matches.forEach(function (match) {\n    links[match.object.uri] = true;\n  });\n  return Object.keys(links);\n}\n\n/**\n * Serializes an array of RDF statements into a simple N-Triples format\n * suitable for writing to a solid server.\n * @method serializeStatements\n * @param statements {Array<Statement>} List of RDF statements\n * @return {String}\n */\nfunction serializeStatements(statements) {\n  var source = statements.map(function (st) {\n    return st.toNT();\n  });\n  source = source.join('\\n');\n  return source;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/solid-web-client/lib/util/graph-util.js\n// module id = 141\n// module chunks = 0","'use strict';\n/**\n * @module container\n */\n\nmodule.exports = SolidContainer;\nvar graphUtil = require('../util/graph-util');\nvar parseLinks = graphUtil.parseLinks;\nvar vocab = require('solid-namespace');\nvar SolidResource = require('./resource');\n\n/**\n * @class SolidContainer\n * @extends SolidResource\n * @constructor\n * @param rdf {RDF} RDF Library (such as rdflib.js) to inject\n * @param uri {String}\n * @param response {SolidResponse}\n */\nfunction SolidContainer(rdf, uri, response) {\n  // Call parent constructor\n  SolidResource.call(this, uri, response);\n  /**\n   * Hashmap of Containers within this container, keyed by absolute uri\n   * @property containers\n   * @type Object\n   */\n  this.containers = {};\n  /**\n   * List of URIs of all contents (containers and resources)\n   * @property contentsUris\n   * @type Array<String>\n   */\n  this.contentsUris = [];\n  /**\n   * RDF Library (such as rdflib.js) to inject (used for parsing contents)\n   * @type RDF\n   */\n  this.rdf = rdf;\n  /**\n   * Hashmap of Contents that are just resources (not containers),\n   * keyed by absolute uri\n   * @property resources\n   * @type Object\n   */\n  this.resources = {};\n\n  /**\n   * Hashmap of common RDF ontology namespaces\n   * @type Object\n   */\n  this.vocab = vocab(rdf);\n\n  if (response) {\n    this.initFromResponse(this.uri, response);\n  }\n}\n// SolidContainer.prototype object inherits from SolidResource.prototype\nSolidContainer.prototype = Object.create(SolidResource.prototype);\nSolidContainer.prototype.constructor = SolidContainer;\n\n/**\n * Extracts the contents (resources and sub-containers)\n * of the given graph and adds them to this container\n * @method appendFromGraph\n * @param parsedGraph {Graph}\n * @param graphUri {String}\n */\nSolidContainer.prototype.appendFromGraph = function appendFromGraph(parsedGraph, graphUri) {\n  // Set this container's types\n  var uriNode = this.rdf.namedNode(this.uri);\n  this.types = Object.keys(parsedGraph.findTypeURIs(uriNode));\n\n  // Extract all the contents links (resources and containers)\n  var contentsUris = parseLinks(parsedGraph, null, this.vocab.ldp('contains'));\n  this.contentsUris = this.contentsUris.concat(contentsUris.sort());\n\n  // Extract links that are just containers\n  var containersLinks = parsedGraph.each(null, null, this.vocab.ldp('Container'));\n  var self = this;\n  var container;\n  containersLinks.forEach(function (containerLink) {\n    // Filter out . (the link to this directory)\n    if (containerLink.uri !== self.uri) {\n      container = new SolidContainer(self.rdf, containerLink.uri);\n      container.types = Object.keys(parsedGraph.findTypeURIs(containerLink));\n      self.containers[container.uri] = container;\n    }\n  });\n  // Now that containers are defined, all the rest are non-container resources\n  var isResource, isContainer;\n  var resource, linkNode;\n  contentsUris.forEach(function (link) {\n    isContainer = link in self.containers;\n    isResource = link !== self.uri && !isContainer;\n    if (isResource) {\n      resource = new SolidResource(link);\n      linkNode = self.rdf.namedNode(link);\n      resource.types = Object.keys(parsedGraph.findTypeURIs(linkNode));\n      self.resources[link] = resource;\n    }\n  });\n};\n\n/**\n * Returns a list of SolidResource or SolidContainer instances that match\n * a given type.\n * @method findByType\n * @param rdfClass {String}\n * @return {Array<SolidResource|SolidContainer>}\n */\nSolidContainer.prototype.findByType = function findByType(rdfClass) {\n  var matches = [];\n  var key;\n  var container;\n  for (key in this.containers) {\n    container = this.containers[key];\n    if (container.isType(rdfClass)) {\n      matches.push(container);\n    }\n  }\n  var resource;\n  for (key in this.resources) {\n    resource = this.resources[key];\n    if (resource.isType(rdfClass)) {\n      matches.push(resource);\n    }\n  }\n  return matches;\n};\n\n/**\n * @method initFromResponse\n * @param uri {String}\n * @param response {SolidResponse}\n */\nSolidContainer.prototype.initFromResponse = function initFromResponse(uri, response) {\n  var contentType = response.contentType();\n  if (!contentType) {\n    throw new Error('Cannot parse container without a Content-Type: header');\n  }\n  var parsedGraph = graphUtil.parseGraph(this.rdf, uri, response.raw(), contentType);\n  this.parsedGraph = parsedGraph;\n  this.appendFromGraph(parsedGraph, uri);\n};\n\n/**\n * Is this a Container instance (vs a regular resource).\n * @return {Boolean}\n */\nSolidResource.prototype.isContainer = function isContainer() {\n  return true;\n};\n\n/**\n * Returns true if there are no resources or containers inside this container.\n * @method isEmpty\n * @return {Boolean}\n */\nSolidContainer.prototype.isEmpty = function isEmpty() {\n  return this.contentsUris.length === 0;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/solid-web-client/lib/models/container.js\n// module id = 142\n// module chunks = 0","'use strict'\n/**\n * Provides a hashmap of relevant vocabs / namespaces.\n * Usage:\n *\n *   ```\n *   var rdf = require('rdflib')  // optional\n *   var vocab = require('solid-vocab')(rdf)  // or require('solid-vocab')()\n *   console.log(vocab.foaf('name'))  // -> <http://xmlns.com/foaf/0.1/name>\n *   ```\n * @module vocab\n */\n\n/**\n * @param [rdf] {RDF} Optional RDF Library (such as rdflib.js or rdf-ext) to\n *   inject\n */\nfunction vocab (rdf) {\n  var ns = require('rdf-ns')(rdf)\n  var vocabMap = {\n    'acl': ns.base('http://www.w3.org/ns/auth/acl#'),\n    'app': ns.base('http://www.w3.org/ns/solid/app#'),\n    'dct': ns.base('http://purl.org/dc/terms/'),\n    'foaf': ns.base('http://xmlns.com/foaf/0.1/'),\n    'ldp': ns.base('http://www.w3.org/ns/ldp#'),\n    'owl': ns.base('http://www.w3.org/2002/07/owl#'),\n    'pim': ns.base('http://www.w3.org/ns/pim/space#'),\n    'rdf': ns.base('http://www.w3.org/1999/02/22-rdf-syntax-ns#'),\n    'rdfs': ns.base('http://www.w3.org/2000/01/rdf-schema#'),\n    'schema': ns.base('http://schema.org/'),\n    'sioc': ns.base('http://rdfs.org/sioc/ns#'),\n    'solid': ns.base('http://www.w3.org/ns/solid/terms#'),\n    'vcard': ns.base('http://www.w3.org/2006/vcard/ns#'),\n    'xsd': ns.base('http://www.w3.org/2001/XMLSchema#')\n  }\n  return vocabMap\n}\n\nmodule.exports = vocab\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/solid-web-client/~/solid-namespace/index.js\n// module id = 143\n// module chunks = 0","'use strict'\n\nmodule.exports = rdfNamespace\n\n/**\n * Usage:\n *\n *   ```\n *   var rdf = require('rdflib')\n *   var ns = require('rdf-ns')(rdf)\n *\n *   var rdfs = ns.base('http://www.w3.org/2000/01/rdf-schema#')\n *   var seeAlso = rdfs('seeAlso')\n *   console.log(seeAlso)\n *   // -> NamedNode(<http://www.w3.org/2000/01/rdf-schema#seeAlso>)\n *   ```\n *\n * @class Namespace\n * @constructor\n * @param rdf {RDF} RDF library such as rdflib.js or rdf-ext (for dep injection)\n */\nfunction Namespace (rdf) {\n  this.rdf = rdf\n}\n\n/**\n * @param namespaceIri {String} Namespace IRI\n * @return {Function}\n */\nNamespace.prototype.base = function base (namespaceIri) {\n  var self = this\n  /**\n   * @param term {String} IRI fragment\n   * @return {String|NamedNode}\n   */\n  return function fullIri (term) {\n    if (self.rdf) {\n      return self.rdf.namedNode(namespaceIri + term)\n    } else {\n      return namespaceIri + term\n    }\n  }\n}\n\nfunction rdfNamespace (rdf) {\n  return new Namespace(rdf)\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rdf-ns/index.js\n// module id = 144\n// module chunks = 0","'use strict';\n/**\n * @module resource\n */\n\n/**\n * Represents a Solid / LDP Resource (currently used when listing\n * SolidContainer resources)\n * @class SolidResource\n * @constructor\n */\n\nmodule.exports = SolidResource;\n\nfunction SolidResource(uri, response) {\n  /**\n   * Short name (page/filename part of the resource path),\n   * derived from the URI\n   * @property name\n   * @type String\n   */\n  this.name = null;\n  /**\n   * Parsed graph of the contents of the resource\n   * @property parsedGraph\n   * @type Graph\n   */\n  this.parsedGraph = null;\n  /**\n   * Optional SolidResponse object from which this resource was initialized\n   * @property response\n   * @type SolidResponse\n   */\n  this.response = response;\n  /**\n   * List of RDF Types (classes) to which this resource belongs\n   * @property types\n   * @type Array<String>\n   */\n  this.types = [];\n  /**\n   * Absolute url of the resource\n   * @property url\n   * @type String\n   */\n  this.uri = uri;\n\n  if (response) {\n    if (response.url !== uri) {\n      // Override the given url (which may be relative) with that of the\n      // response object (which will be absolute)\n      this.uri = response.url;\n    }\n  }\n  this.initName();\n}\n\n/**\n * Initializes the short name from the url\n * @method initName\n */\nSolidResource.prototype.initName = function initName() {\n  if (!this.uri) {\n    return;\n  }\n  // Split on '/', use the last fragment\n  var fragments = this.uri.split('/');\n  this.name = fragments.pop();\n  if (!this.name && fragments.length > 0) {\n    // URI ended in a '/'. Try again.\n    this.name = fragments.pop();\n  }\n};\n\n/**\n * Is this a Container instance (vs a regular resource).\n * (Is overridden in the subclass, `SolidContainer`)\n * @return {Boolean}\n */\nSolidResource.prototype.isContainer = function isContainer() {\n  return false;\n};\n\n/**\n * Returns true if this a given type matches this resource's types\n * @method isType\n * @param rdfClass {String}\n * @return {Boolean}\n */\nSolidResource.prototype.isType = function isType(rdfClass) {\n  return this.types.indexOf(rdfClass) !== -1;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/solid-web-client/lib/models/resource.js\n// module id = 145\n// module chunks = 0","'use strict';\n/* global Components */\n/**\n * Provides a generic wrapper around the XMLHttpRequest object, to make it\n * usable both in the browser and firefox extension and in Node.js\n * @module xhr\n */\n\nvar XMLHttpRequest;\nif (typeof tabulator !== 'undefined' && tabulator.isExtension) {\n  // Running inside the Tabulator Firefox extension\n  // Cannot use XMLHttpRequest natively, must request it through SDK\n  XMLHttpRequest = Components.classes['@mozilla.org/xmlextras/xmlhttprequest;1'].createInstance().QueryInterface(Components.interfaces.nsIXMLHttpRequest);\n} else if (typeof window !== 'undefined' && 'XMLHttpRequest' in window) {\n  // Running inside the browser\n  XMLHttpRequest = window.XMLHttpRequest;\n} else {\n  // in Node.js\n  XMLHttpRequest = require('xhr2');\n}\nmodule.exports = XMLHttpRequest;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/solid-web-client/lib/util/xhr.js\n// module id = 146\n// module chunks = 0","exports = module.exports = HttpError\nvar StandardError = require(\"standard-error\")\nvar STATUS_CODE_TO_NAME = require(\"./codes\")\nvar STATUS_NAME_TO_CODE = exports\n\nfunction HttpError(code, msg, props) {\n  if (typeof code == \"string\") code = STATUS_NAME_TO_CODE[code]\n  if (typeof code != \"number\") throw new TypeError(\"Non-numeric HTTP code\")\n  if (typeof msg == \"object\" && msg != null) props = msg, msg = null\n  StandardError.call(this, msg || STATUS_CODE_TO_NAME[code], props)\n  this.code = code\n}\n\nHttpError.prototype = Object.create(StandardError.prototype, {\n  constructor: {value: HttpError, configurable: true, writable: true}\n})\n\n// Set name explicitly for when the code gets minified.\nHttpError.prototype.name = \"HttpError\"\n\nObject.defineProperties(HttpError.prototype, {\n  statusCode: alias(\"code\"),\n  statusMessage: alias(\"message\"),\n\n  status: {\n    configurable: true,\n    get: function() { return this.code },\n    set: function(value) {\n      Object.defineProperty(this, \"status\", {\n        value: value, configurable: true, enumerable: true, writable: true\n      })\n    }\n  }\n})\n\nHttpError.prototype.toString = function() {\n  return this.name + \": \" + this.code + \" \" + this.message\n}\n\nfor (var code in STATUS_CODE_TO_NAME) {\n  var name = STATUS_CODE_TO_NAME[code]\n  exports[name.replace(\"'\", \"\").replace(/[- ]/g, \"_\").toUpperCase()] = +code\n}\n\nfunction alias(name) {\n  return {\n    configurable: true,\n    get: function() { return this[name] },\n    set: function(value) { return this[name] = value },\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/standard-http-error/index.js\n// module id = 147\n// module chunks = 0","var has = Object.hasOwnProperty\nvar proto = Object.getPrototypeOf\nvar trace = Error.captureStackTrace\nmodule.exports = StandardError\n\nfunction StandardError(msg, props) {\n  // Let all properties be enumerable for easier serialization.\n  if (msg && typeof msg == \"object\") props = msg, msg = undefined\n  else this.message = msg\n\n  // Name has to be an own property (or on the prototype a single step up) for\n  // the stack to be printed with the correct name.\n  if (props) for (var key in props) this[key] = props[key]\n  if (!has.call(this, \"name\"))\n    this.name = has.call(proto(this), \"name\")? this.name : this.constructor.name\n\n  if (trace && !(\"stack\" in this)) trace(this, this.constructor)\n}\n\nStandardError.prototype = Object.create(Error.prototype, {\n  constructor: {value: StandardError, configurable: true, writable: true}\n})\n\n// Set name explicitly for when the code gets minified.\nStandardError.prototype.name = \"StandardError\"\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/standard-error/index.js\n// module id = 148\n// module chunks = 0","module.exports = {\n\t\"100\": \"Continue\",\n\t\"101\": \"Switching Protocols\",\n\t\"102\": \"Processing\",\n\t\"200\": \"OK\",\n\t\"201\": \"Created\",\n\t\"202\": \"Accepted\",\n\t\"203\": \"Non-Authoritative Information\",\n\t\"204\": \"No Content\",\n\t\"205\": \"Reset Content\",\n\t\"206\": \"Partial Content\",\n\t\"207\": \"Multi-Status\",\n\t\"208\": \"Already Reported\",\n\t\"226\": \"IM Used\",\n\t\"300\": \"Multiple Choices\",\n\t\"301\": \"Moved Permanently\",\n\t\"302\": \"Found\",\n\t\"303\": \"See Other\",\n\t\"304\": \"Not Modified\",\n\t\"305\": \"Use Proxy\",\n\t\"307\": \"Temporary Redirect\",\n\t\"308\": \"Permanent Redirect\",\n\t\"400\": \"Bad Request\",\n\t\"401\": \"Unauthorized\",\n\t\"402\": \"Payment Required\",\n\t\"403\": \"Forbidden\",\n\t\"404\": \"Not Found\",\n\t\"405\": \"Method Not Allowed\",\n\t\"406\": \"Not Acceptable\",\n\t\"407\": \"Proxy Authentication Required\",\n\t\"408\": \"Request Timeout\",\n\t\"409\": \"Conflict\",\n\t\"410\": \"Gone\",\n\t\"411\": \"Length Required\",\n\t\"412\": \"Precondition Failed\",\n\t\"413\": \"Payload Too Large\",\n\t\"414\": \"URI Too Long\",\n\t\"415\": \"Unsupported Media Type\",\n\t\"416\": \"Range Not Satisfiable\",\n\t\"417\": \"Expectation Failed\",\n\t\"418\": \"I'm a teapot\",\n\t\"421\": \"Misdirected Request\",\n\t\"422\": \"Unprocessable Entity\",\n\t\"423\": \"Locked\",\n\t\"424\": \"Failed Dependency\",\n\t\"425\": \"Unordered Collection\",\n\t\"426\": \"Upgrade Required\",\n\t\"428\": \"Precondition Required\",\n\t\"429\": \"Too Many Requests\",\n\t\"431\": \"Request Header Fields Too Large\",\n\t\"500\": \"Internal Server Error\",\n\t\"501\": \"Not Implemented\",\n\t\"502\": \"Bad Gateway\",\n\t\"503\": \"Service Unavailable\",\n\t\"504\": \"Gateway Timeout\",\n\t\"505\": \"HTTP Version Not Supported\",\n\t\"506\": \"Variant Also Negotiates\",\n\t\"507\": \"Insufficient Storage\",\n\t\"508\": \"Loop Detected\",\n\t\"509\": \"Bandwidth Limit Exceeded\",\n\t\"510\": \"Not Extended\",\n\t\"511\": \"Network Authentication Required\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/standard-http-error/codes.json\n// module id = 149\n// module chunks = 0","/*\n The MIT License (MIT)\n\n Copyright (c) 2015-2016 Solid\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n solid-client is a Javascript library for Solid applications. This library\n currently depends on rdflib.js. Please make sure to load the rdflib.js script\n before loading solid-client\n\n If you would like to know more about the solid Solid project, please see\n https://github.com/solid/\n */\n'use strict'\n/**\n * Provides Solid methods for WebID authentication and signup\n * @module auth\n */\nmodule.exports = ClientAuthTLS\n\nvar defaultConfig = require('./config-default')\n\nfunction ClientAuthTLS (webClient, config) {\n  this.webClient = webClient\n  this.config = config || defaultConfig\n}\n\n/**\n * Returns the WebID of the current user (by doing a login()/HEAD request to\n * the current page). Convenience method, useful for standalone apps that aren't\n * wrapping any resource.\n * @method currentUser\n * @return {String} WebID of the current user or `null` if none detected\n */\nClientAuthTLS.prototype.currentUser = function currentUser () {\n  if (typeof window === 'undefined') {\n    return null  // only works in the browser\n  }\n  var currentPageUrl = window.location.href\n  return this.login(currentPageUrl)\n    .catch(function (reason) {\n      console.log('Detecting current user failed: %o', reason)\n      return null\n    })\n}\n\n/**\n * Sets up an event listener to monitor login messages from child window/iframe\n * @method listen\n * @return {Promise<String>} Event listener promise, resolves to user's WebID\n */\nClientAuthTLS.prototype.listen = function listen () {\n  var promise = new Promise(function (resolve, reject) {\n    var eventMethod = window.addEventListener\n      ? 'addEventListener'\n      : 'attachEvent'\n    var eventListener = window[eventMethod]\n    var messageEvent = eventMethod === 'attachEvent'\n      ? 'onmessage'\n      : 'message'\n    eventListener(messageEvent, function (e) {\n      var u = e.data\n      if (u.slice(0, 5) === 'User:') {\n        var user = u.slice(5, u.length)\n        if (user && user.length > 0 && user.slice(0, 4) === 'http') {\n          return resolve(user)\n        } else {\n          return reject(user)\n        }\n      }\n    }, true)\n  })\n  return promise\n}\n\n/**\n * Performs a Solid login() via an XHR HEAD operation.\n * (Attempts to find the current user's WebID from the User header, if\n *   already authenticated.)\n * @method login\n * @static\n * @param [url] {String} Location of a Solid server or container at which the\n *   user might be authenticated.\n *   Defaults to: current page location\n * @param [alternateAuthUrl] {String} URL of an alternate/default auth endpoint.\n *   Defaults to `config.authEndpoint`\n * @return {Promise<String>} XHR HEAD operation promise, resolves to user's WebID\n */\nClientAuthTLS.prototype.login = function login (url, alternateAuthUrl) {\n  var defaultAuthEndpoint = this.config.authEndpoint\n  url = url || window.location.origin + window.location.pathname\n  alternateAuthUrl = alternateAuthUrl || defaultAuthEndpoint\n  var webClient = this.webClient\n  // First, see if user is already logged in (do a quick HEAD request)\n  return webClient.head(url)\n    .then(function (solidResponse) {\n      if (solidResponse.isLoggedIn()) {\n        return solidResponse.user\n      } else {\n        // If not logged in, try logging in at an alternate endpoint\n        return webClient.head(alternateAuthUrl)\n          .then(function (solidResponse) {\n            // Will return an empty string is this login also fails\n            return solidResponse.user\n          })\n      }\n    })\n}\n\n/**\n * Opens a signup popup window, sets up `listen()`.\n * @method signup\n * @static\n * @param signupUrl {String} Location of a Solid server for user signup.\n * @return {Promise<String>} Returns a listener promise, resolves with signed\n *   up user's WebID.\n */\nClientAuthTLS.prototype.signup = function signup (signupUrl) {\n  signupUrl = signupUrl || this.config.signupEndpoint\n  var width = this.config.signupWindowWidth\n  var height = this.config.signupWindowHeight\n  // set borders\n  var leftPosition = (window.screen.width / 2) - ((width / 2) + 10)\n  // set title and status bars\n  var topPosition = (window.screen.height / 2) - ((height / 2) + 50)\n  var windowTitle = 'Solid signup'\n  var windowUrl = signupUrl + '?origin=' +\n    encodeURIComponent(window.location.origin)\n  var windowSpecs = 'resizable,scrollbars,status,width=' + width + ',height=' +\n    height + ',left=' + leftPosition + ',top=' + topPosition\n  window.open(windowUrl, windowTitle, windowSpecs)\n  var self = this\n  return new Promise(function (resolve) {\n    self.listen()\n      .then(function (webid) {\n        return resolve(webid)\n      })\n  })\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/solid-auth-tls/index.js\n// module id = 150\n// module chunks = 0","'use strict'\n/**\n * Provides a simple configuration object for Solid web client and other\n * modules.\n * @module config\n */\nmodule.exports = {\n  /**\n   * Default authentication endpoint\n   */\n  authEndpoint: 'https://databox.me/',\n\n  /**\n   * Default signup endpoints (list of identity providers)\n   */\n  signupEndpoint: 'https://solid.github.io/solid-idps/',\n\n  /**\n   * Default height of the Signup popup window, in pixels\n   */\n  signupWindowHeight: 600,\n\n  /**\n   * Default width of the Signup popup window, in pixels\n   */\n  signupWindowWidth: 1024\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/solid-auth-tls/config-default.js\n// module id = 151\n// module chunks = 0","'use strict';\n/**\n * Provides Solid helper functions involved with parsing a user's WebId profile.\n * @module identity\n */\n\nmodule.exports.discoverWebID = discoverWebID;\nmodule.exports.getProfile = getProfile;\nmodule.exports.loadExtendedProfile = loadExtendedProfile;\n\nvar SolidProfile = require('./solid/profile');\n\n/**\n * Discovers a user's WebId (URL) starting from the account/domain URL.\n * Usage:\n *\n *   ```\n *   solid.discoverWebID(url)\n *     .then(function (webId) {\n *       console.log('Web ID is: ' + webId)\n *     })\n *     .catch(function (err) {\n *       console.log('Could not discover web id: ' + err)\n *     })\n *   ```\n * @method discoverWebID\n * @param url {String} Location of a user's account or domain.\n * @throw {Error} Reason why the WebID could not be discovered\n * @return {Promise<String>}\n */\nfunction discoverWebID(url, webClient, ns) {\n  return webClient.options(url).then(function (response) {\n    var metaUrl = response.metaAbsoluteUrl();\n    if (!metaUrl) {\n      throw new Error('Could not find a meta URL in the Link header');\n    }\n    return webClient.get(metaUrl);\n  }).then(function (response) {\n    var graph = response.parsedGraph();\n    var webId = graph.any(undefined, ns.solid('account'));\n    if (!webId || !webId.uri) {\n      throw new Error('Could not find a WebID matching the domain ' + url);\n    }\n    return webId;\n  });\n}\n\n/**\n * Fetches a user's WebId profile, optionally follows `sameAs` etc links,\n *   and return a promise with a parsed SolidProfile instance.\n * @method getProfile\n * @param webId {String} WebId\n * @param [options={}] Options hashmap (see solid.web.solidRequest()\n *   function docs)\n * @param [options.ignoreExtended=false] Do not load extended profile if true.\n * @param webClient {SolidWebClient}\n * @param rdf {RDF} RDF Library\n * @return {Promise<SolidProfile>}\n */\nfunction getProfile(webId, options, webClient, rdf) {\n  options = options || {};\n  // Politely ask for Turtle formatted profiles\n  options.headers = options.headers || {\n    'Accept': 'text/turtle'\n  };\n  options.noCredentials = true; // profiles are always public\n  // Load main profile\n  return webClient.get(webId, options).then(function (response) {\n    var parsedProfile = response.parsedGraph();\n    var profile = new SolidProfile(response.url, parsedProfile, rdf, webClient, response);\n    profile.isLoaded = true;\n    if (options.ignoreExtended) {\n      return profile;\n    } else {\n      return loadExtendedProfile(profile, options, webClient);\n    }\n  });\n}\n\n/**\n * Loads the related external profile resources (all the `sameAs` and `seeAlso`\n * links, as well as Preferences), and appends them to the profile's\n * `parsedGraph`. Returns the profile instance.\n * @method loadExtendedProfile\n * @private\n * @param profile {SolidProfile}\n * @param [options] Options hashmap (see solid.web.solidRequest() function docs)\n * @return {Promise<SolidProfile>}\n */\nfunction loadExtendedProfile(profile, options, webClient) {\n  var links = profile.relatedProfilesLinks();\n  return webClient.loadParsedGraphs(links, options).then(function (loadedGraphs) {\n    loadedGraphs.forEach(function (graph) {\n      if (graph && graph.value) {\n        profile.appendFromGraph(graph.value, graph.uri);\n      }\n    });\n    return profile;\n  });\n}\n\n\n// WEBPACK FOOTER //\n// ./lib/identity.js","'use strict';\n/**\n * @module profile\n */\n\nmodule.exports = SolidProfile;\n\nvar appRegistry = require('../app-registry');\nvar vocab = require('solid-namespace');\nvar registry = require('../registry');\nvar typeRegistry = require('../type-registry');\nvar graphUtil = require('../util/graph-util');\nvar parseLinks = graphUtil.parseLinks;\n\nvar PREFERENCES_DEFAULT_URI = '/settings/prefs.ttl';\nvar PROFILE_CONTAINER_DEFAULT_URI = '/profile/';\n\n/**\n * Provides convenience methods for a WebID Profile.\n * Used by `identity.getProfile()`\n * @class SolidProfile\n * @constructor\n */\nfunction SolidProfile(profileUrl, parsedProfile, rdf, webClient, response) {\n  /**\n   * Listed (public) App Registry (link and parsed graph)\n   * @property appRegistryListed\n   * @type Object\n   */\n  this.appRegistryListed = {\n    uri: null,\n    graph: null\n  };\n  /**\n   * Unlisted (private) App Registry (link and parsed graph)\n   * @property appRegistryUnlisted\n   * @type Object\n   */\n  this.appRegistryUnlisted = {\n    uri: null,\n    graph: null\n  };\n  /**\n   * Main Inbox resource for this profile (link and parsed graph)\n   * @property inbox\n   * @type Object\n   */\n  this.inbox = {\n    uri: null,\n    graph: null\n  };\n  /**\n   * Has this profile been loaded? (Set in `identity.getProfile()`)\n   * @property isLoaded\n   * @type Boolean\n   */\n  this.isLoaded = false;\n  /**\n   * Profile owner's avatar / icon url. (Initialized in .appendFromGraph())\n   * @type String\n   */\n  this.picture = null;\n  /**\n   * Profile owner's name. (Initialized in .appendFromGraph())\n   * @property name\n   * @type String\n   */\n  this.name = null;\n  /**\n   * RDF Library used by find(), parsedGraph(), etc.\n   * @property rdf\n   * @type RDF\n   */\n  this.rdf = rdf;\n  /**\n   * Links to root storage containers (read/write dataspaces for this profile)\n   * @property storage\n   * @type Array<String>\n   */\n  this.storage = [];\n  /**\n   * Listed (public) Type registry index (link and parsed graph)\n   * @property typeIndexListed\n   * @type Object\n   */\n  this.typeIndexListed = {\n    uri: null,\n    graph: null\n  };\n  /**\n   * Unlisted (private) Type registry index (link and parsed graph)\n   * @property typeIndexUnlisted\n   * @type Object\n   */\n  this.typeIndexUnlisted = {\n    uri: null,\n    graph: null\n  };\n  /**\n   * Parsed graph of the extended WebID Profile document.\n   * Included the WebID profile, preferences, and related profile graphs\n   * @property parsedGraph\n   * @type Graph\n   */\n  this.parsedGraph = null;\n  /**\n   * Profile preferences object (link and parsed graph).\n   * Currently used as a 'Private Profile', and is part of the Extended Profile.\n   * @property preferences\n   * @type Object\n   */\n  this.preferences = {\n    uri: null,\n    graph: null\n  };\n  /**\n   * SolidResponse instance from which this profile object was created.\n   * Contains the raw profile source, the XHR object, etc.\n   * @property response\n   * @type SolidResponse\n   */\n  this.response = response;\n  /**\n   * Links to \"see also\" profile documents. Typically loaded immediately\n   * after retrieving the initial WebID Profile document.\n   * @property relatedProfiles\n   * @type Object\n   */\n  this.relatedProfiles = {\n    sameAs: [],\n    seeAlso: []\n  };\n  /**\n   * WebId URL (the `foaf:primaryTopic` of the profile document)\n   * @property webId\n   * @type String\n   */\n  this.webId = null;\n  /**\n   * Web client (for use with loadProfile() etc)\n   * @type SolidWebClient\n   */\n  this.webClient = webClient;\n\n  if (!profileUrl) {\n    return;\n  }\n  /**\n   * Location of the base WebID Profile document (minus the hash fragment).\n   * @property baseProfileUrl\n   * @type String\n   */\n  this.baseProfileUrl = profileUrl.indexOf('#') >= 0 ? profileUrl.slice(0, profileUrl.indexOf('#')) : profileUrl;\n\n  if (parsedProfile) {\n    this.initWebId(parsedProfile);\n    this.appendFromGraph(parsedProfile, this.baseProfileUrl);\n  }\n}\n\n/**\n * Update the profile based on a parsed graph, which can be either the\n * initial WebID profile, or the various extended profile graphs\n * (such as the seeAlso, sameAs and preferences links)\n * @method appendFromGraph\n * @private\n * @param parsedProfile {Graph} RDFLib-parsed user profile\n * @param profileUrl {String} URL of this particular parsed graph\n */\nSolidProfile.prototype.appendFromGraph = function appendFromGraph(parsedProfile, profileUrl) {\n  if (!parsedProfile) {\n    return;\n  }\n  var rdf = this.rdf;\n  var ns = vocab(rdf);\n  this.parsedGraph = this.parsedGraph || rdf.graph(); // initialize if null\n  // Add the graph of this parsedProfile to the existing graph\n  graphUtil.appendGraph(this.parsedGraph, parsedProfile, profileUrl);\n\n  var webId = rdf.namedNode(this.webId);\n  var links;\n\n  // Load the profile owner's name and avatar/icon url\n  if (!this.name) {\n    this.name = this.find(ns.foaf('name'));\n  }\n  if (!this.picture) {\n    this.picture = this.find(ns.foaf('img'));\n  }\n  // Add sameAs and seeAlso\n  links = parseLinks(parsedProfile, null, ns.owl('sameAs'));\n  this.relatedProfiles.sameAs = this.relatedProfiles.sameAs.concat(links);\n\n  links = parseLinks(parsedProfile, null, ns.rdfs('seeAlso'));\n  this.relatedProfiles.seeAlso = this.relatedProfiles.seeAlso.concat(links);\n\n  // Add preferencesFile link (singular). Note that preferencesFile has\n  // Write-Once semantics -- it's initialized from public profile, but\n  // cannot be overwritten by related profiles\n  if (!this.preferences.uri) {\n    this.preferences.uri = parseLink(parsedProfile, webId, ns.pim('preferencesFile'));\n  }\n  // Init inbox (singular). Note that inbox has\n  // Write-Once semantics -- it's initialized from public profile, but\n  // cannot be overwritten by related profiles\n  if (!this.inbox.uri) {\n    this.inbox.uri = parseLink(parsedProfile, webId, ns.solid('inbox'));\n  }\n\n  // Add storage\n  links = parseLinks(parsedProfile, webId, ns.pim('storage'));\n  this.storage = this.storage.concat(links);\n\n  // Add links to Listed and Unlisted Type Indexes.\n  // Note: these are just the links.\n  // The actual index files will be loaded and parsed\n  //   in `profile.loadTypeRegistry()`)\n  if (!this.typeIndexListed.uri) {\n    this.typeIndexListed.uri = parseLink(parsedProfile, webId, ns.solid('publicTypeIndex'));\n  }\n  if (!this.typeIndexUnlisted.uri) {\n    this.typeIndexUnlisted.uri = parseLink(parsedProfile, webId, ns.solid('privateTypeIndex'));\n  }\n\n  // Add links to Listed and Unlisted App Registry resources.\n  // Note: these are just the links.\n  // The actual index files will be loaded and parsed\n  //   in `profile.loadAppRegistry()`)\n  if (!this.appRegistryListed.uri) {\n    this.appRegistryListed.uri = parseLink(parsedProfile, webId, ns.solid('publicAppRegistry'));\n  }\n  if (!this.appRegistryUnlisted.uri) {\n    this.appRegistryUnlisted.uri = parseLink(parsedProfile, webId, ns.solid('privateAppRegistry'));\n  }\n};\n\n/**\n * Returns the default location of the container in which the App Registry\n * resources will reside. (Uses the same container as the profile\n * document.)\n * @method appRegistryDefaultContainer\n * @return {String}\n */\nSolidProfile.prototype.appRegistryDefaultContainer = function appRegistryDefaultContainer() {\n  var profileUri = this.webId || this.baseProfileUrl;\n  var baseContainer;\n  if (profileUri) {\n    baseContainer = profileUri.replace(/\\\\/g, '/').replace(/\\/[^\\/]*\\/?$/, '') + '/';\n  } else {\n    baseContainer = PROFILE_CONTAINER_DEFAULT_URI;\n  }\n  return baseContainer;\n};\n\n/**\n * Returns a list of registry entries for a given RDF Class.\n * @method appsForType\n * @param type {NamedNode} RDF Class\n * @return {Array<AppRegistration>}\n */\nSolidProfile.prototype.appsForType = function appsForType(type) {\n  return appRegistry.appsForType(this, type, this.rdf);\n};\n\n/**\n * Returns the value of a given \"field\" (predicate) from the profile's parsed\n * graph. If there are more than one matches for this predicate, .find()\n * returns the first one. If there are no matches, `null` is returned.\n * Usage:\n *\n *   ```\n *   var inboxUrl = profile.find(ns.solid('inbox'))\n *   if (inboxUrl) {\n *     console.log('Inbox is located at:', inboxUrl)\n *   }\n *   ```\n * @method find\n * @param predicate {NamedNode} RDF named node of the predicate\n * @return {String|Null} String value (or uri)\n */\nSolidProfile.prototype.find = function find(predicate) {\n  if (!this.parsedGraph) {\n    throw new Error('Profile graph not yet loaded.');\n  }\n  var subject = this.rdf.namedNode(this.webId);\n  var result = this.parsedGraph.any(subject, predicate);\n  if (!result) {\n    return result;\n  }\n  return result.value || result.uri;\n};\n\n/**\n * Returns all values of a given \"field\" (predicate) from the profile's parsed\n * graph.\n * Usage:\n *\n *   ```\n *   var related = profile.findAll(vocab.owl('sameAs'))\n *   ```\n * @method findAll\n * @param predicate {NamedNode} RDF named node of the predicate\n * @return {Array<String>} Array of string values/uris\n */\nSolidProfile.prototype.findAll = function findAll(predicate) {\n  if (!this.parsedGraph) {\n    throw new Error('Profile graph not yet loaded.');\n  }\n  var subject = this.rdf.namedNode(this.webId);\n  var matches = this.parsedGraph.statementsMatching(subject, predicate);\n  matches = matches.map(function (ea) {\n    return ea.object.value || ea.object.uri;\n  });\n  return matches.sort();\n};\n\n/**\n * Extracts the WebID from a parsed profile graph and initializes it.\n * Should only be done once (when creating a new SolidProfile instance)\n * @method initWebId\n * @param parsedProfile {Graph} RDFLib-parsed user profile\n */\nSolidProfile.prototype.initWebId = function initWebId(parsedProfile) {\n  if (!parsedProfile) {\n    return;\n  }\n  try {\n    this.webId = extractWebId(this.baseProfileUrl, parsedProfile, this.rdf).uri;\n  } catch (e) {\n    throw new Error('Unable to parse WebID from profile: ' + e);\n  }\n};\n\n/**\n * Returns an array of related external profile links (sameAs and seeAlso and\n * Preferences files)\n * @method relatedProfilesLinks\n * @return {Array<String>}\n */\nSolidProfile.prototype.relatedProfilesLinks = function relatedProfilesLinks() {\n  var links = [];\n  links = links.concat(this.relatedProfiles.sameAs).concat(this.relatedProfiles.seeAlso);\n  if (this.preferences.uri) {\n    links = links.concat(this.preferences.uri);\n  }\n  return links;\n};\n\n/**\n * Returns whether or not the profile has a private (unlisted) App Registry\n * associated with it (linked to from the profile document).\n * @method hasAppRegistryPrivate\n * @throws {Error} If the profile has not been loaded (via getProfile()).\n * @return {Boolean} Returns truthy value if the private (unlisted) app registry\n *   exists (that is, has a link in the profile).\n */\nSolidProfile.prototype.hasAppRegistryPrivate = function hasAppRegistryPrivate() {\n  if (!this.isLoaded) {\n    throw new Error('Must load profile before checking if registry exists.');\n  }\n  return this.appRegistryUnlisted.uri;\n};\n\n/**\n * Returns whether or not the profile has a public (listed) App Registry\n * associated with it (linked to from the profile document).\n * @method hasAppRegistryPublic\n * @throws {Error} If the profile has not been loaded (via getProfile()).\n * @return {Boolean} Returns truthy value if the public (listed) app registry\n *   exists (that is, has a link in the profile).\n */\nSolidProfile.prototype.hasAppRegistryPublic = function hasAppRegistryPublic() {\n  if (!this.isLoaded) {\n    throw new Error('Must load profile before checking if registry exists.');\n  }\n  return this.appRegistryListed.uri;\n};\n\n/**\n * Returns true if the profile has any links to root storage\n * @method hasStorage\n * @return {Boolean}\n */\nSolidProfile.prototype.hasStorage = function hasStorage() {\n  return this.storage && this.storage.length > 0;\n};\n\n/**\n * Returns whether or not the profile has a private (unlisted) Type Index\n * Registry associated with it (linked to from the profile document).\n * @method hasTypeRegistryPrivate\n * @throws {Error} If the profile has not been loaded (via getProfile()).\n * @return {Boolean} Returns truthy value if the private (unlisted) type index\n *   registry exists (that is, has a link in the profile).\n */\nSolidProfile.prototype.hasTypeRegistryPrivate = function hasTypeRegistryPrivate() {\n  if (!this.isLoaded) {\n    throw new Error('Must load profile before checking if registry exists.');\n  }\n  return this.typeIndexUnlisted.uri;\n};\n\n/**\n * Returns whether or not the profile has a public (listed) Type Index Registry\n * associated with it (linked to from the profile document).\n * @method hasTypeRegistryPublic\n * @throws {Error} If the profile has not been loaded (via getProfile()).\n * @return {Boolean} Returns truthy value if the public (listed) type index\n *   registry exists (that is, has a link in the profile).\n */\nSolidProfile.prototype.hasTypeRegistryPublic = function hasTypeRegistryPublic() {\n  if (!this.isLoaded) {\n    throw new Error('Must load profile before checking if registry exists.');\n  }\n  return this.typeIndexListed.uri;\n};\n\n/**\n * Convenience method to load the app registry. Usage:\n *\n *   ```\n *   Solid.getProfile(url, options)\n *     .then(function (profile) {\n *       return profile.loadAppRegistry(webClient, options)\n *     })\n *   ```\n * @method loadAppRegistry\n * @param [options] Options hashmap (see Solid.web.solidRequest() function docs)\n * @return {Promise<SolidProfile>}\n */\nSolidProfile.prototype.loadAppRegistry = function loadAppRegistry(webClient, options) {\n  webClient = webClient || this.webClient;\n  return appRegistry.loadAppRegistry(this, webClient, options);\n};\n\n/**\n * Convenience method to load the type index registry. Usage:\n *\n *   ```\n *   Solid.getProfile(url, options)\n *     .then(function (profile) {\n *       return profile.loadTypeRegistry(options)\n *     })\n *   ```\n * @method loadTypeRegistry\n * @param webClient {SolidWebClient}\n * @param [options] Options hashmap (see Solid.web.solidRequest() function docs)\n * @return {Promise<SolidProfile>}\n */\nSolidProfile.prototype.loadTypeRegistry = function loadTypeRegistry(webClient, options) {\n  webClient = webClient || this.webClient;\n  return typeRegistry.loadTypeRegistry(this, webClient, options);\n};\n\n/**\n * Adds a parsed app registry graph to the appropriate registry (public\n *   or private). (Used when parsing the extended profile).\n * @method addAppRegistry\n * @private\n * @param graph {Graph} Parsed graph (loaded from an app registry resource)\n * @param uri {String} Location of the app registry document\n */\nSolidProfile.prototype.addAppRegistry = function addAppRegistry(graph, uri) {\n  // Is this a public app registry?\n  if (registry.isListed(graph, this.rdf)) {\n    if (!this.appRegistryListed.graph) {\n      // only initialize once\n      this.appRegistryListed.uri = uri;\n      this.appRegistryListed.graph = graph;\n    }\n  } else if (registry.isUnlisted(graph, this.rdf)) {\n    if (!this.appRegistryUnlisted.graph) {\n      this.appRegistryUnlisted.uri = uri;\n      this.appRegistryUnlisted.graph = graph;\n    }\n  } else {\n    console.log(graph);\n    throw new Error('Attempting to add an invalid app registry resource');\n  }\n};\n\n/**\n * Adds a parsed type index graph to the appropriate type registry (public\n *   or private). (Used when parsing the extended profile).\n * @method addTypeRegistry\n * @private\n * @param graph {Graph} Parsed graph (loaded from a type index\n *   resource)\n * @param uri {String} Location of the type registry index document\n */\nSolidProfile.prototype.addTypeRegistry = function addTypeRegistry(graph, uri) {\n  // Is this a public type registry?\n  if (registry.isListed(graph, this.rdf)) {\n    if (!this.typeIndexListed.graph) {\n      // only initialize once\n      this.typeIndexListed.uri = uri;\n      this.typeIndexListed.graph = graph;\n    }\n  } else if (registry.isUnlisted(graph, this.rdf)) {\n    if (!this.typeIndexUnlisted.graph) {\n      this.typeIndexUnlisted.uri = uri;\n      this.typeIndexUnlisted.graph = graph;\n    }\n  } else {\n    throw new Error('Attempting to add an invalid type registry index');\n  }\n};\n\n/**\n * Reloads the contents of the profile's App Registry resources.\n * @method reloadAppRegistry\n * @return {Promise<SolidProfile>}\n */\nSolidProfile.prototype.reloadAppRegistry = function reloadAppRegistry(webClient) {\n  this.resetAppRegistry();\n  return this.loadAppRegistry(webClient);\n};\n\n/**\n * Reloads the contents of the profile's Type Index registries.\n * @method reloadTypeRegistry\n * @return {Promise<SolidProfile>}\n */\nSolidProfile.prototype.reloadTypeRegistry = function reloadTypeRegistry(webClient) {\n  this.resetTypeRegistry();\n  return this.loadTypeRegistry(webClient);\n};\n\n/**\n * Resets the contents (graphs) of the profile's App Registry resources to null.\n * Used internally by `reloadAppRegistry()`.\n * @method resetAppRegistry\n * @private\n */\nSolidProfile.prototype.resetAppRegistry = function resetAppRegistry() {\n  this.appRegistryListed.graph = null;\n  this.appRegistryUnlisted.graph = null;\n};\n\n/**\n * Resets the contents (graphs) of the profile's Type Index registries to null.\n * Used internally by `reloadTypeRegistry()`.\n * @method resetTypeRegistry\n * @private\n */\nSolidProfile.prototype.resetTypeRegistry = function resetTypeRegistry() {\n  this.typeIndexListed.graph = null;\n  this.typeIndexUnlisted.graph = null;\n};\n\n/**\n * Returns lists of registry entries for a given RDF Class.\n * @method typeRegistryForClass\n * @param rdfClass {rdf.NamedNode} RDF Class symbol\n * @return {Array<IndexRegistration>}\n */\nSolidProfile.prototype.typeRegistryForClass = function typeRegistryForClass(rdfClass) {\n  return typeRegistry.typeRegistryForClass(this, rdfClass, this.rdf);\n};\n\n/**\n * Returns the default location of the container in which the Type Registry\n * Index resources will reside. (Uses the same container as the profile\n * document.)\n * @method typeRegistryDefaultContainer\n * @return {String}\n */\nSolidProfile.prototype.typeRegistryDefaultContainer = function typeRegistryDefaultContainer() {\n  var profileUri = this.webId || this.baseProfileUrl;\n  var baseContainer;\n  if (profileUri) {\n    baseContainer = profileUri.replace(/\\\\/g, '/').replace(/\\/[^\\/]*\\/?$/, '') + '/';\n  } else {\n    baseContainer = PROFILE_CONTAINER_DEFAULT_URI;\n  }\n  return baseContainer;\n};\n\n/**\n * Returns the relative URL of the private profile (preferences) resource.\n * @method privateProfileUri\n * @return {String}\n */\nSolidProfile.prototype.privateProfileUri = function privateProfileUri() {\n  if (this.preferences && this.preferences.uri) {\n    return this.preferences.uri;\n  } else {\n    return PREFERENCES_DEFAULT_URI;\n  }\n};\n\n/**\n * Registers a given entry in the app registry.\n * @method registerApp\n * @param app {AppRegistration}\n * @return {Promise<SolidProfile>} Returns updated profile.\n */\nSolidProfile.prototype.registerApp = function registerApp(app, webClient) {\n  webClient = webClient || this.webClient;\n  return appRegistry.registerApp(this, app, webClient);\n};\n\n/**\n * Registers a given RDF class in the user's type index registries, so that\n * other applications can discover it.\n * @method registerType\n * @param rdfClass {rdf.NamedNode} Type to register in the index.\n * @param location {String} Absolute URI to the location you want the class\n *   registered to. (Example: Registering Address books in\n *   `https://example.com/contacts/`)\n * @param [locationType='container'] {String} Either 'instance' or 'container',\n *   defaults to 'container'\n * @param [isListed=false] {Boolean} Whether to register in a listed or unlisted\n *   index). Defaults to `false` (unlisted).\n * @return {Promise<SolidProfile>}\n */\nSolidProfile.prototype.registerType = function registerType(rdfClass, location, locationType, isListed) {\n  return typeRegistry.registerType(this, rdfClass, location, locationType, isListed, this.webClient);\n};\n\n/**\n * Removes a given RDF class from the user's type index registry\n * @method unregisterType\n * @param rdfClass {NamedNode} Type to register in the index.\n * @param [isListed=false] {Boolean} Whether to register in a listed or unlisted\n *   index). Defaults to `false` (unlisted).\n * @param [location] {String} If present, only unregister the class from this\n *   location (absolute URI).\n * @return {Promise<SolidProfile>}\n */\nSolidProfile.prototype.unregisterType = function unregisterType(rdfClass, isListed, location) {\n  return typeRegistry.unregisterType(this, rdfClass, isListed, location, this.webClient);\n};\n\n/**\n * Extracts the WebID symbol from a parsed profile graph.\n * @method extractWebId\n * @param baseProfileUrl {String} Profile URL, with no hash fragment\n * @param parsedProfile {Graph} RDFLib-parsed user profile\n * @return {NamedNode} WebID symbol\n */\nfunction extractWebId(baseProfileUrl, parsedProfile, rdf) {\n  var ns = vocab(rdf);\n  var subj = rdf.namedNode(baseProfileUrl);\n  var pred = ns.foaf('primaryTopic');\n  var match = parsedProfile.any(subj, pred);\n  return match;\n}\n\n/**\n * Extracts the first URI from a parsed graph that matches parameters\n * @method parseLinks\n * @param graph {Graph}\n * @param subject {NamedNode}\n * @param predicate {NamedNode}\n * @param object {NamedNode}\n * @param source {NamedNode}\n * @return {String} URI that matches the parameters\n */\nfunction parseLink(graph, subject, predicate, object, source) {\n  var first = graph.any(subject, predicate, object, source);\n  if (first) {\n    return first.uri;\n  } else {\n    return null;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./lib/solid/profile.js","'use strict';\n/**\n * Provides Solid helper functions involved with initializing, reading and\n * writing the App Registry resources.\n * @module app-registry\n */\n\nmodule.exports.addToAppRegistry = addToAppRegistry;\nmodule.exports.blankPrivateAppRegistry = blankPrivateAppRegistry;\nmodule.exports.blankPublicAppRegistry = blankPublicAppRegistry;\nmodule.exports.initAppRegistryPrivate = initAppRegistryPrivate;\nmodule.exports.initAppRegistryPublic = initAppRegistryPublic;\nmodule.exports.loadAppRegistry = loadAppRegistry;\nmodule.exports.appsForType = appsForType;\nmodule.exports.registerApp = registerApp;\nmodule.exports.registrationsFromGraph = registrationsFromGraph;\n\nvar AppRegistration = require('./solid/app-registration');\nvar graphUtil = require('./util/graph-util.js');\nvar util = require('./util/web-util.js');\nvar vocab = require('solid-namespace');\nvar webUtil = require('./util/web-util.js');\n\n/**\n * Adds an RDF class to a user's app registry, and returns the\n * profile (with the appropriate registry graph updated).\n * Called by `registerApp()`, which does all the argument validation.\n * @method addToAppRegistry\n * @param profile {SolidProfile}\n * @param app {AppRegistration}\n * @param webClient {SolidWebClient}\n * @return {Promise<SolidProfile>} Returns updated profile\n */\nfunction addToAppRegistry(profile, app, webClient) {\n  // TODO: Check to see if a registry entry for this type already exists.\n  var registryUri;\n  var registryGraph;\n  if (app.isListed) {\n    registryUri = profile.appRegistryListed.uri;\n    registryGraph = profile.appRegistryListed.graph;\n  } else {\n    registryUri = profile.appRegistryUnlisted.uri;\n    registryGraph = profile.appRegistryUnlisted.graph;\n  }\n  if (!registryUri) {\n    throw new Error('Cannot register app, registry URL missing');\n  }\n  var rdf = profile.rdf;\n  // triples to delete (none for the moment)\n  var toDel = [];\n  // Create the list of triples to add in the PATCH operation\n  var toAdd = app.rdfStatements(rdf);\n  return webClient.patch(registryUri, toDel, toAdd).then(function (response) {\n    // Update the profile object with the new registry without reloading\n    var newRegistration = graphUtil.graphFromStatements(toAdd, rdf);\n    if (registryGraph) {\n      graphUtil.appendGraph(registryGraph, newRegistration);\n    } else {\n      profile[app.isListed ? 'appRegistryListed' : 'appRegistryUnlisted'].graph = newRegistration;\n    }\n    return profile;\n  });\n}\n\n/**\n * Returns a list of registry entries for a profile and a given RDF Class.\n * @method appsForType\n * @param profile {SolidProfile}\n * @param type {NamedNode} RDF Class\n * @param rdf {RDF} RDF Library\n * @return {Array<AppRegistration>}\n */\nfunction appsForType(profile, type, rdf) {\n  var registrations = [];\n  return registrations.concat(\n  // Public/listed registrations\n  registrationsFromGraph(profile.appRegistryListed.graph, type, rdf)).concat(\n  // Private/unlisted registrations\n  registrationsFromGraph(profile.appRegistryUnlisted.graph, type, rdf));\n}\n\n/**\n * Returns a blank private app registry option.\n * For use with `initAppRegistry()`.\n * @method blankPrivateAppRegistry\n * @private\n * @return {Object} Blank app registry object\n */\nfunction blankPrivateAppRegistry(rdf) {\n  var ns = vocab(rdf);\n  var thisDoc = rdf.namedNode('');\n  var registryStatements = [rdf.triple(thisDoc, ns.rdf('type'), ns.solid('AppRegistry')), rdf.triple(thisDoc, ns.rdf('type'), ns.solid('UnlistedDocument'))];\n  var registry = {\n    data: graphUtil.serializeStatements(registryStatements),\n    graph: graphUtil.graphFromStatements(registryStatements, rdf),\n    slug: 'privateAppRegistry.ttl',\n    uri: null // actual url not yet known\n  };\n  return registry;\n}\n\n/**\n * Returns a blank public app registry option.\n * For use with `initAppRegistry()`.\n * @method blankPublicAppRegistry\n * @private\n * @return {Object} Blank app registry object\n */\nfunction blankPublicAppRegistry(rdf) {\n  var ns = vocab(rdf);\n  var thisDoc = rdf.namedNode('');\n  var registryStatements = [rdf.triple(thisDoc, ns.rdf('type'), ns.solid('AppRegistry')), rdf.triple(thisDoc, ns.rdf('type'), ns.solid('ListedDocument'))];\n  var registry = {\n    data: graphUtil.serializeStatements(registryStatements),\n    graph: graphUtil.graphFromStatements(registryStatements, rdf),\n    slug: 'publicAppRegistry.ttl',\n    uri: null // actual url not yet known\n  };\n  return registry;\n}\n\n/**\n * Initializes the private App Registry resource, updates\n * the profile with the initialized registry, and returns the updated profile.\n * @method initAppRegistryPrivate\n * @param profile {SolidProfile} User's WebID profile\n * @param [options={}] Options hashmap (see solid.web.solidRequest()\n *   function docs)\n * @return {Promise<SolidProfile>} Resolves with the updated profile instance.\n */\nfunction initAppRegistryPrivate(profile, webClient, options) {\n  options = options || {};\n  var rdf = profile.rdf;\n  var ns = vocab(rdf);\n  var registryContainerUri = profile.appRegistryDefaultContainer();\n  var webId = rdf.namedNode(profile.webId);\n  var registry = blankPrivateAppRegistry(rdf);\n  // First, create the private App Registry resource\n  return webClient.post(registryContainerUri, registry.data, registry.slug).catch(function (err) {\n    throw new Error('Could not create private registry document:', err);\n  }).then(function (response) {\n    // Private registry resource created.\n    // Update the private profile (preferences) to link to it.\n    registry.uri = util.absoluteUrl(webUtil.hostname(registryContainerUri), response.url);\n    var toAdd = [rdf.triple(webId, ns.solid('privateAppRegistry'), rdf.namedNode(registry.uri))];\n    var toDel = [];\n    // Note: this PATCH will actually create a private profile if it doesn't\n    // already exist.\n    return webClient.patch(profile.privateProfileUri(), toDel, toAdd, options);\n  }).catch(function (err) {\n    throw new Error('Could not update profile with private registry:' + err);\n  }).then(function (response) {\n    // Profile successfully patched with a link to the created private registry\n    // It's safe to update this instance of profile\n    profile.appRegistryUnlisted = registry;\n    // Finally, return the updated profile with registry loaded\n    return profile;\n  });\n}\n\n/**\n * Initializes the public App Registry resource, updates\n * the profile with the initialized registry, and returns the updated profile.\n * @method initAppRegistryPublic\n * @param profile {SolidProfile} User's WebID profile\n * @param [options] Options hashmap (see solid.web.solidRequest() function docs)\n * @return {Promise<SolidProfile>} Resolves with the updated profile instance.\n */\nfunction initAppRegistryPublic(profile, webClient, options) {\n  options = options || {};\n  var rdf = profile.rdf;\n  var ns = vocab(rdf);\n  var registryContainerUri = profile.appRegistryDefaultContainer();\n  var webId = rdf.namedNode(profile.webId);\n  var registry = blankPublicAppRegistry(rdf);\n  // First, create the public registry Registry resource\n  return webClient.post(registryContainerUri, registry.data, registry.slug).catch(function (err) {\n    throw new Error('Could not create public registry document:', err);\n  }).then(function (response) {\n    // Public registry resource created. Update the profile to link to it.\n    registry.uri = util.absoluteUrl(webUtil.hostname(registryContainerUri), response.url);\n    var toAdd = [rdf.triple(webId, ns.solid('publicAppRegistry'), rdf.namedNode(registry.uri))];\n    var toDel = [];\n    return webClient.patch(profile.webId, toDel, toAdd, options);\n  }).catch(function (err) {\n    throw new Error('Could not update profile with public registry:', err);\n  }).then(function (response) {\n    // Profile successfully patched with a link to the created public registry\n    // It's safe to update this instance of profile\n    profile.appRegistryListed = registry;\n    // Finally, return the updated profile with registry loaded\n    return profile;\n  });\n}\n\n/**\n * Loads the public and private app registry resources, adds them\n * to the profile, and returns the profile.\n * Called by the profile.loadAppRegistry() alias method.\n * Usage:\n *\n *   ```\n * var profile = solid.getProfile(url, options)\n *   .then(function (profile) {\n *     return profile.loadAppRegistry(options)\n *   })\n *   ```\n * @method loadAppRegistry\n * @param profile {SolidProfile}\n * @param webClient {SolidWebClient}\n * @param [options={}] Options hashmap (see solid.web.solidRequest()\n *   function docs)\n * @return {Promise<SolidProfile>}\n */\nfunction loadAppRegistry(profile, webClient, options) {\n  options = options || {};\n  options.headers = options.headers || {};\n  // Politely ask for Turtle format\n  if (!options.headers['Accept']) {\n    options.headers['Accept'] = 'text/turtle';\n  }\n  // load public and private registry resources\n  var links = [];\n  if (profile.appRegistryListed.uri) {\n    links.push(profile.appRegistryListed.uri);\n  }\n  if (profile.appRegistryUnlisted.uri) {\n    links.push(profile.appRegistryUnlisted.uri);\n  }\n  return webClient.loadParsedGraphs(links, options).then(function (loadedGraphs) {\n    loadedGraphs.forEach(function (graph) {\n      // For each registry resource loaded, add it to `profile.appRegistryListed`\n      //  or `profile.appRegistryUnlisted` as appropriate\n      if (graph && graph.value) {\n        profile.addAppRegistry(graph.value, graph.uri);\n      }\n    });\n    return profile;\n  });\n}\n\n/**\n * Registers a given entry in the app registry.\n * @method registerApp\n * @param profile {SolidProfile}\n * @param app {AppRegistration}\n * @param webClient {SolidWebClient}\n * @return {Promise<SolidProfile>} Returns updated profile.\n */\nfunction registerApp(profile, app, webClient) {\n  if (!profile) {\n    throw new Error('No profile provided');\n  }\n  if (!profile.isLoaded) {\n    throw new Error('Profile is not loaded');\n  }\n  if (!app || !app.isValid()) {\n    throw new Error('Invalid app registration');\n  }\n  // make sure app registry is loaded\n  return loadAppRegistry(profile, webClient).then(function (profile) {\n    if (app.isListed && !profile.hasAppRegistryPublic()) {\n      // Public App registry is needed, but doesn't exist. Create it.\n      return initAppRegistryPublic(profile, webClient);\n    }\n    if (!app.isListed && !profile.hasAppRegistryPrivate()) {\n      // Private App registry is needed, but doesn't exist. Create it.\n      return initAppRegistryPrivate(profile, webClient);\n    }\n    // Relevant App registry exists, proceed\n    return profile;\n  }).then(function (profile) {\n    // Made sure the relevant app registry exists, and can now add to it\n    return addToAppRegistry(profile, app, webClient);\n  });\n}\n\n/**\n * Returns a list of registry entries from a given parsed type index graph.\n * @method registrationsFromGraph\n * @param graph {Graph} Parsed type index graph\n * @param type {NamedNode} RDF Class\n * @param rdf {RDF} RDF Library\n * @return {Array<AppRegistration>}\n */\nfunction registrationsFromGraph(graph, type, rdf) {\n  var entrySubject;\n  var ns = vocab(rdf);\n  var registrations = [];\n  if (!graph) {\n    return registrations;\n  }\n  graph.statementsMatching(null, ns.app('commonType'), type).forEach(function (entry) {\n    entrySubject = entry.subject;\n    var app = new AppRegistration();\n    app.initFromGraph(entrySubject, graph, rdf);\n    registrations.push(app);\n  });\n  return registrations;\n}\n\n\n// WEBPACK FOOTER //\n// ./lib/app-registry.js","'use strict';\n/**\n * @module app-registration\n */\n\nmodule.exports = AppRegistration;\n\nvar hash = require('shorthash');\nvar vocab = require('solid-namespace');\nvar registry = require('../registry');\n\n/**\n * Represents a Solid App Registry registration (an entry in the App Registry).\n * Returned in a list by `profile.appForType()`\n * @class AppRegistration\n * @constructor\n * @param [options={}] {Object} Hashmap of app registration options.\n * @param [options.name] {String} App name (required for valid registration)\n * @param [options.shortdesc] {String}\n * @param [options.redirectTemplateUri] {String}\n * @param types {Array<String>|Array<NamedNode>} List of types / RDF classes for\n *   which this app is registered. This app will be used to open those types\n *   by Solid servers that support this functionality.\n * @param [isListed=false] {Boolean} Register in a listed or unlisted registry.\n */\nfunction AppRegistration(options, types, isListed) {\n  options = options || {};\n  /**\n   * Is this registered in a listed or unlisted registry\n   * @property isListed\n   * @type Boolean\n   */\n  this.isListed = isListed;\n  /**\n   * App name\n   * @property name\n   * @type String\n   */\n  this.name = options.name;\n  /**\n   * URI template that will be redirected to if the server gets a request\n   * for one of the registered types. For example:\n   * 'https://solid.github.io/contacts/?uri={uri}'\n   * @property redirectTemplateUri\n   * @type String\n   */\n  this.redirectTemplateUri = options.redirectTemplateUri;\n  /**\n   * Absolute URI (with fragment identifier) of the registration.\n   * This is only set when this instance is created as a result of querying\n   * the app registry.\n   * @property registrationUri\n   * @type String\n   */\n  this.registrationUri = null;\n  /**\n   * Short description of the app\n   * @property shortdesc\n   * @type String\n   */\n  this.shortdesc = options.shortdesc;\n  /**\n   * List of types / RDF classes for which this app is registered.\n   * This app will be used to open those types by Solid servers that support\n   * this functionality.\n   * @property types\n   * @type {Array<String>|Array<NamedNode>}\n   */\n  this.types = types || [];\n}\n\n/**\n * Returns a unique hash fragment identifier for this registration (a hash of\n * the `redirectTemplateUri` property).\n * @method hashFragment\n * @return {String}\n */\nAppRegistration.prototype.hashFragment = function hashFragment() {\n  var fragmentId = hash.unique(this.redirectTemplateUri);\n  return fragmentId;\n};\n\n/**\n * Initializes the registration details from a parsed registry graph.\n * @method initFromGraph\n * @param subject {NamedNode} Hash fragment uri of the registration\n * @param graph {Graph} Parsed registry graph\n * @param rdf {RDF} RDF Library\n */\nAppRegistration.prototype.initFromGraph = function initFromGraph(subject, graph, rdf) {\n  this.registrationUri = subject.uri;\n  this.isListed = !!registry.isListed(graph, rdf);\n  this.types = [];\n  var self = this;\n  var ns = vocab(rdf);\n  // Load the types\n  graph.statementsMatching(subject, ns.app('commonType')).forEach(function (typeStatement) {\n    self.types.push(typeStatement.object.uri);\n  });\n  var match;\n  match = graph.any(subject, ns.app('name'));\n  if (match) {\n    this.name = match.value;\n  }\n  match = graph.any(subject, ns.app('shortdesc'));\n  if (match) {\n    this.shortdesc = match.value;\n  }\n  match = graph.any(subject, ns.app('redirectTemplateUri'));\n  if (match) {\n    this.redirectTemplateUri = match.value;\n  }\n};\n\n/**\n * Is this a valid app registration entry that can be added to the registry?\n * (A registration is considered valid if it has a name, at least one type,\n * and a redirectUri)\n * @method isValid\n * @return {Boolean}\n */\nAppRegistration.prototype.isValid = function isValid() {\n  return this.name && this.redirectTemplateUri && this.types.length > 0;\n};\n\n/**\n * Returns an array of RDF statements representing this app registration.\n * @method rdfStatements\n * @return {Array<Statement>} List of RDF statements representing registration,\n *   or an empty array if this registration is invalid.\n */\nAppRegistration.prototype.rdfStatements = function rdfStatements(rdf) {\n  var hashFragment = rdf.namedNode('#' + this.hashFragment());\n  var statements = [];\n  var ns = vocab(rdf);\n  // example: '<#ab09fd> a solid:AppRegistration;'\n  statements.push(rdf.triple(hashFragment, ns.rdf('type'), ns.solid('AppRegistration')), rdf.triple(hashFragment, ns.app('name'), this.name), rdf.triple(hashFragment, ns.app('shortdesc'), this.shortdesc), rdf.triple(hashFragment, ns.app('redirectTemplateUri'), this.redirectTemplateUri));\n  this.types.forEach(function (type) {\n    statements.push(rdf.triple(hashFragment, ns.app('commonType'), type));\n  });\n\n  return statements;\n};\n\n\n// WEBPACK FOOTER //\n// ./lib/solid/app-registration.js","module.exports = require('./shorthash');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/shorthash/index.js\n// module id = 156\n// module chunks = 0","\n/*\n\tshorthash\n\t(c) 2013 Bibig\n\t\n\thttps://github.com/bibig/node-shorthash\n\tshorthash may be freely distributed under the MIT license.\n*/\n\nexports.bitwise = bitwise;\nexports.binaryTransfer = binaryTransfer;\nexports.unique = unique;\nexports.random = random;\n\n// refer to: http://werxltd.com/wp/2010/05/13/javascript-implementation-of-javas-string-hashcode-method/\nfunction bitwise(str){\n\tvar hash = 0;\n\tif (str.length == 0) return hash;\n\tfor (var i = 0; i < str.length; i++) {\n\t\tvar ch = str.charCodeAt(i);\n\t\thash = ((hash<<5)-hash) + ch;\n\t\thash = hash & hash; // Convert to 32bit integer\n\t}\n\treturn hash;\n}\n\n// 10进制转化成62进制以内的进制\n// convert 10 binary to customized binary, max is 62\nfunction binaryTransfer(integer, binary) {\n\tbinary = binary || 62;\n\tvar stack = [];\n\tvar num;\n\tvar result = '';\n\tvar sign = integer < 0 ? '-' : '';\n\t\n\tfunction table (num) {\n\t\tvar t = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\t\treturn t[num];\n\t}\n\t\n\tinteger = Math.abs(integer);\n\t\n\twhile (integer >= binary) {\n\t\tnum = integer % binary;\n\t\tinteger = Math.floor(integer / binary);\n\t\tstack.push(table(num));\n\t}\n\t\n\tif (integer > 0) {\n\t\tstack.push(table(integer));\n\t}\n\t\n\tfor (var i = stack.length - 1; i >= 0; i--) {\n\t\tresult += stack[i];\n\t} \n\t\n\treturn sign + result;\n}\n\n\n/**\n * why choose 61 binary, because we need the last element char to replace the minus sign\n * eg: -aGtzd will be ZaGtzd\n */\nfunction unique (text) {\n\tvar id = binaryTransfer(bitwise(text), 61);\n\treturn id.replace('-', 'Z');\n}\n\nfunction random (_len) {\n\t/*\n\tvar len = _len || 8 ;\n\treturn require('crypto').randomBytes(len).toString('hex');\n\t*/\n\t\n\tvar chars = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz\";\n\tvar rs = '';\n\tvar len = _len || 8 ;\n\tfor (var i=0; i< len; i++) {\n\t\tvar pos = Math.floor( Math.random() * chars.length);\n\t\trs += chars.substring(pos, pos + 1);\n\t}\n\treturn rs;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/shorthash/shorthash.js\n// module id = 157\n// module chunks = 0","'use strict'\n/**\n * Provides a hashmap of relevant vocabs / namespaces.\n * Usage:\n *\n *   ```\n *   var rdf = require('rdflib')  // optional\n *   var vocab = require('solid-vocab')(rdf)  // or require('solid-vocab')()\n *   console.log(vocab.foaf('name'))  // -> <http://xmlns.com/foaf/0.1/name>\n *   ```\n * @module vocab\n */\n\n/**\n * @param [rdf] {RDF} Optional RDF Library (such as rdflib.js or rdf-ext) to\n *   inject\n */\nfunction vocab (rdf) {\n  var ns = require('rdf-ns')(rdf)\n  var vocabMap = {\n    'acl': ns.base('http://www.w3.org/ns/auth/acl#'),\n    'app': ns.base('http://www.w3.org/ns/solid/app#'),\n    'cert': ns.base('http://www.w3.org/ns/auth/cert#'),\n    'dct': ns.base('http://purl.org/dc/terms/'),\n    'foaf': ns.base('http://xmlns.com/foaf/0.1/'),\n    'ldp': ns.base('http://www.w3.org/ns/ldp#'),\n    'owl': ns.base('http://www.w3.org/2002/07/owl#'),\n    'pim': ns.base('http://www.w3.org/ns/pim/space#'),\n    'rdf': ns.base('http://www.w3.org/1999/02/22-rdf-syntax-ns#'),\n    'rdfs': ns.base('http://www.w3.org/2000/01/rdf-schema#'),\n    'schema': ns.base('http://schema.org/'),\n    'sioc': ns.base('http://rdfs.org/sioc/ns#'),\n    'solid': ns.base('http://www.w3.org/ns/solid/terms#'),\n    'stat': ns.base('http://www.w3.org/ns/posix/stat#'),\n    'vcard': ns.base('http://www.w3.org/2006/vcard/ns#'),\n    'xsd': ns.base('http://www.w3.org/2001/XMLSchema#')\n  }\n  return vocabMap\n}\n\nmodule.exports = vocab\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/solid-namespace/index.js\n// module id = 158\n// module chunks = 0","'use strict';\n/**\n * @module registry\n */\n\nmodule.exports.isListed = isListed;\nmodule.exports.isUnlisted = isUnlisted;\n\nvar vocab = require('solid-namespace');\n\n/**\n * Returns true if the parsed graph is a `solid:UnlistedDocument` document.\n * @method isUnlisted\n * @param graph {Graph} Parsed graph (loaded from a registry-like resource)\n * @return {Boolean}\n */\nfunction isUnlisted(graph, rdf) {\n  var ns = vocab(rdf);\n  return graph.any(null, null, ns.solid('UnlistedDocument'), graph.uri);\n}\n\n/**\n * Returns true if the parsed graph is a `solid:ListedDocument` document.\n * @method isListed\n * @param graph {Graph} Parsed graph (loaded from a registry-like resource)\n * @return {Boolean}\n */\nfunction isListed(graph, rdf) {\n  var ns = vocab(rdf);\n  return graph.any(null, null, ns.solid('ListedDocument'), graph.uri);\n}\n\n\n// WEBPACK FOOTER //\n// ./lib/registry.js","'use strict';\n/**\n * Provides convenience methods for graph manipulation.\n * Currently depends on RDFLib\n * @module graph-util\n */\n\nmodule.exports.appendGraph = appendGraph;\nmodule.exports.parseGraph = parseGraph;\nmodule.exports.parseLinks = parseLinks;\nmodule.exports.serializeStatements = serializeStatements;\nmodule.exports.graphFromStatements = graphFromStatements;\nmodule.exports.statementToNT = statementToNT;\n\nvar ALL_STATEMENTS = null;\n\n/**\n * Appends RDF statements from one graph object to another\n * @method appendGraph\n * @param toGraph {Graph} Graph object to append to\n * @param fromGraph {Graph} Graph object to append from\n */\nfunction appendGraph(toGraph, fromGraph) {\n  // var source = (docURI) ? rdf.sym(docURI) : undefined\n  fromGraph.statementsMatching(ALL_STATEMENTS).forEach(function (st) {\n    toGraph.add(st.subject, st.predicate, st.object, st.why);\n  });\n}\n\n/**\n * Converts a statement to string (if it isn't already), optionally slices off\n * the period at the end, and returns the statement.\n * @method statementToNT\n * @param statement {String|Statement} RDF Statement to be converted.\n * @param [excludeDot=false] {Boolean} Optionally slice off ending period.\n * @return {String}\n */\nfunction statementToNT(statement, excludeDot) {\n  if (typeof statement !== 'string') {\n    // This is an RDF Statement. Convert to string\n    statement = statement.toNT();\n  }\n  if (excludeDot && statement.endsWith('.')) {\n    statement = statement.slice(0, -1);\n  }\n  return statement;\n}\n\n/**\n * Converts a list of RDF statements into an rdflib Graph (Formula), and returns\n * it.\n * @method graphFromStatements\n * @param statements {Array<Statement>}\n * @return {Graph}\n */\nfunction graphFromStatements(statements, rdf) {\n  var graph = rdf.graph();\n  statements.forEach(function (st) {\n    graph.add(st);\n  });\n  return graph;\n}\n\n/**\n * Parses a given graph, from text rdfSource, as a given content type.\n * Returns parsed graph.\n * @method parseGraph\n * @param baseUrl {String}\n * @param rdfSource {String} Text source code\n * @param contentType {String} Mime Type (determines which parser to use)\n * @return {Graph}\n */\nfunction parseGraph(baseUrl, rdfSource, contentType, rdf) {\n  var parsedGraph = rdf.graph();\n  rdf.parse(rdfSource, parsedGraph, baseUrl, contentType);\n  return parsedGraph;\n}\n\n/**\n * Extracts the URIs from a parsed graph that match parameters.\n * The URIs are a set (duplicates are removed)\n * @method parseLinks+\n * @param graph {Graph}\n * @param subject {Symbol}\n * @param predicate {Symbol}\n * @param object {Symbol}\n * @param source {Symbol}\n * @return {Array<String>} Array of link URIs that match the parameters\n */\nfunction parseLinks(graph, subject, predicate, object, source) {\n  var links = {};\n  var matches = graph.statementsMatching(subject, predicate, object, source);\n  matches.forEach(function (match) {\n    links[match.object.uri] = true;\n  });\n  return Object.keys(links);\n}\n\n/**\n * Serializes an array of RDF statements into a simple N-Triples format\n * suitable for writing to a solid server.\n * @method serializeStatements\n * @param statements {Array<Statement>} List of RDF statements\n * @return {String}\n */\nfunction serializeStatements(statements) {\n  var source = statements.map(function (st) {\n    return st.toNT();\n  });\n  source = source.join('\\n');\n  return source;\n}\n\n\n// WEBPACK FOOTER //\n// ./lib/util/graph-util.js","'use strict';\n/**\n * Provides misc utility functions for the web client\n * @module web-util\n */\n\nmodule.exports.composePatchQuery = composePatchQuery;\nmodule.exports.parseAllowedMethods = parseAllowedMethods;\nmodule.exports.parseLinkHeader = parseLinkHeader;\nmodule.exports.absoluteUrl = absoluteUrl;\nmodule.exports.hostname = hostname;\n\nvar graphUtil = require('./graph-util');\n\n/**\n * Extracts the allowed HTTP methods from the 'Allow' and 'Accept-Patch'\n * headers, and returns a hashmap of verbs allowed by the server\n * @method parseAllowedMethods\n * @param allowMethodsHeader {String} `Access-Control-Allow-Methods` response\n *   header\n * @param acceptPatchHeader {String} `Accept-Patch` response header\n * @return {Object} Hashmap of verbs (in lowercase) allowed by the server for\n *   the current user. Example:\n *   ```\n *   {\n *     'get': true,\n *     'put': true\n *   }\n *   ```\n */\nfunction parseAllowedMethods(allowMethodsHeader, acceptPatchHeader) {\n  var allowedMethods = {};\n  if (allowMethodsHeader) {\n    var verbs = allowMethodsHeader.split(',');\n    verbs.forEach(function (methodName) {\n      if (methodName && allowMethodsHeader.indexOf(methodName) >= 0) {\n        allowedMethods[methodName.trim().toLowerCase()] = true;\n      }\n    });\n  }\n  if (acceptPatchHeader && acceptPatchHeader.indexOf('application/sparql-update') >= 0) {\n    allowedMethods.patch = true;\n  }\n  return allowedMethods;\n}\n\n/**\n* Parses a Link header from an XHR HTTP Request.\n* @method parseLinkHeader\n* @param link {String} Contents of the Link response header\n* @return {Object}\n*/\nfunction parseLinkHeader(link) {\n  if (!link) {\n    return {};\n  }\n  var linkexp = /<[^>]*>\\s*(\\s*;\\s*[^\\(\\)<>@,;:\"\\/\\[\\]\\?={} \\t]+=(([^\\(\\)<>@,;:\"\\/\\[\\]\\?={} \\t]+)|(\"[^\"]*\")))*(,|$)/g;\n  var paramexp = /[^\\(\\)<>@,;:\"\\/\\[\\]\\?={} \\t]+=(([^\\(\\)<>@,;:\"\\/\\[\\]\\?={} \\t]+)|(\"[^\"]*\"))/g;\n  var matches = link.match(linkexp);\n  var rels = {};\n  for (var i = 0; i < matches.length; i++) {\n    var split = matches[i].split('>');\n    var href = split[0].substring(1);\n    var ps = split[1];\n    var s = ps.match(paramexp);\n\n    for (var j = 0; j < s.length; j++) {\n      var p = s[j];\n      var paramsplit = p.split('=');\n      // var name = paramsplit[0]\n      var rel = paramsplit[1].replace(/[\"']/g, '');\n      if (!rels[rel]) {\n        rels[rel] = [];\n      }\n      rels[rel].push(href);\n      if (rels[rel].length > 1) {\n        rels[rel].sort();\n      }\n    }\n  }\n  return rels;\n}\n\nfunction hostname(url) {\n  var protocol, hostname, result, pathSegments;\n  var fragments = url.split('//');\n  if (fragments.length === 2) {\n    protocol = fragments[0];\n    hostname = fragments[1];\n  } else {\n    hostname = url;\n  }\n  pathSegments = hostname.split('/');\n  if (protocol) {\n    result = protocol + '//' + pathSegments[0];\n  } else {\n    result = pathSegments[0];\n  }\n  if (url.startsWith('//')) {\n    result = '//' + result;\n  }\n  return result;\n}\n\n/**\n* Return an absolute URL\n* @method absoluteUrl\n* @param baseUrl {String} URL to be used as base\n* @param pathUrl {String} Absolute or relative URL\n* @return {String}\n*/\nfunction absoluteUrl(baseUrl, pathUrl) {\n  if (pathUrl && pathUrl.slice(0, 4) !== 'http') {\n    return [baseUrl, pathUrl].map(function (path) {\n      if (path[0] === '/') {\n        path = path.slice(1);\n      }\n      if (path[path.length - 1] === '/') {\n        path = path.slice(0, path.length - 1);\n      }\n      return path;\n    }).join('/');\n  }\n  return pathUrl;\n}\n\n/**\n * Composes and returns a PATCH SPARQL query (for use with `web.patch()`)\n * @method composePatchQuery\n * @param toDel {Array<String|Statement>} List of triples to delete\n * @param toIns {Array<String|Statement>} List of triples to insert\n * @return {String} SPARQL query for use with PATCH\n */\nfunction composePatchQuery(toDel, toIns) {\n  var query = '';\n  var excludeDot = true;\n  if (toDel && toDel.length > 0) {\n    toDel = toDel.map(function (st) {\n      return graphUtil.statementToNT(st, excludeDot);\n    });\n    query += 'DELETE DATA { ' + toDel.join(' . ') + ' };\\n';\n  }\n  if (toIns && toIns.length > 0) {\n    toIns = toIns.map(function (st) {\n      return graphUtil.statementToNT(st, excludeDot);\n    });\n    query += 'INSERT DATA { ' + toIns.join(' . ') + ' };\\n';\n  }\n  return query;\n}\n\n\n// WEBPACK FOOTER //\n// ./lib/util/web-util.js","'use strict';\n/**\n * Provides Solid helper functions involved with loading the Type Index\n * Registry files, and with registering resources with them.\n * @module type-registry\n */\n\nmodule.exports.addToTypeIndex = addToTypeIndex;\nmodule.exports.blankPrivateTypeIndex = blankPrivateTypeIndex;\nmodule.exports.blankPublicTypeIndex = blankPublicTypeIndex;\nmodule.exports.initTypeRegistryPrivate = initTypeRegistryPrivate;\nmodule.exports.initTypeRegistryPublic = initTypeRegistryPublic;\nmodule.exports.loadTypeRegistry = loadTypeRegistry;\nmodule.exports.registerType = registerType;\nmodule.exports.typeRegistryForClass = typeRegistryForClass;\nmodule.exports.unregisterType = unregisterType;\n\nvar IndexRegistration = require('./solid/index-registration');\nvar util = require('./util/web-util.js');\nvar graphUtil = require('./util/graph-util.js');\nvar webUtil = require('./util/web-util.js');\nvar vocab = require('solid-namespace');\n\n/**\n * Returns a blank private type index registry option.\n * For use with `initTypeRegistry()`.\n * @method blankPrivateTypeIndex\n * @private\n * @return {Object} Blank type index registry object\n */\nfunction blankPrivateTypeIndex(rdf) {\n  var thisDoc = rdf.namedNode('');\n  var ns = vocab(rdf);\n  var indexStatements = [rdf.triple(thisDoc, ns.rdf('type'), ns.solid('TypeIndex')), rdf.triple(thisDoc, ns.rdf('type'), ns.solid('UnlistedDocument'))];\n  var privateIndex = {\n    data: graphUtil.serializeStatements(indexStatements),\n    graph: graphUtil.graphFromStatements(indexStatements, rdf),\n    slug: 'privateTypeIndex.ttl',\n    uri: null // actual url not yet known\n  };\n  return privateIndex;\n}\n\n/**\n * Returns a blank public type index registry option.\n * For use with `initTypeRegistry()`.\n * @method blankPublicTypeIndex\n * @private\n * @return {Object} Blank type index registry object\n */\nfunction blankPublicTypeIndex(rdf) {\n  var thisDoc = rdf.namedNode('');\n  var ns = vocab(rdf);\n  var indexStatements = [rdf.triple(thisDoc, ns.rdf('type'), ns.solid('TypeIndex')), rdf.triple(thisDoc, ns.rdf('type'), ns.solid('ListedDocument'))];\n  var publicIndex = {\n    data: graphUtil.serializeStatements(indexStatements),\n    graph: graphUtil.graphFromStatements(indexStatements, rdf),\n    slug: 'publicTypeIndex.ttl',\n    uri: null // actual url not yet known\n  };\n  return publicIndex;\n}\n\n/**\n * Initializes the private Type Index Registry resource, updates\n * the profile with the initialized index, and returns the updated profile.\n * @method initTypeRegistryPrivate\n * @param profile {SolidProfile} User's WebID profile\n * @param [options] Options hashmap (see solid.web.solidRequest() function docs)\n * @return {Promise<SolidProfile>} Resolves with the updated profile instance.\n */\nfunction initTypeRegistryPrivate(profile, webClient, options) {\n  options = options || {};\n  var rdf = webClient.rdf;\n  var ns = vocab(rdf);\n  var registryContainerUri = profile.typeRegistryDefaultContainer();\n  var webId = rdf.namedNode(profile.webId);\n  var privateIndex = blankPrivateTypeIndex(rdf);\n  // First, create the private Type Index Registry resource\n  return webClient.post(registryContainerUri, privateIndex.data, privateIndex.slug).catch(function (err) {\n    throw new Error('Could not create privateIndex document:', err);\n  }).then(function (response) {\n    // Private type index resource created.\n    // Update the private profile (preferences) to link to it.\n    privateIndex.uri = util.absoluteUrl(webUtil.hostname(registryContainerUri), response.url);\n    var toAdd = [rdf.triple(webId, ns.solid('privateTypeIndex'), rdf.namedNode(privateIndex.uri))];\n    var toDel = [];\n    // Note: this PATCH will actually create a private profile if it doesn't\n    // already exist.\n    return webClient.patch(profile.privateProfileUri(), toDel, toAdd, options);\n  }).catch(function (err) {\n    throw new Error('Could not update profile with private index:' + err);\n  }).then(function (response) {\n    // Profile successfully patched with a link to the created private index\n    // It's safe to update this instance of profile\n    profile.typeIndexUnlisted = privateIndex;\n    // Finally, return the updated profile with type index loaded\n    return profile;\n  });\n}\n\n/**\n * Initializes the public Type Index Registry resource, updates\n * the profile with the initialized index, and returns the updated profile.\n * @method initTypeRegistryPublic\n * @param profile {SolidProfile} User's WebID profile\n * @param webClient {SolidWebClient}\n * @param [options] Options hashmap (see solid.web.solidRequest() function docs)\n * @return {Promise<SolidProfile>} Resolves with the updated profile instance.\n */\nfunction initTypeRegistryPublic(profile, webClient, options) {\n  options = options || {};\n  var rdf = webClient.rdf;\n  var ns = vocab(rdf);\n  var registryContainerUri = profile.typeRegistryDefaultContainer();\n  var webId = rdf.namedNode(profile.webId);\n  var publicIndex = blankPublicTypeIndex(rdf);\n  // First, create the public Type Index Registry resource\n  return webClient.post(registryContainerUri, publicIndex.data, publicIndex.slug).catch(function (err) {\n    throw new Error('Could not create publicIndex document:', err);\n  }).then(function (response) {\n    // Public type index resource created. Update the profile to link to it.\n    publicIndex.uri = util.absoluteUrl(webUtil.hostname(registryContainerUri), response.url);\n    var toAdd = [rdf.triple(webId, ns.solid('publicTypeIndex'), rdf.namedNode(publicIndex.uri))];\n    var toDel = [];\n    return webClient.patch(profile.webId, toDel, toAdd, options);\n  }).catch(function (err) {\n    console.log(err);\n    throw new Error('Could not update profile with public index:', err);\n  }).then(function (response) {\n    // Profile successfully patched with a link to the created public index\n    // It's safe to update this instance of profile\n    profile.typeIndexListed = publicIndex;\n    // Finally, return the updated profile with type index loaded\n    return profile;\n  });\n}\n\n/**\n * Adds an RDF class to a user's type index registry, and returns the\n * profile (with the appropriate type registry index updated).\n * Called by `registerTypeIndex()`, which does all the argument validation.\n * @method addToTypeIndex\n * @param profile {SolidProfile} User's WebID profile\n * @param rdfClass {NamedNode} RDF type to register in the index.\n * @param location {String} Absolute URI to the location you want the class\n *   registered to.\n * @param locationType {String} Either 'instance' or 'container'\n * @param isListed {Boolean} Whether to register in a listed or unlisted index).\n * @return {Promise<SolidProfile>}\n */\nfunction addToTypeIndex(profile, rdfClass, location, webClient, locationType, isListed) {\n  // TODO: Check to see if a registry entry for this type already exists.\n  // Generate a fragment identifier for the new registration\n  var hash = require('shorthash');\n  var rdf = webClient.rdf;\n  var ns = vocab(rdf);\n  var fragmentId = hash.unique(rdfClass.uri);\n  var registryUri;\n  var registryGraph;\n  if (isListed) {\n    registryUri = profile.typeIndexListed.uri;\n    registryGraph = profile.typeIndexListed.graph;\n  } else {\n    registryUri = profile.typeIndexUnlisted.uri;\n    registryGraph = profile.typeIndexUnlisted.graph;\n  }\n  if (!registryUri) {\n    throw new Error('Cannot register type, registry URL missing');\n  }\n  var registrationUri = rdf.namedNode(registryUri + '#' + fragmentId);\n  // Set the class for the location type\n  var locationTypeClass;\n  if (locationType === 'instance') {\n    locationTypeClass = ns.solid('instance');\n  } else {\n    locationTypeClass = ns.solid('instanceContainer');\n    // Add trailing slash if it's missing and is a container\n    if (location.lastIndexOf('/') !== location.length - 1) {\n      location += '/';\n    }\n  }\n  // triples to delete (none for the moment)\n  var toDel = [];\n  // Create the list of triples to add in the PATCH operation\n  var toAdd = [\n  // example: '<#ab09fd> a solid:TypeRegistration;'\n  rdf.triple(registrationUri, ns.rdf('type'), ns.solid('TypeRegistration')),\n  // example: 'solid:forClass sioc:Post;'\n  rdf.triple(registrationUri, ns.solid('forClass'), rdfClass),\n  // example: 'solid:instanceContainer </posts/>.'\n  rdf.triple(registrationUri, locationTypeClass, rdf.namedNode(location))];\n  return webClient.patch(registryUri, toDel, toAdd).then(function (response) {\n    // Update the profile object with the new registry without reloading\n    var newRegistration = graphUtil.graphFromStatements(toAdd, rdf);\n    if (registryGraph) {\n      graphUtil.appendGraph(registryGraph, newRegistration);\n    } else {\n      profile[isListed ? 'typeIndexListed' : 'typeIndexUnlisted'].graph = newRegistration;\n    }\n    return profile;\n  });\n}\n\n/**\n * Loads the public and private type registry index resources, adds them\n * to the profile, and returns the profile.\n * Called by the profile.loadTypeRegistry() alias method.\n * Usage:\n *\n *   ```\n * var profile = solid.getProfile(url, options)\n *   .then(function (profile) {\n *     return profile.loadTypeRegistry(options)\n *   })\n *   ```\n * @method loadTypeRegistry\n * @param profile {SolidProfile}\n * @param webClient {SolidWebClient}\n * @param [options] Options hashmap (see solid.web.solidRequest() function docs)\n * @return {Promise<SolidProfile>}\n */\nfunction loadTypeRegistry(profile, webClient, options) {\n  options = options || {};\n  options.headers = options.headers || {};\n  // Politely ask for Turtle format\n  if (!options.headers['Accept']) {\n    options.headers['Accept'] = 'text/turtle';\n  }\n  // load public and private index resources\n  var links = [];\n  if (profile.typeIndexListed.uri) {\n    links.push(profile.typeIndexListed.uri);\n  }\n  if (profile.typeIndexUnlisted.uri) {\n    links.push(profile.typeIndexUnlisted.uri);\n  }\n  return webClient.loadParsedGraphs(links, options).then(function (loadedGraphs) {\n    var allFailed = loadedGraphs.length && loadedGraphs.reduce(function (acc, cur) {\n      return acc && !cur.value;\n    }, true);\n    if (allFailed) {\n      throw new Error('Could not load any type index');\n    }\n    loadedGraphs.forEach(function (graph) {\n      // For each index resource loaded, add it to `profile.typeIndexListed`\n      //  or `profile.typeIndexUnlisted` as appropriate\n      if (graph && graph.value) {\n        profile.addTypeRegistry(graph.value, graph.uri);\n      }\n    });\n    return profile;\n  });\n}\n\n/**\n * Registers a given RDF class in the user's type index registries, so that\n * other applications can discover it.\n * Note: If the relevant type index registry does not exist, it will be created.\n * @method registerType\n * @param profile {SolidProfile} Loaded WebID profile\n * @param rdfClass {rdf.NamedNode} Type to register in the index.\n * @param location {String} Absolute URI to the location you want the class\n *   registered to. (Example: Registering Address books in\n *   `https://example.com/contacts/`)\n * @param [locationType='container'] {String} Either 'instance' or 'container',\n *   defaults to 'container'\n * @param [isListed=false] {Boolean} Whether to register in a listed or unlisted\n *   index). Defaults to `false` (unlisted).\n * @param webClient {SolidWebClient}\n * @return {Promise<SolidProfile>} Resolves with the updated profile.\n */\nfunction registerType(profile, rdfClass, location, locationType, isListed, webClient) {\n  if (!profile) {\n    throw new Error('No profile provided');\n  }\n  if (!profile.isLoaded) {\n    throw new Error('Profile is not loaded');\n  }\n  if (!rdfClass || !location) {\n    throw new Error('Type registration requires type class and location');\n  }\n  locationType = locationType || 'container';\n  if (locationType !== 'container' && locationType !== 'instance') {\n    throw new Error('Invalid location type');\n  }\n  // make sure type registry is loaded\n  return loadTypeRegistry(profile, webClient).then(function (profile) {\n    if (isListed && !profile.hasTypeRegistryPublic()) {\n      // Public type registry is needed, but doesn't exist. Create it.\n      return initTypeRegistryPublic(profile, webClient);\n    }\n    if (!isListed && !profile.hasTypeRegistryPrivate()) {\n      // Private type registry is needed, but doesn't exist. Create it.\n      return initTypeRegistryPrivate(profile, webClient);\n    }\n    // Relevant type registry exists, proceed\n    return profile;\n  }).then(function (profile) {\n    // Made sure the relevant type registry exists, and can now add to it\n    return addToTypeIndex(profile, rdfClass, location, webClient, locationType, isListed);\n  });\n}\n\n/**\n * Returns lists of registry entries for a profile and a given RDF Class.\n * @method typeRegistryForClass\n * @param profile {SolidProfile}\n * @param rdfClass {rdf.NamedNode} RDF Class\n * @return {Array<IndexRegistration>}\n */\nfunction typeRegistryForClass(profile, rdfClass, rdf) {\n  var registrations = [];\n  var isListed = true;\n\n  return registrations.concat(\n  // Public/listed registrations\n  registrationsFromGraph(profile.typeIndexListed.graph, rdfClass, isListed, rdf)).concat(\n  // Private/unlisted registrations\n  registrationsFromGraph(profile.typeIndexUnlisted.graph, rdfClass, !isListed, rdf));\n}\n\n/**\n * Returns a list of registry entries from a given parsed type index graph.\n * @method registrationsFromGraph\n * @param graph {Graph} Parsed type index graph\n * @param rdfClass {NamedNode} RDF Class\n * @param isListed {Boolean} Whether to register in a listed or unlisted index\n * @return {Array<IndexRegistration>}\n */\nfunction registrationsFromGraph(graph, rdfClass, isListed, rdf) {\n  var entrySubject, instanceMatches, containerMatches;\n  var ns = vocab(rdf);\n  var registrations = [];\n  if (!graph) {\n    return registrations;\n  }\n  var matches = graph.statementsMatching(null, null, rdfClass);\n  matches.forEach(function (match) {\n    entrySubject = match.subject;\n    // Have the hash fragment of the registration, now need to determine\n    // location type, and the actual location.\n    instanceMatches = graph.statementsMatching(entrySubject, ns.solid('instance'));\n    instanceMatches.forEach(function (location) {\n      registrations.push(new IndexRegistration(entrySubject.uri, rdfClass, 'instance', location.object.uri, isListed));\n    });\n    // Now try to find solid:instanceContainer matches\n    containerMatches = graph.statementsMatching(entrySubject, ns.solid('instanceContainer'));\n    containerMatches.forEach(function (location) {\n      registrations.push(new IndexRegistration(entrySubject.uri, rdfClass, 'container', location.object.uri, isListed));\n    });\n  });\n  return registrations;\n}\n\n/**\n * Removes an RDF class from a user's type index registry.\n * Called by `unregisterTypeIndex()`, which does all the argument validation.\n * @param profile {SolidProfile} User's WebID profile\n * @param rdfClass {NamedNode} Type to remove from the registry\n * @param webClient {SolidWebClient}\n * @param [isListed=false] {Boolean} Whether to remove from a listed or\n *   unlisted index\n * @param [location] {String} If present, only unregister the class from this\n *   location (absolute URI).\n * @return {Promise<SolidProfile>}\n */\nfunction removeFromTypeIndex(profile, rdfClass, webClient, isListed, location) {\n  var rdf = webClient.rdf;\n  var registryUri;\n  var registryGraph;\n  if (isListed) {\n    registryUri = profile.typeIndexListed.uri;\n    registryGraph = profile.typeIndexListed.graph;\n  } else {\n    registryUri = profile.typeIndexUnlisted.uri;\n    registryGraph = profile.typeIndexUnlisted.graph;\n  }\n  if (!registryUri) {\n    throw new Error('Cannot unregister type, registry URL missing');\n  }\n  // Get the existing registrations\n  var registrations = registrationsFromGraph(registryGraph, rdfClass, isListed, rdf);\n  if (registrations.length === 0) {\n    // No existing registrations, no need to do anything, just return profile\n    return Promise.resolve(profile);\n  }\n  if (location) {\n    // If location is present, filter the to-remove list only to registrations\n    // that are in that location.\n    registrations = registrations.filter(function (registration) {\n      return registration.locationUri === location;\n    });\n  }\n  // Generate triples to delete\n  var toDel = [];\n  registrations.forEach(function (registration) {\n    registryGraph.statementsMatching(rdf.namedNode(registration.registrationUri)).forEach(function (statement) {\n      toDel.push(statement);\n    });\n  });\n  // Nothing to add\n  var toAdd = [];\n  return webClient.patch(registryUri, toDel, toAdd).then(function (result) {\n    // Update the registry, to reflect new state\n    return profile.reloadTypeRegistry(webClient);\n  });\n}\n\n/**\n * Removes a given RDF class from a user's type index registry, so that\n * other applications can discover it.\n * @method unregisterType\n * @param profile {SolidProfile} Loaded WebID profile\n * @param rdfClass {NamedNode} Type to register in the index.\n * @param [isListed=false] {Boolean} Whether to remove from a listed or unlisted\n *   index). Defaults to `false` (unlisted).\n * @param [location] {String} If present, only unregister the class from this\n *   location (absolute URI).\n * @param webClient {SolidWebClient}\n * @throws {Error}\n * @return {Promise<SolidProfile>}\n */\nfunction unregisterType(profile, rdfClass, isListed, location, webClient) {\n  if (!profile) {\n    throw new Error('No profile provided');\n  }\n  if (!profile.isLoaded) {\n    throw new Error('Profile is not loaded');\n  }\n  if (!rdfClass) {\n    throw new Error('Unregistering a type requires type class');\n  }\n  // make sure type registry is loaded\n  return loadTypeRegistry(profile, webClient).then(function (profile) {\n    if (isListed && !profile.typeIndexListed.graph) {\n      throw new Error('Profile has no Listed type index');\n    }\n    if (!isListed && !profile.typeIndexUnlisted.graph) {\n      throw new Error('Profile has no Unlisted type index');\n    }\n    return removeFromTypeIndex(profile, rdfClass, webClient, isListed, location);\n  });\n}\n\n\n// WEBPACK FOOTER //\n// ./lib/type-registry.js","'use strict';\n/**\n * @module index-registration\n */\n\nmodule.exports = IndexRegistration;\n\n/**\n * Represents a Solid Index registration (an entry in the Type Index Registry).\n * Returned in a list by `profile.typeRegistryForClass()`\n * @class IndexRegistration\n * @constructor\n * @param registrationUri {String} Absolute URI (with fragment identifier) of\n *   the registration (its location in the type index)\n * @param rdfClass {rdf.NamedNode} RDF Class for this registration\n * @param locationType {String} One of 'instance' or 'container'\n * @param locationUri {String} URI of the location containing resources of this\n *   type\n * @param isListed {Boolean} Is this registration in a listed or unlisted index\n */\nfunction IndexRegistration(registrationUri, rdfClass, locationType, locationUri, isListed) {\n  /**\n   * Is this a listed or unlisted registration\n   * @property isListed\n   * @type Boolean\n   */\n  this.isListed = isListed;\n  /**\n   * Location type, one of 'instance' or 'container'\n   * @property locationType\n   * @type String\n   */\n  this.locationType = locationType;\n  /**\n   * URI of the solid instance or container that holds resources of this type\n   * @property locationUri\n   * @type String\n   */\n  this.locationUri = locationUri;\n  /**\n   * RDF Class for this registration\n   * @property rdfClass\n   * @type rdf.NamedNode\n   */\n  this.rdfClass = rdfClass;\n  /**\n   * Absolute URI (with fragment identifier) of the registration\n   * @property registrationUri\n   * @type String\n   */\n  this.registrationUri = registrationUri;\n}\n\n/**\n * Convenience method, returns true if this registration is of type\n * `solid:instanceContainer`\n * @method isContainer\n * @return {Boolean}\n */\nIndexRegistration.prototype.isContainer = function isInstance() {\n  return this.locationType === 'container';\n};\n\n/**\n * Convenience method, returns true if this registration is of type\n * `solid:instance`\n * @method isInstance\n * @return {Boolean}\n */\nIndexRegistration.prototype.isInstance = function isInstance() {\n  return this.locationType === 'instance';\n};\n\n\n// WEBPACK FOOTER //\n// ./lib/solid/index-registration.js","'use strict';\n/**\n * @module permissions\n */\n\nvar PermissionSet = require('./permission-set');\nvar Authorization = require('./authorization');\nvar aclModes = require('./modes');\n\n/**\n * Clears (deletes) an ACL resource for a given resource url.\n * Usage:\n *\n *   ```\n *   solid.clearPermissions('https://alice.example.com/docs/file1')\n *     .then(function (result) {\n *       // Now the ACL resource at file1.acl is deleted\n *     })\n *   ```\n * @method clearPermissions\n * @param resourceUrl {String} URL of a resource (not its ACL)\n * @return {Promise<PermissionSet>}\n */\nfunction clearPermissions(resourceUrl, webClient) {\n  var aclResourceUrl;\n  return webClient.head(resourceUrl).then(function (response) {\n    aclResourceUrl = response.aclAbsoluteUrl();\n    if (!aclResourceUrl) {\n      throw new Error('ACL URL not found for resource.');\n    }\n    return webClient.del(aclResourceUrl);\n  });\n}\n\n/**\n * Fetches and returns a PermissionSet initialized from an ACL resource.\n * Usage:\n *\n *   ```\n *   solid.getPermissions('https://alice.example.com/docs/file1')\n *     .then(function (permissionSet) {\n *       // loads the PermissionSet instance, parsed from file1.acl for example\n *       // now you can edit it and save it\n *       return permissionSet\n *         .addPermission(aliceWebId, [solid.acl.READ, solid.acl.WRITE])\n *         .addPermission(aliceWebId, solid.acl.CONTROL)\n *         .addPermission(solid.acl.EVERYONE, solid.acl.READ)\n *         .save()\n *     })\n *   ```\n * @method getPermissions\n * @param resourceUrl {String} URL of a resource (not its ACL)\n * @return {Promise<PermissionSet>}\n */\nfunction getPermissions(resourceUrl, webClient, rdf) {\n  var aclResourceUrl;\n  var permissions;\n  return webClient.head(resourceUrl).then(function (response) {\n    aclResourceUrl = response.aclAbsoluteUrl();\n    if (!aclResourceUrl) {\n      throw new Error('ACL URL not found for resource.');\n    }\n    permissions = new PermissionSet(resourceUrl, aclResourceUrl, response.isContainer(), { rdf: rdf, webClient: webClient });\n    return webClient.get(aclResourceUrl).then(function (response) {\n      return response.parsedGraph();\n    });\n  }).then(function (aclGraph) {\n    permissions.initFromGraph(aclGraph);\n    return permissions;\n  });\n}\n\nmodule.exports.clearPermissions = clearPermissions;\nmodule.exports.getPermissions = getPermissions;\nmodule.exports.PermissionSet = PermissionSet;\nmodule.exports.Authorization = Authorization;\n\n// Export all the acl-related constants and modes at the top (index) level\nObject.assign(module.exports, aclModes.acl);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/solid-permissions/lib/index.js\n// module id = 164\n// module chunks = 0","'use strict';\n/**\n * @module permission-set\n * Models the set of Authorizations in a given .acl resource.\n * @see https://github.com/solid/web-access-control-spec for details.\n * The working assumptions here are:\n *   - Model the various permissions in an ACL resource as a set of unique\n *     authorizations, with one agent (or one group), and only\n *     one resource (acl:accessTo or acl:default) per authorization.\n *   - If the source RDF of the ACL resource has multiple agents or multiple\n *     resources in one authorization, separate them into multiple separate\n *     Authorization objects (with one agent/group and one resourceUrl each)\n *   - A single Authorization object can grant access to multiple modes (read,\n *     write, control, etc)\n *   - By default, all the authorizations in a container's ACL will be marked\n *     as 'to be inherited', that is will have `acl:default` set.\n */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Authorization = require('./authorization');\n\nvar _require = require('./modes');\n\nvar acl = _require.acl;\n\nvar ns = require('solid-namespace');\n\nvar DEFAULT_ACL_SUFFIX = '.acl';\nvar DEFAULT_CONTENT_TYPE = 'text/turtle';\n/**\n * Resource types, used by PermissionSet objects\n */\nvar RESOURCE = 'resource';\nvar CONTAINER = 'container';\n\n/**\n * Agent type index names (used by findAuthByAgent() etc)\n */\nvar AGENT_INDEX = 'agents';\nvar GROUP_INDEX = 'groups';\n\n/**\n * @class PermissionSet\n * @param resourceUrl {String} URL of the resource to which this PS applies\n * @param aclUrl {String} URL of the ACL corresponding to the resource\n * @param isContainer {Boolean} Is the resource a container? (Affects usage of\n *   inherit semantics / acl:default)\n * @param [options={}] {Object} Options hashmap\n * @param [options.graph] {Graph} Parsed RDF graph of the ACL resource\n * @param [options.rdf] {RDF} RDF Library\n * @param [options.strictOrigin] {Boolean} Enforce strict origin?\n * @param [options.host] {String} Actual request uri\n * @param [options.origin] {String} Origin URI to enforce, relevant\n *   if strictOrigin is set to true\n * @param [options.webClient] {SolidWebClient} Used for save() and clear()\n * @param [options.isAcl] {Function}\n * @param [options.aclUrlFor] {Function}\n * @constructor\n */\n\nvar PermissionSet = function () {\n  function PermissionSet(resourceUrl, aclUrl, isContainer) {\n    var options = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n\n    _classCallCheck(this, PermissionSet);\n\n    /**\n     * Hashmap of all Authorizations in this permission set, keyed by a hashed\n     * combination of an agent's/group's webId and the resourceUrl.\n     * @property authorizations\n     * @type {Object}\n     */\n    this.authorizations = {};\n    /**\n     * The URL of the corresponding ACL resource, at which these permissions will\n     * be saved.\n     * @property aclUrl\n     * @type {String}\n     */\n    this.aclUrl = aclUrl;\n    /**\n     * Optional request host (used by checkOrigin())\n     * @property host\n     * @type {String}\n     */\n    this.host = options.host;\n    /**\n     * Initialize the agents / groups / resources indexes.\n     * @property index\n     * @type {Object}\n     */\n    this.index = {\n      'agents': {},\n      'groups': {} // Also includes Public permissions\n    };\n    /**\n     * RDF Library (optionally injected)\n     * @property rdf\n     * @type {RDF}\n     */\n    this.rdf = options.rdf;\n    /**\n     * Whether this permission set is for a 'container' or a 'resource'.\n     * Determines whether or not the inherit/'acl:default' attribute is set on\n     * all its Authorizations.\n     * @property resourceType\n     * @type {String}\n     */\n    this.resourceType = isContainer ? CONTAINER : RESOURCE;\n    /**\n     * The URL of the resource for which these permissions apply.\n     * @property resourceUrl\n     * @type {String}\n     */\n    this.resourceUrl = resourceUrl;\n    /**\n     * Should this permission set enforce \"strict origin\" policy?\n     * (If true, uses `options.origin` parameter)\n     * @property strictOrigin\n     * @type {Boolean}\n     */\n    this.strictOrigin = options.strictOrigin;\n    /**\n     * Contents of the request's `Origin:` header.\n     * (used only if `strictOrigin` parameter is set to true)\n     * @property origin\n     * @type {String}\n     */\n    this.origin = options.origin;\n    /**\n     * Solid REST client (optionally injected), used by save() and clear().\n     * @type {SolidWebClient}\n     */\n    this.webClient = options.webClient;\n\n    // Init the functions for deriving an ACL url for a given resource\n    this.aclUrlFor = options.aclUrlFor ? options.aclUrlFor : defaultAclUrlFor;\n    this.aclUrlFor.bind(this);\n    this.isAcl = options.isAcl ? options.isAcl : defaultIsAcl;\n    this.isAcl.bind(this);\n\n    // Optionally initialize from a given parsed graph\n    if (options.graph) {\n      this.initFromGraph(options.graph);\n    }\n  }\n\n  /**\n   * Adds a given Authorization instance to the permission set.\n   * Low-level function, clients should use `addPermission()` instead, in most\n   * cases.\n   * @method addAuthorization\n   * @private\n   * @param auth {Authorization}\n   * @return {PermissionSet} Returns self (chainable)\n   */\n\n\n  _createClass(PermissionSet, [{\n    key: 'addAuthorization',\n    value: function addAuthorization(auth) {\n      var hashFragment = auth.hashFragment();\n      if (hashFragment in this.authorizations) {\n        // An authorization for this agent and resource combination already exists\n        // Merge the incoming access modes with its existing ones\n        this.authorizations[hashFragment].mergeWith(auth);\n      } else {\n        this.authorizations[hashFragment] = auth;\n      }\n      if (!auth.virtual && auth.allowsControl()) {\n        // If acl:Control is involved, ensure implicit rules for the .acl resource\n        this.addControlPermissionsFor(auth);\n      }\n      // Create the appropriate indexes\n      this.addToAgentIndex(auth.webId(), auth.accessType, auth.resourceUrl, auth);\n      if (auth.isPublic()) {\n        this.addToPublicIndex(auth.resourceUrl, auth.accessType, auth);\n      }\n      return this;\n    }\n\n    /**\n     * Creates an Authorization with the given parameters, and passes it on to\n     * `addAuthorization()` to be added to this PermissionSet.\n     * Essentially a convenience factory method.\n     * @method addAuthorizationFor\n     * @private\n     * @param resourceUrl {String}\n     * @param inherit {Boolean}\n     * @param agent {String|Quad} Agent URL (or `acl:agent` RDF triple).\n     * @param accessModes {String} 'READ'/'WRITE' etc.\n     * @param [origins=[]] {Array<String>} List of origins that are allowed access\n     * @param [mailTos=[]] {Array<String>}\n     * @return {Authorization}\n     */\n\n  }, {\n    key: 'addAuthorizationFor',\n    value: function addAuthorizationFor(resourceUrl, inherit, agent, accessModes) {\n      var origins = arguments.length <= 4 || arguments[4] === undefined ? [] : arguments[4];\n      var mailTos = arguments.length <= 5 || arguments[5] === undefined ? [] : arguments[5];\n\n      var auth = new Authorization(resourceUrl, inherit);\n      auth.setAgent(agent);\n      auth.addMode(accessModes);\n      auth.addOrigin(origins);\n      mailTos.forEach(function (mailTo) {\n        auth.addMailTo(mailTo);\n      });\n      this.addAuthorization(auth);\n      return auth;\n    }\n\n    /**\n     * Adds a virtual (will not be serialized to RDF) authorization giving\n     * Read/Write/Control access to the corresponding ACL resource if acl:Control\n     * is encountered in the actual source ACL.\n     * @method addControlPermissionsFor\n     * @private\n     * @param auth {Authorization} Authorization containing an acl:Control access\n     *   mode.\n     */\n\n  }, {\n    key: 'addControlPermissionsFor',\n    value: function addControlPermissionsFor(auth) {\n      var impliedAuth = auth.clone();\n      impliedAuth.resourceUrl = this.aclUrlFor(auth.resourceUrl);\n      impliedAuth.virtual = true;\n      impliedAuth.addMode(acl.ALL_MODES);\n      this.addAuthorization(impliedAuth);\n    }\n\n    /**\n     * Adds a group permission for the given access mode and group web id.\n     * @method addGroupPermission\n     * @param webId {String}\n     * @param accessMode {String|Array<String>}\n     * @return {PermissionSet} Returns self (chainable)\n     */\n\n  }, {\n    key: 'addGroupPermission',\n    value: function addGroupPermission(webId, accessMode) {\n      var auth = new Authorization(this.resourceUrl, this.isAuthInherited());\n      auth.setGroup(webId);\n      auth.addMode(accessMode);\n      this.addAuthorization(auth);\n      return this;\n    }\n\n    /**\n     * Adds a permission for the given access mode and agent id.\n     * @method addPermission\n     * @param webId {String} URL of an agent for which this permission applies\n     * @param accessMode {String|Array<String>} One or more access modes\n     * @param [origin] {String|Array<String>} One or more allowed origins (optional)\n     * @return {PermissionSet} Returns self (chainable)\n     */\n\n  }, {\n    key: 'addPermission',\n    value: function addPermission(webId, accessMode, origin) {\n      if (!webId) {\n        throw new Error('addPermission() requires a valid webId');\n      }\n      if (!accessMode) {\n        throw new Error('addPermission() requires a valid accessMode');\n      }\n      var auth = new Authorization(this.resourceUrl, this.isAuthInherited());\n      auth.setAgent(webId);\n      auth.addMode(accessMode);\n      if (origin) {\n        auth.addOrigin(origin);\n      }\n      this.addAuthorization(auth);\n      return this;\n    }\n\n    /**\n     * Adds a given authorization to the \"lookup by agent id\" index.\n     * Enables lookups via `findAuthByAgent()`.\n     * @method addToAgentIndex\n     * @private\n     * @param webId {String} Agent's Web ID\n     * @param accessType {String} Either `accessTo` or `default`\n     * @param resourceUrl {String}\n     * @param authorization {Authorization}\n     */\n\n  }, {\n    key: 'addToAgentIndex',\n    value: function addToAgentIndex(webId, accessType, resourceUrl, authorization) {\n      var agents = this.index.agents;\n      if (!agents[webId]) {\n        agents[webId] = {};\n      }\n      if (!agents[webId][accessType]) {\n        agents[webId][accessType] = {};\n      }\n      if (!agents[webId][accessType][resourceUrl]) {\n        agents[webId][accessType][resourceUrl] = authorization;\n      } else {\n        agents[webId][accessType][resourceUrl].mergeWith(authorization);\n      }\n    }\n\n    /**\n     * Adds a given authorization to the \"lookup by group id\" index.\n     * Enables lookups via `findAuthByAgent()`.\n     * @method addToGroupIndex\n     * @private\n     * @param webId {String} Group's Web ID\n     * @param accessType {String} Either `accessTo` or `default`\n     * @param resourceUrl {String}\n     * @param authorization {Authorization}\n     */\n\n  }, {\n    key: 'addToGroupIndex',\n    value: function addToGroupIndex(webId, accessType, resourceUrl, authorization) {\n      var groups = this.index.groups;\n      if (!groups[webId]) {\n        groups[webId] = {};\n      }\n      if (!groups[webId][accessType]) {\n        groups[webId][accessType] = {};\n      }\n      if (!groups[webId][accessType][resourceUrl]) {\n        groups[webId][accessType][resourceUrl] = authorization;\n      } else {\n        groups[webId][accessType][resourceUrl].mergeWith(authorization);\n      }\n    }\n\n    /**\n     * Adds a given authorization to the \"lookup by group id\" index.\n     * Alias for `addToGroupIndex()`.\n     * Enables lookups via `findAuthByAgent()`.\n     * @method addToPublicIndex\n     * @private\n     * @param resourceUrl {String}\n     * @param accessType {String} Either `accessTo` or `default`\n     * @param authorization {Authorization}\n     */\n\n  }, {\n    key: 'addToPublicIndex',\n    value: function addToPublicIndex(resourceUrl, accessType, auth) {\n      this.addToGroupIndex(acl.EVERYONE, accessType, resourceUrl, auth);\n    }\n\n    /**\n     * Returns a list of all the Authorizations that belong to this permission set.\n     * Mostly for internal use.\n     * @method allAuthorizations\n     * @return {Array<Authorization>}\n     */\n\n  }, {\n    key: 'allAuthorizations',\n    value: function allAuthorizations() {\n      var _this = this;\n\n      var authList = [];\n      var auth;\n      Object.keys(this.authorizations).forEach(function (authKey) {\n        auth = _this.authorizations[authKey];\n        authList.push(auth);\n      });\n      return authList;\n    }\n\n    /**\n     * Tests whether this PermissionSet gives Public (acl:agentClass foaf:Agent)\n     * access to a given uri.\n     * @method allowsPublic\n     * @param mode {String|NamedNode} Access mode (read/write/control etc)\n     * @param resourceUrl {String}\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'allowsPublic',\n    value: function allowsPublic(mode, resourceUrl) {\n      resourceUrl = resourceUrl || this.resourceUrl;\n      var publicAuth = this.findPublicAuth(resourceUrl);\n      if (!publicAuth) {\n        return false;\n      }\n      return this.checkOrigin(publicAuth) && publicAuth.allowsMode(mode);\n    }\n\n    /**\n     * Returns an RDF graph representation of this permission set and all its\n     * Authorizations. Used by `save()`.\n     * @method buildGraph\n     * @private\n     * @param rdf {RDF} RDF Library\n     * @return {Graph}\n     */\n\n  }, {\n    key: 'buildGraph',\n    value: function buildGraph(rdf) {\n      var graph = rdf.graph();\n      this.allAuthorizations().forEach(function (auth) {\n        graph.add(auth.rdfStatements(rdf));\n      });\n      return graph;\n    }\n\n    /**\n     * Tests whether the given agent has the specified access to a resource.\n     * This is one of the main use cases for this solid-permissions library.\n     * Optionally performs strict origin checking (if `strictOrigin` is enabled\n     * in the constructor's options).\n     * Returns a promise; async since checking permissions may involve requesting\n     * multiple ACL resources (group listings, etc).\n     * @method checkAccess\n     * @param resourceUrl {String}\n     * @param agentId {String}\n     * @param accessMode {String} Access mode (read/write/control)\n     * @return {Promise<Boolean>}\n     */\n\n  }, {\n    key: 'checkAccess',\n    value: function checkAccess(resourceUrl, agentId, accessMode) {\n      var result = void 0;\n      if (this.allowsPublic(accessMode, resourceUrl)) {\n        result = true;\n      } else {\n        var auth = this.findAuthByAgent(agentId, resourceUrl);\n        result = auth && this.checkOrigin(auth) && auth.allowsMode(accessMode);\n      }\n      return Promise.resolve(result);\n    }\n\n    /**\n     * Tests whether a given authorization allows operations from the current\n     * request's `Origin` header. (The current request's origin and host are\n     * passed in as options to the PermissionSet's constructor.)\n     * @param authorization {Authorization}\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'checkOrigin',\n    value: function checkOrigin(authorization) {\n      if (!this.strictOrigin || // Enforcement turned off in server config\n      !this.origin || // No origin - not a script, do not enforce origin\n      this.origin === this.host) {\n        // same origin is trusted\n        return true;\n      }\n      // If not same origin, check that the origin is in the explicit ACL list\n      return authorization.allowsOrigin(this.origin);\n    }\n\n    /**\n     * Sends a delete request to a particular ACL resource. Intended to be used for\n     * an existing loaded PermissionSet, but you can also specify a particular\n     * URL to delete.\n     * Usage:\n     *\n     *   ```\n     *   // If you have an existing PermissionSet as a result of `getPermissions()`:\n     *   solid.getPermissions('https://www.example.com/file1')\n     *     .then(function (permissionSet) {\n     *       // do stuff\n     *       return permissionSet.clear()  // deletes that permissionSet\n     *     })\n     *   // Otherwise, use the helper function\n     *   //   solid.clearPermissions(resourceUrl) instead\n     *   solid.clearPermissions('https://www.example.com/file1')\n     *     .then(function (response) {\n     *       // file1.acl is now deleted\n     *     })\n     *   ```\n     * @method clear\n     * @param [webClient] {SolidWebClient}\n     * @throws {Error} Rejects with an error if it doesn't know where to delete, or\n     *   with any XHR errors that crop up.\n     * @return {Promise<Request>}\n     */\n\n  }, {\n    key: 'clear',\n    value: function clear(webClient) {\n      webClient = webClient || this.webClient;\n      if (!webClient) {\n        return Promise.reject(new Error('Cannot clear - no web client'));\n      }\n      var aclUrl = this.aclUrl;\n      if (!aclUrl) {\n        return Promise.reject(new Error('Cannot clear - unknown target url'));\n      }\n      return webClient.del(aclUrl);\n    }\n\n    /**\n     * Returns the number of Authorizations in this permission set.\n     * @method count\n     * @return {Number}\n     */\n\n  }, {\n    key: 'equals',\n\n\n    /**\n     * Returns whether or not this permission set is equal to another one.\n     * A PermissionSet is considered equal to another one iff:\n     * - It has the same number of authorizations, and each of those authorizations\n     *   has a corresponding one in the other set\n     * - They are both intended for the same resource (have the same resourceUrl)\n     * - They are both intended to be saved at the same aclUrl\n     * @method equals\n     * @param ps {PermissionSet} The other permission set to compare to\n     * @return {Boolean}\n     */\n    value: function equals(ps) {\n      var _this2 = this;\n\n      var sameUrl = this.resourceUrl === ps.resourceUrl;\n      var sameAclUrl = this.aclUrl === ps.aclUrl;\n      var sameResourceType = this.resourceType === ps.resourceType;\n      var myAuthKeys = Object.keys(this.authorizations);\n      var otherAuthKeys = Object.keys(ps.authorizations);\n      if (myAuthKeys.length !== otherAuthKeys.length) {\n        return false;\n      }\n      var sameAuths = true;\n      var myAuth, otherAuth;\n      myAuthKeys.forEach(function (authKey) {\n        myAuth = _this2.authorizations[authKey];\n        otherAuth = ps.authorizations[authKey];\n        if (!otherAuth) {\n          sameAuths = false;\n        }\n        if (!myAuth.equals(otherAuth)) {\n          sameAuths = false;\n        }\n      });\n      return sameUrl && sameAclUrl && sameResourceType && sameAuths;\n    }\n\n    /**\n     * Finds and returns an authorization (stored in the 'find by agent' index)\n     * for a given agent (web id) and resource.\n     * @method findAuthByAgent\n     * @private\n     * @param webId {String}\n     * @param resourceUrl {String}\n     * @param indexType {String} Either 'default' or 'accessTo'\n     * @return {Authorization}\n     */\n\n  }, {\n    key: 'findAuthByAgent',\n    value: function findAuthByAgent(webId, resourceUrl) {\n      var indexType = arguments.length <= 2 || arguments[2] === undefined ? AGENT_INDEX : arguments[2];\n\n      var index = this.index[indexType];\n      if (!index[webId]) {\n        // There are no permissions at all for this agent\n        return false;\n      }\n      // first check the accessTo type\n      var accessToAuths = index[webId][acl.ACCESS_TO];\n      var accessToMatch = void 0;\n      if (accessToAuths) {\n        accessToMatch = accessToAuths[resourceUrl];\n      }\n      if (accessToMatch) {\n        return accessToMatch;\n      }\n      // then check the default/inherited type permissions\n      var defaultAuths = index[webId][acl.DEFAULT];\n      var defaultMatch = void 0;\n      if (defaultAuths) {\n        // First try an exact match (resource matches the acl:default object)\n        defaultMatch = defaultAuths[resourceUrl];\n        if (!defaultMatch) {\n          // Next check to see if resource is in any of the relevant containers\n          var containers = Object.keys(defaultAuths).sort().reverse();\n          // Loop through the container URLs, sorted in reverse alpha\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = containers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var containerUrl = _step.value;\n\n              if (resourceUrl.startsWith(containerUrl)) {\n                defaultMatch = defaultAuths[containerUrl];\n                break;\n              }\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n        }\n      }\n      return defaultMatch;\n    }\n\n    /**\n     * Finds and returns an authorization (stored in the 'find by group' index)\n     * for the \"Everyone\" group (acl:agentClass foaf:Agent), for a given resource.\n     * @method findAuthByAgent\n     * @private\n     * @param resourceUrl {String}\n     * @return {Authorization}\n     */\n\n  }, {\n    key: 'findPublicAuth',\n    value: function findPublicAuth(resourceUrl) {\n      return this.findAuthByAgent(acl.EVERYONE, resourceUrl, GROUP_INDEX);\n    }\n\n    /**\n     * Iterates over all the authorizations in this permission set.\n     * Convenience method.\n     * Usage:\n     *\n     *   ```\n     *   solid.getPermissions(resourceUrl)\n     *     .then(function (permissionSet) {\n     *       permissionSet.forEach(function (auth) {\n     *         // do stuff with auth\n     *       })\n     *     })\n     *   ```\n     * @method forEach\n     * @param callback {Function} Function to apply to each authorization\n     */\n\n  }, {\n    key: 'forEach',\n    value: function forEach(callback) {\n      var _this3 = this;\n\n      this.allAuthorizations().forEach(function (auth) {\n        callback.call(_this3, auth);\n      });\n    }\n\n    /**\n     * Creates and loads all the authorizations from a given RDF graph.\n     * Used by `getPermissions()` and by the constructor (optionally).\n     * Usage:\n     *\n     *   ```\n     *   var acls = new PermissionSet(resourceUri, aclUri, isContainer, {rdf: rdf})\n     *   acls.initFromGraph(graph)\n     *   ```\n     * @method initFromGraph\n     * @param graph {Dataset} RDF Graph (parsed from the source ACL)\n     */\n\n  }, {\n    key: 'initFromGraph',\n    value: function initFromGraph(graph) {\n      var _this4 = this;\n\n      var vocab = ns(this.rdf);\n      var authSections = graph.match(null, null, vocab.acl('Authorization'));\n      if (authSections.length) {\n        authSections = authSections.map(function (match) {\n          return match.subject;\n        });\n      } else {\n        (function () {\n          // Attempt to deal with an ACL with no acl:Authorization types present.\n          var subjects = {};\n          authSections = graph.match(null, vocab.acl('mode'));\n          authSections.forEach(function (match) {\n            subjects[match.subject.value] = match.subject;\n          });\n          authSections = Object.keys(subjects).map(function (section) {\n            return subjects[section];\n          });\n        })();\n      }\n      // Iterate through each grouping of authorizations in the .acl graph\n      authSections.forEach(function (fragment) {\n        // Extract the access modes\n        var accessModes = graph.match(fragment, vocab.acl('mode'));\n        // Extract allowed origins\n        var origins = graph.match(fragment, vocab.acl('origin'));\n\n        // Extract all the authorized agents\n        var agentMatches = graph.match(fragment, vocab.acl('agent'));\n        // Mailtos only apply to agents (not groups)\n        var mailTos = agentMatches.filter(isMailTo);\n        // Now filter out mailtos\n        agentMatches = agentMatches.filter(function (ea) {\n          return !isMailTo(ea);\n        });\n        // Extract all 'Public' matches (agentClass foaf:Agent)\n        var publicMatches = graph.match(fragment, vocab.acl('agentClass'), vocab.foaf('Agent'));\n        // Extract all acl:agentGroup matches\n        var groupMatches = graph.match(fragment, vocab.acl('agentGroup'));\n        // Create an Authorization object for each group (accessTo and default)\n        var allAgents = agentMatches.concat(publicMatches).concat(groupMatches);\n        // Create an Authorization object for each agent or group\n        //   (both individual (acl:accessTo) and inherited (acl:default))\n        allAgents.forEach(function (agentMatch) {\n          // Extract the acl:accessTo statements.\n          var accessToMatches = graph.match(fragment, vocab.acl('accessTo'));\n          accessToMatches.forEach(function (resourceMatch) {\n            var resourceUrl = resourceMatch.object.value;\n            _this4.addAuthorizationFor(resourceUrl, acl.NOT_INHERIT, agentMatch, accessModes, origins, mailTos);\n          });\n          // Extract inherited / acl:default statements\n          var inheritedMatches = graph.match(fragment, vocab.acl('default')).concat(graph.match(fragment, vocab.acl('defaultForNew')));\n          inheritedMatches.forEach(function (containerMatch) {\n            var containerUrl = containerMatch.object.value;\n            _this4.addAuthorizationFor(containerUrl, acl.INHERIT, agentMatch, accessModes, origins, mailTos);\n          });\n        });\n      });\n    }\n\n    /**\n     * Returns whether or not authorizations added to this permission set be\n     * inherited, by default? (That is, should they have acl:default set on them).\n     * @method isAuthInherited\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isAuthInherited',\n    value: function isAuthInherited() {\n      return this.resourceType === CONTAINER;\n    }\n\n    /**\n     * Returns whether or not this permission set has any Authorizations added to it\n     * @method isEmpty\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isEmpty',\n    value: function isEmpty() {\n      return this.count === 0;\n    }\n\n    /**\n     * Returns the corresponding Authorization for a given agent/group webId (and\n     * for a given resourceUrl, although it assumes by default that it's the same\n     * resourceUrl as the PermissionSet).\n     * @method permissionFor\n     * @param webId {String} URL of the agent or group\n     * @param [resourceUrl] {String}\n     * @return {Authorization} Returns the corresponding Authorization, or `null`\n     *   if no webId is given, or if no such authorization exists.\n     */\n\n  }, {\n    key: 'permissionFor',\n    value: function permissionFor(webId, resourceUrl) {\n      if (!webId) {\n        return null;\n      }\n      resourceUrl = resourceUrl || this.resourceUrl;\n      var hashFragment = Authorization.hashFragmentFor(webId, resourceUrl);\n      return this.authorizations[hashFragment];\n    }\n\n    /**\n     * Deletes a given Authorization instance from the permission set.\n     * Low-level function, clients should use `removePermission()` instead, in most\n     * cases.\n     * @method removeAuthorization\n     * @param auth {Authorization}\n     * @return {PermissionSet} Returns self (chainable)\n     */\n\n  }, {\n    key: 'removeAuthorization',\n    value: function removeAuthorization(auth) {\n      var hashFragment = auth.hashFragment();\n      delete this.authorizations[hashFragment];\n      return this;\n    }\n\n    /**\n     * Removes one or more access modes from an authorization in this permission set\n     * (defined by a unique combination of agent/group id (webId) and a resourceUrl).\n     * If no more access modes remain for that authorization, it's deleted from the\n     * permission set.\n     * @method removePermission\n     * @param webId\n     * @param accessMode {String|Array<String>}\n     * @return {PermissionSet} Returns self (via a chainable function)\n     */\n\n  }, {\n    key: 'removePermission',\n    value: function removePermission(webId, accessMode) {\n      var auth = this.permissionFor(webId, this.resourceUrl);\n      if (!auth) {\n        // No authorization for this webId + resourceUrl exists. Bail.\n        return this;\n      }\n      // Authorization exists, remove the accessMode from it\n      auth.removeMode(accessMode);\n      if (auth.isEmpty()) {\n        // If no more access modes remain, after removing, delete it from this\n        // permission set\n        this.removeAuthorization(auth);\n      }\n      return this;\n    }\n\n    /**\n     * @method save\n     * @param [options={}] {Object} Options hashmap\n     * @param [options.aclUrl] {String} Optional URL to save the .ACL resource to.\n     *   Defaults to its pre-set `aclUrl`, if not explicitly passed in.\n     * @param [options.contentType] {string} Optional content type to serialize as\n     * @throws {Error} Rejects with an error if it doesn't know where to save, or\n     *   with any XHR errors that crop up.\n     * @return {Promise<SolidResponse>}\n     */\n\n  }, {\n    key: 'save',\n    value: function save() {\n      var _this5 = this;\n\n      var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n      var aclUrl = options.aclUrl || this.aclUrl;\n      var contentType = options.contentType || DEFAULT_CONTENT_TYPE;\n      if (!aclUrl) {\n        return Promise.reject(new Error('Cannot save - unknown target url'));\n      }\n      if (!this.webClient) {\n        return Promise.reject(new Error('Cannot save - no web client'));\n      }\n      return this.serialize({ contentType: contentType }).then(function (graph) {\n        return _this5.webClient.put(aclUrl, graph, contentType);\n      });\n    }\n\n    /**\n     * Serializes this permission set (and all its Authorizations) to a string RDF\n     * representation (Turtle by default).\n     * Note: invalid authorizations (ones that don't have at least one agent/group,\n     * at least one resourceUrl and at least one access mode) do not get serialized,\n     * and are instead skipped.\n     * @method serialize\n     * @param [options={}] {Object} Options hashmap\n     * @param [options.contentType='text/turtle'] {string}\n     * @param [options.rdf] {RDF} RDF Library to serialize with\n     * @throws {Error} Rejects with an error if one is encountered during RDF\n     *   serialization.\n     * @return {Promise<String>} Graph serialized to contentType RDF syntax\n     */\n\n  }, {\n    key: 'serialize',\n    value: function serialize() {\n      var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n      var contentType = options.contentType || DEFAULT_CONTENT_TYPE;\n      var rdf = options.rdf || this.rdf;\n      if (!rdf) {\n        return Promise.reject(new Error('Cannot save - no rdf library'));\n      }\n      var graph = this.buildGraph(rdf);\n      var target = null;\n      var base = null;\n      return new Promise(function (resolve, reject) {\n        rdf.serialize(target, graph, base, contentType, function (err, result) {\n          if (err) {\n            return reject(err);\n          }\n          if (!result) {\n            return reject(new Error('Error serializing the graph to ' + contentType));\n          }\n          resolve(result);\n        });\n      });\n    }\n  }, {\n    key: 'count',\n    get: function get() {\n      return Object.keys(this.authorizations).length;\n    }\n  }]);\n\n  return PermissionSet;\n}();\n\n/**\n * Returns the corresponding ACL uri, for a given resource.\n * This is the default template for the `aclUrlFor()` method that's used by\n * PermissionSet instances, unless it's overridden in options.\n * @param resourceUri {String}\n * @return {String} ACL uri\n */\n\n\nfunction defaultAclUrlFor(resourceUri) {\n  if (defaultIsAcl(resourceUri)) {\n    return resourceUri; // .acl resources are their own ACLs\n  } else {\n    return resourceUri + DEFAULT_ACL_SUFFIX;\n  }\n}\n\n/**\n * Tests whether a given uri is for an ACL resource.\n * This is the default template for the `isAcl()` method that's used by\n * PermissionSet instances, unless it's overridden in options.\n * @method defaultIsAcl\n * @param uri {String}\n * @return {Boolean}\n */\nfunction defaultIsAcl(uri) {\n  return uri.endsWith(DEFAULT_ACL_SUFFIX);\n}\n\n/**\n * Returns whether or not a given agent webId is actually a `mailto:` link.\n * Standalone helper function.\n * @param agent {String|Statement} URL string (or RDF `acl:agent` triple)\n * @return {Boolean}\n */\nfunction isMailTo(agent) {\n  if (typeof agent === 'string') {\n    return agent.startsWith('mailto:');\n  } else {\n    return agent.object.value.startsWith('mailto:');\n  }\n}\n\nPermissionSet.RESOURCE = RESOURCE;\nPermissionSet.CONTAINER = CONTAINER;\nmodule.exports = PermissionSet;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/solid-permissions/lib/permission-set.js\n// module id = 165\n// module chunks = 0","'use strict';\n/**\n * Models a single Authorization, as part of a PermissionSet.\n * @see https://github.com/solid/web-access-control-spec for details.\n * @module authorization\n */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar vocab = require('solid-namespace');\n\nvar _require = require('./modes');\n\nvar acl = _require.acl;\n\n/**\n * Returns a set of convenience constants, for use with `addPermission()` etc.\n * Exported as `Authorization.acl`.\n */\n\n/**\n * Models an individual authorization object, for a single resource and for\n * a single webId (either agent or agentClass). See the comments at the top\n * of the PermissionSet module for design assumptions.\n * Low-level, not really meant to be instantiated directly. Use\n * `permissionSet.addPermission()` instead.\n * @class Authorization\n */\n\nvar Authorization = function () {\n  /**\n   * @param resourceUrl {String} URL of the resource (`acl:accessTo`) for which\n   *   this authorization is intended.\n   * @param [inherited] {Boolean} Should this authorization be inherited (contain\n   *   `acl:default`). Used for container ACLs. Defaults to null/false.\n   * @constructor\n   */\n  function Authorization(resourceUrl, inherited) {\n    _classCallCheck(this, Authorization);\n\n    /**\n     * Hashmap of all of the access modes (`acl:Write` etc) granted to an agent\n     * or group in this authorization. Modified via `addMode()` and `removeMode()`\n     * @property accessModes\n     * @type {Object}\n     */\n    this.accessModes = {};\n    /**\n     * Type of authorization, either for a specific resource ('accessTo'),\n     * or to be inherited by all downstream resources ('default')\n     * @property accessType\n     * @type {String} Either 'accessTo' or 'default'\n     */\n    this.accessType = inherited ? acl.DEFAULT : acl.ACCESS_TO;\n    /**\n     * URL of an agent's WebID (`acl:agent`). Inside an authorization, mutually\n     * exclusive with the `group` property. Set via `setAgent()`.\n     * @property agent\n     * @type {String}\n     */\n    this.agent = null;\n    /**\n     * URL of a group resource (`acl:agentClass`). Inside an authorization,\n     * mutually exclusive with the `agent` property. Set via `setGroup()`.\n     * @property group\n     * @type {String}\n     */\n    this.group = null;\n    /**\n     * Does this authorization apply to the contents of a container?\n     * (`acl:default`). Not used with non-container resources.\n     * @property inherited\n     * @type {Boolean}\n     */\n    this.inherited = inherited;\n    /**\n     * Stores the `mailto:` aliases for a given agent. Semi-unofficial\n     * functionality, used to store a user's email in the root storage .acl,\n     * to use for account recovery etc.\n     * @property mailTo\n     * @type {Array<String>}\n     */\n    this.mailTo = [];\n    /**\n     * Hashmap of which origins (http Origin: header) are allowed access to this\n     * resource.\n     * @property originsAllowed\n     * @type {Object}\n     */\n    this.originsAllowed = {};\n    /**\n     * URL of the resource for which this authorization applies. (`acl:accessTo`)\n     * @property resourceUrl\n     * @type {String}\n     */\n    this.resourceUrl = resourceUrl;\n    /**\n     * Should this authorization be serialized? (When writing back to an ACL\n     * resource, for example.) Used for implied (rather than explicit)\n     * authorization, such as ones that are derived from acl:Control statements.\n     * @property virtual\n     * @type {Boolean}\n     */\n    this.virtual = false;\n  }\n\n  /**\n   * Adds a given `mailto:` alias to this authorization.\n   * @method addMailTo\n   * @param agent {String|Statement} Agent URL (or RDF `acl:agent` statement).\n   */\n\n\n  _createClass(Authorization, [{\n    key: 'addMailTo',\n    value: function addMailTo(agent) {\n      if (typeof agent !== 'string') {\n        agent = agent.object.value;\n      }\n      if (agent.startsWith('mailto:')) {\n        agent = agent.split(':')[1];\n      }\n      this.mailTo.push(agent);\n      this.mailTo.sort();\n    }\n\n    /**\n     * Adds one or more access modes (`acl:mode` statements) to this authorization.\n     * @method addMode\n     * @param accessMode {String|Statement|Array<String>|Array<Statement>} One or\n     *   more access modes, each as either a uri, or an RDF statement.\n     * @return {Authorization} Returns self, chainable.\n     */\n\n  }, {\n    key: 'addMode',\n    value: function addMode(accessMode) {\n      var _this = this;\n\n      if (Array.isArray(accessMode)) {\n        accessMode.forEach(function (ea) {\n          _this.addModeSingle(ea);\n        });\n      } else {\n        this.addModeSingle(accessMode);\n      }\n      return this;\n    }\n\n    /**\n     * Adds a single access mode. Internal function, used by `addMode()`.\n     * @method addModeSingle\n     * @private\n     * @param accessMode {String|Statement} Access mode as either a uri, or an RDF\n     *   statement.\n     */\n\n  }, {\n    key: 'addModeSingle',\n    value: function addModeSingle(accessMode) {\n      if (typeof accessMode !== 'string') {\n        accessMode = accessMode.object.value;\n      }\n      this.accessModes[accessMode] = true;\n      return this;\n    }\n\n    /**\n     * Adds one or more allowed origins (`acl:origin` statements) to this\n     * authorization.\n     * @method addOrigin\n     * @param origin {String|Statement|Array<String>|Array<Statement>} One or\n     *   more origins, each as either a uri, or an RDF statement.\n     * @return {Authorization} Returns self, chainable.\n     */\n\n  }, {\n    key: 'addOrigin',\n    value: function addOrigin(origin) {\n      var _this2 = this;\n\n      if (Array.isArray(origin)) {\n        origin.forEach(function (ea) {\n          _this2.addOriginSingle(ea);\n        });\n      } else {\n        this.addOriginSingle(origin);\n      }\n      return this;\n    }\n\n    /**\n     * Adds a single allowed origin. Internal function, used by `addOrigin()`.\n     * @method addOriginSingle\n     * @private\n     * @param origin {String|Statement} Allowed origin as either a uri, or an RDF\n     *   statement.\n     */\n\n  }, {\n    key: 'addOriginSingle',\n    value: function addOriginSingle(origin) {\n      if (typeof origin !== 'string') {\n        origin = origin.object.value;\n      }\n      this.originsAllowed[origin] = true;\n      return this;\n    }\n\n    /**\n     * Returns a list of all access modes for this authorization.\n     * @method allModes\n     * @return {Array<String>}\n     */\n\n  }, {\n    key: 'allModes',\n    value: function allModes() {\n      return Object.keys(this.accessModes);\n    }\n\n    /**\n     * Returns a list of all allowed origins for this authorization.\n     * @method allOrigins\n     * @return {Array<String>}\n     */\n\n  }, {\n    key: 'allOrigins',\n    value: function allOrigins() {\n      return Object.keys(this.originsAllowed);\n    }\n\n    /**\n     * Tests whether this authorization grant the specified access mode\n     * @param accessMode {String|NamedNode} Either a named node for the access\n     *   mode or a string key ('write', 'read' etc) that maps to that mode.\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'allowsMode',\n    value: function allowsMode(accessMode) {\n      // Normalize the access mode\n      accessMode = acl[accessMode.toUpperCase()] || accessMode;\n      if (accessMode === acl.APPEND) {\n        return this.allowsAppend(); // Handle the Append special case\n      }\n      return this.accessModes[accessMode];\n    }\n    /**\n     * Does this authorization grant access to requests coming from given origin?\n     * @method allowsOrigin\n     * @param origin {String}\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'allowsOrigin',\n    value: function allowsOrigin(origin) {\n      return origin in this.originsAllowed;\n    }\n\n    /**\n     * Does this authorization grant `acl:Read` access mode?\n     * @method allowsRead\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'allowsRead',\n    value: function allowsRead() {\n      return this.accessModes[acl.READ];\n    }\n\n    /**\n     * Does this authorization grant `acl:Write` access mode?\n     * @method allowsWrite\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'allowsWrite',\n    value: function allowsWrite() {\n      return this.accessModes[acl.WRITE];\n    }\n\n    /**\n     * Does this authorization grant `acl:Append` access mode?\n     * @method allowsAppend\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'allowsAppend',\n    value: function allowsAppend() {\n      return this.accessModes[acl.APPEND] || this.accessModes[acl.WRITE];\n    }\n\n    /**\n     * Does this authorization grant `acl:Control` access mode?\n     * @method allowsControl\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'allowsControl',\n    value: function allowsControl() {\n      return this.accessModes[acl.CONTROL];\n    }\n\n    /**\n     * Returns a deep copy of this authorization.\n     * @return {Authorization}\n     */\n\n  }, {\n    key: 'clone',\n    value: function clone() {\n      var auth = new Authorization();\n      Object.assign(auth, JSON.parse(JSON.stringify(this)));\n      return auth;\n    }\n\n    /**\n     * Compares this authorization with another one.\n     * Authorizations are equal iff they:\n     *   - Are for the same agent or group\n     *   - Are intended for the same resourceUrl\n     *   - Grant the same access modes\n     *   - Have the same `inherit`/`acl:default` flag\n     *   - Contain the same `mailto:` agent aliases.\n     *   - Has the same allowed origins\n     * @method equals\n     * @param auth {Authorization}\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'equals',\n    value: function equals(auth) {\n      var sameAgent = this.agent === auth.agent;\n      var sameGroup = this.group === auth.group;\n      var sameUrl = this.resourceUrl === auth.resourceUrl;\n      var myModeKeys = Object.keys(this.accessModes);\n      var authModeKeys = Object.keys(auth.accessModes);\n      var sameNumberModes = myModeKeys.length === authModeKeys.length;\n      var sameInherit = JSON.stringify(this.inherited) === JSON.stringify(auth.inherited);\n      var sameModes = true;\n      myModeKeys.forEach(function (key) {\n        if (!auth.accessModes[key]) {\n          sameModes = false;\n        }\n      });\n      var sameMailTos = JSON.stringify(this.mailTo) === JSON.stringify(auth.mailTo);\n      var sameOrigins = JSON.stringify(this.originsAllowed) === JSON.stringify(auth.originsAllowed);\n      return sameAgent && sameGroup && sameUrl && sameNumberModes && sameModes && sameInherit && sameMailTos && sameOrigins;\n    }\n\n    /**\n     * Returns a hashed combination of agent/group webId and resourceUrl. Used\n     * internally as a key to store this authorization in a PermissionSet.\n     * @method hashFragment\n     * @private\n     * @throws {Error} Errors if either the webId or the resourceUrl are not set.\n     * @return {String} hash({webId}-{resourceUrl})\n     */\n\n  }, {\n    key: 'hashFragment',\n    value: function hashFragment() {\n      if (!this.webId || !this.resourceUrl) {\n        throw new Error('Cannot call hashFragment() on an incomplete authorization');\n      }\n      var hashFragment = hashFragmentFor(this.webId(), this.resourceUrl, this.accessType);\n      return hashFragment;\n    }\n\n    /**\n     * Returns whether or not this authorization is for an agent (vs a group).\n     * @method isAgent\n     * @return {Boolean} Truthy value if agent is set\n     */\n\n  }, {\n    key: 'isAgent',\n    value: function isAgent() {\n      return this.agent;\n    }\n\n    /**\n     * Returns whether or not this authorization is empty (that is, whether it has\n     * any access modes like Read, Write, etc, set on it)\n     * @method isEmpty\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isEmpty',\n    value: function isEmpty() {\n      return Object.keys(this.accessModes).length === 0;\n    }\n\n    /**\n     * Is this authorization intended for the foaf:Agent group (that is, everyone)?\n     * @method isPublic\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isPublic',\n    value: function isPublic() {\n      return this.group === acl.EVERYONE;\n    }\n\n    /**\n     * Returns whether or not this authorization is for a group (vs an agent).\n     * @method isGroup\n     * @return {Boolean} Truthy value if group is set\n     */\n\n  }, {\n    key: 'isGroup',\n    value: function isGroup() {\n      return this.group;\n    }\n\n    /**\n     * Returns whether this authorization is for a container and should be inherited\n     * (that is, contain `acl:default`).\n     * This is a helper function (instead of the raw attribute) to match the rest\n     * of the api.\n     * @method isInherited\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isInherited',\n    value: function isInherited() {\n      return this.inherited;\n    }\n\n    /**\n     * Returns whether this authorization is valid (ready to be serialized into\n     * an RDF graph ACL resource). This requires all three of the following:\n     *   1. Either an agent or an agentClass/group (returned by `webId()`)\n     *   2. A resource URL (`acl:accessTo`)\n     *   3. At least one access mode (read, write, etc) (returned by `isEmpty()`)\n     * @method isValid\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isValid',\n    value: function isValid() {\n      return this.webId() && this.resourceUrl && !this.isEmpty();\n    }\n\n    /**\n     * Merges the access modes of a given authorization with the access modes of\n     * this one (Set union).\n     * @method mergeWith\n     * @param auth\n     * @throws {Error} Error if the other authorization is for a different webId\n     *   or resourceUrl (`acl:accessTo`)\n     */\n\n  }, {\n    key: 'mergeWith',\n    value: function mergeWith(auth) {\n      if (this.hashFragment() !== auth.hashFragment()) {\n        throw new Error('Cannot merge authorizations with different agent id or resource url (accessTo)');\n      }\n      for (var accessMode in auth.accessModes) {\n        this.addMode(accessMode);\n      }\n    }\n\n    /**\n     * Returns an array of RDF statements representing this authorization.\n     * Used by `PermissionSet.serialize()`.\n     * @method rdfStatements\n     * @return {Array<Statement>} List of RDF statements representing this Auth,\n     *   or an empty array if this authorization is invalid.\n     */\n\n  }, {\n    key: 'rdfStatements',\n    value: function rdfStatements(rdf) {\n      // Make sure the authorization has at least one agent/group and `accessTo`\n      if (!this.webId() || !this.resourceUrl) {\n        return []; // This Authorization is invalid, return empty array\n      }\n      // Virtual / implied authorizations are not serialized\n      if (this.virtual) {\n        return [];\n      }\n      var statement;\n      var fragment = rdf.namedNode('#' + this.hashFragment());\n      var ns = vocab(rdf);\n      var statements = [rdf.triple(fragment, ns.rdf('type'), ns.acl('Authorization'))];\n      if (this.agent) {\n        statement = rdf.triple(fragment, ns.acl('agent'), rdf.namedNode(this.agent));\n        statements.push(statement);\n      }\n      if (this.mailTo.length > 0) {\n        this.mailTo.forEach(function (agentMailto) {\n          statement = rdf.triple(fragment, ns.acl('agent'), rdf.namedNode('mailto:' + agentMailto));\n          statements.push(statement);\n        });\n      }\n      if (this.group) {\n        statement = rdf.triple(fragment, ns.acl('agentClass'), rdf.namedNode(this.group));\n        statements.push(statement);\n      }\n      statement = rdf.triple(fragment, ns.acl('accessTo'), rdf.namedNode(this.resourceUrl));\n      statements.push(statement);\n      var modes = Object.keys(this.accessModes);\n      modes.forEach(function (accessMode) {\n        statement = rdf.triple(fragment, ns.acl('mode'), rdf.namedNode(accessMode));\n        statements.push(statement);\n      });\n      if (this.inherited) {\n        statement = rdf.triple(fragment, ns.acl('defaultForNew'), rdf.namedNode(this.resourceUrl));\n        statements.push(statement);\n      }\n      this.allOrigins().forEach(function (origin) {\n        statement = rdf.triple(fragment, ns.acl('origin'), rdf.namedNode(origin));\n        statements.push(statement);\n      });\n      return statements;\n    }\n\n    /**\n     * Removes one or more access modes from this authorization.\n     * @method removeMode\n     * @param accessMode {String|Statement|Array<String>|Array<Statement>} URL\n     *   representation of the access mode, or an RDF `acl:mode` triple.\n     * @returns {removeMode}\n     */\n\n  }, {\n    key: 'removeMode',\n    value: function removeMode(accessMode) {\n      var _this3 = this;\n\n      if (Array.isArray(accessMode)) {\n        accessMode.forEach(function (ea) {\n          _this3.removeModeSingle(ea);\n        });\n      } else {\n        this.removeModeSingle(accessMode);\n      }\n      return this;\n    }\n\n    /**\n     * Removes a single access mode from this authorization. Internal use only\n     * (used by `removeMode()`).\n     * @method removeModeSingle\n     * @private\n     * @param accessMode {String|Statement} URI or RDF statement\n     */\n\n  }, {\n    key: 'removeModeSingle',\n    value: function removeModeSingle(accessMode) {\n      if (typeof accessMode !== 'string') {\n        accessMode = accessMode.object.value;\n      }\n      delete this.accessModes[accessMode];\n    }\n\n    /**\n     * Removes one or more allowed origins from this authorization.\n     * @method removeOrigin\n     * @param origin {String|Statement|Array<String>|Array<Statement>} URL\n     *   representation of the access mode, or an RDF `acl:mode` triple.\n     * @returns {removeMode}\n     */\n\n  }, {\n    key: 'removeOrigin',\n    value: function removeOrigin(accessMode) {\n      var _this4 = this;\n\n      if (Array.isArray(accessMode)) {\n        accessMode.forEach(function (ea) {\n          _this4.removeOriginSingle(ea);\n        });\n      } else {\n        this.removeOriginSingle(accessMode);\n      }\n      return this;\n    }\n\n    /**\n     * Removes a single allowed origin from this authorization. Internal use only\n     * (used by `removeOrigin()`).\n     * @method removeOriginSingle\n     * @private\n     * @param origin {String|Statement} URI or RDF statement\n     */\n\n  }, {\n    key: 'removeOriginSingle',\n    value: function removeOriginSingle(origin) {\n      if (typeof origin !== 'string') {\n        origin = origin.object.value;\n      }\n      delete this.originsAllowed[origin];\n    }\n\n    /**\n     * Sets the agent WebID for this authorization. Implemented as `setAgent()`\n     * setter method to enforce mutual exclusivity with `group` property, until\n     * ES6 setter methods become available.\n     * @method setAgent\n     * @param agent {String|Quad} Agent URL (or `acl:agent` RDF triple).\n     */\n\n  }, {\n    key: 'setAgent',\n    value: function setAgent(agent) {\n      if (typeof agent !== 'string') {\n        // This is an RDF statement\n        agent = agent.object.value;\n      }\n      if (agent === acl.EVERYONE) {\n        this.setPublic();\n      } else if (this.group) {\n        throw new Error('Cannot set agent, authorization already has a group set');\n      }\n      if (agent.startsWith('mailto:')) {\n        this.addMailTo(agent);\n      } else {\n        this.agent = agent;\n      }\n    }\n\n    /**\n     * Sets the group WebID for this authorization. Implemented as `setGroup()`\n     * setter method to enforce mutual exclusivity with `agent` property, until\n     * ES6 setter methods become available.\n     * @method setGroup\n     * @param agentClass {String|Statement} Group URL (or `acl:agentClass` RDF\n     *   triple).\n     */\n\n  }, {\n    key: 'setGroup',\n    value: function setGroup(agentClass) {\n      if (typeof agentClass !== 'string') {\n        // This is an RDF statement\n        agentClass = agentClass.object.value;\n      }\n      if (this.agent) {\n        throw new Error('Cannot set group, authorization already has an agent set');\n      }\n      this.group = agentClass;\n    }\n\n    /**\n     * Sets the authorization's group to `foaf:Agent`. Convenience method.\n     * @method setPublic\n     */\n\n  }, {\n    key: 'setPublic',\n    value: function setPublic() {\n      this.setGroup(acl.EVERYONE);\n    }\n\n    /**\n     * Returns the agent or group's WebID for this authorization.\n     * @method webId\n     * @return {String}\n     */\n\n  }, {\n    key: 'webId',\n    value: function webId() {\n      return this.agent || this.group;\n    }\n  }]);\n\n  return Authorization;\n}();\n// --- Standalone (non-instance) functions --\n/**\n * Utility method that creates a hash fragment key for this authorization.\n * Used with graph serialization to RDF, and as a key to store authorizations\n * in a PermissionSet. Exported (mainly for use in PermissionSet).\n * @method hashFragmentFor\n * @param webId {String} Agent or group web id\n * @param resourceUrl {String} Resource or container URL for this authorization\n * @param [authType='accessTo'] {String} Either 'accessTo' or 'default'\n * @return {String}\n */\n\n\nfunction hashFragmentFor(webId, resourceUrl) {\n  var authType = arguments.length <= 2 || arguments[2] === undefined ? acl.ACCESS_TO : arguments[2];\n\n  var hashKey = webId + '-' + resourceUrl + '-' + authType;\n  return hashKey;\n}\n\nAuthorization.hashFragmentFor = hashFragmentFor;\n\nmodule.exports = Authorization;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/solid-permissions/lib/authorization.js\n// module id = 166\n// module chunks = 0","'use strict';\n/**\n * Exports acl-related constants\n * @module modes\n */\n\nvar vocab = require('solid-namespace');\nvar ns = vocab();\n\n// ACL access modes\nvar READ = ns.acl('Read');\nvar WRITE = ns.acl('Write');\nvar APPEND = ns.acl('Append');\nvar CONTROL = ns.acl('Control');\nvar EVERYONE = ns.foaf('Agent');\nvar ALL_MODES = [READ, WRITE, CONTROL];\n\n// ACL-related convenience constants\nvar INHERIT = true;\nvar NOT_INHERIT = !INHERIT;\nvar ACCESS_TO = 'accessTo';\nvar DEFAULT = 'default';\n\nmodule.exports.acl = {\n  ALL_MODES: ALL_MODES,\n  READ: READ,\n  WRITE: WRITE,\n  APPEND: APPEND,\n  CONTROL: CONTROL,\n  EVERYONE: EVERYONE,\n  INHERIT: INHERIT,\n  NOT_INHERIT: NOT_INHERIT,\n  ACCESS_TO: ACCESS_TO,\n  DEFAULT: DEFAULT\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/solid-permissions/lib/modes.js\n// module id = 167\n// module chunks = 0","'use strict'\n/**\n * Provides a simple configuration object for Solid web client and other\n * modules.\n * @module config\n */\nmodule.exports = {\n  /**\n   * Default authentication endpoint\n   */\n  authEndpoint: 'https://yodata.me',\n\n  /**\n   * Default signup endpoints (list of identity providers)\n   */\n  signupEndpoint: 'https://yodata.me/signup',\n\n  /**\n   * Default height of the Signup popup window, in pixels\n   */\n  signupWindowHeight: 600,\n\n  /**\n   * Default width of the Signup popup window, in pixels\n   */\n  signupWindowWidth: 1024\n}\n\n\n\n// WEBPACK FOOTER //\n// ./config.js","'use strict';\n/**\n * Provides miscelaneous meta functions (such as library version)\n * @module meta\n */\n\nvar lib = require('../package');\n\n/**\n * Returns solid-client library version (read from `package.json`)\n * @return {String} Lib version\n */\nmodule.exports.version = function version() {\n  return lib.version;\n};\n\n\n// WEBPACK FOOTER //\n// ./lib/meta.js","module.exports = {\n\t\"name\": \"solid-client\",\n\t\"version\": \"0.23.6\",\n\t\"description\": \"Common library for writing Solid read-write-web applications\",\n\t\"main\": \"./lib/index.js\",\n\t\"files\": [\n\t\t\"config.js\",\n\t\t\"lib\",\n\t\t\"dist\"\n\t],\n\t\"scripts\": {\n\t\t\"build-lib\": \"babel src -d lib\",\n\t\t\"build-full\": \"webpack --progress --config webpack.config.js --output-filename solid-client-full.js\",\n\t\t\"build-with-rdflib\": \"webpack --progress --colors --optimize-minimize --optimize-occurrence-order --optimize-dedupe --config webpack.config.js\",\n\t\t\"build-without-rdflib\": \"webpack --progress --colors --optimize-minimize --optimize-occurrence-order --optimize-dedupe --config webpack-no-rdflib.config.js\",\n\t\t\"build-qunit-resources\": \"npm run clean && mkdir -p dist/resources && npm run build-full && browserify -r ./test/resources/profile-minimal.js:test-minimal-profile -o dist/resources/test-minimal-profile.js && browserify -r ./test/resources/profile-private.js:test-minimal-prefs -o dist/resources/test-minimal-prefs.js\",\n\t\t\"build\": \"npm run clean && mkdir dist && npm run build-lib && npm run build-with-rdflib && npm run build-without-rdflib\",\n\t\t\"clean\": \"rm -rf dist/\",\n\t\t\"standard\": \"standard src/*\",\n\t\t\"tape\": \"tape test/unit/*.js\",\n\t\t\"test\": \"npm run standard && npm run tape\",\n\t\t\"qunit\": \"npm run build-qunit-resources && open test/integration/index.html\",\n\t\t\"preversion\": \"npm test\",\n\t\t\"postversion\": \"git push --follow-tags\",\n\t\t\"prepublish\": \"npm run test && npm run build\"\n\t},\n\t\"babel\": {\n\t\t\"presets\": [\n\t\t\t\"es2015\"\n\t\t]\n\t},\n\t\"repository\": {\n\t\t\"type\": \"git\",\n\t\t\"url\": \"https://github.com/solid/solid-client\"\n\t},\n\t\"keywords\": [\n\t\t\"solid\",\n\t\t\"decentralized\",\n\t\t\"web\",\n\t\t\"rdf\",\n\t\t\"ldp\",\n\t\t\"linked\",\n\t\t\"data\"\n\t],\n\t\"author\": \"Andrei Sambra <andrei@fcns.eu>\",\n\t\"maintainers\": [\n\t\t{\n\t\t\t\"name\": \"Dmitri Zagidulin\",\n\t\t\t\"url\": \"https://github.com/dmitrizagidulin/\"\n\t\t}\n\t],\n\t\"license\": \"MIT\",\n\t\"bugs\": {\n\t\t\"url\": \"https://github.com/solid/solid-client/issues\"\n\t},\n\t\"homepage\": \"https://github.com/solid/solid-client\",\n\t\"dependencies\": {\n\t\t\"rdflib\": \"^0.13.0\",\n\t\t\"shorthash\": \"0.0.2\",\n\t\t\"solid-auth-oidc\": \"0.0.2\",\n\t\t\"solid-auth-tls\": \"0.0.4\",\n\t\t\"solid-namespace\": \"^0.1.0\",\n\t\t\"solid-permissions\": \"^0.5.1\",\n\t\t\"solid-web-client\": \"git://github.com/solid/solid-web-client.git#dz_oidc\"\n\t},\n\t\"devDependencies\": {\n\t\t\"babel-cli\": \"^6.18.0\",\n\t\t\"babel-loader\": \"^6.2.10\",\n\t\t\"babel-preset-es2015\": \"^6.18.0\",\n\t\t\"json-loader\": \"^0.5.4\",\n\t\t\"nock\": \"^9.0.2\",\n\t\t\"qunit\": \"^0.9.0\",\n\t\t\"sinon\": \"^1.17.6\",\n\t\t\"standard\": \"^5.4.1\",\n\t\t\"tape\": \"^4.4.0\",\n\t\t\"webpack\": \"^1.13.1\"\n\t},\n\t\"standard\": {\n\t\t\"globals\": [\n\t\t\t\"$rdf\",\n\t\t\t\"SolidClient\",\n\t\t\t\"tabulator\",\n\t\t\t\"QUnit\"\n\t\t]\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./package.json\n// module id = 170\n// module chunks = 0","'use strict';\n/**\n * Provides Web API helpers dealing with a user's online / offline status.\n * @module status\n */\n\nmodule.exports.isOnline = isOnline;\nmodule.exports.onOffline = onOffline;\nmodule.exports.onOnline = onOnline;\n\n/**\n * Returns a user's online status (true if user is on line)\n * @method isOnline\n * @static\n * @return {Boolean}\n */\nfunction isOnline() {\n  return window.navigator.onLine;\n}\n\n/**\n * Adds an even listener to trigger when the user goes offline.\n * @method onOffline\n * @static\n * @param callback {Function} Callback to invoke when user goes offline.\n */\nfunction onOffline(callback) {\n  window.addEventListener('offline', callback, false);\n}\n\n/**\n * Adds an even listener to trigger when the user comes online.\n * @method onOnline\n * @static\n * @param callback {Function} Callback to invoke when user comes online\n */\nfunction onOnline(callback) {\n  window.addEventListener('online', callback, false);\n}\n\n\n// WEBPACK FOOTER //\n// ./lib/status.js"],"sourceRoot":""}